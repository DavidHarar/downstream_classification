2024-10-25 05:16 - INFO - Fit the preprocessing pipeline
2024-10-25 05:16 - INFO - Training using device: cuda
2024-10-25 05:16 - INFO - Creating generators
2024-10-25 05:16 - INFO - The model has 651,257 trainable parameters
2024-10-25 05:16 - INFO - * Model:
2024-10-25 05:16 - INFO - * -----------
2024-10-25 05:16 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 05:16 - INFO - * -----------
2024-10-25 05:16 - INFO - Evaluating model based on: rocauc
2024-10-25 05:16 - INFO - Training..

2024-10-25 05:17 - INFO - ---------------------------------------------
2024-10-25 05:17 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 05:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97936
2024-10-25 05:17 - INFO - 	 Train Loss: 0.155
2024-10-25 05:17 - INFO - 	 Val. Loss: 0.081
2024-10-25 05:17 - INFO - 	 ROC-AUC: 0.979
2024-10-25 05:17 - INFO - 	 PR-AUC: 0.795
2024-10-25 05:17 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 05:17 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 05:17 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 05:17 - INFO - 	 Best PR-AUC: 0.795
2024-10-25 05:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 05:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-25 05:17 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 05:17 - INFO - ---------------------------------------------
2024-10-25 05:17 - INFO - ---------------------------------------------
2024-10-25 05:17 - INFO - Epoch: 02 | Time: 0m 30s
2024-10-25 05:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98463
2024-10-25 05:17 - INFO - 	 Train Loss: 0.082
2024-10-25 05:17 - INFO - 	 Val. Loss: 0.069
2024-10-25 05:17 - INFO - 	 ROC-AUC: 0.985
2024-10-25 05:17 - INFO - 	 PR-AUC: 0.870
2024-10-25 05:17 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 05:17 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 05:17 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 05:17 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 05:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 05:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-25 05:17 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 05:17 - INFO - ---------------------------------------------
2024-10-25 05:18 - INFO - ---------------------------------------------
2024-10-25 05:18 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 05:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9859
2024-10-25 05:18 - INFO - 	 Train Loss: 0.071
2024-10-25 05:18 - INFO - 	 Val. Loss: 0.066
2024-10-25 05:18 - INFO - 	 ROC-AUC: 0.986
2024-10-25 05:18 - INFO - 	 PR-AUC: 0.877
2024-10-25 05:18 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:18 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 05:18 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 05:18 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 05:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 05:18 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 05:18 - INFO - ---------------------------------------------
2024-10-25 05:18 - INFO - ---------------------------------------------
2024-10-25 05:18 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 05:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98708
2024-10-25 05:18 - INFO - 	 Train Loss: 0.067
2024-10-25 05:18 - INFO - 	 Val. Loss: 0.063
2024-10-25 05:18 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:18 - INFO - 	 PR-AUC: 0.878
2024-10-25 05:18 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 05:18 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 05:18 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 05:18 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 05:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 05:18 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 05:18 - INFO - ---------------------------------------------
2024-10-25 05:19 - INFO - ---------------------------------------------
2024-10-25 05:19 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 05:19 - INFO - 	 Train Loss: 0.062
2024-10-25 05:19 - INFO - 	 Val. Loss: 0.066
2024-10-25 05:19 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:19 - INFO - 	 PR-AUC: 0.883
2024-10-25 05:19 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 05:19 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 05:19 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 05:19 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 05:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-25 05:19 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 05:19 - INFO - ---------------------------------------------
2024-10-25 05:19 - INFO - ---------------------------------------------
2024-10-25 05:19 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 05:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98871
2024-10-25 05:19 - INFO - 	 Train Loss: 0.060
2024-10-25 05:19 - INFO - 	 Val. Loss: 0.062
2024-10-25 05:19 - INFO - 	 ROC-AUC: 0.989
2024-10-25 05:19 - INFO - 	 PR-AUC: 0.889
2024-10-25 05:19 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 05:19 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 05:19 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:19 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 05:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 05:19 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 05:19 - INFO - ---------------------------------------------
2024-10-25 05:20 - INFO - ---------------------------------------------
2024-10-25 05:20 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 05:20 - INFO - 	 Train Loss: 0.058
2024-10-25 05:20 - INFO - 	 Val. Loss: 0.069
2024-10-25 05:20 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:20 - INFO - 	 PR-AUC: 0.878
2024-10-25 05:20 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:20 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 05:20 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:20 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 05:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 05:20 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 05:20 - INFO - ---------------------------------------------
2024-10-25 05:21 - INFO - ---------------------------------------------
2024-10-25 05:21 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 05:21 - INFO - 	 Train Loss: 0.056
2024-10-25 05:21 - INFO - 	 Val. Loss: 0.060
2024-10-25 05:21 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:21 - INFO - 	 PR-AUC: 0.891
2024-10-25 05:21 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:21 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:21 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:21 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 05:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 05:21 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 05:21 - INFO - ---------------------------------------------
2024-10-25 05:21 - INFO - ---------------------------------------------
2024-10-25 05:21 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 05:21 - INFO - 	 Train Loss: 0.054
2024-10-25 05:21 - INFO - 	 Val. Loss: 0.064
2024-10-25 05:21 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:21 - INFO - 	 PR-AUC: 0.893
2024-10-25 05:21 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:21 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:21 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:21 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 05:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 05:21 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 05:21 - INFO - ---------------------------------------------
2024-10-25 05:22 - INFO - ---------------------------------------------
2024-10-25 05:22 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 05:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98907
2024-10-25 05:22 - INFO - 	 Train Loss: 0.053
2024-10-25 05:22 - INFO - 	 Val. Loss: 0.059
2024-10-25 05:22 - INFO - 	 ROC-AUC: 0.989
2024-10-25 05:22 - INFO - 	 PR-AUC: 0.902
2024-10-25 05:22 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:22 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 05:22 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:22 - INFO - 	 Best PR-AUC: 0.902
2024-10-25 05:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-25 05:22 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 05:22 - INFO - ---------------------------------------------
2024-10-25 05:23 - INFO - Fit the preprocessing pipeline
2024-10-25 05:23 - INFO - Training using device: cuda
2024-10-25 05:23 - INFO - Creating generators
2024-10-25 05:23 - INFO - The model has 651,257 trainable parameters
2024-10-25 05:23 - INFO - * Model:
2024-10-25 05:23 - INFO - * -----------
2024-10-25 05:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 05:23 - INFO - * -----------
2024-10-25 05:23 - INFO - Evaluating model based on: rocauc
2024-10-25 05:23 - INFO - Training..

2024-10-25 05:24 - INFO - ---------------------------------------------
2024-10-25 05:24 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 05:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98014
2024-10-25 05:24 - INFO - 	 Train Loss: 0.155
2024-10-25 05:24 - INFO - 	 Val. Loss: 0.078
2024-10-25 05:24 - INFO - 	 ROC-AUC: 0.980
2024-10-25 05:24 - INFO - 	 PR-AUC: 0.822
2024-10-25 05:24 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 05:24 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 05:24 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 05:24 - INFO - 	 Best PR-AUC: 0.822
2024-10-25 05:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 05:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-25 05:24 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 05:24 - INFO - ---------------------------------------------
2024-10-25 05:24 - INFO - ---------------------------------------------
2024-10-25 05:24 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 05:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98488
2024-10-25 05:24 - INFO - 	 Train Loss: 0.082
2024-10-25 05:24 - INFO - 	 Val. Loss: 0.069
2024-10-25 05:24 - INFO - 	 ROC-AUC: 0.985
2024-10-25 05:24 - INFO - 	 PR-AUC: 0.858
2024-10-25 05:24 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 05:24 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 05:24 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 05:24 - INFO - 	 Best PR-AUC: 0.858
2024-10-25 05:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-25 05:24 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 05:24 - INFO - ---------------------------------------------
2024-10-25 05:25 - INFO - ---------------------------------------------
2024-10-25 05:25 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 05:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98751
2024-10-25 05:25 - INFO - 	 Train Loss: 0.071
2024-10-25 05:25 - INFO - 	 Val. Loss: 0.062
2024-10-25 05:25 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:25 - INFO - 	 PR-AUC: 0.874
2024-10-25 05:25 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 05:25 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 05:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:25 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 05:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 05:25 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 05:25 - INFO - ---------------------------------------------
2024-10-25 05:25 - INFO - ---------------------------------------------
2024-10-25 05:25 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 05:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98773
2024-10-25 05:25 - INFO - 	 Train Loss: 0.066
2024-10-25 05:25 - INFO - 	 Val. Loss: 0.064
2024-10-25 05:25 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:25 - INFO - 	 PR-AUC: 0.888
2024-10-25 05:25 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:25 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 05:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:25 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 05:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-25 05:25 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 05:25 - INFO - ---------------------------------------------
2024-10-25 05:26 - INFO - ---------------------------------------------
2024-10-25 05:26 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 05:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98791
2024-10-25 05:26 - INFO - 	 Train Loss: 0.063
2024-10-25 05:26 - INFO - 	 Val. Loss: 0.059
2024-10-25 05:26 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:26 - INFO - 	 PR-AUC: 0.894
2024-10-25 05:26 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:26 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 05:26 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:26 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 05:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 05:26 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:26 - INFO - ---------------------------------------------
2024-10-25 05:26 - INFO - ---------------------------------------------
2024-10-25 05:26 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 05:26 - INFO - 	 Train Loss: 0.059
2024-10-25 05:26 - INFO - 	 Val. Loss: 0.060
2024-10-25 05:26 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:26 - INFO - 	 PR-AUC: 0.895
2024-10-25 05:26 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:26 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 05:26 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:26 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 05:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 05:26 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:26 - INFO - ---------------------------------------------
2024-10-25 05:27 - INFO - ---------------------------------------------
2024-10-25 05:27 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 05:27 - INFO - 	 Train Loss: 0.057
2024-10-25 05:27 - INFO - 	 Val. Loss: 0.059
2024-10-25 05:27 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:27 - INFO - 	 PR-AUC: 0.890
2024-10-25 05:27 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:27 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 05:27 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:27 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 05:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 05:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:27 - INFO - ---------------------------------------------
2024-10-25 05:27 - INFO - ---------------------------------------------
2024-10-25 05:27 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 05:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98813
2024-10-25 05:27 - INFO - 	 Train Loss: 0.056
2024-10-25 05:27 - INFO - 	 Val. Loss: 0.057
2024-10-25 05:27 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:27 - INFO - 	 PR-AUC: 0.902
2024-10-25 05:27 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 05:27 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 05:27 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:27 - INFO - 	 Best PR-AUC: 0.902
2024-10-25 05:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 05:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-25 05:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:27 - INFO - ---------------------------------------------
2024-10-25 05:28 - INFO - ---------------------------------------------
2024-10-25 05:28 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 05:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98936
2024-10-25 05:28 - INFO - 	 Train Loss: 0.054
2024-10-25 05:28 - INFO - 	 Val. Loss: 0.054
2024-10-25 05:28 - INFO - 	 ROC-AUC: 0.989
2024-10-25 05:28 - INFO - 	 PR-AUC: 0.911
2024-10-25 05:28 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:28 - INFO - 	 Best Val. Loss: 0.054
2024-10-25 05:28 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:28 - INFO - 	 Best PR-AUC: 0.911
2024-10-25 05:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-10-25 05:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:28 - INFO - ---------------------------------------------
2024-10-25 05:28 - INFO - ---------------------------------------------
2024-10-25 05:28 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 05:28 - INFO - 	 Train Loss: 0.053
2024-10-25 05:28 - INFO - 	 Val. Loss: 0.058
2024-10-25 05:28 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:28 - INFO - 	 PR-AUC: 0.900
2024-10-25 05:28 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:28 - INFO - 	 Best Val. Loss: 0.054
2024-10-25 05:28 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:28 - INFO - 	 Best PR-AUC: 0.911
2024-10-25 05:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-10-25 05:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:28 - INFO - ---------------------------------------------
2024-10-25 05:30 - INFO - Fit the preprocessing pipeline
2024-10-25 05:30 - INFO - Training using device: cuda
2024-10-25 05:30 - INFO - Creating generators
2024-10-25 05:30 - INFO - The model has 651,257 trainable parameters
2024-10-25 05:30 - INFO - * Model:
2024-10-25 05:30 - INFO - * -----------
2024-10-25 05:30 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 05:30 - INFO - * -----------
2024-10-25 05:30 - INFO - Evaluating model based on: rocauc
2024-10-25 05:30 - INFO - Training..

2024-10-25 05:30 - INFO - ---------------------------------------------
2024-10-25 05:30 - INFO - Epoch: 01 | Time: 0m 30s
2024-10-25 05:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97781
2024-10-25 05:30 - INFO - 	 Train Loss: 0.156
2024-10-25 05:30 - INFO - 	 Val. Loss: 0.091
2024-10-25 05:30 - INFO - 	 ROC-AUC: 0.978
2024-10-25 05:30 - INFO - 	 PR-AUC: 0.798
2024-10-25 05:30 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 05:30 - INFO - 	 Best Val. Loss: 0.091
2024-10-25 05:30 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 05:30 - INFO - 	 Best PR-AUC: 0.798
2024-10-25 05:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 05:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-10-25 05:30 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 05:30 - INFO - ---------------------------------------------
2024-10-25 05:31 - INFO - ---------------------------------------------
2024-10-25 05:31 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 05:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98421
2024-10-25 05:31 - INFO - 	 Train Loss: 0.081
2024-10-25 05:31 - INFO - 	 Val. Loss: 0.069
2024-10-25 05:31 - INFO - 	 ROC-AUC: 0.984
2024-10-25 05:31 - INFO - 	 PR-AUC: 0.863
2024-10-25 05:31 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 05:31 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 05:31 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 05:31 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 05:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 05:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 05:31 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 05:31 - INFO - ---------------------------------------------
2024-10-25 05:31 - INFO - ---------------------------------------------
2024-10-25 05:31 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 05:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98641
2024-10-25 05:31 - INFO - 	 Train Loss: 0.071
2024-10-25 05:31 - INFO - 	 Val. Loss: 0.067
2024-10-25 05:31 - INFO - 	 ROC-AUC: 0.986
2024-10-25 05:31 - INFO - 	 PR-AUC: 0.871
2024-10-25 05:31 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:31 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 05:31 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 05:31 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 05:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 05:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 05:31 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 05:31 - INFO - ---------------------------------------------
2024-10-25 05:32 - INFO - ---------------------------------------------
2024-10-25 05:32 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 05:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98766
2024-10-25 05:32 - INFO - 	 Train Loss: 0.066
2024-10-25 05:32 - INFO - 	 Val. Loss: 0.063
2024-10-25 05:32 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:32 - INFO - 	 PR-AUC: 0.877
2024-10-25 05:32 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:32 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 05:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:32 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 05:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-25 05:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:32 - INFO - ---------------------------------------------
2024-10-25 05:32 - INFO - ---------------------------------------------
2024-10-25 05:32 - INFO - Epoch: 05 | Time: 0m 30s
2024-10-25 05:32 - INFO - 	 Train Loss: 0.063
2024-10-25 05:32 - INFO - 	 Val. Loss: 0.065
2024-10-25 05:32 - INFO - 	 ROC-AUC: 0.986
2024-10-25 05:32 - INFO - 	 PR-AUC: 0.880
2024-10-25 05:32 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 05:32 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 05:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:32 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 05:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 05:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:32 - INFO - ---------------------------------------------
2024-10-25 05:33 - INFO - ---------------------------------------------
2024-10-25 05:33 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 05:33 - INFO - 	 Train Loss: 0.061
2024-10-25 05:33 - INFO - 	 Val. Loss: 0.063
2024-10-25 05:33 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:33 - INFO - 	 PR-AUC: 0.877
2024-10-25 05:33 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:33 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 05:33 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:33 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 05:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 05:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:33 - INFO - ---------------------------------------------
2024-10-25 05:33 - INFO - ---------------------------------------------
2024-10-25 05:33 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 05:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98851
2024-10-25 05:33 - INFO - 	 Train Loss: 0.058
2024-10-25 05:33 - INFO - 	 Val. Loss: 0.057
2024-10-25 05:33 - INFO - 	 ROC-AUC: 0.989
2024-10-25 05:33 - INFO - 	 PR-AUC: 0.898
2024-10-25 05:33 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 05:33 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 05:33 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:33 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 05:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 05:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-25 05:33 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:33 - INFO - ---------------------------------------------
2024-10-25 05:34 - INFO - ---------------------------------------------
2024-10-25 05:34 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 05:34 - INFO - 	 Train Loss: 0.056
2024-10-25 05:34 - INFO - 	 Val. Loss: 0.059
2024-10-25 05:34 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:34 - INFO - 	 PR-AUC: 0.898
2024-10-25 05:34 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:34 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 05:34 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:34 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 05:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 05:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 05:34 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:34 - INFO - ---------------------------------------------
2024-10-25 05:34 - INFO - ---------------------------------------------
2024-10-25 05:34 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 05:34 - INFO - 	 Train Loss: 0.056
2024-10-25 05:34 - INFO - 	 Val. Loss: 0.058
2024-10-25 05:34 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:34 - INFO - 	 PR-AUC: 0.897
2024-10-25 05:34 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 05:34 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 05:34 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:34 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 05:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 05:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 05:34 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:34 - INFO - ---------------------------------------------
2024-10-25 05:35 - INFO - ---------------------------------------------
2024-10-25 05:35 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 05:35 - INFO - 	 Train Loss: 0.054
2024-10-25 05:35 - INFO - 	 Val. Loss: 0.058
2024-10-25 05:35 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:35 - INFO - 	 PR-AUC: 0.901
2024-10-25 05:35 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:35 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 05:35 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:35 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 05:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 05:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-25 05:35 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:35 - INFO - ---------------------------------------------
2024-10-25 05:36 - INFO - Fit the preprocessing pipeline
2024-10-25 05:36 - INFO - Training using device: cuda
2024-10-25 05:36 - INFO - Creating generators
2024-10-25 05:36 - INFO - The model has 651,257 trainable parameters
2024-10-25 05:36 - INFO - * Model:
2024-10-25 05:36 - INFO - * -----------
2024-10-25 05:36 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 05:36 - INFO - * -----------
2024-10-25 05:36 - INFO - Evaluating model based on: rocauc
2024-10-25 05:36 - INFO - Training..

2024-10-25 05:37 - INFO - ---------------------------------------------
2024-10-25 05:37 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 05:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98104
2024-10-25 05:37 - INFO - 	 Train Loss: 0.146
2024-10-25 05:37 - INFO - 	 Val. Loss: 0.077
2024-10-25 05:37 - INFO - 	 ROC-AUC: 0.981
2024-10-25 05:37 - INFO - 	 PR-AUC: 0.809
2024-10-25 05:37 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 05:37 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 05:37 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 05:37 - INFO - 	 Best PR-AUC: 0.809
2024-10-25 05:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 05:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-25 05:37 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 05:37 - INFO - ---------------------------------------------
2024-10-25 05:37 - INFO - ---------------------------------------------
2024-10-25 05:37 - INFO - Epoch: 02 | Time: 0m 30s
2024-10-25 05:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98382
2024-10-25 05:37 - INFO - 	 Train Loss: 0.080
2024-10-25 05:37 - INFO - 	 Val. Loss: 0.077
2024-10-25 05:37 - INFO - 	 ROC-AUC: 0.984
2024-10-25 05:37 - INFO - 	 PR-AUC: 0.854
2024-10-25 05:37 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 05:37 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 05:37 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 05:37 - INFO - 	 Best PR-AUC: 0.854
2024-10-25 05:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 05:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 05:37 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 05:37 - INFO - ---------------------------------------------
2024-10-25 05:38 - INFO - ---------------------------------------------
2024-10-25 05:38 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 05:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98611
2024-10-25 05:38 - INFO - 	 Train Loss: 0.072
2024-10-25 05:38 - INFO - 	 Val. Loss: 0.067
2024-10-25 05:38 - INFO - 	 ROC-AUC: 0.986
2024-10-25 05:38 - INFO - 	 PR-AUC: 0.868
2024-10-25 05:38 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 05:38 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 05:38 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 05:38 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 05:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 05:38 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 05:38 - INFO - ---------------------------------------------
2024-10-25 05:38 - INFO - ---------------------------------------------
2024-10-25 05:38 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 05:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98674
2024-10-25 05:38 - INFO - 	 Train Loss: 0.066
2024-10-25 05:38 - INFO - 	 Val. Loss: 0.064
2024-10-25 05:38 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:38 - INFO - 	 PR-AUC: 0.875
2024-10-25 05:38 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:38 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 05:38 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 05:38 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 05:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 05:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:38 - INFO - ---------------------------------------------
2024-10-25 05:39 - INFO - ---------------------------------------------
2024-10-25 05:39 - INFO - Epoch: 05 | Time: 0m 30s
2024-10-25 05:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98794
2024-10-25 05:39 - INFO - 	 Train Loss: 0.063
2024-10-25 05:39 - INFO - 	 Val. Loss: 0.060
2024-10-25 05:39 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:39 - INFO - 	 PR-AUC: 0.882
2024-10-25 05:39 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:39 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:39 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 05:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-25 05:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:39 - INFO - ---------------------------------------------
2024-10-25 05:39 - INFO - ---------------------------------------------
2024-10-25 05:39 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 05:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98804
2024-10-25 05:39 - INFO - 	 Train Loss: 0.061
2024-10-25 05:39 - INFO - 	 Val. Loss: 0.067
2024-10-25 05:39 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:39 - INFO - 	 PR-AUC: 0.886
2024-10-25 05:39 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:39 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:39 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 05:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 05:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:39 - INFO - ---------------------------------------------
2024-10-25 05:40 - INFO - ---------------------------------------------
2024-10-25 05:40 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 05:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98872
2024-10-25 05:40 - INFO - 	 Train Loss: 0.058
2024-10-25 05:40 - INFO - 	 Val. Loss: 0.059
2024-10-25 05:40 - INFO - 	 ROC-AUC: 0.989
2024-10-25 05:40 - INFO - 	 PR-AUC: 0.892
2024-10-25 05:40 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 05:40 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 05:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:40 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 05:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 05:40 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 05:40 - INFO - ---------------------------------------------
2024-10-25 05:41 - INFO - ---------------------------------------------
2024-10-25 05:41 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 05:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98904
2024-10-25 05:41 - INFO - 	 Train Loss: 0.055
2024-10-25 05:41 - INFO - 	 Val. Loss: 0.057
2024-10-25 05:41 - INFO - 	 ROC-AUC: 0.989
2024-10-25 05:41 - INFO - 	 PR-AUC: 0.894
2024-10-25 05:41 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:41 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 05:41 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:41 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 05:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 05:41 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 05:41 - INFO - ---------------------------------------------
2024-10-25 05:41 - INFO - ---------------------------------------------
2024-10-25 05:41 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 05:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98928
2024-10-25 05:41 - INFO - 	 Train Loss: 0.054
2024-10-25 05:41 - INFO - 	 Val. Loss: 0.057
2024-10-25 05:41 - INFO - 	 ROC-AUC: 0.989
2024-10-25 05:41 - INFO - 	 PR-AUC: 0.898
2024-10-25 05:41 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 05:41 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 05:41 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:41 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 05:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-25 05:41 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 05:41 - INFO - ---------------------------------------------
2024-10-25 05:42 - INFO - ---------------------------------------------
2024-10-25 05:42 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 05:42 - INFO - 	 Train Loss: 0.053
2024-10-25 05:42 - INFO - 	 Val. Loss: 0.056
2024-10-25 05:42 - INFO - 	 ROC-AUC: 0.989
2024-10-25 05:42 - INFO - 	 PR-AUC: 0.896
2024-10-25 05:42 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 05:42 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 05:42 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:42 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 05:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-25 05:42 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 05:42 - INFO - ---------------------------------------------
2024-10-25 05:43 - INFO - Fit the preprocessing pipeline
2024-10-25 05:43 - INFO - Training using device: cuda
2024-10-25 05:43 - INFO - Creating generators
2024-10-25 05:43 - INFO - The model has 651,257 trainable parameters
2024-10-25 05:43 - INFO - * Model:
2024-10-25 05:43 - INFO - * -----------
2024-10-25 05:43 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 05:43 - INFO - * -----------
2024-10-25 05:43 - INFO - Evaluating model based on: rocauc
2024-10-25 05:43 - INFO - Training..

2024-10-25 05:44 - INFO - ---------------------------------------------
2024-10-25 05:44 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 05:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98124
2024-10-25 05:44 - INFO - 	 Train Loss: 0.157
2024-10-25 05:44 - INFO - 	 Val. Loss: 0.077
2024-10-25 05:44 - INFO - 	 ROC-AUC: 0.981
2024-10-25 05:44 - INFO - 	 PR-AUC: 0.844
2024-10-25 05:44 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 05:44 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 05:44 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 05:44 - INFO - 	 Best PR-AUC: 0.844
2024-10-25 05:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 05:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-10-25 05:44 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 05:44 - INFO - ---------------------------------------------
2024-10-25 05:44 - INFO - ---------------------------------------------
2024-10-25 05:44 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 05:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9858
2024-10-25 05:44 - INFO - 	 Train Loss: 0.082
2024-10-25 05:44 - INFO - 	 Val. Loss: 0.065
2024-10-25 05:44 - INFO - 	 ROC-AUC: 0.986
2024-10-25 05:44 - INFO - 	 PR-AUC: 0.872
2024-10-25 05:44 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 05:44 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 05:44 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 05:44 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 05:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 05:44 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 05:44 - INFO - ---------------------------------------------
2024-10-25 05:45 - INFO - ---------------------------------------------
2024-10-25 05:45 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 05:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98622
2024-10-25 05:45 - INFO - 	 Train Loss: 0.071
2024-10-25 05:45 - INFO - 	 Val. Loss: 0.065
2024-10-25 05:45 - INFO - 	 ROC-AUC: 0.986
2024-10-25 05:45 - INFO - 	 PR-AUC: 0.879
2024-10-25 05:45 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 05:45 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 05:45 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 05:45 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 05:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 05:45 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 05:45 - INFO - ---------------------------------------------
2024-10-25 05:45 - INFO - ---------------------------------------------
2024-10-25 05:45 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 05:45 - INFO - 	 Train Loss: 0.065
2024-10-25 05:45 - INFO - 	 Val. Loss: 0.064
2024-10-25 05:45 - INFO - 	 ROC-AUC: 0.986
2024-10-25 05:45 - INFO - 	 PR-AUC: 0.877
2024-10-25 05:45 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 05:45 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 05:45 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 05:45 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 05:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 05:45 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 05:45 - INFO - ---------------------------------------------
2024-10-25 05:46 - INFO - ---------------------------------------------
2024-10-25 05:46 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 05:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98785
2024-10-25 05:46 - INFO - 	 Train Loss: 0.062
2024-10-25 05:46 - INFO - 	 Val. Loss: 0.063
2024-10-25 05:46 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:46 - INFO - 	 PR-AUC: 0.891
2024-10-25 05:46 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 05:46 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 05:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:46 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 05:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 05:46 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 05:46 - INFO - ---------------------------------------------
2024-10-25 05:46 - INFO - ---------------------------------------------
2024-10-25 05:46 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 05:46 - INFO - 	 Train Loss: 0.059
2024-10-25 05:46 - INFO - 	 Val. Loss: 0.061
2024-10-25 05:46 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:46 - INFO - 	 PR-AUC: 0.884
2024-10-25 05:46 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 05:46 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 05:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:46 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 05:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 05:46 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 05:46 - INFO - ---------------------------------------------
2024-10-25 05:47 - INFO - ---------------------------------------------
2024-10-25 05:47 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 05:47 - INFO - 	 Train Loss: 0.058
2024-10-25 05:47 - INFO - 	 Val. Loss: 0.064
2024-10-25 05:47 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:47 - INFO - 	 PR-AUC: 0.882
2024-10-25 05:47 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 05:47 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 05:47 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:47 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 05:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 05:47 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 05:47 - INFO - ---------------------------------------------
2024-10-25 05:47 - INFO - ---------------------------------------------
2024-10-25 05:47 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 05:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98867
2024-10-25 05:47 - INFO - 	 Train Loss: 0.056
2024-10-25 05:47 - INFO - 	 Val. Loss: 0.060
2024-10-25 05:47 - INFO - 	 ROC-AUC: 0.989
2024-10-25 05:47 - INFO - 	 PR-AUC: 0.892
2024-10-25 05:47 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 05:47 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:47 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:47 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 05:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 05:47 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:47 - INFO - ---------------------------------------------
2024-10-25 05:48 - INFO - ---------------------------------------------
2024-10-25 05:48 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 05:48 - INFO - 	 Train Loss: 0.053
2024-10-25 05:48 - INFO - 	 Val. Loss: 0.062
2024-10-25 05:48 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:48 - INFO - 	 PR-AUC: 0.889
2024-10-25 05:48 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:48 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:48 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 05:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 05:48 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:48 - INFO - ---------------------------------------------
2024-10-25 05:48 - INFO - ---------------------------------------------
2024-10-25 05:48 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 05:48 - INFO - 	 Train Loss: 0.052
2024-10-25 05:48 - INFO - 	 Val. Loss: 0.062
2024-10-25 05:48 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:48 - INFO - 	 PR-AUC: 0.886
2024-10-25 05:48 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 05:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:48 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 05:48 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 05:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 05:48 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:48 - INFO - ---------------------------------------------
2024-10-25 05:50 - INFO - Fit the preprocessing pipeline
2024-10-25 05:50 - INFO - Training using device: cuda
2024-10-25 05:50 - INFO - Creating generators
2024-10-25 05:50 - INFO - The model has 651,257 trainable parameters
2024-10-25 05:50 - INFO - * Model:
2024-10-25 05:50 - INFO - * -----------
2024-10-25 05:50 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 05:50 - INFO - * -----------
2024-10-25 05:50 - INFO - Evaluating model based on: rocauc
2024-10-25 05:50 - INFO - Training..

2024-10-25 05:50 - INFO - ---------------------------------------------
2024-10-25 05:50 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 05:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97409
2024-10-25 05:50 - INFO - 	 Train Loss: 0.155
2024-10-25 05:50 - INFO - 	 Val. Loss: 0.096
2024-10-25 05:50 - INFO - 	 ROC-AUC: 0.974
2024-10-25 05:50 - INFO - 	 PR-AUC: 0.776
2024-10-25 05:50 - INFO - 	 Recall for 0.4 precision: 0.956
2024-10-25 05:50 - INFO - 	 Best Val. Loss: 0.096
2024-10-25 05:50 - INFO - 	 Best ROC-AUC: 0.974
2024-10-25 05:50 - INFO - 	 Best PR-AUC: 0.776
2024-10-25 05:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 05:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-10-25 05:50 - INFO - 	 Best Recall for 0.4 precision: 0.956
2024-10-25 05:50 - INFO - ---------------------------------------------
2024-10-25 05:51 - INFO - ---------------------------------------------
2024-10-25 05:51 - INFO - Epoch: 02 | Time: 0m 30s
2024-10-25 05:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98249
2024-10-25 05:51 - INFO - 	 Train Loss: 0.082
2024-10-25 05:51 - INFO - 	 Val. Loss: 0.076
2024-10-25 05:51 - INFO - 	 ROC-AUC: 0.982
2024-10-25 05:51 - INFO - 	 PR-AUC: 0.840
2024-10-25 05:51 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 05:51 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 05:51 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 05:51 - INFO - 	 Best PR-AUC: 0.840
2024-10-25 05:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 05:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-25 05:51 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 05:51 - INFO - ---------------------------------------------
2024-10-25 05:51 - INFO - ---------------------------------------------
2024-10-25 05:51 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 05:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98539
2024-10-25 05:51 - INFO - 	 Train Loss: 0.074
2024-10-25 05:51 - INFO - 	 Val. Loss: 0.066
2024-10-25 05:51 - INFO - 	 ROC-AUC: 0.985
2024-10-25 05:51 - INFO - 	 PR-AUC: 0.871
2024-10-25 05:51 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 05:51 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 05:51 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 05:51 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 05:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 05:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 05:51 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 05:51 - INFO - ---------------------------------------------
2024-10-25 05:52 - INFO - ---------------------------------------------
2024-10-25 05:52 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 05:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98683
2024-10-25 05:52 - INFO - 	 Train Loss: 0.068
2024-10-25 05:52 - INFO - 	 Val. Loss: 0.063
2024-10-25 05:52 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:52 - INFO - 	 PR-AUC: 0.878
2024-10-25 05:52 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:52 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 05:52 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 05:52 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 05:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 05:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 05:52 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:52 - INFO - ---------------------------------------------
2024-10-25 05:52 - INFO - ---------------------------------------------
2024-10-25 05:52 - INFO - Epoch: 05 | Time: 0m 30s
2024-10-25 05:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98763
2024-10-25 05:52 - INFO - 	 Train Loss: 0.064
2024-10-25 05:52 - INFO - 	 Val. Loss: 0.060
2024-10-25 05:52 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:52 - INFO - 	 PR-AUC: 0.886
2024-10-25 05:52 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 05:52 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:52 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 05:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 05:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 05:52 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:52 - INFO - ---------------------------------------------
2024-10-25 05:53 - INFO - ---------------------------------------------
2024-10-25 05:53 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 05:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98783
2024-10-25 05:53 - INFO - 	 Train Loss: 0.061
2024-10-25 05:53 - INFO - 	 Val. Loss: 0.059
2024-10-25 05:53 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:53 - INFO - 	 PR-AUC: 0.886
2024-10-25 05:53 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 05:53 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 05:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:53 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 05:53 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 05:53 - INFO - ---------------------------------------------
2024-10-25 05:53 - INFO - ---------------------------------------------
2024-10-25 05:53 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 05:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98806
2024-10-25 05:53 - INFO - 	 Train Loss: 0.059
2024-10-25 05:53 - INFO - 	 Val. Loss: 0.059
2024-10-25 05:53 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:53 - INFO - 	 PR-AUC: 0.890
2024-10-25 05:53 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 05:53 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 05:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:53 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 05:53 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:53 - INFO - ---------------------------------------------
2024-10-25 05:54 - INFO - ---------------------------------------------
2024-10-25 05:54 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 05:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98831
2024-10-25 05:54 - INFO - 	 Train Loss: 0.056
2024-10-25 05:54 - INFO - 	 Val. Loss: 0.057
2024-10-25 05:54 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:54 - INFO - 	 PR-AUC: 0.898
2024-10-25 05:54 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:54 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 05:54 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:54 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 05:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 05:54 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:54 - INFO - ---------------------------------------------
2024-10-25 05:55 - INFO - ---------------------------------------------
2024-10-25 05:55 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 05:55 - INFO - 	 Train Loss: 0.055
2024-10-25 05:55 - INFO - 	 Val. Loss: 0.060
2024-10-25 05:55 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:55 - INFO - 	 PR-AUC: 0.896
2024-10-25 05:55 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:55 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 05:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:55 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 05:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 05:55 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:55 - INFO - ---------------------------------------------
2024-10-25 05:55 - INFO - ---------------------------------------------
2024-10-25 05:55 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 05:55 - INFO - 	 Train Loss: 0.055
2024-10-25 05:55 - INFO - 	 Val. Loss: 0.059
2024-10-25 05:55 - INFO - 	 ROC-AUC: 0.988
2024-10-25 05:55 - INFO - 	 PR-AUC: 0.896
2024-10-25 05:55 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:55 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 05:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 05:55 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 05:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 05:55 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:55 - INFO - ---------------------------------------------
2024-10-25 05:56 - INFO - Fit the preprocessing pipeline
2024-10-25 05:56 - INFO - Training using device: cuda
2024-10-25 05:56 - INFO - Creating generators
2024-10-25 05:56 - INFO - The model has 651,257 trainable parameters
2024-10-25 05:56 - INFO - * Model:
2024-10-25 05:56 - INFO - * -----------
2024-10-25 05:56 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 05:56 - INFO - * -----------
2024-10-25 05:56 - INFO - Evaluating model based on: rocauc
2024-10-25 05:56 - INFO - Training..

2024-10-25 05:57 - INFO - ---------------------------------------------
2024-10-25 05:57 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 05:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98164
2024-10-25 05:57 - INFO - 	 Train Loss: 0.158
2024-10-25 05:57 - INFO - 	 Val. Loss: 0.078
2024-10-25 05:57 - INFO - 	 ROC-AUC: 0.982
2024-10-25 05:57 - INFO - 	 PR-AUC: 0.835
2024-10-25 05:57 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 05:57 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 05:57 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 05:57 - INFO - 	 Best PR-AUC: 0.835
2024-10-25 05:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 05:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-25 05:57 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 05:57 - INFO - ---------------------------------------------
2024-10-25 05:58 - INFO - ---------------------------------------------
2024-10-25 05:58 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 05:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98658
2024-10-25 05:58 - INFO - 	 Train Loss: 0.081
2024-10-25 05:58 - INFO - 	 Val. Loss: 0.064
2024-10-25 05:58 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:58 - INFO - 	 PR-AUC: 0.876
2024-10-25 05:58 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 05:58 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 05:58 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 05:58 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 05:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 05:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 05:58 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 05:58 - INFO - ---------------------------------------------
2024-10-25 05:58 - INFO - ---------------------------------------------
2024-10-25 05:58 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 05:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98734
2024-10-25 05:58 - INFO - 	 Train Loss: 0.071
2024-10-25 05:58 - INFO - 	 Val. Loss: 0.060
2024-10-25 05:58 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:58 - INFO - 	 PR-AUC: 0.883
2024-10-25 05:58 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 05:58 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:58 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 05:58 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 05:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 05:58 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:58 - INFO - ---------------------------------------------
2024-10-25 05:59 - INFO - ---------------------------------------------
2024-10-25 05:59 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 05:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9874
2024-10-25 05:59 - INFO - 	 Train Loss: 0.066
2024-10-25 05:59 - INFO - 	 Val. Loss: 0.062
2024-10-25 05:59 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:59 - INFO - 	 PR-AUC: 0.881
2024-10-25 05:59 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 05:59 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:59 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 05:59 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 05:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 05:59 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:59 - INFO - ---------------------------------------------
2024-10-25 05:59 - INFO - ---------------------------------------------
2024-10-25 05:59 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 05:59 - INFO - 	 Train Loss: 0.063
2024-10-25 05:59 - INFO - 	 Val. Loss: 0.061
2024-10-25 05:59 - INFO - 	 ROC-AUC: 0.987
2024-10-25 05:59 - INFO - 	 PR-AUC: 0.881
2024-10-25 05:59 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 05:59 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 05:59 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 05:59 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 05:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 05:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 05:59 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 05:59 - INFO - ---------------------------------------------
2024-10-25 06:00 - INFO - ---------------------------------------------
2024-10-25 06:00 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 06:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98764
2024-10-25 06:00 - INFO - 	 Train Loss: 0.060
2024-10-25 06:00 - INFO - 	 Val. Loss: 0.062
2024-10-25 06:00 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:00 - INFO - 	 PR-AUC: 0.882
2024-10-25 06:00 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:00 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:00 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 06:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 06:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 06:00 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 06:00 - INFO - ---------------------------------------------
2024-10-25 06:00 - INFO - ---------------------------------------------
2024-10-25 06:00 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 06:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98767
2024-10-25 06:00 - INFO - 	 Train Loss: 0.058
2024-10-25 06:00 - INFO - 	 Val. Loss: 0.061
2024-10-25 06:00 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:00 - INFO - 	 PR-AUC: 0.881
2024-10-25 06:00 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:00 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:00 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 06:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 06:00 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 06:00 - INFO - ---------------------------------------------
2024-10-25 06:01 - INFO - ---------------------------------------------
2024-10-25 06:01 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 06:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98849
2024-10-25 06:01 - INFO - 	 Train Loss: 0.056
2024-10-25 06:01 - INFO - 	 Val. Loss: 0.059
2024-10-25 06:01 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:01 - INFO - 	 PR-AUC: 0.887
2024-10-25 06:01 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:01 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:01 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:01 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 06:01 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 06:01 - INFO - ---------------------------------------------
2024-10-25 06:01 - INFO - ---------------------------------------------
2024-10-25 06:01 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 06:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98868
2024-10-25 06:01 - INFO - 	 Train Loss: 0.055
2024-10-25 06:01 - INFO - 	 Val. Loss: 0.057
2024-10-25 06:01 - INFO - 	 ROC-AUC: 0.989
2024-10-25 06:01 - INFO - 	 PR-AUC: 0.892
2024-10-25 06:01 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:01 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 06:01 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:01 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-25 06:01 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 06:01 - INFO - ---------------------------------------------
2024-10-25 06:02 - INFO - ---------------------------------------------
2024-10-25 06:02 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 06:02 - INFO - 	 Train Loss: 0.053
2024-10-25 06:02 - INFO - 	 Val. Loss: 0.060
2024-10-25 06:02 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:02 - INFO - 	 PR-AUC: 0.887
2024-10-25 06:02 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:02 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 06:02 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:02 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 06:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-25 06:02 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 06:02 - INFO - ---------------------------------------------
2024-10-25 06:03 - INFO - Fit the preprocessing pipeline
2024-10-25 06:03 - INFO - Training using device: cuda
2024-10-25 06:03 - INFO - Creating generators
2024-10-25 06:03 - INFO - The model has 651,257 trainable parameters
2024-10-25 06:03 - INFO - * Model:
2024-10-25 06:03 - INFO - * -----------
2024-10-25 06:03 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 06:03 - INFO - * -----------
2024-10-25 06:03 - INFO - Evaluating model based on: rocauc
2024-10-25 06:03 - INFO - Training..

2024-10-25 06:04 - INFO - ---------------------------------------------
2024-10-25 06:04 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 06:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98049
2024-10-25 06:04 - INFO - 	 Train Loss: 0.154
2024-10-25 06:04 - INFO - 	 Val. Loss: 0.081
2024-10-25 06:04 - INFO - 	 ROC-AUC: 0.980
2024-10-25 06:04 - INFO - 	 PR-AUC: 0.825
2024-10-25 06:04 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 06:04 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 06:04 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 06:04 - INFO - 	 Best PR-AUC: 0.825
2024-10-25 06:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 06:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-25 06:04 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 06:04 - INFO - ---------------------------------------------
2024-10-25 06:04 - INFO - ---------------------------------------------
2024-10-25 06:04 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 06:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98464
2024-10-25 06:04 - INFO - 	 Train Loss: 0.083
2024-10-25 06:04 - INFO - 	 Val. Loss: 0.068
2024-10-25 06:04 - INFO - 	 ROC-AUC: 0.985
2024-10-25 06:04 - INFO - 	 PR-AUC: 0.868
2024-10-25 06:04 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 06:04 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 06:04 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 06:04 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 06:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 06:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-25 06:04 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 06:04 - INFO - ---------------------------------------------
2024-10-25 06:05 - INFO - ---------------------------------------------
2024-10-25 06:05 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 06:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98671
2024-10-25 06:05 - INFO - 	 Train Loss: 0.072
2024-10-25 06:05 - INFO - 	 Val. Loss: 0.065
2024-10-25 06:05 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:05 - INFO - 	 PR-AUC: 0.874
2024-10-25 06:05 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:05 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 06:05 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:05 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 06:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 06:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 06:05 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 06:05 - INFO - ---------------------------------------------
2024-10-25 06:05 - INFO - ---------------------------------------------
2024-10-25 06:05 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 06:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98685
2024-10-25 06:05 - INFO - 	 Train Loss: 0.067
2024-10-25 06:05 - INFO - 	 Val. Loss: 0.063
2024-10-25 06:05 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:05 - INFO - 	 PR-AUC: 0.878
2024-10-25 06:05 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 06:05 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 06:05 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:05 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 06:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 06:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 06:05 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 06:05 - INFO - ---------------------------------------------
2024-10-25 06:06 - INFO - ---------------------------------------------
2024-10-25 06:06 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 06:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98788
2024-10-25 06:06 - INFO - 	 Train Loss: 0.063
2024-10-25 06:06 - INFO - 	 Val. Loss: 0.061
2024-10-25 06:06 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:06 - INFO - 	 PR-AUC: 0.885
2024-10-25 06:06 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:06 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 06:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:06 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 06:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-25 06:06 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:06 - INFO - ---------------------------------------------
2024-10-25 06:06 - INFO - ---------------------------------------------
2024-10-25 06:06 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 06:06 - INFO - 	 Train Loss: 0.062
2024-10-25 06:06 - INFO - 	 Val. Loss: 0.060
2024-10-25 06:06 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:06 - INFO - 	 PR-AUC: 0.888
2024-10-25 06:06 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:06 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:06 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 06:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-25 06:06 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:06 - INFO - ---------------------------------------------
2024-10-25 06:07 - INFO - ---------------------------------------------
2024-10-25 06:07 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 06:07 - INFO - 	 Train Loss: 0.059
2024-10-25 06:07 - INFO - 	 Val. Loss: 0.061
2024-10-25 06:07 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:07 - INFO - 	 PR-AUC: 0.890
2024-10-25 06:07 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:07 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:07 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:07 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 06:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 06:07 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:07 - INFO - ---------------------------------------------
2024-10-25 06:07 - INFO - ---------------------------------------------
2024-10-25 06:07 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 06:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98824
2024-10-25 06:07 - INFO - 	 Train Loss: 0.058
2024-10-25 06:07 - INFO - 	 Val. Loss: 0.059
2024-10-25 06:07 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:07 - INFO - 	 PR-AUC: 0.885
2024-10-25 06:07 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 06:07 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:07 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:07 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 06:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 06:07 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 06:07 - INFO - ---------------------------------------------
2024-10-25 06:08 - INFO - ---------------------------------------------
2024-10-25 06:08 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 06:08 - INFO - 	 Train Loss: 0.055
2024-10-25 06:08 - INFO - 	 Val. Loss: 0.060
2024-10-25 06:08 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:08 - INFO - 	 PR-AUC: 0.891
2024-10-25 06:08 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:08 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:08 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 06:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-25 06:08 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 06:08 - INFO - ---------------------------------------------
2024-10-25 06:08 - INFO - ---------------------------------------------
2024-10-25 06:08 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 06:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98849
2024-10-25 06:08 - INFO - 	 Train Loss: 0.054
2024-10-25 06:08 - INFO - 	 Val. Loss: 0.058
2024-10-25 06:08 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:08 - INFO - 	 PR-AUC: 0.896
2024-10-25 06:08 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 06:08 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 06:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:08 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 06:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 06:08 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:08 - INFO - ---------------------------------------------
2024-10-25 06:10 - INFO - Fit the preprocessing pipeline
2024-10-25 06:10 - INFO - Training using device: cuda
2024-10-25 06:10 - INFO - Creating generators
2024-10-25 06:10 - INFO - The model has 651,257 trainable parameters
2024-10-25 06:10 - INFO - * Model:
2024-10-25 06:10 - INFO - * -----------
2024-10-25 06:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 06:10 - INFO - * -----------
2024-10-25 06:10 - INFO - Evaluating model based on: rocauc
2024-10-25 06:10 - INFO - Training..

2024-10-25 06:10 - INFO - ---------------------------------------------
2024-10-25 06:10 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 06:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97927
2024-10-25 06:10 - INFO - 	 Train Loss: 0.152
2024-10-25 06:10 - INFO - 	 Val. Loss: 0.081
2024-10-25 06:10 - INFO - 	 ROC-AUC: 0.979
2024-10-25 06:10 - INFO - 	 PR-AUC: 0.810
2024-10-25 06:10 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 06:10 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 06:10 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 06:10 - INFO - 	 Best PR-AUC: 0.810
2024-10-25 06:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-25 06:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-25 06:10 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 06:10 - INFO - ---------------------------------------------
2024-10-25 06:11 - INFO - ---------------------------------------------
2024-10-25 06:11 - INFO - Epoch: 02 | Time: 0m 30s
2024-10-25 06:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98469
2024-10-25 06:11 - INFO - 	 Train Loss: 0.082
2024-10-25 06:11 - INFO - 	 Val. Loss: 0.068
2024-10-25 06:11 - INFO - 	 ROC-AUC: 0.985
2024-10-25 06:11 - INFO - 	 PR-AUC: 0.867
2024-10-25 06:11 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:11 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 06:11 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 06:11 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 06:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 06:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-25 06:11 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:11 - INFO - ---------------------------------------------
2024-10-25 06:11 - INFO - ---------------------------------------------
2024-10-25 06:11 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 06:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98614
2024-10-25 06:11 - INFO - 	 Train Loss: 0.073
2024-10-25 06:11 - INFO - 	 Val. Loss: 0.066
2024-10-25 06:11 - INFO - 	 ROC-AUC: 0.986
2024-10-25 06:11 - INFO - 	 PR-AUC: 0.861
2024-10-25 06:11 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:11 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 06:11 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 06:11 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 06:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 06:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-25 06:11 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:11 - INFO - ---------------------------------------------
2024-10-25 06:12 - INFO - ---------------------------------------------
2024-10-25 06:12 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 06:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98645
2024-10-25 06:12 - INFO - 	 Train Loss: 0.067
2024-10-25 06:12 - INFO - 	 Val. Loss: 0.067
2024-10-25 06:12 - INFO - 	 ROC-AUC: 0.986
2024-10-25 06:12 - INFO - 	 PR-AUC: 0.877
2024-10-25 06:12 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 06:12 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 06:12 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 06:12 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 06:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 06:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 06:12 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:12 - INFO - ---------------------------------------------
2024-10-25 06:13 - INFO - ---------------------------------------------
2024-10-25 06:13 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 06:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.987
2024-10-25 06:13 - INFO - 	 Train Loss: 0.063
2024-10-25 06:13 - INFO - 	 Val. Loss: 0.063
2024-10-25 06:13 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:13 - INFO - 	 PR-AUC: 0.877
2024-10-25 06:13 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 06:13 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 06:13 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:13 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 06:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 06:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 06:13 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:13 - INFO - ---------------------------------------------
2024-10-25 06:13 - INFO - ---------------------------------------------
2024-10-25 06:13 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 06:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98788
2024-10-25 06:13 - INFO - 	 Train Loss: 0.060
2024-10-25 06:13 - INFO - 	 Val. Loss: 0.061
2024-10-25 06:13 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:13 - INFO - 	 PR-AUC: 0.887
2024-10-25 06:13 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:13 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 06:13 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:13 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 06:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 06:13 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:13 - INFO - ---------------------------------------------
2024-10-25 06:14 - INFO - ---------------------------------------------
2024-10-25 06:14 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 06:14 - INFO - 	 Train Loss: 0.058
2024-10-25 06:14 - INFO - 	 Val. Loss: 0.061
2024-10-25 06:14 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:14 - INFO - 	 PR-AUC: 0.883
2024-10-25 06:14 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 06:14 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 06:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:14 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 06:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 06:14 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:14 - INFO - ---------------------------------------------
2024-10-25 06:14 - INFO - ---------------------------------------------
2024-10-25 06:14 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 06:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98804
2024-10-25 06:14 - INFO - 	 Train Loss: 0.056
2024-10-25 06:14 - INFO - 	 Val. Loss: 0.058
2024-10-25 06:14 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:14 - INFO - 	 PR-AUC: 0.892
2024-10-25 06:14 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:14 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 06:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:14 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 06:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 06:14 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:14 - INFO - ---------------------------------------------
2024-10-25 06:15 - INFO - ---------------------------------------------
2024-10-25 06:15 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 06:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98839
2024-10-25 06:15 - INFO - 	 Train Loss: 0.054
2024-10-25 06:15 - INFO - 	 Val. Loss: 0.060
2024-10-25 06:15 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:15 - INFO - 	 PR-AUC: 0.891
2024-10-25 06:15 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:15 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 06:15 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:15 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 06:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 06:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 06:15 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:15 - INFO - ---------------------------------------------
2024-10-25 06:15 - INFO - ---------------------------------------------
2024-10-25 06:15 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 06:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98878
2024-10-25 06:15 - INFO - 	 Train Loss: 0.052
2024-10-25 06:15 - INFO - 	 Val. Loss: 0.059
2024-10-25 06:15 - INFO - 	 ROC-AUC: 0.989
2024-10-25 06:15 - INFO - 	 PR-AUC: 0.894
2024-10-25 06:15 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 06:15 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 06:15 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:15 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 06:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-25 06:15 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 06:15 - INFO - ---------------------------------------------
2024-10-25 06:17 - INFO - Fit the preprocessing pipeline
2024-10-25 06:17 - INFO - Training using device: cuda
2024-10-25 06:17 - INFO - Creating generators
2024-10-25 06:17 - INFO - The model has 651,257 trainable parameters
2024-10-25 06:17 - INFO - * Model:
2024-10-25 06:17 - INFO - * -----------
2024-10-25 06:17 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 06:17 - INFO - * -----------
2024-10-25 06:17 - INFO - Evaluating model based on: rocauc
2024-10-25 06:17 - INFO - Training..

2024-10-25 06:17 - INFO - ---------------------------------------------
2024-10-25 06:17 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 06:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98007
2024-10-25 06:17 - INFO - 	 Train Loss: 0.150
2024-10-25 06:17 - INFO - 	 Val. Loss: 0.086
2024-10-25 06:17 - INFO - 	 ROC-AUC: 0.980
2024-10-25 06:17 - INFO - 	 PR-AUC: 0.818
2024-10-25 06:17 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 06:17 - INFO - 	 Best Val. Loss: 0.086
2024-10-25 06:17 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 06:17 - INFO - 	 Best PR-AUC: 0.818
2024-10-25 06:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 06:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-25 06:17 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 06:17 - INFO - ---------------------------------------------
2024-10-25 06:18 - INFO - ---------------------------------------------
2024-10-25 06:18 - INFO - Epoch: 02 | Time: 0m 30s
2024-10-25 06:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98448
2024-10-25 06:18 - INFO - 	 Train Loss: 0.079
2024-10-25 06:18 - INFO - 	 Val. Loss: 0.072
2024-10-25 06:18 - INFO - 	 ROC-AUC: 0.984
2024-10-25 06:18 - INFO - 	 PR-AUC: 0.853
2024-10-25 06:18 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:18 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 06:18 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 06:18 - INFO - 	 Best PR-AUC: 0.853
2024-10-25 06:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 06:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-25 06:18 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 06:18 - INFO - ---------------------------------------------
2024-10-25 06:18 - INFO - ---------------------------------------------
2024-10-25 06:18 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 06:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98525
2024-10-25 06:18 - INFO - 	 Train Loss: 0.070
2024-10-25 06:18 - INFO - 	 Val. Loss: 0.069
2024-10-25 06:18 - INFO - 	 ROC-AUC: 0.985
2024-10-25 06:18 - INFO - 	 PR-AUC: 0.867
2024-10-25 06:18 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:18 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 06:18 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 06:18 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 06:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 06:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-25 06:18 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:18 - INFO - ---------------------------------------------
2024-10-25 06:19 - INFO - ---------------------------------------------
2024-10-25 06:19 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 06:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98737
2024-10-25 06:19 - INFO - 	 Train Loss: 0.068
2024-10-25 06:19 - INFO - 	 Val. Loss: 0.062
2024-10-25 06:19 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:19 - INFO - 	 PR-AUC: 0.880
2024-10-25 06:19 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:19 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 06:19 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:19 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 06:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 06:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-25 06:19 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:19 - INFO - ---------------------------------------------
2024-10-25 06:19 - INFO - ---------------------------------------------
2024-10-25 06:19 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 06:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98845
2024-10-25 06:19 - INFO - 	 Train Loss: 0.064
2024-10-25 06:19 - INFO - 	 Val. Loss: 0.059
2024-10-25 06:19 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:19 - INFO - 	 PR-AUC: 0.891
2024-10-25 06:19 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:19 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:19 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:19 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 06:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 06:19 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:19 - INFO - ---------------------------------------------
2024-10-25 06:20 - INFO - ---------------------------------------------
2024-10-25 06:20 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 06:20 - INFO - 	 Train Loss: 0.059
2024-10-25 06:20 - INFO - 	 Val. Loss: 0.062
2024-10-25 06:20 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:20 - INFO - 	 PR-AUC: 0.886
2024-10-25 06:20 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 06:20 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:20 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:20 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 06:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 06:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:20 - INFO - ---------------------------------------------
2024-10-25 06:20 - INFO - ---------------------------------------------
2024-10-25 06:20 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 06:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98862
2024-10-25 06:20 - INFO - 	 Train Loss: 0.057
2024-10-25 06:20 - INFO - 	 Val. Loss: 0.059
2024-10-25 06:20 - INFO - 	 ROC-AUC: 0.989
2024-10-25 06:20 - INFO - 	 PR-AUC: 0.891
2024-10-25 06:20 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-25 06:20 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:20 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:20 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 06:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 06:20 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 06:20 - INFO - ---------------------------------------------
2024-10-25 06:21 - INFO - ---------------------------------------------
2024-10-25 06:21 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 06:21 - INFO - 	 Train Loss: 0.057
2024-10-25 06:21 - INFO - 	 Val. Loss: 0.057
2024-10-25 06:21 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:21 - INFO - 	 PR-AUC: 0.892
2024-10-25 06:21 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:21 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 06:21 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:21 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 06:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-25 06:21 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 06:21 - INFO - ---------------------------------------------
2024-10-25 06:21 - INFO - ---------------------------------------------
2024-10-25 06:21 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 06:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98943
2024-10-25 06:21 - INFO - 	 Train Loss: 0.055
2024-10-25 06:21 - INFO - 	 Val. Loss: 0.056
2024-10-25 06:21 - INFO - 	 ROC-AUC: 0.989
2024-10-25 06:21 - INFO - 	 PR-AUC: 0.900
2024-10-25 06:21 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 06:21 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 06:21 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:21 - INFO - 	 Best PR-AUC: 0.900
2024-10-25 06:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-25 06:21 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 06:21 - INFO - ---------------------------------------------
2024-10-25 06:22 - INFO - ---------------------------------------------
2024-10-25 06:22 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 06:22 - INFO - 	 Train Loss: 0.053
2024-10-25 06:22 - INFO - 	 Val. Loss: 0.058
2024-10-25 06:22 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:22 - INFO - 	 PR-AUC: 0.895
2024-10-25 06:22 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:22 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 06:22 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:22 - INFO - 	 Best PR-AUC: 0.900
2024-10-25 06:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-25 06:22 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 06:22 - INFO - ---------------------------------------------
2024-10-25 06:23 - INFO - Fit the preprocessing pipeline
2024-10-25 06:23 - INFO - Training using device: cuda
2024-10-25 06:23 - INFO - Creating generators
2024-10-25 06:23 - INFO - The model has 651,257 trainable parameters
2024-10-25 06:23 - INFO - * Model:
2024-10-25 06:23 - INFO - * -----------
2024-10-25 06:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 06:23 - INFO - * -----------
2024-10-25 06:23 - INFO - Evaluating model based on: rocauc
2024-10-25 06:23 - INFO - Training..

2024-10-25 06:24 - INFO - ---------------------------------------------
2024-10-25 06:24 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 06:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97482
2024-10-25 06:24 - INFO - 	 Train Loss: 0.155
2024-10-25 06:24 - INFO - 	 Val. Loss: 0.093
2024-10-25 06:24 - INFO - 	 ROC-AUC: 0.975
2024-10-25 06:24 - INFO - 	 PR-AUC: 0.799
2024-10-25 06:24 - INFO - 	 Recall for 0.4 precision: 0.957
2024-10-25 06:24 - INFO - 	 Best Val. Loss: 0.093
2024-10-25 06:24 - INFO - 	 Best ROC-AUC: 0.975
2024-10-25 06:24 - INFO - 	 Best PR-AUC: 0.799
2024-10-25 06:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 06:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-10-25 06:24 - INFO - 	 Best Recall for 0.4 precision: 0.957
2024-10-25 06:24 - INFO - ---------------------------------------------
2024-10-25 06:24 - INFO - ---------------------------------------------
2024-10-25 06:24 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 06:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98478
2024-10-25 06:24 - INFO - 	 Train Loss: 0.083
2024-10-25 06:24 - INFO - 	 Val. Loss: 0.067
2024-10-25 06:24 - INFO - 	 ROC-AUC: 0.985
2024-10-25 06:24 - INFO - 	 PR-AUC: 0.863
2024-10-25 06:24 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:24 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 06:24 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 06:24 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 06:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 06:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 06:24 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:24 - INFO - ---------------------------------------------
2024-10-25 06:25 - INFO - ---------------------------------------------
2024-10-25 06:25 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 06:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98525
2024-10-25 06:25 - INFO - 	 Train Loss: 0.073
2024-10-25 06:25 - INFO - 	 Val. Loss: 0.067
2024-10-25 06:25 - INFO - 	 ROC-AUC: 0.985
2024-10-25 06:25 - INFO - 	 PR-AUC: 0.862
2024-10-25 06:25 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:25 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 06:25 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 06:25 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 06:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 06:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 06:25 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:25 - INFO - ---------------------------------------------
2024-10-25 06:25 - INFO - ---------------------------------------------
2024-10-25 06:25 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 06:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98681
2024-10-25 06:25 - INFO - 	 Train Loss: 0.067
2024-10-25 06:25 - INFO - 	 Val. Loss: 0.063
2024-10-25 06:25 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:25 - INFO - 	 PR-AUC: 0.878
2024-10-25 06:25 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:25 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 06:25 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:25 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 06:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 06:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 06:25 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:25 - INFO - ---------------------------------------------
2024-10-25 06:26 - INFO - ---------------------------------------------
2024-10-25 06:26 - INFO - Epoch: 05 | Time: 0m 30s
2024-10-25 06:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98696
2024-10-25 06:26 - INFO - 	 Train Loss: 0.064
2024-10-25 06:26 - INFO - 	 Val. Loss: 0.062
2024-10-25 06:26 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:26 - INFO - 	 PR-AUC: 0.885
2024-10-25 06:26 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 06:26 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 06:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:26 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 06:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 06:26 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:26 - INFO - ---------------------------------------------
2024-10-25 06:26 - INFO - ---------------------------------------------
2024-10-25 06:26 - INFO - Epoch: 06 | Time: 0m 30s
2024-10-25 06:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98741
2024-10-25 06:26 - INFO - 	 Train Loss: 0.061
2024-10-25 06:26 - INFO - 	 Val. Loss: 0.060
2024-10-25 06:26 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:26 - INFO - 	 PR-AUC: 0.891
2024-10-25 06:26 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:26 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:26 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 06:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 06:26 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:26 - INFO - ---------------------------------------------
2024-10-25 06:27 - INFO - ---------------------------------------------
2024-10-25 06:27 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 06:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98815
2024-10-25 06:27 - INFO - 	 Train Loss: 0.058
2024-10-25 06:27 - INFO - 	 Val. Loss: 0.057
2024-10-25 06:27 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:27 - INFO - 	 PR-AUC: 0.899
2024-10-25 06:27 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:27 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 06:27 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:27 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 06:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-25 06:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:27 - INFO - ---------------------------------------------
2024-10-25 06:28 - INFO - ---------------------------------------------
2024-10-25 06:28 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 06:28 - INFO - 	 Train Loss: 0.056
2024-10-25 06:28 - INFO - 	 Val. Loss: 0.056
2024-10-25 06:28 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:28 - INFO - 	 PR-AUC: 0.904
2024-10-25 06:28 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:28 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 06:28 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:28 - INFO - 	 Best PR-AUC: 0.904
2024-10-25 06:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-10-25 06:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:28 - INFO - ---------------------------------------------
2024-10-25 06:28 - INFO - ---------------------------------------------
2024-10-25 06:28 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 06:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98913
2024-10-25 06:28 - INFO - 	 Train Loss: 0.054
2024-10-25 06:28 - INFO - 	 Val. Loss: 0.056
2024-10-25 06:28 - INFO - 	 ROC-AUC: 0.989
2024-10-25 06:28 - INFO - 	 PR-AUC: 0.908
2024-10-25 06:28 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:28 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 06:28 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:28 - INFO - 	 Best PR-AUC: 0.908
2024-10-25 06:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-25 06:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:28 - INFO - ---------------------------------------------
2024-10-25 06:29 - INFO - ---------------------------------------------
2024-10-25 06:29 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 06:29 - INFO - 	 Train Loss: 0.054
2024-10-25 06:29 - INFO - 	 Val. Loss: 0.055
2024-10-25 06:29 - INFO - 	 ROC-AUC: 0.989
2024-10-25 06:29 - INFO - 	 PR-AUC: 0.912
2024-10-25 06:29 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:29 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 06:29 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:29 - INFO - 	 Best PR-AUC: 0.912
2024-10-25 06:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-10-25 06:29 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:29 - INFO - ---------------------------------------------
2024-10-25 06:30 - INFO - Fit the preprocessing pipeline
2024-10-25 06:30 - INFO - Training using device: cuda
2024-10-25 06:30 - INFO - Creating generators
2024-10-25 06:30 - INFO - The model has 651,257 trainable parameters
2024-10-25 06:30 - INFO - * Model:
2024-10-25 06:30 - INFO - * -----------
2024-10-25 06:30 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 06:30 - INFO - * -----------
2024-10-25 06:30 - INFO - Evaluating model based on: rocauc
2024-10-25 06:30 - INFO - Training..

2024-10-25 06:31 - INFO - ---------------------------------------------
2024-10-25 06:31 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 06:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98072
2024-10-25 06:31 - INFO - 	 Train Loss: 0.145
2024-10-25 06:31 - INFO - 	 Val. Loss: 0.079
2024-10-25 06:31 - INFO - 	 ROC-AUC: 0.981
2024-10-25 06:31 - INFO - 	 PR-AUC: 0.830
2024-10-25 06:31 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 06:31 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 06:31 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 06:31 - INFO - 	 Best PR-AUC: 0.830
2024-10-25 06:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 06:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-25 06:31 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 06:31 - INFO - ---------------------------------------------
2024-10-25 06:31 - INFO - ---------------------------------------------
2024-10-25 06:31 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 06:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9861
2024-10-25 06:31 - INFO - 	 Train Loss: 0.080
2024-10-25 06:31 - INFO - 	 Val. Loss: 0.063
2024-10-25 06:31 - INFO - 	 ROC-AUC: 0.986
2024-10-25 06:31 - INFO - 	 PR-AUC: 0.874
2024-10-25 06:31 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:31 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 06:31 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 06:31 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 06:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 06:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 06:31 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:31 - INFO - ---------------------------------------------
2024-10-25 06:32 - INFO - ---------------------------------------------
2024-10-25 06:32 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 06:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98766
2024-10-25 06:32 - INFO - 	 Train Loss: 0.070
2024-10-25 06:32 - INFO - 	 Val. Loss: 0.062
2024-10-25 06:32 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:32 - INFO - 	 PR-AUC: 0.890
2024-10-25 06:32 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 06:32 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 06:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:32 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 06:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 06:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 06:32 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:32 - INFO - ---------------------------------------------
2024-10-25 06:32 - INFO - ---------------------------------------------
2024-10-25 06:32 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 06:32 - INFO - 	 Train Loss: 0.067
2024-10-25 06:32 - INFO - 	 Val. Loss: 0.062
2024-10-25 06:32 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:32 - INFO - 	 PR-AUC: 0.878
2024-10-25 06:32 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 06:32 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 06:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:32 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 06:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 06:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 06:32 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:32 - INFO - ---------------------------------------------
2024-10-25 06:33 - INFO - ---------------------------------------------
2024-10-25 06:33 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 06:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98785
2024-10-25 06:33 - INFO - 	 Train Loss: 0.063
2024-10-25 06:33 - INFO - 	 Val. Loss: 0.060
2024-10-25 06:33 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:33 - INFO - 	 PR-AUC: 0.893
2024-10-25 06:33 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:33 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:33 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:33 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 06:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 06:33 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:33 - INFO - ---------------------------------------------
2024-10-25 06:33 - INFO - ---------------------------------------------
2024-10-25 06:33 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 06:33 - INFO - 	 Train Loss: 0.060
2024-10-25 06:33 - INFO - 	 Val. Loss: 0.060
2024-10-25 06:33 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:33 - INFO - 	 PR-AUC: 0.887
2024-10-25 06:33 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:33 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:33 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:33 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 06:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 06:33 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:33 - INFO - ---------------------------------------------
2024-10-25 06:34 - INFO - ---------------------------------------------
2024-10-25 06:34 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 06:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98813
2024-10-25 06:34 - INFO - 	 Train Loss: 0.059
2024-10-25 06:34 - INFO - 	 Val. Loss: 0.059
2024-10-25 06:34 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:34 - INFO - 	 PR-AUC: 0.897
2024-10-25 06:34 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:34 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:34 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:34 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 06:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-25 06:34 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:34 - INFO - ---------------------------------------------
2024-10-25 06:34 - INFO - ---------------------------------------------
2024-10-25 06:34 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 06:34 - INFO - 	 Train Loss: 0.056
2024-10-25 06:34 - INFO - 	 Val. Loss: 0.059
2024-10-25 06:34 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:34 - INFO - 	 PR-AUC: 0.887
2024-10-25 06:34 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:34 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:34 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:34 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 06:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-25 06:34 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:34 - INFO - ---------------------------------------------
2024-10-25 06:35 - INFO - ---------------------------------------------
2024-10-25 06:35 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 06:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98824
2024-10-25 06:35 - INFO - 	 Train Loss: 0.055
2024-10-25 06:35 - INFO - 	 Val. Loss: 0.057
2024-10-25 06:35 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:35 - INFO - 	 PR-AUC: 0.902
2024-10-25 06:35 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:35 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 06:35 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:35 - INFO - 	 Best PR-AUC: 0.902
2024-10-25 06:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 06:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:35 - INFO - ---------------------------------------------
2024-10-25 06:35 - INFO - ---------------------------------------------
2024-10-25 06:35 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 06:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98875
2024-10-25 06:35 - INFO - 	 Train Loss: 0.054
2024-10-25 06:35 - INFO - 	 Val. Loss: 0.057
2024-10-25 06:35 - INFO - 	 ROC-AUC: 0.989
2024-10-25 06:35 - INFO - 	 PR-AUC: 0.894
2024-10-25 06:35 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:35 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 06:35 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:35 - INFO - 	 Best PR-AUC: 0.902
2024-10-25 06:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-25 06:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 06:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:35 - INFO - ---------------------------------------------
2024-10-25 06:37 - INFO - Fit the preprocessing pipeline
2024-10-25 06:37 - INFO - Training using device: cuda
2024-10-25 06:37 - INFO - Creating generators
2024-10-25 06:37 - INFO - The model has 651,257 trainable parameters
2024-10-25 06:37 - INFO - * Model:
2024-10-25 06:37 - INFO - * -----------
2024-10-25 06:37 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 06:37 - INFO - * -----------
2024-10-25 06:37 - INFO - Evaluating model based on: rocauc
2024-10-25 06:37 - INFO - Training..

2024-10-25 06:37 - INFO - ---------------------------------------------
2024-10-25 06:37 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 06:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97775
2024-10-25 06:37 - INFO - 	 Train Loss: 0.157
2024-10-25 06:37 - INFO - 	 Val. Loss: 0.087
2024-10-25 06:37 - INFO - 	 ROC-AUC: 0.978
2024-10-25 06:37 - INFO - 	 PR-AUC: 0.808
2024-10-25 06:37 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-25 06:37 - INFO - 	 Best Val. Loss: 0.087
2024-10-25 06:37 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 06:37 - INFO - 	 Best PR-AUC: 0.808
2024-10-25 06:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 06:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-25 06:37 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-25 06:37 - INFO - ---------------------------------------------
2024-10-25 06:38 - INFO - ---------------------------------------------
2024-10-25 06:38 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 06:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9853
2024-10-25 06:38 - INFO - 	 Train Loss: 0.083
2024-10-25 06:38 - INFO - 	 Val. Loss: 0.071
2024-10-25 06:38 - INFO - 	 ROC-AUC: 0.985
2024-10-25 06:38 - INFO - 	 PR-AUC: 0.852
2024-10-25 06:38 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:38 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 06:38 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 06:38 - INFO - 	 Best PR-AUC: 0.852
2024-10-25 06:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 06:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-25 06:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:38 - INFO - ---------------------------------------------
2024-10-25 06:38 - INFO - ---------------------------------------------
2024-10-25 06:38 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 06:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98729
2024-10-25 06:38 - INFO - 	 Train Loss: 0.072
2024-10-25 06:38 - INFO - 	 Val. Loss: 0.063
2024-10-25 06:38 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:38 - INFO - 	 PR-AUC: 0.873
2024-10-25 06:38 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 06:38 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 06:38 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:38 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 06:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 06:38 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 06:38 - INFO - ---------------------------------------------
2024-10-25 06:39 - INFO - ---------------------------------------------
2024-10-25 06:39 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 06:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98793
2024-10-25 06:39 - INFO - 	 Train Loss: 0.066
2024-10-25 06:39 - INFO - 	 Val. Loss: 0.063
2024-10-25 06:39 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:39 - INFO - 	 PR-AUC: 0.886
2024-10-25 06:39 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 06:39 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 06:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:39 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 06:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 06:39 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:39 - INFO - ---------------------------------------------
2024-10-25 06:39 - INFO - ---------------------------------------------
2024-10-25 06:39 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 06:39 - INFO - 	 Train Loss: 0.063
2024-10-25 06:39 - INFO - 	 Val. Loss: 0.061
2024-10-25 06:39 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:39 - INFO - 	 PR-AUC: 0.879
2024-10-25 06:39 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:39 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 06:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:39 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 06:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 06:39 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:39 - INFO - ---------------------------------------------
2024-10-25 06:40 - INFO - ---------------------------------------------
2024-10-25 06:40 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 06:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98914
2024-10-25 06:40 - INFO - 	 Train Loss: 0.060
2024-10-25 06:40 - INFO - 	 Val. Loss: 0.057
2024-10-25 06:40 - INFO - 	 ROC-AUC: 0.989
2024-10-25 06:40 - INFO - 	 PR-AUC: 0.894
2024-10-25 06:40 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:40 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 06:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:40 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 06:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 06:40 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:40 - INFO - ---------------------------------------------
2024-10-25 06:40 - INFO - ---------------------------------------------
2024-10-25 06:40 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 06:40 - INFO - 	 Train Loss: 0.058
2024-10-25 06:40 - INFO - 	 Val. Loss: 0.059
2024-10-25 06:40 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:40 - INFO - 	 PR-AUC: 0.892
2024-10-25 06:40 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:40 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 06:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:40 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 06:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 06:40 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:40 - INFO - ---------------------------------------------
2024-10-25 06:41 - INFO - ---------------------------------------------
2024-10-25 06:41 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 06:41 - INFO - 	 Train Loss: 0.056
2024-10-25 06:41 - INFO - 	 Val. Loss: 0.058
2024-10-25 06:41 - INFO - 	 ROC-AUC: 0.989
2024-10-25 06:41 - INFO - 	 PR-AUC: 0.887
2024-10-25 06:41 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:41 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 06:41 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:41 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 06:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 06:41 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:41 - INFO - ---------------------------------------------
2024-10-25 06:42 - INFO - ---------------------------------------------
2024-10-25 06:42 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 06:42 - INFO - 	 Train Loss: 0.055
2024-10-25 06:42 - INFO - 	 Val. Loss: 0.057
2024-10-25 06:42 - INFO - 	 ROC-AUC: 0.989
2024-10-25 06:42 - INFO - 	 PR-AUC: 0.897
2024-10-25 06:42 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 06:42 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 06:42 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 06:42 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 06:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.908
2024-10-25 06:42 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:42 - INFO - ---------------------------------------------
2024-10-25 06:44 - INFO - Fit the preprocessing pipeline
2024-10-25 06:44 - INFO - Training using device: cuda
2024-10-25 06:44 - INFO - Creating generators
2024-10-25 06:44 - INFO - The model has 651,257 trainable parameters
2024-10-25 06:44 - INFO - * Model:
2024-10-25 06:44 - INFO - * -----------
2024-10-25 06:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 06:44 - INFO - * -----------
2024-10-25 06:44 - INFO - Evaluating model based on: rocauc
2024-10-25 06:44 - INFO - Training..

2024-10-25 06:44 - INFO - ---------------------------------------------
2024-10-25 06:44 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 06:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97757
2024-10-25 06:44 - INFO - 	 Train Loss: 0.145
2024-10-25 06:44 - INFO - 	 Val. Loss: 0.085
2024-10-25 06:44 - INFO - 	 ROC-AUC: 0.978
2024-10-25 06:44 - INFO - 	 PR-AUC: 0.800
2024-10-25 06:44 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-25 06:44 - INFO - 	 Best Val. Loss: 0.085
2024-10-25 06:44 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 06:44 - INFO - 	 Best PR-AUC: 0.800
2024-10-25 06:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 06:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-25 06:44 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-25 06:44 - INFO - ---------------------------------------------
2024-10-25 06:45 - INFO - ---------------------------------------------
2024-10-25 06:45 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 06:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98467
2024-10-25 06:45 - INFO - 	 Train Loss: 0.080
2024-10-25 06:45 - INFO - 	 Val. Loss: 0.066
2024-10-25 06:45 - INFO - 	 ROC-AUC: 0.985
2024-10-25 06:45 - INFO - 	 PR-AUC: 0.866
2024-10-25 06:45 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:45 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 06:45 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 06:45 - INFO - 	 Best PR-AUC: 0.866
2024-10-25 06:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 06:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 06:45 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 06:45 - INFO - ---------------------------------------------
2024-10-25 06:45 - INFO - ---------------------------------------------
2024-10-25 06:45 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 06:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98513
2024-10-25 06:45 - INFO - 	 Train Loss: 0.071
2024-10-25 06:45 - INFO - 	 Val. Loss: 0.071
2024-10-25 06:45 - INFO - 	 ROC-AUC: 0.985
2024-10-25 06:45 - INFO - 	 PR-AUC: 0.857
2024-10-25 06:45 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 06:45 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 06:45 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 06:45 - INFO - 	 Best PR-AUC: 0.866
2024-10-25 06:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 06:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 06:45 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 06:45 - INFO - ---------------------------------------------
2024-10-25 06:46 - INFO - ---------------------------------------------
2024-10-25 06:46 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 06:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98554
2024-10-25 06:46 - INFO - 	 Train Loss: 0.066
2024-10-25 06:46 - INFO - 	 Val. Loss: 0.069
2024-10-25 06:46 - INFO - 	 ROC-AUC: 0.986
2024-10-25 06:46 - INFO - 	 PR-AUC: 0.867
2024-10-25 06:46 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 06:46 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 06:46 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 06:46 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 06:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 06:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-25 06:46 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 06:46 - INFO - ---------------------------------------------
2024-10-25 06:46 - INFO - ---------------------------------------------
2024-10-25 06:46 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 06:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98698
2024-10-25 06:46 - INFO - 	 Train Loss: 0.064
2024-10-25 06:46 - INFO - 	 Val. Loss: 0.063
2024-10-25 06:46 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:46 - INFO - 	 PR-AUC: 0.882
2024-10-25 06:46 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 06:46 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 06:46 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:46 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 06:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 06:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 06:46 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 06:46 - INFO - ---------------------------------------------
2024-10-25 06:47 - INFO - ---------------------------------------------
2024-10-25 06:47 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 06:47 - INFO - 	 Train Loss: 0.061
2024-10-25 06:47 - INFO - 	 Val. Loss: 0.064
2024-10-25 06:47 - INFO - 	 ROC-AUC: 0.986
2024-10-25 06:47 - INFO - 	 PR-AUC: 0.880
2024-10-25 06:47 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:47 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 06:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:47 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 06:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 06:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 06:47 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:47 - INFO - ---------------------------------------------
2024-10-25 06:47 - INFO - ---------------------------------------------
2024-10-25 06:47 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-25 06:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98761
2024-10-25 06:47 - INFO - 	 Train Loss: 0.058
2024-10-25 06:47 - INFO - 	 Val. Loss: 0.060
2024-10-25 06:47 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:47 - INFO - 	 PR-AUC: 0.893
2024-10-25 06:47 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:47 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:47 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:47 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 06:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 06:47 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:47 - INFO - ---------------------------------------------
2024-10-25 06:48 - INFO - ---------------------------------------------
2024-10-25 06:48 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 06:48 - INFO - 	 Train Loss: 0.056
2024-10-25 06:48 - INFO - 	 Val. Loss: 0.062
2024-10-25 06:48 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:48 - INFO - 	 PR-AUC: 0.887
2024-10-25 06:48 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 06:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:48 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 06:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 06:48 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 06:48 - INFO - ---------------------------------------------
2024-10-25 06:48 - INFO - ---------------------------------------------
2024-10-25 06:48 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 06:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98775
2024-10-25 06:48 - INFO - 	 Train Loss: 0.055
2024-10-25 06:48 - INFO - 	 Val. Loss: 0.061
2024-10-25 06:48 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:48 - INFO - 	 PR-AUC: 0.892
2024-10-25 06:48 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:48 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 06:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 06:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:48 - INFO - ---------------------------------------------
2024-10-25 06:49 - INFO - ---------------------------------------------
2024-10-25 06:49 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 06:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98822
2024-10-25 06:49 - INFO - 	 Train Loss: 0.053
2024-10-25 06:49 - INFO - 	 Val. Loss: 0.061
2024-10-25 06:49 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:49 - INFO - 	 PR-AUC: 0.887
2024-10-25 06:49 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:49 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 06:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:49 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 06:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 06:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 06:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 06:49 - INFO - ---------------------------------------------
2024-10-25 06:50 - INFO - Fit the preprocessing pipeline
2024-10-25 06:50 - INFO - Training using device: cuda
2024-10-25 06:50 - INFO - Creating generators
2024-10-25 06:50 - INFO - The model has 651,257 trainable parameters
2024-10-25 06:50 - INFO - * Model:
2024-10-25 06:50 - INFO - * -----------
2024-10-25 06:50 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 06:50 - INFO - * -----------
2024-10-25 06:50 - INFO - Evaluating model based on: rocauc
2024-10-25 06:50 - INFO - Training..

2024-10-25 06:51 - INFO - ---------------------------------------------
2024-10-25 06:51 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 06:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97973
2024-10-25 06:51 - INFO - 	 Train Loss: 0.152
2024-10-25 06:51 - INFO - 	 Val. Loss: 0.083
2024-10-25 06:51 - INFO - 	 ROC-AUC: 0.980
2024-10-25 06:51 - INFO - 	 PR-AUC: 0.820
2024-10-25 06:51 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 06:51 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 06:51 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 06:51 - INFO - 	 Best PR-AUC: 0.820
2024-10-25 06:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 06:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-25 06:51 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 06:51 - INFO - ---------------------------------------------
2024-10-25 06:51 - INFO - ---------------------------------------------
2024-10-25 06:51 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 06:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98451
2024-10-25 06:51 - INFO - 	 Train Loss: 0.081
2024-10-25 06:51 - INFO - 	 Val. Loss: 0.071
2024-10-25 06:51 - INFO - 	 ROC-AUC: 0.985
2024-10-25 06:51 - INFO - 	 PR-AUC: 0.874
2024-10-25 06:51 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 06:51 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 06:51 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 06:51 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 06:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 06:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 06:51 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 06:51 - INFO - ---------------------------------------------
2024-10-25 06:52 - INFO - ---------------------------------------------
2024-10-25 06:52 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 06:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98682
2024-10-25 06:52 - INFO - 	 Train Loss: 0.071
2024-10-25 06:52 - INFO - 	 Val. Loss: 0.064
2024-10-25 06:52 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:52 - INFO - 	 PR-AUC: 0.880
2024-10-25 06:52 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 06:52 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 06:52 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:52 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 06:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 06:52 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 06:52 - INFO - ---------------------------------------------
2024-10-25 06:53 - INFO - ---------------------------------------------
2024-10-25 06:53 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 06:53 - INFO - 	 Train Loss: 0.065
2024-10-25 06:53 - INFO - 	 Val. Loss: 0.065
2024-10-25 06:53 - INFO - 	 ROC-AUC: 0.986
2024-10-25 06:53 - INFO - 	 PR-AUC: 0.878
2024-10-25 06:53 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 06:53 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 06:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:53 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 06:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 06:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 06:53 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 06:53 - INFO - ---------------------------------------------
2024-10-25 06:53 - INFO - ---------------------------------------------
2024-10-25 06:53 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 06:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98844
2024-10-25 06:53 - INFO - 	 Train Loss: 0.061
2024-10-25 06:53 - INFO - 	 Val. Loss: 0.059
2024-10-25 06:53 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:53 - INFO - 	 PR-AUC: 0.892
2024-10-25 06:53 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 06:53 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:53 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 06:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 06:53 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:53 - INFO - ---------------------------------------------
2024-10-25 06:54 - INFO - ---------------------------------------------
2024-10-25 06:54 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 06:54 - INFO - 	 Train Loss: 0.059
2024-10-25 06:54 - INFO - 	 Val. Loss: 0.059
2024-10-25 06:54 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:54 - INFO - 	 PR-AUC: 0.892
2024-10-25 06:54 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 06:54 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:54 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:54 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 06:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 06:54 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:54 - INFO - ---------------------------------------------
2024-10-25 06:54 - INFO - ---------------------------------------------
2024-10-25 06:54 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 06:54 - INFO - 	 Train Loss: 0.057
2024-10-25 06:54 - INFO - 	 Val. Loss: 0.060
2024-10-25 06:54 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:54 - INFO - 	 PR-AUC: 0.892
2024-10-25 06:54 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 06:54 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:54 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:54 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 06:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-25 06:54 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:54 - INFO - ---------------------------------------------
2024-10-25 06:55 - INFO - ---------------------------------------------
2024-10-25 06:55 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 06:55 - INFO - 	 Train Loss: 0.056
2024-10-25 06:55 - INFO - 	 Val. Loss: 0.060
2024-10-25 06:55 - INFO - 	 ROC-AUC: 0.988
2024-10-25 06:55 - INFO - 	 PR-AUC: 0.895
2024-10-25 06:55 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 06:55 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 06:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 06:55 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 06:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 06:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 06:55 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 06:55 - INFO - ---------------------------------------------
2024-10-25 06:57 - INFO - Fit the preprocessing pipeline
2024-10-25 06:57 - INFO - Training using device: cuda
2024-10-25 06:57 - INFO - Creating generators
2024-10-25 06:57 - INFO - The model has 651,257 trainable parameters
2024-10-25 06:57 - INFO - * Model:
2024-10-25 06:57 - INFO - * -----------
2024-10-25 06:57 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 06:57 - INFO - * -----------
2024-10-25 06:57 - INFO - Evaluating model based on: rocauc
2024-10-25 06:57 - INFO - Training..

2024-10-25 06:57 - INFO - ---------------------------------------------
2024-10-25 06:57 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 06:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98068
2024-10-25 06:57 - INFO - 	 Train Loss: 0.154
2024-10-25 06:57 - INFO - 	 Val. Loss: 0.078
2024-10-25 06:57 - INFO - 	 ROC-AUC: 0.981
2024-10-25 06:57 - INFO - 	 PR-AUC: 0.820
2024-10-25 06:57 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 06:57 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 06:57 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 06:57 - INFO - 	 Best PR-AUC: 0.820
2024-10-25 06:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 06:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-25 06:57 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 06:57 - INFO - ---------------------------------------------
2024-10-25 06:58 - INFO - ---------------------------------------------
2024-10-25 06:58 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 06:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98453
2024-10-25 06:58 - INFO - 	 Train Loss: 0.082
2024-10-25 06:58 - INFO - 	 Val. Loss: 0.069
2024-10-25 06:58 - INFO - 	 ROC-AUC: 0.985
2024-10-25 06:58 - INFO - 	 PR-AUC: 0.856
2024-10-25 06:58 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 06:58 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 06:58 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 06:58 - INFO - 	 Best PR-AUC: 0.856
2024-10-25 06:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 06:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 06:58 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 06:58 - INFO - ---------------------------------------------
2024-10-25 06:58 - INFO - ---------------------------------------------
2024-10-25 06:58 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 06:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98614
2024-10-25 06:58 - INFO - 	 Train Loss: 0.071
2024-10-25 06:58 - INFO - 	 Val. Loss: 0.066
2024-10-25 06:58 - INFO - 	 ROC-AUC: 0.986
2024-10-25 06:58 - INFO - 	 PR-AUC: 0.871
2024-10-25 06:58 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 06:58 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 06:58 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 06:58 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 06:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 06:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 06:58 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 06:58 - INFO - ---------------------------------------------
2024-10-25 06:59 - INFO - ---------------------------------------------
2024-10-25 06:59 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 06:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98616
2024-10-25 06:59 - INFO - 	 Train Loss: 0.066
2024-10-25 06:59 - INFO - 	 Val. Loss: 0.065
2024-10-25 06:59 - INFO - 	 ROC-AUC: 0.986
2024-10-25 06:59 - INFO - 	 PR-AUC: 0.877
2024-10-25 06:59 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 06:59 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 06:59 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 06:59 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 06:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 06:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-25 06:59 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 06:59 - INFO - ---------------------------------------------
2024-10-25 06:59 - INFO - ---------------------------------------------
2024-10-25 06:59 - INFO - Epoch: 05 | Time: 0m 30s
2024-10-25 06:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98735
2024-10-25 06:59 - INFO - 	 Train Loss: 0.064
2024-10-25 06:59 - INFO - 	 Val. Loss: 0.062
2024-10-25 06:59 - INFO - 	 ROC-AUC: 0.987
2024-10-25 06:59 - INFO - 	 PR-AUC: 0.889
2024-10-25 06:59 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 06:59 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 06:59 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 06:59 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 06:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 06:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 06:59 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 06:59 - INFO - ---------------------------------------------
2024-10-25 07:00 - INFO - ---------------------------------------------
2024-10-25 07:00 - INFO - Epoch: 06 | Time: 0m 30s
2024-10-25 07:00 - INFO - 	 Train Loss: 0.060
2024-10-25 07:00 - INFO - 	 Val. Loss: 0.062
2024-10-25 07:00 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:00 - INFO - 	 PR-AUC: 0.888
2024-10-25 07:00 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 07:00 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 07:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:00 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 07:00 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 07:00 - INFO - ---------------------------------------------
2024-10-25 07:00 - INFO - ---------------------------------------------
2024-10-25 07:00 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 07:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98815
2024-10-25 07:00 - INFO - 	 Train Loss: 0.058
2024-10-25 07:00 - INFO - 	 Val. Loss: 0.060
2024-10-25 07:00 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:00 - INFO - 	 PR-AUC: 0.894
2024-10-25 07:00 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:00 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 07:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:00 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 07:00 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:00 - INFO - ---------------------------------------------
2024-10-25 07:01 - INFO - ---------------------------------------------
2024-10-25 07:01 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 07:01 - INFO - 	 Train Loss: 0.055
2024-10-25 07:01 - INFO - 	 Val. Loss: 0.061
2024-10-25 07:01 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:01 - INFO - 	 PR-AUC: 0.886
2024-10-25 07:01 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:01 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 07:01 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:01 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 07:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 07:01 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:01 - INFO - ---------------------------------------------
2024-10-25 07:01 - INFO - ---------------------------------------------
2024-10-25 07:01 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 07:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98939
2024-10-25 07:01 - INFO - 	 Train Loss: 0.054
2024-10-25 07:01 - INFO - 	 Val. Loss: 0.056
2024-10-25 07:01 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:01 - INFO - 	 PR-AUC: 0.896
2024-10-25 07:01 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:01 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 07:01 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:01 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 07:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 07:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-25 07:01 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:01 - INFO - ---------------------------------------------
2024-10-25 07:02 - INFO - ---------------------------------------------
2024-10-25 07:02 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 07:02 - INFO - 	 Train Loss: 0.053
2024-10-25 07:02 - INFO - 	 Val. Loss: 0.059
2024-10-25 07:02 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:02 - INFO - 	 PR-AUC: 0.897
2024-10-25 07:02 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:02 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 07:02 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:02 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 07:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 07:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-25 07:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:02 - INFO - ---------------------------------------------
2024-10-25 07:03 - INFO - Fit the preprocessing pipeline
2024-10-25 07:03 - INFO - Training using device: cuda
2024-10-25 07:03 - INFO - Creating generators
2024-10-25 07:03 - INFO - The model has 651,257 trainable parameters
2024-10-25 07:03 - INFO - * Model:
2024-10-25 07:03 - INFO - * -----------
2024-10-25 07:03 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 07:03 - INFO - * -----------
2024-10-25 07:03 - INFO - Evaluating model based on: rocauc
2024-10-25 07:03 - INFO - Training..

2024-10-25 07:04 - INFO - ---------------------------------------------
2024-10-25 07:04 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 07:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97994
2024-10-25 07:04 - INFO - 	 Train Loss: 0.145
2024-10-25 07:04 - INFO - 	 Val. Loss: 0.083
2024-10-25 07:04 - INFO - 	 ROC-AUC: 0.980
2024-10-25 07:04 - INFO - 	 PR-AUC: 0.808
2024-10-25 07:04 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 07:04 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 07:04 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 07:04 - INFO - 	 Best PR-AUC: 0.808
2024-10-25 07:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 07:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-25 07:04 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 07:04 - INFO - ---------------------------------------------
2024-10-25 07:04 - INFO - ---------------------------------------------
2024-10-25 07:04 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 07:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98618
2024-10-25 07:04 - INFO - 	 Train Loss: 0.081
2024-10-25 07:04 - INFO - 	 Val. Loss: 0.065
2024-10-25 07:04 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:04 - INFO - 	 PR-AUC: 0.876
2024-10-25 07:04 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 07:04 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 07:04 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 07:04 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 07:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 07:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 07:04 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 07:04 - INFO - ---------------------------------------------
2024-10-25 07:05 - INFO - ---------------------------------------------
2024-10-25 07:05 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 07:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9867
2024-10-25 07:05 - INFO - 	 Train Loss: 0.069
2024-10-25 07:05 - INFO - 	 Val. Loss: 0.063
2024-10-25 07:05 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:05 - INFO - 	 PR-AUC: 0.879
2024-10-25 07:05 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:05 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 07:05 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:05 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 07:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 07:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 07:05 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 07:05 - INFO - ---------------------------------------------
2024-10-25 07:05 - INFO - ---------------------------------------------
2024-10-25 07:05 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 07:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98673
2024-10-25 07:05 - INFO - 	 Train Loss: 0.065
2024-10-25 07:05 - INFO - 	 Val. Loss: 0.062
2024-10-25 07:05 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:05 - INFO - 	 PR-AUC: 0.884
2024-10-25 07:05 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 07:05 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 07:05 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:05 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 07:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 07:05 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 07:05 - INFO - ---------------------------------------------
2024-10-25 07:06 - INFO - ---------------------------------------------
2024-10-25 07:06 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 07:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98842
2024-10-25 07:06 - INFO - 	 Train Loss: 0.060
2024-10-25 07:06 - INFO - 	 Val. Loss: 0.057
2024-10-25 07:06 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:06 - INFO - 	 PR-AUC: 0.894
2024-10-25 07:06 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:06 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:06 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 07:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 07:06 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:06 - INFO - ---------------------------------------------
2024-10-25 07:07 - INFO - ---------------------------------------------
2024-10-25 07:07 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 07:07 - INFO - 	 Train Loss: 0.059
2024-10-25 07:07 - INFO - 	 Val. Loss: 0.061
2024-10-25 07:07 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:07 - INFO - 	 PR-AUC: 0.895
2024-10-25 07:07 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:07 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:07 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:07 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 07:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-25 07:07 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:07 - INFO - ---------------------------------------------
2024-10-25 07:07 - INFO - ---------------------------------------------
2024-10-25 07:07 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 07:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9889
2024-10-25 07:07 - INFO - 	 Train Loss: 0.057
2024-10-25 07:07 - INFO - 	 Val. Loss: 0.056
2024-10-25 07:07 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:07 - INFO - 	 PR-AUC: 0.904
2024-10-25 07:07 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 07:07 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 07:07 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:07 - INFO - 	 Best PR-AUC: 0.904
2024-10-25 07:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-25 07:07 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 07:07 - INFO - ---------------------------------------------
2024-10-25 07:08 - INFO - ---------------------------------------------
2024-10-25 07:08 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 07:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98895
2024-10-25 07:08 - INFO - 	 Train Loss: 0.055
2024-10-25 07:08 - INFO - 	 Val. Loss: 0.055
2024-10-25 07:08 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:08 - INFO - 	 PR-AUC: 0.906
2024-10-25 07:08 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:08 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 07:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:08 - INFO - 	 Best PR-AUC: 0.906
2024-10-25 07:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-25 07:08 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 07:08 - INFO - ---------------------------------------------
2024-10-25 07:08 - INFO - ---------------------------------------------
2024-10-25 07:08 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 07:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98909
2024-10-25 07:08 - INFO - 	 Train Loss: 0.054
2024-10-25 07:08 - INFO - 	 Val. Loss: 0.056
2024-10-25 07:08 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:08 - INFO - 	 PR-AUC: 0.897
2024-10-25 07:08 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:08 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 07:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:08 - INFO - 	 Best PR-AUC: 0.906
2024-10-25 07:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-25 07:08 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 07:08 - INFO - ---------------------------------------------
2024-10-25 07:09 - INFO - ---------------------------------------------
2024-10-25 07:09 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 07:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98914
2024-10-25 07:09 - INFO - 	 Train Loss: 0.052
2024-10-25 07:09 - INFO - 	 Val. Loss: 0.057
2024-10-25 07:09 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:09 - INFO - 	 PR-AUC: 0.904
2024-10-25 07:09 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:09 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 07:09 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:09 - INFO - 	 Best PR-AUC: 0.906
2024-10-25 07:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-25 07:09 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 07:09 - INFO - ---------------------------------------------
2024-10-25 07:10 - INFO - Fit the preprocessing pipeline
2024-10-25 07:10 - INFO - Training using device: cuda
2024-10-25 07:10 - INFO - Creating generators
2024-10-25 07:10 - INFO - The model has 651,257 trainable parameters
2024-10-25 07:10 - INFO - * Model:
2024-10-25 07:10 - INFO - * -----------
2024-10-25 07:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 07:10 - INFO - * -----------
2024-10-25 07:10 - INFO - Evaluating model based on: rocauc
2024-10-25 07:10 - INFO - Training..

2024-10-25 07:11 - INFO - ---------------------------------------------
2024-10-25 07:11 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 07:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98041
2024-10-25 07:11 - INFO - 	 Train Loss: 0.147
2024-10-25 07:11 - INFO - 	 Val. Loss: 0.078
2024-10-25 07:11 - INFO - 	 ROC-AUC: 0.980
2024-10-25 07:11 - INFO - 	 PR-AUC: 0.831
2024-10-25 07:11 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 07:11 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 07:11 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 07:11 - INFO - 	 Best PR-AUC: 0.831
2024-10-25 07:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 07:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-25 07:11 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 07:11 - INFO - ---------------------------------------------
2024-10-25 07:11 - INFO - ---------------------------------------------
2024-10-25 07:11 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 07:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98471
2024-10-25 07:11 - INFO - 	 Train Loss: 0.081
2024-10-25 07:11 - INFO - 	 Val. Loss: 0.078
2024-10-25 07:11 - INFO - 	 ROC-AUC: 0.985
2024-10-25 07:11 - INFO - 	 PR-AUC: 0.868
2024-10-25 07:11 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 07:11 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 07:11 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 07:11 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 07:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 07:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-25 07:11 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 07:11 - INFO - ---------------------------------------------
2024-10-25 07:12 - INFO - ---------------------------------------------
2024-10-25 07:12 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 07:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98553
2024-10-25 07:12 - INFO - 	 Train Loss: 0.072
2024-10-25 07:12 - INFO - 	 Val. Loss: 0.072
2024-10-25 07:12 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:12 - INFO - 	 PR-AUC: 0.873
2024-10-25 07:12 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 07:12 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 07:12 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 07:12 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 07:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 07:12 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 07:12 - INFO - ---------------------------------------------
2024-10-25 07:12 - INFO - ---------------------------------------------
2024-10-25 07:12 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 07:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98771
2024-10-25 07:12 - INFO - 	 Train Loss: 0.066
2024-10-25 07:12 - INFO - 	 Val. Loss: 0.063
2024-10-25 07:12 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:12 - INFO - 	 PR-AUC: 0.892
2024-10-25 07:12 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 07:12 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 07:12 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:12 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 07:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 07:12 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 07:12 - INFO - ---------------------------------------------
2024-10-25 07:13 - INFO - ---------------------------------------------
2024-10-25 07:13 - INFO - Epoch: 05 | Time: 0m 30s
2024-10-25 07:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98816
2024-10-25 07:13 - INFO - 	 Train Loss: 0.062
2024-10-25 07:13 - INFO - 	 Val. Loss: 0.062
2024-10-25 07:13 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:13 - INFO - 	 PR-AUC: 0.889
2024-10-25 07:13 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 07:13 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 07:13 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:13 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 07:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 07:13 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 07:13 - INFO - ---------------------------------------------
2024-10-25 07:13 - INFO - ---------------------------------------------
2024-10-25 07:13 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 07:13 - INFO - 	 Train Loss: 0.059
2024-10-25 07:13 - INFO - 	 Val. Loss: 0.057
2024-10-25 07:13 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:13 - INFO - 	 PR-AUC: 0.890
2024-10-25 07:13 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 07:13 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:13 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:13 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 07:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 07:13 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 07:13 - INFO - ---------------------------------------------
2024-10-25 07:14 - INFO - ---------------------------------------------
2024-10-25 07:14 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 07:14 - INFO - 	 Train Loss: 0.058
2024-10-25 07:14 - INFO - 	 Val. Loss: 0.060
2024-10-25 07:14 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:14 - INFO - 	 PR-AUC: 0.895
2024-10-25 07:14 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:14 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:14 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 07:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 07:14 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 07:14 - INFO - ---------------------------------------------
2024-10-25 07:14 - INFO - ---------------------------------------------
2024-10-25 07:14 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 07:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98895
2024-10-25 07:14 - INFO - 	 Train Loss: 0.056
2024-10-25 07:14 - INFO - 	 Val. Loss: 0.057
2024-10-25 07:14 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:14 - INFO - 	 PR-AUC: 0.894
2024-10-25 07:14 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 07:14 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:14 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:14 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 07:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-25 07:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 07:14 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 07:14 - INFO - ---------------------------------------------
2024-10-25 07:15 - INFO - ---------------------------------------------
2024-10-25 07:15 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 07:15 - INFO - 	 Train Loss: 0.055
2024-10-25 07:15 - INFO - 	 Val. Loss: 0.058
2024-10-25 07:15 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:15 - INFO - 	 PR-AUC: 0.893
2024-10-25 07:15 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:15 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:15 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:15 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 07:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-25 07:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 07:15 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 07:15 - INFO - ---------------------------------------------
2024-10-25 07:15 - INFO - ---------------------------------------------
2024-10-25 07:15 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 07:15 - INFO - 	 Train Loss: 0.052
2024-10-25 07:15 - INFO - 	 Val. Loss: 0.058
2024-10-25 07:15 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:15 - INFO - 	 PR-AUC: 0.893
2024-10-25 07:15 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:15 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:15 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:15 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 07:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-25 07:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 07:15 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 07:15 - INFO - ---------------------------------------------
2024-10-25 07:17 - INFO - Fit the preprocessing pipeline
2024-10-25 07:17 - INFO - Training using device: cuda
2024-10-25 07:17 - INFO - Creating generators
2024-10-25 07:17 - INFO - The model has 651,257 trainable parameters
2024-10-25 07:17 - INFO - * Model:
2024-10-25 07:17 - INFO - * -----------
2024-10-25 07:17 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 07:17 - INFO - * -----------
2024-10-25 07:17 - INFO - Evaluating model based on: rocauc
2024-10-25 07:17 - INFO - Training..

2024-10-25 07:17 - INFO - ---------------------------------------------
2024-10-25 07:17 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 07:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97991
2024-10-25 07:17 - INFO - 	 Train Loss: 0.149
2024-10-25 07:17 - INFO - 	 Val. Loss: 0.081
2024-10-25 07:17 - INFO - 	 ROC-AUC: 0.980
2024-10-25 07:17 - INFO - 	 PR-AUC: 0.827
2024-10-25 07:17 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 07:17 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 07:17 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 07:17 - INFO - 	 Best PR-AUC: 0.827
2024-10-25 07:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 07:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-25 07:17 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 07:17 - INFO - ---------------------------------------------
2024-10-25 07:18 - INFO - ---------------------------------------------
2024-10-25 07:18 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 07:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98519
2024-10-25 07:18 - INFO - 	 Train Loss: 0.081
2024-10-25 07:18 - INFO - 	 Val. Loss: 0.074
2024-10-25 07:18 - INFO - 	 ROC-AUC: 0.985
2024-10-25 07:18 - INFO - 	 PR-AUC: 0.872
2024-10-25 07:18 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:18 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 07:18 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 07:18 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 07:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 07:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-25 07:18 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 07:18 - INFO - ---------------------------------------------
2024-10-25 07:18 - INFO - ---------------------------------------------
2024-10-25 07:18 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 07:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98695
2024-10-25 07:18 - INFO - 	 Train Loss: 0.072
2024-10-25 07:18 - INFO - 	 Val. Loss: 0.074
2024-10-25 07:18 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:18 - INFO - 	 PR-AUC: 0.887
2024-10-25 07:18 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:18 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 07:18 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:18 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 07:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 07:18 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:18 - INFO - ---------------------------------------------
2024-10-25 07:19 - INFO - ---------------------------------------------
2024-10-25 07:19 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 07:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98702
2024-10-25 07:19 - INFO - 	 Train Loss: 0.067
2024-10-25 07:19 - INFO - 	 Val. Loss: 0.065
2024-10-25 07:19 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:19 - INFO - 	 PR-AUC: 0.872
2024-10-25 07:19 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:19 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 07:19 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:19 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 07:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 07:19 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:19 - INFO - ---------------------------------------------
2024-10-25 07:19 - INFO - ---------------------------------------------
2024-10-25 07:19 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 07:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9874
2024-10-25 07:19 - INFO - 	 Train Loss: 0.062
2024-10-25 07:19 - INFO - 	 Val. Loss: 0.064
2024-10-25 07:19 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:19 - INFO - 	 PR-AUC: 0.877
2024-10-25 07:19 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:19 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 07:19 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:19 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 07:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 07:19 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:19 - INFO - ---------------------------------------------
2024-10-25 07:20 - INFO - ---------------------------------------------
2024-10-25 07:20 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 07:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98856
2024-10-25 07:20 - INFO - 	 Train Loss: 0.060
2024-10-25 07:20 - INFO - 	 Val. Loss: 0.062
2024-10-25 07:20 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:20 - INFO - 	 PR-AUC: 0.888
2024-10-25 07:20 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 07:20 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 07:20 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:20 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 07:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 07:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 07:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:20 - INFO - ---------------------------------------------
2024-10-25 07:20 - INFO - ---------------------------------------------
2024-10-25 07:20 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 07:20 - INFO - 	 Train Loss: 0.058
2024-10-25 07:20 - INFO - 	 Val. Loss: 0.063
2024-10-25 07:20 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:20 - INFO - 	 PR-AUC: 0.887
2024-10-25 07:20 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:20 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 07:20 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:20 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 07:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 07:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 07:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:20 - INFO - ---------------------------------------------
2024-10-25 07:21 - INFO - ---------------------------------------------
2024-10-25 07:21 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 07:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98963
2024-10-25 07:21 - INFO - 	 Train Loss: 0.055
2024-10-25 07:21 - INFO - 	 Val. Loss: 0.055
2024-10-25 07:21 - INFO - 	 ROC-AUC: 0.990
2024-10-25 07:21 - INFO - 	 PR-AUC: 0.901
2024-10-25 07:21 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:21 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 07:21 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 07:21 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 07:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 07:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-25 07:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:21 - INFO - ---------------------------------------------
2024-10-25 07:21 - INFO - ---------------------------------------------
2024-10-25 07:21 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 07:21 - INFO - 	 Train Loss: 0.053
2024-10-25 07:21 - INFO - 	 Val. Loss: 0.058
2024-10-25 07:21 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:21 - INFO - 	 PR-AUC: 0.903
2024-10-25 07:21 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 07:21 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 07:21 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 07:21 - INFO - 	 Best PR-AUC: 0.903
2024-10-25 07:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 07:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-25 07:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:21 - INFO - ---------------------------------------------
2024-10-25 07:22 - INFO - ---------------------------------------------
2024-10-25 07:22 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 07:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98982
2024-10-25 07:22 - INFO - 	 Train Loss: 0.053
2024-10-25 07:22 - INFO - 	 Val. Loss: 0.057
2024-10-25 07:22 - INFO - 	 ROC-AUC: 0.990
2024-10-25 07:22 - INFO - 	 PR-AUC: 0.901
2024-10-25 07:22 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 07:22 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 07:22 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 07:22 - INFO - 	 Best PR-AUC: 0.903
2024-10-25 07:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-25 07:22 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 07:22 - INFO - ---------------------------------------------
2024-10-25 07:23 - INFO - Fit the preprocessing pipeline
2024-10-25 07:23 - INFO - Training using device: cuda
2024-10-25 07:23 - INFO - Creating generators
2024-10-25 07:23 - INFO - The model has 651,257 trainable parameters
2024-10-25 07:23 - INFO - * Model:
2024-10-25 07:23 - INFO - * -----------
2024-10-25 07:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 07:23 - INFO - * -----------
2024-10-25 07:23 - INFO - Evaluating model based on: rocauc
2024-10-25 07:23 - INFO - Training..

2024-10-25 07:24 - INFO - ---------------------------------------------
2024-10-25 07:24 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 07:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97995
2024-10-25 07:24 - INFO - 	 Train Loss: 0.152
2024-10-25 07:24 - INFO - 	 Val. Loss: 0.081
2024-10-25 07:24 - INFO - 	 ROC-AUC: 0.980
2024-10-25 07:24 - INFO - 	 PR-AUC: 0.807
2024-10-25 07:24 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 07:24 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 07:24 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 07:24 - INFO - 	 Best PR-AUC: 0.807
2024-10-25 07:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 07:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-25 07:24 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-25 07:24 - INFO - ---------------------------------------------
2024-10-25 07:25 - INFO - ---------------------------------------------
2024-10-25 07:25 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 07:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98485
2024-10-25 07:25 - INFO - 	 Train Loss: 0.082
2024-10-25 07:25 - INFO - 	 Val. Loss: 0.068
2024-10-25 07:25 - INFO - 	 ROC-AUC: 0.985
2024-10-25 07:25 - INFO - 	 PR-AUC: 0.869
2024-10-25 07:25 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 07:25 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 07:25 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 07:25 - INFO - 	 Best PR-AUC: 0.869
2024-10-25 07:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 07:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-25 07:25 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 07:25 - INFO - ---------------------------------------------
2024-10-25 07:25 - INFO - ---------------------------------------------
2024-10-25 07:25 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 07:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98572
2024-10-25 07:25 - INFO - 	 Train Loss: 0.071
2024-10-25 07:25 - INFO - 	 Val. Loss: 0.065
2024-10-25 07:25 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:25 - INFO - 	 PR-AUC: 0.874
2024-10-25 07:25 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 07:25 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 07:25 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 07:25 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 07:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 07:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-25 07:25 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 07:25 - INFO - ---------------------------------------------
2024-10-25 07:26 - INFO - ---------------------------------------------
2024-10-25 07:26 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 07:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98741
2024-10-25 07:26 - INFO - 	 Train Loss: 0.066
2024-10-25 07:26 - INFO - 	 Val. Loss: 0.064
2024-10-25 07:26 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:26 - INFO - 	 PR-AUC: 0.883
2024-10-25 07:26 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:26 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 07:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:26 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 07:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 07:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 07:26 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 07:26 - INFO - ---------------------------------------------
2024-10-25 07:26 - INFO - ---------------------------------------------
2024-10-25 07:26 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 07:26 - INFO - 	 Train Loss: 0.063
2024-10-25 07:26 - INFO - 	 Val. Loss: 0.067
2024-10-25 07:26 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:26 - INFO - 	 PR-AUC: 0.880
2024-10-25 07:26 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 07:26 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 07:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:26 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 07:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 07:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 07:26 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 07:26 - INFO - ---------------------------------------------
2024-10-25 07:27 - INFO - ---------------------------------------------
2024-10-25 07:27 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 07:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98769
2024-10-25 07:27 - INFO - 	 Train Loss: 0.059
2024-10-25 07:27 - INFO - 	 Val. Loss: 0.061
2024-10-25 07:27 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:27 - INFO - 	 PR-AUC: 0.892
2024-10-25 07:27 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 07:27 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 07:27 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:27 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 07:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 07:27 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 07:27 - INFO - ---------------------------------------------
2024-10-25 07:27 - INFO - ---------------------------------------------
2024-10-25 07:27 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 07:27 - INFO - 	 Train Loss: 0.058
2024-10-25 07:27 - INFO - 	 Val. Loss: 0.064
2024-10-25 07:27 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:27 - INFO - 	 PR-AUC: 0.885
2024-10-25 07:27 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:27 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 07:27 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:27 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 07:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 07:27 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 07:27 - INFO - ---------------------------------------------
2024-10-25 07:28 - INFO - ---------------------------------------------
2024-10-25 07:28 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 07:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98836
2024-10-25 07:28 - INFO - 	 Train Loss: 0.057
2024-10-25 07:28 - INFO - 	 Val. Loss: 0.061
2024-10-25 07:28 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:28 - INFO - 	 PR-AUC: 0.896
2024-10-25 07:28 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:28 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 07:28 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:28 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 07:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 07:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:28 - INFO - ---------------------------------------------
2024-10-25 07:28 - INFO - ---------------------------------------------
2024-10-25 07:28 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 07:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98851
2024-10-25 07:28 - INFO - 	 Train Loss: 0.055
2024-10-25 07:28 - INFO - 	 Val. Loss: 0.059
2024-10-25 07:28 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:28 - INFO - 	 PR-AUC: 0.898
2024-10-25 07:28 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:28 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 07:28 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:28 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 07:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-25 07:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:28 - INFO - ---------------------------------------------
2024-10-25 07:29 - INFO - ---------------------------------------------
2024-10-25 07:29 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 07:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98922
2024-10-25 07:29 - INFO - 	 Train Loss: 0.053
2024-10-25 07:29 - INFO - 	 Val. Loss: 0.057
2024-10-25 07:29 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:29 - INFO - 	 PR-AUC: 0.902
2024-10-25 07:29 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:29 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:29 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:29 - INFO - 	 Best PR-AUC: 0.902
2024-10-25 07:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-25 07:29 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:29 - INFO - ---------------------------------------------
2024-10-25 07:30 - INFO - Fit the preprocessing pipeline
2024-10-25 07:30 - INFO - Training using device: cuda
2024-10-25 07:30 - INFO - Creating generators
2024-10-25 07:30 - INFO - The model has 651,257 trainable parameters
2024-10-25 07:30 - INFO - * Model:
2024-10-25 07:30 - INFO - * -----------
2024-10-25 07:30 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 07:30 - INFO - * -----------
2024-10-25 07:30 - INFO - Evaluating model based on: rocauc
2024-10-25 07:30 - INFO - Training..

2024-10-25 07:31 - INFO - ---------------------------------------------
2024-10-25 07:31 - INFO - Epoch: 01 | Time: 0m 30s
2024-10-25 07:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97282
2024-10-25 07:31 - INFO - 	 Train Loss: 0.153
2024-10-25 07:31 - INFO - 	 Val. Loss: 0.100
2024-10-25 07:31 - INFO - 	 ROC-AUC: 0.973
2024-10-25 07:31 - INFO - 	 PR-AUC: 0.785
2024-10-25 07:31 - INFO - 	 Recall for 0.4 precision: 0.952
2024-10-25 07:31 - INFO - 	 Best Val. Loss: 0.100
2024-10-25 07:31 - INFO - 	 Best ROC-AUC: 0.973
2024-10-25 07:31 - INFO - 	 Best PR-AUC: 0.785
2024-10-25 07:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 07:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.766
2024-10-25 07:31 - INFO - 	 Best Recall for 0.4 precision: 0.952
2024-10-25 07:31 - INFO - ---------------------------------------------
2024-10-25 07:31 - INFO - ---------------------------------------------
2024-10-25 07:31 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 07:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98584
2024-10-25 07:31 - INFO - 	 Train Loss: 0.083
2024-10-25 07:31 - INFO - 	 Val. Loss: 0.065
2024-10-25 07:31 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:31 - INFO - 	 PR-AUC: 0.869
2024-10-25 07:31 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 07:31 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 07:31 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 07:31 - INFO - 	 Best PR-AUC: 0.869
2024-10-25 07:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 07:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-25 07:31 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 07:31 - INFO - ---------------------------------------------
2024-10-25 07:32 - INFO - ---------------------------------------------
2024-10-25 07:32 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 07:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98638
2024-10-25 07:32 - INFO - 	 Train Loss: 0.072
2024-10-25 07:32 - INFO - 	 Val. Loss: 0.062
2024-10-25 07:32 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:32 - INFO - 	 PR-AUC: 0.872
2024-10-25 07:32 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 07:32 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 07:32 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 07:32 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 07:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 07:32 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 07:32 - INFO - ---------------------------------------------
2024-10-25 07:32 - INFO - ---------------------------------------------
2024-10-25 07:32 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 07:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9874
2024-10-25 07:32 - INFO - 	 Train Loss: 0.067
2024-10-25 07:32 - INFO - 	 Val. Loss: 0.061
2024-10-25 07:32 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:32 - INFO - 	 PR-AUC: 0.882
2024-10-25 07:32 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:32 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 07:32 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:32 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 07:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-25 07:32 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 07:32 - INFO - ---------------------------------------------
2024-10-25 07:33 - INFO - ---------------------------------------------
2024-10-25 07:33 - INFO - Epoch: 05 | Time: 0m 30s
2024-10-25 07:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98759
2024-10-25 07:33 - INFO - 	 Train Loss: 0.062
2024-10-25 07:33 - INFO - 	 Val. Loss: 0.061
2024-10-25 07:33 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:33 - INFO - 	 PR-AUC: 0.889
2024-10-25 07:33 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:33 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 07:33 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:33 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 07:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 07:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:33 - INFO - ---------------------------------------------
2024-10-25 07:33 - INFO - ---------------------------------------------
2024-10-25 07:33 - INFO - Epoch: 06 | Time: 0m 30s
2024-10-25 07:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98847
2024-10-25 07:33 - INFO - 	 Train Loss: 0.060
2024-10-25 07:33 - INFO - 	 Val. Loss: 0.057
2024-10-25 07:33 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:33 - INFO - 	 PR-AUC: 0.895
2024-10-25 07:33 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:33 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:33 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:33 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 07:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-25 07:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:33 - INFO - ---------------------------------------------
2024-10-25 07:34 - INFO - ---------------------------------------------
2024-10-25 07:34 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 07:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9886
2024-10-25 07:34 - INFO - 	 Train Loss: 0.058
2024-10-25 07:34 - INFO - 	 Val. Loss: 0.060
2024-10-25 07:34 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:34 - INFO - 	 PR-AUC: 0.889
2024-10-25 07:34 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:34 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:34 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:34 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 07:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-25 07:34 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:34 - INFO - ---------------------------------------------
2024-10-25 07:34 - INFO - ---------------------------------------------
2024-10-25 07:34 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 07:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98918
2024-10-25 07:34 - INFO - 	 Train Loss: 0.056
2024-10-25 07:34 - INFO - 	 Val. Loss: 0.056
2024-10-25 07:34 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:34 - INFO - 	 PR-AUC: 0.905
2024-10-25 07:34 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:34 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 07:34 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:34 - INFO - 	 Best PR-AUC: 0.905
2024-10-25 07:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 07:34 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:34 - INFO - ---------------------------------------------
2024-10-25 07:35 - INFO - ---------------------------------------------
2024-10-25 07:35 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 07:35 - INFO - 	 Train Loss: 0.054
2024-10-25 07:35 - INFO - 	 Val. Loss: 0.057
2024-10-25 07:35 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:35 - INFO - 	 PR-AUC: 0.899
2024-10-25 07:35 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:35 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 07:35 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:35 - INFO - 	 Best PR-AUC: 0.905
2024-10-25 07:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 07:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:35 - INFO - ---------------------------------------------
2024-10-25 07:35 - INFO - ---------------------------------------------
2024-10-25 07:35 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 07:35 - INFO - 	 Train Loss: 0.052
2024-10-25 07:35 - INFO - 	 Val. Loss: 0.058
2024-10-25 07:35 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:35 - INFO - 	 PR-AUC: 0.898
2024-10-25 07:35 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:35 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 07:35 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:35 - INFO - 	 Best PR-AUC: 0.905
2024-10-25 07:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 07:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:35 - INFO - ---------------------------------------------
2024-10-25 07:37 - INFO - Fit the preprocessing pipeline
2024-10-25 07:37 - INFO - Training using device: cuda
2024-10-25 07:37 - INFO - Creating generators
2024-10-25 07:37 - INFO - The model has 651,257 trainable parameters
2024-10-25 07:37 - INFO - * Model:
2024-10-25 07:37 - INFO - * -----------
2024-10-25 07:37 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 07:37 - INFO - * -----------
2024-10-25 07:37 - INFO - Evaluating model based on: rocauc
2024-10-25 07:37 - INFO - Training..

2024-10-25 07:37 - INFO - ---------------------------------------------
2024-10-25 07:37 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 07:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98037
2024-10-25 07:37 - INFO - 	 Train Loss: 0.161
2024-10-25 07:37 - INFO - 	 Val. Loss: 0.079
2024-10-25 07:37 - INFO - 	 ROC-AUC: 0.980
2024-10-25 07:37 - INFO - 	 PR-AUC: 0.825
2024-10-25 07:37 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 07:37 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 07:37 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 07:37 - INFO - 	 Best PR-AUC: 0.825
2024-10-25 07:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-25 07:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-25 07:37 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 07:37 - INFO - ---------------------------------------------
2024-10-25 07:38 - INFO - ---------------------------------------------
2024-10-25 07:38 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 07:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98664
2024-10-25 07:38 - INFO - 	 Train Loss: 0.081
2024-10-25 07:38 - INFO - 	 Val. Loss: 0.064
2024-10-25 07:38 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:38 - INFO - 	 PR-AUC: 0.875
2024-10-25 07:38 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:38 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 07:38 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:38 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 07:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 07:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 07:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:38 - INFO - ---------------------------------------------
2024-10-25 07:39 - INFO - ---------------------------------------------
2024-10-25 07:39 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 07:39 - INFO - 	 Train Loss: 0.071
2024-10-25 07:39 - INFO - 	 Val. Loss: 0.067
2024-10-25 07:39 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:39 - INFO - 	 PR-AUC: 0.869
2024-10-25 07:39 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 07:39 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 07:39 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:39 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 07:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 07:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 07:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:39 - INFO - ---------------------------------------------
2024-10-25 07:39 - INFO - ---------------------------------------------
2024-10-25 07:39 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 07:39 - INFO - 	 Train Loss: 0.066
2024-10-25 07:39 - INFO - 	 Val. Loss: 0.067
2024-10-25 07:39 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:39 - INFO - 	 PR-AUC: 0.866
2024-10-25 07:39 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 07:39 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 07:39 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:39 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 07:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 07:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 07:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:39 - INFO - ---------------------------------------------
2024-10-25 07:40 - INFO - ---------------------------------------------
2024-10-25 07:40 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-25 07:40 - INFO - 	 Train Loss: 0.063
2024-10-25 07:40 - INFO - 	 Val. Loss: 0.065
2024-10-25 07:40 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:40 - INFO - 	 PR-AUC: 0.871
2024-10-25 07:40 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 07:40 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 07:40 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:40 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 07:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 07:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 07:40 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:40 - INFO - ---------------------------------------------
2024-10-25 07:40 - INFO - ---------------------------------------------
2024-10-25 07:40 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 07:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98679
2024-10-25 07:40 - INFO - 	 Train Loss: 0.060
2024-10-25 07:40 - INFO - 	 Val. Loss: 0.062
2024-10-25 07:40 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:40 - INFO - 	 PR-AUC: 0.877
2024-10-25 07:40 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 07:40 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 07:40 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:40 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 07:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 07:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 07:40 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 07:40 - INFO - ---------------------------------------------
2024-10-25 07:41 - INFO - ---------------------------------------------
2024-10-25 07:41 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 07:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98695
2024-10-25 07:41 - INFO - 	 Train Loss: 0.058
2024-10-25 07:41 - INFO - 	 Val. Loss: 0.060
2024-10-25 07:41 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:41 - INFO - 	 PR-AUC: 0.882
2024-10-25 07:41 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 07:41 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 07:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:41 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 07:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 07:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-25 07:41 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 07:41 - INFO - ---------------------------------------------
2024-10-25 07:41 - INFO - ---------------------------------------------
2024-10-25 07:41 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 07:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98853
2024-10-25 07:41 - INFO - 	 Train Loss: 0.056
2024-10-25 07:41 - INFO - 	 Val. Loss: 0.058
2024-10-25 07:41 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:41 - INFO - 	 PR-AUC: 0.896
2024-10-25 07:41 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 07:41 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 07:41 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:41 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 07:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-25 07:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-25 07:41 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 07:41 - INFO - ---------------------------------------------
2024-10-25 07:42 - INFO - ---------------------------------------------
2024-10-25 07:42 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 07:42 - INFO - 	 Train Loss: 0.054
2024-10-25 07:42 - INFO - 	 Val. Loss: 0.058
2024-10-25 07:42 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:42 - INFO - 	 PR-AUC: 0.902
2024-10-25 07:42 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:42 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 07:42 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:42 - INFO - 	 Best PR-AUC: 0.902
2024-10-25 07:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-25 07:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-25 07:42 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 07:42 - INFO - ---------------------------------------------
2024-10-25 07:42 - INFO - ---------------------------------------------
2024-10-25 07:42 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 07:42 - INFO - 	 Train Loss: 0.053
2024-10-25 07:42 - INFO - 	 Val. Loss: 0.062
2024-10-25 07:42 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:42 - INFO - 	 PR-AUC: 0.883
2024-10-25 07:42 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:42 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 07:42 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:42 - INFO - 	 Best PR-AUC: 0.902
2024-10-25 07:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-25 07:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-25 07:42 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 07:42 - INFO - ---------------------------------------------
2024-10-25 07:44 - INFO - Fit the preprocessing pipeline
2024-10-25 07:44 - INFO - Training using device: cuda
2024-10-25 07:44 - INFO - Creating generators
2024-10-25 07:44 - INFO - The model has 651,257 trainable parameters
2024-10-25 07:44 - INFO - * Model:
2024-10-25 07:44 - INFO - * -----------
2024-10-25 07:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 07:44 - INFO - * -----------
2024-10-25 07:44 - INFO - Evaluating model based on: rocauc
2024-10-25 07:44 - INFO - Training..

2024-10-25 07:44 - INFO - ---------------------------------------------
2024-10-25 07:44 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 07:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9642
2024-10-25 07:44 - INFO - 	 Train Loss: 0.155
2024-10-25 07:44 - INFO - 	 Val. Loss: 0.106
2024-10-25 07:44 - INFO - 	 ROC-AUC: 0.964
2024-10-25 07:44 - INFO - 	 PR-AUC: 0.752
2024-10-25 07:44 - INFO - 	 Recall for 0.4 precision: 0.928
2024-10-25 07:44 - INFO - 	 Best Val. Loss: 0.106
2024-10-25 07:44 - INFO - 	 Best ROC-AUC: 0.964
2024-10-25 07:44 - INFO - 	 Best PR-AUC: 0.752
2024-10-25 07:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-25 07:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.733
2024-10-25 07:44 - INFO - 	 Best Recall for 0.4 precision: 0.928
2024-10-25 07:44 - INFO - ---------------------------------------------
2024-10-25 07:45 - INFO - ---------------------------------------------
2024-10-25 07:45 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 07:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98423
2024-10-25 07:45 - INFO - 	 Train Loss: 0.081
2024-10-25 07:45 - INFO - 	 Val. Loss: 0.069
2024-10-25 07:45 - INFO - 	 ROC-AUC: 0.984
2024-10-25 07:45 - INFO - 	 PR-AUC: 0.856
2024-10-25 07:45 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 07:45 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 07:45 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 07:45 - INFO - 	 Best PR-AUC: 0.856
2024-10-25 07:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 07:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-25 07:45 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 07:45 - INFO - ---------------------------------------------
2024-10-25 07:45 - INFO - ---------------------------------------------
2024-10-25 07:45 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 07:45 - INFO - 	 Train Loss: 0.071
2024-10-25 07:45 - INFO - 	 Val. Loss: 0.079
2024-10-25 07:45 - INFO - 	 ROC-AUC: 0.983
2024-10-25 07:45 - INFO - 	 PR-AUC: 0.852
2024-10-25 07:45 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 07:45 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 07:45 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 07:45 - INFO - 	 Best PR-AUC: 0.856
2024-10-25 07:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 07:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-25 07:45 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 07:45 - INFO - ---------------------------------------------
2024-10-25 07:46 - INFO - ---------------------------------------------
2024-10-25 07:46 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 07:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98663
2024-10-25 07:46 - INFO - 	 Train Loss: 0.067
2024-10-25 07:46 - INFO - 	 Val. Loss: 0.062
2024-10-25 07:46 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:46 - INFO - 	 PR-AUC: 0.884
2024-10-25 07:46 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:46 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 07:46 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:46 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 07:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 07:46 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 07:46 - INFO - ---------------------------------------------
2024-10-25 07:46 - INFO - ---------------------------------------------
2024-10-25 07:46 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 07:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98738
2024-10-25 07:46 - INFO - 	 Train Loss: 0.063
2024-10-25 07:46 - INFO - 	 Val. Loss: 0.061
2024-10-25 07:46 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:46 - INFO - 	 PR-AUC: 0.888
2024-10-25 07:46 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 07:46 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 07:46 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:46 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 07:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-25 07:46 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 07:46 - INFO - ---------------------------------------------
2024-10-25 07:47 - INFO - ---------------------------------------------
2024-10-25 07:47 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 07:47 - INFO - 	 Train Loss: 0.060
2024-10-25 07:47 - INFO - 	 Val. Loss: 0.060
2024-10-25 07:47 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:47 - INFO - 	 PR-AUC: 0.893
2024-10-25 07:47 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 07:47 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 07:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:47 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 07:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 07:47 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 07:47 - INFO - ---------------------------------------------
2024-10-25 07:47 - INFO - ---------------------------------------------
2024-10-25 07:47 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 07:47 - INFO - 	 Train Loss: 0.058
2024-10-25 07:47 - INFO - 	 Val. Loss: 0.060
2024-10-25 07:47 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:47 - INFO - 	 PR-AUC: 0.889
2024-10-25 07:47 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:47 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 07:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:47 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 07:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 07:47 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 07:47 - INFO - ---------------------------------------------
2024-10-25 07:48 - INFO - ---------------------------------------------
2024-10-25 07:48 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 07:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98848
2024-10-25 07:48 - INFO - 	 Train Loss: 0.057
2024-10-25 07:48 - INFO - 	 Val. Loss: 0.058
2024-10-25 07:48 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:48 - INFO - 	 PR-AUC: 0.892
2024-10-25 07:48 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:48 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 07:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:48 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 07:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 07:48 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 07:48 - INFO - ---------------------------------------------
2024-10-25 07:49 - INFO - ---------------------------------------------
2024-10-25 07:49 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 07:49 - INFO - 	 Train Loss: 0.054
2024-10-25 07:49 - INFO - 	 Val. Loss: 0.058
2024-10-25 07:49 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:49 - INFO - 	 PR-AUC: 0.897
2024-10-25 07:49 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 07:49 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 07:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:49 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 07:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 07:49 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 07:49 - INFO - ---------------------------------------------
2024-10-25 07:49 - INFO - ---------------------------------------------
2024-10-25 07:49 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 07:49 - INFO - 	 Train Loss: 0.054
2024-10-25 07:49 - INFO - 	 Val. Loss: 0.063
2024-10-25 07:49 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:49 - INFO - 	 PR-AUC: 0.894
2024-10-25 07:49 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:49 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 07:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:49 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 07:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 07:49 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 07:49 - INFO - ---------------------------------------------
2024-10-25 07:51 - INFO - Fit the preprocessing pipeline
2024-10-25 07:51 - INFO - Training using device: cuda
2024-10-25 07:51 - INFO - Creating generators
2024-10-25 07:51 - INFO - The model has 651,257 trainable parameters
2024-10-25 07:51 - INFO - * Model:
2024-10-25 07:51 - INFO - * -----------
2024-10-25 07:51 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 07:51 - INFO - * -----------
2024-10-25 07:51 - INFO - Evaluating model based on: rocauc
2024-10-25 07:51 - INFO - Training..

2024-10-25 07:51 - INFO - ---------------------------------------------
2024-10-25 07:51 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 07:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97696
2024-10-25 07:51 - INFO - 	 Train Loss: 0.153
2024-10-25 07:51 - INFO - 	 Val. Loss: 0.087
2024-10-25 07:51 - INFO - 	 ROC-AUC: 0.977
2024-10-25 07:51 - INFO - 	 PR-AUC: 0.797
2024-10-25 07:51 - INFO - 	 Recall for 0.4 precision: 0.955
2024-10-25 07:51 - INFO - 	 Best Val. Loss: 0.087
2024-10-25 07:51 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 07:51 - INFO - 	 Best PR-AUC: 0.797
2024-10-25 07:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 07:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-25 07:51 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-25 07:51 - INFO - ---------------------------------------------
2024-10-25 07:52 - INFO - ---------------------------------------------
2024-10-25 07:52 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 07:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98388
2024-10-25 07:52 - INFO - 	 Train Loss: 0.082
2024-10-25 07:52 - INFO - 	 Val. Loss: 0.073
2024-10-25 07:52 - INFO - 	 ROC-AUC: 0.984
2024-10-25 07:52 - INFO - 	 PR-AUC: 0.865
2024-10-25 07:52 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 07:52 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 07:52 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 07:52 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 07:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 07:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-25 07:52 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 07:52 - INFO - ---------------------------------------------
2024-10-25 07:52 - INFO - ---------------------------------------------
2024-10-25 07:52 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 07:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9859
2024-10-25 07:52 - INFO - 	 Train Loss: 0.072
2024-10-25 07:52 - INFO - 	 Val. Loss: 0.066
2024-10-25 07:52 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:52 - INFO - 	 PR-AUC: 0.872
2024-10-25 07:52 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 07:52 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 07:52 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 07:52 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 07:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 07:52 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 07:52 - INFO - ---------------------------------------------
2024-10-25 07:53 - INFO - ---------------------------------------------
2024-10-25 07:53 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 07:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98746
2024-10-25 07:53 - INFO - 	 Train Loss: 0.067
2024-10-25 07:53 - INFO - 	 Val. Loss: 0.062
2024-10-25 07:53 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:53 - INFO - 	 PR-AUC: 0.867
2024-10-25 07:53 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:53 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 07:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:53 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 07:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 07:53 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:53 - INFO - ---------------------------------------------
2024-10-25 07:53 - INFO - ---------------------------------------------
2024-10-25 07:53 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 07:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98787
2024-10-25 07:53 - INFO - 	 Train Loss: 0.064
2024-10-25 07:53 - INFO - 	 Val. Loss: 0.060
2024-10-25 07:53 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:53 - INFO - 	 PR-AUC: 0.878
2024-10-25 07:53 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:53 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 07:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:53 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 07:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-25 07:53 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:53 - INFO - ---------------------------------------------
2024-10-25 07:54 - INFO - ---------------------------------------------
2024-10-25 07:54 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 07:54 - INFO - 	 Train Loss: 0.061
2024-10-25 07:54 - INFO - 	 Val. Loss: 0.062
2024-10-25 07:54 - INFO - 	 ROC-AUC: 0.988
2024-10-25 07:54 - INFO - 	 PR-AUC: 0.872
2024-10-25 07:54 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 07:54 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 07:54 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 07:54 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 07:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 07:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-25 07:54 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:54 - INFO - ---------------------------------------------
2024-10-25 07:54 - INFO - ---------------------------------------------
2024-10-25 07:54 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 07:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98873
2024-10-25 07:54 - INFO - 	 Train Loss: 0.059
2024-10-25 07:54 - INFO - 	 Val. Loss: 0.057
2024-10-25 07:54 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:54 - INFO - 	 PR-AUC: 0.897
2024-10-25 07:54 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:54 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 07:54 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 07:54 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 07:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 07:54 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:54 - INFO - ---------------------------------------------
2024-10-25 07:55 - INFO - ---------------------------------------------
2024-10-25 07:55 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 07:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.99011
2024-10-25 07:55 - INFO - 	 Train Loss: 0.057
2024-10-25 07:55 - INFO - 	 Val. Loss: 0.055
2024-10-25 07:55 - INFO - 	 ROC-AUC: 0.990
2024-10-25 07:55 - INFO - 	 PR-AUC: 0.898
2024-10-25 07:55 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 07:55 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 07:55 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 07:55 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 07:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-25 07:55 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 07:55 - INFO - ---------------------------------------------
2024-10-25 07:55 - INFO - ---------------------------------------------
2024-10-25 07:55 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 07:55 - INFO - 	 Train Loss: 0.055
2024-10-25 07:55 - INFO - 	 Val. Loss: 0.055
2024-10-25 07:55 - INFO - 	 ROC-AUC: 0.990
2024-10-25 07:55 - INFO - 	 PR-AUC: 0.906
2024-10-25 07:55 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 07:55 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 07:55 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 07:55 - INFO - 	 Best PR-AUC: 0.906
2024-10-25 07:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 07:55 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 07:55 - INFO - ---------------------------------------------
2024-10-25 07:56 - INFO - ---------------------------------------------
2024-10-25 07:56 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 07:56 - INFO - 	 Train Loss: 0.053
2024-10-25 07:56 - INFO - 	 Val. Loss: 0.057
2024-10-25 07:56 - INFO - 	 ROC-AUC: 0.989
2024-10-25 07:56 - INFO - 	 PR-AUC: 0.894
2024-10-25 07:56 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 07:56 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 07:56 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 07:56 - INFO - 	 Best PR-AUC: 0.906
2024-10-25 07:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 07:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 07:56 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 07:56 - INFO - ---------------------------------------------
2024-10-25 07:57 - INFO - Fit the preprocessing pipeline
2024-10-25 07:57 - INFO - Training using device: cuda
2024-10-25 07:57 - INFO - Creating generators
2024-10-25 07:57 - INFO - The model has 651,257 trainable parameters
2024-10-25 07:57 - INFO - * Model:
2024-10-25 07:57 - INFO - * -----------
2024-10-25 07:57 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 07:57 - INFO - * -----------
2024-10-25 07:57 - INFO - Evaluating model based on: rocauc
2024-10-25 07:57 - INFO - Training..

2024-10-25 07:58 - INFO - ---------------------------------------------
2024-10-25 07:58 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 07:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97748
2024-10-25 07:58 - INFO - 	 Train Loss: 0.155
2024-10-25 07:58 - INFO - 	 Val. Loss: 0.084
2024-10-25 07:58 - INFO - 	 ROC-AUC: 0.977
2024-10-25 07:58 - INFO - 	 PR-AUC: 0.781
2024-10-25 07:58 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 07:58 - INFO - 	 Best Val. Loss: 0.084
2024-10-25 07:58 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 07:58 - INFO - 	 Best PR-AUC: 0.781
2024-10-25 07:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-25 07:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-25 07:58 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 07:58 - INFO - ---------------------------------------------
2024-10-25 07:58 - INFO - ---------------------------------------------
2024-10-25 07:58 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 07:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98389
2024-10-25 07:58 - INFO - 	 Train Loss: 0.081
2024-10-25 07:58 - INFO - 	 Val. Loss: 0.071
2024-10-25 07:58 - INFO - 	 ROC-AUC: 0.984
2024-10-25 07:58 - INFO - 	 PR-AUC: 0.850
2024-10-25 07:58 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 07:58 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 07:58 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 07:58 - INFO - 	 Best PR-AUC: 0.850
2024-10-25 07:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 07:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 07:58 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 07:58 - INFO - ---------------------------------------------
2024-10-25 07:59 - INFO - ---------------------------------------------
2024-10-25 07:59 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 07:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98647
2024-10-25 07:59 - INFO - 	 Train Loss: 0.071
2024-10-25 07:59 - INFO - 	 Val. Loss: 0.069
2024-10-25 07:59 - INFO - 	 ROC-AUC: 0.986
2024-10-25 07:59 - INFO - 	 PR-AUC: 0.869
2024-10-25 07:59 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 07:59 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 07:59 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 07:59 - INFO - 	 Best PR-AUC: 0.869
2024-10-25 07:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 07:59 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 07:59 - INFO - ---------------------------------------------
2024-10-25 07:59 - INFO - ---------------------------------------------
2024-10-25 07:59 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 07:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98685
2024-10-25 07:59 - INFO - 	 Train Loss: 0.067
2024-10-25 07:59 - INFO - 	 Val. Loss: 0.063
2024-10-25 07:59 - INFO - 	 ROC-AUC: 0.987
2024-10-25 07:59 - INFO - 	 PR-AUC: 0.875
2024-10-25 07:59 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 07:59 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 07:59 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 07:59 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 07:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 07:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-25 07:59 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 07:59 - INFO - ---------------------------------------------
2024-10-25 08:00 - INFO - ---------------------------------------------
2024-10-25 08:00 - INFO - Epoch: 05 | Time: 0m 30s
2024-10-25 08:00 - INFO - 	 Train Loss: 0.063
2024-10-25 08:00 - INFO - 	 Val. Loss: 0.062
2024-10-25 08:00 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:00 - INFO - 	 PR-AUC: 0.875
2024-10-25 08:00 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:00 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 08:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:00 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 08:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 08:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 08:00 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:00 - INFO - ---------------------------------------------
2024-10-25 08:00 - INFO - ---------------------------------------------
2024-10-25 08:00 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 08:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98722
2024-10-25 08:00 - INFO - 	 Train Loss: 0.060
2024-10-25 08:00 - INFO - 	 Val. Loss: 0.062
2024-10-25 08:00 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:00 - INFO - 	 PR-AUC: 0.880
2024-10-25 08:00 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 08:00 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 08:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:00 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 08:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 08:00 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:00 - INFO - ---------------------------------------------
2024-10-25 08:01 - INFO - ---------------------------------------------
2024-10-25 08:01 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 08:01 - INFO - 	 Train Loss: 0.059
2024-10-25 08:01 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:01 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:01 - INFO - 	 PR-AUC: 0.879
2024-10-25 08:01 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:01 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 08:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:01 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 08:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 08:01 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:01 - INFO - ---------------------------------------------
2024-10-25 08:02 - INFO - ---------------------------------------------
2024-10-25 08:02 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 08:02 - INFO - 	 Train Loss: 0.056
2024-10-25 08:02 - INFO - 	 Val. Loss: 0.060
2024-10-25 08:02 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:02 - INFO - 	 PR-AUC: 0.886
2024-10-25 08:02 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:02 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 08:02 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:02 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 08:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 08:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:02 - INFO - ---------------------------------------------
2024-10-25 08:02 - INFO - ---------------------------------------------
2024-10-25 08:02 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 08:02 - INFO - 	 Train Loss: 0.055
2024-10-25 08:02 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:02 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:02 - INFO - 	 PR-AUC: 0.888
2024-10-25 08:02 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 08:02 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 08:02 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:02 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 08:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-25 08:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:02 - INFO - ---------------------------------------------
2024-10-25 08:03 - INFO - ---------------------------------------------
2024-10-25 08:03 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 08:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98756
2024-10-25 08:03 - INFO - 	 Train Loss: 0.054
2024-10-25 08:03 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:03 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:03 - INFO - 	 PR-AUC: 0.891
2024-10-25 08:03 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:03 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 08:03 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:03 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 08:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-25 08:03 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:03 - INFO - ---------------------------------------------
2024-10-25 08:04 - INFO - Fit the preprocessing pipeline
2024-10-25 08:04 - INFO - Training using device: cuda
2024-10-25 08:04 - INFO - Creating generators
2024-10-25 08:04 - INFO - The model has 651,257 trainable parameters
2024-10-25 08:04 - INFO - * Model:
2024-10-25 08:04 - INFO - * -----------
2024-10-25 08:04 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 08:04 - INFO - * -----------
2024-10-25 08:04 - INFO - Evaluating model based on: rocauc
2024-10-25 08:04 - INFO - Training..

2024-10-25 08:05 - INFO - ---------------------------------------------
2024-10-25 08:05 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 08:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97737
2024-10-25 08:05 - INFO - 	 Train Loss: 0.161
2024-10-25 08:05 - INFO - 	 Val. Loss: 0.086
2024-10-25 08:05 - INFO - 	 ROC-AUC: 0.977
2024-10-25 08:05 - INFO - 	 PR-AUC: 0.797
2024-10-25 08:05 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-25 08:05 - INFO - 	 Best Val. Loss: 0.086
2024-10-25 08:05 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 08:05 - INFO - 	 Best PR-AUC: 0.797
2024-10-25 08:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 08:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-25 08:05 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-25 08:05 - INFO - ---------------------------------------------
2024-10-25 08:05 - INFO - ---------------------------------------------
2024-10-25 08:05 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 08:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98276
2024-10-25 08:05 - INFO - 	 Train Loss: 0.082
2024-10-25 08:05 - INFO - 	 Val. Loss: 0.072
2024-10-25 08:05 - INFO - 	 ROC-AUC: 0.983
2024-10-25 08:05 - INFO - 	 PR-AUC: 0.848
2024-10-25 08:05 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 08:05 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 08:05 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 08:05 - INFO - 	 Best PR-AUC: 0.848
2024-10-25 08:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 08:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-25 08:05 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 08:05 - INFO - ---------------------------------------------
2024-10-25 08:06 - INFO - ---------------------------------------------
2024-10-25 08:06 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 08:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98451
2024-10-25 08:06 - INFO - 	 Train Loss: 0.071
2024-10-25 08:06 - INFO - 	 Val. Loss: 0.067
2024-10-25 08:06 - INFO - 	 ROC-AUC: 0.985
2024-10-25 08:06 - INFO - 	 PR-AUC: 0.867
2024-10-25 08:06 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:06 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 08:06 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 08:06 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 08:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 08:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 08:06 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 08:06 - INFO - ---------------------------------------------
2024-10-25 08:06 - INFO - ---------------------------------------------
2024-10-25 08:06 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 08:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98716
2024-10-25 08:06 - INFO - 	 Train Loss: 0.066
2024-10-25 08:06 - INFO - 	 Val. Loss: 0.063
2024-10-25 08:06 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:06 - INFO - 	 PR-AUC: 0.885
2024-10-25 08:06 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 08:06 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 08:06 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:06 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 08:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 08:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 08:06 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 08:06 - INFO - ---------------------------------------------
2024-10-25 08:07 - INFO - ---------------------------------------------
2024-10-25 08:07 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 08:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98761
2024-10-25 08:07 - INFO - 	 Train Loss: 0.064
2024-10-25 08:07 - INFO - 	 Val. Loss: 0.064
2024-10-25 08:07 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:07 - INFO - 	 PR-AUC: 0.883
2024-10-25 08:07 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:07 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 08:07 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:07 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 08:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 08:07 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:07 - INFO - ---------------------------------------------
2024-10-25 08:07 - INFO - ---------------------------------------------
2024-10-25 08:07 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 08:07 - INFO - 	 Train Loss: 0.061
2024-10-25 08:07 - INFO - 	 Val. Loss: 0.065
2024-10-25 08:07 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:07 - INFO - 	 PR-AUC: 0.873
2024-10-25 08:07 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:07 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 08:07 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:07 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 08:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 08:07 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:07 - INFO - ---------------------------------------------
2024-10-25 08:08 - INFO - ---------------------------------------------
2024-10-25 08:08 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 08:08 - INFO - 	 Train Loss: 0.057
2024-10-25 08:08 - INFO - 	 Val. Loss: 0.063
2024-10-25 08:08 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:08 - INFO - 	 PR-AUC: 0.882
2024-10-25 08:08 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 08:08 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 08:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:08 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 08:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 08:08 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:08 - INFO - ---------------------------------------------
2024-10-25 08:08 - INFO - ---------------------------------------------
2024-10-25 08:08 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 08:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98865
2024-10-25 08:08 - INFO - 	 Train Loss: 0.055
2024-10-25 08:08 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:08 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:08 - INFO - 	 PR-AUC: 0.892
2024-10-25 08:08 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:08 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 08:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:08 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 08:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 08:08 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:08 - INFO - ---------------------------------------------
2024-10-25 08:09 - INFO - ---------------------------------------------
2024-10-25 08:09 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 08:09 - INFO - 	 Train Loss: 0.054
2024-10-25 08:09 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:09 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:09 - INFO - 	 PR-AUC: 0.892
2024-10-25 08:09 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:09 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 08:09 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:09 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 08:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-25 08:09 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:09 - INFO - ---------------------------------------------
2024-10-25 08:09 - INFO - ---------------------------------------------
2024-10-25 08:09 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 08:09 - INFO - 	 Train Loss: 0.053
2024-10-25 08:09 - INFO - 	 Val. Loss: 0.060
2024-10-25 08:09 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:09 - INFO - 	 PR-AUC: 0.898
2024-10-25 08:09 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:09 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 08:09 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:09 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 08:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 08:09 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:09 - INFO - ---------------------------------------------
2024-10-25 08:11 - INFO - Fit the preprocessing pipeline
2024-10-25 08:11 - INFO - Training using device: cuda
2024-10-25 08:11 - INFO - Creating generators
2024-10-25 08:11 - INFO - The model has 651,257 trainable parameters
2024-10-25 08:11 - INFO - * Model:
2024-10-25 08:11 - INFO - * -----------
2024-10-25 08:11 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 08:11 - INFO - * -----------
2024-10-25 08:11 - INFO - Evaluating model based on: rocauc
2024-10-25 08:11 - INFO - Training..

2024-10-25 08:11 - INFO - ---------------------------------------------
2024-10-25 08:11 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 08:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98022
2024-10-25 08:11 - INFO - 	 Train Loss: 0.153
2024-10-25 08:11 - INFO - 	 Val. Loss: 0.083
2024-10-25 08:11 - INFO - 	 ROC-AUC: 0.980
2024-10-25 08:11 - INFO - 	 PR-AUC: 0.829
2024-10-25 08:11 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 08:11 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 08:11 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 08:11 - INFO - 	 Best PR-AUC: 0.829
2024-10-25 08:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 08:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-25 08:11 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-25 08:11 - INFO - ---------------------------------------------
2024-10-25 08:12 - INFO - ---------------------------------------------
2024-10-25 08:12 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 08:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9841
2024-10-25 08:12 - INFO - 	 Train Loss: 0.084
2024-10-25 08:12 - INFO - 	 Val. Loss: 0.070
2024-10-25 08:12 - INFO - 	 ROC-AUC: 0.984
2024-10-25 08:12 - INFO - 	 PR-AUC: 0.856
2024-10-25 08:12 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:12 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 08:12 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 08:12 - INFO - 	 Best PR-AUC: 0.856
2024-10-25 08:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 08:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-25 08:12 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 08:12 - INFO - ---------------------------------------------
2024-10-25 08:12 - INFO - ---------------------------------------------
2024-10-25 08:12 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 08:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98548
2024-10-25 08:12 - INFO - 	 Train Loss: 0.072
2024-10-25 08:12 - INFO - 	 Val. Loss: 0.067
2024-10-25 08:12 - INFO - 	 ROC-AUC: 0.985
2024-10-25 08:12 - INFO - 	 PR-AUC: 0.859
2024-10-25 08:12 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 08:12 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 08:12 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 08:12 - INFO - 	 Best PR-AUC: 0.859
2024-10-25 08:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 08:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 08:12 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 08:12 - INFO - ---------------------------------------------
2024-10-25 08:13 - INFO - ---------------------------------------------
2024-10-25 08:13 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 08:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98558
2024-10-25 08:13 - INFO - 	 Train Loss: 0.067
2024-10-25 08:13 - INFO - 	 Val. Loss: 0.066
2024-10-25 08:13 - INFO - 	 ROC-AUC: 0.986
2024-10-25 08:13 - INFO - 	 PR-AUC: 0.878
2024-10-25 08:13 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 08:13 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 08:13 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 08:13 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 08:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 08:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 08:13 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 08:13 - INFO - ---------------------------------------------
2024-10-25 08:13 - INFO - ---------------------------------------------
2024-10-25 08:13 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 08:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98764
2024-10-25 08:13 - INFO - 	 Train Loss: 0.064
2024-10-25 08:13 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:13 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:13 - INFO - 	 PR-AUC: 0.889
2024-10-25 08:13 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:13 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 08:13 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:13 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 08:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 08:13 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 08:13 - INFO - ---------------------------------------------
2024-10-25 08:14 - INFO - ---------------------------------------------
2024-10-25 08:14 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 08:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9883
2024-10-25 08:14 - INFO - 	 Train Loss: 0.061
2024-10-25 08:14 - INFO - 	 Val. Loss: 0.058
2024-10-25 08:14 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:14 - INFO - 	 PR-AUC: 0.892
2024-10-25 08:14 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:14 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 08:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:14 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 08:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 08:14 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:14 - INFO - ---------------------------------------------
2024-10-25 08:15 - INFO - ---------------------------------------------
2024-10-25 08:15 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 08:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98845
2024-10-25 08:15 - INFO - 	 Train Loss: 0.059
2024-10-25 08:15 - INFO - 	 Val. Loss: 0.060
2024-10-25 08:15 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:15 - INFO - 	 PR-AUC: 0.898
2024-10-25 08:15 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 08:15 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 08:15 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:15 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 08:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 08:15 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:15 - INFO - ---------------------------------------------
2024-10-25 08:15 - INFO - ---------------------------------------------
2024-10-25 08:15 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 08:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98911
2024-10-25 08:15 - INFO - 	 Train Loss: 0.057
2024-10-25 08:15 - INFO - 	 Val. Loss: 0.056
2024-10-25 08:15 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:15 - INFO - 	 PR-AUC: 0.901
2024-10-25 08:15 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:15 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 08:15 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:15 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 08:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-25 08:15 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:15 - INFO - ---------------------------------------------
2024-10-25 08:16 - INFO - ---------------------------------------------
2024-10-25 08:16 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 08:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98983
2024-10-25 08:16 - INFO - 	 Train Loss: 0.056
2024-10-25 08:16 - INFO - 	 Val. Loss: 0.058
2024-10-25 08:16 - INFO - 	 ROC-AUC: 0.990
2024-10-25 08:16 - INFO - 	 PR-AUC: 0.900
2024-10-25 08:16 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:16 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 08:16 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 08:16 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 08:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-25 08:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:16 - INFO - ---------------------------------------------
2024-10-25 08:16 - INFO - ---------------------------------------------
2024-10-25 08:16 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 08:16 - INFO - 	 Train Loss: 0.054
2024-10-25 08:16 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:16 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:16 - INFO - 	 PR-AUC: 0.903
2024-10-25 08:16 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:16 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 08:16 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 08:16 - INFO - 	 Best PR-AUC: 0.903
2024-10-25 08:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-25 08:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:16 - INFO - ---------------------------------------------
2024-10-25 08:18 - INFO - Fit the preprocessing pipeline
2024-10-25 08:18 - INFO - Training using device: cuda
2024-10-25 08:18 - INFO - Creating generators
2024-10-25 08:18 - INFO - The model has 651,257 trainable parameters
2024-10-25 08:18 - INFO - * Model:
2024-10-25 08:18 - INFO - * -----------
2024-10-25 08:18 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 08:18 - INFO - * -----------
2024-10-25 08:18 - INFO - Evaluating model based on: rocauc
2024-10-25 08:18 - INFO - Training..

2024-10-25 08:18 - INFO - ---------------------------------------------
2024-10-25 08:18 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 08:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97976
2024-10-25 08:18 - INFO - 	 Train Loss: 0.164
2024-10-25 08:18 - INFO - 	 Val. Loss: 0.080
2024-10-25 08:18 - INFO - 	 ROC-AUC: 0.980
2024-10-25 08:18 - INFO - 	 PR-AUC: 0.814
2024-10-25 08:18 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 08:18 - INFO - 	 Best Val. Loss: 0.080
2024-10-25 08:18 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 08:18 - INFO - 	 Best PR-AUC: 0.814
2024-10-25 08:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 08:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-25 08:18 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 08:18 - INFO - ---------------------------------------------
2024-10-25 08:19 - INFO - ---------------------------------------------
2024-10-25 08:19 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 08:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98561
2024-10-25 08:19 - INFO - 	 Train Loss: 0.083
2024-10-25 08:19 - INFO - 	 Val. Loss: 0.066
2024-10-25 08:19 - INFO - 	 ROC-AUC: 0.986
2024-10-25 08:19 - INFO - 	 PR-AUC: 0.870
2024-10-25 08:19 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 08:19 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 08:19 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 08:19 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 08:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 08:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 08:19 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 08:19 - INFO - ---------------------------------------------
2024-10-25 08:19 - INFO - ---------------------------------------------
2024-10-25 08:19 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 08:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98696
2024-10-25 08:19 - INFO - 	 Train Loss: 0.072
2024-10-25 08:19 - INFO - 	 Val. Loss: 0.063
2024-10-25 08:19 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:19 - INFO - 	 PR-AUC: 0.883
2024-10-25 08:19 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:19 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 08:19 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:19 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 08:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 08:19 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:19 - INFO - ---------------------------------------------
2024-10-25 08:20 - INFO - ---------------------------------------------
2024-10-25 08:20 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 08:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98723
2024-10-25 08:20 - INFO - 	 Train Loss: 0.068
2024-10-25 08:20 - INFO - 	 Val. Loss: 0.062
2024-10-25 08:20 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:20 - INFO - 	 PR-AUC: 0.885
2024-10-25 08:20 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 08:20 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 08:20 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:20 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 08:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 08:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 08:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:20 - INFO - ---------------------------------------------
2024-10-25 08:20 - INFO - ---------------------------------------------
2024-10-25 08:20 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 08:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98862
2024-10-25 08:20 - INFO - 	 Train Loss: 0.064
2024-10-25 08:20 - INFO - 	 Val. Loss: 0.060
2024-10-25 08:20 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:20 - INFO - 	 PR-AUC: 0.899
2024-10-25 08:20 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:20 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 08:20 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:20 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 08:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 08:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:20 - INFO - ---------------------------------------------
2024-10-25 08:21 - INFO - ---------------------------------------------
2024-10-25 08:21 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 08:21 - INFO - 	 Train Loss: 0.061
2024-10-25 08:21 - INFO - 	 Val. Loss: 0.063
2024-10-25 08:21 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:21 - INFO - 	 PR-AUC: 0.888
2024-10-25 08:21 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:21 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 08:21 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:21 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 08:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 08:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:21 - INFO - ---------------------------------------------
2024-10-25 08:21 - INFO - ---------------------------------------------
2024-10-25 08:21 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 08:21 - INFO - 	 Train Loss: 0.059
2024-10-25 08:21 - INFO - 	 Val. Loss: 0.060
2024-10-25 08:21 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:21 - INFO - 	 PR-AUC: 0.891
2024-10-25 08:21 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:21 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 08:21 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:21 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 08:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 08:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:21 - INFO - ---------------------------------------------
2024-10-25 08:22 - INFO - ---------------------------------------------
2024-10-25 08:22 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 08:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98889
2024-10-25 08:22 - INFO - 	 Train Loss: 0.057
2024-10-25 08:22 - INFO - 	 Val. Loss: 0.058
2024-10-25 08:22 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:22 - INFO - 	 PR-AUC: 0.901
2024-10-25 08:22 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 08:22 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 08:22 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:22 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 08:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-25 08:22 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 08:22 - INFO - ---------------------------------------------
2024-10-25 08:22 - INFO - ---------------------------------------------
2024-10-25 08:22 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 08:22 - INFO - 	 Train Loss: 0.056
2024-10-25 08:22 - INFO - 	 Val. Loss: 0.058
2024-10-25 08:22 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:22 - INFO - 	 PR-AUC: 0.900
2024-10-25 08:22 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:22 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 08:22 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:22 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 08:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-25 08:22 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 08:22 - INFO - ---------------------------------------------
2024-10-25 08:23 - INFO - ---------------------------------------------
2024-10-25 08:23 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 08:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98894
2024-10-25 08:23 - INFO - 	 Train Loss: 0.054
2024-10-25 08:23 - INFO - 	 Val. Loss: 0.057
2024-10-25 08:23 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:23 - INFO - 	 PR-AUC: 0.899
2024-10-25 08:23 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 08:23 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 08:23 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:23 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 08:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-25 08:23 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 08:23 - INFO - ---------------------------------------------
2024-10-25 08:24 - INFO - Fit the preprocessing pipeline
2024-10-25 08:24 - INFO - Training using device: cuda
2024-10-25 08:24 - INFO - Creating generators
2024-10-25 08:24 - INFO - The model has 651,257 trainable parameters
2024-10-25 08:24 - INFO - * Model:
2024-10-25 08:24 - INFO - * -----------
2024-10-25 08:24 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 08:24 - INFO - * -----------
2024-10-25 08:24 - INFO - Evaluating model based on: rocauc
2024-10-25 08:24 - INFO - Training..

2024-10-25 08:25 - INFO - ---------------------------------------------
2024-10-25 08:25 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 08:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97753
2024-10-25 08:25 - INFO - 	 Train Loss: 0.151
2024-10-25 08:25 - INFO - 	 Val. Loss: 0.086
2024-10-25 08:25 - INFO - 	 ROC-AUC: 0.978
2024-10-25 08:25 - INFO - 	 PR-AUC: 0.798
2024-10-25 08:25 - INFO - 	 Recall for 0.4 precision: 0.962
2024-10-25 08:25 - INFO - 	 Best Val. Loss: 0.086
2024-10-25 08:25 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 08:25 - INFO - 	 Best PR-AUC: 0.798
2024-10-25 08:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-25 08:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-25 08:25 - INFO - 	 Best Recall for 0.4 precision: 0.962
2024-10-25 08:25 - INFO - ---------------------------------------------
2024-10-25 08:25 - INFO - ---------------------------------------------
2024-10-25 08:25 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 08:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98247
2024-10-25 08:25 - INFO - 	 Train Loss: 0.082
2024-10-25 08:25 - INFO - 	 Val. Loss: 0.076
2024-10-25 08:25 - INFO - 	 ROC-AUC: 0.982
2024-10-25 08:25 - INFO - 	 PR-AUC: 0.836
2024-10-25 08:25 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 08:25 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 08:25 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 08:25 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 08:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 08:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-25 08:25 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 08:25 - INFO - ---------------------------------------------
2024-10-25 08:26 - INFO - ---------------------------------------------
2024-10-25 08:26 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 08:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98404
2024-10-25 08:26 - INFO - 	 Train Loss: 0.072
2024-10-25 08:26 - INFO - 	 Val. Loss: 0.071
2024-10-25 08:26 - INFO - 	 ROC-AUC: 0.984
2024-10-25 08:26 - INFO - 	 PR-AUC: 0.839
2024-10-25 08:26 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:26 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 08:26 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 08:26 - INFO - 	 Best PR-AUC: 0.839
2024-10-25 08:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 08:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 08:26 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 08:26 - INFO - ---------------------------------------------
2024-10-25 08:26 - INFO - ---------------------------------------------
2024-10-25 08:26 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 08:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98697
2024-10-25 08:26 - INFO - 	 Train Loss: 0.067
2024-10-25 08:26 - INFO - 	 Val. Loss: 0.064
2024-10-25 08:26 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:26 - INFO - 	 PR-AUC: 0.868
2024-10-25 08:26 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 08:26 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 08:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:26 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 08:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 08:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 08:26 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 08:26 - INFO - ---------------------------------------------
2024-10-25 08:27 - INFO - ---------------------------------------------
2024-10-25 08:27 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 08:27 - INFO - 	 Train Loss: 0.063
2024-10-25 08:27 - INFO - 	 Val. Loss: 0.065
2024-10-25 08:27 - INFO - 	 ROC-AUC: 0.985
2024-10-25 08:27 - INFO - 	 PR-AUC: 0.862
2024-10-25 08:27 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:27 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 08:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:27 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 08:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 08:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 08:27 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 08:27 - INFO - ---------------------------------------------
2024-10-25 08:27 - INFO - ---------------------------------------------
2024-10-25 08:27 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 08:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98836
2024-10-25 08:27 - INFO - 	 Train Loss: 0.060
2024-10-25 08:27 - INFO - 	 Val. Loss: 0.059
2024-10-25 08:27 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:27 - INFO - 	 PR-AUC: 0.889
2024-10-25 08:27 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:27 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 08:27 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:27 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 08:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-25 08:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:27 - INFO - ---------------------------------------------
2024-10-25 08:28 - INFO - ---------------------------------------------
2024-10-25 08:28 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 08:28 - INFO - 	 Train Loss: 0.057
2024-10-25 08:28 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:28 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:28 - INFO - 	 PR-AUC: 0.894
2024-10-25 08:28 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:28 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 08:28 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:28 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 08:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-25 08:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:28 - INFO - ---------------------------------------------
2024-10-25 08:28 - INFO - ---------------------------------------------
2024-10-25 08:28 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 08:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98864
2024-10-25 08:28 - INFO - 	 Train Loss: 0.055
2024-10-25 08:28 - INFO - 	 Val. Loss: 0.055
2024-10-25 08:28 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:28 - INFO - 	 PR-AUC: 0.902
2024-10-25 08:28 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 08:28 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 08:28 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:28 - INFO - 	 Best PR-AUC: 0.902
2024-10-25 08:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 08:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-25 08:28 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:28 - INFO - ---------------------------------------------
2024-10-25 08:29 - INFO - ---------------------------------------------
2024-10-25 08:29 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 08:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9891
2024-10-25 08:29 - INFO - 	 Train Loss: 0.054
2024-10-25 08:29 - INFO - 	 Val. Loss: 0.056
2024-10-25 08:29 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:29 - INFO - 	 PR-AUC: 0.904
2024-10-25 08:29 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 08:29 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 08:29 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:29 - INFO - 	 Best PR-AUC: 0.904
2024-10-25 08:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-25 08:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.909
2024-10-25 08:29 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:29 - INFO - ---------------------------------------------
2024-10-25 08:30 - INFO - ---------------------------------------------
2024-10-25 08:30 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 08:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.99026
2024-10-25 08:30 - INFO - 	 Train Loss: 0.052
2024-10-25 08:30 - INFO - 	 Val. Loss: 0.051
2024-10-25 08:30 - INFO - 	 ROC-AUC: 0.990
2024-10-25 08:30 - INFO - 	 PR-AUC: 0.918
2024-10-25 08:30 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:30 - INFO - 	 Best Val. Loss: 0.051
2024-10-25 08:30 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 08:30 - INFO - 	 Best PR-AUC: 0.918
2024-10-25 08:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 08:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.909
2024-10-25 08:30 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:30 - INFO - ---------------------------------------------
2024-10-25 08:31 - INFO - Fit the preprocessing pipeline
2024-10-25 08:31 - INFO - Training using device: cuda
2024-10-25 08:31 - INFO - Creating generators
2024-10-25 08:31 - INFO - The model has 651,257 trainable parameters
2024-10-25 08:31 - INFO - * Model:
2024-10-25 08:31 - INFO - * -----------
2024-10-25 08:31 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 08:31 - INFO - * -----------
2024-10-25 08:31 - INFO - Evaluating model based on: rocauc
2024-10-25 08:31 - INFO - Training..

2024-10-25 08:32 - INFO - ---------------------------------------------
2024-10-25 08:32 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 08:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97898
2024-10-25 08:32 - INFO - 	 Train Loss: 0.157
2024-10-25 08:32 - INFO - 	 Val. Loss: 0.082
2024-10-25 08:32 - INFO - 	 ROC-AUC: 0.979
2024-10-25 08:32 - INFO - 	 PR-AUC: 0.835
2024-10-25 08:32 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 08:32 - INFO - 	 Best Val. Loss: 0.082
2024-10-25 08:32 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 08:32 - INFO - 	 Best PR-AUC: 0.835
2024-10-25 08:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 08:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-25 08:32 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 08:32 - INFO - ---------------------------------------------
2024-10-25 08:32 - INFO - ---------------------------------------------
2024-10-25 08:32 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 08:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98449
2024-10-25 08:32 - INFO - 	 Train Loss: 0.080
2024-10-25 08:32 - INFO - 	 Val. Loss: 0.069
2024-10-25 08:32 - INFO - 	 ROC-AUC: 0.984
2024-10-25 08:32 - INFO - 	 PR-AUC: 0.861
2024-10-25 08:32 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:32 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 08:32 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 08:32 - INFO - 	 Best PR-AUC: 0.861
2024-10-25 08:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 08:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-25 08:32 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 08:32 - INFO - ---------------------------------------------
2024-10-25 08:33 - INFO - ---------------------------------------------
2024-10-25 08:33 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 08:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98683
2024-10-25 08:33 - INFO - 	 Train Loss: 0.071
2024-10-25 08:33 - INFO - 	 Val. Loss: 0.064
2024-10-25 08:33 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:33 - INFO - 	 PR-AUC: 0.880
2024-10-25 08:33 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 08:33 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 08:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:33 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 08:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 08:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 08:33 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 08:33 - INFO - ---------------------------------------------
2024-10-25 08:33 - INFO - ---------------------------------------------
2024-10-25 08:33 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 08:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98694
2024-10-25 08:33 - INFO - 	 Train Loss: 0.065
2024-10-25 08:33 - INFO - 	 Val. Loss: 0.062
2024-10-25 08:33 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:33 - INFO - 	 PR-AUC: 0.887
2024-10-25 08:33 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 08:33 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 08:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:33 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 08:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 08:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-25 08:33 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 08:33 - INFO - ---------------------------------------------
2024-10-25 08:34 - INFO - ---------------------------------------------
2024-10-25 08:34 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 08:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98728
2024-10-25 08:34 - INFO - 	 Train Loss: 0.061
2024-10-25 08:34 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:34 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:34 - INFO - 	 PR-AUC: 0.895
2024-10-25 08:34 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:34 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 08:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:34 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 08:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 08:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-25 08:34 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 08:34 - INFO - ---------------------------------------------
2024-10-25 08:34 - INFO - ---------------------------------------------
2024-10-25 08:34 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 08:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98895
2024-10-25 08:34 - INFO - 	 Train Loss: 0.060
2024-10-25 08:34 - INFO - 	 Val. Loss: 0.060
2024-10-25 08:34 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:34 - INFO - 	 PR-AUC: 0.903
2024-10-25 08:34 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:34 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 08:34 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:34 - INFO - 	 Best PR-AUC: 0.903
2024-10-25 08:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 08:34 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:34 - INFO - ---------------------------------------------
2024-10-25 08:35 - INFO - ---------------------------------------------
2024-10-25 08:35 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 08:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98971
2024-10-25 08:35 - INFO - 	 Train Loss: 0.057
2024-10-25 08:35 - INFO - 	 Val. Loss: 0.056
2024-10-25 08:35 - INFO - 	 ROC-AUC: 0.990
2024-10-25 08:35 - INFO - 	 PR-AUC: 0.909
2024-10-25 08:35 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 08:35 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 08:35 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 08:35 - INFO - 	 Best PR-AUC: 0.909
2024-10-25 08:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 08:35 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:35 - INFO - ---------------------------------------------
2024-10-25 08:35 - INFO - ---------------------------------------------
2024-10-25 08:35 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 08:35 - INFO - 	 Train Loss: 0.055
2024-10-25 08:35 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:35 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:35 - INFO - 	 PR-AUC: 0.904
2024-10-25 08:35 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:35 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 08:35 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 08:35 - INFO - 	 Best PR-AUC: 0.909
2024-10-25 08:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 08:35 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:35 - INFO - ---------------------------------------------
2024-10-25 08:36 - INFO - ---------------------------------------------
2024-10-25 08:36 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 08:36 - INFO - 	 Train Loss: 0.054
2024-10-25 08:36 - INFO - 	 Val. Loss: 0.058
2024-10-25 08:36 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:36 - INFO - 	 PR-AUC: 0.906
2024-10-25 08:36 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 08:36 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 08:36 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 08:36 - INFO - 	 Best PR-AUC: 0.909
2024-10-25 08:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 08:36 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:36 - INFO - ---------------------------------------------
2024-10-25 08:36 - INFO - ---------------------------------------------
2024-10-25 08:36 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 08:36 - INFO - 	 Train Loss: 0.052
2024-10-25 08:36 - INFO - 	 Val. Loss: 0.057
2024-10-25 08:36 - INFO - 	 ROC-AUC: 0.990
2024-10-25 08:36 - INFO - 	 PR-AUC: 0.905
2024-10-25 08:36 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 08:36 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 08:36 - INFO - 	 Best ROC-AUC: 0.990
2024-10-25 08:36 - INFO - 	 Best PR-AUC: 0.909
2024-10-25 08:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 08:36 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:36 - INFO - ---------------------------------------------
