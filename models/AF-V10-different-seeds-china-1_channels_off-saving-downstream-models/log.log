2024-11-03 02:09 - INFO - Fit the preprocessing pipeline
2024-11-03 02:09 - INFO - Training using device: mps
2024-11-03 02:09 - INFO - Creating generators
2024-11-03 02:09 - INFO - The model has 651,257 trainable parameters
2024-11-03 02:09 - INFO - * Model:
2024-11-03 02:09 - INFO - * -----------
2024-11-03 02:09 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 02:09 - INFO - * -----------
2024-11-03 02:09 - INFO - Evaluating model based on: aucpr
2024-11-03 02:09 - INFO - Training..

2024-11-03 02:11 - INFO - ---------------------------------------------
2024-11-03 02:11 - INFO - Epoch: 01 | Time: 1m 45s
2024-11-03 02:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12182
2024-11-03 02:11 - INFO - 	 Train Loss: 0.255
2024-11-03 02:11 - INFO - 	 Val. Loss: 0.368
2024-11-03 02:11 - INFO - 	 ROC-AUC: 0.671
2024-11-03 02:11 - INFO - 	 PR-AUC: 0.122
2024-11-03 02:11 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-03 02:11 - INFO - 	 Best Val. Loss: 0.368
2024-11-03 02:11 - INFO - 	 Best ROC-AUC: 0.671
2024-11-03 02:11 - INFO - 	 Best PR-AUC: 0.122
2024-11-03 02:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.658
2024-11-03 02:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.105
2024-11-03 02:11 - INFO - 	 Best Recall for 0.4 precision: 0.010
2024-11-03 02:11 - INFO - ---------------------------------------------
2024-11-03 02:12 - INFO - ---------------------------------------------
2024-11-03 02:12 - INFO - Epoch: 02 | Time: 1m 42s
2024-11-03 02:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26702
2024-11-03 02:12 - INFO - 	 Train Loss: 0.215
2024-11-03 02:12 - INFO - 	 Val. Loss: 0.276
2024-11-03 02:12 - INFO - 	 ROC-AUC: 0.774
2024-11-03 02:12 - INFO - 	 PR-AUC: 0.267
2024-11-03 02:12 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-03 02:12 - INFO - 	 Best Val. Loss: 0.276
2024-11-03 02:12 - INFO - 	 Best ROC-AUC: 0.774
2024-11-03 02:12 - INFO - 	 Best PR-AUC: 0.267
2024-11-03 02:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-03 02:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 02:12 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-03 02:12 - INFO - ---------------------------------------------
2024-11-03 02:14 - INFO - ---------------------------------------------
2024-11-03 02:14 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 02:14 - INFO - 	 Train Loss: 0.195
2024-11-03 02:14 - INFO - 	 Val. Loss: 0.231
2024-11-03 02:14 - INFO - 	 ROC-AUC: 0.770
2024-11-03 02:14 - INFO - 	 PR-AUC: 0.234
2024-11-03 02:14 - INFO - 	 Recall for 0.4 precision: 0.119
2024-11-03 02:14 - INFO - 	 Best Val. Loss: 0.231
2024-11-03 02:14 - INFO - 	 Best ROC-AUC: 0.774
2024-11-03 02:14 - INFO - 	 Best PR-AUC: 0.267
2024-11-03 02:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-03 02:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 02:14 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-03 02:14 - INFO - ---------------------------------------------
2024-11-03 02:16 - INFO - ---------------------------------------------
2024-11-03 02:16 - INFO - Epoch: 04 | Time: 1m 41s
2024-11-03 02:16 - INFO - 	 Train Loss: 0.178
2024-11-03 02:16 - INFO - 	 Val. Loss: 0.210
2024-11-03 02:16 - INFO - 	 ROC-AUC: 0.795
2024-11-03 02:16 - INFO - 	 PR-AUC: 0.251
2024-11-03 02:16 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-03 02:16 - INFO - 	 Best Val. Loss: 0.210
2024-11-03 02:16 - INFO - 	 Best ROC-AUC: 0.795
2024-11-03 02:16 - INFO - 	 Best PR-AUC: 0.267
2024-11-03 02:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-03 02:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 02:16 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-03 02:16 - INFO - ---------------------------------------------
2024-11-03 02:17 - INFO - ---------------------------------------------
2024-11-03 02:17 - INFO - Epoch: 05 | Time: 1m 41s
2024-11-03 02:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29263
2024-11-03 02:17 - INFO - 	 Train Loss: 0.168
2024-11-03 02:17 - INFO - 	 Val. Loss: 0.187
2024-11-03 02:17 - INFO - 	 ROC-AUC: 0.814
2024-11-03 02:17 - INFO - 	 PR-AUC: 0.293
2024-11-03 02:17 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-03 02:17 - INFO - 	 Best Val. Loss: 0.187
2024-11-03 02:17 - INFO - 	 Best ROC-AUC: 0.814
2024-11-03 02:17 - INFO - 	 Best PR-AUC: 0.293
2024-11-03 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-03 02:17 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-03 02:17 - INFO - ---------------------------------------------
2024-11-03 02:19 - INFO - ---------------------------------------------
2024-11-03 02:19 - INFO - Epoch: 06 | Time: 1m 42s
2024-11-03 02:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31703
2024-11-03 02:19 - INFO - 	 Train Loss: 0.158
2024-11-03 02:19 - INFO - 	 Val. Loss: 0.179
2024-11-03 02:19 - INFO - 	 ROC-AUC: 0.830
2024-11-03 02:19 - INFO - 	 PR-AUC: 0.317
2024-11-03 02:19 - INFO - 	 Recall for 0.4 precision: 0.364
2024-11-03 02:19 - INFO - 	 Best Val. Loss: 0.179
2024-11-03 02:19 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 02:19 - INFO - 	 Best PR-AUC: 0.317
2024-11-03 02:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.782
2024-11-03 02:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 02:19 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 02:19 - INFO - ---------------------------------------------
2024-11-03 02:21 - INFO - ---------------------------------------------
2024-11-03 02:21 - INFO - Epoch: 07 | Time: 1m 41s
2024-11-03 02:21 - INFO - 	 Train Loss: 0.154
2024-11-03 02:21 - INFO - 	 Val. Loss: 0.163
2024-11-03 02:21 - INFO - 	 ROC-AUC: 0.847
2024-11-03 02:21 - INFO - 	 PR-AUC: 0.310
2024-11-03 02:21 - INFO - 	 Recall for 0.4 precision: 0.304
2024-11-03 02:21 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 02:21 - INFO - 	 Best ROC-AUC: 0.847
2024-11-03 02:21 - INFO - 	 Best PR-AUC: 0.317
2024-11-03 02:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 02:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 02:21 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 02:21 - INFO - ---------------------------------------------
2024-11-03 02:23 - INFO - ---------------------------------------------
2024-11-03 02:23 - INFO - Epoch: 08 | Time: 1m 45s
2024-11-03 02:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31795
2024-11-03 02:23 - INFO - 	 Train Loss: 0.150
2024-11-03 02:23 - INFO - 	 Val. Loss: 0.164
2024-11-03 02:23 - INFO - 	 ROC-AUC: 0.854
2024-11-03 02:23 - INFO - 	 PR-AUC: 0.318
2024-11-03 02:23 - INFO - 	 Recall for 0.4 precision: 0.371
2024-11-03 02:23 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 02:23 - INFO - 	 Best ROC-AUC: 0.854
2024-11-03 02:23 - INFO - 	 Best PR-AUC: 0.318
2024-11-03 02:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 02:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 02:23 - INFO - 	 Best Recall for 0.4 precision: 0.371
2024-11-03 02:23 - INFO - ---------------------------------------------
2024-11-03 02:24 - INFO - ---------------------------------------------
2024-11-03 02:24 - INFO - Epoch: 09 | Time: 1m 46s
2024-11-03 02:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33134
2024-11-03 02:24 - INFO - 	 Train Loss: 0.148
2024-11-03 02:24 - INFO - 	 Val. Loss: 0.164
2024-11-03 02:24 - INFO - 	 ROC-AUC: 0.860
2024-11-03 02:24 - INFO - 	 PR-AUC: 0.331
2024-11-03 02:24 - INFO - 	 Recall for 0.4 precision: 0.403
2024-11-03 02:24 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 02:24 - INFO - 	 Best ROC-AUC: 0.860
2024-11-03 02:24 - INFO - 	 Best PR-AUC: 0.331
2024-11-03 02:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 02:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 02:24 - INFO - 	 Best Recall for 0.4 precision: 0.403
2024-11-03 02:24 - INFO - ---------------------------------------------
2024-11-03 02:26 - INFO - ---------------------------------------------
2024-11-03 02:26 - INFO - Epoch: 10 | Time: 1m 46s
2024-11-03 02:26 - INFO - 	 Train Loss: 0.145
2024-11-03 02:26 - INFO - 	 Val. Loss: 0.144
2024-11-03 02:26 - INFO - 	 ROC-AUC: 0.884
2024-11-03 02:26 - INFO - 	 PR-AUC: 0.320
2024-11-03 02:26 - INFO - 	 Recall for 0.4 precision: 0.390
2024-11-03 02:26 - INFO - 	 Best Val. Loss: 0.144
2024-11-03 02:26 - INFO - 	 Best ROC-AUC: 0.884
2024-11-03 02:26 - INFO - 	 Best PR-AUC: 0.331
2024-11-03 02:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.788
2024-11-03 02:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 02:26 - INFO - 	 Best Recall for 0.4 precision: 0.403
2024-11-03 02:26 - INFO - ---------------------------------------------
2024-11-03 02:29 - INFO - Fit the preprocessing pipeline
2024-11-03 02:29 - INFO - Training using device: mps
2024-11-03 02:29 - INFO - Creating generators
2024-11-03 02:29 - INFO - The model has 651,257 trainable parameters
2024-11-03 02:29 - INFO - * Model:
2024-11-03 02:29 - INFO - * -----------
2024-11-03 02:29 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 02:29 - INFO - * -----------
2024-11-03 02:29 - INFO - Evaluating model based on: aucpr
2024-11-03 02:29 - INFO - Training..

2024-11-03 02:30 - INFO - ---------------------------------------------
2024-11-03 02:30 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-03 02:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17019
2024-11-03 02:30 - INFO - 	 Train Loss: 0.260
2024-11-03 02:30 - INFO - 	 Val. Loss: 0.300
2024-11-03 02:30 - INFO - 	 ROC-AUC: 0.734
2024-11-03 02:30 - INFO - 	 PR-AUC: 0.170
2024-11-03 02:30 - INFO - 	 Recall for 0.4 precision: 0.063
2024-11-03 02:30 - INFO - 	 Best Val. Loss: 0.300
2024-11-03 02:30 - INFO - 	 Best ROC-AUC: 0.734
2024-11-03 02:30 - INFO - 	 Best PR-AUC: 0.170
2024-11-03 02:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.699
2024-11-03 02:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.101
2024-11-03 02:30 - INFO - 	 Best Recall for 0.4 precision: 0.063
2024-11-03 02:30 - INFO - ---------------------------------------------
2024-11-03 02:32 - INFO - ---------------------------------------------
2024-11-03 02:32 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 02:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26062
2024-11-03 02:32 - INFO - 	 Train Loss: 0.209
2024-11-03 02:32 - INFO - 	 Val. Loss: 0.249
2024-11-03 02:32 - INFO - 	 ROC-AUC: 0.777
2024-11-03 02:32 - INFO - 	 PR-AUC: 0.261
2024-11-03 02:32 - INFO - 	 Recall for 0.4 precision: 0.158
2024-11-03 02:32 - INFO - 	 Best Val. Loss: 0.249
2024-11-03 02:32 - INFO - 	 Best ROC-AUC: 0.777
2024-11-03 02:32 - INFO - 	 Best PR-AUC: 0.261
2024-11-03 02:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 02:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 02:32 - INFO - 	 Best Recall for 0.4 precision: 0.158
2024-11-03 02:32 - INFO - ---------------------------------------------
2024-11-03 02:34 - INFO - ---------------------------------------------
2024-11-03 02:34 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 02:34 - INFO - 	 Train Loss: 0.185
2024-11-03 02:34 - INFO - 	 Val. Loss: 0.220
2024-11-03 02:34 - INFO - 	 ROC-AUC: 0.778
2024-11-03 02:34 - INFO - 	 PR-AUC: 0.247
2024-11-03 02:34 - INFO - 	 Recall for 0.4 precision: 0.302
2024-11-03 02:34 - INFO - 	 Best Val. Loss: 0.220
2024-11-03 02:34 - INFO - 	 Best ROC-AUC: 0.778
2024-11-03 02:34 - INFO - 	 Best PR-AUC: 0.261
2024-11-03 02:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-03 02:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 02:34 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-03 02:34 - INFO - ---------------------------------------------
2024-11-03 02:36 - INFO - ---------------------------------------------
2024-11-03 02:36 - INFO - Epoch: 04 | Time: 1m 44s
2024-11-03 02:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27233
2024-11-03 02:36 - INFO - 	 Train Loss: 0.175
2024-11-03 02:36 - INFO - 	 Val. Loss: 0.202
2024-11-03 02:36 - INFO - 	 ROC-AUC: 0.784
2024-11-03 02:36 - INFO - 	 PR-AUC: 0.272
2024-11-03 02:36 - INFO - 	 Recall for 0.4 precision: 0.299
2024-11-03 02:36 - INFO - 	 Best Val. Loss: 0.202
2024-11-03 02:36 - INFO - 	 Best ROC-AUC: 0.784
2024-11-03 02:36 - INFO - 	 Best PR-AUC: 0.272
2024-11-03 02:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-03 02:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 02:36 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-03 02:36 - INFO - ---------------------------------------------
2024-11-03 02:37 - INFO - ---------------------------------------------
2024-11-03 02:37 - INFO - Epoch: 05 | Time: 1m 43s
2024-11-03 02:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.308
2024-11-03 02:37 - INFO - 	 Train Loss: 0.162
2024-11-03 02:37 - INFO - 	 Val. Loss: 0.192
2024-11-03 02:37 - INFO - 	 ROC-AUC: 0.797
2024-11-03 02:37 - INFO - 	 PR-AUC: 0.308
2024-11-03 02:37 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-03 02:37 - INFO - 	 Best Val. Loss: 0.192
2024-11-03 02:37 - INFO - 	 Best ROC-AUC: 0.797
2024-11-03 02:37 - INFO - 	 Best PR-AUC: 0.308
2024-11-03 02:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 02:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 02:37 - INFO - 	 Best Recall for 0.4 precision: 0.341
2024-11-03 02:37 - INFO - ---------------------------------------------
2024-11-03 02:39 - INFO - ---------------------------------------------
2024-11-03 02:39 - INFO - Epoch: 06 | Time: 1m 43s
2024-11-03 02:39 - INFO - 	 Train Loss: 0.159
2024-11-03 02:39 - INFO - 	 Val. Loss: 0.182
2024-11-03 02:39 - INFO - 	 ROC-AUC: 0.804
2024-11-03 02:39 - INFO - 	 PR-AUC: 0.281
2024-11-03 02:39 - INFO - 	 Recall for 0.4 precision: 0.257
2024-11-03 02:39 - INFO - 	 Best Val. Loss: 0.182
2024-11-03 02:39 - INFO - 	 Best ROC-AUC: 0.804
2024-11-03 02:39 - INFO - 	 Best PR-AUC: 0.308
2024-11-03 02:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-03 02:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 02:39 - INFO - 	 Best Recall for 0.4 precision: 0.341
2024-11-03 02:39 - INFO - ---------------------------------------------
2024-11-03 02:41 - INFO - ---------------------------------------------
2024-11-03 02:41 - INFO - Epoch: 07 | Time: 1m 44s
2024-11-03 02:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3112
2024-11-03 02:41 - INFO - 	 Train Loss: 0.154
2024-11-03 02:41 - INFO - 	 Val. Loss: 0.174
2024-11-03 02:41 - INFO - 	 ROC-AUC: 0.824
2024-11-03 02:41 - INFO - 	 PR-AUC: 0.311
2024-11-03 02:41 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-03 02:41 - INFO - 	 Best Val. Loss: 0.174
2024-11-03 02:41 - INFO - 	 Best ROC-AUC: 0.824
2024-11-03 02:41 - INFO - 	 Best PR-AUC: 0.311
2024-11-03 02:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.776
2024-11-03 02:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-03 02:41 - INFO - 	 Best Recall for 0.4 precision: 0.341
2024-11-03 02:41 - INFO - ---------------------------------------------
2024-11-03 02:43 - INFO - ---------------------------------------------
2024-11-03 02:43 - INFO - Epoch: 08 | Time: 1m 43s
2024-11-03 02:43 - INFO - 	 Train Loss: 0.151
2024-11-03 02:43 - INFO - 	 Val. Loss: 0.203
2024-11-03 02:43 - INFO - 	 ROC-AUC: 0.834
2024-11-03 02:43 - INFO - 	 PR-AUC: 0.303
2024-11-03 02:43 - INFO - 	 Recall for 0.4 precision: 0.275
2024-11-03 02:43 - INFO - 	 Best Val. Loss: 0.174
2024-11-03 02:43 - INFO - 	 Best ROC-AUC: 0.834
2024-11-03 02:43 - INFO - 	 Best PR-AUC: 0.311
2024-11-03 02:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 02:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-03 02:43 - INFO - 	 Best Recall for 0.4 precision: 0.341
2024-11-03 02:43 - INFO - ---------------------------------------------
2024-11-03 02:44 - INFO - ---------------------------------------------
2024-11-03 02:44 - INFO - Epoch: 09 | Time: 1m 43s
2024-11-03 02:44 - INFO - 	 Train Loss: 0.150
2024-11-03 02:44 - INFO - 	 Val. Loss: 0.179
2024-11-03 02:44 - INFO - 	 ROC-AUC: 0.814
2024-11-03 02:44 - INFO - 	 PR-AUC: 0.221
2024-11-03 02:44 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-03 02:44 - INFO - 	 Best Val. Loss: 0.174
2024-11-03 02:44 - INFO - 	 Best ROC-AUC: 0.834
2024-11-03 02:44 - INFO - 	 Best PR-AUC: 0.311
2024-11-03 02:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 02:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-03 02:44 - INFO - 	 Best Recall for 0.4 precision: 0.341
2024-11-03 02:44 - INFO - ---------------------------------------------
2024-11-03 02:46 - INFO - ---------------------------------------------
2024-11-03 02:46 - INFO - Epoch: 10 | Time: 1m 44s
2024-11-03 02:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33776
2024-11-03 02:46 - INFO - 	 Train Loss: 0.151
2024-11-03 02:46 - INFO - 	 Val. Loss: 0.164
2024-11-03 02:46 - INFO - 	 ROC-AUC: 0.832
2024-11-03 02:46 - INFO - 	 PR-AUC: 0.338
2024-11-03 02:46 - INFO - 	 Recall for 0.4 precision: 0.354
2024-11-03 02:46 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 02:46 - INFO - 	 Best ROC-AUC: 0.834
2024-11-03 02:46 - INFO - 	 Best PR-AUC: 0.338
2024-11-03 02:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 02:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 02:46 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-03 02:46 - INFO - ---------------------------------------------
2024-11-03 02:49 - INFO - Fit the preprocessing pipeline
2024-11-03 02:49 - INFO - Training using device: mps
2024-11-03 02:49 - INFO - Creating generators
2024-11-03 02:49 - INFO - The model has 651,257 trainable parameters
2024-11-03 02:49 - INFO - * Model:
2024-11-03 02:49 - INFO - * -----------
2024-11-03 02:49 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 02:49 - INFO - * -----------
2024-11-03 02:49 - INFO - Evaluating model based on: aucpr
2024-11-03 02:49 - INFO - Training..

2024-11-03 02:50 - INFO - ---------------------------------------------
2024-11-03 02:50 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-03 02:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16424
2024-11-03 02:50 - INFO - 	 Train Loss: 0.254
2024-11-03 02:50 - INFO - 	 Val. Loss: 0.317
2024-11-03 02:50 - INFO - 	 ROC-AUC: 0.752
2024-11-03 02:50 - INFO - 	 PR-AUC: 0.164
2024-11-03 02:50 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-03 02:50 - INFO - 	 Best Val. Loss: 0.317
2024-11-03 02:50 - INFO - 	 Best ROC-AUC: 0.752
2024-11-03 02:50 - INFO - 	 Best PR-AUC: 0.164
2024-11-03 02:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-03 02:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-03 02:50 - INFO - 	 Best Recall for 0.4 precision: 0.013
2024-11-03 02:50 - INFO - ---------------------------------------------
2024-11-03 02:52 - INFO - ---------------------------------------------
2024-11-03 02:52 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 02:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22465
2024-11-03 02:52 - INFO - 	 Train Loss: 0.205
2024-11-03 02:52 - INFO - 	 Val. Loss: 0.246
2024-11-03 02:52 - INFO - 	 ROC-AUC: 0.776
2024-11-03 02:52 - INFO - 	 PR-AUC: 0.225
2024-11-03 02:52 - INFO - 	 Recall for 0.4 precision: 0.153
2024-11-03 02:52 - INFO - 	 Best Val. Loss: 0.246
2024-11-03 02:52 - INFO - 	 Best ROC-AUC: 0.776
2024-11-03 02:52 - INFO - 	 Best PR-AUC: 0.225
2024-11-03 02:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-03 02:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.108
2024-11-03 02:52 - INFO - 	 Best Recall for 0.4 precision: 0.153
2024-11-03 02:52 - INFO - ---------------------------------------------
2024-11-03 02:54 - INFO - ---------------------------------------------
2024-11-03 02:54 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 02:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26151
2024-11-03 02:54 - INFO - 	 Train Loss: 0.187
2024-11-03 02:54 - INFO - 	 Val. Loss: 0.218
2024-11-03 02:54 - INFO - 	 ROC-AUC: 0.785
2024-11-03 02:54 - INFO - 	 PR-AUC: 0.262
2024-11-03 02:54 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-03 02:54 - INFO - 	 Best Val. Loss: 0.218
2024-11-03 02:54 - INFO - 	 Best ROC-AUC: 0.785
2024-11-03 02:54 - INFO - 	 Best PR-AUC: 0.262
2024-11-03 02:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-03 02:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 02:54 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 02:54 - INFO - ---------------------------------------------
2024-11-03 02:55 - INFO - ---------------------------------------------
2024-11-03 02:55 - INFO - Epoch: 04 | Time: 1m 41s
2024-11-03 02:55 - INFO - 	 Train Loss: 0.172
2024-11-03 02:55 - INFO - 	 Val. Loss: 0.202
2024-11-03 02:55 - INFO - 	 ROC-AUC: 0.809
2024-11-03 02:55 - INFO - 	 PR-AUC: 0.260
2024-11-03 02:55 - INFO - 	 Recall for 0.4 precision: 0.185
2024-11-03 02:55 - INFO - 	 Best Val. Loss: 0.202
2024-11-03 02:55 - INFO - 	 Best ROC-AUC: 0.809
2024-11-03 02:55 - INFO - 	 Best PR-AUC: 0.262
2024-11-03 02:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 02:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 02:55 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 02:55 - INFO - ---------------------------------------------
2024-11-03 02:57 - INFO - ---------------------------------------------
2024-11-03 02:57 - INFO - Epoch: 05 | Time: 1m 41s
2024-11-03 02:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26912
2024-11-03 02:57 - INFO - 	 Train Loss: 0.164
2024-11-03 02:57 - INFO - 	 Val. Loss: 0.195
2024-11-03 02:57 - INFO - 	 ROC-AUC: 0.803
2024-11-03 02:57 - INFO - 	 PR-AUC: 0.269
2024-11-03 02:57 - INFO - 	 Recall for 0.4 precision: 0.208
2024-11-03 02:57 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 02:57 - INFO - 	 Best ROC-AUC: 0.809
2024-11-03 02:57 - INFO - 	 Best PR-AUC: 0.269
2024-11-03 02:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 02:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-03 02:57 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 02:57 - INFO - ---------------------------------------------
2024-11-03 02:59 - INFO - ---------------------------------------------
2024-11-03 02:59 - INFO - Epoch: 06 | Time: 1m 41s
2024-11-03 02:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31311
2024-11-03 02:59 - INFO - 	 Train Loss: 0.158
2024-11-03 02:59 - INFO - 	 Val. Loss: 0.188
2024-11-03 02:59 - INFO - 	 ROC-AUC: 0.825
2024-11-03 02:59 - INFO - 	 PR-AUC: 0.313
2024-11-03 02:59 - INFO - 	 Recall for 0.4 precision: 0.410
2024-11-03 02:59 - INFO - 	 Best Val. Loss: 0.188
2024-11-03 02:59 - INFO - 	 Best ROC-AUC: 0.825
2024-11-03 02:59 - INFO - 	 Best PR-AUC: 0.313
2024-11-03 02:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.778
2024-11-03 02:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.140
2024-11-03 02:59 - INFO - 	 Best Recall for 0.4 precision: 0.410
2024-11-03 02:59 - INFO - ---------------------------------------------
2024-11-03 03:00 - INFO - ---------------------------------------------
2024-11-03 03:00 - INFO - Epoch: 07 | Time: 1m 41s
2024-11-03 03:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33779
2024-11-03 03:00 - INFO - 	 Train Loss: 0.154
2024-11-03 03:00 - INFO - 	 Val. Loss: 0.176
2024-11-03 03:00 - INFO - 	 ROC-AUC: 0.840
2024-11-03 03:00 - INFO - 	 PR-AUC: 0.338
2024-11-03 03:00 - INFO - 	 Recall for 0.4 precision: 0.423
2024-11-03 03:00 - INFO - 	 Best Val. Loss: 0.176
2024-11-03 03:00 - INFO - 	 Best ROC-AUC: 0.840
2024-11-03 03:00 - INFO - 	 Best PR-AUC: 0.338
2024-11-03 03:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.790
2024-11-03 03:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 03:00 - INFO - 	 Best Recall for 0.4 precision: 0.423
2024-11-03 03:00 - INFO - ---------------------------------------------
2024-11-03 03:02 - INFO - ---------------------------------------------
2024-11-03 03:02 - INFO - Epoch: 08 | Time: 1m 41s
2024-11-03 03:02 - INFO - 	 Train Loss: 0.151
2024-11-03 03:02 - INFO - 	 Val. Loss: 0.176
2024-11-03 03:02 - INFO - 	 ROC-AUC: 0.840
2024-11-03 03:02 - INFO - 	 PR-AUC: 0.310
2024-11-03 03:02 - INFO - 	 Recall for 0.4 precision: 0.351
2024-11-03 03:02 - INFO - 	 Best Val. Loss: 0.176
2024-11-03 03:02 - INFO - 	 Best ROC-AUC: 0.840
2024-11-03 03:02 - INFO - 	 Best PR-AUC: 0.338
2024-11-03 03:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.790
2024-11-03 03:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 03:02 - INFO - 	 Best Recall for 0.4 precision: 0.423
2024-11-03 03:02 - INFO - ---------------------------------------------
2024-11-03 03:04 - INFO - ---------------------------------------------
2024-11-03 03:04 - INFO - Epoch: 09 | Time: 1m 41s
2024-11-03 03:04 - INFO - 	 Train Loss: 0.148
2024-11-03 03:04 - INFO - 	 Val. Loss: 0.168
2024-11-03 03:04 - INFO - 	 ROC-AUC: 0.854
2024-11-03 03:04 - INFO - 	 PR-AUC: 0.299
2024-11-03 03:04 - INFO - 	 Recall for 0.4 precision: 0.311
2024-11-03 03:04 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 03:04 - INFO - 	 Best ROC-AUC: 0.854
2024-11-03 03:04 - INFO - 	 Best PR-AUC: 0.338
2024-11-03 03:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.790
2024-11-03 03:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 03:04 - INFO - 	 Best Recall for 0.4 precision: 0.423
2024-11-03 03:04 - INFO - ---------------------------------------------
2024-11-03 03:06 - INFO - ---------------------------------------------
2024-11-03 03:06 - INFO - Epoch: 10 | Time: 1m 42s
2024-11-03 03:06 - INFO - 	 Train Loss: 0.145
2024-11-03 03:06 - INFO - 	 Val. Loss: 0.169
2024-11-03 03:06 - INFO - 	 ROC-AUC: 0.871
2024-11-03 03:06 - INFO - 	 PR-AUC: 0.295
2024-11-03 03:06 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-03 03:06 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 03:06 - INFO - 	 Best ROC-AUC: 0.871
2024-11-03 03:06 - INFO - 	 Best PR-AUC: 0.338
2024-11-03 03:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 03:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 03:06 - INFO - 	 Best Recall for 0.4 precision: 0.423
2024-11-03 03:06 - INFO - ---------------------------------------------
2024-11-03 03:08 - INFO - Fit the preprocessing pipeline
2024-11-03 03:08 - INFO - Training using device: mps
2024-11-03 03:08 - INFO - Creating generators
2024-11-03 03:08 - INFO - The model has 651,257 trainable parameters
2024-11-03 03:08 - INFO - * Model:
2024-11-03 03:08 - INFO - * -----------
2024-11-03 03:08 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 03:08 - INFO - * -----------
2024-11-03 03:08 - INFO - Evaluating model based on: aucpr
2024-11-03 03:08 - INFO - Training..

2024-11-03 03:10 - INFO - ---------------------------------------------
2024-11-03 03:10 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-03 03:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08714
2024-11-03 03:10 - INFO - 	 Train Loss: 0.256
2024-11-03 03:10 - INFO - 	 Val. Loss: 0.346
2024-11-03 03:10 - INFO - 	 ROC-AUC: 0.508
2024-11-03 03:10 - INFO - 	 PR-AUC: 0.087
2024-11-03 03:10 - INFO - 	 Recall for 0.4 precision: 0.033
2024-11-03 03:10 - INFO - 	 Best Val. Loss: 0.346
2024-11-03 03:10 - INFO - 	 Best ROC-AUC: 0.508
2024-11-03 03:10 - INFO - 	 Best PR-AUC: 0.087
2024-11-03 03:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.556
2024-11-03 03:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.062
2024-11-03 03:10 - INFO - 	 Best Recall for 0.4 precision: 0.033
2024-11-03 03:10 - INFO - ---------------------------------------------
2024-11-03 03:12 - INFO - ---------------------------------------------
2024-11-03 03:12 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 03:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21222
2024-11-03 03:12 - INFO - 	 Train Loss: 0.210
2024-11-03 03:12 - INFO - 	 Val. Loss: 0.234
2024-11-03 03:12 - INFO - 	 ROC-AUC: 0.780
2024-11-03 03:12 - INFO - 	 PR-AUC: 0.212
2024-11-03 03:12 - INFO - 	 Recall for 0.4 precision: 0.107
2024-11-03 03:12 - INFO - 	 Best Val. Loss: 0.234
2024-11-03 03:12 - INFO - 	 Best ROC-AUC: 0.780
2024-11-03 03:12 - INFO - 	 Best PR-AUC: 0.212
2024-11-03 03:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-03 03:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-03 03:12 - INFO - 	 Best Recall for 0.4 precision: 0.107
2024-11-03 03:12 - INFO - ---------------------------------------------
2024-11-03 03:13 - INFO - ---------------------------------------------
2024-11-03 03:13 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 03:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23603
2024-11-03 03:13 - INFO - 	 Train Loss: 0.189
2024-11-03 03:13 - INFO - 	 Val. Loss: 0.221
2024-11-03 03:13 - INFO - 	 ROC-AUC: 0.785
2024-11-03 03:13 - INFO - 	 PR-AUC: 0.236
2024-11-03 03:13 - INFO - 	 Recall for 0.4 precision: 0.072
2024-11-03 03:13 - INFO - 	 Best Val. Loss: 0.221
2024-11-03 03:13 - INFO - 	 Best ROC-AUC: 0.785
2024-11-03 03:13 - INFO - 	 Best PR-AUC: 0.236
2024-11-03 03:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 03:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-03 03:13 - INFO - 	 Best Recall for 0.4 precision: 0.107
2024-11-03 03:13 - INFO - ---------------------------------------------
2024-11-03 03:15 - INFO - ---------------------------------------------
2024-11-03 03:15 - INFO - Epoch: 04 | Time: 1m 42s
2024-11-03 03:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30206
2024-11-03 03:15 - INFO - 	 Train Loss: 0.174
2024-11-03 03:15 - INFO - 	 Val. Loss: 0.191
2024-11-03 03:15 - INFO - 	 ROC-AUC: 0.808
2024-11-03 03:15 - INFO - 	 PR-AUC: 0.302
2024-11-03 03:15 - INFO - 	 Recall for 0.4 precision: 0.332
2024-11-03 03:15 - INFO - 	 Best Val. Loss: 0.191
2024-11-03 03:15 - INFO - 	 Best ROC-AUC: 0.808
2024-11-03 03:15 - INFO - 	 Best PR-AUC: 0.302
2024-11-03 03:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-03 03:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-03 03:15 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 03:15 - INFO - ---------------------------------------------
2024-11-03 03:17 - INFO - ---------------------------------------------
2024-11-03 03:17 - INFO - Epoch: 05 | Time: 1m 43s
2024-11-03 03:17 - INFO - 	 Train Loss: 0.165
2024-11-03 03:17 - INFO - 	 Val. Loss: 0.185
2024-11-03 03:17 - INFO - 	 ROC-AUC: 0.812
2024-11-03 03:17 - INFO - 	 PR-AUC: 0.299
2024-11-03 03:17 - INFO - 	 Recall for 0.4 precision: 0.270
2024-11-03 03:17 - INFO - 	 Best Val. Loss: 0.185
2024-11-03 03:17 - INFO - 	 Best ROC-AUC: 0.812
2024-11-03 03:17 - INFO - 	 Best PR-AUC: 0.302
2024-11-03 03:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.771
2024-11-03 03:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-03 03:17 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 03:17 - INFO - ---------------------------------------------
2024-11-03 03:18 - INFO - ---------------------------------------------
2024-11-03 03:18 - INFO - Epoch: 06 | Time: 1m 43s
2024-11-03 03:18 - INFO - 	 Train Loss: 0.160
2024-11-03 03:18 - INFO - 	 Val. Loss: 0.171
2024-11-03 03:18 - INFO - 	 ROC-AUC: 0.832
2024-11-03 03:18 - INFO - 	 PR-AUC: 0.289
2024-11-03 03:18 - INFO - 	 Recall for 0.4 precision: 0.299
2024-11-03 03:18 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 03:18 - INFO - 	 Best ROC-AUC: 0.832
2024-11-03 03:18 - INFO - 	 Best PR-AUC: 0.302
2024-11-03 03:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.772
2024-11-03 03:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-03 03:18 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 03:18 - INFO - ---------------------------------------------
2024-11-03 03:20 - INFO - ---------------------------------------------
2024-11-03 03:20 - INFO - Epoch: 07 | Time: 1m 43s
2024-11-03 03:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35484
2024-11-03 03:20 - INFO - 	 Train Loss: 0.156
2024-11-03 03:20 - INFO - 	 Val. Loss: 0.166
2024-11-03 03:20 - INFO - 	 ROC-AUC: 0.850
2024-11-03 03:20 - INFO - 	 PR-AUC: 0.355
2024-11-03 03:20 - INFO - 	 Recall for 0.4 precision: 0.384
2024-11-03 03:20 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 03:20 - INFO - 	 Best ROC-AUC: 0.850
2024-11-03 03:20 - INFO - 	 Best PR-AUC: 0.355
2024-11-03 03:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.786
2024-11-03 03:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 03:20 - INFO - 	 Best Recall for 0.4 precision: 0.384
2024-11-03 03:20 - INFO - ---------------------------------------------
2024-11-03 03:22 - INFO - ---------------------------------------------
2024-11-03 03:22 - INFO - Epoch: 08 | Time: 1m 43s
2024-11-03 03:22 - INFO - 	 Train Loss: 0.151
2024-11-03 03:22 - INFO - 	 Val. Loss: 0.166
2024-11-03 03:22 - INFO - 	 ROC-AUC: 0.849
2024-11-03 03:22 - INFO - 	 PR-AUC: 0.340
2024-11-03 03:22 - INFO - 	 Recall for 0.4 precision: 0.462
2024-11-03 03:22 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 03:22 - INFO - 	 Best ROC-AUC: 0.850
2024-11-03 03:22 - INFO - 	 Best PR-AUC: 0.355
2024-11-03 03:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.786
2024-11-03 03:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 03:22 - INFO - 	 Best Recall for 0.4 precision: 0.462
2024-11-03 03:22 - INFO - ---------------------------------------------
2024-11-03 03:24 - INFO - ---------------------------------------------
2024-11-03 03:24 - INFO - Epoch: 09 | Time: 1m 43s
2024-11-03 03:24 - INFO - 	 Train Loss: 0.148
2024-11-03 03:24 - INFO - 	 Val. Loss: 0.161
2024-11-03 03:24 - INFO - 	 ROC-AUC: 0.860
2024-11-03 03:24 - INFO - 	 PR-AUC: 0.305
2024-11-03 03:24 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-03 03:24 - INFO - 	 Best Val. Loss: 0.161
2024-11-03 03:24 - INFO - 	 Best ROC-AUC: 0.860
2024-11-03 03:24 - INFO - 	 Best PR-AUC: 0.355
2024-11-03 03:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.771
2024-11-03 03:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 03:24 - INFO - 	 Best Recall for 0.4 precision: 0.462
2024-11-03 03:24 - INFO - ---------------------------------------------
2024-11-03 03:25 - INFO - ---------------------------------------------
2024-11-03 03:25 - INFO - Epoch: 10 | Time: 1m 43s
2024-11-03 03:25 - INFO - 	 Train Loss: 0.146
2024-11-03 03:25 - INFO - 	 Val. Loss: 0.144
2024-11-03 03:25 - INFO - 	 ROC-AUC: 0.885
2024-11-03 03:25 - INFO - 	 PR-AUC: 0.315
2024-11-03 03:25 - INFO - 	 Recall for 0.4 precision: 0.358
2024-11-03 03:25 - INFO - 	 Best Val. Loss: 0.144
2024-11-03 03:25 - INFO - 	 Best ROC-AUC: 0.885
2024-11-03 03:25 - INFO - 	 Best PR-AUC: 0.355
2024-11-03 03:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.795
2024-11-03 03:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 03:25 - INFO - 	 Best Recall for 0.4 precision: 0.462
2024-11-03 03:25 - INFO - ---------------------------------------------
2024-11-03 03:28 - INFO - Fit the preprocessing pipeline
2024-11-03 03:28 - INFO - Training using device: mps
2024-11-03 03:28 - INFO - Creating generators
2024-11-03 03:28 - INFO - The model has 651,257 trainable parameters
2024-11-03 03:28 - INFO - * Model:
2024-11-03 03:28 - INFO - * -----------
2024-11-03 03:28 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 03:28 - INFO - * -----------
2024-11-03 03:28 - INFO - Evaluating model based on: aucpr
2024-11-03 03:28 - INFO - Training..

2024-11-03 03:30 - INFO - ---------------------------------------------
2024-11-03 03:30 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-03 03:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15662
2024-11-03 03:30 - INFO - 	 Train Loss: 0.251
2024-11-03 03:30 - INFO - 	 Val. Loss: 0.286
2024-11-03 03:30 - INFO - 	 ROC-AUC: 0.739
2024-11-03 03:30 - INFO - 	 PR-AUC: 0.157
2024-11-03 03:30 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-03 03:30 - INFO - 	 Best Val. Loss: 0.286
2024-11-03 03:30 - INFO - 	 Best ROC-AUC: 0.739
2024-11-03 03:30 - INFO - 	 Best PR-AUC: 0.157
2024-11-03 03:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-11-03 03:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.102
2024-11-03 03:30 - INFO - 	 Best Recall for 0.4 precision: 0.010
2024-11-03 03:30 - INFO - ---------------------------------------------
2024-11-03 03:31 - INFO - ---------------------------------------------
2024-11-03 03:31 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 03:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20002
2024-11-03 03:31 - INFO - 	 Train Loss: 0.208
2024-11-03 03:31 - INFO - 	 Val. Loss: 0.251
2024-11-03 03:31 - INFO - 	 ROC-AUC: 0.753
2024-11-03 03:31 - INFO - 	 PR-AUC: 0.200
2024-11-03 03:31 - INFO - 	 Recall for 0.4 precision: 0.133
2024-11-03 03:31 - INFO - 	 Best Val. Loss: 0.251
2024-11-03 03:31 - INFO - 	 Best ROC-AUC: 0.753
2024-11-03 03:31 - INFO - 	 Best PR-AUC: 0.200
2024-11-03 03:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-03 03:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.114
2024-11-03 03:31 - INFO - 	 Best Recall for 0.4 precision: 0.133
2024-11-03 03:31 - INFO - ---------------------------------------------
2024-11-03 03:33 - INFO - ---------------------------------------------
2024-11-03 03:33 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 03:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27287
2024-11-03 03:33 - INFO - 	 Train Loss: 0.187
2024-11-03 03:33 - INFO - 	 Val. Loss: 0.209
2024-11-03 03:33 - INFO - 	 ROC-AUC: 0.784
2024-11-03 03:33 - INFO - 	 PR-AUC: 0.273
2024-11-03 03:33 - INFO - 	 Recall for 0.4 precision: 0.302
2024-11-03 03:33 - INFO - 	 Best Val. Loss: 0.209
2024-11-03 03:33 - INFO - 	 Best ROC-AUC: 0.784
2024-11-03 03:33 - INFO - 	 Best PR-AUC: 0.273
2024-11-03 03:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-03 03:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 03:33 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-03 03:33 - INFO - ---------------------------------------------
2024-11-03 03:35 - INFO - ---------------------------------------------
2024-11-03 03:35 - INFO - Epoch: 04 | Time: 1m 41s
2024-11-03 03:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29912
2024-11-03 03:35 - INFO - 	 Train Loss: 0.172
2024-11-03 03:35 - INFO - 	 Val. Loss: 0.188
2024-11-03 03:35 - INFO - 	 ROC-AUC: 0.793
2024-11-03 03:35 - INFO - 	 PR-AUC: 0.299
2024-11-03 03:35 - INFO - 	 Recall for 0.4 precision: 0.311
2024-11-03 03:35 - INFO - 	 Best Val. Loss: 0.188
2024-11-03 03:35 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 03:35 - INFO - 	 Best PR-AUC: 0.299
2024-11-03 03:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-03 03:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 03:35 - INFO - 	 Best Recall for 0.4 precision: 0.311
2024-11-03 03:35 - INFO - ---------------------------------------------
2024-11-03 03:36 - INFO - ---------------------------------------------
2024-11-03 03:36 - INFO - Epoch: 05 | Time: 1m 41s
2024-11-03 03:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31391
2024-11-03 03:36 - INFO - 	 Train Loss: 0.163
2024-11-03 03:36 - INFO - 	 Val. Loss: 0.180
2024-11-03 03:36 - INFO - 	 ROC-AUC: 0.795
2024-11-03 03:36 - INFO - 	 PR-AUC: 0.314
2024-11-03 03:36 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-03 03:36 - INFO - 	 Best Val. Loss: 0.180
2024-11-03 03:36 - INFO - 	 Best ROC-AUC: 0.795
2024-11-03 03:36 - INFO - 	 Best PR-AUC: 0.314
2024-11-03 03:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-03 03:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 03:36 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-03 03:36 - INFO - ---------------------------------------------
2024-11-03 03:38 - INFO - ---------------------------------------------
2024-11-03 03:38 - INFO - Epoch: 06 | Time: 1m 41s
2024-11-03 03:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32061
2024-11-03 03:38 - INFO - 	 Train Loss: 0.159
2024-11-03 03:38 - INFO - 	 Val. Loss: 0.178
2024-11-03 03:38 - INFO - 	 ROC-AUC: 0.817
2024-11-03 03:38 - INFO - 	 PR-AUC: 0.321
2024-11-03 03:38 - INFO - 	 Recall for 0.4 precision: 0.354
2024-11-03 03:38 - INFO - 	 Best Val. Loss: 0.178
2024-11-03 03:38 - INFO - 	 Best ROC-AUC: 0.817
2024-11-03 03:38 - INFO - 	 Best PR-AUC: 0.321
2024-11-03 03:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.778
2024-11-03 03:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.184
2024-11-03 03:38 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-03 03:38 - INFO - ---------------------------------------------
2024-11-03 03:40 - INFO - ---------------------------------------------
2024-11-03 03:40 - INFO - Epoch: 07 | Time: 1m 41s
2024-11-03 03:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32492
2024-11-03 03:40 - INFO - 	 Train Loss: 0.154
2024-11-03 03:40 - INFO - 	 Val. Loss: 0.171
2024-11-03 03:40 - INFO - 	 ROC-AUC: 0.820
2024-11-03 03:40 - INFO - 	 PR-AUC: 0.325
2024-11-03 03:40 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-03 03:40 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 03:40 - INFO - 	 Best ROC-AUC: 0.820
2024-11-03 03:40 - INFO - 	 Best PR-AUC: 0.325
2024-11-03 03:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 03:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.175
2024-11-03 03:40 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-03 03:40 - INFO - ---------------------------------------------
2024-11-03 03:41 - INFO - ---------------------------------------------
2024-11-03 03:41 - INFO - Epoch: 08 | Time: 1m 42s
2024-11-03 03:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34131
2024-11-03 03:41 - INFO - 	 Train Loss: 0.151
2024-11-03 03:41 - INFO - 	 Val. Loss: 0.164
2024-11-03 03:41 - INFO - 	 ROC-AUC: 0.833
2024-11-03 03:41 - INFO - 	 PR-AUC: 0.341
2024-11-03 03:41 - INFO - 	 Recall for 0.4 precision: 0.353
2024-11-03 03:41 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 03:41 - INFO - 	 Best ROC-AUC: 0.833
2024-11-03 03:41 - INFO - 	 Best PR-AUC: 0.341
2024-11-03 03:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-03 03:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 03:41 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-03 03:41 - INFO - ---------------------------------------------
2024-11-03 03:43 - INFO - ---------------------------------------------
2024-11-03 03:43 - INFO - Epoch: 09 | Time: 1m 41s
2024-11-03 03:43 - INFO - 	 Train Loss: 0.148
2024-11-03 03:43 - INFO - 	 Val. Loss: 0.164
2024-11-03 03:43 - INFO - 	 ROC-AUC: 0.843
2024-11-03 03:43 - INFO - 	 PR-AUC: 0.318
2024-11-03 03:43 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-03 03:43 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 03:43 - INFO - 	 Best ROC-AUC: 0.843
2024-11-03 03:43 - INFO - 	 Best PR-AUC: 0.341
2024-11-03 03:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-03 03:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 03:43 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-03 03:43 - INFO - ---------------------------------------------
2024-11-03 03:45 - INFO - ---------------------------------------------
2024-11-03 03:45 - INFO - Epoch: 10 | Time: 1m 42s
2024-11-03 03:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37757
2024-11-03 03:45 - INFO - 	 Train Loss: 0.147
2024-11-03 03:45 - INFO - 	 Val. Loss: 0.143
2024-11-03 03:45 - INFO - 	 ROC-AUC: 0.868
2024-11-03 03:45 - INFO - 	 PR-AUC: 0.378
2024-11-03 03:45 - INFO - 	 Recall for 0.4 precision: 0.447
2024-11-03 03:45 - INFO - 	 Best Val. Loss: 0.143
2024-11-03 03:45 - INFO - 	 Best ROC-AUC: 0.868
2024-11-03 03:45 - INFO - 	 Best PR-AUC: 0.378
2024-11-03 03:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.781
2024-11-03 03:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 03:45 - INFO - 	 Best Recall for 0.4 precision: 0.447
2024-11-03 03:45 - INFO - ---------------------------------------------
2024-11-03 03:48 - INFO - Fit the preprocessing pipeline
2024-11-03 03:48 - INFO - Training using device: mps
2024-11-03 03:48 - INFO - Creating generators
2024-11-03 03:48 - INFO - The model has 651,257 trainable parameters
2024-11-03 03:48 - INFO - * Model:
2024-11-03 03:48 - INFO - * -----------
2024-11-03 03:48 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 03:48 - INFO - * -----------
2024-11-03 03:48 - INFO - Evaluating model based on: aucpr
2024-11-03 03:48 - INFO - Training..

2024-11-03 03:49 - INFO - ---------------------------------------------
2024-11-03 03:49 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-03 03:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24074
2024-11-03 03:49 - INFO - 	 Train Loss: 0.255
2024-11-03 03:49 - INFO - 	 Val. Loss: 0.298
2024-11-03 03:49 - INFO - 	 ROC-AUC: 0.751
2024-11-03 03:49 - INFO - 	 PR-AUC: 0.241
2024-11-03 03:49 - INFO - 	 Recall for 0.4 precision: 0.200
2024-11-03 03:49 - INFO - 	 Best Val. Loss: 0.298
2024-11-03 03:49 - INFO - 	 Best ROC-AUC: 0.751
2024-11-03 03:49 - INFO - 	 Best PR-AUC: 0.241
2024-11-03 03:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-11-03 03:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-03 03:49 - INFO - 	 Best Recall for 0.4 precision: 0.200
2024-11-03 03:49 - INFO - ---------------------------------------------
2024-11-03 03:51 - INFO - ---------------------------------------------
2024-11-03 03:51 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 03:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24542
2024-11-03 03:51 - INFO - 	 Train Loss: 0.212
2024-11-03 03:51 - INFO - 	 Val. Loss: 0.216
2024-11-03 03:51 - INFO - 	 ROC-AUC: 0.761
2024-11-03 03:51 - INFO - 	 PR-AUC: 0.245
2024-11-03 03:51 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-03 03:51 - INFO - 	 Best Val. Loss: 0.216
2024-11-03 03:51 - INFO - 	 Best ROC-AUC: 0.761
2024-11-03 03:51 - INFO - 	 Best PR-AUC: 0.245
2024-11-03 03:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-11-03 03:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 03:51 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-03 03:51 - INFO - ---------------------------------------------
2024-11-03 03:53 - INFO - ---------------------------------------------
2024-11-03 03:53 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 03:53 - INFO - 	 Train Loss: 0.189
2024-11-03 03:53 - INFO - 	 Val. Loss: 0.212
2024-11-03 03:53 - INFO - 	 ROC-AUC: 0.762
2024-11-03 03:53 - INFO - 	 PR-AUC: 0.233
2024-11-03 03:53 - INFO - 	 Recall for 0.4 precision: 0.156
2024-11-03 03:53 - INFO - 	 Best Val. Loss: 0.212
2024-11-03 03:53 - INFO - 	 Best ROC-AUC: 0.762
2024-11-03 03:53 - INFO - 	 Best PR-AUC: 0.245
2024-11-03 03:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.731
2024-11-03 03:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 03:53 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-03 03:53 - INFO - ---------------------------------------------
2024-11-03 03:54 - INFO - ---------------------------------------------
2024-11-03 03:54 - INFO - Epoch: 04 | Time: 1m 41s
2024-11-03 03:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25774
2024-11-03 03:54 - INFO - 	 Train Loss: 0.172
2024-11-03 03:54 - INFO - 	 Val. Loss: 0.208
2024-11-03 03:54 - INFO - 	 ROC-AUC: 0.762
2024-11-03 03:54 - INFO - 	 PR-AUC: 0.258
2024-11-03 03:54 - INFO - 	 Recall for 0.4 precision: 0.254
2024-11-03 03:54 - INFO - 	 Best Val. Loss: 0.208
2024-11-03 03:54 - INFO - 	 Best ROC-AUC: 0.762
2024-11-03 03:54 - INFO - 	 Best PR-AUC: 0.258
2024-11-03 03:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.739
2024-11-03 03:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 03:54 - INFO - 	 Best Recall for 0.4 precision: 0.254
2024-11-03 03:54 - INFO - ---------------------------------------------
2024-11-03 03:56 - INFO - ---------------------------------------------
2024-11-03 03:56 - INFO - Epoch: 05 | Time: 1m 43s
2024-11-03 03:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30366
2024-11-03 03:56 - INFO - 	 Train Loss: 0.163
2024-11-03 03:56 - INFO - 	 Val. Loss: 0.186
2024-11-03 03:56 - INFO - 	 ROC-AUC: 0.800
2024-11-03 03:56 - INFO - 	 PR-AUC: 0.304
2024-11-03 03:56 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-03 03:56 - INFO - 	 Best Val. Loss: 0.186
2024-11-03 03:56 - INFO - 	 Best ROC-AUC: 0.800
2024-11-03 03:56 - INFO - 	 Best PR-AUC: 0.304
2024-11-03 03:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-03 03:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 03:56 - INFO - 	 Best Recall for 0.4 precision: 0.273
2024-11-03 03:56 - INFO - ---------------------------------------------
2024-11-03 03:58 - INFO - ---------------------------------------------
2024-11-03 03:58 - INFO - Epoch: 06 | Time: 1m 43s
2024-11-03 03:58 - INFO - 	 Train Loss: 0.157
2024-11-03 03:58 - INFO - 	 Val. Loss: 0.175
2024-11-03 03:58 - INFO - 	 ROC-AUC: 0.816
2024-11-03 03:58 - INFO - 	 PR-AUC: 0.302
2024-11-03 03:58 - INFO - 	 Recall for 0.4 precision: 0.304
2024-11-03 03:58 - INFO - 	 Best Val. Loss: 0.175
2024-11-03 03:58 - INFO - 	 Best ROC-AUC: 0.816
2024-11-03 03:58 - INFO - 	 Best PR-AUC: 0.304
2024-11-03 03:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 03:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 03:58 - INFO - 	 Best Recall for 0.4 precision: 0.304
2024-11-03 03:58 - INFO - ---------------------------------------------
2024-11-03 03:59 - INFO - ---------------------------------------------
2024-11-03 03:59 - INFO - Epoch: 07 | Time: 1m 43s
2024-11-03 03:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32698
2024-11-03 03:59 - INFO - 	 Train Loss: 0.153
2024-11-03 03:59 - INFO - 	 Val. Loss: 0.179
2024-11-03 03:59 - INFO - 	 ROC-AUC: 0.818
2024-11-03 03:59 - INFO - 	 PR-AUC: 0.327
2024-11-03 03:59 - INFO - 	 Recall for 0.4 precision: 0.309
2024-11-03 03:59 - INFO - 	 Best Val. Loss: 0.175
2024-11-03 03:59 - INFO - 	 Best ROC-AUC: 0.818
2024-11-03 03:59 - INFO - 	 Best PR-AUC: 0.327
2024-11-03 03:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-03 03:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-03 03:59 - INFO - 	 Best Recall for 0.4 precision: 0.309
2024-11-03 03:59 - INFO - ---------------------------------------------
2024-11-03 04:01 - INFO - ---------------------------------------------
2024-11-03 04:01 - INFO - Epoch: 08 | Time: 1m 43s
2024-11-03 04:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34588
2024-11-03 04:01 - INFO - 	 Train Loss: 0.149
2024-11-03 04:01 - INFO - 	 Val. Loss: 0.170
2024-11-03 04:01 - INFO - 	 ROC-AUC: 0.829
2024-11-03 04:01 - INFO - 	 PR-AUC: 0.346
2024-11-03 04:01 - INFO - 	 Recall for 0.4 precision: 0.407
2024-11-03 04:01 - INFO - 	 Best Val. Loss: 0.170
2024-11-03 04:01 - INFO - 	 Best ROC-AUC: 0.829
2024-11-03 04:01 - INFO - 	 Best PR-AUC: 0.346
2024-11-03 04:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 04:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 04:01 - INFO - 	 Best Recall for 0.4 precision: 0.407
2024-11-03 04:01 - INFO - ---------------------------------------------
2024-11-03 04:03 - INFO - ---------------------------------------------
2024-11-03 04:03 - INFO - Epoch: 09 | Time: 1m 43s
2024-11-03 04:03 - INFO - 	 Train Loss: 0.146
2024-11-03 04:03 - INFO - 	 Val. Loss: 0.165
2024-11-03 04:03 - INFO - 	 ROC-AUC: 0.812
2024-11-03 04:03 - INFO - 	 PR-AUC: 0.210
2024-11-03 04:03 - INFO - 	 Recall for 0.4 precision: 0.085
2024-11-03 04:03 - INFO - 	 Best Val. Loss: 0.165
2024-11-03 04:03 - INFO - 	 Best ROC-AUC: 0.829
2024-11-03 04:03 - INFO - 	 Best PR-AUC: 0.346
2024-11-03 04:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 04:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 04:03 - INFO - 	 Best Recall for 0.4 precision: 0.407
2024-11-03 04:03 - INFO - ---------------------------------------------
2024-11-03 04:05 - INFO - ---------------------------------------------
2024-11-03 04:05 - INFO - Epoch: 10 | Time: 1m 44s
2024-11-03 04:05 - INFO - 	 Train Loss: 0.147
2024-11-03 04:05 - INFO - 	 Val. Loss: 0.168
2024-11-03 04:05 - INFO - 	 ROC-AUC: 0.840
2024-11-03 04:05 - INFO - 	 PR-AUC: 0.315
2024-11-03 04:05 - INFO - 	 Recall for 0.4 precision: 0.361
2024-11-03 04:05 - INFO - 	 Best Val. Loss: 0.165
2024-11-03 04:05 - INFO - 	 Best ROC-AUC: 0.840
2024-11-03 04:05 - INFO - 	 Best PR-AUC: 0.346
2024-11-03 04:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.776
2024-11-03 04:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 04:05 - INFO - 	 Best Recall for 0.4 precision: 0.407
2024-11-03 04:05 - INFO - ---------------------------------------------
2024-11-03 04:07 - INFO - Fit the preprocessing pipeline
2024-11-03 04:07 - INFO - Training using device: mps
2024-11-03 04:07 - INFO - Creating generators
2024-11-03 04:07 - INFO - The model has 651,257 trainable parameters
2024-11-03 04:07 - INFO - * Model:
2024-11-03 04:07 - INFO - * -----------
2024-11-03 04:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 04:07 - INFO - * -----------
2024-11-03 04:07 - INFO - Evaluating model based on: aucpr
2024-11-03 04:07 - INFO - Training..

2024-11-03 04:09 - INFO - ---------------------------------------------
2024-11-03 04:09 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-03 04:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19307
2024-11-03 04:09 - INFO - 	 Train Loss: 0.255
2024-11-03 04:09 - INFO - 	 Val. Loss: 0.293
2024-11-03 04:09 - INFO - 	 ROC-AUC: 0.745
2024-11-03 04:09 - INFO - 	 PR-AUC: 0.193
2024-11-03 04:09 - INFO - 	 Recall for 0.4 precision: 0.117
2024-11-03 04:09 - INFO - 	 Best Val. Loss: 0.293
2024-11-03 04:09 - INFO - 	 Best ROC-AUC: 0.745
2024-11-03 04:09 - INFO - 	 Best PR-AUC: 0.193
2024-11-03 04:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-11-03 04:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.130
2024-11-03 04:09 - INFO - 	 Best Recall for 0.4 precision: 0.117
2024-11-03 04:09 - INFO - ---------------------------------------------
2024-11-03 04:11 - INFO - ---------------------------------------------
2024-11-03 04:11 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 04:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24239
2024-11-03 04:11 - INFO - 	 Train Loss: 0.204
2024-11-03 04:11 - INFO - 	 Val. Loss: 0.228
2024-11-03 04:11 - INFO - 	 ROC-AUC: 0.773
2024-11-03 04:11 - INFO - 	 PR-AUC: 0.242
2024-11-03 04:11 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-03 04:11 - INFO - 	 Best Val. Loss: 0.228
2024-11-03 04:11 - INFO - 	 Best ROC-AUC: 0.773
2024-11-03 04:11 - INFO - 	 Best PR-AUC: 0.242
2024-11-03 04:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-03 04:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 04:11 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-03 04:11 - INFO - ---------------------------------------------
2024-11-03 04:12 - INFO - ---------------------------------------------
2024-11-03 04:12 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 04:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26049
2024-11-03 04:12 - INFO - 	 Train Loss: 0.183
2024-11-03 04:12 - INFO - 	 Val. Loss: 0.208
2024-11-03 04:12 - INFO - 	 ROC-AUC: 0.780
2024-11-03 04:12 - INFO - 	 PR-AUC: 0.260
2024-11-03 04:12 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-03 04:12 - INFO - 	 Best Val. Loss: 0.208
2024-11-03 04:12 - INFO - 	 Best ROC-AUC: 0.780
2024-11-03 04:12 - INFO - 	 Best PR-AUC: 0.260
2024-11-03 04:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-03 04:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 04:12 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-03 04:12 - INFO - ---------------------------------------------
2024-11-03 04:14 - INFO - ---------------------------------------------
2024-11-03 04:14 - INFO - Epoch: 04 | Time: 1m 41s
2024-11-03 04:14 - INFO - 	 Train Loss: 0.170
2024-11-03 04:14 - INFO - 	 Val. Loss: 0.198
2024-11-03 04:14 - INFO - 	 ROC-AUC: 0.805
2024-11-03 04:14 - INFO - 	 PR-AUC: 0.251
2024-11-03 04:14 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-03 04:14 - INFO - 	 Best Val. Loss: 0.198
2024-11-03 04:14 - INFO - 	 Best ROC-AUC: 0.805
2024-11-03 04:14 - INFO - 	 Best PR-AUC: 0.260
2024-11-03 04:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 04:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 04:14 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-03 04:14 - INFO - ---------------------------------------------
2024-11-03 04:16 - INFO - ---------------------------------------------
2024-11-03 04:16 - INFO - Epoch: 05 | Time: 1m 41s
2024-11-03 04:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27562
2024-11-03 04:16 - INFO - 	 Train Loss: 0.162
2024-11-03 04:16 - INFO - 	 Val. Loss: 0.174
2024-11-03 04:16 - INFO - 	 ROC-AUC: 0.827
2024-11-03 04:16 - INFO - 	 PR-AUC: 0.276
2024-11-03 04:16 - INFO - 	 Recall for 0.4 precision: 0.185
2024-11-03 04:16 - INFO - 	 Best Val. Loss: 0.174
2024-11-03 04:16 - INFO - 	 Best ROC-AUC: 0.827
2024-11-03 04:16 - INFO - 	 Best PR-AUC: 0.276
2024-11-03 04:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-03 04:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-03 04:16 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-03 04:16 - INFO - ---------------------------------------------
2024-11-03 04:17 - INFO - ---------------------------------------------
2024-11-03 04:17 - INFO - Epoch: 06 | Time: 1m 41s
2024-11-03 04:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33761
2024-11-03 04:17 - INFO - 	 Train Loss: 0.155
2024-11-03 04:17 - INFO - 	 Val. Loss: 0.158
2024-11-03 04:17 - INFO - 	 ROC-AUC: 0.875
2024-11-03 04:17 - INFO - 	 PR-AUC: 0.338
2024-11-03 04:17 - INFO - 	 Recall for 0.4 precision: 0.348
2024-11-03 04:17 - INFO - 	 Best Val. Loss: 0.158
2024-11-03 04:17 - INFO - 	 Best ROC-AUC: 0.875
2024-11-03 04:17 - INFO - 	 Best PR-AUC: 0.338
2024-11-03 04:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.790
2024-11-03 04:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 04:17 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-03 04:17 - INFO - ---------------------------------------------
2024-11-03 04:19 - INFO - ---------------------------------------------
2024-11-03 04:19 - INFO - Epoch: 07 | Time: 1m 41s
2024-11-03 04:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47084
2024-11-03 04:19 - INFO - 	 Train Loss: 0.144
2024-11-03 04:19 - INFO - 	 Val. Loss: 0.137
2024-11-03 04:19 - INFO - 	 ROC-AUC: 0.929
2024-11-03 04:19 - INFO - 	 PR-AUC: 0.471
2024-11-03 04:19 - INFO - 	 Recall for 0.4 precision: 0.556
2024-11-03 04:19 - INFO - 	 Best Val. Loss: 0.137
2024-11-03 04:19 - INFO - 	 Best ROC-AUC: 0.929
2024-11-03 04:19 - INFO - 	 Best PR-AUC: 0.471
2024-11-03 04:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.887
2024-11-03 04:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.244
2024-11-03 04:19 - INFO - 	 Best Recall for 0.4 precision: 0.556
2024-11-03 04:19 - INFO - ---------------------------------------------
2024-11-03 04:21 - INFO - ---------------------------------------------
2024-11-03 04:21 - INFO - Epoch: 08 | Time: 1m 42s
2024-11-03 04:21 - INFO - 	 Train Loss: 0.126
2024-11-03 04:21 - INFO - 	 Val. Loss: 0.169
2024-11-03 04:21 - INFO - 	 ROC-AUC: 0.884
2024-11-03 04:21 - INFO - 	 PR-AUC: 0.301
2024-11-03 04:21 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-03 04:21 - INFO - 	 Best Val. Loss: 0.137
2024-11-03 04:21 - INFO - 	 Best ROC-AUC: 0.929
2024-11-03 04:21 - INFO - 	 Best PR-AUC: 0.471
2024-11-03 04:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.887
2024-11-03 04:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.244
2024-11-03 04:21 - INFO - 	 Best Recall for 0.4 precision: 0.556
2024-11-03 04:21 - INFO - ---------------------------------------------
2024-11-03 04:23 - INFO - ---------------------------------------------
2024-11-03 04:23 - INFO - Epoch: 09 | Time: 1m 42s
2024-11-03 04:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59658
2024-11-03 04:23 - INFO - 	 Train Loss: 0.115
2024-11-03 04:23 - INFO - 	 Val. Loss: 0.108
2024-11-03 04:23 - INFO - 	 ROC-AUC: 0.968
2024-11-03 04:23 - INFO - 	 PR-AUC: 0.597
2024-11-03 04:23 - INFO - 	 Recall for 0.4 precision: 0.914
2024-11-03 04:23 - INFO - 	 Best Val. Loss: 0.108
2024-11-03 04:23 - INFO - 	 Best ROC-AUC: 0.968
2024-11-03 04:23 - INFO - 	 Best PR-AUC: 0.597
2024-11-03 04:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-03 04:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.371
2024-11-03 04:23 - INFO - 	 Best Recall for 0.4 precision: 0.914
2024-11-03 04:23 - INFO - ---------------------------------------------
2024-11-03 04:24 - INFO - ---------------------------------------------
2024-11-03 04:24 - INFO - Epoch: 10 | Time: 1m 41s
2024-11-03 04:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6536
2024-11-03 04:24 - INFO - 	 Train Loss: 0.103
2024-11-03 04:24 - INFO - 	 Val. Loss: 0.093
2024-11-03 04:24 - INFO - 	 ROC-AUC: 0.966
2024-11-03 04:24 - INFO - 	 PR-AUC: 0.654
2024-11-03 04:24 - INFO - 	 Recall for 0.4 precision: 0.868
2024-11-03 04:24 - INFO - 	 Best Val. Loss: 0.093
2024-11-03 04:24 - INFO - 	 Best ROC-AUC: 0.968
2024-11-03 04:24 - INFO - 	 Best PR-AUC: 0.654
2024-11-03 04:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-03 04:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.360
2024-11-03 04:24 - INFO - 	 Best Recall for 0.4 precision: 0.914
2024-11-03 04:24 - INFO - ---------------------------------------------
2024-11-03 04:27 - INFO - Fit the preprocessing pipeline
2024-11-03 04:27 - INFO - Training using device: mps
2024-11-03 04:27 - INFO - Creating generators
2024-11-03 04:27 - INFO - The model has 651,257 trainable parameters
2024-11-03 04:27 - INFO - * Model:
2024-11-03 04:27 - INFO - * -----------
2024-11-03 04:27 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 04:27 - INFO - * -----------
2024-11-03 04:27 - INFO - Evaluating model based on: aucpr
2024-11-03 04:27 - INFO - Training..

2024-11-03 04:29 - INFO - ---------------------------------------------
2024-11-03 04:29 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-03 04:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14624
2024-11-03 04:29 - INFO - 	 Train Loss: 0.256
2024-11-03 04:29 - INFO - 	 Val. Loss: 0.268
2024-11-03 04:29 - INFO - 	 ROC-AUC: 0.780
2024-11-03 04:29 - INFO - 	 PR-AUC: 0.146
2024-11-03 04:29 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 04:29 - INFO - 	 Best Val. Loss: 0.268
2024-11-03 04:29 - INFO - 	 Best ROC-AUC: 0.780
2024-11-03 04:29 - INFO - 	 Best PR-AUC: 0.146
2024-11-03 04:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-03 04:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.121
2024-11-03 04:29 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-03 04:29 - INFO - ---------------------------------------------
2024-11-03 04:30 - INFO - ---------------------------------------------
2024-11-03 04:30 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 04:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18161
2024-11-03 04:30 - INFO - 	 Train Loss: 0.207
2024-11-03 04:30 - INFO - 	 Val. Loss: 0.228
2024-11-03 04:30 - INFO - 	 ROC-AUC: 0.767
2024-11-03 04:30 - INFO - 	 PR-AUC: 0.182
2024-11-03 04:30 - INFO - 	 Recall for 0.4 precision: 0.094
2024-11-03 04:30 - INFO - 	 Best Val. Loss: 0.228
2024-11-03 04:30 - INFO - 	 Best ROC-AUC: 0.780
2024-11-03 04:30 - INFO - 	 Best PR-AUC: 0.182
2024-11-03 04:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-03 04:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.095
2024-11-03 04:30 - INFO - 	 Best Recall for 0.4 precision: 0.094
2024-11-03 04:30 - INFO - ---------------------------------------------
2024-11-03 04:32 - INFO - ---------------------------------------------
2024-11-03 04:32 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 04:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25048
2024-11-03 04:32 - INFO - 	 Train Loss: 0.187
2024-11-03 04:32 - INFO - 	 Val. Loss: 0.233
2024-11-03 04:32 - INFO - 	 ROC-AUC: 0.775
2024-11-03 04:32 - INFO - 	 PR-AUC: 0.250
2024-11-03 04:32 - INFO - 	 Recall for 0.4 precision: 0.202
2024-11-03 04:32 - INFO - 	 Best Val. Loss: 0.228
2024-11-03 04:32 - INFO - 	 Best ROC-AUC: 0.780
2024-11-03 04:32 - INFO - 	 Best PR-AUC: 0.250
2024-11-03 04:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-03 04:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-03 04:32 - INFO - 	 Best Recall for 0.4 precision: 0.202
2024-11-03 04:32 - INFO - ---------------------------------------------
2024-11-03 04:34 - INFO - ---------------------------------------------
2024-11-03 04:34 - INFO - Epoch: 04 | Time: 1m 42s
2024-11-03 04:34 - INFO - 	 Train Loss: 0.171
2024-11-03 04:34 - INFO - 	 Val. Loss: 0.211
2024-11-03 04:34 - INFO - 	 ROC-AUC: 0.782
2024-11-03 04:34 - INFO - 	 PR-AUC: 0.229
2024-11-03 04:34 - INFO - 	 Recall for 0.4 precision: 0.081
2024-11-03 04:34 - INFO - 	 Best Val. Loss: 0.211
2024-11-03 04:34 - INFO - 	 Best ROC-AUC: 0.782
2024-11-03 04:34 - INFO - 	 Best PR-AUC: 0.250
2024-11-03 04:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-03 04:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-03 04:34 - INFO - 	 Best Recall for 0.4 precision: 0.202
2024-11-03 04:34 - INFO - ---------------------------------------------
2024-11-03 04:35 - INFO - ---------------------------------------------
2024-11-03 04:35 - INFO - Epoch: 05 | Time: 1m 43s
2024-11-03 04:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30783
2024-11-03 04:35 - INFO - 	 Train Loss: 0.165
2024-11-03 04:35 - INFO - 	 Val. Loss: 0.190
2024-11-03 04:35 - INFO - 	 ROC-AUC: 0.803
2024-11-03 04:35 - INFO - 	 PR-AUC: 0.308
2024-11-03 04:35 - INFO - 	 Recall for 0.4 precision: 0.270
2024-11-03 04:35 - INFO - 	 Best Val. Loss: 0.190
2024-11-03 04:35 - INFO - 	 Best ROC-AUC: 0.803
2024-11-03 04:35 - INFO - 	 Best PR-AUC: 0.308
2024-11-03 04:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.782
2024-11-03 04:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 04:35 - INFO - 	 Best Recall for 0.4 precision: 0.270
2024-11-03 04:35 - INFO - ---------------------------------------------
2024-11-03 04:37 - INFO - ---------------------------------------------
2024-11-03 04:37 - INFO - Epoch: 06 | Time: 1m 43s
2024-11-03 04:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35149
2024-11-03 04:37 - INFO - 	 Train Loss: 0.159
2024-11-03 04:37 - INFO - 	 Val. Loss: 0.184
2024-11-03 04:37 - INFO - 	 ROC-AUC: 0.829
2024-11-03 04:37 - INFO - 	 PR-AUC: 0.351
2024-11-03 04:37 - INFO - 	 Recall for 0.4 precision: 0.459
2024-11-03 04:37 - INFO - 	 Best Val. Loss: 0.184
2024-11-03 04:37 - INFO - 	 Best ROC-AUC: 0.829
2024-11-03 04:37 - INFO - 	 Best PR-AUC: 0.351
2024-11-03 04:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-03 04:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.181
2024-11-03 04:37 - INFO - 	 Best Recall for 0.4 precision: 0.459
2024-11-03 04:37 - INFO - ---------------------------------------------
2024-11-03 04:39 - INFO - ---------------------------------------------
2024-11-03 04:39 - INFO - Epoch: 07 | Time: 1m 43s
2024-11-03 04:39 - INFO - 	 Train Loss: 0.156
2024-11-03 04:39 - INFO - 	 Val. Loss: 0.171
2024-11-03 04:39 - INFO - 	 ROC-AUC: 0.841
2024-11-03 04:39 - INFO - 	 PR-AUC: 0.325
2024-11-03 04:39 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-03 04:39 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 04:39 - INFO - 	 Best ROC-AUC: 0.841
2024-11-03 04:39 - INFO - 	 Best PR-AUC: 0.351
2024-11-03 04:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.771
2024-11-03 04:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.181
2024-11-03 04:39 - INFO - 	 Best Recall for 0.4 precision: 0.459
2024-11-03 04:39 - INFO - ---------------------------------------------
2024-11-03 04:41 - INFO - ---------------------------------------------
2024-11-03 04:41 - INFO - Epoch: 08 | Time: 1m 44s
2024-11-03 04:41 - INFO - 	 Train Loss: 0.152
2024-11-03 04:41 - INFO - 	 Val. Loss: 0.163
2024-11-03 04:41 - INFO - 	 ROC-AUC: 0.844
2024-11-03 04:41 - INFO - 	 PR-AUC: 0.324
2024-11-03 04:41 - INFO - 	 Recall for 0.4 precision: 0.350
2024-11-03 04:41 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 04:41 - INFO - 	 Best ROC-AUC: 0.844
2024-11-03 04:41 - INFO - 	 Best PR-AUC: 0.351
2024-11-03 04:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.785
2024-11-03 04:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.181
2024-11-03 04:41 - INFO - 	 Best Recall for 0.4 precision: 0.459
2024-11-03 04:41 - INFO - ---------------------------------------------
2024-11-03 04:42 - INFO - ---------------------------------------------
2024-11-03 04:42 - INFO - Epoch: 09 | Time: 1m 43s
2024-11-03 04:42 - INFO - 	 Train Loss: 0.149
2024-11-03 04:42 - INFO - 	 Val. Loss: 0.162
2024-11-03 04:42 - INFO - 	 ROC-AUC: 0.852
2024-11-03 04:42 - INFO - 	 PR-AUC: 0.332
2024-11-03 04:42 - INFO - 	 Recall for 0.4 precision: 0.423
2024-11-03 04:42 - INFO - 	 Best Val. Loss: 0.162
2024-11-03 04:42 - INFO - 	 Best ROC-AUC: 0.852
2024-11-03 04:42 - INFO - 	 Best PR-AUC: 0.351
2024-11-03 04:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.788
2024-11-03 04:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.181
2024-11-03 04:42 - INFO - 	 Best Recall for 0.4 precision: 0.459
2024-11-03 04:42 - INFO - ---------------------------------------------
2024-11-03 04:47 - INFO - Fit the preprocessing pipeline
2024-11-03 04:47 - INFO - Training using device: mps
2024-11-03 04:47 - INFO - Creating generators
2024-11-03 04:47 - INFO - The model has 651,257 trainable parameters
2024-11-03 04:47 - INFO - * Model:
2024-11-03 04:47 - INFO - * -----------
2024-11-03 04:47 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 04:47 - INFO - * -----------
2024-11-03 04:47 - INFO - Evaluating model based on: aucpr
2024-11-03 04:47 - INFO - Training..

2024-11-03 04:48 - INFO - ---------------------------------------------
2024-11-03 04:48 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-03 04:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18365
2024-11-03 04:48 - INFO - 	 Train Loss: 0.250
2024-11-03 04:48 - INFO - 	 Val. Loss: 0.304
2024-11-03 04:48 - INFO - 	 ROC-AUC: 0.733
2024-11-03 04:48 - INFO - 	 PR-AUC: 0.184
2024-11-03 04:48 - INFO - 	 Recall for 0.4 precision: 0.068
2024-11-03 04:48 - INFO - 	 Best Val. Loss: 0.304
2024-11-03 04:48 - INFO - 	 Best ROC-AUC: 0.733
2024-11-03 04:48 - INFO - 	 Best PR-AUC: 0.184
2024-11-03 04:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-11-03 04:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.118
2024-11-03 04:48 - INFO - 	 Best Recall for 0.4 precision: 0.068
2024-11-03 04:48 - INFO - ---------------------------------------------
2024-11-03 04:50 - INFO - ---------------------------------------------
2024-11-03 04:50 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 04:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25466
2024-11-03 04:50 - INFO - 	 Train Loss: 0.211
2024-11-03 04:50 - INFO - 	 Val. Loss: 0.230
2024-11-03 04:50 - INFO - 	 ROC-AUC: 0.769
2024-11-03 04:50 - INFO - 	 PR-AUC: 0.255
2024-11-03 04:50 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-03 04:50 - INFO - 	 Best Val. Loss: 0.230
2024-11-03 04:50 - INFO - 	 Best ROC-AUC: 0.769
2024-11-03 04:50 - INFO - 	 Best PR-AUC: 0.255
2024-11-03 04:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-03 04:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 04:50 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 04:50 - INFO - ---------------------------------------------
2024-11-03 04:52 - INFO - ---------------------------------------------
2024-11-03 04:52 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-03 04:52 - INFO - 	 Train Loss: 0.186
2024-11-03 04:52 - INFO - 	 Val. Loss: 0.208
2024-11-03 04:52 - INFO - 	 ROC-AUC: 0.784
2024-11-03 04:52 - INFO - 	 PR-AUC: 0.218
2024-11-03 04:52 - INFO - 	 Recall for 0.4 precision: 0.153
2024-11-03 04:52 - INFO - 	 Best Val. Loss: 0.208
2024-11-03 04:52 - INFO - 	 Best ROC-AUC: 0.784
2024-11-03 04:52 - INFO - 	 Best PR-AUC: 0.255
2024-11-03 04:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-03 04:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 04:52 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 04:52 - INFO - ---------------------------------------------
2024-11-03 04:53 - INFO - ---------------------------------------------
2024-11-03 04:53 - INFO - Epoch: 04 | Time: 1m 42s
2024-11-03 04:53 - INFO - 	 Train Loss: 0.171
2024-11-03 04:53 - INFO - 	 Val. Loss: 0.197
2024-11-03 04:53 - INFO - 	 ROC-AUC: 0.792
2024-11-03 04:53 - INFO - 	 PR-AUC: 0.241
2024-11-03 04:53 - INFO - 	 Recall for 0.4 precision: 0.085
2024-11-03 04:53 - INFO - 	 Best Val. Loss: 0.197
2024-11-03 04:53 - INFO - 	 Best ROC-AUC: 0.792
2024-11-03 04:53 - INFO - 	 Best PR-AUC: 0.255
2024-11-03 04:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-03 04:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 04:53 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 04:53 - INFO - ---------------------------------------------
2024-11-03 04:55 - INFO - ---------------------------------------------
2024-11-03 04:55 - INFO - Epoch: 05 | Time: 1m 43s
2024-11-03 04:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27298
2024-11-03 04:55 - INFO - 	 Train Loss: 0.162
2024-11-03 04:55 - INFO - 	 Val. Loss: 0.183
2024-11-03 04:55 - INFO - 	 ROC-AUC: 0.810
2024-11-03 04:55 - INFO - 	 PR-AUC: 0.273
2024-11-03 04:55 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-03 04:55 - INFO - 	 Best Val. Loss: 0.183
2024-11-03 04:55 - INFO - 	 Best ROC-AUC: 0.810
2024-11-03 04:55 - INFO - 	 Best PR-AUC: 0.273
2024-11-03 04:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 04:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.173
2024-11-03 04:55 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 04:55 - INFO - ---------------------------------------------
2024-11-03 04:57 - INFO - ---------------------------------------------
2024-11-03 04:57 - INFO - Epoch: 06 | Time: 1m 42s
2024-11-03 04:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29585
2024-11-03 04:57 - INFO - 	 Train Loss: 0.156
2024-11-03 04:57 - INFO - 	 Val. Loss: 0.168
2024-11-03 04:57 - INFO - 	 ROC-AUC: 0.824
2024-11-03 04:57 - INFO - 	 PR-AUC: 0.296
2024-11-03 04:57 - INFO - 	 Recall for 0.4 precision: 0.338
2024-11-03 04:57 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 04:57 - INFO - 	 Best ROC-AUC: 0.824
2024-11-03 04:57 - INFO - 	 Best PR-AUC: 0.296
2024-11-03 04:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-03 04:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 04:57 - INFO - 	 Best Recall for 0.4 precision: 0.338
2024-11-03 04:57 - INFO - ---------------------------------------------
2024-11-03 04:59 - INFO - ---------------------------------------------
2024-11-03 04:59 - INFO - Epoch: 07 | Time: 1m 42s
2024-11-03 04:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30368
2024-11-03 04:59 - INFO - 	 Train Loss: 0.151
2024-11-03 04:59 - INFO - 	 Val. Loss: 0.158
2024-11-03 04:59 - INFO - 	 ROC-AUC: 0.848
2024-11-03 04:59 - INFO - 	 PR-AUC: 0.304
2024-11-03 04:59 - INFO - 	 Recall for 0.4 precision: 0.407
2024-11-03 04:59 - INFO - 	 Best Val. Loss: 0.158
2024-11-03 04:59 - INFO - 	 Best ROC-AUC: 0.848
2024-11-03 04:59 - INFO - 	 Best PR-AUC: 0.304
2024-11-03 04:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 04:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 04:59 - INFO - 	 Best Recall for 0.4 precision: 0.407
2024-11-03 04:59 - INFO - ---------------------------------------------
2024-11-03 05:00 - INFO - ---------------------------------------------
2024-11-03 05:00 - INFO - Epoch: 08 | Time: 1m 42s
2024-11-03 05:00 - INFO - 	 Train Loss: 0.147
2024-11-03 05:00 - INFO - 	 Val. Loss: 0.149
2024-11-03 05:00 - INFO - 	 ROC-AUC: 0.859
2024-11-03 05:00 - INFO - 	 PR-AUC: 0.279
2024-11-03 05:00 - INFO - 	 Recall for 0.4 precision: 0.364
2024-11-03 05:00 - INFO - 	 Best Val. Loss: 0.149
2024-11-03 05:00 - INFO - 	 Best ROC-AUC: 0.859
2024-11-03 05:00 - INFO - 	 Best PR-AUC: 0.304
2024-11-03 05:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-03 05:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 05:00 - INFO - 	 Best Recall for 0.4 precision: 0.407
2024-11-03 05:00 - INFO - ---------------------------------------------
2024-11-03 05:02 - INFO - ---------------------------------------------
2024-11-03 05:02 - INFO - Epoch: 09 | Time: 1m 42s
2024-11-03 05:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31439
2024-11-03 05:02 - INFO - 	 Train Loss: 0.144
2024-11-03 05:02 - INFO - 	 Val. Loss: 0.134
2024-11-03 05:02 - INFO - 	 ROC-AUC: 0.896
2024-11-03 05:02 - INFO - 	 PR-AUC: 0.314
2024-11-03 05:02 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-03 05:02 - INFO - 	 Best Val. Loss: 0.134
2024-11-03 05:02 - INFO - 	 Best ROC-AUC: 0.896
2024-11-03 05:02 - INFO - 	 Best PR-AUC: 0.314
2024-11-03 05:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.811
2024-11-03 05:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 05:02 - INFO - 	 Best Recall for 0.4 precision: 0.407
2024-11-03 05:02 - INFO - ---------------------------------------------
2024-11-03 05:04 - INFO - ---------------------------------------------
2024-11-03 05:04 - INFO - Epoch: 10 | Time: 1m 42s
2024-11-03 05:04 - INFO - 	 Train Loss: 0.135
2024-11-03 05:04 - INFO - 	 Val. Loss: 0.190
2024-11-03 05:04 - INFO - 	 ROC-AUC: 0.742
2024-11-03 05:04 - INFO - 	 PR-AUC: 0.150
2024-11-03 05:04 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 05:04 - INFO - 	 Best Val. Loss: 0.134
2024-11-03 05:04 - INFO - 	 Best ROC-AUC: 0.896
2024-11-03 05:04 - INFO - 	 Best PR-AUC: 0.314
2024-11-03 05:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.811
2024-11-03 05:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 05:04 - INFO - 	 Best Recall for 0.4 precision: 0.407
2024-11-03 05:04 - INFO - ---------------------------------------------
2024-11-03 05:06 - INFO - Fit the preprocessing pipeline
2024-11-03 05:06 - INFO - Training using device: mps
2024-11-03 05:06 - INFO - Creating generators
2024-11-03 05:06 - INFO - The model has 651,257 trainable parameters
2024-11-03 05:06 - INFO - * Model:
2024-11-03 05:06 - INFO - * -----------
2024-11-03 05:06 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 05:06 - INFO - * -----------
2024-11-03 05:06 - INFO - Evaluating model based on: aucpr
2024-11-03 05:06 - INFO - Training..

2024-11-03 05:08 - INFO - ---------------------------------------------
2024-11-03 05:08 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-03 05:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11944
2024-11-03 05:08 - INFO - 	 Train Loss: 0.252
2024-11-03 05:08 - INFO - 	 Val. Loss: 0.317
2024-11-03 05:08 - INFO - 	 ROC-AUC: 0.661
2024-11-03 05:08 - INFO - 	 PR-AUC: 0.119
2024-11-03 05:08 - INFO - 	 Recall for 0.4 precision: 0.052
2024-11-03 05:08 - INFO - 	 Best Val. Loss: 0.317
2024-11-03 05:08 - INFO - 	 Best ROC-AUC: 0.661
2024-11-03 05:08 - INFO - 	 Best PR-AUC: 0.119
2024-11-03 05:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.646
2024-11-03 05:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.075
2024-11-03 05:08 - INFO - 	 Best Recall for 0.4 precision: 0.052
2024-11-03 05:08 - INFO - ---------------------------------------------
2024-11-03 05:10 - INFO - ---------------------------------------------
2024-11-03 05:10 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-03 05:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18309
2024-11-03 05:10 - INFO - 	 Train Loss: 0.211
2024-11-03 05:10 - INFO - 	 Val. Loss: 0.217
2024-11-03 05:10 - INFO - 	 ROC-AUC: 0.754
2024-11-03 05:10 - INFO - 	 PR-AUC: 0.183
2024-11-03 05:10 - INFO - 	 Recall for 0.4 precision: 0.049
2024-11-03 05:10 - INFO - 	 Best Val. Loss: 0.217
2024-11-03 05:10 - INFO - 	 Best ROC-AUC: 0.754
2024-11-03 05:10 - INFO - 	 Best PR-AUC: 0.183
2024-11-03 05:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.703
2024-11-03 05:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.099
2024-11-03 05:10 - INFO - 	 Best Recall for 0.4 precision: 0.052
2024-11-03 05:10 - INFO - ---------------------------------------------
2024-11-03 05:11 - INFO - ---------------------------------------------
2024-11-03 05:11 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 05:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2403
2024-11-03 05:11 - INFO - 	 Train Loss: 0.185
2024-11-03 05:11 - INFO - 	 Val. Loss: 0.187
2024-11-03 05:11 - INFO - 	 ROC-AUC: 0.816
2024-11-03 05:11 - INFO - 	 PR-AUC: 0.240
2024-11-03 05:11 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-03 05:11 - INFO - 	 Best Val. Loss: 0.187
2024-11-03 05:11 - INFO - 	 Best ROC-AUC: 0.816
2024-11-03 05:11 - INFO - 	 Best PR-AUC: 0.240
2024-11-03 05:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 05:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 05:11 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-03 05:11 - INFO - ---------------------------------------------
2024-11-03 05:13 - INFO - ---------------------------------------------
2024-11-03 05:13 - INFO - Epoch: 04 | Time: 1m 43s
2024-11-03 05:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32336
2024-11-03 05:13 - INFO - 	 Train Loss: 0.168
2024-11-03 05:13 - INFO - 	 Val. Loss: 0.183
2024-11-03 05:13 - INFO - 	 ROC-AUC: 0.830
2024-11-03 05:13 - INFO - 	 PR-AUC: 0.323
2024-11-03 05:13 - INFO - 	 Recall for 0.4 precision: 0.377
2024-11-03 05:13 - INFO - 	 Best Val. Loss: 0.183
2024-11-03 05:13 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 05:13 - INFO - 	 Best PR-AUC: 0.323
2024-11-03 05:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.791
2024-11-03 05:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.188
2024-11-03 05:13 - INFO - 	 Best Recall for 0.4 precision: 0.377
2024-11-03 05:13 - INFO - ---------------------------------------------
2024-11-03 05:15 - INFO - ---------------------------------------------
2024-11-03 05:15 - INFO - Epoch: 05 | Time: 1m 43s
2024-11-03 05:15 - INFO - 	 Train Loss: 0.165
2024-11-03 05:15 - INFO - 	 Val. Loss: 0.201
2024-11-03 05:15 - INFO - 	 ROC-AUC: 0.815
2024-11-03 05:15 - INFO - 	 PR-AUC: 0.278
2024-11-03 05:15 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-03 05:15 - INFO - 	 Best Val. Loss: 0.183
2024-11-03 05:15 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 05:15 - INFO - 	 Best PR-AUC: 0.323
2024-11-03 05:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.791
2024-11-03 05:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.188
2024-11-03 05:15 - INFO - 	 Best Recall for 0.4 precision: 0.377
2024-11-03 05:15 - INFO - ---------------------------------------------
2024-11-03 05:17 - INFO - ---------------------------------------------
2024-11-03 05:17 - INFO - Epoch: 06 | Time: 1m 44s
2024-11-03 05:17 - INFO - 	 Train Loss: 0.161
2024-11-03 05:17 - INFO - 	 Val. Loss: 0.163
2024-11-03 05:17 - INFO - 	 ROC-AUC: 0.899
2024-11-03 05:17 - INFO - 	 PR-AUC: 0.309
2024-11-03 05:17 - INFO - 	 Recall for 0.4 precision: 0.377
2024-11-03 05:17 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 05:17 - INFO - 	 Best ROC-AUC: 0.899
2024-11-03 05:17 - INFO - 	 Best PR-AUC: 0.323
2024-11-03 05:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.800
2024-11-03 05:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.188
2024-11-03 05:17 - INFO - 	 Best Recall for 0.4 precision: 0.377
2024-11-03 05:17 - INFO - ---------------------------------------------
2024-11-03 05:18 - INFO - ---------------------------------------------
2024-11-03 05:18 - INFO - Epoch: 07 | Time: 1m 44s
2024-11-03 05:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36523
2024-11-03 05:18 - INFO - 	 Train Loss: 0.151
2024-11-03 05:18 - INFO - 	 Val. Loss: 0.153
2024-11-03 05:18 - INFO - 	 ROC-AUC: 0.905
2024-11-03 05:18 - INFO - 	 PR-AUC: 0.365
2024-11-03 05:18 - INFO - 	 Recall for 0.4 precision: 0.468
2024-11-03 05:18 - INFO - 	 Best Val. Loss: 0.153
2024-11-03 05:18 - INFO - 	 Best ROC-AUC: 0.905
2024-11-03 05:18 - INFO - 	 Best PR-AUC: 0.365
2024-11-03 05:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.809
2024-11-03 05:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.184
2024-11-03 05:18 - INFO - 	 Best Recall for 0.4 precision: 0.468
2024-11-03 05:18 - INFO - ---------------------------------------------
2024-11-03 05:20 - INFO - ---------------------------------------------
2024-11-03 05:20 - INFO - Epoch: 08 | Time: 1m 44s
2024-11-03 05:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38103
2024-11-03 05:20 - INFO - 	 Train Loss: 0.145
2024-11-03 05:20 - INFO - 	 Val. Loss: 0.152
2024-11-03 05:20 - INFO - 	 ROC-AUC: 0.900
2024-11-03 05:20 - INFO - 	 PR-AUC: 0.381
2024-11-03 05:20 - INFO - 	 Recall for 0.4 precision: 0.387
2024-11-03 05:20 - INFO - 	 Best Val. Loss: 0.152
2024-11-03 05:20 - INFO - 	 Best ROC-AUC: 0.905
2024-11-03 05:20 - INFO - 	 Best PR-AUC: 0.381
2024-11-03 05:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.809
2024-11-03 05:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-03 05:20 - INFO - 	 Best Recall for 0.4 precision: 0.468
2024-11-03 05:20 - INFO - ---------------------------------------------
2024-11-03 05:22 - INFO - ---------------------------------------------
2024-11-03 05:22 - INFO - Epoch: 09 | Time: 1m 44s
2024-11-03 05:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39727
2024-11-03 05:22 - INFO - 	 Train Loss: 0.138
2024-11-03 05:22 - INFO - 	 Val. Loss: 0.163
2024-11-03 05:22 - INFO - 	 ROC-AUC: 0.919
2024-11-03 05:22 - INFO - 	 PR-AUC: 0.397
2024-11-03 05:22 - INFO - 	 Recall for 0.4 precision: 0.520
2024-11-03 05:22 - INFO - 	 Best Val. Loss: 0.152
2024-11-03 05:22 - INFO - 	 Best ROC-AUC: 0.919
2024-11-03 05:22 - INFO - 	 Best PR-AUC: 0.397
2024-11-03 05:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.866
2024-11-03 05:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.244
2024-11-03 05:22 - INFO - 	 Best Recall for 0.4 precision: 0.520
2024-11-03 05:22 - INFO - ---------------------------------------------
2024-11-03 05:24 - INFO - ---------------------------------------------
2024-11-03 05:24 - INFO - Epoch: 10 | Time: 1m 44s
2024-11-03 05:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47732
2024-11-03 05:24 - INFO - 	 Train Loss: 0.126
2024-11-03 05:24 - INFO - 	 Val. Loss: 0.129
2024-11-03 05:24 - INFO - 	 ROC-AUC: 0.937
2024-11-03 05:24 - INFO - 	 PR-AUC: 0.477
2024-11-03 05:24 - INFO - 	 Recall for 0.4 precision: 0.605
2024-11-03 05:24 - INFO - 	 Best Val. Loss: 0.129
2024-11-03 05:24 - INFO - 	 Best ROC-AUC: 0.937
2024-11-03 05:24 - INFO - 	 Best PR-AUC: 0.477
2024-11-03 05:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.887
2024-11-03 05:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.225
2024-11-03 05:24 - INFO - 	 Best Recall for 0.4 precision: 0.605
2024-11-03 05:24 - INFO - ---------------------------------------------
2024-11-03 05:26 - INFO - Fit the preprocessing pipeline
2024-11-03 05:26 - INFO - Training using device: mps
2024-11-03 05:26 - INFO - Creating generators
2024-11-03 05:26 - INFO - The model has 651,257 trainable parameters
2024-11-03 05:26 - INFO - * Model:
2024-11-03 05:26 - INFO - * -----------
2024-11-03 05:26 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 05:26 - INFO - * -----------
2024-11-03 05:26 - INFO - Evaluating model based on: aucpr
2024-11-03 05:26 - INFO - Training..

2024-11-03 05:28 - INFO - ---------------------------------------------
2024-11-03 05:28 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-03 05:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23909
2024-11-03 05:28 - INFO - 	 Train Loss: 0.258
2024-11-03 05:28 - INFO - 	 Val. Loss: 0.267
2024-11-03 05:28 - INFO - 	 ROC-AUC: 0.760
2024-11-03 05:28 - INFO - 	 PR-AUC: 0.239
2024-11-03 05:28 - INFO - 	 Recall for 0.4 precision: 0.133
2024-11-03 05:28 - INFO - 	 Best Val. Loss: 0.267
2024-11-03 05:28 - INFO - 	 Best ROC-AUC: 0.760
2024-11-03 05:28 - INFO - 	 Best PR-AUC: 0.239
2024-11-03 05:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.734
2024-11-03 05:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.108
2024-11-03 05:28 - INFO - 	 Best Recall for 0.4 precision: 0.133
2024-11-03 05:28 - INFO - ---------------------------------------------
2024-11-03 05:30 - INFO - ---------------------------------------------
2024-11-03 05:30 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-03 05:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27517
2024-11-03 05:30 - INFO - 	 Train Loss: 0.210
2024-11-03 05:30 - INFO - 	 Val. Loss: 0.228
2024-11-03 05:30 - INFO - 	 ROC-AUC: 0.769
2024-11-03 05:30 - INFO - 	 PR-AUC: 0.275
2024-11-03 05:30 - INFO - 	 Recall for 0.4 precision: 0.358
2024-11-03 05:30 - INFO - 	 Best Val. Loss: 0.228
2024-11-03 05:30 - INFO - 	 Best ROC-AUC: 0.769
2024-11-03 05:30 - INFO - 	 Best PR-AUC: 0.275
2024-11-03 05:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-03 05:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 05:30 - INFO - 	 Best Recall for 0.4 precision: 0.358
2024-11-03 05:30 - INFO - ---------------------------------------------
2024-11-03 05:31 - INFO - ---------------------------------------------
2024-11-03 05:31 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-03 05:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32475
2024-11-03 05:31 - INFO - 	 Train Loss: 0.186
2024-11-03 05:31 - INFO - 	 Val. Loss: 0.202
2024-11-03 05:31 - INFO - 	 ROC-AUC: 0.784
2024-11-03 05:31 - INFO - 	 PR-AUC: 0.325
2024-11-03 05:31 - INFO - 	 Recall for 0.4 precision: 0.371
2024-11-03 05:31 - INFO - 	 Best Val. Loss: 0.202
2024-11-03 05:31 - INFO - 	 Best ROC-AUC: 0.784
2024-11-03 05:31 - INFO - 	 Best PR-AUC: 0.325
2024-11-03 05:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-03 05:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 05:31 - INFO - 	 Best Recall for 0.4 precision: 0.371
2024-11-03 05:31 - INFO - ---------------------------------------------
2024-11-03 05:33 - INFO - ---------------------------------------------
2024-11-03 05:33 - INFO - Epoch: 04 | Time: 1m 41s
2024-11-03 05:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33749
2024-11-03 05:33 - INFO - 	 Train Loss: 0.171
2024-11-03 05:33 - INFO - 	 Val. Loss: 0.186
2024-11-03 05:33 - INFO - 	 ROC-AUC: 0.793
2024-11-03 05:33 - INFO - 	 PR-AUC: 0.337
2024-11-03 05:33 - INFO - 	 Recall for 0.4 precision: 0.348
2024-11-03 05:33 - INFO - 	 Best Val. Loss: 0.186
2024-11-03 05:33 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 05:33 - INFO - 	 Best PR-AUC: 0.337
2024-11-03 05:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-03 05:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 05:33 - INFO - 	 Best Recall for 0.4 precision: 0.371
2024-11-03 05:33 - INFO - ---------------------------------------------
2024-11-03 05:35 - INFO - ---------------------------------------------
2024-11-03 05:35 - INFO - Epoch: 05 | Time: 1m 42s
2024-11-03 05:35 - INFO - 	 Train Loss: 0.163
2024-11-03 05:35 - INFO - 	 Val. Loss: 0.181
2024-11-03 05:35 - INFO - 	 ROC-AUC: 0.800
2024-11-03 05:35 - INFO - 	 PR-AUC: 0.320
2024-11-03 05:35 - INFO - 	 Recall for 0.4 precision: 0.309
2024-11-03 05:35 - INFO - 	 Best Val. Loss: 0.181
2024-11-03 05:35 - INFO - 	 Best ROC-AUC: 0.800
2024-11-03 05:35 - INFO - 	 Best PR-AUC: 0.337
2024-11-03 05:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 05:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 05:35 - INFO - 	 Best Recall for 0.4 precision: 0.371
2024-11-03 05:35 - INFO - ---------------------------------------------
2024-11-03 05:36 - INFO - ---------------------------------------------
2024-11-03 05:36 - INFO - Epoch: 06 | Time: 1m 41s
2024-11-03 05:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34169
2024-11-03 05:36 - INFO - 	 Train Loss: 0.157
2024-11-03 05:36 - INFO - 	 Val. Loss: 0.173
2024-11-03 05:36 - INFO - 	 ROC-AUC: 0.823
2024-11-03 05:36 - INFO - 	 PR-AUC: 0.342
2024-11-03 05:36 - INFO - 	 Recall for 0.4 precision: 0.350
2024-11-03 05:36 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 05:36 - INFO - 	 Best ROC-AUC: 0.823
2024-11-03 05:36 - INFO - 	 Best PR-AUC: 0.342
2024-11-03 05:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 05:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 05:36 - INFO - 	 Best Recall for 0.4 precision: 0.371
2024-11-03 05:36 - INFO - ---------------------------------------------
2024-11-03 05:38 - INFO - ---------------------------------------------
2024-11-03 05:38 - INFO - Epoch: 07 | Time: 1m 42s
2024-11-03 05:38 - INFO - 	 Train Loss: 0.152
2024-11-03 05:38 - INFO - 	 Val. Loss: 0.172
2024-11-03 05:38 - INFO - 	 ROC-AUC: 0.831
2024-11-03 05:38 - INFO - 	 PR-AUC: 0.315
2024-11-03 05:38 - INFO - 	 Recall for 0.4 precision: 0.338
2024-11-03 05:38 - INFO - 	 Best Val. Loss: 0.172
2024-11-03 05:38 - INFO - 	 Best ROC-AUC: 0.831
2024-11-03 05:38 - INFO - 	 Best PR-AUC: 0.342
2024-11-03 05:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.779
2024-11-03 05:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 05:38 - INFO - 	 Best Recall for 0.4 precision: 0.371
2024-11-03 05:38 - INFO - ---------------------------------------------
2024-11-03 05:40 - INFO - ---------------------------------------------
2024-11-03 05:40 - INFO - Epoch: 08 | Time: 1m 42s
2024-11-03 05:40 - INFO - 	 Train Loss: 0.151
2024-11-03 05:40 - INFO - 	 Val. Loss: 0.168
2024-11-03 05:40 - INFO - 	 ROC-AUC: 0.840
2024-11-03 05:40 - INFO - 	 PR-AUC: 0.305
2024-11-03 05:40 - INFO - 	 Recall for 0.4 precision: 0.374
2024-11-03 05:40 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 05:40 - INFO - 	 Best ROC-AUC: 0.840
2024-11-03 05:40 - INFO - 	 Best PR-AUC: 0.342
2024-11-03 05:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.781
2024-11-03 05:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 05:40 - INFO - 	 Best Recall for 0.4 precision: 0.374
2024-11-03 05:40 - INFO - ---------------------------------------------
2024-11-03 05:42 - INFO - ---------------------------------------------
2024-11-03 05:42 - INFO - Epoch: 09 | Time: 1m 42s
2024-11-03 05:42 - INFO - 	 Train Loss: 0.148
2024-11-03 05:42 - INFO - 	 Val. Loss: 0.173
2024-11-03 05:42 - INFO - 	 ROC-AUC: 0.844
2024-11-03 05:42 - INFO - 	 PR-AUC: 0.279
2024-11-03 05:42 - INFO - 	 Recall for 0.4 precision: 0.252
2024-11-03 05:42 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 05:42 - INFO - 	 Best ROC-AUC: 0.844
2024-11-03 05:42 - INFO - 	 Best PR-AUC: 0.342
2024-11-03 05:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-03 05:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 05:42 - INFO - 	 Best Recall for 0.4 precision: 0.374
2024-11-03 05:42 - INFO - ---------------------------------------------
2024-11-03 05:46 - INFO - Fit the preprocessing pipeline
2024-11-03 05:46 - INFO - Training using device: mps
2024-11-03 05:46 - INFO - Creating generators
2024-11-03 05:46 - INFO - The model has 651,257 trainable parameters
2024-11-03 05:46 - INFO - * Model:
2024-11-03 05:46 - INFO - * -----------
2024-11-03 05:46 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 05:46 - INFO - * -----------
2024-11-03 05:46 - INFO - Evaluating model based on: aucpr
2024-11-03 05:46 - INFO - Training..

2024-11-03 05:48 - INFO - ---------------------------------------------
2024-11-03 05:48 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-03 05:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20603
2024-11-03 05:48 - INFO - 	 Train Loss: 0.259
2024-11-03 05:48 - INFO - 	 Val. Loss: 0.309
2024-11-03 05:48 - INFO - 	 ROC-AUC: 0.732
2024-11-03 05:48 - INFO - 	 PR-AUC: 0.206
2024-11-03 05:48 - INFO - 	 Recall for 0.4 precision: 0.135
2024-11-03 05:48 - INFO - 	 Best Val. Loss: 0.309
2024-11-03 05:48 - INFO - 	 Best ROC-AUC: 0.732
2024-11-03 05:48 - INFO - 	 Best PR-AUC: 0.206
2024-11-03 05:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.729
2024-11-03 05:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-03 05:48 - INFO - 	 Best Recall for 0.4 precision: 0.135
2024-11-03 05:48 - INFO - ---------------------------------------------
2024-11-03 05:49 - INFO - ---------------------------------------------
2024-11-03 05:49 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-03 05:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2601
2024-11-03 05:49 - INFO - 	 Train Loss: 0.207
2024-11-03 05:49 - INFO - 	 Val. Loss: 0.225
2024-11-03 05:49 - INFO - 	 ROC-AUC: 0.790
2024-11-03 05:49 - INFO - 	 PR-AUC: 0.260
2024-11-03 05:49 - INFO - 	 Recall for 0.4 precision: 0.211
2024-11-03 05:49 - INFO - 	 Best Val. Loss: 0.225
2024-11-03 05:49 - INFO - 	 Best ROC-AUC: 0.790
2024-11-03 05:49 - INFO - 	 Best PR-AUC: 0.260
2024-11-03 05:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.808
2024-11-03 05:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-03 05:49 - INFO - 	 Best Recall for 0.4 precision: 0.211
2024-11-03 05:49 - INFO - ---------------------------------------------
2024-11-03 05:51 - INFO - ---------------------------------------------
2024-11-03 05:51 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-03 05:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26461
2024-11-03 05:51 - INFO - 	 Train Loss: 0.185
2024-11-03 05:51 - INFO - 	 Val. Loss: 0.226
2024-11-03 05:51 - INFO - 	 ROC-AUC: 0.788
2024-11-03 05:51 - INFO - 	 PR-AUC: 0.265
2024-11-03 05:51 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-03 05:51 - INFO - 	 Best Val. Loss: 0.225
2024-11-03 05:51 - INFO - 	 Best ROC-AUC: 0.790
2024-11-03 05:51 - INFO - 	 Best PR-AUC: 0.265
2024-11-03 05:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.808
2024-11-03 05:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 05:51 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 05:51 - INFO - ---------------------------------------------
2024-11-03 05:53 - INFO - ---------------------------------------------
2024-11-03 05:53 - INFO - Epoch: 04 | Time: 1m 43s
2024-11-03 05:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28351
2024-11-03 05:53 - INFO - 	 Train Loss: 0.170
2024-11-03 05:53 - INFO - 	 Val. Loss: 0.202
2024-11-03 05:53 - INFO - 	 ROC-AUC: 0.792
2024-11-03 05:53 - INFO - 	 PR-AUC: 0.284
2024-11-03 05:53 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-03 05:53 - INFO - 	 Best Val. Loss: 0.202
2024-11-03 05:53 - INFO - 	 Best ROC-AUC: 0.792
2024-11-03 05:53 - INFO - 	 Best PR-AUC: 0.284
2024-11-03 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 05:53 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 05:53 - INFO - ---------------------------------------------
2024-11-03 05:55 - INFO - ---------------------------------------------
2024-11-03 05:55 - INFO - Epoch: 05 | Time: 1m 43s
2024-11-03 05:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31566
2024-11-03 05:55 - INFO - 	 Train Loss: 0.161
2024-11-03 05:55 - INFO - 	 Val. Loss: 0.190
2024-11-03 05:55 - INFO - 	 ROC-AUC: 0.804
2024-11-03 05:55 - INFO - 	 PR-AUC: 0.316
2024-11-03 05:55 - INFO - 	 Recall for 0.4 precision: 0.354
2024-11-03 05:55 - INFO - 	 Best Val. Loss: 0.190
2024-11-03 05:55 - INFO - 	 Best ROC-AUC: 0.804
2024-11-03 05:55 - INFO - 	 Best PR-AUC: 0.316
2024-11-03 05:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 05:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 05:55 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-03 05:55 - INFO - ---------------------------------------------
2024-11-03 05:56 - INFO - ---------------------------------------------
2024-11-03 05:56 - INFO - Epoch: 06 | Time: 1m 43s
2024-11-03 05:56 - INFO - 	 Train Loss: 0.156
2024-11-03 05:56 - INFO - 	 Val. Loss: 0.178
2024-11-03 05:56 - INFO - 	 ROC-AUC: 0.807
2024-11-03 05:56 - INFO - 	 PR-AUC: 0.303
2024-11-03 05:56 - INFO - 	 Recall for 0.4 precision: 0.270
2024-11-03 05:56 - INFO - 	 Best Val. Loss: 0.178
2024-11-03 05:56 - INFO - 	 Best ROC-AUC: 0.807
2024-11-03 05:56 - INFO - 	 Best PR-AUC: 0.316
2024-11-03 05:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 05:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 05:56 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-03 05:56 - INFO - ---------------------------------------------
2024-11-03 05:58 - INFO - ---------------------------------------------
2024-11-03 05:58 - INFO - Epoch: 07 | Time: 1m 43s
2024-11-03 05:58 - INFO - 	 Train Loss: 0.152
2024-11-03 05:58 - INFO - 	 Val. Loss: 0.184
2024-11-03 05:58 - INFO - 	 ROC-AUC: 0.816
2024-11-03 05:58 - INFO - 	 PR-AUC: 0.315
2024-11-03 05:58 - INFO - 	 Recall for 0.4 precision: 0.250
2024-11-03 05:58 - INFO - 	 Best Val. Loss: 0.178
2024-11-03 05:58 - INFO - 	 Best ROC-AUC: 0.816
2024-11-03 05:58 - INFO - 	 Best PR-AUC: 0.316
2024-11-03 05:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 05:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 05:58 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-03 05:58 - INFO - ---------------------------------------------
2024-11-03 06:00 - INFO - ---------------------------------------------
2024-11-03 06:00 - INFO - Epoch: 08 | Time: 1m 43s
2024-11-03 06:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3446
2024-11-03 06:00 - INFO - 	 Train Loss: 0.149
2024-11-03 06:00 - INFO - 	 Val. Loss: 0.169
2024-11-03 06:00 - INFO - 	 ROC-AUC: 0.824
2024-11-03 06:00 - INFO - 	 PR-AUC: 0.345
2024-11-03 06:00 - INFO - 	 Recall for 0.4 precision: 0.371
2024-11-03 06:00 - INFO - 	 Best Val. Loss: 0.169
2024-11-03 06:00 - INFO - 	 Best ROC-AUC: 0.824
2024-11-03 06:00 - INFO - 	 Best PR-AUC: 0.345
2024-11-03 06:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 06:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-03 06:00 - INFO - 	 Best Recall for 0.4 precision: 0.371
2024-11-03 06:00 - INFO - ---------------------------------------------
2024-11-03 06:01 - INFO - ---------------------------------------------
2024-11-03 06:01 - INFO - Epoch: 09 | Time: 1m 43s
2024-11-03 06:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36284
2024-11-03 06:01 - INFO - 	 Train Loss: 0.148
2024-11-03 06:01 - INFO - 	 Val. Loss: 0.163
2024-11-03 06:01 - INFO - 	 ROC-AUC: 0.837
2024-11-03 06:01 - INFO - 	 PR-AUC: 0.363
2024-11-03 06:01 - INFO - 	 Recall for 0.4 precision: 0.433
2024-11-03 06:01 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 06:01 - INFO - 	 Best ROC-AUC: 0.837
2024-11-03 06:01 - INFO - 	 Best PR-AUC: 0.363
2024-11-03 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-03 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-03 06:01 - INFO - 	 Best Recall for 0.4 precision: 0.433
2024-11-03 06:01 - INFO - ---------------------------------------------
2024-11-03 06:03 - INFO - ---------------------------------------------
2024-11-03 06:03 - INFO - Epoch: 10 | Time: 1m 43s
2024-11-03 06:03 - INFO - 	 Train Loss: 0.146
2024-11-03 06:03 - INFO - 	 Val. Loss: 0.168
2024-11-03 06:03 - INFO - 	 ROC-AUC: 0.828
2024-11-03 06:03 - INFO - 	 PR-AUC: 0.347
2024-11-03 06:03 - INFO - 	 Recall for 0.4 precision: 0.380
2024-11-03 06:03 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 06:03 - INFO - 	 Best ROC-AUC: 0.837
2024-11-03 06:03 - INFO - 	 Best PR-AUC: 0.363
2024-11-03 06:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-03 06:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-03 06:03 - INFO - 	 Best Recall for 0.4 precision: 0.433
2024-11-03 06:03 - INFO - ---------------------------------------------
2024-11-03 06:06 - INFO - Fit the preprocessing pipeline
2024-11-03 06:06 - INFO - Training using device: mps
2024-11-03 06:06 - INFO - Creating generators
2024-11-03 06:06 - INFO - The model has 651,257 trainable parameters
2024-11-03 06:06 - INFO - * Model:
2024-11-03 06:06 - INFO - * -----------
2024-11-03 06:06 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 06:06 - INFO - * -----------
2024-11-03 06:06 - INFO - Evaluating model based on: aucpr
2024-11-03 06:06 - INFO - Training..

2024-11-03 06:08 - INFO - ---------------------------------------------
2024-11-03 06:08 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-03 06:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18667
2024-11-03 06:08 - INFO - 	 Train Loss: 0.252
2024-11-03 06:08 - INFO - 	 Val. Loss: 0.303
2024-11-03 06:08 - INFO - 	 ROC-AUC: 0.737
2024-11-03 06:08 - INFO - 	 PR-AUC: 0.187
2024-11-03 06:08 - INFO - 	 Recall for 0.4 precision: 0.159
2024-11-03 06:08 - INFO - 	 Best Val. Loss: 0.303
2024-11-03 06:08 - INFO - 	 Best ROC-AUC: 0.737
2024-11-03 06:08 - INFO - 	 Best PR-AUC: 0.187
2024-11-03 06:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-11-03 06:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-03 06:08 - INFO - 	 Best Recall for 0.4 precision: 0.159
2024-11-03 06:08 - INFO - ---------------------------------------------
2024-11-03 06:09 - INFO - ---------------------------------------------
2024-11-03 06:09 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 06:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25792
2024-11-03 06:09 - INFO - 	 Train Loss: 0.211
2024-11-03 06:09 - INFO - 	 Val. Loss: 0.233
2024-11-03 06:09 - INFO - 	 ROC-AUC: 0.781
2024-11-03 06:09 - INFO - 	 PR-AUC: 0.258
2024-11-03 06:09 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-03 06:09 - INFO - 	 Best Val. Loss: 0.233
2024-11-03 06:09 - INFO - 	 Best ROC-AUC: 0.781
2024-11-03 06:09 - INFO - 	 Best PR-AUC: 0.258
2024-11-03 06:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-03 06:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.166
2024-11-03 06:09 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 06:09 - INFO - ---------------------------------------------
2024-11-03 06:11 - INFO - ---------------------------------------------
2024-11-03 06:11 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 06:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26142
2024-11-03 06:11 - INFO - 	 Train Loss: 0.186
2024-11-03 06:11 - INFO - 	 Val. Loss: 0.218
2024-11-03 06:11 - INFO - 	 ROC-AUC: 0.792
2024-11-03 06:11 - INFO - 	 PR-AUC: 0.261
2024-11-03 06:11 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-03 06:11 - INFO - 	 Best Val. Loss: 0.218
2024-11-03 06:11 - INFO - 	 Best ROC-AUC: 0.792
2024-11-03 06:11 - INFO - 	 Best PR-AUC: 0.261
2024-11-03 06:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-03 06:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 06:11 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 06:11 - INFO - ---------------------------------------------
2024-11-03 06:13 - INFO - ---------------------------------------------
2024-11-03 06:13 - INFO - Epoch: 04 | Time: 1m 41s
2024-11-03 06:13 - INFO - 	 Train Loss: 0.173
2024-11-03 06:13 - INFO - 	 Val. Loss: 0.192
2024-11-03 06:13 - INFO - 	 ROC-AUC: 0.802
2024-11-03 06:13 - INFO - 	 PR-AUC: 0.261
2024-11-03 06:13 - INFO - 	 Recall for 0.4 precision: 0.250
2024-11-03 06:13 - INFO - 	 Best Val. Loss: 0.192
2024-11-03 06:13 - INFO - 	 Best ROC-AUC: 0.802
2024-11-03 06:13 - INFO - 	 Best PR-AUC: 0.261
2024-11-03 06:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 06:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 06:13 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 06:13 - INFO - ---------------------------------------------
2024-11-03 06:14 - INFO - ---------------------------------------------
2024-11-03 06:14 - INFO - Epoch: 05 | Time: 1m 41s
2024-11-03 06:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26992
2024-11-03 06:14 - INFO - 	 Train Loss: 0.165
2024-11-03 06:14 - INFO - 	 Val. Loss: 0.185
2024-11-03 06:14 - INFO - 	 ROC-AUC: 0.830
2024-11-03 06:14 - INFO - 	 PR-AUC: 0.270
2024-11-03 06:14 - INFO - 	 Recall for 0.4 precision: 0.150
2024-11-03 06:14 - INFO - 	 Best Val. Loss: 0.185
2024-11-03 06:14 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 06:14 - INFO - 	 Best PR-AUC: 0.270
2024-11-03 06:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.773
2024-11-03 06:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 06:14 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 06:14 - INFO - ---------------------------------------------
2024-11-03 06:16 - INFO - ---------------------------------------------
2024-11-03 06:16 - INFO - Epoch: 06 | Time: 1m 41s
2024-11-03 06:16 - INFO - 	 Train Loss: 0.157
2024-11-03 06:16 - INFO - 	 Val. Loss: 0.188
2024-11-03 06:16 - INFO - 	 ROC-AUC: 0.826
2024-11-03 06:16 - INFO - 	 PR-AUC: 0.262
2024-11-03 06:16 - INFO - 	 Recall for 0.4 precision: 0.135
2024-11-03 06:16 - INFO - 	 Best Val. Loss: 0.185
2024-11-03 06:16 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 06:16 - INFO - 	 Best PR-AUC: 0.270
2024-11-03 06:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.773
2024-11-03 06:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 06:16 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 06:16 - INFO - ---------------------------------------------
2024-11-03 06:18 - INFO - ---------------------------------------------
2024-11-03 06:18 - INFO - Epoch: 07 | Time: 1m 41s
2024-11-03 06:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36064
2024-11-03 06:18 - INFO - 	 Train Loss: 0.160
2024-11-03 06:18 - INFO - 	 Val. Loss: 0.166
2024-11-03 06:18 - INFO - 	 ROC-AUC: 0.852
2024-11-03 06:18 - INFO - 	 PR-AUC: 0.361
2024-11-03 06:18 - INFO - 	 Recall for 0.4 precision: 0.358
2024-11-03 06:18 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 06:18 - INFO - 	 Best ROC-AUC: 0.852
2024-11-03 06:18 - INFO - 	 Best PR-AUC: 0.361
2024-11-03 06:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.797
2024-11-03 06:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.179
2024-11-03 06:18 - INFO - 	 Best Recall for 0.4 precision: 0.358
2024-11-03 06:18 - INFO - ---------------------------------------------
2024-11-03 06:19 - INFO - ---------------------------------------------
2024-11-03 06:19 - INFO - Epoch: 08 | Time: 1m 42s
2024-11-03 06:19 - INFO - 	 Train Loss: 0.150
2024-11-03 06:19 - INFO - 	 Val. Loss: 0.166
2024-11-03 06:19 - INFO - 	 ROC-AUC: 0.855
2024-11-03 06:19 - INFO - 	 PR-AUC: 0.325
2024-11-03 06:19 - INFO - 	 Recall for 0.4 precision: 0.280
2024-11-03 06:19 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 06:19 - INFO - 	 Best ROC-AUC: 0.855
2024-11-03 06:19 - INFO - 	 Best PR-AUC: 0.361
2024-11-03 06:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-03 06:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.179
2024-11-03 06:19 - INFO - 	 Best Recall for 0.4 precision: 0.358
2024-11-03 06:19 - INFO - ---------------------------------------------
2024-11-03 06:21 - INFO - ---------------------------------------------
2024-11-03 06:21 - INFO - Epoch: 09 | Time: 1m 42s
2024-11-03 06:21 - INFO - 	 Train Loss: 0.145
2024-11-03 06:21 - INFO - 	 Val. Loss: 0.146
2024-11-03 06:21 - INFO - 	 ROC-AUC: 0.890
2024-11-03 06:21 - INFO - 	 PR-AUC: 0.360
2024-11-03 06:21 - INFO - 	 Recall for 0.4 precision: 0.372
2024-11-03 06:21 - INFO - 	 Best Val. Loss: 0.146
2024-11-03 06:21 - INFO - 	 Best ROC-AUC: 0.890
2024-11-03 06:21 - INFO - 	 Best PR-AUC: 0.361
2024-11-03 06:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.807
2024-11-03 06:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.179
2024-11-03 06:21 - INFO - 	 Best Recall for 0.4 precision: 0.372
2024-11-03 06:21 - INFO - ---------------------------------------------
2024-11-03 06:23 - INFO - ---------------------------------------------
2024-11-03 06:23 - INFO - Epoch: 10 | Time: 1m 41s
2024-11-03 06:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42957
2024-11-03 06:23 - INFO - 	 Train Loss: 0.135
2024-11-03 06:23 - INFO - 	 Val. Loss: 0.134
2024-11-03 06:23 - INFO - 	 ROC-AUC: 0.933
2024-11-03 06:23 - INFO - 	 PR-AUC: 0.430
2024-11-03 06:23 - INFO - 	 Recall for 0.4 precision: 0.520
2024-11-03 06:23 - INFO - 	 Best Val. Loss: 0.134
2024-11-03 06:23 - INFO - 	 Best ROC-AUC: 0.933
2024-11-03 06:23 - INFO - 	 Best PR-AUC: 0.430
2024-11-03 06:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.882
2024-11-03 06:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.216
2024-11-03 06:23 - INFO - 	 Best Recall for 0.4 precision: 0.520
2024-11-03 06:23 - INFO - ---------------------------------------------
2024-11-03 06:25 - INFO - Fit the preprocessing pipeline
2024-11-03 06:25 - INFO - Training using device: mps
2024-11-03 06:25 - INFO - Creating generators
2024-11-03 06:25 - INFO - The model has 651,257 trainable parameters
2024-11-03 06:25 - INFO - * Model:
2024-11-03 06:25 - INFO - * -----------
2024-11-03 06:25 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 06:25 - INFO - * -----------
2024-11-03 06:25 - INFO - Evaluating model based on: aucpr
2024-11-03 06:25 - INFO - Training..

2024-11-03 06:27 - INFO - ---------------------------------------------
2024-11-03 06:27 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-03 06:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22554
2024-11-03 06:27 - INFO - 	 Train Loss: 0.253
2024-11-03 06:27 - INFO - 	 Val. Loss: 0.297
2024-11-03 06:27 - INFO - 	 ROC-AUC: 0.761
2024-11-03 06:27 - INFO - 	 PR-AUC: 0.226
2024-11-03 06:27 - INFO - 	 Recall for 0.4 precision: 0.146
2024-11-03 06:27 - INFO - 	 Best Val. Loss: 0.297
2024-11-03 06:27 - INFO - 	 Best ROC-AUC: 0.761
2024-11-03 06:27 - INFO - 	 Best PR-AUC: 0.226
2024-11-03 06:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.772
2024-11-03 06:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-03 06:27 - INFO - 	 Best Recall for 0.4 precision: 0.146
2024-11-03 06:27 - INFO - ---------------------------------------------
2024-11-03 06:29 - INFO - ---------------------------------------------
2024-11-03 06:29 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 06:29 - INFO - 	 Train Loss: 0.207
2024-11-03 06:29 - INFO - 	 Val. Loss: 0.241
2024-11-03 06:29 - INFO - 	 ROC-AUC: 0.777
2024-11-03 06:29 - INFO - 	 PR-AUC: 0.218
2024-11-03 06:29 - INFO - 	 Recall for 0.4 precision: 0.117
2024-11-03 06:29 - INFO - 	 Best Val. Loss: 0.241
2024-11-03 06:29 - INFO - 	 Best ROC-AUC: 0.777
2024-11-03 06:29 - INFO - 	 Best PR-AUC: 0.226
2024-11-03 06:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 06:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-03 06:29 - INFO - 	 Best Recall for 0.4 precision: 0.146
2024-11-03 06:29 - INFO - ---------------------------------------------
2024-11-03 06:30 - INFO - ---------------------------------------------
2024-11-03 06:30 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-03 06:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28251
2024-11-03 06:30 - INFO - 	 Train Loss: 0.192
2024-11-03 06:30 - INFO - 	 Val. Loss: 0.227
2024-11-03 06:30 - INFO - 	 ROC-AUC: 0.762
2024-11-03 06:30 - INFO - 	 PR-AUC: 0.283
2024-11-03 06:30 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-03 06:30 - INFO - 	 Best Val. Loss: 0.227
2024-11-03 06:30 - INFO - 	 Best ROC-AUC: 0.777
2024-11-03 06:30 - INFO - 	 Best PR-AUC: 0.283
2024-11-03 06:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 06:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.108
2024-11-03 06:30 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-03 06:30 - INFO - ---------------------------------------------
2024-11-03 06:32 - INFO - ---------------------------------------------
2024-11-03 06:32 - INFO - Epoch: 04 | Time: 1m 42s
2024-11-03 06:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30278
2024-11-03 06:32 - INFO - 	 Train Loss: 0.181
2024-11-03 06:32 - INFO - 	 Val. Loss: 0.227
2024-11-03 06:32 - INFO - 	 ROC-AUC: 0.754
2024-11-03 06:32 - INFO - 	 PR-AUC: 0.303
2024-11-03 06:32 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-03 06:32 - INFO - 	 Best Val. Loss: 0.227
2024-11-03 06:32 - INFO - 	 Best ROC-AUC: 0.777
2024-11-03 06:32 - INFO - 	 Best PR-AUC: 0.303
2024-11-03 06:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 06:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-03 06:32 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-03 06:32 - INFO - ---------------------------------------------
2024-11-03 06:34 - INFO - ---------------------------------------------
2024-11-03 06:34 - INFO - Epoch: 05 | Time: 1m 42s
2024-11-03 06:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33176
2024-11-03 06:34 - INFO - 	 Train Loss: 0.173
2024-11-03 06:34 - INFO - 	 Val. Loss: 0.220
2024-11-03 06:34 - INFO - 	 ROC-AUC: 0.760
2024-11-03 06:34 - INFO - 	 PR-AUC: 0.332
2024-11-03 06:34 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-03 06:34 - INFO - 	 Best Val. Loss: 0.220
2024-11-03 06:34 - INFO - 	 Best ROC-AUC: 0.777
2024-11-03 06:34 - INFO - 	 Best PR-AUC: 0.332
2024-11-03 06:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 06:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-03 06:34 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-03 06:34 - INFO - ---------------------------------------------
2024-11-03 06:36 - INFO - ---------------------------------------------
2024-11-03 06:36 - INFO - Epoch: 06 | Time: 1m 42s
2024-11-03 06:36 - INFO - 	 Train Loss: 0.170
2024-11-03 06:36 - INFO - 	 Val. Loss: 0.230
2024-11-03 06:36 - INFO - 	 ROC-AUC: 0.707
2024-11-03 06:36 - INFO - 	 PR-AUC: 0.224
2024-11-03 06:36 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-03 06:36 - INFO - 	 Best Val. Loss: 0.220
2024-11-03 06:36 - INFO - 	 Best ROC-AUC: 0.777
2024-11-03 06:36 - INFO - 	 Best PR-AUC: 0.332
2024-11-03 06:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 06:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-03 06:36 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-03 06:36 - INFO - ---------------------------------------------
2024-11-03 06:37 - INFO - ---------------------------------------------
2024-11-03 06:37 - INFO - Epoch: 07 | Time: 1m 43s
2024-11-03 06:37 - INFO - 	 Train Loss: 0.165
2024-11-03 06:37 - INFO - 	 Val. Loss: 0.220
2024-11-03 06:37 - INFO - 	 ROC-AUC: 0.763
2024-11-03 06:37 - INFO - 	 PR-AUC: 0.312
2024-11-03 06:37 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-03 06:37 - INFO - 	 Best Val. Loss: 0.220
2024-11-03 06:37 - INFO - 	 Best ROC-AUC: 0.777
2024-11-03 06:37 - INFO - 	 Best PR-AUC: 0.332
2024-11-03 06:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 06:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-03 06:37 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-03 06:37 - INFO - ---------------------------------------------
2024-11-03 06:39 - INFO - ---------------------------------------------
2024-11-03 06:39 - INFO - Epoch: 08 | Time: 1m 43s
2024-11-03 06:39 - INFO - 	 Train Loss: 0.152
2024-11-03 06:39 - INFO - 	 Val. Loss: 0.251
2024-11-03 06:39 - INFO - 	 ROC-AUC: 0.809
2024-11-03 06:39 - INFO - 	 PR-AUC: 0.186
2024-11-03 06:39 - INFO - 	 Recall for 0.4 precision: 0.016
2024-11-03 06:39 - INFO - 	 Best Val. Loss: 0.220
2024-11-03 06:39 - INFO - 	 Best ROC-AUC: 0.809
2024-11-03 06:39 - INFO - 	 Best PR-AUC: 0.332
2024-11-03 06:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.810
2024-11-03 06:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-03 06:39 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-03 06:39 - INFO - ---------------------------------------------
2024-11-03 06:43 - INFO - Fit the preprocessing pipeline
2024-11-03 06:43 - INFO - Training using device: mps
2024-11-03 06:43 - INFO - Creating generators
2024-11-03 06:43 - INFO - The model has 651,257 trainable parameters
2024-11-03 06:43 - INFO - * Model:
2024-11-03 06:43 - INFO - * -----------
2024-11-03 06:43 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 06:43 - INFO - * -----------
2024-11-03 06:43 - INFO - Evaluating model based on: aucpr
2024-11-03 06:43 - INFO - Training..

2024-11-03 06:45 - INFO - ---------------------------------------------
2024-11-03 06:45 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-03 06:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20866
2024-11-03 06:45 - INFO - 	 Train Loss: 0.252
2024-11-03 06:45 - INFO - 	 Val. Loss: 0.273
2024-11-03 06:45 - INFO - 	 ROC-AUC: 0.762
2024-11-03 06:45 - INFO - 	 PR-AUC: 0.209
2024-11-03 06:45 - INFO - 	 Recall for 0.4 precision: 0.140
2024-11-03 06:45 - INFO - 	 Best Val. Loss: 0.273
2024-11-03 06:45 - INFO - 	 Best ROC-AUC: 0.762
2024-11-03 06:45 - INFO - 	 Best PR-AUC: 0.209
2024-11-03 06:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.740
2024-11-03 06:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 06:45 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-03 06:45 - INFO - ---------------------------------------------
2024-11-03 06:47 - INFO - ---------------------------------------------
2024-11-03 06:47 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-03 06:47 - INFO - 	 Train Loss: 0.205
2024-11-03 06:47 - INFO - 	 Val. Loss: 0.270
2024-11-03 06:47 - INFO - 	 ROC-AUC: 0.641
2024-11-03 06:47 - INFO - 	 PR-AUC: 0.086
2024-11-03 06:47 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-03 06:47 - INFO - 	 Best Val. Loss: 0.270
2024-11-03 06:47 - INFO - 	 Best ROC-AUC: 0.762
2024-11-03 06:47 - INFO - 	 Best PR-AUC: 0.209
2024-11-03 06:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.740
2024-11-03 06:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 06:47 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-03 06:47 - INFO - ---------------------------------------------
2024-11-03 06:48 - INFO - ---------------------------------------------
2024-11-03 06:48 - INFO - Epoch: 03 | Time: 1m 40s
2024-11-03 06:48 - INFO - 	 Train Loss: 0.188
2024-11-03 06:48 - INFO - 	 Val. Loss: 0.211
2024-11-03 06:48 - INFO - 	 ROC-AUC: 0.784
2024-11-03 06:48 - INFO - 	 PR-AUC: 0.185
2024-11-03 06:48 - INFO - 	 Recall for 0.4 precision: 0.039
2024-11-03 06:48 - INFO - 	 Best Val. Loss: 0.211
2024-11-03 06:48 - INFO - 	 Best ROC-AUC: 0.784
2024-11-03 06:48 - INFO - 	 Best PR-AUC: 0.209
2024-11-03 06:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-03 06:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 06:48 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-03 06:48 - INFO - ---------------------------------------------
2024-11-03 06:50 - INFO - ---------------------------------------------
2024-11-03 06:50 - INFO - Epoch: 04 | Time: 1m 41s
2024-11-03 06:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24931
2024-11-03 06:50 - INFO - 	 Train Loss: 0.175
2024-11-03 06:50 - INFO - 	 Val. Loss: 0.193
2024-11-03 06:50 - INFO - 	 ROC-AUC: 0.794
2024-11-03 06:50 - INFO - 	 PR-AUC: 0.249
2024-11-03 06:50 - INFO - 	 Recall for 0.4 precision: 0.159
2024-11-03 06:50 - INFO - 	 Best Val. Loss: 0.193
2024-11-03 06:50 - INFO - 	 Best ROC-AUC: 0.794
2024-11-03 06:50 - INFO - 	 Best PR-AUC: 0.249
2024-11-03 06:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-03 06:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 06:50 - INFO - 	 Best Recall for 0.4 precision: 0.159
2024-11-03 06:50 - INFO - ---------------------------------------------
2024-11-03 06:52 - INFO - ---------------------------------------------
2024-11-03 06:52 - INFO - Epoch: 05 | Time: 1m 41s
2024-11-03 06:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25681
2024-11-03 06:52 - INFO - 	 Train Loss: 0.165
2024-11-03 06:52 - INFO - 	 Val. Loss: 0.186
2024-11-03 06:52 - INFO - 	 ROC-AUC: 0.812
2024-11-03 06:52 - INFO - 	 PR-AUC: 0.257
2024-11-03 06:52 - INFO - 	 Recall for 0.4 precision: 0.195
2024-11-03 06:52 - INFO - 	 Best Val. Loss: 0.186
2024-11-03 06:52 - INFO - 	 Best ROC-AUC: 0.812
2024-11-03 06:52 - INFO - 	 Best PR-AUC: 0.257
2024-11-03 06:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-03 06:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 06:52 - INFO - 	 Best Recall for 0.4 precision: 0.195
2024-11-03 06:52 - INFO - ---------------------------------------------
2024-11-03 06:54 - INFO - ---------------------------------------------
2024-11-03 06:54 - INFO - Epoch: 06 | Time: 1m 41s
2024-11-03 06:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27677
2024-11-03 06:54 - INFO - 	 Train Loss: 0.159
2024-11-03 06:54 - INFO - 	 Val. Loss: 0.174
2024-11-03 06:54 - INFO - 	 ROC-AUC: 0.816
2024-11-03 06:54 - INFO - 	 PR-AUC: 0.277
2024-11-03 06:54 - INFO - 	 Recall for 0.4 precision: 0.293
2024-11-03 06:54 - INFO - 	 Best Val. Loss: 0.174
2024-11-03 06:54 - INFO - 	 Best ROC-AUC: 0.816
2024-11-03 06:54 - INFO - 	 Best PR-AUC: 0.277
2024-11-03 06:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 06:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 06:54 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-03 06:54 - INFO - ---------------------------------------------
2024-11-03 06:55 - INFO - ---------------------------------------------
2024-11-03 06:55 - INFO - Epoch: 07 | Time: 1m 40s
2024-11-03 06:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28273
2024-11-03 06:55 - INFO - 	 Train Loss: 0.154
2024-11-03 06:55 - INFO - 	 Val. Loss: 0.176
2024-11-03 06:55 - INFO - 	 ROC-AUC: 0.815
2024-11-03 06:55 - INFO - 	 PR-AUC: 0.283
2024-11-03 06:55 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-03 06:55 - INFO - 	 Best Val. Loss: 0.174
2024-11-03 06:55 - INFO - 	 Best ROC-AUC: 0.816
2024-11-03 06:55 - INFO - 	 Best PR-AUC: 0.283
2024-11-03 06:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 06:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.175
2024-11-03 06:55 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-03 06:55 - INFO - ---------------------------------------------
2024-11-03 06:57 - INFO - ---------------------------------------------
2024-11-03 06:57 - INFO - Epoch: 08 | Time: 1m 42s
2024-11-03 06:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31218
2024-11-03 06:57 - INFO - 	 Train Loss: 0.152
2024-11-03 06:57 - INFO - 	 Val. Loss: 0.169
2024-11-03 06:57 - INFO - 	 ROC-AUC: 0.830
2024-11-03 06:57 - INFO - 	 PR-AUC: 0.312
2024-11-03 06:57 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-03 06:57 - INFO - 	 Best Val. Loss: 0.169
2024-11-03 06:57 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 06:57 - INFO - 	 Best PR-AUC: 0.312
2024-11-03 06:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-03 06:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 06:57 - INFO - 	 Best Recall for 0.4 precision: 0.341
2024-11-03 06:57 - INFO - ---------------------------------------------
2024-11-03 06:59 - INFO - ---------------------------------------------
2024-11-03 06:59 - INFO - Epoch: 09 | Time: 1m 41s
2024-11-03 06:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34157
2024-11-03 06:59 - INFO - 	 Train Loss: 0.150
2024-11-03 06:59 - INFO - 	 Val. Loss: 0.170
2024-11-03 06:59 - INFO - 	 ROC-AUC: 0.835
2024-11-03 06:59 - INFO - 	 PR-AUC: 0.342
2024-11-03 06:59 - INFO - 	 Recall for 0.4 precision: 0.395
2024-11-03 06:59 - INFO - 	 Best Val. Loss: 0.169
2024-11-03 06:59 - INFO - 	 Best ROC-AUC: 0.835
2024-11-03 06:59 - INFO - 	 Best PR-AUC: 0.342
2024-11-03 06:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.782
2024-11-03 06:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-03 06:59 - INFO - 	 Best Recall for 0.4 precision: 0.395
2024-11-03 06:59 - INFO - ---------------------------------------------
2024-11-03 07:00 - INFO - ---------------------------------------------
2024-11-03 07:00 - INFO - Epoch: 10 | Time: 1m 41s
2024-11-03 07:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34248
2024-11-03 07:00 - INFO - 	 Train Loss: 0.150
2024-11-03 07:00 - INFO - 	 Val. Loss: 0.168
2024-11-03 07:00 - INFO - 	 ROC-AUC: 0.844
2024-11-03 07:00 - INFO - 	 PR-AUC: 0.342
2024-11-03 07:00 - INFO - 	 Recall for 0.4 precision: 0.407
2024-11-03 07:00 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 07:00 - INFO - 	 Best ROC-AUC: 0.844
2024-11-03 07:00 - INFO - 	 Best PR-AUC: 0.342
2024-11-03 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-03 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 07:00 - INFO - 	 Best Recall for 0.4 precision: 0.407
2024-11-03 07:00 - INFO - ---------------------------------------------
