2024-11-05 07:56 - INFO - Fit the preprocessing pipeline
2024-11-05 07:56 - INFO - Training using device: mps
2024-11-05 07:56 - INFO - Creating generators
2024-11-05 07:56 - INFO - The model has 651,257 trainable parameters
2024-11-05 07:56 - INFO - * Model:
2024-11-05 07:56 - INFO - * -----------
2024-11-05 07:56 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 07:56 - INFO - * -----------
2024-11-05 07:56 - INFO - Evaluating model based on: aucpr
2024-11-05 07:56 - INFO - Training..

2024-11-05 07:58 - INFO - ---------------------------------------------
2024-11-05 07:58 - INFO - Epoch: 01 | Time: 2m 4s
2024-11-05 07:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.04972
2024-11-05 07:58 - INFO - 	 Train Loss: 0.246
2024-11-05 07:58 - INFO - 	 Val. Loss: 0.295
2024-11-05 07:58 - INFO - 	 ROC-AUC: 0.550
2024-11-05 07:58 - INFO - 	 PR-AUC: 0.050
2024-11-05 07:58 - INFO - 	 Recall for 0.4 precision: 0.333
2024-11-05 07:58 - INFO - 	 Best Val. Loss: 0.295
2024-11-05 07:58 - INFO - 	 Best ROC-AUC: 0.550
2024-11-05 07:58 - INFO - 	 Best PR-AUC: 0.050
2024-11-05 07:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.510
2024-11-05 07:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.049
2024-11-05 07:58 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-05 07:58 - INFO - ---------------------------------------------
2024-11-05 08:00 - INFO - ---------------------------------------------
2024-11-05 08:00 - INFO - Epoch: 02 | Time: 2m 12s
2024-11-05 08:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.04998
2024-11-05 08:00 - INFO - 	 Train Loss: 0.205
2024-11-05 08:00 - INFO - 	 Val. Loss: 0.284
2024-11-05 08:00 - INFO - 	 ROC-AUC: 0.532
2024-11-05 08:00 - INFO - 	 PR-AUC: 0.050
2024-11-05 08:00 - INFO - 	 Recall for 0.4 precision: 0.080
2024-11-05 08:00 - INFO - 	 Best Val. Loss: 0.284
2024-11-05 08:00 - INFO - 	 Best ROC-AUC: 0.550
2024-11-05 08:00 - INFO - 	 Best PR-AUC: 0.050
2024-11-05 08:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.510
2024-11-05 08:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.045
2024-11-05 08:00 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-05 08:00 - INFO - ---------------------------------------------
2024-11-05 08:03 - INFO - ---------------------------------------------
2024-11-05 08:03 - INFO - Epoch: 03 | Time: 2m 10s
2024-11-05 08:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05798
2024-11-05 08:03 - INFO - 	 Train Loss: 0.193
2024-11-05 08:03 - INFO - 	 Val. Loss: 0.244
2024-11-05 08:03 - INFO - 	 ROC-AUC: 0.581
2024-11-05 08:03 - INFO - 	 PR-AUC: 0.058
2024-11-05 08:03 - INFO - 	 Recall for 0.4 precision: 0.072
2024-11-05 08:03 - INFO - 	 Best Val. Loss: 0.244
2024-11-05 08:03 - INFO - 	 Best ROC-AUC: 0.581
2024-11-05 08:03 - INFO - 	 Best PR-AUC: 0.058
2024-11-05 08:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.604
2024-11-05 08:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.069
2024-11-05 08:03 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-05 08:03 - INFO - ---------------------------------------------
2024-11-05 08:05 - INFO - ---------------------------------------------
2024-11-05 08:05 - INFO - Epoch: 04 | Time: 2m 11s
2024-11-05 08:05 - INFO - 	 Train Loss: 0.194
2024-11-05 08:05 - INFO - 	 Val. Loss: 0.239
2024-11-05 08:05 - INFO - 	 ROC-AUC: 0.547
2024-11-05 08:05 - INFO - 	 PR-AUC: 0.053
2024-11-05 08:05 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 08:05 - INFO - 	 Best Val. Loss: 0.239
2024-11-05 08:05 - INFO - 	 Best ROC-AUC: 0.581
2024-11-05 08:05 - INFO - 	 Best PR-AUC: 0.058
2024-11-05 08:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.604
2024-11-05 08:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.069
2024-11-05 08:05 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-05 08:05 - INFO - ---------------------------------------------
2024-11-05 08:07 - INFO - ---------------------------------------------
2024-11-05 08:07 - INFO - Epoch: 05 | Time: 2m 11s
2024-11-05 08:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06224
2024-11-05 08:07 - INFO - 	 Train Loss: 0.188
2024-11-05 08:07 - INFO - 	 Val. Loss: 0.230
2024-11-05 08:07 - INFO - 	 ROC-AUC: 0.601
2024-11-05 08:07 - INFO - 	 PR-AUC: 0.062
2024-11-05 08:07 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 08:07 - INFO - 	 Best Val. Loss: 0.230
2024-11-05 08:07 - INFO - 	 Best ROC-AUC: 0.601
2024-11-05 08:07 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 08:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.579
2024-11-05 08:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 08:07 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-05 08:07 - INFO - ---------------------------------------------
2024-11-05 08:09 - INFO - ---------------------------------------------
2024-11-05 08:09 - INFO - Epoch: 06 | Time: 2m 12s
2024-11-05 08:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07628
2024-11-05 08:09 - INFO - 	 Train Loss: 0.185
2024-11-05 08:09 - INFO - 	 Val. Loss: 0.225
2024-11-05 08:09 - INFO - 	 ROC-AUC: 0.595
2024-11-05 08:09 - INFO - 	 PR-AUC: 0.076
2024-11-05 08:09 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-05 08:09 - INFO - 	 Best Val. Loss: 0.225
2024-11-05 08:09 - INFO - 	 Best ROC-AUC: 0.601
2024-11-05 08:09 - INFO - 	 Best PR-AUC: 0.076
2024-11-05 08:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.579
2024-11-05 08:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 08:09 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-05 08:09 - INFO - ---------------------------------------------
2024-11-05 08:11 - INFO - ---------------------------------------------
2024-11-05 08:11 - INFO - Epoch: 07 | Time: 2m 12s
2024-11-05 08:11 - INFO - 	 Train Loss: 0.184
2024-11-05 08:11 - INFO - 	 Val. Loss: 0.252
2024-11-05 08:11 - INFO - 	 ROC-AUC: 0.492
2024-11-05 08:11 - INFO - 	 PR-AUC: 0.050
2024-11-05 08:11 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 08:11 - INFO - 	 Best Val. Loss: 0.225
2024-11-05 08:11 - INFO - 	 Best ROC-AUC: 0.601
2024-11-05 08:11 - INFO - 	 Best PR-AUC: 0.076
2024-11-05 08:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.579
2024-11-05 08:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 08:11 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-05 08:11 - INFO - ---------------------------------------------
2024-11-05 08:14 - INFO - ---------------------------------------------
2024-11-05 08:14 - INFO - Epoch: 08 | Time: 2m 11s
2024-11-05 08:14 - INFO - 	 Train Loss: 0.184
2024-11-05 08:14 - INFO - 	 Val. Loss: 0.230
2024-11-05 08:14 - INFO - 	 ROC-AUC: 0.555
2024-11-05 08:14 - INFO - 	 PR-AUC: 0.053
2024-11-05 08:14 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-05 08:14 - INFO - 	 Best Val. Loss: 0.225
2024-11-05 08:14 - INFO - 	 Best ROC-AUC: 0.601
2024-11-05 08:14 - INFO - 	 Best PR-AUC: 0.076
2024-11-05 08:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.579
2024-11-05 08:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 08:14 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-05 08:14 - INFO - ---------------------------------------------
2024-11-05 08:16 - INFO - ---------------------------------------------
2024-11-05 08:16 - INFO - Epoch: 09 | Time: 2m 10s
2024-11-05 08:16 - INFO - 	 Train Loss: 0.180
2024-11-05 08:16 - INFO - 	 Val. Loss: 0.218
2024-11-05 08:16 - INFO - 	 ROC-AUC: 0.610
2024-11-05 08:16 - INFO - 	 PR-AUC: 0.072
2024-11-05 08:16 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-05 08:16 - INFO - 	 Best Val. Loss: 0.218
2024-11-05 08:16 - INFO - 	 Best ROC-AUC: 0.610
2024-11-05 08:16 - INFO - 	 Best PR-AUC: 0.076
2024-11-05 08:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.586
2024-11-05 08:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 08:16 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-05 08:16 - INFO - ---------------------------------------------
2024-11-05 08:18 - INFO - ---------------------------------------------
2024-11-05 08:18 - INFO - Epoch: 10 | Time: 2m 11s
2024-11-05 08:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09917
2024-11-05 08:18 - INFO - 	 Train Loss: 0.180
2024-11-05 08:18 - INFO - 	 Val. Loss: 0.215
2024-11-05 08:18 - INFO - 	 ROC-AUC: 0.619
2024-11-05 08:18 - INFO - 	 PR-AUC: 0.099
2024-11-05 08:18 - INFO - 	 Recall for 0.4 precision: 0.023
2024-11-05 08:18 - INFO - 	 Best Val. Loss: 0.215
2024-11-05 08:18 - INFO - 	 Best ROC-AUC: 0.619
2024-11-05 08:18 - INFO - 	 Best PR-AUC: 0.099
2024-11-05 08:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.565
2024-11-05 08:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 08:18 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-05 08:18 - INFO - ---------------------------------------------
2024-11-05 08:21 - INFO - Fit the preprocessing pipeline
2024-11-05 08:21 - INFO - Training using device: mps
2024-11-05 08:21 - INFO - Creating generators
2024-11-05 08:21 - INFO - The model has 651,257 trainable parameters
2024-11-05 08:21 - INFO - * Model:
2024-11-05 08:21 - INFO - * -----------
2024-11-05 08:21 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 08:21 - INFO - * -----------
2024-11-05 08:21 - INFO - Evaluating model based on: aucpr
2024-11-05 08:21 - INFO - Training..

2024-11-05 08:23 - INFO - ---------------------------------------------
2024-11-05 08:23 - INFO - Epoch: 01 | Time: 2m 0s
2024-11-05 08:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05486
2024-11-05 08:23 - INFO - 	 Train Loss: 0.244
2024-11-05 08:23 - INFO - 	 Val. Loss: 0.295
2024-11-05 08:23 - INFO - 	 ROC-AUC: 0.550
2024-11-05 08:23 - INFO - 	 PR-AUC: 0.055
2024-11-05 08:23 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-05 08:23 - INFO - 	 Best Val. Loss: 0.295
2024-11-05 08:23 - INFO - 	 Best ROC-AUC: 0.550
2024-11-05 08:23 - INFO - 	 Best PR-AUC: 0.055
2024-11-05 08:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.519
2024-11-05 08:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 08:23 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-05 08:23 - INFO - ---------------------------------------------
2024-11-05 08:25 - INFO - ---------------------------------------------
2024-11-05 08:25 - INFO - Epoch: 02 | Time: 2m 9s
2024-11-05 08:25 - INFO - 	 Train Loss: 0.219
2024-11-05 08:25 - INFO - 	 Val. Loss: 0.308
2024-11-05 08:25 - INFO - 	 ROC-AUC: 0.517
2024-11-05 08:25 - INFO - 	 PR-AUC: 0.049
2024-11-05 08:25 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 08:25 - INFO - 	 Best Val. Loss: 0.295
2024-11-05 08:25 - INFO - 	 Best ROC-AUC: 0.550
2024-11-05 08:25 - INFO - 	 Best PR-AUC: 0.055
2024-11-05 08:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.519
2024-11-05 08:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 08:25 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-05 08:25 - INFO - ---------------------------------------------
2024-11-05 08:27 - INFO - ---------------------------------------------
2024-11-05 08:27 - INFO - Epoch: 03 | Time: 2m 10s
2024-11-05 08:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05828
2024-11-05 08:27 - INFO - 	 Train Loss: 0.207
2024-11-05 08:27 - INFO - 	 Val. Loss: 0.249
2024-11-05 08:27 - INFO - 	 ROC-AUC: 0.576
2024-11-05 08:27 - INFO - 	 PR-AUC: 0.058
2024-11-05 08:27 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 08:27 - INFO - 	 Best Val. Loss: 0.249
2024-11-05 08:27 - INFO - 	 Best ROC-AUC: 0.576
2024-11-05 08:27 - INFO - 	 Best PR-AUC: 0.058
2024-11-05 08:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.575
2024-11-05 08:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 08:27 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-05 08:27 - INFO - ---------------------------------------------
2024-11-05 08:30 - INFO - ---------------------------------------------
2024-11-05 08:30 - INFO - Epoch: 04 | Time: 2m 9s
2024-11-05 08:30 - INFO - 	 Train Loss: 0.199
2024-11-05 08:30 - INFO - 	 Val. Loss: 0.262
2024-11-05 08:30 - INFO - 	 ROC-AUC: 0.591
2024-11-05 08:30 - INFO - 	 PR-AUC: 0.058
2024-11-05 08:30 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 08:30 - INFO - 	 Best Val. Loss: 0.249
2024-11-05 08:30 - INFO - 	 Best ROC-AUC: 0.591
2024-11-05 08:30 - INFO - 	 Best PR-AUC: 0.058
2024-11-05 08:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.560
2024-11-05 08:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 08:30 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-05 08:30 - INFO - ---------------------------------------------
2024-11-05 08:32 - INFO - ---------------------------------------------
2024-11-05 08:32 - INFO - Epoch: 05 | Time: 2m 9s
2024-11-05 08:32 - INFO - 	 Train Loss: 0.190
2024-11-05 08:32 - INFO - 	 Val. Loss: 0.235
2024-11-05 08:32 - INFO - 	 ROC-AUC: 0.607
2024-11-05 08:32 - INFO - 	 PR-AUC: 0.056
2024-11-05 08:32 - INFO - 	 Recall for 0.4 precision: 0.519
2024-11-05 08:32 - INFO - 	 Best Val. Loss: 0.235
2024-11-05 08:32 - INFO - 	 Best ROC-AUC: 0.607
2024-11-05 08:32 - INFO - 	 Best PR-AUC: 0.058
2024-11-05 08:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.565
2024-11-05 08:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 08:32 - INFO - 	 Best Recall for 0.4 precision: 0.519
2024-11-05 08:32 - INFO - ---------------------------------------------
2024-11-05 08:34 - INFO - ---------------------------------------------
2024-11-05 08:34 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-05 08:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06529
2024-11-05 08:34 - INFO - 	 Train Loss: 0.185
2024-11-05 08:34 - INFO - 	 Val. Loss: 0.236
2024-11-05 08:34 - INFO - 	 ROC-AUC: 0.585
2024-11-05 08:34 - INFO - 	 PR-AUC: 0.065
2024-11-05 08:34 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-05 08:34 - INFO - 	 Best Val. Loss: 0.235
2024-11-05 08:34 - INFO - 	 Best ROC-AUC: 0.607
2024-11-05 08:34 - INFO - 	 Best PR-AUC: 0.065
2024-11-05 08:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.565
2024-11-05 08:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.059
2024-11-05 08:34 - INFO - 	 Best Recall for 0.4 precision: 0.519
2024-11-05 08:34 - INFO - ---------------------------------------------
2024-11-05 08:35 - INFO - ---------------------------------------------
2024-11-05 08:35 - INFO - Epoch: 07 | Time: 1m 50s
2024-11-05 08:35 - INFO - 	 Train Loss: 0.185
2024-11-05 08:35 - INFO - 	 Val. Loss: 0.230
2024-11-05 08:35 - INFO - 	 ROC-AUC: 0.621
2024-11-05 08:35 - INFO - 	 PR-AUC: 0.063
2024-11-05 08:35 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 08:35 - INFO - 	 Best Val. Loss: 0.230
2024-11-05 08:35 - INFO - 	 Best ROC-AUC: 0.621
2024-11-05 08:35 - INFO - 	 Best PR-AUC: 0.065
2024-11-05 08:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.576
2024-11-05 08:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.059
2024-11-05 08:35 - INFO - 	 Best Recall for 0.4 precision: 0.519
2024-11-05 08:35 - INFO - ---------------------------------------------
2024-11-05 08:37 - INFO - ---------------------------------------------
2024-11-05 08:37 - INFO - Epoch: 08 | Time: 1m 50s
2024-11-05 08:37 - INFO - 	 Train Loss: 0.181
2024-11-05 08:37 - INFO - 	 Val. Loss: 0.228
2024-11-05 08:37 - INFO - 	 ROC-AUC: 0.584
2024-11-05 08:37 - INFO - 	 PR-AUC: 0.057
2024-11-05 08:37 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 08:37 - INFO - 	 Best Val. Loss: 0.228
2024-11-05 08:37 - INFO - 	 Best ROC-AUC: 0.621
2024-11-05 08:37 - INFO - 	 Best PR-AUC: 0.065
2024-11-05 08:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.576
2024-11-05 08:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.059
2024-11-05 08:37 - INFO - 	 Best Recall for 0.4 precision: 0.519
2024-11-05 08:37 - INFO - ---------------------------------------------
2024-11-05 08:39 - INFO - ---------------------------------------------
2024-11-05 08:39 - INFO - Epoch: 09 | Time: 1m 49s
2024-11-05 08:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07408
2024-11-05 08:39 - INFO - 	 Train Loss: 0.181
2024-11-05 08:39 - INFO - 	 Val. Loss: 0.221
2024-11-05 08:39 - INFO - 	 ROC-AUC: 0.628
2024-11-05 08:39 - INFO - 	 PR-AUC: 0.074
2024-11-05 08:39 - INFO - 	 Recall for 0.4 precision: 0.016
2024-11-05 08:39 - INFO - 	 Best Val. Loss: 0.221
2024-11-05 08:39 - INFO - 	 Best ROC-AUC: 0.628
2024-11-05 08:39 - INFO - 	 Best PR-AUC: 0.074
2024-11-05 08:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.592
2024-11-05 08:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.061
2024-11-05 08:39 - INFO - 	 Best Recall for 0.4 precision: 0.519
2024-11-05 08:39 - INFO - ---------------------------------------------
2024-11-05 08:41 - INFO - ---------------------------------------------
2024-11-05 08:41 - INFO - Epoch: 10 | Time: 1m 49s
2024-11-05 08:41 - INFO - 	 Train Loss: 0.177
2024-11-05 08:41 - INFO - 	 Val. Loss: 0.211
2024-11-05 08:41 - INFO - 	 ROC-AUC: 0.654
2024-11-05 08:41 - INFO - 	 PR-AUC: 0.074
2024-11-05 08:41 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 08:41 - INFO - 	 Best Val. Loss: 0.211
2024-11-05 08:41 - INFO - 	 Best ROC-AUC: 0.654
2024-11-05 08:41 - INFO - 	 Best PR-AUC: 0.074
2024-11-05 08:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.574
2024-11-05 08:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.061
2024-11-05 08:41 - INFO - 	 Best Recall for 0.4 precision: 0.519
2024-11-05 08:41 - INFO - ---------------------------------------------
2024-11-05 08:44 - INFO - Fit the preprocessing pipeline
2024-11-05 08:44 - INFO - Training using device: mps
2024-11-05 08:44 - INFO - Creating generators
2024-11-05 08:44 - INFO - The model has 651,257 trainable parameters
2024-11-05 08:44 - INFO - * Model:
2024-11-05 08:44 - INFO - * -----------
2024-11-05 08:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 08:44 - INFO - * -----------
2024-11-05 08:44 - INFO - Evaluating model based on: aucpr
2024-11-05 08:44 - INFO - Training..

2024-11-05 08:45 - INFO - ---------------------------------------------
2024-11-05 08:45 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-05 08:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05002
2024-11-05 08:45 - INFO - 	 Train Loss: 0.249
2024-11-05 08:45 - INFO - 	 Val. Loss: 0.314
2024-11-05 08:45 - INFO - 	 ROC-AUC: 0.547
2024-11-05 08:45 - INFO - 	 PR-AUC: 0.050
2024-11-05 08:45 - INFO - 	 Recall for 0.4 precision: 0.054
2024-11-05 08:45 - INFO - 	 Best Val. Loss: 0.314
2024-11-05 08:45 - INFO - 	 Best ROC-AUC: 0.547
2024-11-05 08:45 - INFO - 	 Best PR-AUC: 0.050
2024-11-05 08:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.538
2024-11-05 08:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 08:45 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-05 08:45 - INFO - ---------------------------------------------
2024-11-05 08:47 - INFO - ---------------------------------------------
2024-11-05 08:47 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-05 08:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05083
2024-11-05 08:47 - INFO - 	 Train Loss: 0.213
2024-11-05 08:47 - INFO - 	 Val. Loss: 0.271
2024-11-05 08:47 - INFO - 	 ROC-AUC: 0.538
2024-11-05 08:47 - INFO - 	 PR-AUC: 0.051
2024-11-05 08:47 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 08:47 - INFO - 	 Best Val. Loss: 0.271
2024-11-05 08:47 - INFO - 	 Best ROC-AUC: 0.547
2024-11-05 08:47 - INFO - 	 Best PR-AUC: 0.051
2024-11-05 08:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.538
2024-11-05 08:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 08:47 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-05 08:47 - INFO - ---------------------------------------------
2024-11-05 08:49 - INFO - ---------------------------------------------
2024-11-05 08:49 - INFO - Epoch: 03 | Time: 1m 44s
2024-11-05 08:49 - INFO - 	 Train Loss: 0.199
2024-11-05 08:49 - INFO - 	 Val. Loss: 0.282
2024-11-05 08:49 - INFO - 	 ROC-AUC: 0.520
2024-11-05 08:49 - INFO - 	 PR-AUC: 0.046
2024-11-05 08:49 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 08:49 - INFO - 	 Best Val. Loss: 0.271
2024-11-05 08:49 - INFO - 	 Best ROC-AUC: 0.547
2024-11-05 08:49 - INFO - 	 Best PR-AUC: 0.051
2024-11-05 08:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.538
2024-11-05 08:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 08:49 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-05 08:49 - INFO - ---------------------------------------------
2024-11-05 08:51 - INFO - ---------------------------------------------
2024-11-05 08:51 - INFO - Epoch: 04 | Time: 1m 49s
2024-11-05 08:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06089
2024-11-05 08:51 - INFO - 	 Train Loss: 0.190
2024-11-05 08:51 - INFO - 	 Val. Loss: 0.249
2024-11-05 08:51 - INFO - 	 ROC-AUC: 0.550
2024-11-05 08:51 - INFO - 	 PR-AUC: 0.061
2024-11-05 08:51 - INFO - 	 Recall for 0.4 precision: 0.018
2024-11-05 08:51 - INFO - 	 Best Val. Loss: 0.249
2024-11-05 08:51 - INFO - 	 Best ROC-AUC: 0.550
2024-11-05 08:51 - INFO - 	 Best PR-AUC: 0.061
2024-11-05 08:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.551
2024-11-05 08:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.067
2024-11-05 08:51 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-05 08:51 - INFO - ---------------------------------------------
2024-11-05 08:52 - INFO - ---------------------------------------------
2024-11-05 08:52 - INFO - Epoch: 05 | Time: 1m 49s
2024-11-05 08:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06578
2024-11-05 08:52 - INFO - 	 Train Loss: 0.185
2024-11-05 08:52 - INFO - 	 Val. Loss: 0.232
2024-11-05 08:52 - INFO - 	 ROC-AUC: 0.605
2024-11-05 08:52 - INFO - 	 PR-AUC: 0.066
2024-11-05 08:52 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 08:52 - INFO - 	 Best Val. Loss: 0.232
2024-11-05 08:52 - INFO - 	 Best ROC-AUC: 0.605
2024-11-05 08:52 - INFO - 	 Best PR-AUC: 0.066
2024-11-05 08:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.581
2024-11-05 08:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.063
2024-11-05 08:52 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-05 08:52 - INFO - ---------------------------------------------
2024-11-05 08:54 - INFO - ---------------------------------------------
2024-11-05 08:54 - INFO - Epoch: 06 | Time: 1m 49s
2024-11-05 08:54 - INFO - 	 Train Loss: 0.185
2024-11-05 08:54 - INFO - 	 Val. Loss: 0.229
2024-11-05 08:54 - INFO - 	 ROC-AUC: 0.605
2024-11-05 08:54 - INFO - 	 PR-AUC: 0.064
2024-11-05 08:54 - INFO - 	 Recall for 0.4 precision: 0.044
2024-11-05 08:54 - INFO - 	 Best Val. Loss: 0.229
2024-11-05 08:54 - INFO - 	 Best ROC-AUC: 0.605
2024-11-05 08:54 - INFO - 	 Best PR-AUC: 0.066
2024-11-05 08:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.581
2024-11-05 08:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.063
2024-11-05 08:54 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-05 08:54 - INFO - ---------------------------------------------
2024-11-05 08:56 - INFO - ---------------------------------------------
2024-11-05 08:56 - INFO - Epoch: 07 | Time: 1m 49s
2024-11-05 08:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06629
2024-11-05 08:56 - INFO - 	 Train Loss: 0.181
2024-11-05 08:56 - INFO - 	 Val. Loss: 0.224
2024-11-05 08:56 - INFO - 	 ROC-AUC: 0.603
2024-11-05 08:56 - INFO - 	 PR-AUC: 0.066
2024-11-05 08:56 - INFO - 	 Recall for 0.4 precision: 0.033
2024-11-05 08:56 - INFO - 	 Best Val. Loss: 0.224
2024-11-05 08:56 - INFO - 	 Best ROC-AUC: 0.605
2024-11-05 08:56 - INFO - 	 Best PR-AUC: 0.066
2024-11-05 08:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.581
2024-11-05 08:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.057
2024-11-05 08:56 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-05 08:56 - INFO - ---------------------------------------------
2024-11-05 08:58 - INFO - ---------------------------------------------
2024-11-05 08:58 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-05 08:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07321
2024-11-05 08:58 - INFO - 	 Train Loss: 0.182
2024-11-05 08:58 - INFO - 	 Val. Loss: 0.215
2024-11-05 08:58 - INFO - 	 ROC-AUC: 0.630
2024-11-05 08:58 - INFO - 	 PR-AUC: 0.073
2024-11-05 08:58 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-05 08:58 - INFO - 	 Best Val. Loss: 0.215
2024-11-05 08:58 - INFO - 	 Best ROC-AUC: 0.630
2024-11-05 08:58 - INFO - 	 Best PR-AUC: 0.073
2024-11-05 08:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.595
2024-11-05 08:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.059
2024-11-05 08:58 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-05 08:58 - INFO - ---------------------------------------------
2024-11-05 09:00 - INFO - ---------------------------------------------
2024-11-05 09:00 - INFO - Epoch: 09 | Time: 1m 52s
2024-11-05 09:00 - INFO - 	 Train Loss: 0.179
2024-11-05 09:00 - INFO - 	 Val. Loss: 0.218
2024-11-05 09:00 - INFO - 	 ROC-AUC: 0.625
2024-11-05 09:00 - INFO - 	 PR-AUC: 0.069
2024-11-05 09:00 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 09:00 - INFO - 	 Best Val. Loss: 0.215
2024-11-05 09:00 - INFO - 	 Best ROC-AUC: 0.630
2024-11-05 09:00 - INFO - 	 Best PR-AUC: 0.073
2024-11-05 09:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.595
2024-11-05 09:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.059
2024-11-05 09:00 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-05 09:00 - INFO - ---------------------------------------------
2024-11-05 09:02 - INFO - ---------------------------------------------
2024-11-05 09:02 - INFO - Epoch: 10 | Time: 1m 52s
2024-11-05 09:02 - INFO - 	 Train Loss: 0.180
2024-11-05 09:02 - INFO - 	 Val. Loss: 0.210
2024-11-05 09:02 - INFO - 	 ROC-AUC: 0.584
2024-11-05 09:02 - INFO - 	 PR-AUC: 0.059
2024-11-05 09:02 - INFO - 	 Recall for 0.4 precision: 0.024
2024-11-05 09:02 - INFO - 	 Best Val. Loss: 0.210
2024-11-05 09:02 - INFO - 	 Best ROC-AUC: 0.630
2024-11-05 09:02 - INFO - 	 Best PR-AUC: 0.073
2024-11-05 09:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.595
2024-11-05 09:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.059
2024-11-05 09:02 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-05 09:02 - INFO - ---------------------------------------------
2024-11-05 09:04 - INFO - Fit the preprocessing pipeline
2024-11-05 09:04 - INFO - Training using device: mps
2024-11-05 09:04 - INFO - Creating generators
2024-11-05 09:04 - INFO - The model has 651,257 trainable parameters
2024-11-05 09:04 - INFO - * Model:
2024-11-05 09:04 - INFO - * -----------
2024-11-05 09:04 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 09:04 - INFO - * -----------
2024-11-05 09:04 - INFO - Evaluating model based on: aucpr
2024-11-05 09:04 - INFO - Training..

2024-11-05 09:06 - INFO - ---------------------------------------------
2024-11-05 09:06 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-05 09:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05403
2024-11-05 09:06 - INFO - 	 Train Loss: 0.243
2024-11-05 09:06 - INFO - 	 Val. Loss: 0.301
2024-11-05 09:06 - INFO - 	 ROC-AUC: 0.574
2024-11-05 09:06 - INFO - 	 PR-AUC: 0.054
2024-11-05 09:06 - INFO - 	 Recall for 0.4 precision: 0.122
2024-11-05 09:06 - INFO - 	 Best Val. Loss: 0.301
2024-11-05 09:06 - INFO - 	 Best ROC-AUC: 0.574
2024-11-05 09:06 - INFO - 	 Best PR-AUC: 0.054
2024-11-05 09:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.565
2024-11-05 09:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.053
2024-11-05 09:06 - INFO - 	 Best Recall for 0.4 precision: 0.122
2024-11-05 09:06 - INFO - ---------------------------------------------
2024-11-05 09:08 - INFO - ---------------------------------------------
2024-11-05 09:08 - INFO - Epoch: 02 | Time: 1m 46s
2024-11-05 09:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05997
2024-11-05 09:08 - INFO - 	 Train Loss: 0.208
2024-11-05 09:08 - INFO - 	 Val. Loss: 0.263
2024-11-05 09:08 - INFO - 	 ROC-AUC: 0.606
2024-11-05 09:08 - INFO - 	 PR-AUC: 0.060
2024-11-05 09:08 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 09:08 - INFO - 	 Best Val. Loss: 0.263
2024-11-05 09:08 - INFO - 	 Best ROC-AUC: 0.606
2024-11-05 09:08 - INFO - 	 Best PR-AUC: 0.060
2024-11-05 09:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.587
2024-11-05 09:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.061
2024-11-05 09:08 - INFO - 	 Best Recall for 0.4 precision: 0.122
2024-11-05 09:08 - INFO - ---------------------------------------------
2024-11-05 09:10 - INFO - ---------------------------------------------
2024-11-05 09:10 - INFO - Epoch: 03 | Time: 1m 52s
2024-11-05 09:10 - INFO - 	 Train Loss: 0.200
2024-11-05 09:10 - INFO - 	 Val. Loss: 0.271
2024-11-05 09:10 - INFO - 	 ROC-AUC: 0.568
2024-11-05 09:10 - INFO - 	 PR-AUC: 0.056
2024-11-05 09:10 - INFO - 	 Recall for 0.4 precision: 0.072
2024-11-05 09:10 - INFO - 	 Best Val. Loss: 0.263
2024-11-05 09:10 - INFO - 	 Best ROC-AUC: 0.606
2024-11-05 09:10 - INFO - 	 Best PR-AUC: 0.060
2024-11-05 09:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.587
2024-11-05 09:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.061
2024-11-05 09:10 - INFO - 	 Best Recall for 0.4 precision: 0.122
2024-11-05 09:10 - INFO - ---------------------------------------------
2024-11-05 09:12 - INFO - ---------------------------------------------
2024-11-05 09:12 - INFO - Epoch: 04 | Time: 1m 53s
2024-11-05 09:12 - INFO - 	 Train Loss: 0.190
2024-11-05 09:12 - INFO - 	 Val. Loss: 0.229
2024-11-05 09:12 - INFO - 	 ROC-AUC: 0.567
2024-11-05 09:12 - INFO - 	 PR-AUC: 0.052
2024-11-05 09:12 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 09:12 - INFO - 	 Best Val. Loss: 0.229
2024-11-05 09:12 - INFO - 	 Best ROC-AUC: 0.606
2024-11-05 09:12 - INFO - 	 Best PR-AUC: 0.060
2024-11-05 09:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.587
2024-11-05 09:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.061
2024-11-05 09:12 - INFO - 	 Best Recall for 0.4 precision: 0.122
2024-11-05 09:12 - INFO - ---------------------------------------------
2024-11-05 09:13 - INFO - ---------------------------------------------
2024-11-05 09:13 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-05 09:13 - INFO - 	 Train Loss: 0.190
2024-11-05 09:13 - INFO - 	 Val. Loss: 0.274
2024-11-05 09:13 - INFO - 	 ROC-AUC: 0.484
2024-11-05 09:13 - INFO - 	 PR-AUC: 0.048
2024-11-05 09:13 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-05 09:13 - INFO - 	 Best Val. Loss: 0.229
2024-11-05 09:13 - INFO - 	 Best ROC-AUC: 0.606
2024-11-05 09:13 - INFO - 	 Best PR-AUC: 0.060
2024-11-05 09:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.587
2024-11-05 09:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.061
2024-11-05 09:13 - INFO - 	 Best Recall for 0.4 precision: 0.122
2024-11-05 09:13 - INFO - ---------------------------------------------
2024-11-05 09:18 - INFO - Fit the preprocessing pipeline
2024-11-05 09:18 - INFO - Training using device: mps
2024-11-05 09:18 - INFO - Creating generators
2024-11-05 09:18 - INFO - The model has 651,257 trainable parameters
2024-11-05 09:18 - INFO - * Model:
2024-11-05 09:18 - INFO - * -----------
2024-11-05 09:18 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 09:18 - INFO - * -----------
2024-11-05 09:18 - INFO - Evaluating model based on: aucpr
2024-11-05 09:18 - INFO - Training..

2024-11-05 09:20 - INFO - ---------------------------------------------
2024-11-05 09:20 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-05 09:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.04833
2024-11-05 09:20 - INFO - 	 Train Loss: 0.250
2024-11-05 09:20 - INFO - 	 Val. Loss: 0.297
2024-11-05 09:20 - INFO - 	 ROC-AUC: 0.541
2024-11-05 09:20 - INFO - 	 PR-AUC: 0.048
2024-11-05 09:20 - INFO - 	 Recall for 0.4 precision: 0.387
2024-11-05 09:20 - INFO - 	 Best Val. Loss: 0.297
2024-11-05 09:20 - INFO - 	 Best ROC-AUC: 0.541
2024-11-05 09:20 - INFO - 	 Best PR-AUC: 0.048
2024-11-05 09:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.513
2024-11-05 09:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.047
2024-11-05 09:20 - INFO - 	 Best Recall for 0.4 precision: 0.387
2024-11-05 09:20 - INFO - ---------------------------------------------
2024-11-05 09:22 - INFO - ---------------------------------------------
2024-11-05 09:22 - INFO - Epoch: 02 | Time: 1m 51s
2024-11-05 09:22 - INFO - 	 Train Loss: 0.211
2024-11-05 09:22 - INFO - 	 Val. Loss: 0.270
2024-11-05 09:22 - INFO - 	 ROC-AUC: 0.505
2024-11-05 09:22 - INFO - 	 PR-AUC: 0.048
2024-11-05 09:22 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 09:22 - INFO - 	 Best Val. Loss: 0.270
2024-11-05 09:22 - INFO - 	 Best ROC-AUC: 0.541
2024-11-05 09:22 - INFO - 	 Best PR-AUC: 0.048
2024-11-05 09:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.513
2024-11-05 09:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.047
2024-11-05 09:22 - INFO - 	 Best Recall for 0.4 precision: 0.387
2024-11-05 09:22 - INFO - ---------------------------------------------
2024-11-05 09:24 - INFO - ---------------------------------------------
2024-11-05 09:24 - INFO - Epoch: 03 | Time: 1m 54s
2024-11-05 09:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05703
2024-11-05 09:24 - INFO - 	 Train Loss: 0.198
2024-11-05 09:24 - INFO - 	 Val. Loss: 0.243
2024-11-05 09:24 - INFO - 	 ROC-AUC: 0.573
2024-11-05 09:24 - INFO - 	 PR-AUC: 0.057
2024-11-05 09:24 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 09:24 - INFO - 	 Best Val. Loss: 0.243
2024-11-05 09:24 - INFO - 	 Best ROC-AUC: 0.573
2024-11-05 09:24 - INFO - 	 Best PR-AUC: 0.057
2024-11-05 09:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.540
2024-11-05 09:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.052
2024-11-05 09:24 - INFO - 	 Best Recall for 0.4 precision: 0.387
2024-11-05 09:24 - INFO - ---------------------------------------------
2024-11-05 09:25 - INFO - ---------------------------------------------
2024-11-05 09:25 - INFO - Epoch: 04 | Time: 1m 54s
2024-11-05 09:25 - INFO - 	 Train Loss: 0.192
2024-11-05 09:25 - INFO - 	 Val. Loss: 0.268
2024-11-05 09:25 - INFO - 	 ROC-AUC: 0.533
2024-11-05 09:25 - INFO - 	 PR-AUC: 0.049
2024-11-05 09:25 - INFO - 	 Recall for 0.4 precision: 0.112
2024-11-05 09:25 - INFO - 	 Best Val. Loss: 0.243
2024-11-05 09:25 - INFO - 	 Best ROC-AUC: 0.573
2024-11-05 09:25 - INFO - 	 Best PR-AUC: 0.057
2024-11-05 09:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.540
2024-11-05 09:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.052
2024-11-05 09:25 - INFO - 	 Best Recall for 0.4 precision: 0.387
2024-11-05 09:25 - INFO - ---------------------------------------------
2024-11-05 09:27 - INFO - ---------------------------------------------
2024-11-05 09:27 - INFO - Epoch: 05 | Time: 1m 55s
2024-11-05 09:27 - INFO - 	 Train Loss: 0.190
2024-11-05 09:27 - INFO - 	 Val. Loss: 0.245
2024-11-05 09:27 - INFO - 	 ROC-AUC: 0.531
2024-11-05 09:27 - INFO - 	 PR-AUC: 0.052
2024-11-05 09:27 - INFO - 	 Recall for 0.4 precision: 0.044
2024-11-05 09:27 - INFO - 	 Best Val. Loss: 0.243
2024-11-05 09:27 - INFO - 	 Best ROC-AUC: 0.573
2024-11-05 09:27 - INFO - 	 Best PR-AUC: 0.057
2024-11-05 09:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.540
2024-11-05 09:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.052
2024-11-05 09:27 - INFO - 	 Best Recall for 0.4 precision: 0.387
2024-11-05 09:27 - INFO - ---------------------------------------------
2024-11-05 09:29 - INFO - ---------------------------------------------
2024-11-05 09:29 - INFO - Epoch: 06 | Time: 1m 55s
2024-11-05 09:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.0694
2024-11-05 09:29 - INFO - 	 Train Loss: 0.186
2024-11-05 09:29 - INFO - 	 Val. Loss: 0.213
2024-11-05 09:29 - INFO - 	 ROC-AUC: 0.611
2024-11-05 09:29 - INFO - 	 PR-AUC: 0.069
2024-11-05 09:29 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 09:29 - INFO - 	 Best Val. Loss: 0.213
2024-11-05 09:29 - INFO - 	 Best ROC-AUC: 0.611
2024-11-05 09:29 - INFO - 	 Best PR-AUC: 0.069
2024-11-05 09:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.583
2024-11-05 09:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.062
2024-11-05 09:29 - INFO - 	 Best Recall for 0.4 precision: 0.387
2024-11-05 09:29 - INFO - ---------------------------------------------
2024-11-05 09:31 - INFO - ---------------------------------------------
2024-11-05 09:31 - INFO - Epoch: 07 | Time: 1m 55s
2024-11-05 09:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07639
2024-11-05 09:31 - INFO - 	 Train Loss: 0.183
2024-11-05 09:31 - INFO - 	 Val. Loss: 0.219
2024-11-05 09:31 - INFO - 	 ROC-AUC: 0.648
2024-11-05 09:31 - INFO - 	 PR-AUC: 0.076
2024-11-05 09:31 - INFO - 	 Recall for 0.4 precision: 0.021
2024-11-05 09:31 - INFO - 	 Best Val. Loss: 0.213
2024-11-05 09:31 - INFO - 	 Best ROC-AUC: 0.648
2024-11-05 09:31 - INFO - 	 Best PR-AUC: 0.076
2024-11-05 09:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.611
2024-11-05 09:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.081
2024-11-05 09:31 - INFO - 	 Best Recall for 0.4 precision: 0.387
2024-11-05 09:31 - INFO - ---------------------------------------------
2024-11-05 09:33 - INFO - ---------------------------------------------
2024-11-05 09:33 - INFO - Epoch: 08 | Time: 1m 55s
2024-11-05 09:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10342
2024-11-05 09:33 - INFO - 	 Train Loss: 0.181
2024-11-05 09:33 - INFO - 	 Val. Loss: 0.209
2024-11-05 09:33 - INFO - 	 ROC-AUC: 0.695
2024-11-05 09:33 - INFO - 	 PR-AUC: 0.103
2024-11-05 09:33 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-05 09:33 - INFO - 	 Best Val. Loss: 0.209
2024-11-05 09:33 - INFO - 	 Best ROC-AUC: 0.695
2024-11-05 09:33 - INFO - 	 Best PR-AUC: 0.103
2024-11-05 09:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.626
2024-11-05 09:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.088
2024-11-05 09:33 - INFO - 	 Best Recall for 0.4 precision: 0.387
2024-11-05 09:33 - INFO - ---------------------------------------------
2024-11-05 09:35 - INFO - ---------------------------------------------
2024-11-05 09:35 - INFO - Epoch: 09 | Time: 1m 55s
2024-11-05 09:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12639
2024-11-05 09:35 - INFO - 	 Train Loss: 0.180
2024-11-05 09:35 - INFO - 	 Val. Loss: 0.206
2024-11-05 09:35 - INFO - 	 ROC-AUC: 0.673
2024-11-05 09:35 - INFO - 	 PR-AUC: 0.126
2024-11-05 09:35 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-05 09:35 - INFO - 	 Best Val. Loss: 0.206
2024-11-05 09:35 - INFO - 	 Best ROC-AUC: 0.695
2024-11-05 09:35 - INFO - 	 Best PR-AUC: 0.126
2024-11-05 09:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.626
2024-11-05 09:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.073
2024-11-05 09:35 - INFO - 	 Best Recall for 0.4 precision: 0.387
2024-11-05 09:35 - INFO - ---------------------------------------------
2024-11-05 09:37 - INFO - ---------------------------------------------
2024-11-05 09:37 - INFO - Epoch: 10 | Time: 1m 59s
2024-11-05 09:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15531
2024-11-05 09:37 - INFO - 	 Train Loss: 0.177
2024-11-05 09:37 - INFO - 	 Val. Loss: 0.207
2024-11-05 09:37 - INFO - 	 ROC-AUC: 0.687
2024-11-05 09:37 - INFO - 	 PR-AUC: 0.155
2024-11-05 09:37 - INFO - 	 Recall for 0.4 precision: 0.078
2024-11-05 09:37 - INFO - 	 Best Val. Loss: 0.206
2024-11-05 09:37 - INFO - 	 Best ROC-AUC: 0.695
2024-11-05 09:37 - INFO - 	 Best PR-AUC: 0.155
2024-11-05 09:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.626
2024-11-05 09:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.081
2024-11-05 09:37 - INFO - 	 Best Recall for 0.4 precision: 0.387
2024-11-05 09:37 - INFO - ---------------------------------------------
2024-11-05 09:40 - INFO - Fit the preprocessing pipeline
2024-11-05 09:40 - INFO - Training using device: mps
2024-11-05 09:40 - INFO - Creating generators
2024-11-05 09:40 - INFO - The model has 651,257 trainable parameters
2024-11-05 09:40 - INFO - * Model:
2024-11-05 09:40 - INFO - * -----------
2024-11-05 09:40 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 09:40 - INFO - * -----------
2024-11-05 09:40 - INFO - Evaluating model based on: aucpr
2024-11-05 09:40 - INFO - Training..

2024-11-05 09:41 - INFO - ---------------------------------------------
2024-11-05 09:41 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-05 09:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06362
2024-11-05 09:41 - INFO - 	 Train Loss: 0.252
2024-11-05 09:41 - INFO - 	 Val. Loss: 0.281
2024-11-05 09:41 - INFO - 	 ROC-AUC: 0.545
2024-11-05 09:41 - INFO - 	 PR-AUC: 0.064
2024-11-05 09:41 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-05 09:41 - INFO - 	 Best Val. Loss: 0.281
2024-11-05 09:41 - INFO - 	 Best ROC-AUC: 0.545
2024-11-05 09:41 - INFO - 	 Best PR-AUC: 0.064
2024-11-05 09:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.565
2024-11-05 09:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 09:41 - INFO - 	 Best Recall for 0.4 precision: 0.013
2024-11-05 09:41 - INFO - ---------------------------------------------
2024-11-05 09:43 - INFO - ---------------------------------------------
2024-11-05 09:43 - INFO - Epoch: 02 | Time: 1m 53s
2024-11-05 09:43 - INFO - 	 Train Loss: 0.204
2024-11-05 09:43 - INFO - 	 Val. Loss: 0.259
2024-11-05 09:43 - INFO - 	 ROC-AUC: 0.525
2024-11-05 09:43 - INFO - 	 PR-AUC: 0.050
2024-11-05 09:43 - INFO - 	 Recall for 0.4 precision: 0.029
2024-11-05 09:43 - INFO - 	 Best Val. Loss: 0.259
2024-11-05 09:43 - INFO - 	 Best ROC-AUC: 0.545
2024-11-05 09:43 - INFO - 	 Best PR-AUC: 0.064
2024-11-05 09:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.565
2024-11-05 09:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 09:43 - INFO - 	 Best Recall for 0.4 precision: 0.029
2024-11-05 09:43 - INFO - ---------------------------------------------
2024-11-05 09:45 - INFO - ---------------------------------------------
2024-11-05 09:45 - INFO - Epoch: 03 | Time: 1m 55s
2024-11-05 09:45 - INFO - 	 Train Loss: 0.200
2024-11-05 09:45 - INFO - 	 Val. Loss: 0.244
2024-11-05 09:45 - INFO - 	 ROC-AUC: 0.574
2024-11-05 09:45 - INFO - 	 PR-AUC: 0.055
2024-11-05 09:45 - INFO - 	 Recall for 0.4 precision: 0.059
2024-11-05 09:45 - INFO - 	 Best Val. Loss: 0.244
2024-11-05 09:45 - INFO - 	 Best ROC-AUC: 0.574
2024-11-05 09:45 - INFO - 	 Best PR-AUC: 0.064
2024-11-05 09:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.542
2024-11-05 09:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 09:45 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 09:45 - INFO - ---------------------------------------------
2024-11-05 09:47 - INFO - ---------------------------------------------
2024-11-05 09:47 - INFO - Epoch: 04 | Time: 1m 56s
2024-11-05 09:47 - INFO - 	 Train Loss: 0.193
2024-11-05 09:47 - INFO - 	 Val. Loss: 0.240
2024-11-05 09:47 - INFO - 	 ROC-AUC: 0.510
2024-11-05 09:47 - INFO - 	 PR-AUC: 0.048
2024-11-05 09:47 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 09:47 - INFO - 	 Best Val. Loss: 0.240
2024-11-05 09:47 - INFO - 	 Best ROC-AUC: 0.574
2024-11-05 09:47 - INFO - 	 Best PR-AUC: 0.064
2024-11-05 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.542
2024-11-05 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 09:47 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 09:47 - INFO - ---------------------------------------------
2024-11-05 09:52 - INFO - Fit the preprocessing pipeline
2024-11-05 09:52 - INFO - Training using device: mps
2024-11-05 09:52 - INFO - Creating generators
2024-11-05 09:52 - INFO - The model has 651,257 trainable parameters
2024-11-05 09:52 - INFO - * Model:
2024-11-05 09:52 - INFO - * -----------
2024-11-05 09:52 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 09:52 - INFO - * -----------
2024-11-05 09:52 - INFO - Evaluating model based on: aucpr
2024-11-05 09:52 - INFO - Training..

2024-11-05 09:54 - INFO - ---------------------------------------------
2024-11-05 09:54 - INFO - Epoch: 01 | Time: 1m 43s
2024-11-05 09:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06203
2024-11-05 09:54 - INFO - 	 Train Loss: 0.245
2024-11-05 09:54 - INFO - 	 Val. Loss: 0.277
2024-11-05 09:54 - INFO - 	 ROC-AUC: 0.559
2024-11-05 09:54 - INFO - 	 PR-AUC: 0.062
2024-11-05 09:54 - INFO - 	 Recall for 0.4 precision: 0.020
2024-11-05 09:54 - INFO - 	 Best Val. Loss: 0.277
2024-11-05 09:54 - INFO - 	 Best ROC-AUC: 0.559
2024-11-05 09:54 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 09:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.532
2024-11-05 09:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.053
2024-11-05 09:54 - INFO - 	 Best Recall for 0.4 precision: 0.020
2024-11-05 09:54 - INFO - ---------------------------------------------
2024-11-05 09:56 - INFO - ---------------------------------------------
2024-11-05 09:56 - INFO - Epoch: 02 | Time: 1m 52s
2024-11-05 09:56 - INFO - 	 Train Loss: 0.217
2024-11-05 09:56 - INFO - 	 Val. Loss: 0.275
2024-11-05 09:56 - INFO - 	 ROC-AUC: 0.536
2024-11-05 09:56 - INFO - 	 PR-AUC: 0.052
2024-11-05 09:56 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 09:56 - INFO - 	 Best Val. Loss: 0.275
2024-11-05 09:56 - INFO - 	 Best ROC-AUC: 0.559
2024-11-05 09:56 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 09:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.532
2024-11-05 09:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.053
2024-11-05 09:56 - INFO - 	 Best Recall for 0.4 precision: 0.020
2024-11-05 09:56 - INFO - ---------------------------------------------
2024-11-05 09:57 - INFO - ---------------------------------------------
2024-11-05 09:57 - INFO - Epoch: 03 | Time: 1m 53s
2024-11-05 09:57 - INFO - 	 Train Loss: 0.201
2024-11-05 09:57 - INFO - 	 Val. Loss: 0.257
2024-11-05 09:57 - INFO - 	 ROC-AUC: 0.564
2024-11-05 09:57 - INFO - 	 PR-AUC: 0.056
2024-11-05 09:57 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 09:57 - INFO - 	 Best Val. Loss: 0.257
2024-11-05 09:57 - INFO - 	 Best ROC-AUC: 0.564
2024-11-05 09:57 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 09:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.545
2024-11-05 09:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.053
2024-11-05 09:57 - INFO - 	 Best Recall for 0.4 precision: 0.020
2024-11-05 09:57 - INFO - ---------------------------------------------
2024-11-05 09:59 - INFO - ---------------------------------------------
2024-11-05 09:59 - INFO - Epoch: 04 | Time: 1m 55s
2024-11-05 09:59 - INFO - 	 Train Loss: 0.198
2024-11-05 09:59 - INFO - 	 Val. Loss: 0.251
2024-11-05 09:59 - INFO - 	 ROC-AUC: 0.550
2024-11-05 09:59 - INFO - 	 PR-AUC: 0.053
2024-11-05 09:59 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-05 09:59 - INFO - 	 Best Val. Loss: 0.251
2024-11-05 09:59 - INFO - 	 Best ROC-AUC: 0.564
2024-11-05 09:59 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 09:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.545
2024-11-05 09:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.053
2024-11-05 09:59 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-05 09:59 - INFO - ---------------------------------------------
2024-11-05 10:04 - INFO - Fit the preprocessing pipeline
2024-11-05 10:04 - INFO - Training using device: mps
2024-11-05 10:04 - INFO - Creating generators
2024-11-05 10:04 - INFO - The model has 651,257 trainable parameters
2024-11-05 10:04 - INFO - * Model:
2024-11-05 10:04 - INFO - * -----------
2024-11-05 10:04 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 10:04 - INFO - * -----------
2024-11-05 10:04 - INFO - Evaluating model based on: aucpr
2024-11-05 10:04 - INFO - Training..

2024-11-05 10:06 - INFO - ---------------------------------------------
2024-11-05 10:06 - INFO - Epoch: 01 | Time: 1m 47s
2024-11-05 10:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.04446
2024-11-05 10:06 - INFO - 	 Train Loss: 0.251
2024-11-05 10:06 - INFO - 	 Val. Loss: 0.316
2024-11-05 10:06 - INFO - 	 ROC-AUC: 0.509
2024-11-05 10:06 - INFO - 	 PR-AUC: 0.044
2024-11-05 10:06 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 10:06 - INFO - 	 Best Val. Loss: 0.316
2024-11-05 10:06 - INFO - 	 Best ROC-AUC: 0.509
2024-11-05 10:06 - INFO - 	 Best PR-AUC: 0.044
2024-11-05 10:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.516
2024-11-05 10:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.049
2024-11-05 10:06 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-05 10:06 - INFO - ---------------------------------------------
2024-11-05 10:08 - INFO - ---------------------------------------------
2024-11-05 10:08 - INFO - Epoch: 02 | Time: 1m 56s
2024-11-05 10:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.04816
2024-11-05 10:08 - INFO - 	 Train Loss: 0.214
2024-11-05 10:08 - INFO - 	 Val. Loss: 0.278
2024-11-05 10:08 - INFO - 	 ROC-AUC: 0.528
2024-11-05 10:08 - INFO - 	 PR-AUC: 0.048
2024-11-05 10:08 - INFO - 	 Recall for 0.4 precision: 0.207
2024-11-05 10:08 - INFO - 	 Best Val. Loss: 0.278
2024-11-05 10:08 - INFO - 	 Best ROC-AUC: 0.528
2024-11-05 10:08 - INFO - 	 Best PR-AUC: 0.048
2024-11-05 10:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.517
2024-11-05 10:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.049
2024-11-05 10:08 - INFO - 	 Best Recall for 0.4 precision: 0.207
2024-11-05 10:08 - INFO - ---------------------------------------------
2024-11-05 10:10 - INFO - ---------------------------------------------
2024-11-05 10:10 - INFO - Epoch: 03 | Time: 1m 57s
2024-11-05 10:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.0549
2024-11-05 10:10 - INFO - 	 Train Loss: 0.202
2024-11-05 10:10 - INFO - 	 Val. Loss: 0.265
2024-11-05 10:10 - INFO - 	 ROC-AUC: 0.570
2024-11-05 10:10 - INFO - 	 PR-AUC: 0.055
2024-11-05 10:10 - INFO - 	 Recall for 0.4 precision: 0.024
2024-11-05 10:10 - INFO - 	 Best Val. Loss: 0.265
2024-11-05 10:10 - INFO - 	 Best ROC-AUC: 0.570
2024-11-05 10:10 - INFO - 	 Best PR-AUC: 0.055
2024-11-05 10:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.567
2024-11-05 10:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.056
2024-11-05 10:10 - INFO - 	 Best Recall for 0.4 precision: 0.207
2024-11-05 10:10 - INFO - ---------------------------------------------
2024-11-05 10:12 - INFO - ---------------------------------------------
2024-11-05 10:12 - INFO - Epoch: 04 | Time: 1m 59s
2024-11-05 10:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06117
2024-11-05 10:12 - INFO - 	 Train Loss: 0.196
2024-11-05 10:12 - INFO - 	 Val. Loss: 0.255
2024-11-05 10:12 - INFO - 	 ROC-AUC: 0.591
2024-11-05 10:12 - INFO - 	 PR-AUC: 0.061
2024-11-05 10:12 - INFO - 	 Recall for 0.4 precision: 0.008
2024-11-05 10:12 - INFO - 	 Best Val. Loss: 0.255
2024-11-05 10:12 - INFO - 	 Best ROC-AUC: 0.591
2024-11-05 10:12 - INFO - 	 Best PR-AUC: 0.061
2024-11-05 10:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.565
2024-11-05 10:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 10:12 - INFO - 	 Best Recall for 0.4 precision: 0.207
2024-11-05 10:12 - INFO - ---------------------------------------------
2024-11-05 10:14 - INFO - ---------------------------------------------
2024-11-05 10:14 - INFO - Epoch: 05 | Time: 2m 0s
2024-11-05 10:14 - INFO - 	 Train Loss: 0.193
2024-11-05 10:14 - INFO - 	 Val. Loss: 0.233
2024-11-05 10:14 - INFO - 	 ROC-AUC: 0.585
2024-11-05 10:14 - INFO - 	 PR-AUC: 0.059
2024-11-05 10:14 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-05 10:14 - INFO - 	 Best Val. Loss: 0.233
2024-11-05 10:14 - INFO - 	 Best ROC-AUC: 0.591
2024-11-05 10:14 - INFO - 	 Best PR-AUC: 0.061
2024-11-05 10:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.565
2024-11-05 10:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 10:14 - INFO - 	 Best Recall for 0.4 precision: 0.207
2024-11-05 10:14 - INFO - ---------------------------------------------
2024-11-05 10:16 - INFO - ---------------------------------------------
2024-11-05 10:16 - INFO - Epoch: 06 | Time: 2m 0s
2024-11-05 10:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07486
2024-11-05 10:16 - INFO - 	 Train Loss: 0.189
2024-11-05 10:16 - INFO - 	 Val. Loss: 0.225
2024-11-05 10:16 - INFO - 	 ROC-AUC: 0.622
2024-11-05 10:16 - INFO - 	 PR-AUC: 0.075
2024-11-05 10:16 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 10:16 - INFO - 	 Best Val. Loss: 0.225
2024-11-05 10:16 - INFO - 	 Best ROC-AUC: 0.622
2024-11-05 10:16 - INFO - 	 Best PR-AUC: 0.075
2024-11-05 10:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.576
2024-11-05 10:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.065
2024-11-05 10:16 - INFO - 	 Best Recall for 0.4 precision: 0.207
2024-11-05 10:16 - INFO - ---------------------------------------------
2024-11-05 10:18 - INFO - ---------------------------------------------
2024-11-05 10:18 - INFO - Epoch: 07 | Time: 1m 59s
2024-11-05 10:18 - INFO - 	 Train Loss: 0.187
2024-11-05 10:18 - INFO - 	 Val. Loss: 0.228
2024-11-05 10:18 - INFO - 	 ROC-AUC: 0.631
2024-11-05 10:18 - INFO - 	 PR-AUC: 0.074
2024-11-05 10:18 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-05 10:18 - INFO - 	 Best Val. Loss: 0.225
2024-11-05 10:18 - INFO - 	 Best ROC-AUC: 0.631
2024-11-05 10:18 - INFO - 	 Best PR-AUC: 0.075
2024-11-05 10:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.600
2024-11-05 10:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.065
2024-11-05 10:18 - INFO - 	 Best Recall for 0.4 precision: 0.207
2024-11-05 10:18 - INFO - ---------------------------------------------
2024-11-05 10:20 - INFO - ---------------------------------------------
2024-11-05 10:20 - INFO - Epoch: 08 | Time: 1m 58s
2024-11-05 10:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.0774
2024-11-05 10:20 - INFO - 	 Train Loss: 0.185
2024-11-05 10:20 - INFO - 	 Val. Loss: 0.230
2024-11-05 10:20 - INFO - 	 ROC-AUC: 0.639
2024-11-05 10:20 - INFO - 	 PR-AUC: 0.077
2024-11-05 10:20 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-05 10:20 - INFO - 	 Best Val. Loss: 0.225
2024-11-05 10:20 - INFO - 	 Best ROC-AUC: 0.639
2024-11-05 10:20 - INFO - 	 Best PR-AUC: 0.077
2024-11-05 10:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.585
2024-11-05 10:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.063
2024-11-05 10:20 - INFO - 	 Best Recall for 0.4 precision: 0.207
2024-11-05 10:20 - INFO - ---------------------------------------------
2024-11-05 10:22 - INFO - ---------------------------------------------
2024-11-05 10:22 - INFO - Epoch: 09 | Time: 1m 58s
2024-11-05 10:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09194
2024-11-05 10:22 - INFO - 	 Train Loss: 0.182
2024-11-05 10:22 - INFO - 	 Val. Loss: 0.215
2024-11-05 10:22 - INFO - 	 ROC-AUC: 0.611
2024-11-05 10:22 - INFO - 	 PR-AUC: 0.092
2024-11-05 10:22 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-05 10:22 - INFO - 	 Best Val. Loss: 0.215
2024-11-05 10:22 - INFO - 	 Best ROC-AUC: 0.639
2024-11-05 10:22 - INFO - 	 Best PR-AUC: 0.092
2024-11-05 10:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.585
2024-11-05 10:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.055
2024-11-05 10:22 - INFO - 	 Best Recall for 0.4 precision: 0.207
2024-11-05 10:22 - INFO - ---------------------------------------------
2024-11-05 10:24 - INFO - ---------------------------------------------
2024-11-05 10:24 - INFO - Epoch: 10 | Time: 1m 58s
2024-11-05 10:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13442
2024-11-05 10:24 - INFO - 	 Train Loss: 0.178
2024-11-05 10:24 - INFO - 	 Val. Loss: 0.201
2024-11-05 10:24 - INFO - 	 ROC-AUC: 0.682
2024-11-05 10:24 - INFO - 	 PR-AUC: 0.134
2024-11-05 10:24 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-05 10:24 - INFO - 	 Best Val. Loss: 0.201
2024-11-05 10:24 - INFO - 	 Best ROC-AUC: 0.682
2024-11-05 10:24 - INFO - 	 Best PR-AUC: 0.134
2024-11-05 10:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.645
2024-11-05 10:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.095
2024-11-05 10:24 - INFO - 	 Best Recall for 0.4 precision: 0.207
2024-11-05 10:24 - INFO - ---------------------------------------------
2024-11-05 10:26 - INFO - Fit the preprocessing pipeline
2024-11-05 10:26 - INFO - Training using device: mps
2024-11-05 10:26 - INFO - Creating generators
2024-11-05 10:26 - INFO - The model has 651,257 trainable parameters
2024-11-05 10:26 - INFO - * Model:
2024-11-05 10:26 - INFO - * -----------
2024-11-05 10:26 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 10:26 - INFO - * -----------
2024-11-05 10:26 - INFO - Evaluating model based on: aucpr
2024-11-05 10:26 - INFO - Training..

2024-11-05 10:28 - INFO - ---------------------------------------------
2024-11-05 10:28 - INFO - Epoch: 01 | Time: 1m 44s
2024-11-05 10:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05176
2024-11-05 10:28 - INFO - 	 Train Loss: 0.256
2024-11-05 10:28 - INFO - 	 Val. Loss: 0.317
2024-11-05 10:28 - INFO - 	 ROC-AUC: 0.552
2024-11-05 10:28 - INFO - 	 PR-AUC: 0.052
2024-11-05 10:28 - INFO - 	 Recall for 0.4 precision: 0.016
2024-11-05 10:28 - INFO - 	 Best Val. Loss: 0.317
2024-11-05 10:28 - INFO - 	 Best ROC-AUC: 0.552
2024-11-05 10:28 - INFO - 	 Best PR-AUC: 0.052
2024-11-05 10:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.562
2024-11-05 10:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.058
2024-11-05 10:28 - INFO - 	 Best Recall for 0.4 precision: 0.016
2024-11-05 10:28 - INFO - ---------------------------------------------
2024-11-05 10:30 - INFO - ---------------------------------------------
2024-11-05 10:30 - INFO - Epoch: 02 | Time: 1m 55s
2024-11-05 10:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06125
2024-11-05 10:30 - INFO - 	 Train Loss: 0.211
2024-11-05 10:30 - INFO - 	 Val. Loss: 0.260
2024-11-05 10:30 - INFO - 	 ROC-AUC: 0.576
2024-11-05 10:30 - INFO - 	 PR-AUC: 0.061
2024-11-05 10:30 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 10:30 - INFO - 	 Best Val. Loss: 0.260
2024-11-05 10:30 - INFO - 	 Best ROC-AUC: 0.576
2024-11-05 10:30 - INFO - 	 Best PR-AUC: 0.061
2024-11-05 10:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.560
2024-11-05 10:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.055
2024-11-05 10:30 - INFO - 	 Best Recall for 0.4 precision: 0.016
2024-11-05 10:30 - INFO - ---------------------------------------------
2024-11-05 10:32 - INFO - ---------------------------------------------
2024-11-05 10:32 - INFO - Epoch: 03 | Time: 1m 59s
2024-11-05 10:32 - INFO - 	 Train Loss: 0.203
2024-11-05 10:32 - INFO - 	 Val. Loss: 0.260
2024-11-05 10:32 - INFO - 	 ROC-AUC: 0.574
2024-11-05 10:32 - INFO - 	 PR-AUC: 0.057
2024-11-05 10:32 - INFO - 	 Recall for 0.4 precision: 0.132
2024-11-05 10:32 - INFO - 	 Best Val. Loss: 0.260
2024-11-05 10:32 - INFO - 	 Best ROC-AUC: 0.576
2024-11-05 10:32 - INFO - 	 Best PR-AUC: 0.061
2024-11-05 10:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.560
2024-11-05 10:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.055
2024-11-05 10:32 - INFO - 	 Best Recall for 0.4 precision: 0.132
2024-11-05 10:32 - INFO - ---------------------------------------------
2024-11-05 10:34 - INFO - ---------------------------------------------
2024-11-05 10:34 - INFO - Epoch: 04 | Time: 2m 0s
2024-11-05 10:34 - INFO - 	 Train Loss: 0.196
2024-11-05 10:34 - INFO - 	 Val. Loss: 0.249
2024-11-05 10:34 - INFO - 	 ROC-AUC: 0.556
2024-11-05 10:34 - INFO - 	 PR-AUC: 0.055
2024-11-05 10:34 - INFO - 	 Recall for 0.4 precision: 0.016
2024-11-05 10:34 - INFO - 	 Best Val. Loss: 0.249
2024-11-05 10:34 - INFO - 	 Best ROC-AUC: 0.576
2024-11-05 10:34 - INFO - 	 Best PR-AUC: 0.061
2024-11-05 10:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.560
2024-11-05 10:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.055
2024-11-05 10:34 - INFO - 	 Best Recall for 0.4 precision: 0.132
2024-11-05 10:34 - INFO - ---------------------------------------------
2024-11-05 10:36 - INFO - ---------------------------------------------
2024-11-05 10:36 - INFO - Epoch: 05 | Time: 2m 0s
2024-11-05 10:36 - INFO - 	 Train Loss: 0.193
2024-11-05 10:36 - INFO - 	 Val. Loss: 0.237
2024-11-05 10:36 - INFO - 	 ROC-AUC: 0.563
2024-11-05 10:36 - INFO - 	 PR-AUC: 0.054
2024-11-05 10:36 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 10:36 - INFO - 	 Best Val. Loss: 0.237
2024-11-05 10:36 - INFO - 	 Best ROC-AUC: 0.576
2024-11-05 10:36 - INFO - 	 Best PR-AUC: 0.061
2024-11-05 10:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.560
2024-11-05 10:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.055
2024-11-05 10:36 - INFO - 	 Best Recall for 0.4 precision: 0.132
2024-11-05 10:36 - INFO - ---------------------------------------------
2024-11-05 10:41 - INFO - Fit the preprocessing pipeline
2024-11-05 10:41 - INFO - Training using device: mps
2024-11-05 10:41 - INFO - Creating generators
2024-11-05 10:41 - INFO - The model has 651,257 trainable parameters
2024-11-05 10:41 - INFO - * Model:
2024-11-05 10:41 - INFO - * -----------
2024-11-05 10:41 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 10:41 - INFO - * -----------
2024-11-05 10:41 - INFO - Evaluating model based on: aucpr
2024-11-05 10:41 - INFO - Training..

2024-11-05 10:42 - INFO - ---------------------------------------------
2024-11-05 10:42 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-05 10:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.04973
2024-11-05 10:42 - INFO - 	 Train Loss: 0.251
2024-11-05 10:42 - INFO - 	 Val. Loss: 0.318
2024-11-05 10:42 - INFO - 	 ROC-AUC: 0.512
2024-11-05 10:42 - INFO - 	 PR-AUC: 0.050
2024-11-05 10:42 - INFO - 	 Recall for 0.4 precision: 0.059
2024-11-05 10:42 - INFO - 	 Best Val. Loss: 0.318
2024-11-05 10:42 - INFO - 	 Best ROC-AUC: 0.512
2024-11-05 10:42 - INFO - 	 Best PR-AUC: 0.050
2024-11-05 10:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.479
2024-11-05 10:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.046
2024-11-05 10:42 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 10:42 - INFO - ---------------------------------------------
2024-11-05 10:44 - INFO - ---------------------------------------------
2024-11-05 10:44 - INFO - Epoch: 02 | Time: 1m 50s
2024-11-05 10:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05385
2024-11-05 10:44 - INFO - 	 Train Loss: 0.207
2024-11-05 10:44 - INFO - 	 Val. Loss: 0.251
2024-11-05 10:44 - INFO - 	 ROC-AUC: 0.558
2024-11-05 10:44 - INFO - 	 PR-AUC: 0.054
2024-11-05 10:44 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 10:44 - INFO - 	 Best Val. Loss: 0.251
2024-11-05 10:44 - INFO - 	 Best ROC-AUC: 0.558
2024-11-05 10:44 - INFO - 	 Best PR-AUC: 0.054
2024-11-05 10:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.541
2024-11-05 10:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.053
2024-11-05 10:44 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 10:44 - INFO - ---------------------------------------------
2024-11-05 10:46 - INFO - ---------------------------------------------
2024-11-05 10:46 - INFO - Epoch: 03 | Time: 1m 52s
2024-11-05 10:46 - INFO - 	 Train Loss: 0.193
2024-11-05 10:46 - INFO - 	 Val. Loss: 0.255
2024-11-05 10:46 - INFO - 	 ROC-AUC: 0.516
2024-11-05 10:46 - INFO - 	 PR-AUC: 0.048
2024-11-05 10:46 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 10:46 - INFO - 	 Best Val. Loss: 0.251
2024-11-05 10:46 - INFO - 	 Best ROC-AUC: 0.558
2024-11-05 10:46 - INFO - 	 Best PR-AUC: 0.054
2024-11-05 10:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.541
2024-11-05 10:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.053
2024-11-05 10:46 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 10:46 - INFO - ---------------------------------------------
2024-11-05 10:48 - INFO - ---------------------------------------------
2024-11-05 10:48 - INFO - Epoch: 04 | Time: 1m 54s
2024-11-05 10:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05789
2024-11-05 10:48 - INFO - 	 Train Loss: 0.194
2024-11-05 10:48 - INFO - 	 Val. Loss: 0.227
2024-11-05 10:48 - INFO - 	 ROC-AUC: 0.579
2024-11-05 10:48 - INFO - 	 PR-AUC: 0.058
2024-11-05 10:48 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-05 10:48 - INFO - 	 Best Val. Loss: 0.227
2024-11-05 10:48 - INFO - 	 Best ROC-AUC: 0.579
2024-11-05 10:48 - INFO - 	 Best PR-AUC: 0.058
2024-11-05 10:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.586
2024-11-05 10:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.064
2024-11-05 10:48 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 10:48 - INFO - ---------------------------------------------
2024-11-05 10:50 - INFO - ---------------------------------------------
2024-11-05 10:50 - INFO - Epoch: 05 | Time: 1m 54s
2024-11-05 10:50 - INFO - 	 Train Loss: 0.186
2024-11-05 10:50 - INFO - 	 Val. Loss: 0.231
2024-11-05 10:50 - INFO - 	 ROC-AUC: 0.572
2024-11-05 10:50 - INFO - 	 PR-AUC: 0.057
2024-11-05 10:50 - INFO - 	 Recall for 0.4 precision: 0.023
2024-11-05 10:50 - INFO - 	 Best Val. Loss: 0.227
2024-11-05 10:50 - INFO - 	 Best ROC-AUC: 0.579
2024-11-05 10:50 - INFO - 	 Best PR-AUC: 0.058
2024-11-05 10:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.586
2024-11-05 10:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.064
2024-11-05 10:50 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 10:50 - INFO - ---------------------------------------------
2024-11-05 10:52 - INFO - ---------------------------------------------
2024-11-05 10:52 - INFO - Epoch: 06 | Time: 1m 55s
2024-11-05 10:52 - INFO - 	 Train Loss: 0.187
2024-11-05 10:52 - INFO - 	 Val. Loss: 0.243
2024-11-05 10:52 - INFO - 	 ROC-AUC: 0.572
2024-11-05 10:52 - INFO - 	 PR-AUC: 0.056
2024-11-05 10:52 - INFO - 	 Recall for 0.4 precision: 0.046
2024-11-05 10:52 - INFO - 	 Best Val. Loss: 0.227
2024-11-05 10:52 - INFO - 	 Best ROC-AUC: 0.579
2024-11-05 10:52 - INFO - 	 Best PR-AUC: 0.058
2024-11-05 10:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.586
2024-11-05 10:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.064
2024-11-05 10:52 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 10:52 - INFO - ---------------------------------------------
2024-11-05 10:54 - INFO - ---------------------------------------------
2024-11-05 10:54 - INFO - Epoch: 07 | Time: 1m 55s
2024-11-05 10:54 - INFO - 	 Train Loss: 0.187
2024-11-05 10:54 - INFO - 	 Val. Loss: 0.220
2024-11-05 10:54 - INFO - 	 ROC-AUC: 0.568
2024-11-05 10:54 - INFO - 	 PR-AUC: 0.055
2024-11-05 10:54 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 10:54 - INFO - 	 Best Val. Loss: 0.220
2024-11-05 10:54 - INFO - 	 Best ROC-AUC: 0.579
2024-11-05 10:54 - INFO - 	 Best PR-AUC: 0.058
2024-11-05 10:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.586
2024-11-05 10:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.064
2024-11-05 10:54 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 10:54 - INFO - ---------------------------------------------
2024-11-05 10:56 - INFO - ---------------------------------------------
2024-11-05 10:56 - INFO - Epoch: 08 | Time: 1m 55s
2024-11-05 10:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06819
2024-11-05 10:56 - INFO - 	 Train Loss: 0.184
2024-11-05 10:56 - INFO - 	 Val. Loss: 0.218
2024-11-05 10:56 - INFO - 	 ROC-AUC: 0.614
2024-11-05 10:56 - INFO - 	 PR-AUC: 0.068
2024-11-05 10:56 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 10:56 - INFO - 	 Best Val. Loss: 0.218
2024-11-05 10:56 - INFO - 	 Best ROC-AUC: 0.614
2024-11-05 10:56 - INFO - 	 Best PR-AUC: 0.068
2024-11-05 10:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.600
2024-11-05 10:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 10:56 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 10:56 - INFO - ---------------------------------------------
2024-11-05 10:58 - INFO - ---------------------------------------------
2024-11-05 10:58 - INFO - Epoch: 09 | Time: 1m 55s
2024-11-05 10:58 - INFO - 	 Train Loss: 0.182
2024-11-05 10:58 - INFO - 	 Val. Loss: 0.211
2024-11-05 10:58 - INFO - 	 ROC-AUC: 0.605
2024-11-05 10:58 - INFO - 	 PR-AUC: 0.066
2024-11-05 10:58 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 10:58 - INFO - 	 Best Val. Loss: 0.211
2024-11-05 10:58 - INFO - 	 Best ROC-AUC: 0.614
2024-11-05 10:58 - INFO - 	 Best PR-AUC: 0.068
2024-11-05 10:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.600
2024-11-05 10:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 10:58 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-05 10:58 - INFO - ---------------------------------------------
2024-11-05 11:00 - INFO - ---------------------------------------------
2024-11-05 11:00 - INFO - Epoch: 10 | Time: 1m 55s
2024-11-05 11:00 - INFO - 	 Train Loss: 0.184
2024-11-05 11:00 - INFO - 	 Val. Loss: 0.215
2024-11-05 11:00 - INFO - 	 ROC-AUC: 0.564
2024-11-05 11:00 - INFO - 	 PR-AUC: 0.055
2024-11-05 11:00 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-05 11:00 - INFO - 	 Best Val. Loss: 0.211
2024-11-05 11:00 - INFO - 	 Best ROC-AUC: 0.614
2024-11-05 11:00 - INFO - 	 Best PR-AUC: 0.068
2024-11-05 11:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.600
2024-11-05 11:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 11:00 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-05 11:00 - INFO - ---------------------------------------------
2024-11-05 11:02 - INFO - Fit the preprocessing pipeline
2024-11-05 11:02 - INFO - Training using device: mps
2024-11-05 11:02 - INFO - Creating generators
2024-11-05 11:02 - INFO - The model has 651,257 trainable parameters
2024-11-05 11:02 - INFO - * Model:
2024-11-05 11:02 - INFO - * -----------
2024-11-05 11:02 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 11:02 - INFO - * -----------
2024-11-05 11:02 - INFO - Evaluating model based on: aucpr
2024-11-05 11:02 - INFO - Training..

2024-11-05 11:04 - INFO - ---------------------------------------------
2024-11-05 11:04 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-05 11:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05907
2024-11-05 11:04 - INFO - 	 Train Loss: 0.247
2024-11-05 11:04 - INFO - 	 Val. Loss: 0.286
2024-11-05 11:04 - INFO - 	 ROC-AUC: 0.561
2024-11-05 11:04 - INFO - 	 PR-AUC: 0.059
2024-11-05 11:04 - INFO - 	 Recall for 0.4 precision: 0.050
2024-11-05 11:04 - INFO - 	 Best Val. Loss: 0.286
2024-11-05 11:04 - INFO - 	 Best ROC-AUC: 0.561
2024-11-05 11:04 - INFO - 	 Best PR-AUC: 0.059
2024-11-05 11:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.564
2024-11-05 11:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 11:04 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-05 11:04 - INFO - ---------------------------------------------
2024-11-05 11:06 - INFO - ---------------------------------------------
2024-11-05 11:06 - INFO - Epoch: 02 | Time: 1m 51s
2024-11-05 11:06 - INFO - 	 Train Loss: 0.207
2024-11-05 11:06 - INFO - 	 Val. Loss: 0.267
2024-11-05 11:06 - INFO - 	 ROC-AUC: 0.575
2024-11-05 11:06 - INFO - 	 PR-AUC: 0.055
2024-11-05 11:06 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 11:06 - INFO - 	 Best Val. Loss: 0.267
2024-11-05 11:06 - INFO - 	 Best ROC-AUC: 0.575
2024-11-05 11:06 - INFO - 	 Best PR-AUC: 0.059
2024-11-05 11:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.552
2024-11-05 11:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 11:06 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-05 11:06 - INFO - ---------------------------------------------
2024-11-05 11:08 - INFO - ---------------------------------------------
2024-11-05 11:08 - INFO - Epoch: 03 | Time: 1m 53s
2024-11-05 11:08 - INFO - 	 Train Loss: 0.204
2024-11-05 11:08 - INFO - 	 Val. Loss: 0.262
2024-11-05 11:08 - INFO - 	 ROC-AUC: 0.553
2024-11-05 11:08 - INFO - 	 PR-AUC: 0.054
2024-11-05 11:08 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 11:08 - INFO - 	 Best Val. Loss: 0.262
2024-11-05 11:08 - INFO - 	 Best ROC-AUC: 0.575
2024-11-05 11:08 - INFO - 	 Best PR-AUC: 0.059
2024-11-05 11:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.552
2024-11-05 11:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 11:08 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-05 11:08 - INFO - ---------------------------------------------
2024-11-05 11:10 - INFO - ---------------------------------------------
2024-11-05 11:10 - INFO - Epoch: 04 | Time: 1m 53s
2024-11-05 11:10 - INFO - 	 Train Loss: 0.200
2024-11-05 11:10 - INFO - 	 Val. Loss: 0.253
2024-11-05 11:10 - INFO - 	 ROC-AUC: 0.538
2024-11-05 11:10 - INFO - 	 PR-AUC: 0.049
2024-11-05 11:10 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-05 11:10 - INFO - 	 Best Val. Loss: 0.253
2024-11-05 11:10 - INFO - 	 Best ROC-AUC: 0.575
2024-11-05 11:10 - INFO - 	 Best PR-AUC: 0.059
2024-11-05 11:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.552
2024-11-05 11:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 11:10 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-05 11:10 - INFO - ---------------------------------------------
2024-11-05 11:12 - INFO - ---------------------------------------------
2024-11-05 11:12 - INFO - Epoch: 05 | Time: 1m 56s
2024-11-05 11:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06174
2024-11-05 11:12 - INFO - 	 Train Loss: 0.195
2024-11-05 11:12 - INFO - 	 Val. Loss: 0.243
2024-11-05 11:12 - INFO - 	 ROC-AUC: 0.570
2024-11-05 11:12 - INFO - 	 PR-AUC: 0.062
2024-11-05 11:12 - INFO - 	 Recall for 0.4 precision: 0.008
2024-11-05 11:12 - INFO - 	 Best Val. Loss: 0.243
2024-11-05 11:12 - INFO - 	 Best ROC-AUC: 0.575
2024-11-05 11:12 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 11:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.552
2024-11-05 11:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 11:12 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-05 11:12 - INFO - ---------------------------------------------
2024-11-05 11:13 - INFO - ---------------------------------------------
2024-11-05 11:13 - INFO - Epoch: 06 | Time: 1m 56s
2024-11-05 11:13 - INFO - 	 Train Loss: 0.189
2024-11-05 11:13 - INFO - 	 Val. Loss: 0.243
2024-11-05 11:13 - INFO - 	 ROC-AUC: 0.563
2024-11-05 11:13 - INFO - 	 PR-AUC: 0.060
2024-11-05 11:13 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-05 11:13 - INFO - 	 Best Val. Loss: 0.243
2024-11-05 11:13 - INFO - 	 Best ROC-AUC: 0.575
2024-11-05 11:13 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 11:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.552
2024-11-05 11:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 11:13 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-05 11:13 - INFO - ---------------------------------------------
2024-11-05 11:15 - INFO - ---------------------------------------------
2024-11-05 11:15 - INFO - Epoch: 07 | Time: 1m 55s
2024-11-05 11:15 - INFO - 	 Train Loss: 0.186
2024-11-05 11:15 - INFO - 	 Val. Loss: 0.228
2024-11-05 11:15 - INFO - 	 ROC-AUC: 0.559
2024-11-05 11:15 - INFO - 	 PR-AUC: 0.053
2024-11-05 11:15 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 11:15 - INFO - 	 Best Val. Loss: 0.228
2024-11-05 11:15 - INFO - 	 Best ROC-AUC: 0.575
2024-11-05 11:15 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 11:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.552
2024-11-05 11:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 11:15 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-05 11:15 - INFO - ---------------------------------------------
2024-11-05 11:17 - INFO - ---------------------------------------------
2024-11-05 11:17 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-05 11:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06682
2024-11-05 11:17 - INFO - 	 Train Loss: 0.183
2024-11-05 11:17 - INFO - 	 Val. Loss: 0.229
2024-11-05 11:17 - INFO - 	 ROC-AUC: 0.582
2024-11-05 11:17 - INFO - 	 PR-AUC: 0.067
2024-11-05 11:17 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-05 11:17 - INFO - 	 Best Val. Loss: 0.228
2024-11-05 11:17 - INFO - 	 Best ROC-AUC: 0.582
2024-11-05 11:17 - INFO - 	 Best PR-AUC: 0.067
2024-11-05 11:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.556
2024-11-05 11:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 11:17 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-05 11:17 - INFO - ---------------------------------------------
2024-11-05 11:19 - INFO - ---------------------------------------------
2024-11-05 11:19 - INFO - Epoch: 09 | Time: 1m 55s
2024-11-05 11:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06867
2024-11-05 11:19 - INFO - 	 Train Loss: 0.181
2024-11-05 11:19 - INFO - 	 Val. Loss: 0.220
2024-11-05 11:19 - INFO - 	 ROC-AUC: 0.571
2024-11-05 11:19 - INFO - 	 PR-AUC: 0.069
2024-11-05 11:19 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 11:19 - INFO - 	 Best Val. Loss: 0.220
2024-11-05 11:19 - INFO - 	 Best ROC-AUC: 0.582
2024-11-05 11:19 - INFO - 	 Best PR-AUC: 0.069
2024-11-05 11:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.556
2024-11-05 11:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 11:19 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-05 11:19 - INFO - ---------------------------------------------
2024-11-05 11:21 - INFO - ---------------------------------------------
2024-11-05 11:21 - INFO - Epoch: 10 | Time: 1m 54s
2024-11-05 11:21 - INFO - 	 Train Loss: 0.179
2024-11-05 11:21 - INFO - 	 Val. Loss: 0.212
2024-11-05 11:21 - INFO - 	 ROC-AUC: 0.572
2024-11-05 11:21 - INFO - 	 PR-AUC: 0.067
2024-11-05 11:21 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-05 11:21 - INFO - 	 Best Val. Loss: 0.212
2024-11-05 11:21 - INFO - 	 Best ROC-AUC: 0.582
2024-11-05 11:21 - INFO - 	 Best PR-AUC: 0.069
2024-11-05 11:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.556
2024-11-05 11:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 11:21 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-05 11:21 - INFO - ---------------------------------------------
2024-11-05 11:24 - INFO - Fit the preprocessing pipeline
2024-11-05 11:24 - INFO - Training using device: mps
2024-11-05 11:24 - INFO - Creating generators
2024-11-05 11:24 - INFO - The model has 651,257 trainable parameters
2024-11-05 11:24 - INFO - * Model:
2024-11-05 11:24 - INFO - * -----------
2024-11-05 11:24 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 11:24 - INFO - * -----------
2024-11-05 11:24 - INFO - Evaluating model based on: aucpr
2024-11-05 11:24 - INFO - Training..

2024-11-05 11:26 - INFO - ---------------------------------------------
2024-11-05 11:26 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-05 11:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.04485
2024-11-05 11:26 - INFO - 	 Train Loss: 0.245
2024-11-05 11:26 - INFO - 	 Val. Loss: 0.316
2024-11-05 11:26 - INFO - 	 ROC-AUC: 0.484
2024-11-05 11:26 - INFO - 	 PR-AUC: 0.045
2024-11-05 11:26 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 11:26 - INFO - 	 Best Val. Loss: 0.316
2024-11-05 11:26 - INFO - 	 Best ROC-AUC: 0.484
2024-11-05 11:26 - INFO - 	 Best PR-AUC: 0.045
2024-11-05 11:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.490
2024-11-05 11:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.045
2024-11-05 11:26 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-05 11:26 - INFO - ---------------------------------------------
2024-11-05 11:27 - INFO - ---------------------------------------------
2024-11-05 11:27 - INFO - Epoch: 02 | Time: 1m 47s
2024-11-05 11:27 - INFO - 	 Train Loss: 0.220
2024-11-05 11:27 - INFO - 	 Val. Loss: 0.288
2024-11-05 11:27 - INFO - 	 ROC-AUC: 0.487
2024-11-05 11:27 - INFO - 	 PR-AUC: 0.043
2024-11-05 11:27 - INFO - 	 Recall for 0.4 precision: 0.298
2024-11-05 11:27 - INFO - 	 Best Val. Loss: 0.288
2024-11-05 11:27 - INFO - 	 Best ROC-AUC: 0.487
2024-11-05 11:27 - INFO - 	 Best PR-AUC: 0.045
2024-11-05 11:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.485
2024-11-05 11:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.045
2024-11-05 11:27 - INFO - 	 Best Recall for 0.4 precision: 0.298
2024-11-05 11:27 - INFO - ---------------------------------------------
2024-11-05 11:29 - INFO - ---------------------------------------------
2024-11-05 11:29 - INFO - Epoch: 03 | Time: 1m 54s
2024-11-05 11:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06679
2024-11-05 11:29 - INFO - 	 Train Loss: 0.200
2024-11-05 11:29 - INFO - 	 Val. Loss: 0.253
2024-11-05 11:29 - INFO - 	 ROC-AUC: 0.519
2024-11-05 11:29 - INFO - 	 PR-AUC: 0.067
2024-11-05 11:29 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 11:29 - INFO - 	 Best Val. Loss: 0.253
2024-11-05 11:29 - INFO - 	 Best ROC-AUC: 0.519
2024-11-05 11:29 - INFO - 	 Best PR-AUC: 0.067
2024-11-05 11:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.505
2024-11-05 11:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.050
2024-11-05 11:29 - INFO - 	 Best Recall for 0.4 precision: 0.298
2024-11-05 11:29 - INFO - ---------------------------------------------
2024-11-05 11:31 - INFO - ---------------------------------------------
2024-11-05 11:31 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-05 11:31 - INFO - 	 Train Loss: 0.194
2024-11-05 11:31 - INFO - 	 Val. Loss: 0.243
2024-11-05 11:31 - INFO - 	 ROC-AUC: 0.558
2024-11-05 11:31 - INFO - 	 PR-AUC: 0.052
2024-11-05 11:31 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 11:31 - INFO - 	 Best Val. Loss: 0.243
2024-11-05 11:31 - INFO - 	 Best ROC-AUC: 0.558
2024-11-05 11:31 - INFO - 	 Best PR-AUC: 0.067
2024-11-05 11:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.563
2024-11-05 11:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.050
2024-11-05 11:31 - INFO - 	 Best Recall for 0.4 precision: 0.298
2024-11-05 11:31 - INFO - ---------------------------------------------
2024-11-05 11:33 - INFO - ---------------------------------------------
2024-11-05 11:33 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-05 11:33 - INFO - 	 Train Loss: 0.185
2024-11-05 11:33 - INFO - 	 Val. Loss: 0.225
2024-11-05 11:33 - INFO - 	 ROC-AUC: 0.571
2024-11-05 11:33 - INFO - 	 PR-AUC: 0.059
2024-11-05 11:33 - INFO - 	 Recall for 0.4 precision: 0.140
2024-11-05 11:33 - INFO - 	 Best Val. Loss: 0.225
2024-11-05 11:33 - INFO - 	 Best ROC-AUC: 0.571
2024-11-05 11:33 - INFO - 	 Best PR-AUC: 0.067
2024-11-05 11:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.574
2024-11-05 11:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.050
2024-11-05 11:33 - INFO - 	 Best Recall for 0.4 precision: 0.298
2024-11-05 11:33 - INFO - ---------------------------------------------
2024-11-05 11:35 - INFO - ---------------------------------------------
2024-11-05 11:35 - INFO - Epoch: 06 | Time: 1m 55s
2024-11-05 11:35 - INFO - 	 Train Loss: 0.180
2024-11-05 11:35 - INFO - 	 Val. Loss: 0.225
2024-11-05 11:35 - INFO - 	 ROC-AUC: 0.525
2024-11-05 11:35 - INFO - 	 PR-AUC: 0.056
2024-11-05 11:35 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 11:35 - INFO - 	 Best Val. Loss: 0.225
2024-11-05 11:35 - INFO - 	 Best ROC-AUC: 0.571
2024-11-05 11:35 - INFO - 	 Best PR-AUC: 0.067
2024-11-05 11:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.574
2024-11-05 11:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.050
2024-11-05 11:35 - INFO - 	 Best Recall for 0.4 precision: 0.298
2024-11-05 11:35 - INFO - ---------------------------------------------
2024-11-05 11:37 - INFO - ---------------------------------------------
2024-11-05 11:37 - INFO - Epoch: 07 | Time: 1m 54s
2024-11-05 11:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13603
2024-11-05 11:37 - INFO - 	 Train Loss: 0.182
2024-11-05 11:37 - INFO - 	 Val. Loss: 0.214
2024-11-05 11:37 - INFO - 	 ROC-AUC: 0.600
2024-11-05 11:37 - INFO - 	 PR-AUC: 0.136
2024-11-05 11:37 - INFO - 	 Recall for 0.4 precision: 0.101
2024-11-05 11:37 - INFO - 	 Best Val. Loss: 0.214
2024-11-05 11:37 - INFO - 	 Best ROC-AUC: 0.600
2024-11-05 11:37 - INFO - 	 Best PR-AUC: 0.136
2024-11-05 11:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.562
2024-11-05 11:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 11:37 - INFO - 	 Best Recall for 0.4 precision: 0.298
2024-11-05 11:37 - INFO - ---------------------------------------------
2024-11-05 11:39 - INFO - ---------------------------------------------
2024-11-05 11:39 - INFO - Epoch: 08 | Time: 1m 53s
2024-11-05 11:39 - INFO - 	 Train Loss: 0.178
2024-11-05 11:39 - INFO - 	 Val. Loss: 0.212
2024-11-05 11:39 - INFO - 	 ROC-AUC: 0.601
2024-11-05 11:39 - INFO - 	 PR-AUC: 0.121
2024-11-05 11:39 - INFO - 	 Recall for 0.4 precision: 0.065
2024-11-05 11:39 - INFO - 	 Best Val. Loss: 0.212
2024-11-05 11:39 - INFO - 	 Best ROC-AUC: 0.601
2024-11-05 11:39 - INFO - 	 Best PR-AUC: 0.136
2024-11-05 11:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.574
2024-11-05 11:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 11:39 - INFO - 	 Best Recall for 0.4 precision: 0.298
2024-11-05 11:39 - INFO - ---------------------------------------------
2024-11-05 11:41 - INFO - ---------------------------------------------
2024-11-05 11:41 - INFO - Epoch: 09 | Time: 1m 53s
2024-11-05 11:41 - INFO - 	 Train Loss: 0.177
2024-11-05 11:41 - INFO - 	 Val. Loss: 0.204
2024-11-05 11:41 - INFO - 	 ROC-AUC: 0.662
2024-11-05 11:41 - INFO - 	 PR-AUC: 0.132
2024-11-05 11:41 - INFO - 	 Recall for 0.4 precision: 0.039
2024-11-05 11:41 - INFO - 	 Best Val. Loss: 0.204
2024-11-05 11:41 - INFO - 	 Best ROC-AUC: 0.662
2024-11-05 11:41 - INFO - 	 Best PR-AUC: 0.136
2024-11-05 11:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.617
2024-11-05 11:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 11:41 - INFO - 	 Best Recall for 0.4 precision: 0.298
2024-11-05 11:41 - INFO - ---------------------------------------------
2024-11-05 11:43 - INFO - ---------------------------------------------
2024-11-05 11:43 - INFO - Epoch: 10 | Time: 1m 54s
2024-11-05 11:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14761
2024-11-05 11:43 - INFO - 	 Train Loss: 0.174
2024-11-05 11:43 - INFO - 	 Val. Loss: 0.204
2024-11-05 11:43 - INFO - 	 ROC-AUC: 0.676
2024-11-05 11:43 - INFO - 	 PR-AUC: 0.148
2024-11-05 11:43 - INFO - 	 Recall for 0.4 precision: 0.085
2024-11-05 11:43 - INFO - 	 Best Val. Loss: 0.204
2024-11-05 11:43 - INFO - 	 Best ROC-AUC: 0.676
2024-11-05 11:43 - INFO - 	 Best PR-AUC: 0.148
2024-11-05 11:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.632
2024-11-05 11:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.084
2024-11-05 11:43 - INFO - 	 Best Recall for 0.4 precision: 0.298
2024-11-05 11:43 - INFO - ---------------------------------------------
2024-11-05 11:45 - INFO - Fit the preprocessing pipeline
2024-11-05 11:45 - INFO - Training using device: mps
2024-11-05 11:45 - INFO - Creating generators
2024-11-05 11:45 - INFO - The model has 651,257 trainable parameters
2024-11-05 11:45 - INFO - * Model:
2024-11-05 11:45 - INFO - * -----------
2024-11-05 11:45 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 11:45 - INFO - * -----------
2024-11-05 11:45 - INFO - Evaluating model based on: aucpr
2024-11-05 11:45 - INFO - Training..

2024-11-05 11:47 - INFO - ---------------------------------------------
2024-11-05 11:47 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-05 11:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.04568
2024-11-05 11:47 - INFO - 	 Train Loss: 0.261
2024-11-05 11:47 - INFO - 	 Val. Loss: 0.294
2024-11-05 11:47 - INFO - 	 ROC-AUC: 0.503
2024-11-05 11:47 - INFO - 	 PR-AUC: 0.046
2024-11-05 11:47 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 11:47 - INFO - 	 Best Val. Loss: 0.294
2024-11-05 11:47 - INFO - 	 Best ROC-AUC: 0.503
2024-11-05 11:47 - INFO - 	 Best PR-AUC: 0.046
2024-11-05 11:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.531
2024-11-05 11:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.054
2024-11-05 11:47 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-05 11:47 - INFO - ---------------------------------------------
2024-11-05 11:49 - INFO - ---------------------------------------------
2024-11-05 11:49 - INFO - Epoch: 02 | Time: 1m 46s
2024-11-05 11:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05054
2024-11-05 11:49 - INFO - 	 Train Loss: 0.217
2024-11-05 11:49 - INFO - 	 Val. Loss: 0.285
2024-11-05 11:49 - INFO - 	 ROC-AUC: 0.538
2024-11-05 11:49 - INFO - 	 PR-AUC: 0.051
2024-11-05 11:49 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 11:49 - INFO - 	 Best Val. Loss: 0.285
2024-11-05 11:49 - INFO - 	 Best ROC-AUC: 0.538
2024-11-05 11:49 - INFO - 	 Best PR-AUC: 0.051
2024-11-05 11:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.565
2024-11-05 11:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.058
2024-11-05 11:49 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-05 11:49 - INFO - ---------------------------------------------
2024-11-05 11:51 - INFO - ---------------------------------------------
2024-11-05 11:51 - INFO - Epoch: 03 | Time: 1m 50s
2024-11-05 11:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05226
2024-11-05 11:51 - INFO - 	 Train Loss: 0.208
2024-11-05 11:51 - INFO - 	 Val. Loss: 0.270
2024-11-05 11:51 - INFO - 	 ROC-AUC: 0.552
2024-11-05 11:51 - INFO - 	 PR-AUC: 0.052
2024-11-05 11:51 - INFO - 	 Recall for 0.4 precision: 0.101
2024-11-05 11:51 - INFO - 	 Best Val. Loss: 0.270
2024-11-05 11:51 - INFO - 	 Best ROC-AUC: 0.552
2024-11-05 11:51 - INFO - 	 Best PR-AUC: 0.052
2024-11-05 11:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.552
2024-11-05 11:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.058
2024-11-05 11:51 - INFO - 	 Best Recall for 0.4 precision: 0.101
2024-11-05 11:51 - INFO - ---------------------------------------------
2024-11-05 11:52 - INFO - ---------------------------------------------
2024-11-05 11:52 - INFO - Epoch: 04 | Time: 1m 50s
2024-11-05 11:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05601
2024-11-05 11:52 - INFO - 	 Train Loss: 0.199
2024-11-05 11:52 - INFO - 	 Val. Loss: 0.254
2024-11-05 11:52 - INFO - 	 ROC-AUC: 0.589
2024-11-05 11:52 - INFO - 	 PR-AUC: 0.056
2024-11-05 11:52 - INFO - 	 Recall for 0.4 precision: 0.177
2024-11-05 11:52 - INFO - 	 Best Val. Loss: 0.254
2024-11-05 11:52 - INFO - 	 Best ROC-AUC: 0.589
2024-11-05 11:52 - INFO - 	 Best PR-AUC: 0.056
2024-11-05 11:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.555
2024-11-05 11:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.055
2024-11-05 11:52 - INFO - 	 Best Recall for 0.4 precision: 0.177
2024-11-05 11:52 - INFO - ---------------------------------------------
2024-11-05 11:54 - INFO - ---------------------------------------------
2024-11-05 11:54 - INFO - Epoch: 05 | Time: 1m 51s
2024-11-05 11:54 - INFO - 	 Train Loss: 0.195
2024-11-05 11:54 - INFO - 	 Val. Loss: 0.248
2024-11-05 11:54 - INFO - 	 ROC-AUC: 0.567
2024-11-05 11:54 - INFO - 	 PR-AUC: 0.053
2024-11-05 11:54 - INFO - 	 Recall for 0.4 precision: 0.008
2024-11-05 11:54 - INFO - 	 Best Val. Loss: 0.248
2024-11-05 11:54 - INFO - 	 Best ROC-AUC: 0.589
2024-11-05 11:54 - INFO - 	 Best PR-AUC: 0.056
2024-11-05 11:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.555
2024-11-05 11:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.055
2024-11-05 11:54 - INFO - 	 Best Recall for 0.4 precision: 0.177
2024-11-05 11:54 - INFO - ---------------------------------------------
2024-11-05 11:56 - INFO - ---------------------------------------------
2024-11-05 11:56 - INFO - Epoch: 06 | Time: 1m 53s
2024-11-05 11:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.0594
2024-11-05 11:56 - INFO - 	 Train Loss: 0.188
2024-11-05 11:56 - INFO - 	 Val. Loss: 0.229
2024-11-05 11:56 - INFO - 	 ROC-AUC: 0.583
2024-11-05 11:56 - INFO - 	 PR-AUC: 0.059
2024-11-05 11:56 - INFO - 	 Recall for 0.4 precision: 0.106
2024-11-05 11:56 - INFO - 	 Best Val. Loss: 0.229
2024-11-05 11:56 - INFO - 	 Best ROC-AUC: 0.589
2024-11-05 11:56 - INFO - 	 Best PR-AUC: 0.059
2024-11-05 11:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.555
2024-11-05 11:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.057
2024-11-05 11:56 - INFO - 	 Best Recall for 0.4 precision: 0.177
2024-11-05 11:56 - INFO - ---------------------------------------------
2024-11-05 11:58 - INFO - ---------------------------------------------
2024-11-05 11:58 - INFO - Epoch: 07 | Time: 1m 54s
2024-11-05 11:58 - INFO - 	 Train Loss: 0.181
2024-11-05 11:58 - INFO - 	 Val. Loss: 0.218
2024-11-05 11:58 - INFO - 	 ROC-AUC: 0.565
2024-11-05 11:58 - INFO - 	 PR-AUC: 0.056
2024-11-05 11:58 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 11:58 - INFO - 	 Best Val. Loss: 0.218
2024-11-05 11:58 - INFO - 	 Best ROC-AUC: 0.589
2024-11-05 11:58 - INFO - 	 Best PR-AUC: 0.059
2024-11-05 11:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.555
2024-11-05 11:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.057
2024-11-05 11:58 - INFO - 	 Best Recall for 0.4 precision: 0.177
2024-11-05 11:58 - INFO - ---------------------------------------------
2024-11-05 12:00 - INFO - ---------------------------------------------
2024-11-05 12:00 - INFO - Epoch: 08 | Time: 1m 55s
2024-11-05 12:00 - INFO - 	 Train Loss: 0.184
2024-11-05 12:00 - INFO - 	 Val. Loss: 0.216
2024-11-05 12:00 - INFO - 	 ROC-AUC: 0.601
2024-11-05 12:00 - INFO - 	 PR-AUC: 0.059
2024-11-05 12:00 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 12:00 - INFO - 	 Best Val. Loss: 0.216
2024-11-05 12:00 - INFO - 	 Best ROC-AUC: 0.601
2024-11-05 12:00 - INFO - 	 Best PR-AUC: 0.059
2024-11-05 12:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.567
2024-11-05 12:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.057
2024-11-05 12:00 - INFO - 	 Best Recall for 0.4 precision: 0.177
2024-11-05 12:00 - INFO - ---------------------------------------------
2024-11-05 12:02 - INFO - ---------------------------------------------
2024-11-05 12:02 - INFO - Epoch: 09 | Time: 1m 57s
2024-11-05 12:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08798
2024-11-05 12:02 - INFO - 	 Train Loss: 0.180
2024-11-05 12:02 - INFO - 	 Val. Loss: 0.212
2024-11-05 12:02 - INFO - 	 ROC-AUC: 0.623
2024-11-05 12:02 - INFO - 	 PR-AUC: 0.088
2024-11-05 12:02 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-05 12:02 - INFO - 	 Best Val. Loss: 0.212
2024-11-05 12:02 - INFO - 	 Best ROC-AUC: 0.623
2024-11-05 12:02 - INFO - 	 Best PR-AUC: 0.088
2024-11-05 12:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.556
2024-11-05 12:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 12:02 - INFO - 	 Best Recall for 0.4 precision: 0.177
2024-11-05 12:02 - INFO - ---------------------------------------------
2024-11-05 12:04 - INFO - ---------------------------------------------
2024-11-05 12:04 - INFO - Epoch: 10 | Time: 1m 57s
2024-11-05 12:04 - INFO - 	 Train Loss: 0.177
2024-11-05 12:04 - INFO - 	 Val. Loss: 0.213
2024-11-05 12:04 - INFO - 	 ROC-AUC: 0.646
2024-11-05 12:04 - INFO - 	 PR-AUC: 0.085
2024-11-05 12:04 - INFO - 	 Recall for 0.4 precision: 0.138
2024-11-05 12:04 - INFO - 	 Best Val. Loss: 0.212
2024-11-05 12:04 - INFO - 	 Best ROC-AUC: 0.646
2024-11-05 12:04 - INFO - 	 Best PR-AUC: 0.088
2024-11-05 12:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.574
2024-11-05 12:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-05 12:04 - INFO - 	 Best Recall for 0.4 precision: 0.177
2024-11-05 12:04 - INFO - ---------------------------------------------
2024-11-05 12:07 - INFO - Fit the preprocessing pipeline
2024-11-05 12:07 - INFO - Training using device: mps
2024-11-05 12:07 - INFO - Creating generators
2024-11-05 12:07 - INFO - The model has 651,257 trainable parameters
2024-11-05 12:07 - INFO - * Model:
2024-11-05 12:07 - INFO - * -----------
2024-11-05 12:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 12:07 - INFO - * -----------
2024-11-05 12:07 - INFO - Evaluating model based on: aucpr
2024-11-05 12:07 - INFO - Training..

2024-11-05 12:08 - INFO - ---------------------------------------------
2024-11-05 12:08 - INFO - Epoch: 01 | Time: 1m 43s
2024-11-05 12:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05343
2024-11-05 12:08 - INFO - 	 Train Loss: 0.253
2024-11-05 12:08 - INFO - 	 Val. Loss: 0.317
2024-11-05 12:08 - INFO - 	 ROC-AUC: 0.551
2024-11-05 12:08 - INFO - 	 PR-AUC: 0.053
2024-11-05 12:08 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 12:08 - INFO - 	 Best Val. Loss: 0.317
2024-11-05 12:08 - INFO - 	 Best ROC-AUC: 0.551
2024-11-05 12:08 - INFO - 	 Best PR-AUC: 0.053
2024-11-05 12:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.518
2024-11-05 12:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.048
2024-11-05 12:08 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-05 12:08 - INFO - ---------------------------------------------
2024-11-05 12:10 - INFO - ---------------------------------------------
2024-11-05 12:10 - INFO - Epoch: 02 | Time: 1m 54s
2024-11-05 12:10 - INFO - 	 Train Loss: 0.216
2024-11-05 12:10 - INFO - 	 Val. Loss: 0.269
2024-11-05 12:10 - INFO - 	 ROC-AUC: 0.564
2024-11-05 12:10 - INFO - 	 PR-AUC: 0.053
2024-11-05 12:10 - INFO - 	 Recall for 0.4 precision: 0.008
2024-11-05 12:10 - INFO - 	 Best Val. Loss: 0.269
2024-11-05 12:10 - INFO - 	 Best ROC-AUC: 0.564
2024-11-05 12:10 - INFO - 	 Best PR-AUC: 0.053
2024-11-05 12:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.542
2024-11-05 12:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.048
2024-11-05 12:10 - INFO - 	 Best Recall for 0.4 precision: 0.008
2024-11-05 12:10 - INFO - ---------------------------------------------
2024-11-05 12:12 - INFO - ---------------------------------------------
2024-11-05 12:12 - INFO - Epoch: 03 | Time: 1m 57s
2024-11-05 12:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05994
2024-11-05 12:12 - INFO - 	 Train Loss: 0.204
2024-11-05 12:12 - INFO - 	 Val. Loss: 0.262
2024-11-05 12:12 - INFO - 	 ROC-AUC: 0.541
2024-11-05 12:12 - INFO - 	 PR-AUC: 0.060
2024-11-05 12:12 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 12:12 - INFO - 	 Best Val. Loss: 0.262
2024-11-05 12:12 - INFO - 	 Best ROC-AUC: 0.564
2024-11-05 12:12 - INFO - 	 Best PR-AUC: 0.060
2024-11-05 12:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.542
2024-11-05 12:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.060
2024-11-05 12:12 - INFO - 	 Best Recall for 0.4 precision: 0.008
2024-11-05 12:12 - INFO - ---------------------------------------------
2024-11-05 12:14 - INFO - ---------------------------------------------
2024-11-05 12:14 - INFO - Epoch: 04 | Time: 1m 58s
2024-11-05 12:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06718
2024-11-05 12:14 - INFO - 	 Train Loss: 0.197
2024-11-05 12:14 - INFO - 	 Val. Loss: 0.251
2024-11-05 12:14 - INFO - 	 ROC-AUC: 0.604
2024-11-05 12:14 - INFO - 	 PR-AUC: 0.067
2024-11-05 12:14 - INFO - 	 Recall for 0.4 precision: 0.280
2024-11-05 12:14 - INFO - 	 Best Val. Loss: 0.251
2024-11-05 12:14 - INFO - 	 Best ROC-AUC: 0.604
2024-11-05 12:14 - INFO - 	 Best PR-AUC: 0.067
2024-11-05 12:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.549
2024-11-05 12:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.054
2024-11-05 12:14 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-05 12:14 - INFO - ---------------------------------------------
2024-11-05 12:16 - INFO - ---------------------------------------------
2024-11-05 12:16 - INFO - Epoch: 05 | Time: 1m 57s
2024-11-05 12:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08197
2024-11-05 12:16 - INFO - 	 Train Loss: 0.191
2024-11-05 12:16 - INFO - 	 Val. Loss: 0.235
2024-11-05 12:16 - INFO - 	 ROC-AUC: 0.625
2024-11-05 12:16 - INFO - 	 PR-AUC: 0.082
2024-11-05 12:16 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 12:16 - INFO - 	 Best Val. Loss: 0.235
2024-11-05 12:16 - INFO - 	 Best ROC-AUC: 0.625
2024-11-05 12:16 - INFO - 	 Best PR-AUC: 0.082
2024-11-05 12:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.575
2024-11-05 12:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.064
2024-11-05 12:16 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-05 12:16 - INFO - ---------------------------------------------
2024-11-05 12:18 - INFO - ---------------------------------------------
2024-11-05 12:18 - INFO - Epoch: 06 | Time: 1m 59s
2024-11-05 12:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08411
2024-11-05 12:18 - INFO - 	 Train Loss: 0.190
2024-11-05 12:18 - INFO - 	 Val. Loss: 0.241
2024-11-05 12:18 - INFO - 	 ROC-AUC: 0.646
2024-11-05 12:18 - INFO - 	 PR-AUC: 0.084
2024-11-05 12:18 - INFO - 	 Recall for 0.4 precision: 0.076
2024-11-05 12:18 - INFO - 	 Best Val. Loss: 0.235
2024-11-05 12:18 - INFO - 	 Best ROC-AUC: 0.646
2024-11-05 12:18 - INFO - 	 Best PR-AUC: 0.084
2024-11-05 12:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.619
2024-11-05 12:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.077
2024-11-05 12:18 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-05 12:18 - INFO - ---------------------------------------------
2024-11-05 12:20 - INFO - ---------------------------------------------
2024-11-05 12:20 - INFO - Epoch: 07 | Time: 1m 59s
2024-11-05 12:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12032
2024-11-05 12:20 - INFO - 	 Train Loss: 0.183
2024-11-05 12:20 - INFO - 	 Val. Loss: 0.219
2024-11-05 12:20 - INFO - 	 ROC-AUC: 0.666
2024-11-05 12:20 - INFO - 	 PR-AUC: 0.120
2024-11-05 12:20 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 12:20 - INFO - 	 Best Val. Loss: 0.219
2024-11-05 12:20 - INFO - 	 Best ROC-AUC: 0.666
2024-11-05 12:20 - INFO - 	 Best PR-AUC: 0.120
2024-11-05 12:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.615
2024-11-05 12:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.077
2024-11-05 12:20 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-05 12:20 - INFO - ---------------------------------------------
2024-11-05 12:22 - INFO - ---------------------------------------------
2024-11-05 12:22 - INFO - Epoch: 08 | Time: 1m 56s
2024-11-05 12:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14724
2024-11-05 12:22 - INFO - 	 Train Loss: 0.181
2024-11-05 12:22 - INFO - 	 Val. Loss: 0.215
2024-11-05 12:22 - INFO - 	 ROC-AUC: 0.687
2024-11-05 12:22 - INFO - 	 PR-AUC: 0.147
2024-11-05 12:22 - INFO - 	 Recall for 0.4 precision: 0.098
2024-11-05 12:22 - INFO - 	 Best Val. Loss: 0.215
2024-11-05 12:22 - INFO - 	 Best ROC-AUC: 0.687
2024-11-05 12:22 - INFO - 	 Best PR-AUC: 0.147
2024-11-05 12:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.651
2024-11-05 12:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.104
2024-11-05 12:22 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-05 12:22 - INFO - ---------------------------------------------
2024-11-05 12:24 - INFO - ---------------------------------------------
2024-11-05 12:24 - INFO - Epoch: 09 | Time: 1m 54s
2024-11-05 12:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18859
2024-11-05 12:24 - INFO - 	 Train Loss: 0.178
2024-11-05 12:24 - INFO - 	 Val. Loss: 0.211
2024-11-05 12:24 - INFO - 	 ROC-AUC: 0.722
2024-11-05 12:24 - INFO - 	 PR-AUC: 0.189
2024-11-05 12:24 - INFO - 	 Recall for 0.4 precision: 0.146
2024-11-05 12:24 - INFO - 	 Best Val. Loss: 0.211
2024-11-05 12:24 - INFO - 	 Best ROC-AUC: 0.722
2024-11-05 12:24 - INFO - 	 Best PR-AUC: 0.189
2024-11-05 12:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.676
2024-11-05 12:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.118
2024-11-05 12:24 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-05 12:24 - INFO - ---------------------------------------------
2024-11-05 12:26 - INFO - ---------------------------------------------
2024-11-05 12:26 - INFO - Epoch: 10 | Time: 1m 53s
2024-11-05 12:26 - INFO - 	 Train Loss: 0.174
2024-11-05 12:26 - INFO - 	 Val. Loss: 0.203
2024-11-05 12:26 - INFO - 	 ROC-AUC: 0.724
2024-11-05 12:26 - INFO - 	 PR-AUC: 0.166
2024-11-05 12:26 - INFO - 	 Recall for 0.4 precision: 0.085
2024-11-05 12:26 - INFO - 	 Best Val. Loss: 0.203
2024-11-05 12:26 - INFO - 	 Best ROC-AUC: 0.724
2024-11-05 12:26 - INFO - 	 Best PR-AUC: 0.189
2024-11-05 12:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.686
2024-11-05 12:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.118
2024-11-05 12:26 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-05 12:26 - INFO - ---------------------------------------------
2024-11-05 12:29 - INFO - Fit the preprocessing pipeline
2024-11-05 12:29 - INFO - Training using device: mps
2024-11-05 12:29 - INFO - Creating generators
2024-11-05 12:29 - INFO - The model has 651,257 trainable parameters
2024-11-05 12:29 - INFO - * Model:
2024-11-05 12:29 - INFO - * -----------
2024-11-05 12:29 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 12:29 - INFO - * -----------
2024-11-05 12:29 - INFO - Evaluating model based on: aucpr
2024-11-05 12:29 - INFO - Training..

2024-11-05 12:30 - INFO - ---------------------------------------------
2024-11-05 12:30 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-05 12:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05242
2024-11-05 12:30 - INFO - 	 Train Loss: 0.254
2024-11-05 12:30 - INFO - 	 Val. Loss: 0.327
2024-11-05 12:30 - INFO - 	 ROC-AUC: 0.519
2024-11-05 12:30 - INFO - 	 PR-AUC: 0.052
2024-11-05 12:30 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-05 12:30 - INFO - 	 Best Val. Loss: 0.327
2024-11-05 12:30 - INFO - 	 Best ROC-AUC: 0.519
2024-11-05 12:30 - INFO - 	 Best PR-AUC: 0.052
2024-11-05 12:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.478
2024-11-05 12:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.052
2024-11-05 12:30 - INFO - 	 Best Recall for 0.4 precision: 0.010
2024-11-05 12:30 - INFO - ---------------------------------------------
2024-11-05 12:32 - INFO - ---------------------------------------------
2024-11-05 12:32 - INFO - Epoch: 02 | Time: 1m 45s
2024-11-05 12:32 - INFO - 	 Train Loss: 0.216
2024-11-05 12:32 - INFO - 	 Val. Loss: 0.263
2024-11-05 12:32 - INFO - 	 ROC-AUC: 0.521
2024-11-05 12:32 - INFO - 	 PR-AUC: 0.048
2024-11-05 12:32 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 12:32 - INFO - 	 Best Val. Loss: 0.263
2024-11-05 12:32 - INFO - 	 Best ROC-AUC: 0.521
2024-11-05 12:32 - INFO - 	 Best PR-AUC: 0.052
2024-11-05 12:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.513
2024-11-05 12:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.052
2024-11-05 12:32 - INFO - 	 Best Recall for 0.4 precision: 0.010
2024-11-05 12:32 - INFO - ---------------------------------------------
2024-11-05 12:34 - INFO - ---------------------------------------------
2024-11-05 12:34 - INFO - Epoch: 03 | Time: 1m 51s
2024-11-05 12:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05345
2024-11-05 12:34 - INFO - 	 Train Loss: 0.200
2024-11-05 12:34 - INFO - 	 Val. Loss: 0.238
2024-11-05 12:34 - INFO - 	 ROC-AUC: 0.571
2024-11-05 12:34 - INFO - 	 PR-AUC: 0.053
2024-11-05 12:34 - INFO - 	 Recall for 0.4 precision: 0.062
2024-11-05 12:34 - INFO - 	 Best Val. Loss: 0.238
2024-11-05 12:34 - INFO - 	 Best ROC-AUC: 0.571
2024-11-05 12:34 - INFO - 	 Best PR-AUC: 0.053
2024-11-05 12:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.550
2024-11-05 12:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.052
2024-11-05 12:34 - INFO - 	 Best Recall for 0.4 precision: 0.062
2024-11-05 12:34 - INFO - ---------------------------------------------
2024-11-05 12:36 - INFO - ---------------------------------------------
2024-11-05 12:36 - INFO - Epoch: 04 | Time: 1m 53s
2024-11-05 12:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06179
2024-11-05 12:36 - INFO - 	 Train Loss: 0.186
2024-11-05 12:36 - INFO - 	 Val. Loss: 0.226
2024-11-05 12:36 - INFO - 	 ROC-AUC: 0.586
2024-11-05 12:36 - INFO - 	 PR-AUC: 0.062
2024-11-05 12:36 - INFO - 	 Recall for 0.4 precision: 0.098
2024-11-05 12:36 - INFO - 	 Best Val. Loss: 0.226
2024-11-05 12:36 - INFO - 	 Best ROC-AUC: 0.586
2024-11-05 12:36 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 12:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.520
2024-11-05 12:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 12:36 - INFO - 	 Best Recall for 0.4 precision: 0.098
2024-11-05 12:36 - INFO - ---------------------------------------------
2024-11-05 12:38 - INFO - ---------------------------------------------
2024-11-05 12:38 - INFO - Epoch: 05 | Time: 1m 52s
2024-11-05 12:38 - INFO - 	 Train Loss: 0.186
2024-11-05 12:38 - INFO - 	 Val. Loss: 0.247
2024-11-05 12:38 - INFO - 	 ROC-AUC: 0.532
2024-11-05 12:38 - INFO - 	 PR-AUC: 0.053
2024-11-05 12:38 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 12:38 - INFO - 	 Best Val. Loss: 0.226
2024-11-05 12:38 - INFO - 	 Best ROC-AUC: 0.586
2024-11-05 12:38 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 12:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.520
2024-11-05 12:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 12:38 - INFO - 	 Best Recall for 0.4 precision: 0.098
2024-11-05 12:38 - INFO - ---------------------------------------------
2024-11-05 12:40 - INFO - ---------------------------------------------
2024-11-05 12:40 - INFO - Epoch: 06 | Time: 1m 53s
2024-11-05 12:40 - INFO - 	 Train Loss: 0.182
2024-11-05 12:40 - INFO - 	 Val. Loss: 0.211
2024-11-05 12:40 - INFO - 	 ROC-AUC: 0.561
2024-11-05 12:40 - INFO - 	 PR-AUC: 0.055
2024-11-05 12:40 - INFO - 	 Recall for 0.4 precision: 0.060
2024-11-05 12:40 - INFO - 	 Best Val. Loss: 0.211
2024-11-05 12:40 - INFO - 	 Best ROC-AUC: 0.586
2024-11-05 12:40 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 12:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.520
2024-11-05 12:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 12:40 - INFO - 	 Best Recall for 0.4 precision: 0.098
2024-11-05 12:40 - INFO - ---------------------------------------------
2024-11-05 12:42 - INFO - ---------------------------------------------
2024-11-05 12:42 - INFO - Epoch: 07 | Time: 1m 53s
2024-11-05 12:42 - INFO - 	 Train Loss: 0.183
2024-11-05 12:42 - INFO - 	 Val. Loss: 0.207
2024-11-05 12:42 - INFO - 	 ROC-AUC: 0.571
2024-11-05 12:42 - INFO - 	 PR-AUC: 0.060
2024-11-05 12:42 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-05 12:42 - INFO - 	 Best Val. Loss: 0.207
2024-11-05 12:42 - INFO - 	 Best ROC-AUC: 0.586
2024-11-05 12:42 - INFO - 	 Best PR-AUC: 0.062
2024-11-05 12:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.520
2024-11-05 12:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 12:42 - INFO - 	 Best Recall for 0.4 precision: 0.098
2024-11-05 12:42 - INFO - ---------------------------------------------
