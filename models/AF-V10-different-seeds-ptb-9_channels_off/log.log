2024-10-13 16:52 - INFO - Fit the preprocessing pipeline
2024-10-13 16:52 - INFO - Training using device: cuda
2024-10-13 16:52 - INFO - Creating generators
2024-10-13 16:52 - INFO - The model has 651,257 trainable parameters
2024-10-13 16:52 - INFO - * Model:
2024-10-13 16:52 - INFO - * -----------
2024-10-13 16:52 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 16:52 - INFO - * -----------
2024-10-13 16:52 - INFO - Evaluating model based on: rocauc
2024-10-13 16:52 - INFO - Training..

2024-10-13 16:52 - INFO - ---------------------------------------------
2024-10-13 16:52 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 16:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97285
2024-10-13 16:52 - INFO - 	 Train Loss: 0.180
2024-10-13 16:52 - INFO - 	 Val. Loss: 0.095
2024-10-13 16:52 - INFO - 	 ROC-AUC: 0.973
2024-10-13 16:52 - INFO - 	 PR-AUC: 0.720
2024-10-13 16:52 - INFO - 	 Recall for 0.4 precision: 0.960
2024-10-13 16:52 - INFO - 	 Best Val. Loss: 0.095
2024-10-13 16:52 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 16:52 - INFO - 	 Best PR-AUC: 0.720
2024-10-13 16:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 16:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.735
2024-10-13 16:52 - INFO - 	 Best Recall for 0.4 precision: 0.960
2024-10-13 16:52 - INFO - ---------------------------------------------
2024-10-13 16:53 - INFO - ---------------------------------------------
2024-10-13 16:53 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 16:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97666
2024-10-13 16:53 - INFO - 	 Train Loss: 0.101
2024-10-13 16:53 - INFO - 	 Val. Loss: 0.086
2024-10-13 16:53 - INFO - 	 ROC-AUC: 0.977
2024-10-13 16:53 - INFO - 	 PR-AUC: 0.805
2024-10-13 16:53 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 16:53 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 16:53 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 16:53 - INFO - 	 Best PR-AUC: 0.805
2024-10-13 16:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 16:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.770
2024-10-13 16:53 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 16:53 - INFO - ---------------------------------------------
2024-10-13 16:53 - INFO - ---------------------------------------------
2024-10-13 16:53 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 16:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97945
2024-10-13 16:53 - INFO - 	 Train Loss: 0.090
2024-10-13 16:53 - INFO - 	 Val. Loss: 0.082
2024-10-13 16:53 - INFO - 	 ROC-AUC: 0.979
2024-10-13 16:53 - INFO - 	 PR-AUC: 0.819
2024-10-13 16:53 - INFO - 	 Recall for 0.4 precision: 0.962
2024-10-13 16:53 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 16:53 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 16:53 - INFO - 	 Best PR-AUC: 0.819
2024-10-13 16:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 16:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-10-13 16:53 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 16:53 - INFO - ---------------------------------------------
2024-10-13 16:54 - INFO - ---------------------------------------------
2024-10-13 16:54 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 16:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98244
2024-10-13 16:54 - INFO - 	 Train Loss: 0.087
2024-10-13 16:54 - INFO - 	 Val. Loss: 0.077
2024-10-13 16:54 - INFO - 	 ROC-AUC: 0.982
2024-10-13 16:54 - INFO - 	 PR-AUC: 0.836
2024-10-13 16:54 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 16:54 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 16:54 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 16:54 - INFO - 	 Best PR-AUC: 0.836
2024-10-13 16:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 16:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 16:54 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 16:54 - INFO - ---------------------------------------------
2024-10-13 16:54 - INFO - ---------------------------------------------
2024-10-13 16:54 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 16:54 - INFO - 	 Train Loss: 0.082
2024-10-13 16:54 - INFO - 	 Val. Loss: 0.082
2024-10-13 16:54 - INFO - 	 ROC-AUC: 0.979
2024-10-13 16:54 - INFO - 	 PR-AUC: 0.818
2024-10-13 16:54 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 16:54 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 16:54 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 16:54 - INFO - 	 Best PR-AUC: 0.836
2024-10-13 16:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 16:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 16:54 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 16:54 - INFO - ---------------------------------------------
2024-10-13 16:55 - INFO - ---------------------------------------------
2024-10-13 16:55 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 16:55 - INFO - 	 Train Loss: 0.081
2024-10-13 16:55 - INFO - 	 Val. Loss: 0.076
2024-10-13 16:55 - INFO - 	 ROC-AUC: 0.980
2024-10-13 16:55 - INFO - 	 PR-AUC: 0.829
2024-10-13 16:55 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 16:55 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 16:55 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 16:55 - INFO - 	 Best PR-AUC: 0.836
2024-10-13 16:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 16:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 16:55 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 16:55 - INFO - ---------------------------------------------
2024-10-13 16:55 - INFO - ---------------------------------------------
2024-10-13 16:55 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 16:55 - INFO - 	 Train Loss: 0.078
2024-10-13 16:55 - INFO - 	 Val. Loss: 0.078
2024-10-13 16:55 - INFO - 	 ROC-AUC: 0.982
2024-10-13 16:55 - INFO - 	 PR-AUC: 0.838
2024-10-13 16:55 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 16:55 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 16:55 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 16:55 - INFO - 	 Best PR-AUC: 0.838
2024-10-13 16:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 16:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 16:55 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 16:55 - INFO - ---------------------------------------------
2024-10-13 16:57 - INFO - Fit the preprocessing pipeline
2024-10-13 16:57 - INFO - Training using device: cuda
2024-10-13 16:57 - INFO - Creating generators
2024-10-13 16:57 - INFO - The model has 651,257 trainable parameters
2024-10-13 16:57 - INFO - * Model:
2024-10-13 16:57 - INFO - * -----------
2024-10-13 16:57 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 16:57 - INFO - * -----------
2024-10-13 16:57 - INFO - Evaluating model based on: rocauc
2024-10-13 16:57 - INFO - Training..

2024-10-13 16:58 - INFO - ---------------------------------------------
2024-10-13 16:58 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 16:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96966
2024-10-13 16:58 - INFO - 	 Train Loss: 0.179
2024-10-13 16:58 - INFO - 	 Val. Loss: 0.103
2024-10-13 16:58 - INFO - 	 ROC-AUC: 0.970
2024-10-13 16:58 - INFO - 	 PR-AUC: 0.732
2024-10-13 16:58 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-13 16:58 - INFO - 	 Best Val. Loss: 0.103
2024-10-13 16:58 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 16:58 - INFO - 	 Best PR-AUC: 0.732
2024-10-13 16:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-13 16:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.701
2024-10-13 16:58 - INFO - 	 Best Recall for 0.4 precision: 0.938
2024-10-13 16:58 - INFO - ---------------------------------------------
2024-10-13 16:58 - INFO - ---------------------------------------------
2024-10-13 16:58 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 16:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97618
2024-10-13 16:58 - INFO - 	 Train Loss: 0.103
2024-10-13 16:58 - INFO - 	 Val. Loss: 0.086
2024-10-13 16:58 - INFO - 	 ROC-AUC: 0.976
2024-10-13 16:58 - INFO - 	 PR-AUC: 0.781
2024-10-13 16:58 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 16:58 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 16:58 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 16:58 - INFO - 	 Best PR-AUC: 0.781
2024-10-13 16:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 16:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-13 16:58 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 16:58 - INFO - ---------------------------------------------
2024-10-13 16:59 - INFO - ---------------------------------------------
2024-10-13 16:59 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 16:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97854
2024-10-13 16:59 - INFO - 	 Train Loss: 0.092
2024-10-13 16:59 - INFO - 	 Val. Loss: 0.080
2024-10-13 16:59 - INFO - 	 ROC-AUC: 0.979
2024-10-13 16:59 - INFO - 	 PR-AUC: 0.820
2024-10-13 16:59 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 16:59 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 16:59 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 16:59 - INFO - 	 Best PR-AUC: 0.820
2024-10-13 16:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 16:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-13 16:59 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 16:59 - INFO - ---------------------------------------------
2024-10-13 17:00 - INFO - ---------------------------------------------
2024-10-13 17:00 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 17:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9794
2024-10-13 17:00 - INFO - 	 Train Loss: 0.085
2024-10-13 17:00 - INFO - 	 Val. Loss: 0.078
2024-10-13 17:00 - INFO - 	 ROC-AUC: 0.979
2024-10-13 17:00 - INFO - 	 PR-AUC: 0.831
2024-10-13 17:00 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 17:00 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 17:00 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 17:00 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 17:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 17:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-13 17:00 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 17:00 - INFO - ---------------------------------------------
2024-10-13 17:00 - INFO - ---------------------------------------------
2024-10-13 17:00 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-13 17:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98492
2024-10-13 17:00 - INFO - 	 Train Loss: 0.082
2024-10-13 17:00 - INFO - 	 Val. Loss: 0.068
2024-10-13 17:00 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:00 - INFO - 	 PR-AUC: 0.865
2024-10-13 17:00 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 17:00 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 17:00 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:00 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 17:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-13 17:00 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:00 - INFO - ---------------------------------------------
2024-10-13 17:01 - INFO - ---------------------------------------------
2024-10-13 17:01 - INFO - Epoch: 06 | Time: 0m 37s
2024-10-13 17:01 - INFO - 	 Train Loss: 0.079
2024-10-13 17:01 - INFO - 	 Val. Loss: 0.075
2024-10-13 17:01 - INFO - 	 ROC-AUC: 0.981
2024-10-13 17:01 - INFO - 	 PR-AUC: 0.848
2024-10-13 17:01 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:01 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 17:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:01 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 17:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-13 17:01 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:01 - INFO - ---------------------------------------------
2024-10-13 17:01 - INFO - ---------------------------------------------
2024-10-13 17:01 - INFO - Epoch: 07 | Time: 0m 39s
2024-10-13 17:01 - INFO - 	 Train Loss: 0.078
2024-10-13 17:01 - INFO - 	 Val. Loss: 0.067
2024-10-13 17:01 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:01 - INFO - 	 PR-AUC: 0.875
2024-10-13 17:01 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:01 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 17:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:01 - INFO - 	 Best PR-AUC: 0.875
2024-10-13 17:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 17:01 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:01 - INFO - ---------------------------------------------
2024-10-13 17:02 - INFO - ---------------------------------------------
2024-10-13 17:02 - INFO - Epoch: 08 | Time: 0m 39s
2024-10-13 17:02 - INFO - 	 Train Loss: 0.076
2024-10-13 17:02 - INFO - 	 Val. Loss: 0.075
2024-10-13 17:02 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:02 - INFO - 	 PR-AUC: 0.872
2024-10-13 17:02 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 17:02 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 17:02 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:02 - INFO - 	 Best PR-AUC: 0.875
2024-10-13 17:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 17:02 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:02 - INFO - ---------------------------------------------
2024-10-13 17:03 - INFO - ---------------------------------------------
2024-10-13 17:03 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 17:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98503
2024-10-13 17:03 - INFO - 	 Train Loss: 0.075
2024-10-13 17:03 - INFO - 	 Val. Loss: 0.067
2024-10-13 17:03 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:03 - INFO - 	 PR-AUC: 0.874
2024-10-13 17:03 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 17:03 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 17:03 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:03 - INFO - 	 Best PR-AUC: 0.875
2024-10-13 17:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 17:03 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:03 - INFO - ---------------------------------------------
2024-10-13 17:03 - INFO - ---------------------------------------------
2024-10-13 17:03 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 17:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98564
2024-10-13 17:03 - INFO - 	 Train Loss: 0.071
2024-10-13 17:03 - INFO - 	 Val. Loss: 0.065
2024-10-13 17:03 - INFO - 	 ROC-AUC: 0.986
2024-10-13 17:03 - INFO - 	 PR-AUC: 0.867
2024-10-13 17:03 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 17:03 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 17:03 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 17:03 - INFO - 	 Best PR-AUC: 0.875
2024-10-13 17:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 17:03 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:03 - INFO - ---------------------------------------------
2024-10-13 17:05 - INFO - Fit the preprocessing pipeline
2024-10-13 17:05 - INFO - Training using device: cuda
2024-10-13 17:05 - INFO - Creating generators
2024-10-13 17:05 - INFO - The model has 651,257 trainable parameters
2024-10-13 17:05 - INFO - * Model:
2024-10-13 17:05 - INFO - * -----------
2024-10-13 17:05 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 17:05 - INFO - * -----------
2024-10-13 17:05 - INFO - Evaluating model based on: rocauc
2024-10-13 17:05 - INFO - Training..

2024-10-13 17:05 - INFO - ---------------------------------------------
2024-10-13 17:05 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 17:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96456
2024-10-13 17:05 - INFO - 	 Train Loss: 0.205
2024-10-13 17:05 - INFO - 	 Val. Loss: 0.135
2024-10-13 17:05 - INFO - 	 ROC-AUC: 0.965
2024-10-13 17:05 - INFO - 	 PR-AUC: 0.662
2024-10-13 17:05 - INFO - 	 Recall for 0.4 precision: 0.924
2024-10-13 17:05 - INFO - 	 Best Val. Loss: 0.135
2024-10-13 17:05 - INFO - 	 Best ROC-AUC: 0.965
2024-10-13 17:05 - INFO - 	 Best PR-AUC: 0.662
2024-10-13 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-13 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.670
2024-10-13 17:05 - INFO - 	 Best Recall for 0.4 precision: 0.924
2024-10-13 17:05 - INFO - ---------------------------------------------
2024-10-13 17:06 - INFO - ---------------------------------------------
2024-10-13 17:06 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 17:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97665
2024-10-13 17:06 - INFO - 	 Train Loss: 0.103
2024-10-13 17:06 - INFO - 	 Val. Loss: 0.089
2024-10-13 17:06 - INFO - 	 ROC-AUC: 0.977
2024-10-13 17:06 - INFO - 	 PR-AUC: 0.763
2024-10-13 17:06 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 17:06 - INFO - 	 Best Val. Loss: 0.089
2024-10-13 17:06 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 17:06 - INFO - 	 Best PR-AUC: 0.763
2024-10-13 17:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 17:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-13 17:06 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 17:06 - INFO - ---------------------------------------------
2024-10-13 17:06 - INFO - ---------------------------------------------
2024-10-13 17:06 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 17:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98058
2024-10-13 17:06 - INFO - 	 Train Loss: 0.090
2024-10-13 17:06 - INFO - 	 Val. Loss: 0.077
2024-10-13 17:06 - INFO - 	 ROC-AUC: 0.981
2024-10-13 17:06 - INFO - 	 PR-AUC: 0.825
2024-10-13 17:06 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:06 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 17:06 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 17:06 - INFO - 	 Best PR-AUC: 0.825
2024-10-13 17:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 17:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-13 17:06 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 17:06 - INFO - ---------------------------------------------
2024-10-13 17:07 - INFO - ---------------------------------------------
2024-10-13 17:07 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 17:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98279
2024-10-13 17:07 - INFO - 	 Train Loss: 0.085
2024-10-13 17:07 - INFO - 	 Val. Loss: 0.074
2024-10-13 17:07 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:07 - INFO - 	 PR-AUC: 0.834
2024-10-13 17:07 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 17:07 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 17:07 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:07 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 17:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 17:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-13 17:07 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 17:07 - INFO - ---------------------------------------------
2024-10-13 17:07 - INFO - ---------------------------------------------
2024-10-13 17:07 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 17:07 - INFO - 	 Train Loss: 0.081
2024-10-13 17:07 - INFO - 	 Val. Loss: 0.073
2024-10-13 17:07 - INFO - 	 ROC-AUC: 0.982
2024-10-13 17:07 - INFO - 	 PR-AUC: 0.844
2024-10-13 17:07 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:07 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 17:07 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:07 - INFO - 	 Best PR-AUC: 0.844
2024-10-13 17:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 17:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 17:07 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:07 - INFO - ---------------------------------------------
2024-10-13 17:08 - INFO - ---------------------------------------------
2024-10-13 17:08 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 17:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98342
2024-10-13 17:08 - INFO - 	 Train Loss: 0.079
2024-10-13 17:08 - INFO - 	 Val. Loss: 0.077
2024-10-13 17:08 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:08 - INFO - 	 PR-AUC: 0.851
2024-10-13 17:08 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:08 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 17:08 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:08 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 17:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 17:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-13 17:08 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:08 - INFO - ---------------------------------------------
2024-10-13 17:09 - INFO - ---------------------------------------------
2024-10-13 17:09 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 17:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98411
2024-10-13 17:09 - INFO - 	 Train Loss: 0.077
2024-10-13 17:09 - INFO - 	 Val. Loss: 0.069
2024-10-13 17:09 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:09 - INFO - 	 PR-AUC: 0.855
2024-10-13 17:09 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:09 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 17:09 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:09 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 17:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 17:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 17:09 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:09 - INFO - ---------------------------------------------
2024-10-13 17:09 - INFO - ---------------------------------------------
2024-10-13 17:09 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 17:09 - INFO - 	 Train Loss: 0.076
2024-10-13 17:09 - INFO - 	 Val. Loss: 0.070
2024-10-13 17:09 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:09 - INFO - 	 PR-AUC: 0.856
2024-10-13 17:09 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 17:09 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 17:09 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:09 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 17:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 17:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-13 17:09 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:09 - INFO - ---------------------------------------------
2024-10-13 17:10 - INFO - ---------------------------------------------
2024-10-13 17:10 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 17:10 - INFO - 	 Train Loss: 0.075
2024-10-13 17:10 - INFO - 	 Val. Loss: 0.070
2024-10-13 17:10 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:10 - INFO - 	 PR-AUC: 0.847
2024-10-13 17:10 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:10 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 17:10 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:10 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 17:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 17:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-13 17:10 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:10 - INFO - ---------------------------------------------
2024-10-13 17:10 - INFO - ---------------------------------------------
2024-10-13 17:10 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 17:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98452
2024-10-13 17:10 - INFO - 	 Train Loss: 0.074
2024-10-13 17:10 - INFO - 	 Val. Loss: 0.073
2024-10-13 17:10 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:10 - INFO - 	 PR-AUC: 0.862
2024-10-13 17:10 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 17:10 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 17:10 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:10 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 17:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 17:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-13 17:10 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:10 - INFO - ---------------------------------------------
2024-10-13 17:12 - INFO - Fit the preprocessing pipeline
2024-10-13 17:12 - INFO - Training using device: cuda
2024-10-13 17:12 - INFO - Creating generators
2024-10-13 17:12 - INFO - The model has 651,257 trainable parameters
2024-10-13 17:12 - INFO - * Model:
2024-10-13 17:12 - INFO - * -----------
2024-10-13 17:12 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 17:12 - INFO - * -----------
2024-10-13 17:12 - INFO - Evaluating model based on: rocauc
2024-10-13 17:12 - INFO - Training..

2024-10-13 17:12 - INFO - ---------------------------------------------
2024-10-13 17:12 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 17:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9698
2024-10-13 17:12 - INFO - 	 Train Loss: 0.186
2024-10-13 17:12 - INFO - 	 Val. Loss: 0.100
2024-10-13 17:12 - INFO - 	 ROC-AUC: 0.970
2024-10-13 17:12 - INFO - 	 PR-AUC: 0.713
2024-10-13 17:12 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-13 17:12 - INFO - 	 Best Val. Loss: 0.100
2024-10-13 17:12 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 17:12 - INFO - 	 Best PR-AUC: 0.713
2024-10-13 17:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-13 17:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.712
2024-10-13 17:12 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-13 17:12 - INFO - ---------------------------------------------
2024-10-13 17:13 - INFO - ---------------------------------------------
2024-10-13 17:13 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 17:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97912
2024-10-13 17:13 - INFO - 	 Train Loss: 0.100
2024-10-13 17:13 - INFO - 	 Val. Loss: 0.084
2024-10-13 17:13 - INFO - 	 ROC-AUC: 0.979
2024-10-13 17:13 - INFO - 	 PR-AUC: 0.821
2024-10-13 17:13 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 17:13 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 17:13 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 17:13 - INFO - 	 Best PR-AUC: 0.821
2024-10-13 17:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 17:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-13 17:13 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 17:13 - INFO - ---------------------------------------------
2024-10-13 17:13 - INFO - ---------------------------------------------
2024-10-13 17:13 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 17:13 - INFO - 	 Train Loss: 0.090
2024-10-13 17:13 - INFO - 	 Val. Loss: 0.119
2024-10-13 17:13 - INFO - 	 ROC-AUC: 0.977
2024-10-13 17:13 - INFO - 	 PR-AUC: 0.815
2024-10-13 17:13 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 17:13 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 17:13 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 17:13 - INFO - 	 Best PR-AUC: 0.821
2024-10-13 17:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 17:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-13 17:13 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 17:13 - INFO - ---------------------------------------------
2024-10-13 17:14 - INFO - ---------------------------------------------
2024-10-13 17:14 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 17:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98164
2024-10-13 17:14 - INFO - 	 Train Loss: 0.085
2024-10-13 17:14 - INFO - 	 Val. Loss: 0.076
2024-10-13 17:14 - INFO - 	 ROC-AUC: 0.982
2024-10-13 17:14 - INFO - 	 PR-AUC: 0.839
2024-10-13 17:14 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 17:14 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 17:14 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 17:14 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 17:14 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 17:14 - INFO - ---------------------------------------------
2024-10-13 17:14 - INFO - ---------------------------------------------
2024-10-13 17:14 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 17:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98337
2024-10-13 17:14 - INFO - 	 Train Loss: 0.082
2024-10-13 17:14 - INFO - 	 Val. Loss: 0.075
2024-10-13 17:14 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:14 - INFO - 	 PR-AUC: 0.843
2024-10-13 17:14 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:14 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 17:14 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:14 - INFO - 	 Best PR-AUC: 0.843
2024-10-13 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 17:14 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:14 - INFO - ---------------------------------------------
2024-10-13 17:15 - INFO - ---------------------------------------------
2024-10-13 17:15 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 17:15 - INFO - 	 Train Loss: 0.080
2024-10-13 17:15 - INFO - 	 Val. Loss: 0.077
2024-10-13 17:15 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:15 - INFO - 	 PR-AUC: 0.836
2024-10-13 17:15 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 17:15 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 17:15 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:15 - INFO - 	 Best PR-AUC: 0.843
2024-10-13 17:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 17:15 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:15 - INFO - ---------------------------------------------
2024-10-13 17:15 - INFO - ---------------------------------------------
2024-10-13 17:15 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 17:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9842
2024-10-13 17:15 - INFO - 	 Train Loss: 0.076
2024-10-13 17:15 - INFO - 	 Val. Loss: 0.069
2024-10-13 17:15 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:15 - INFO - 	 PR-AUC: 0.858
2024-10-13 17:15 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 17:15 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 17:15 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:15 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 17:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-13 17:15 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:15 - INFO - ---------------------------------------------
2024-10-13 17:16 - INFO - ---------------------------------------------
2024-10-13 17:16 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 17:16 - INFO - 	 Train Loss: 0.076
2024-10-13 17:16 - INFO - 	 Val. Loss: 0.069
2024-10-13 17:16 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:16 - INFO - 	 PR-AUC: 0.868
2024-10-13 17:16 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:16 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 17:16 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:16 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 17:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 17:16 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:16 - INFO - ---------------------------------------------
2024-10-13 17:16 - INFO - ---------------------------------------------
2024-10-13 17:16 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 17:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98587
2024-10-13 17:16 - INFO - 	 Train Loss: 0.073
2024-10-13 17:16 - INFO - 	 Val. Loss: 0.068
2024-10-13 17:16 - INFO - 	 ROC-AUC: 0.986
2024-10-13 17:16 - INFO - 	 PR-AUC: 0.867
2024-10-13 17:16 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 17:16 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 17:16 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 17:16 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 17:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 17:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 17:16 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:16 - INFO - ---------------------------------------------
2024-10-13 17:17 - INFO - ---------------------------------------------
2024-10-13 17:17 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 17:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98613
2024-10-13 17:17 - INFO - 	 Train Loss: 0.075
2024-10-13 17:17 - INFO - 	 Val. Loss: 0.064
2024-10-13 17:17 - INFO - 	 ROC-AUC: 0.986
2024-10-13 17:17 - INFO - 	 PR-AUC: 0.869
2024-10-13 17:17 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:17 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 17:17 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 17:17 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 17:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-13 17:17 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:17 - INFO - ---------------------------------------------
2024-10-13 17:18 - INFO - Fit the preprocessing pipeline
2024-10-13 17:18 - INFO - Training using device: cuda
2024-10-13 17:18 - INFO - Creating generators
2024-10-13 17:18 - INFO - The model has 651,257 trainable parameters
2024-10-13 17:18 - INFO - * Model:
2024-10-13 17:18 - INFO - * -----------
2024-10-13 17:18 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 17:18 - INFO - * -----------
2024-10-13 17:18 - INFO - Evaluating model based on: rocauc
2024-10-13 17:18 - INFO - Training..

2024-10-13 17:19 - INFO - ---------------------------------------------
2024-10-13 17:19 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 17:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9673
2024-10-13 17:19 - INFO - 	 Train Loss: 0.182
2024-10-13 17:19 - INFO - 	 Val. Loss: 0.103
2024-10-13 17:19 - INFO - 	 ROC-AUC: 0.967
2024-10-13 17:19 - INFO - 	 PR-AUC: 0.729
2024-10-13 17:19 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-13 17:19 - INFO - 	 Best Val. Loss: 0.103
2024-10-13 17:19 - INFO - 	 Best ROC-AUC: 0.967
2024-10-13 17:19 - INFO - 	 Best PR-AUC: 0.729
2024-10-13 17:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 17:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.706
2024-10-13 17:19 - INFO - 	 Best Recall for 0.4 precision: 0.938
2024-10-13 17:19 - INFO - ---------------------------------------------
2024-10-13 17:20 - INFO - ---------------------------------------------
2024-10-13 17:20 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 17:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.977
2024-10-13 17:20 - INFO - 	 Train Loss: 0.102
2024-10-13 17:20 - INFO - 	 Val. Loss: 0.105
2024-10-13 17:20 - INFO - 	 ROC-AUC: 0.977
2024-10-13 17:20 - INFO - 	 PR-AUC: 0.782
2024-10-13 17:20 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 17:20 - INFO - 	 Best Val. Loss: 0.103
2024-10-13 17:20 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 17:20 - INFO - 	 Best PR-AUC: 0.782
2024-10-13 17:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 17:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.744
2024-10-13 17:20 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 17:20 - INFO - ---------------------------------------------
2024-10-13 17:20 - INFO - ---------------------------------------------
2024-10-13 17:20 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 17:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98106
2024-10-13 17:20 - INFO - 	 Train Loss: 0.093
2024-10-13 17:20 - INFO - 	 Val. Loss: 0.080
2024-10-13 17:20 - INFO - 	 ROC-AUC: 0.981
2024-10-13 17:20 - INFO - 	 PR-AUC: 0.832
2024-10-13 17:20 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 17:20 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 17:20 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 17:20 - INFO - 	 Best PR-AUC: 0.832
2024-10-13 17:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 17:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.796
2024-10-13 17:20 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 17:20 - INFO - ---------------------------------------------
2024-10-13 17:21 - INFO - ---------------------------------------------
2024-10-13 17:21 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 17:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98177
2024-10-13 17:21 - INFO - 	 Train Loss: 0.086
2024-10-13 17:21 - INFO - 	 Val. Loss: 0.076
2024-10-13 17:21 - INFO - 	 ROC-AUC: 0.982
2024-10-13 17:21 - INFO - 	 PR-AUC: 0.847
2024-10-13 17:21 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:21 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 17:21 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 17:21 - INFO - 	 Best PR-AUC: 0.847
2024-10-13 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-13 17:21 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:21 - INFO - ---------------------------------------------
2024-10-13 17:21 - INFO - ---------------------------------------------
2024-10-13 17:21 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 17:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98287
2024-10-13 17:21 - INFO - 	 Train Loss: 0.082
2024-10-13 17:21 - INFO - 	 Val. Loss: 0.075
2024-10-13 17:21 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:21 - INFO - 	 PR-AUC: 0.847
2024-10-13 17:21 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 17:21 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 17:21 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:21 - INFO - 	 Best PR-AUC: 0.847
2024-10-13 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-13 17:21 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:21 - INFO - ---------------------------------------------
2024-10-13 17:22 - INFO - ---------------------------------------------
2024-10-13 17:22 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 17:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98351
2024-10-13 17:22 - INFO - 	 Train Loss: 0.081
2024-10-13 17:22 - INFO - 	 Val. Loss: 0.079
2024-10-13 17:22 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:22 - INFO - 	 PR-AUC: 0.857
2024-10-13 17:22 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:22 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 17:22 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:22 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 17:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 17:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 17:22 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:22 - INFO - ---------------------------------------------
2024-10-13 17:22 - INFO - ---------------------------------------------
2024-10-13 17:22 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 17:22 - INFO - 	 Train Loss: 0.078
2024-10-13 17:22 - INFO - 	 Val. Loss: 0.074
2024-10-13 17:22 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:22 - INFO - 	 PR-AUC: 0.848
2024-10-13 17:22 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:22 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 17:22 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:22 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 17:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 17:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 17:22 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:22 - INFO - ---------------------------------------------
2024-10-13 17:23 - INFO - ---------------------------------------------
2024-10-13 17:23 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 17:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9847
2024-10-13 17:23 - INFO - 	 Train Loss: 0.078
2024-10-13 17:23 - INFO - 	 Val. Loss: 0.069
2024-10-13 17:23 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:23 - INFO - 	 PR-AUC: 0.856
2024-10-13 17:23 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 17:23 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 17:23 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:23 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 17:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 17:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 17:23 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:23 - INFO - ---------------------------------------------
2024-10-13 17:23 - INFO - ---------------------------------------------
2024-10-13 17:23 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 17:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98527
2024-10-13 17:23 - INFO - 	 Train Loss: 0.075
2024-10-13 17:23 - INFO - 	 Val. Loss: 0.067
2024-10-13 17:23 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:23 - INFO - 	 PR-AUC: 0.869
2024-10-13 17:23 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 17:23 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 17:23 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:23 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 17:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 17:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-13 17:23 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:23 - INFO - ---------------------------------------------
2024-10-13 17:24 - INFO - ---------------------------------------------
2024-10-13 17:24 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 17:24 - INFO - 	 Train Loss: 0.074
2024-10-13 17:24 - INFO - 	 Val. Loss: 0.069
2024-10-13 17:24 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:24 - INFO - 	 PR-AUC: 0.865
2024-10-13 17:24 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 17:24 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 17:24 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:24 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 17:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 17:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-13 17:24 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:24 - INFO - ---------------------------------------------
2024-10-13 17:25 - INFO - Fit the preprocessing pipeline
2024-10-13 17:25 - INFO - Training using device: cuda
2024-10-13 17:25 - INFO - Creating generators
2024-10-13 17:25 - INFO - The model has 651,257 trainable parameters
2024-10-13 17:25 - INFO - * Model:
2024-10-13 17:25 - INFO - * -----------
2024-10-13 17:25 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 17:25 - INFO - * -----------
2024-10-13 17:25 - INFO - Evaluating model based on: rocauc
2024-10-13 17:25 - INFO - Training..

2024-10-13 17:26 - INFO - ---------------------------------------------
2024-10-13 17:26 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 17:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96916
2024-10-13 17:26 - INFO - 	 Train Loss: 0.181
2024-10-13 17:26 - INFO - 	 Val. Loss: 0.101
2024-10-13 17:26 - INFO - 	 ROC-AUC: 0.969
2024-10-13 17:26 - INFO - 	 PR-AUC: 0.736
2024-10-13 17:26 - INFO - 	 Recall for 0.4 precision: 0.936
2024-10-13 17:26 - INFO - 	 Best Val. Loss: 0.101
2024-10-13 17:26 - INFO - 	 Best ROC-AUC: 0.969
2024-10-13 17:26 - INFO - 	 Best PR-AUC: 0.736
2024-10-13 17:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-13 17:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-10-13 17:26 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-13 17:26 - INFO - ---------------------------------------------
2024-10-13 17:26 - INFO - ---------------------------------------------
2024-10-13 17:26 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 17:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97812
2024-10-13 17:26 - INFO - 	 Train Loss: 0.103
2024-10-13 17:26 - INFO - 	 Val. Loss: 0.087
2024-10-13 17:26 - INFO - 	 ROC-AUC: 0.978
2024-10-13 17:26 - INFO - 	 PR-AUC: 0.793
2024-10-13 17:26 - INFO - 	 Recall for 0.4 precision: 0.962
2024-10-13 17:26 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 17:26 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 17:26 - INFO - 	 Best PR-AUC: 0.793
2024-10-13 17:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 17:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.748
2024-10-13 17:26 - INFO - 	 Best Recall for 0.4 precision: 0.962
2024-10-13 17:26 - INFO - ---------------------------------------------
2024-10-13 17:27 - INFO - ---------------------------------------------
2024-10-13 17:27 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 17:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98045
2024-10-13 17:27 - INFO - 	 Train Loss: 0.093
2024-10-13 17:27 - INFO - 	 Val. Loss: 0.082
2024-10-13 17:27 - INFO - 	 ROC-AUC: 0.980
2024-10-13 17:27 - INFO - 	 PR-AUC: 0.805
2024-10-13 17:27 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 17:27 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 17:27 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 17:27 - INFO - 	 Best PR-AUC: 0.805
2024-10-13 17:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-13 17:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-10-13 17:27 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 17:27 - INFO - ---------------------------------------------
2024-10-13 17:28 - INFO - ---------------------------------------------
2024-10-13 17:28 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 17:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98217
2024-10-13 17:28 - INFO - 	 Train Loss: 0.086
2024-10-13 17:28 - INFO - 	 Val. Loss: 0.076
2024-10-13 17:28 - INFO - 	 ROC-AUC: 0.982
2024-10-13 17:28 - INFO - 	 PR-AUC: 0.833
2024-10-13 17:28 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 17:28 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 17:28 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 17:28 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 17:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 17:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-13 17:28 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 17:28 - INFO - ---------------------------------------------
2024-10-13 17:28 - INFO - ---------------------------------------------
2024-10-13 17:28 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 17:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9834
2024-10-13 17:28 - INFO - 	 Train Loss: 0.083
2024-10-13 17:28 - INFO - 	 Val. Loss: 0.073
2024-10-13 17:28 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:28 - INFO - 	 PR-AUC: 0.848
2024-10-13 17:28 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:28 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 17:28 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:28 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 17:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 17:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 17:28 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:28 - INFO - ---------------------------------------------
2024-10-13 17:29 - INFO - ---------------------------------------------
2024-10-13 17:29 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 17:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98435
2024-10-13 17:29 - INFO - 	 Train Loss: 0.079
2024-10-13 17:29 - INFO - 	 Val. Loss: 0.070
2024-10-13 17:29 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:29 - INFO - 	 PR-AUC: 0.848
2024-10-13 17:29 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:29 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 17:29 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:29 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 17:29 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:29 - INFO - ---------------------------------------------
2024-10-13 17:29 - INFO - ---------------------------------------------
2024-10-13 17:29 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 17:29 - INFO - 	 Train Loss: 0.078
2024-10-13 17:29 - INFO - 	 Val. Loss: 0.072
2024-10-13 17:29 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:29 - INFO - 	 PR-AUC: 0.843
2024-10-13 17:29 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:29 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 17:29 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:29 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 17:29 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:29 - INFO - ---------------------------------------------
2024-10-13 17:30 - INFO - ---------------------------------------------
2024-10-13 17:30 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 17:30 - INFO - 	 Train Loss: 0.076
2024-10-13 17:30 - INFO - 	 Val. Loss: 0.069
2024-10-13 17:30 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:30 - INFO - 	 PR-AUC: 0.854
2024-10-13 17:30 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:30 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 17:30 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:30 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 17:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 17:30 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:30 - INFO - ---------------------------------------------
2024-10-13 17:30 - INFO - ---------------------------------------------
2024-10-13 17:30 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 17:30 - INFO - 	 Train Loss: 0.077
2024-10-13 17:30 - INFO - 	 Val. Loss: 0.074
2024-10-13 17:30 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:30 - INFO - 	 PR-AUC: 0.847
2024-10-13 17:30 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:30 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 17:30 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:30 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 17:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 17:30 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:30 - INFO - ---------------------------------------------
2024-10-13 17:32 - INFO - Fit the preprocessing pipeline
2024-10-13 17:32 - INFO - Training using device: cuda
2024-10-13 17:32 - INFO - Creating generators
2024-10-13 17:32 - INFO - The model has 651,257 trainable parameters
2024-10-13 17:32 - INFO - * Model:
2024-10-13 17:32 - INFO - * -----------
2024-10-13 17:32 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 17:32 - INFO - * -----------
2024-10-13 17:32 - INFO - Evaluating model based on: rocauc
2024-10-13 17:32 - INFO - Training..

2024-10-13 17:33 - INFO - ---------------------------------------------
2024-10-13 17:33 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 17:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96546
2024-10-13 17:33 - INFO - 	 Train Loss: 0.199
2024-10-13 17:33 - INFO - 	 Val. Loss: 0.109
2024-10-13 17:33 - INFO - 	 ROC-AUC: 0.965
2024-10-13 17:33 - INFO - 	 PR-AUC: 0.679
2024-10-13 17:33 - INFO - 	 Recall for 0.4 precision: 0.940
2024-10-13 17:33 - INFO - 	 Best Val. Loss: 0.109
2024-10-13 17:33 - INFO - 	 Best ROC-AUC: 0.965
2024-10-13 17:33 - INFO - 	 Best PR-AUC: 0.679
2024-10-13 17:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-13 17:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.687
2024-10-13 17:33 - INFO - 	 Best Recall for 0.4 precision: 0.940
2024-10-13 17:33 - INFO - ---------------------------------------------
2024-10-13 17:33 - INFO - ---------------------------------------------
2024-10-13 17:33 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 17:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97632
2024-10-13 17:33 - INFO - 	 Train Loss: 0.104
2024-10-13 17:33 - INFO - 	 Val. Loss: 0.086
2024-10-13 17:33 - INFO - 	 ROC-AUC: 0.976
2024-10-13 17:33 - INFO - 	 PR-AUC: 0.773
2024-10-13 17:33 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 17:33 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 17:33 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 17:33 - INFO - 	 Best PR-AUC: 0.773
2024-10-13 17:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 17:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-10-13 17:33 - INFO - 	 Best Recall for 0.4 precision: 0.940
2024-10-13 17:33 - INFO - ---------------------------------------------
2024-10-13 17:34 - INFO - ---------------------------------------------
2024-10-13 17:34 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 17:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97912
2024-10-13 17:34 - INFO - 	 Train Loss: 0.091
2024-10-13 17:34 - INFO - 	 Val. Loss: 0.090
2024-10-13 17:34 - INFO - 	 ROC-AUC: 0.979
2024-10-13 17:34 - INFO - 	 PR-AUC: 0.804
2024-10-13 17:34 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 17:34 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 17:34 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 17:34 - INFO - 	 Best PR-AUC: 0.804
2024-10-13 17:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 17:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.771
2024-10-13 17:34 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 17:34 - INFO - ---------------------------------------------
2024-10-13 17:34 - INFO - ---------------------------------------------
2024-10-13 17:34 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 17:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98167
2024-10-13 17:34 - INFO - 	 Train Loss: 0.085
2024-10-13 17:34 - INFO - 	 Val. Loss: 0.078
2024-10-13 17:34 - INFO - 	 ROC-AUC: 0.982
2024-10-13 17:34 - INFO - 	 PR-AUC: 0.832
2024-10-13 17:34 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 17:34 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 17:34 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 17:34 - INFO - 	 Best PR-AUC: 0.832
2024-10-13 17:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 17:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-13 17:34 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:34 - INFO - ---------------------------------------------
2024-10-13 17:35 - INFO - ---------------------------------------------
2024-10-13 17:35 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 17:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98324
2024-10-13 17:35 - INFO - 	 Train Loss: 0.082
2024-10-13 17:35 - INFO - 	 Val. Loss: 0.074
2024-10-13 17:35 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:35 - INFO - 	 PR-AUC: 0.840
2024-10-13 17:35 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 17:35 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 17:35 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:35 - INFO - 	 Best PR-AUC: 0.840
2024-10-13 17:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 17:35 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:35 - INFO - ---------------------------------------------
2024-10-13 17:35 - INFO - ---------------------------------------------
2024-10-13 17:35 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 17:35 - INFO - 	 Train Loss: 0.080
2024-10-13 17:35 - INFO - 	 Val. Loss: 0.071
2024-10-13 17:35 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:35 - INFO - 	 PR-AUC: 0.852
2024-10-13 17:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:35 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 17:35 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:35 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 17:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 17:35 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:35 - INFO - ---------------------------------------------
2024-10-13 17:36 - INFO - ---------------------------------------------
2024-10-13 17:36 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 17:36 - INFO - 	 Train Loss: 0.077
2024-10-13 17:36 - INFO - 	 Val. Loss: 0.074
2024-10-13 17:36 - INFO - 	 ROC-AUC: 0.982
2024-10-13 17:36 - INFO - 	 PR-AUC: 0.842
2024-10-13 17:36 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 17:36 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 17:36 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:36 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 17:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 17:36 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:36 - INFO - ---------------------------------------------
2024-10-13 17:37 - INFO - ---------------------------------------------
2024-10-13 17:37 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 17:37 - INFO - 	 Train Loss: 0.076
2024-10-13 17:37 - INFO - 	 Val. Loss: 0.072
2024-10-13 17:37 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:37 - INFO - 	 PR-AUC: 0.844
2024-10-13 17:37 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 17:37 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 17:37 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:37 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 17:37 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:37 - INFO - ---------------------------------------------
2024-10-13 17:37 - INFO - ---------------------------------------------
2024-10-13 17:37 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 17:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98385
2024-10-13 17:37 - INFO - 	 Train Loss: 0.076
2024-10-13 17:37 - INFO - 	 Val. Loss: 0.068
2024-10-13 17:37 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:37 - INFO - 	 PR-AUC: 0.865
2024-10-13 17:37 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:37 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 17:37 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:37 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-13 17:37 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:37 - INFO - ---------------------------------------------
2024-10-13 17:38 - INFO - ---------------------------------------------
2024-10-13 17:38 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 17:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98541
2024-10-13 17:38 - INFO - 	 Train Loss: 0.073
2024-10-13 17:38 - INFO - 	 Val. Loss: 0.066
2024-10-13 17:38 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:38 - INFO - 	 PR-AUC: 0.866
2024-10-13 17:38 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 17:38 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 17:38 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:38 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 17:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 17:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 17:38 - INFO - ---------------------------------------------
2024-10-13 17:39 - INFO - Fit the preprocessing pipeline
2024-10-13 17:39 - INFO - Training using device: cuda
2024-10-13 17:39 - INFO - Creating generators
2024-10-13 17:39 - INFO - The model has 651,257 trainable parameters
2024-10-13 17:39 - INFO - * Model:
2024-10-13 17:39 - INFO - * -----------
2024-10-13 17:39 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 17:39 - INFO - * -----------
2024-10-13 17:39 - INFO - Evaluating model based on: rocauc
2024-10-13 17:39 - INFO - Training..

2024-10-13 17:40 - INFO - ---------------------------------------------
2024-10-13 17:40 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 17:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96805
2024-10-13 17:40 - INFO - 	 Train Loss: 0.179
2024-10-13 17:40 - INFO - 	 Val. Loss: 0.101
2024-10-13 17:40 - INFO - 	 ROC-AUC: 0.968
2024-10-13 17:40 - INFO - 	 PR-AUC: 0.723
2024-10-13 17:40 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-13 17:40 - INFO - 	 Best Val. Loss: 0.101
2024-10-13 17:40 - INFO - 	 Best ROC-AUC: 0.968
2024-10-13 17:40 - INFO - 	 Best PR-AUC: 0.723
2024-10-13 17:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-13 17:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-13 17:40 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-13 17:40 - INFO - ---------------------------------------------
2024-10-13 17:40 - INFO - ---------------------------------------------
2024-10-13 17:40 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 17:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97915
2024-10-13 17:40 - INFO - 	 Train Loss: 0.101
2024-10-13 17:40 - INFO - 	 Val. Loss: 0.084
2024-10-13 17:40 - INFO - 	 ROC-AUC: 0.979
2024-10-13 17:40 - INFO - 	 PR-AUC: 0.775
2024-10-13 17:40 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:40 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 17:40 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 17:40 - INFO - 	 Best PR-AUC: 0.775
2024-10-13 17:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 17:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-13 17:40 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 17:40 - INFO - ---------------------------------------------
2024-10-13 17:41 - INFO - ---------------------------------------------
2024-10-13 17:41 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 17:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97944
2024-10-13 17:41 - INFO - 	 Train Loss: 0.092
2024-10-13 17:41 - INFO - 	 Val. Loss: 0.084
2024-10-13 17:41 - INFO - 	 ROC-AUC: 0.979
2024-10-13 17:41 - INFO - 	 PR-AUC: 0.811
2024-10-13 17:41 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 17:41 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 17:41 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 17:41 - INFO - 	 Best PR-AUC: 0.811
2024-10-13 17:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 17:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-13 17:41 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 17:41 - INFO - ---------------------------------------------
2024-10-13 17:41 - INFO - ---------------------------------------------
2024-10-13 17:41 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 17:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98178
2024-10-13 17:41 - INFO - 	 Train Loss: 0.085
2024-10-13 17:41 - INFO - 	 Val. Loss: 0.078
2024-10-13 17:41 - INFO - 	 ROC-AUC: 0.982
2024-10-13 17:41 - INFO - 	 PR-AUC: 0.833
2024-10-13 17:41 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 17:41 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 17:41 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 17:41 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 17:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 17:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-10-13 17:41 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 17:41 - INFO - ---------------------------------------------
2024-10-13 17:42 - INFO - ---------------------------------------------
2024-10-13 17:42 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 17:42 - INFO - 	 Train Loss: 0.082
2024-10-13 17:42 - INFO - 	 Val. Loss: 0.075
2024-10-13 17:42 - INFO - 	 ROC-AUC: 0.981
2024-10-13 17:42 - INFO - 	 PR-AUC: 0.833
2024-10-13 17:42 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:42 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 17:42 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 17:42 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 17:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 17:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-10-13 17:42 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:42 - INFO - ---------------------------------------------
2024-10-13 17:42 - INFO - ---------------------------------------------
2024-10-13 17:42 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 17:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98342
2024-10-13 17:42 - INFO - 	 Train Loss: 0.079
2024-10-13 17:42 - INFO - 	 Val. Loss: 0.070
2024-10-13 17:42 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:42 - INFO - 	 PR-AUC: 0.855
2024-10-13 17:42 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:42 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 17:42 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:42 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 17:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 17:42 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:42 - INFO - ---------------------------------------------
2024-10-13 17:43 - INFO - ---------------------------------------------
2024-10-13 17:43 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 17:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98482
2024-10-13 17:43 - INFO - 	 Train Loss: 0.077
2024-10-13 17:43 - INFO - 	 Val. Loss: 0.068
2024-10-13 17:43 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:43 - INFO - 	 PR-AUC: 0.851
2024-10-13 17:43 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:43 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 17:43 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:43 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 17:43 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:43 - INFO - ---------------------------------------------
2024-10-13 17:43 - INFO - ---------------------------------------------
2024-10-13 17:43 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 17:43 - INFO - 	 Train Loss: 0.077
2024-10-13 17:43 - INFO - 	 Val. Loss: 0.070
2024-10-13 17:43 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:43 - INFO - 	 PR-AUC: 0.849
2024-10-13 17:43 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:43 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 17:43 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:43 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 17:43 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:43 - INFO - ---------------------------------------------
2024-10-13 17:44 - INFO - ---------------------------------------------
2024-10-13 17:44 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 17:44 - INFO - 	 Train Loss: 0.075
2024-10-13 17:44 - INFO - 	 Val. Loss: 0.069
2024-10-13 17:44 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:44 - INFO - 	 PR-AUC: 0.851
2024-10-13 17:44 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 17:44 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 17:44 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:44 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 17:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 17:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 17:44 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 17:44 - INFO - ---------------------------------------------
2024-10-13 17:44 - INFO - ---------------------------------------------
2024-10-13 17:44 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 17:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98526
2024-10-13 17:44 - INFO - 	 Train Loss: 0.074
2024-10-13 17:44 - INFO - 	 Val. Loss: 0.066
2024-10-13 17:44 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:44 - INFO - 	 PR-AUC: 0.868
2024-10-13 17:44 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:44 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 17:44 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:44 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 17:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 17:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-13 17:44 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 17:44 - INFO - ---------------------------------------------
2024-10-13 17:46 - INFO - Fit the preprocessing pipeline
2024-10-13 17:46 - INFO - Training using device: cuda
2024-10-13 17:46 - INFO - Creating generators
2024-10-13 17:46 - INFO - The model has 651,257 trainable parameters
2024-10-13 17:46 - INFO - * Model:
2024-10-13 17:46 - INFO - * -----------
2024-10-13 17:46 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 17:46 - INFO - * -----------
2024-10-13 17:46 - INFO - Evaluating model based on: rocauc
2024-10-13 17:46 - INFO - Training..

2024-10-13 17:46 - INFO - ---------------------------------------------
2024-10-13 17:46 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 17:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96972
2024-10-13 17:46 - INFO - 	 Train Loss: 0.185
2024-10-13 17:46 - INFO - 	 Val. Loss: 0.098
2024-10-13 17:46 - INFO - 	 ROC-AUC: 0.970
2024-10-13 17:46 - INFO - 	 PR-AUC: 0.724
2024-10-13 17:46 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-13 17:46 - INFO - 	 Best Val. Loss: 0.098
2024-10-13 17:46 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 17:46 - INFO - 	 Best PR-AUC: 0.724
2024-10-13 17:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-13 17:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.706
2024-10-13 17:46 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-13 17:46 - INFO - ---------------------------------------------
2024-10-13 17:47 - INFO - ---------------------------------------------
2024-10-13 17:47 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 17:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97913
2024-10-13 17:47 - INFO - 	 Train Loss: 0.102
2024-10-13 17:47 - INFO - 	 Val. Loss: 0.081
2024-10-13 17:47 - INFO - 	 ROC-AUC: 0.979
2024-10-13 17:47 - INFO - 	 PR-AUC: 0.788
2024-10-13 17:47 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 17:47 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 17:47 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 17:47 - INFO - 	 Best PR-AUC: 0.788
2024-10-13 17:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 17:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-13 17:47 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-13 17:47 - INFO - ---------------------------------------------
2024-10-13 17:48 - INFO - ---------------------------------------------
2024-10-13 17:48 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 17:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98116
2024-10-13 17:48 - INFO - 	 Train Loss: 0.090
2024-10-13 17:48 - INFO - 	 Val. Loss: 0.088
2024-10-13 17:48 - INFO - 	 ROC-AUC: 0.981
2024-10-13 17:48 - INFO - 	 PR-AUC: 0.823
2024-10-13 17:48 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 17:48 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 17:48 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 17:48 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 17:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 17:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-13 17:48 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 17:48 - INFO - ---------------------------------------------
2024-10-13 17:48 - INFO - ---------------------------------------------
2024-10-13 17:48 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 17:48 - INFO - 	 Train Loss: 0.084
2024-10-13 17:48 - INFO - 	 Val. Loss: 0.080
2024-10-13 17:48 - INFO - 	 ROC-AUC: 0.980
2024-10-13 17:48 - INFO - 	 PR-AUC: 0.815
2024-10-13 17:48 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 17:48 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 17:48 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 17:48 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 17:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 17:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-13 17:48 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 17:48 - INFO - ---------------------------------------------
2024-10-13 17:49 - INFO - ---------------------------------------------
2024-10-13 17:49 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 17:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9831
2024-10-13 17:49 - INFO - 	 Train Loss: 0.081
2024-10-13 17:49 - INFO - 	 Val. Loss: 0.072
2024-10-13 17:49 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:49 - INFO - 	 PR-AUC: 0.852
2024-10-13 17:49 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:49 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 17:49 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:49 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 17:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 17:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 17:49 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 17:49 - INFO - ---------------------------------------------
2024-10-13 17:49 - INFO - ---------------------------------------------
2024-10-13 17:49 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 17:49 - INFO - 	 Train Loss: 0.078
2024-10-13 17:49 - INFO - 	 Val. Loss: 0.075
2024-10-13 17:49 - INFO - 	 ROC-AUC: 0.982
2024-10-13 17:49 - INFO - 	 PR-AUC: 0.828
2024-10-13 17:49 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 17:49 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 17:49 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:49 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 17:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 17:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 17:49 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 17:49 - INFO - ---------------------------------------------
2024-10-13 17:50 - INFO - ---------------------------------------------
2024-10-13 17:50 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 17:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98499
2024-10-13 17:50 - INFO - 	 Train Loss: 0.078
2024-10-13 17:50 - INFO - 	 Val. Loss: 0.067
2024-10-13 17:50 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:50 - INFO - 	 PR-AUC: 0.853
2024-10-13 17:50 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 17:50 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 17:50 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:50 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 17:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 17:50 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 17:50 - INFO - ---------------------------------------------
2024-10-13 17:50 - INFO - ---------------------------------------------
2024-10-13 17:50 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 17:50 - INFO - 	 Train Loss: 0.076
2024-10-13 17:50 - INFO - 	 Val. Loss: 0.070
2024-10-13 17:50 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:50 - INFO - 	 PR-AUC: 0.848
2024-10-13 17:50 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 17:50 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 17:50 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:50 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 17:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 17:50 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 17:50 - INFO - ---------------------------------------------
2024-10-13 17:51 - INFO - ---------------------------------------------
2024-10-13 17:51 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 17:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98581
2024-10-13 17:51 - INFO - 	 Train Loss: 0.076
2024-10-13 17:51 - INFO - 	 Val. Loss: 0.065
2024-10-13 17:51 - INFO - 	 ROC-AUC: 0.986
2024-10-13 17:51 - INFO - 	 PR-AUC: 0.869
2024-10-13 17:51 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 17:51 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 17:51 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 17:51 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 17:51 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:51 - INFO - ---------------------------------------------
2024-10-13 17:51 - INFO - ---------------------------------------------
2024-10-13 17:51 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 17:51 - INFO - 	 Train Loss: 0.073
2024-10-13 17:51 - INFO - 	 Val. Loss: 0.068
2024-10-13 17:51 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:51 - INFO - 	 PR-AUC: 0.857
2024-10-13 17:51 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 17:51 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 17:51 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 17:51 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 17:51 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 17:51 - INFO - ---------------------------------------------
2024-10-13 17:53 - INFO - Fit the preprocessing pipeline
2024-10-13 17:53 - INFO - Training using device: cuda
2024-10-13 17:53 - INFO - Creating generators
2024-10-13 17:53 - INFO - The model has 651,257 trainable parameters
2024-10-13 17:53 - INFO - * Model:
2024-10-13 17:53 - INFO - * -----------
2024-10-13 17:53 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 17:53 - INFO - * -----------
2024-10-13 17:53 - INFO - Evaluating model based on: rocauc
2024-10-13 17:53 - INFO - Training..

2024-10-13 17:53 - INFO - ---------------------------------------------
2024-10-13 17:53 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 17:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97041
2024-10-13 17:53 - INFO - 	 Train Loss: 0.172
2024-10-13 17:53 - INFO - 	 Val. Loss: 0.104
2024-10-13 17:53 - INFO - 	 ROC-AUC: 0.970
2024-10-13 17:53 - INFO - 	 PR-AUC: 0.705
2024-10-13 17:53 - INFO - 	 Recall for 0.4 precision: 0.952
2024-10-13 17:53 - INFO - 	 Best Val. Loss: 0.104
2024-10-13 17:53 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 17:53 - INFO - 	 Best PR-AUC: 0.705
2024-10-13 17:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 17:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.713
2024-10-13 17:53 - INFO - 	 Best Recall for 0.4 precision: 0.952
2024-10-13 17:53 - INFO - ---------------------------------------------
2024-10-13 17:54 - INFO - ---------------------------------------------
2024-10-13 17:54 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 17:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97724
2024-10-13 17:54 - INFO - 	 Train Loss: 0.098
2024-10-13 17:54 - INFO - 	 Val. Loss: 0.090
2024-10-13 17:54 - INFO - 	 ROC-AUC: 0.977
2024-10-13 17:54 - INFO - 	 PR-AUC: 0.796
2024-10-13 17:54 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 17:54 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 17:54 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 17:54 - INFO - 	 Best PR-AUC: 0.796
2024-10-13 17:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 17:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-13 17:54 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 17:54 - INFO - ---------------------------------------------
2024-10-13 17:54 - INFO - ---------------------------------------------
2024-10-13 17:54 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 17:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98097
2024-10-13 17:54 - INFO - 	 Train Loss: 0.089
2024-10-13 17:54 - INFO - 	 Val. Loss: 0.080
2024-10-13 17:54 - INFO - 	 ROC-AUC: 0.981
2024-10-13 17:54 - INFO - 	 PR-AUC: 0.825
2024-10-13 17:54 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 17:54 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 17:54 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 17:54 - INFO - 	 Best PR-AUC: 0.825
2024-10-13 17:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 17:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-13 17:54 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 17:54 - INFO - ---------------------------------------------
2024-10-13 17:55 - INFO - ---------------------------------------------
2024-10-13 17:55 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 17:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98274
2024-10-13 17:55 - INFO - 	 Train Loss: 0.085
2024-10-13 17:55 - INFO - 	 Val. Loss: 0.073
2024-10-13 17:55 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:55 - INFO - 	 PR-AUC: 0.839
2024-10-13 17:55 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:55 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 17:55 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 17:55 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 17:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-13 17:55 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 17:55 - INFO - ---------------------------------------------
2024-10-13 17:56 - INFO - ---------------------------------------------
2024-10-13 17:56 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 17:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98352
2024-10-13 17:56 - INFO - 	 Train Loss: 0.083
2024-10-13 17:56 - INFO - 	 Val. Loss: 0.076
2024-10-13 17:56 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:56 - INFO - 	 PR-AUC: 0.838
2024-10-13 17:56 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 17:56 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 17:56 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:56 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 17:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-13 17:56 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 17:56 - INFO - ---------------------------------------------
2024-10-13 17:56 - INFO - ---------------------------------------------
2024-10-13 17:56 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 17:56 - INFO - 	 Train Loss: 0.078
2024-10-13 17:56 - INFO - 	 Val. Loss: 0.073
2024-10-13 17:56 - INFO - 	 ROC-AUC: 0.982
2024-10-13 17:56 - INFO - 	 PR-AUC: 0.844
2024-10-13 17:56 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 17:56 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 17:56 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:56 - INFO - 	 Best PR-AUC: 0.844
2024-10-13 17:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 17:56 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 17:56 - INFO - ---------------------------------------------
2024-10-13 17:57 - INFO - ---------------------------------------------
2024-10-13 17:57 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 17:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9844
2024-10-13 17:57 - INFO - 	 Train Loss: 0.078
2024-10-13 17:57 - INFO - 	 Val. Loss: 0.068
2024-10-13 17:57 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:57 - INFO - 	 PR-AUC: 0.855
2024-10-13 17:57 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:57 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 17:57 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:57 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 17:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 17:57 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:57 - INFO - ---------------------------------------------
2024-10-13 17:57 - INFO - ---------------------------------------------
2024-10-13 17:57 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 17:57 - INFO - 	 Train Loss: 0.077
2024-10-13 17:57 - INFO - 	 Val. Loss: 0.069
2024-10-13 17:57 - INFO - 	 ROC-AUC: 0.984
2024-10-13 17:57 - INFO - 	 PR-AUC: 0.854
2024-10-13 17:57 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 17:57 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 17:57 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:57 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 17:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 17:57 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:57 - INFO - ---------------------------------------------
2024-10-13 17:58 - INFO - ---------------------------------------------
2024-10-13 17:58 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 17:58 - INFO - 	 Train Loss: 0.075
2024-10-13 17:58 - INFO - 	 Val. Loss: 0.069
2024-10-13 17:58 - INFO - 	 ROC-AUC: 0.983
2024-10-13 17:58 - INFO - 	 PR-AUC: 0.854
2024-10-13 17:58 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 17:58 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 17:58 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 17:58 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 17:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 17:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 17:58 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 17:58 - INFO - ---------------------------------------------
2024-10-13 17:58 - INFO - ---------------------------------------------
2024-10-13 17:58 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 17:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98519
2024-10-13 17:58 - INFO - 	 Train Loss: 0.073
2024-10-13 17:58 - INFO - 	 Val. Loss: 0.066
2024-10-13 17:58 - INFO - 	 ROC-AUC: 0.985
2024-10-13 17:58 - INFO - 	 PR-AUC: 0.866
2024-10-13 17:58 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 17:58 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 17:58 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 17:58 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 17:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 17:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 17:58 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 17:58 - INFO - ---------------------------------------------
2024-10-13 18:00 - INFO - Fit the preprocessing pipeline
2024-10-13 18:00 - INFO - Training using device: cuda
2024-10-13 18:00 - INFO - Creating generators
2024-10-13 18:00 - INFO - The model has 651,257 trainable parameters
2024-10-13 18:00 - INFO - * Model:
2024-10-13 18:00 - INFO - * -----------
2024-10-13 18:00 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 18:00 - INFO - * -----------
2024-10-13 18:00 - INFO - Evaluating model based on: rocauc
2024-10-13 18:00 - INFO - Training..

2024-10-13 18:00 - INFO - ---------------------------------------------
2024-10-13 18:00 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 18:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.967
2024-10-13 18:00 - INFO - 	 Train Loss: 0.184
2024-10-13 18:00 - INFO - 	 Val. Loss: 0.103
2024-10-13 18:00 - INFO - 	 ROC-AUC: 0.967
2024-10-13 18:00 - INFO - 	 PR-AUC: 0.703
2024-10-13 18:00 - INFO - 	 Recall for 0.4 precision: 0.928
2024-10-13 18:00 - INFO - 	 Best Val. Loss: 0.103
2024-10-13 18:00 - INFO - 	 Best ROC-AUC: 0.967
2024-10-13 18:00 - INFO - 	 Best PR-AUC: 0.703
2024-10-13 18:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 18:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.701
2024-10-13 18:00 - INFO - 	 Best Recall for 0.4 precision: 0.928
2024-10-13 18:00 - INFO - ---------------------------------------------
2024-10-13 18:01 - INFO - ---------------------------------------------
2024-10-13 18:01 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-13 18:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97682
2024-10-13 18:01 - INFO - 	 Train Loss: 0.100
2024-10-13 18:01 - INFO - 	 Val. Loss: 0.097
2024-10-13 18:01 - INFO - 	 ROC-AUC: 0.977
2024-10-13 18:01 - INFO - 	 PR-AUC: 0.790
2024-10-13 18:01 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 18:01 - INFO - 	 Best Val. Loss: 0.097
2024-10-13 18:01 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 18:01 - INFO - 	 Best PR-AUC: 0.790
2024-10-13 18:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 18:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.769
2024-10-13 18:01 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 18:01 - INFO - ---------------------------------------------
2024-10-13 18:01 - INFO - ---------------------------------------------
2024-10-13 18:01 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 18:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98148
2024-10-13 18:01 - INFO - 	 Train Loss: 0.089
2024-10-13 18:01 - INFO - 	 Val. Loss: 0.082
2024-10-13 18:01 - INFO - 	 ROC-AUC: 0.981
2024-10-13 18:01 - INFO - 	 PR-AUC: 0.814
2024-10-13 18:01 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:01 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 18:01 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 18:01 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 18:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 18:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-10-13 18:01 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 18:01 - INFO - ---------------------------------------------
2024-10-13 18:02 - INFO - ---------------------------------------------
2024-10-13 18:02 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-13 18:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98159
2024-10-13 18:02 - INFO - 	 Train Loss: 0.085
2024-10-13 18:02 - INFO - 	 Val. Loss: 0.075
2024-10-13 18:02 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:02 - INFO - 	 PR-AUC: 0.830
2024-10-13 18:02 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 18:02 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 18:02 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 18:02 - INFO - 	 Best PR-AUC: 0.830
2024-10-13 18:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 18:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 18:02 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:02 - INFO - ---------------------------------------------
2024-10-13 18:02 - INFO - ---------------------------------------------
2024-10-13 18:02 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 18:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98261
2024-10-13 18:02 - INFO - 	 Train Loss: 0.081
2024-10-13 18:02 - INFO - 	 Val. Loss: 0.071
2024-10-13 18:02 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:02 - INFO - 	 PR-AUC: 0.850
2024-10-13 18:02 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 18:02 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 18:02 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 18:02 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 18:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 18:02 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:02 - INFO - ---------------------------------------------
2024-10-13 18:03 - INFO - ---------------------------------------------
2024-10-13 18:03 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 18:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98322
2024-10-13 18:03 - INFO - 	 Train Loss: 0.080
2024-10-13 18:03 - INFO - 	 Val. Loss: 0.070
2024-10-13 18:03 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:03 - INFO - 	 PR-AUC: 0.853
2024-10-13 18:03 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:03 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:03 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 18:03 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 18:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-13 18:03 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:03 - INFO - ---------------------------------------------
2024-10-13 18:04 - INFO - ---------------------------------------------
2024-10-13 18:04 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 18:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9842
2024-10-13 18:04 - INFO - 	 Train Loss: 0.077
2024-10-13 18:04 - INFO - 	 Val. Loss: 0.069
2024-10-13 18:04 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:04 - INFO - 	 PR-AUC: 0.850
2024-10-13 18:04 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 18:04 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 18:04 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:04 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 18:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-13 18:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 18:04 - INFO - ---------------------------------------------
2024-10-13 18:04 - INFO - ---------------------------------------------
2024-10-13 18:04 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 18:04 - INFO - 	 Train Loss: 0.076
2024-10-13 18:04 - INFO - 	 Val. Loss: 0.073
2024-10-13 18:04 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:04 - INFO - 	 PR-AUC: 0.828
2024-10-13 18:04 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 18:04 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 18:04 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:04 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 18:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-13 18:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 18:04 - INFO - ---------------------------------------------
2024-10-13 18:05 - INFO - ---------------------------------------------
2024-10-13 18:05 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 18:05 - INFO - 	 Train Loss: 0.074
2024-10-13 18:05 - INFO - 	 Val. Loss: 0.071
2024-10-13 18:05 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:05 - INFO - 	 PR-AUC: 0.846
2024-10-13 18:05 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 18:05 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 18:05 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:05 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 18:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-13 18:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 18:05 - INFO - ---------------------------------------------
2024-10-13 18:05 - INFO - ---------------------------------------------
2024-10-13 18:05 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 18:05 - INFO - 	 Train Loss: 0.073
2024-10-13 18:05 - INFO - 	 Val. Loss: 0.070
2024-10-13 18:05 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:05 - INFO - 	 PR-AUC: 0.847
2024-10-13 18:05 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 18:05 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 18:05 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:05 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 18:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-13 18:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 18:05 - INFO - ---------------------------------------------
2024-10-13 18:07 - INFO - Fit the preprocessing pipeline
2024-10-13 18:07 - INFO - Training using device: cuda
2024-10-13 18:07 - INFO - Creating generators
2024-10-13 18:07 - INFO - The model has 651,257 trainable parameters
2024-10-13 18:07 - INFO - * Model:
2024-10-13 18:07 - INFO - * -----------
2024-10-13 18:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 18:07 - INFO - * -----------
2024-10-13 18:07 - INFO - Evaluating model based on: rocauc
2024-10-13 18:07 - INFO - Training..

2024-10-13 18:07 - INFO - ---------------------------------------------
2024-10-13 18:07 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 18:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96916
2024-10-13 18:07 - INFO - 	 Train Loss: 0.191
2024-10-13 18:07 - INFO - 	 Val. Loss: 0.103
2024-10-13 18:07 - INFO - 	 ROC-AUC: 0.969
2024-10-13 18:07 - INFO - 	 PR-AUC: 0.718
2024-10-13 18:07 - INFO - 	 Recall for 0.4 precision: 0.945
2024-10-13 18:07 - INFO - 	 Best Val. Loss: 0.103
2024-10-13 18:07 - INFO - 	 Best ROC-AUC: 0.969
2024-10-13 18:07 - INFO - 	 Best PR-AUC: 0.718
2024-10-13 18:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-13 18:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.714
2024-10-13 18:07 - INFO - 	 Best Recall for 0.4 precision: 0.945
2024-10-13 18:07 - INFO - ---------------------------------------------
2024-10-13 18:08 - INFO - ---------------------------------------------
2024-10-13 18:08 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 18:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97819
2024-10-13 18:08 - INFO - 	 Train Loss: 0.103
2024-10-13 18:08 - INFO - 	 Val. Loss: 0.086
2024-10-13 18:08 - INFO - 	 ROC-AUC: 0.978
2024-10-13 18:08 - INFO - 	 PR-AUC: 0.813
2024-10-13 18:08 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 18:08 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 18:08 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 18:08 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 18:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 18:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-13 18:08 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 18:08 - INFO - ---------------------------------------------
2024-10-13 18:08 - INFO - ---------------------------------------------
2024-10-13 18:08 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 18:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97996
2024-10-13 18:08 - INFO - 	 Train Loss: 0.090
2024-10-13 18:08 - INFO - 	 Val. Loss: 0.082
2024-10-13 18:08 - INFO - 	 ROC-AUC: 0.980
2024-10-13 18:08 - INFO - 	 PR-AUC: 0.834
2024-10-13 18:08 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 18:08 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 18:08 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 18:08 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 18:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 18:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 18:08 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 18:08 - INFO - ---------------------------------------------
2024-10-13 18:09 - INFO - ---------------------------------------------
2024-10-13 18:09 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 18:09 - INFO - 	 Train Loss: 0.085
2024-10-13 18:09 - INFO - 	 Val. Loss: 0.078
2024-10-13 18:09 - INFO - 	 ROC-AUC: 0.980
2024-10-13 18:09 - INFO - 	 PR-AUC: 0.823
2024-10-13 18:09 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 18:09 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 18:09 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 18:09 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 18:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 18:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 18:09 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 18:09 - INFO - ---------------------------------------------
2024-10-13 18:09 - INFO - ---------------------------------------------
2024-10-13 18:09 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 18:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98011
2024-10-13 18:09 - INFO - 	 Train Loss: 0.083
2024-10-13 18:09 - INFO - 	 Val. Loss: 0.084
2024-10-13 18:09 - INFO - 	 ROC-AUC: 0.980
2024-10-13 18:09 - INFO - 	 PR-AUC: 0.825
2024-10-13 18:09 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:09 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 18:09 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 18:09 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 18:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 18:09 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 18:09 - INFO - ---------------------------------------------
2024-10-13 18:10 - INFO - ---------------------------------------------
2024-10-13 18:10 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 18:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98398
2024-10-13 18:10 - INFO - 	 Train Loss: 0.079
2024-10-13 18:10 - INFO - 	 Val. Loss: 0.069
2024-10-13 18:10 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:10 - INFO - 	 PR-AUC: 0.860
2024-10-13 18:10 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 18:10 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 18:10 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:10 - INFO - 	 Best PR-AUC: 0.860
2024-10-13 18:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 18:10 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 18:10 - INFO - ---------------------------------------------
2024-10-13 18:10 - INFO - ---------------------------------------------
2024-10-13 18:10 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 18:10 - INFO - 	 Train Loss: 0.077
2024-10-13 18:10 - INFO - 	 Val. Loss: 0.070
2024-10-13 18:10 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:10 - INFO - 	 PR-AUC: 0.859
2024-10-13 18:10 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 18:10 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 18:10 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:10 - INFO - 	 Best PR-AUC: 0.860
2024-10-13 18:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 18:10 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 18:10 - INFO - ---------------------------------------------
2024-10-13 18:11 - INFO - ---------------------------------------------
2024-10-13 18:11 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 18:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98431
2024-10-13 18:11 - INFO - 	 Train Loss: 0.076
2024-10-13 18:11 - INFO - 	 Val. Loss: 0.068
2024-10-13 18:11 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:11 - INFO - 	 PR-AUC: 0.865
2024-10-13 18:11 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:11 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 18:11 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:11 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 18:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 18:11 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 18:11 - INFO - ---------------------------------------------
2024-10-13 18:11 - INFO - ---------------------------------------------
2024-10-13 18:11 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 18:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98476
2024-10-13 18:11 - INFO - 	 Train Loss: 0.076
2024-10-13 18:11 - INFO - 	 Val. Loss: 0.068
2024-10-13 18:11 - INFO - 	 ROC-AUC: 0.985
2024-10-13 18:11 - INFO - 	 PR-AUC: 0.857
2024-10-13 18:11 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 18:11 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 18:11 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:11 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 18:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 18:11 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 18:11 - INFO - ---------------------------------------------
2024-10-13 18:12 - INFO - ---------------------------------------------
2024-10-13 18:12 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 18:12 - INFO - 	 Train Loss: 0.074
2024-10-13 18:12 - INFO - 	 Val. Loss: 0.076
2024-10-13 18:12 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:12 - INFO - 	 PR-AUC: 0.846
2024-10-13 18:12 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:12 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 18:12 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:12 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 18:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 18:12 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 18:12 - INFO - ---------------------------------------------
2024-10-13 18:13 - INFO - Fit the preprocessing pipeline
2024-10-13 18:13 - INFO - Training using device: cuda
2024-10-13 18:13 - INFO - Creating generators
2024-10-13 18:13 - INFO - The model has 651,257 trainable parameters
2024-10-13 18:13 - INFO - * Model:
2024-10-13 18:13 - INFO - * -----------
2024-10-13 18:13 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 18:13 - INFO - * -----------
2024-10-13 18:13 - INFO - Evaluating model based on: rocauc
2024-10-13 18:13 - INFO - Training..

2024-10-13 18:14 - INFO - ---------------------------------------------
2024-10-13 18:14 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 18:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96567
2024-10-13 18:14 - INFO - 	 Train Loss: 0.189
2024-10-13 18:14 - INFO - 	 Val. Loss: 0.103
2024-10-13 18:14 - INFO - 	 ROC-AUC: 0.966
2024-10-13 18:14 - INFO - 	 PR-AUC: 0.713
2024-10-13 18:14 - INFO - 	 Recall for 0.4 precision: 0.924
2024-10-13 18:14 - INFO - 	 Best Val. Loss: 0.103
2024-10-13 18:14 - INFO - 	 Best ROC-AUC: 0.966
2024-10-13 18:14 - INFO - 	 Best PR-AUC: 0.713
2024-10-13 18:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 18:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.712
2024-10-13 18:14 - INFO - 	 Best Recall for 0.4 precision: 0.924
2024-10-13 18:14 - INFO - ---------------------------------------------
2024-10-13 18:15 - INFO - ---------------------------------------------
2024-10-13 18:15 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 18:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97816
2024-10-13 18:15 - INFO - 	 Train Loss: 0.101
2024-10-13 18:15 - INFO - 	 Val. Loss: 0.082
2024-10-13 18:15 - INFO - 	 ROC-AUC: 0.978
2024-10-13 18:15 - INFO - 	 PR-AUC: 0.807
2024-10-13 18:15 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 18:15 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 18:15 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 18:15 - INFO - 	 Best PR-AUC: 0.807
2024-10-13 18:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 18:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-13 18:15 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 18:15 - INFO - ---------------------------------------------
2024-10-13 18:15 - INFO - ---------------------------------------------
2024-10-13 18:15 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 18:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98047
2024-10-13 18:15 - INFO - 	 Train Loss: 0.092
2024-10-13 18:15 - INFO - 	 Val. Loss: 0.085
2024-10-13 18:15 - INFO - 	 ROC-AUC: 0.980
2024-10-13 18:15 - INFO - 	 PR-AUC: 0.826
2024-10-13 18:15 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 18:15 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 18:15 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 18:15 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 18:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 18:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.792
2024-10-13 18:15 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 18:15 - INFO - ---------------------------------------------
2024-10-13 18:16 - INFO - ---------------------------------------------
2024-10-13 18:16 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 18:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98182
2024-10-13 18:16 - INFO - 	 Train Loss: 0.087
2024-10-13 18:16 - INFO - 	 Val. Loss: 0.079
2024-10-13 18:16 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:16 - INFO - 	 PR-AUC: 0.837
2024-10-13 18:16 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:16 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 18:16 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 18:16 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 18:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 18:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-13 18:16 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 18:16 - INFO - ---------------------------------------------
2024-10-13 18:16 - INFO - ---------------------------------------------
2024-10-13 18:16 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 18:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98282
2024-10-13 18:16 - INFO - 	 Train Loss: 0.082
2024-10-13 18:16 - INFO - 	 Val. Loss: 0.072
2024-10-13 18:16 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:16 - INFO - 	 PR-AUC: 0.851
2024-10-13 18:16 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 18:16 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 18:16 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 18:16 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 18:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 18:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 18:16 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 18:16 - INFO - ---------------------------------------------
2024-10-13 18:17 - INFO - ---------------------------------------------
2024-10-13 18:17 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 18:17 - INFO - 	 Train Loss: 0.081
2024-10-13 18:17 - INFO - 	 Val. Loss: 0.071
2024-10-13 18:17 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:17 - INFO - 	 PR-AUC: 0.859
2024-10-13 18:17 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 18:17 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 18:17 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 18:17 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 18:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 18:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 18:17 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 18:17 - INFO - ---------------------------------------------
2024-10-13 18:17 - INFO - ---------------------------------------------
2024-10-13 18:17 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 18:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98317
2024-10-13 18:17 - INFO - 	 Train Loss: 0.078
2024-10-13 18:17 - INFO - 	 Val. Loss: 0.072
2024-10-13 18:17 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:17 - INFO - 	 PR-AUC: 0.845
2024-10-13 18:17 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 18:17 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 18:17 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 18:17 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 18:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 18:17 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 18:17 - INFO - ---------------------------------------------
2024-10-13 18:18 - INFO - ---------------------------------------------
2024-10-13 18:18 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 18:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98442
2024-10-13 18:18 - INFO - 	 Train Loss: 0.075
2024-10-13 18:18 - INFO - 	 Val. Loss: 0.069
2024-10-13 18:18 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:18 - INFO - 	 PR-AUC: 0.858
2024-10-13 18:18 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 18:18 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 18:18 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:18 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 18:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 18:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 18:18 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 18:18 - INFO - ---------------------------------------------
2024-10-13 18:18 - INFO - ---------------------------------------------
2024-10-13 18:18 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 18:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98533
2024-10-13 18:18 - INFO - 	 Train Loss: 0.075
2024-10-13 18:18 - INFO - 	 Val. Loss: 0.067
2024-10-13 18:18 - INFO - 	 ROC-AUC: 0.985
2024-10-13 18:18 - INFO - 	 PR-AUC: 0.864
2024-10-13 18:18 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 18:18 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 18:18 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:18 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 18:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 18:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-13 18:18 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 18:18 - INFO - ---------------------------------------------
2024-10-13 18:19 - INFO - ---------------------------------------------
2024-10-13 18:19 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 18:19 - INFO - 	 Train Loss: 0.073
2024-10-13 18:19 - INFO - 	 Val. Loss: 0.072
2024-10-13 18:19 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:19 - INFO - 	 PR-AUC: 0.840
2024-10-13 18:19 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:19 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 18:19 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:19 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 18:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 18:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-13 18:19 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 18:19 - INFO - ---------------------------------------------
2024-10-13 18:20 - INFO - Fit the preprocessing pipeline
2024-10-13 18:20 - INFO - Training using device: cuda
2024-10-13 18:20 - INFO - Creating generators
2024-10-13 18:20 - INFO - The model has 651,257 trainable parameters
2024-10-13 18:20 - INFO - * Model:
2024-10-13 18:20 - INFO - * -----------
2024-10-13 18:20 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 18:20 - INFO - * -----------
2024-10-13 18:20 - INFO - Evaluating model based on: rocauc
2024-10-13 18:20 - INFO - Training..

2024-10-13 18:21 - INFO - ---------------------------------------------
2024-10-13 18:21 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 18:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9688
2024-10-13 18:21 - INFO - 	 Train Loss: 0.177
2024-10-13 18:21 - INFO - 	 Val. Loss: 0.106
2024-10-13 18:21 - INFO - 	 ROC-AUC: 0.969
2024-10-13 18:21 - INFO - 	 PR-AUC: 0.727
2024-10-13 18:21 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-13 18:21 - INFO - 	 Best Val. Loss: 0.106
2024-10-13 18:21 - INFO - 	 Best ROC-AUC: 0.969
2024-10-13 18:21 - INFO - 	 Best PR-AUC: 0.727
2024-10-13 18:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 18:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.714
2024-10-13 18:21 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-13 18:21 - INFO - ---------------------------------------------
2024-10-13 18:21 - INFO - ---------------------------------------------
2024-10-13 18:21 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 18:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97621
2024-10-13 18:21 - INFO - 	 Train Loss: 0.100
2024-10-13 18:21 - INFO - 	 Val. Loss: 0.090
2024-10-13 18:21 - INFO - 	 ROC-AUC: 0.976
2024-10-13 18:21 - INFO - 	 PR-AUC: 0.773
2024-10-13 18:21 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 18:21 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 18:21 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 18:21 - INFO - 	 Best PR-AUC: 0.773
2024-10-13 18:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 18:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-10-13 18:21 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 18:21 - INFO - ---------------------------------------------
2024-10-13 18:22 - INFO - ---------------------------------------------
2024-10-13 18:22 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 18:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98013
2024-10-13 18:22 - INFO - 	 Train Loss: 0.090
2024-10-13 18:22 - INFO - 	 Val. Loss: 0.079
2024-10-13 18:22 - INFO - 	 ROC-AUC: 0.980
2024-10-13 18:22 - INFO - 	 PR-AUC: 0.823
2024-10-13 18:22 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 18:22 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 18:22 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 18:22 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 18:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 18:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.780
2024-10-13 18:22 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 18:22 - INFO - ---------------------------------------------
2024-10-13 18:22 - INFO - ---------------------------------------------
2024-10-13 18:22 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 18:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98141
2024-10-13 18:22 - INFO - 	 Train Loss: 0.083
2024-10-13 18:22 - INFO - 	 Val. Loss: 0.075
2024-10-13 18:22 - INFO - 	 ROC-AUC: 0.981
2024-10-13 18:22 - INFO - 	 PR-AUC: 0.828
2024-10-13 18:22 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 18:22 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 18:22 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 18:22 - INFO - 	 Best PR-AUC: 0.828
2024-10-13 18:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 18:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-13 18:22 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 18:22 - INFO - ---------------------------------------------
2024-10-13 18:23 - INFO - ---------------------------------------------
2024-10-13 18:23 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 18:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98207
2024-10-13 18:23 - INFO - 	 Train Loss: 0.082
2024-10-13 18:23 - INFO - 	 Val. Loss: 0.074
2024-10-13 18:23 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:23 - INFO - 	 PR-AUC: 0.835
2024-10-13 18:23 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 18:23 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 18:23 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 18:23 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 18:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 18:23 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 18:23 - INFO - ---------------------------------------------
2024-10-13 18:24 - INFO - ---------------------------------------------
2024-10-13 18:24 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 18:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98385
2024-10-13 18:24 - INFO - 	 Train Loss: 0.079
2024-10-13 18:24 - INFO - 	 Val. Loss: 0.070
2024-10-13 18:24 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:24 - INFO - 	 PR-AUC: 0.861
2024-10-13 18:24 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 18:24 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:24 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:24 - INFO - 	 Best PR-AUC: 0.861
2024-10-13 18:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 18:24 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 18:24 - INFO - ---------------------------------------------
2024-10-13 18:24 - INFO - ---------------------------------------------
2024-10-13 18:24 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 18:24 - INFO - 	 Train Loss: 0.077
2024-10-13 18:24 - INFO - 	 Val. Loss: 0.072
2024-10-13 18:24 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:24 - INFO - 	 PR-AUC: 0.847
2024-10-13 18:24 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 18:24 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:24 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:24 - INFO - 	 Best PR-AUC: 0.861
2024-10-13 18:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 18:24 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 18:24 - INFO - ---------------------------------------------
2024-10-13 18:25 - INFO - ---------------------------------------------
2024-10-13 18:25 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 18:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98414
2024-10-13 18:25 - INFO - 	 Train Loss: 0.076
2024-10-13 18:25 - INFO - 	 Val. Loss: 0.071
2024-10-13 18:25 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:25 - INFO - 	 PR-AUC: 0.851
2024-10-13 18:25 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 18:25 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:25 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:25 - INFO - 	 Best PR-AUC: 0.861
2024-10-13 18:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 18:25 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 18:25 - INFO - ---------------------------------------------
2024-10-13 18:25 - INFO - ---------------------------------------------
2024-10-13 18:25 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 18:25 - INFO - 	 Train Loss: 0.074
2024-10-13 18:25 - INFO - 	 Val. Loss: 0.068
2024-10-13 18:25 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:25 - INFO - 	 PR-AUC: 0.861
2024-10-13 18:25 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 18:25 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 18:25 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:25 - INFO - 	 Best PR-AUC: 0.861
2024-10-13 18:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 18:25 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 18:25 - INFO - ---------------------------------------------
2024-10-13 18:26 - INFO - ---------------------------------------------
2024-10-13 18:26 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 18:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98659
2024-10-13 18:26 - INFO - 	 Train Loss: 0.072
2024-10-13 18:26 - INFO - 	 Val. Loss: 0.065
2024-10-13 18:26 - INFO - 	 ROC-AUC: 0.987
2024-10-13 18:26 - INFO - 	 PR-AUC: 0.861
2024-10-13 18:26 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 18:26 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 18:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 18:26 - INFO - 	 Best PR-AUC: 0.861
2024-10-13 18:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 18:26 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 18:26 - INFO - ---------------------------------------------
2024-10-13 18:27 - INFO - Fit the preprocessing pipeline
2024-10-13 18:27 - INFO - Training using device: cuda
2024-10-13 18:27 - INFO - Creating generators
2024-10-13 18:27 - INFO - The model has 651,257 trainable parameters
2024-10-13 18:27 - INFO - * Model:
2024-10-13 18:27 - INFO - * -----------
2024-10-13 18:27 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 18:27 - INFO - * -----------
2024-10-13 18:27 - INFO - Evaluating model based on: rocauc
2024-10-13 18:27 - INFO - Training..

2024-10-13 18:28 - INFO - ---------------------------------------------
2024-10-13 18:28 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 18:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95457
2024-10-13 18:28 - INFO - 	 Train Loss: 0.206
2024-10-13 18:28 - INFO - 	 Val. Loss: 0.168
2024-10-13 18:28 - INFO - 	 ROC-AUC: 0.955
2024-10-13 18:28 - INFO - 	 PR-AUC: 0.622
2024-10-13 18:28 - INFO - 	 Recall for 0.4 precision: 0.868
2024-10-13 18:28 - INFO - 	 Best Val. Loss: 0.168
2024-10-13 18:28 - INFO - 	 Best ROC-AUC: 0.955
2024-10-13 18:28 - INFO - 	 Best PR-AUC: 0.622
2024-10-13 18:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-10-13 18:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.623
2024-10-13 18:28 - INFO - 	 Best Recall for 0.4 precision: 0.868
2024-10-13 18:28 - INFO - ---------------------------------------------
2024-10-13 18:28 - INFO - ---------------------------------------------
2024-10-13 18:28 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 18:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97594
2024-10-13 18:28 - INFO - 	 Train Loss: 0.106
2024-10-13 18:28 - INFO - 	 Val. Loss: 0.092
2024-10-13 18:28 - INFO - 	 ROC-AUC: 0.976
2024-10-13 18:28 - INFO - 	 PR-AUC: 0.793
2024-10-13 18:28 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 18:28 - INFO - 	 Best Val. Loss: 0.092
2024-10-13 18:28 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 18:28 - INFO - 	 Best PR-AUC: 0.793
2024-10-13 18:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 18:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-10-13 18:28 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 18:28 - INFO - ---------------------------------------------
2024-10-13 18:29 - INFO - ---------------------------------------------
2024-10-13 18:29 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 18:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9782
2024-10-13 18:29 - INFO - 	 Train Loss: 0.094
2024-10-13 18:29 - INFO - 	 Val. Loss: 0.090
2024-10-13 18:29 - INFO - 	 ROC-AUC: 0.978
2024-10-13 18:29 - INFO - 	 PR-AUC: 0.799
2024-10-13 18:29 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 18:29 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 18:29 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 18:29 - INFO - 	 Best PR-AUC: 0.799
2024-10-13 18:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 18:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-13 18:29 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 18:29 - INFO - ---------------------------------------------
2024-10-13 18:29 - INFO - ---------------------------------------------
2024-10-13 18:29 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 18:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98314
2024-10-13 18:29 - INFO - 	 Train Loss: 0.087
2024-10-13 18:29 - INFO - 	 Val. Loss: 0.080
2024-10-13 18:29 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:29 - INFO - 	 PR-AUC: 0.847
2024-10-13 18:29 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 18:29 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 18:29 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 18:29 - INFO - 	 Best PR-AUC: 0.847
2024-10-13 18:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 18:29 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 18:29 - INFO - ---------------------------------------------
2024-10-13 18:30 - INFO - ---------------------------------------------
2024-10-13 18:30 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 18:30 - INFO - 	 Train Loss: 0.082
2024-10-13 18:30 - INFO - 	 Val. Loss: 0.075
2024-10-13 18:30 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:30 - INFO - 	 PR-AUC: 0.845
2024-10-13 18:30 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 18:30 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 18:30 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 18:30 - INFO - 	 Best PR-AUC: 0.847
2024-10-13 18:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 18:30 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 18:30 - INFO - ---------------------------------------------
2024-10-13 18:30 - INFO - ---------------------------------------------
2024-10-13 18:30 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 18:30 - INFO - 	 Train Loss: 0.078
2024-10-13 18:30 - INFO - 	 Val. Loss: 0.072
2024-10-13 18:30 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:30 - INFO - 	 PR-AUC: 0.848
2024-10-13 18:30 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 18:30 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 18:30 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 18:30 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 18:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-13 18:30 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 18:30 - INFO - ---------------------------------------------
2024-10-13 18:31 - INFO - ---------------------------------------------
2024-10-13 18:31 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 18:31 - INFO - 	 Train Loss: 0.078
2024-10-13 18:31 - INFO - 	 Val. Loss: 0.077
2024-10-13 18:31 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:31 - INFO - 	 PR-AUC: 0.848
2024-10-13 18:31 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 18:31 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 18:31 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 18:31 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 18:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 18:31 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 18:31 - INFO - ---------------------------------------------
2024-10-13 18:31 - INFO - ---------------------------------------------
2024-10-13 18:31 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 18:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98397
2024-10-13 18:31 - INFO - 	 Train Loss: 0.076
2024-10-13 18:31 - INFO - 	 Val. Loss: 0.071
2024-10-13 18:31 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:31 - INFO - 	 PR-AUC: 0.858
2024-10-13 18:31 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 18:31 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 18:31 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:31 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 18:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 18:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 18:31 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:31 - INFO - ---------------------------------------------
2024-10-13 18:32 - INFO - ---------------------------------------------
2024-10-13 18:32 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 18:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98477
2024-10-13 18:32 - INFO - 	 Train Loss: 0.076
2024-10-13 18:32 - INFO - 	 Val. Loss: 0.066
2024-10-13 18:32 - INFO - 	 ROC-AUC: 0.985
2024-10-13 18:32 - INFO - 	 PR-AUC: 0.873
2024-10-13 18:32 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 18:32 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 18:32 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:32 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 18:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-13 18:32 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:32 - INFO - ---------------------------------------------
2024-10-13 18:33 - INFO - ---------------------------------------------
2024-10-13 18:33 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 18:33 - INFO - 	 Train Loss: 0.073
2024-10-13 18:33 - INFO - 	 Val. Loss: 0.068
2024-10-13 18:33 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:33 - INFO - 	 PR-AUC: 0.872
2024-10-13 18:33 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 18:33 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 18:33 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:33 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 18:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-13 18:33 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:33 - INFO - ---------------------------------------------
2024-10-13 18:34 - INFO - Fit the preprocessing pipeline
2024-10-13 18:34 - INFO - Training using device: cuda
2024-10-13 18:34 - INFO - Creating generators
2024-10-13 18:34 - INFO - The model has 651,257 trainable parameters
2024-10-13 18:34 - INFO - * Model:
2024-10-13 18:34 - INFO - * -----------
2024-10-13 18:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 18:34 - INFO - * -----------
2024-10-13 18:34 - INFO - Evaluating model based on: rocauc
2024-10-13 18:34 - INFO - Training..

2024-10-13 18:35 - INFO - ---------------------------------------------
2024-10-13 18:35 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 18:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97061
2024-10-13 18:35 - INFO - 	 Train Loss: 0.187
2024-10-13 18:35 - INFO - 	 Val. Loss: 0.097
2024-10-13 18:35 - INFO - 	 ROC-AUC: 0.971
2024-10-13 18:35 - INFO - 	 PR-AUC: 0.752
2024-10-13 18:35 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-13 18:35 - INFO - 	 Best Val. Loss: 0.097
2024-10-13 18:35 - INFO - 	 Best ROC-AUC: 0.971
2024-10-13 18:35 - INFO - 	 Best PR-AUC: 0.752
2024-10-13 18:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-13 18:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.729
2024-10-13 18:35 - INFO - 	 Best Recall for 0.4 precision: 0.938
2024-10-13 18:35 - INFO - ---------------------------------------------
2024-10-13 18:35 - INFO - ---------------------------------------------
2024-10-13 18:35 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 18:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97842
2024-10-13 18:35 - INFO - 	 Train Loss: 0.099
2024-10-13 18:35 - INFO - 	 Val. Loss: 0.081
2024-10-13 18:35 - INFO - 	 ROC-AUC: 0.978
2024-10-13 18:35 - INFO - 	 PR-AUC: 0.810
2024-10-13 18:35 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 18:35 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 18:35 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 18:35 - INFO - 	 Best PR-AUC: 0.810
2024-10-13 18:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 18:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.770
2024-10-13 18:35 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 18:35 - INFO - ---------------------------------------------
2024-10-13 18:36 - INFO - ---------------------------------------------
2024-10-13 18:36 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 18:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98217
2024-10-13 18:36 - INFO - 	 Train Loss: 0.089
2024-10-13 18:36 - INFO - 	 Val. Loss: 0.077
2024-10-13 18:36 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:36 - INFO - 	 PR-AUC: 0.822
2024-10-13 18:36 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:36 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 18:36 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 18:36 - INFO - 	 Best PR-AUC: 0.822
2024-10-13 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-13 18:36 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 18:36 - INFO - ---------------------------------------------
2024-10-13 18:36 - INFO - ---------------------------------------------
2024-10-13 18:36 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 18:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9837
2024-10-13 18:36 - INFO - 	 Train Loss: 0.084
2024-10-13 18:36 - INFO - 	 Val. Loss: 0.071
2024-10-13 18:36 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:36 - INFO - 	 PR-AUC: 0.842
2024-10-13 18:36 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 18:36 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 18:36 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:36 - INFO - 	 Best PR-AUC: 0.842
2024-10-13 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-13 18:36 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 18:36 - INFO - ---------------------------------------------
2024-10-13 18:37 - INFO - ---------------------------------------------
2024-10-13 18:37 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 18:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98417
2024-10-13 18:37 - INFO - 	 Train Loss: 0.082
2024-10-13 18:37 - INFO - 	 Val. Loss: 0.070
2024-10-13 18:37 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:37 - INFO - 	 PR-AUC: 0.849
2024-10-13 18:37 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 18:37 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:37 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:37 - INFO - 	 Best PR-AUC: 0.849
2024-10-13 18:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 18:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 18:37 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 18:37 - INFO - ---------------------------------------------
2024-10-13 18:37 - INFO - ---------------------------------------------
2024-10-13 18:37 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 18:37 - INFO - 	 Train Loss: 0.079
2024-10-13 18:37 - INFO - 	 Val. Loss: 0.070
2024-10-13 18:37 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:37 - INFO - 	 PR-AUC: 0.845
2024-10-13 18:37 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 18:37 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:37 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:37 - INFO - 	 Best PR-AUC: 0.849
2024-10-13 18:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 18:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 18:37 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 18:37 - INFO - ---------------------------------------------
2024-10-13 18:38 - INFO - ---------------------------------------------
2024-10-13 18:38 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 18:38 - INFO - 	 Train Loss: 0.078
2024-10-13 18:38 - INFO - 	 Val. Loss: 0.070
2024-10-13 18:38 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:38 - INFO - 	 PR-AUC: 0.862
2024-10-13 18:38 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 18:38 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:38 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:38 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 18:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 18:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 18:38 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 18:38 - INFO - ---------------------------------------------
2024-10-13 18:38 - INFO - ---------------------------------------------
2024-10-13 18:38 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 18:38 - INFO - 	 Train Loss: 0.077
2024-10-13 18:38 - INFO - 	 Val. Loss: 0.071
2024-10-13 18:38 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:38 - INFO - 	 PR-AUC: 0.850
2024-10-13 18:38 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 18:38 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:38 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:38 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 18:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 18:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 18:38 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 18:38 - INFO - ---------------------------------------------
2024-10-13 18:39 - INFO - ---------------------------------------------
2024-10-13 18:39 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 18:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98489
2024-10-13 18:39 - INFO - 	 Train Loss: 0.075
2024-10-13 18:39 - INFO - 	 Val. Loss: 0.070
2024-10-13 18:39 - INFO - 	 ROC-AUC: 0.985
2024-10-13 18:39 - INFO - 	 PR-AUC: 0.864
2024-10-13 18:39 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 18:39 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:39 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:39 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 18:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-13 18:39 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 18:39 - INFO - ---------------------------------------------
2024-10-13 18:39 - INFO - ---------------------------------------------
2024-10-13 18:39 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 18:39 - INFO - 	 Train Loss: 0.074
2024-10-13 18:39 - INFO - 	 Val. Loss: 0.072
2024-10-13 18:39 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:39 - INFO - 	 PR-AUC: 0.840
2024-10-13 18:39 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 18:39 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:39 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:39 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 18:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-13 18:39 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 18:39 - INFO - ---------------------------------------------
2024-10-13 18:41 - INFO - Fit the preprocessing pipeline
2024-10-13 18:41 - INFO - Training using device: cuda
2024-10-13 18:41 - INFO - Creating generators
2024-10-13 18:41 - INFO - The model has 651,257 trainable parameters
2024-10-13 18:41 - INFO - * Model:
2024-10-13 18:41 - INFO - * -----------
2024-10-13 18:41 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 18:41 - INFO - * -----------
2024-10-13 18:41 - INFO - Evaluating model based on: rocauc
2024-10-13 18:41 - INFO - Training..

2024-10-13 18:41 - INFO - ---------------------------------------------
2024-10-13 18:41 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 18:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9654
2024-10-13 18:41 - INFO - 	 Train Loss: 0.188
2024-10-13 18:41 - INFO - 	 Val. Loss: 0.110
2024-10-13 18:41 - INFO - 	 ROC-AUC: 0.965
2024-10-13 18:41 - INFO - 	 PR-AUC: 0.721
2024-10-13 18:41 - INFO - 	 Recall for 0.4 precision: 0.931
2024-10-13 18:41 - INFO - 	 Best Val. Loss: 0.110
2024-10-13 18:41 - INFO - 	 Best ROC-AUC: 0.965
2024-10-13 18:41 - INFO - 	 Best PR-AUC: 0.721
2024-10-13 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-13 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.703
2024-10-13 18:41 - INFO - 	 Best Recall for 0.4 precision: 0.931
2024-10-13 18:41 - INFO - ---------------------------------------------
2024-10-13 18:42 - INFO - ---------------------------------------------
2024-10-13 18:42 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 18:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97761
2024-10-13 18:42 - INFO - 	 Train Loss: 0.101
2024-10-13 18:42 - INFO - 	 Val. Loss: 0.098
2024-10-13 18:42 - INFO - 	 ROC-AUC: 0.978
2024-10-13 18:42 - INFO - 	 PR-AUC: 0.806
2024-10-13 18:42 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 18:42 - INFO - 	 Best Val. Loss: 0.098
2024-10-13 18:42 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 18:42 - INFO - 	 Best PR-AUC: 0.806
2024-10-13 18:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 18:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.768
2024-10-13 18:42 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 18:42 - INFO - ---------------------------------------------
2024-10-13 18:43 - INFO - ---------------------------------------------
2024-10-13 18:43 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 18:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97929
2024-10-13 18:43 - INFO - 	 Train Loss: 0.092
2024-10-13 18:43 - INFO - 	 Val. Loss: 0.085
2024-10-13 18:43 - INFO - 	 ROC-AUC: 0.979
2024-10-13 18:43 - INFO - 	 PR-AUC: 0.812
2024-10-13 18:43 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 18:43 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 18:43 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 18:43 - INFO - 	 Best PR-AUC: 0.812
2024-10-13 18:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 18:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-13 18:43 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 18:43 - INFO - ---------------------------------------------
2024-10-13 18:43 - INFO - ---------------------------------------------
2024-10-13 18:43 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 18:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98064
2024-10-13 18:43 - INFO - 	 Train Loss: 0.086
2024-10-13 18:43 - INFO - 	 Val. Loss: 0.078
2024-10-13 18:43 - INFO - 	 ROC-AUC: 0.981
2024-10-13 18:43 - INFO - 	 PR-AUC: 0.827
2024-10-13 18:43 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 18:43 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 18:43 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 18:43 - INFO - 	 Best PR-AUC: 0.827
2024-10-13 18:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 18:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-10-13 18:43 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 18:43 - INFO - ---------------------------------------------
2024-10-13 18:44 - INFO - ---------------------------------------------
2024-10-13 18:44 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98336
2024-10-13 18:44 - INFO - 	 Train Loss: 0.082
2024-10-13 18:44 - INFO - 	 Val. Loss: 0.072
2024-10-13 18:44 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:44 - INFO - 	 PR-AUC: 0.835
2024-10-13 18:44 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 18:44 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 18:44 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 18:44 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-13 18:44 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 18:44 - INFO - ---------------------------------------------
2024-10-13 18:44 - INFO - ---------------------------------------------
2024-10-13 18:44 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98371
2024-10-13 18:44 - INFO - 	 Train Loss: 0.079
2024-10-13 18:44 - INFO - 	 Val. Loss: 0.070
2024-10-13 18:44 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:44 - INFO - 	 PR-AUC: 0.850
2024-10-13 18:44 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 18:44 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 18:44 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:44 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-13 18:44 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 18:44 - INFO - ---------------------------------------------
2024-10-13 18:45 - INFO - ---------------------------------------------
2024-10-13 18:45 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 18:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98434
2024-10-13 18:45 - INFO - 	 Train Loss: 0.078
2024-10-13 18:45 - INFO - 	 Val. Loss: 0.068
2024-10-13 18:45 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:45 - INFO - 	 PR-AUC: 0.856
2024-10-13 18:45 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 18:45 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 18:45 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:45 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 18:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 18:45 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 18:45 - INFO - ---------------------------------------------
2024-10-13 18:45 - INFO - ---------------------------------------------
2024-10-13 18:45 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 18:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98501
2024-10-13 18:45 - INFO - 	 Train Loss: 0.075
2024-10-13 18:45 - INFO - 	 Val. Loss: 0.066
2024-10-13 18:45 - INFO - 	 ROC-AUC: 0.985
2024-10-13 18:45 - INFO - 	 PR-AUC: 0.873
2024-10-13 18:45 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:45 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 18:45 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:45 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 18:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 18:45 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 18:45 - INFO - ---------------------------------------------
2024-10-13 18:46 - INFO - ---------------------------------------------
2024-10-13 18:46 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 18:46 - INFO - 	 Train Loss: 0.076
2024-10-13 18:46 - INFO - 	 Val. Loss: 0.067
2024-10-13 18:46 - INFO - 	 ROC-AUC: 0.985
2024-10-13 18:46 - INFO - 	 PR-AUC: 0.857
2024-10-13 18:46 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 18:46 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 18:46 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:46 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 18:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 18:46 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 18:46 - INFO - ---------------------------------------------
2024-10-13 18:46 - INFO - ---------------------------------------------
2024-10-13 18:46 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 18:46 - INFO - 	 Train Loss: 0.073
2024-10-13 18:46 - INFO - 	 Val. Loss: 0.069
2024-10-13 18:46 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:46 - INFO - 	 PR-AUC: 0.859
2024-10-13 18:46 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 18:46 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 18:46 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:46 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 18:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 18:46 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 18:46 - INFO - ---------------------------------------------
2024-10-13 18:48 - INFO - Fit the preprocessing pipeline
2024-10-13 18:48 - INFO - Training using device: cuda
2024-10-13 18:48 - INFO - Creating generators
2024-10-13 18:48 - INFO - The model has 651,257 trainable parameters
2024-10-13 18:48 - INFO - * Model:
2024-10-13 18:48 - INFO - * -----------
2024-10-13 18:48 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 18:48 - INFO - * -----------
2024-10-13 18:48 - INFO - Evaluating model based on: rocauc
2024-10-13 18:48 - INFO - Training..

2024-10-13 18:48 - INFO - ---------------------------------------------
2024-10-13 18:48 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 18:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96605
2024-10-13 18:48 - INFO - 	 Train Loss: 0.181
2024-10-13 18:48 - INFO - 	 Val. Loss: 0.133
2024-10-13 18:48 - INFO - 	 ROC-AUC: 0.966
2024-10-13 18:48 - INFO - 	 PR-AUC: 0.673
2024-10-13 18:48 - INFO - 	 Recall for 0.4 precision: 0.928
2024-10-13 18:48 - INFO - 	 Best Val. Loss: 0.133
2024-10-13 18:48 - INFO - 	 Best ROC-AUC: 0.966
2024-10-13 18:48 - INFO - 	 Best PR-AUC: 0.673
2024-10-13 18:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 18:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.689
2024-10-13 18:48 - INFO - 	 Best Recall for 0.4 precision: 0.928
2024-10-13 18:48 - INFO - ---------------------------------------------
2024-10-13 18:49 - INFO - ---------------------------------------------
2024-10-13 18:49 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 18:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97794
2024-10-13 18:49 - INFO - 	 Train Loss: 0.105
2024-10-13 18:49 - INFO - 	 Val. Loss: 0.084
2024-10-13 18:49 - INFO - 	 ROC-AUC: 0.978
2024-10-13 18:49 - INFO - 	 PR-AUC: 0.788
2024-10-13 18:49 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:49 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 18:49 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 18:49 - INFO - 	 Best PR-AUC: 0.788
2024-10-13 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-13 18:49 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 18:49 - INFO - ---------------------------------------------
2024-10-13 18:49 - INFO - ---------------------------------------------
2024-10-13 18:49 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 18:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98145
2024-10-13 18:49 - INFO - 	 Train Loss: 0.091
2024-10-13 18:49 - INFO - 	 Val. Loss: 0.077
2024-10-13 18:49 - INFO - 	 ROC-AUC: 0.981
2024-10-13 18:49 - INFO - 	 PR-AUC: 0.826
2024-10-13 18:49 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 18:49 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 18:49 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 18:49 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-13 18:49 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 18:49 - INFO - ---------------------------------------------
2024-10-13 18:50 - INFO - ---------------------------------------------
2024-10-13 18:50 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 18:50 - INFO - 	 Train Loss: 0.086
2024-10-13 18:50 - INFO - 	 Val. Loss: 0.097
2024-10-13 18:50 - INFO - 	 ROC-AUC: 0.981
2024-10-13 18:50 - INFO - 	 PR-AUC: 0.825
2024-10-13 18:50 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 18:50 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 18:50 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 18:50 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 18:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 18:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-13 18:50 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 18:50 - INFO - ---------------------------------------------
2024-10-13 18:50 - INFO - ---------------------------------------------
2024-10-13 18:50 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 18:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98238
2024-10-13 18:50 - INFO - 	 Train Loss: 0.082
2024-10-13 18:50 - INFO - 	 Val. Loss: 0.074
2024-10-13 18:50 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:50 - INFO - 	 PR-AUC: 0.838
2024-10-13 18:50 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 18:50 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 18:50 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 18:50 - INFO - 	 Best PR-AUC: 0.838
2024-10-13 18:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 18:50 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 18:50 - INFO - ---------------------------------------------
2024-10-13 18:51 - INFO - ---------------------------------------------
2024-10-13 18:51 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 18:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98398
2024-10-13 18:51 - INFO - 	 Train Loss: 0.081
2024-10-13 18:51 - INFO - 	 Val. Loss: 0.074
2024-10-13 18:51 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:51 - INFO - 	 PR-AUC: 0.850
2024-10-13 18:51 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 18:51 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 18:51 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:51 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 18:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 18:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-13 18:51 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:51 - INFO - ---------------------------------------------
2024-10-13 18:52 - INFO - ---------------------------------------------
2024-10-13 18:52 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 18:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98442
2024-10-13 18:52 - INFO - 	 Train Loss: 0.079
2024-10-13 18:52 - INFO - 	 Val. Loss: 0.071
2024-10-13 18:52 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:52 - INFO - 	 PR-AUC: 0.859
2024-10-13 18:52 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 18:52 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 18:52 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:52 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 18:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-13 18:52 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:52 - INFO - ---------------------------------------------
2024-10-13 18:52 - INFO - ---------------------------------------------
2024-10-13 18:52 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 18:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98529
2024-10-13 18:52 - INFO - 	 Train Loss: 0.076
2024-10-13 18:52 - INFO - 	 Val. Loss: 0.068
2024-10-13 18:52 - INFO - 	 ROC-AUC: 0.985
2024-10-13 18:52 - INFO - 	 PR-AUC: 0.866
2024-10-13 18:52 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 18:52 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 18:52 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:52 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 18:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 18:52 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:52 - INFO - ---------------------------------------------
2024-10-13 18:53 - INFO - ---------------------------------------------
2024-10-13 18:53 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 18:53 - INFO - 	 Train Loss: 0.074
2024-10-13 18:53 - INFO - 	 Val. Loss: 0.067
2024-10-13 18:53 - INFO - 	 ROC-AUC: 0.985
2024-10-13 18:53 - INFO - 	 PR-AUC: 0.868
2024-10-13 18:53 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 18:53 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 18:53 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 18:53 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 18:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 18:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 18:53 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:53 - INFO - ---------------------------------------------
2024-10-13 18:53 - INFO - ---------------------------------------------
2024-10-13 18:53 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 18:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98594
2024-10-13 18:53 - INFO - 	 Train Loss: 0.074
2024-10-13 18:53 - INFO - 	 Val. Loss: 0.064
2024-10-13 18:53 - INFO - 	 ROC-AUC: 0.986
2024-10-13 18:53 - INFO - 	 PR-AUC: 0.873
2024-10-13 18:53 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 18:53 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 18:53 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 18:53 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 18:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 18:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-13 18:53 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 18:53 - INFO - ---------------------------------------------
2024-10-13 18:55 - INFO - Fit the preprocessing pipeline
2024-10-13 18:55 - INFO - Training using device: cuda
2024-10-13 18:55 - INFO - Creating generators
2024-10-13 18:55 - INFO - The model has 651,257 trainable parameters
2024-10-13 18:55 - INFO - * Model:
2024-10-13 18:55 - INFO - * -----------
2024-10-13 18:55 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 18:55 - INFO - * -----------
2024-10-13 18:55 - INFO - Evaluating model based on: rocauc
2024-10-13 18:55 - INFO - Training..

2024-10-13 18:55 - INFO - ---------------------------------------------
2024-10-13 18:55 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 18:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95989
2024-10-13 18:55 - INFO - 	 Train Loss: 0.199
2024-10-13 18:55 - INFO - 	 Val. Loss: 0.122
2024-10-13 18:55 - INFO - 	 ROC-AUC: 0.960
2024-10-13 18:55 - INFO - 	 PR-AUC: 0.623
2024-10-13 18:55 - INFO - 	 Recall for 0.4 precision: 0.911
2024-10-13 18:55 - INFO - 	 Best Val. Loss: 0.122
2024-10-13 18:55 - INFO - 	 Best ROC-AUC: 0.960
2024-10-13 18:55 - INFO - 	 Best PR-AUC: 0.623
2024-10-13 18:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-13 18:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.654
2024-10-13 18:55 - INFO - 	 Best Recall for 0.4 precision: 0.911
2024-10-13 18:55 - INFO - ---------------------------------------------
2024-10-13 18:56 - INFO - ---------------------------------------------
2024-10-13 18:56 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 18:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97729
2024-10-13 18:56 - INFO - 	 Train Loss: 0.104
2024-10-13 18:56 - INFO - 	 Val. Loss: 0.090
2024-10-13 18:56 - INFO - 	 ROC-AUC: 0.977
2024-10-13 18:56 - INFO - 	 PR-AUC: 0.791
2024-10-13 18:56 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 18:56 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 18:56 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 18:56 - INFO - 	 Best PR-AUC: 0.791
2024-10-13 18:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 18:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-13 18:56 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 18:56 - INFO - ---------------------------------------------
2024-10-13 18:56 - INFO - ---------------------------------------------
2024-10-13 18:56 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 18:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97997
2024-10-13 18:56 - INFO - 	 Train Loss: 0.093
2024-10-13 18:56 - INFO - 	 Val. Loss: 0.088
2024-10-13 18:56 - INFO - 	 ROC-AUC: 0.980
2024-10-13 18:56 - INFO - 	 PR-AUC: 0.798
2024-10-13 18:56 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 18:56 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 18:56 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 18:56 - INFO - 	 Best PR-AUC: 0.798
2024-10-13 18:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 18:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-10-13 18:56 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 18:56 - INFO - ---------------------------------------------
2024-10-13 18:57 - INFO - ---------------------------------------------
2024-10-13 18:57 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 18:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98242
2024-10-13 18:57 - INFO - 	 Train Loss: 0.085
2024-10-13 18:57 - INFO - 	 Val. Loss: 0.074
2024-10-13 18:57 - INFO - 	 ROC-AUC: 0.982
2024-10-13 18:57 - INFO - 	 PR-AUC: 0.846
2024-10-13 18:57 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 18:57 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 18:57 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 18:57 - INFO - 	 Best PR-AUC: 0.846
2024-10-13 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 18:57 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 18:57 - INFO - ---------------------------------------------
2024-10-13 18:57 - INFO - ---------------------------------------------
2024-10-13 18:57 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 18:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98363
2024-10-13 18:57 - INFO - 	 Train Loss: 0.084
2024-10-13 18:57 - INFO - 	 Val. Loss: 0.071
2024-10-13 18:57 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:57 - INFO - 	 PR-AUC: 0.851
2024-10-13 18:57 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 18:57 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 18:57 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:57 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-13 18:57 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 18:57 - INFO - ---------------------------------------------
2024-10-13 18:58 - INFO - ---------------------------------------------
2024-10-13 18:58 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 18:58 - INFO - 	 Train Loss: 0.080
2024-10-13 18:58 - INFO - 	 Val. Loss: 0.075
2024-10-13 18:58 - INFO - 	 ROC-AUC: 0.981
2024-10-13 18:58 - INFO - 	 PR-AUC: 0.851
2024-10-13 18:58 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 18:58 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 18:58 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:58 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 18:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-13 18:58 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 18:58 - INFO - ---------------------------------------------
2024-10-13 18:58 - INFO - ---------------------------------------------
2024-10-13 18:58 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 18:58 - INFO - 	 Train Loss: 0.078
2024-10-13 18:58 - INFO - 	 Val. Loss: 0.072
2024-10-13 18:58 - INFO - 	 ROC-AUC: 0.984
2024-10-13 18:58 - INFO - 	 PR-AUC: 0.844
2024-10-13 18:58 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 18:58 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 18:58 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:58 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 18:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-13 18:58 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 18:58 - INFO - ---------------------------------------------
2024-10-13 18:59 - INFO - ---------------------------------------------
2024-10-13 18:59 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 18:59 - INFO - 	 Train Loss: 0.075
2024-10-13 18:59 - INFO - 	 Val. Loss: 0.072
2024-10-13 18:59 - INFO - 	 ROC-AUC: 0.983
2024-10-13 18:59 - INFO - 	 PR-AUC: 0.850
2024-10-13 18:59 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 18:59 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 18:59 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 18:59 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 18:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 18:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-13 18:59 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 18:59 - INFO - ---------------------------------------------
2024-10-13 19:00 - INFO - ---------------------------------------------
2024-10-13 19:00 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 19:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98434
2024-10-13 19:00 - INFO - 	 Train Loss: 0.076
2024-10-13 19:00 - INFO - 	 Val. Loss: 0.068
2024-10-13 19:00 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:00 - INFO - 	 PR-AUC: 0.863
2024-10-13 19:00 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:00 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 19:00 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:00 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 19:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-13 19:00 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 19:00 - INFO - ---------------------------------------------
2024-10-13 19:00 - INFO - ---------------------------------------------
2024-10-13 19:00 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-13 19:00 - INFO - 	 Train Loss: 0.073
2024-10-13 19:00 - INFO - 	 Val. Loss: 0.080
2024-10-13 19:00 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:00 - INFO - 	 PR-AUC: 0.844
2024-10-13 19:00 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:00 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 19:00 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:00 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 19:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-13 19:00 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 19:00 - INFO - ---------------------------------------------
2024-10-13 19:02 - INFO - Fit the preprocessing pipeline
2024-10-13 19:02 - INFO - Training using device: cuda
2024-10-13 19:02 - INFO - Creating generators
2024-10-13 19:02 - INFO - The model has 651,257 trainable parameters
2024-10-13 19:02 - INFO - * Model:
2024-10-13 19:02 - INFO - * -----------
2024-10-13 19:02 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 19:02 - INFO - * -----------
2024-10-13 19:02 - INFO - Evaluating model based on: rocauc
2024-10-13 19:02 - INFO - Training..

2024-10-13 19:02 - INFO - ---------------------------------------------
2024-10-13 19:02 - INFO - Epoch: 01 | Time: 0m 38s
2024-10-13 19:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96768
2024-10-13 19:02 - INFO - 	 Train Loss: 0.181
2024-10-13 19:02 - INFO - 	 Val. Loss: 0.107
2024-10-13 19:02 - INFO - 	 ROC-AUC: 0.968
2024-10-13 19:02 - INFO - 	 PR-AUC: 0.700
2024-10-13 19:02 - INFO - 	 Recall for 0.4 precision: 0.941
2024-10-13 19:02 - INFO - 	 Best Val. Loss: 0.107
2024-10-13 19:02 - INFO - 	 Best ROC-AUC: 0.968
2024-10-13 19:02 - INFO - 	 Best PR-AUC: 0.700
2024-10-13 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-13 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.689
2024-10-13 19:02 - INFO - 	 Best Recall for 0.4 precision: 0.941
2024-10-13 19:02 - INFO - ---------------------------------------------
2024-10-13 19:03 - INFO - ---------------------------------------------
2024-10-13 19:03 - INFO - Epoch: 02 | Time: 0m 37s
2024-10-13 19:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9802
2024-10-13 19:03 - INFO - 	 Train Loss: 0.102
2024-10-13 19:03 - INFO - 	 Val. Loss: 0.083
2024-10-13 19:03 - INFO - 	 ROC-AUC: 0.980
2024-10-13 19:03 - INFO - 	 PR-AUC: 0.804
2024-10-13 19:03 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:03 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 19:03 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 19:03 - INFO - 	 Best PR-AUC: 0.804
2024-10-13 19:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 19:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.782
2024-10-13 19:03 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 19:03 - INFO - ---------------------------------------------
2024-10-13 19:04 - INFO - ---------------------------------------------
2024-10-13 19:04 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-13 19:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98064
2024-10-13 19:04 - INFO - 	 Train Loss: 0.089
2024-10-13 19:04 - INFO - 	 Val. Loss: 0.091
2024-10-13 19:04 - INFO - 	 ROC-AUC: 0.981
2024-10-13 19:04 - INFO - 	 PR-AUC: 0.821
2024-10-13 19:04 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 19:04 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 19:04 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 19:04 - INFO - 	 Best PR-AUC: 0.821
2024-10-13 19:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 19:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-13 19:04 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 19:04 - INFO - ---------------------------------------------
2024-10-13 19:04 - INFO - ---------------------------------------------
2024-10-13 19:04 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 19:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98203
2024-10-13 19:04 - INFO - 	 Train Loss: 0.084
2024-10-13 19:04 - INFO - 	 Val. Loss: 0.076
2024-10-13 19:04 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:04 - INFO - 	 PR-AUC: 0.833
2024-10-13 19:04 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:04 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 19:04 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 19:04 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 19:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 19:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 19:04 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:04 - INFO - ---------------------------------------------
2024-10-13 19:05 - INFO - ---------------------------------------------
2024-10-13 19:05 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 19:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98231
2024-10-13 19:05 - INFO - 	 Train Loss: 0.082
2024-10-13 19:05 - INFO - 	 Val. Loss: 0.074
2024-10-13 19:05 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:05 - INFO - 	 PR-AUC: 0.837
2024-10-13 19:05 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 19:05 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 19:05 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 19:05 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 19:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 19:05 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:05 - INFO - ---------------------------------------------
2024-10-13 19:05 - INFO - ---------------------------------------------
2024-10-13 19:05 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 19:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98255
2024-10-13 19:05 - INFO - 	 Train Loss: 0.079
2024-10-13 19:05 - INFO - 	 Val. Loss: 0.073
2024-10-13 19:05 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:05 - INFO - 	 PR-AUC: 0.859
2024-10-13 19:05 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:05 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 19:05 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 19:05 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 19:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 19:05 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:05 - INFO - ---------------------------------------------
2024-10-13 19:06 - INFO - ---------------------------------------------
2024-10-13 19:06 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 19:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98392
2024-10-13 19:06 - INFO - 	 Train Loss: 0.076
2024-10-13 19:06 - INFO - 	 Val. Loss: 0.070
2024-10-13 19:06 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:06 - INFO - 	 PR-AUC: 0.854
2024-10-13 19:06 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 19:06 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 19:06 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:06 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 19:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 19:06 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 19:06 - INFO - ---------------------------------------------
2024-10-13 19:06 - INFO - ---------------------------------------------
2024-10-13 19:06 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 19:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98407
2024-10-13 19:06 - INFO - 	 Train Loss: 0.075
2024-10-13 19:06 - INFO - 	 Val. Loss: 0.067
2024-10-13 19:06 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:06 - INFO - 	 PR-AUC: 0.867
2024-10-13 19:06 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:06 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 19:06 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:06 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 19:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 19:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 19:06 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 19:06 - INFO - ---------------------------------------------
2024-10-13 19:07 - INFO - ---------------------------------------------
2024-10-13 19:07 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 19:07 - INFO - 	 Train Loss: 0.073
2024-10-13 19:07 - INFO - 	 Val. Loss: 0.070
2024-10-13 19:07 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:07 - INFO - 	 PR-AUC: 0.856
2024-10-13 19:07 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 19:07 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 19:07 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:07 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 19:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 19:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 19:07 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 19:07 - INFO - ---------------------------------------------
2024-10-13 19:07 - INFO - ---------------------------------------------
2024-10-13 19:07 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 19:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98508
2024-10-13 19:07 - INFO - 	 Train Loss: 0.072
2024-10-13 19:07 - INFO - 	 Val. Loss: 0.065
2024-10-13 19:07 - INFO - 	 ROC-AUC: 0.985
2024-10-13 19:07 - INFO - 	 PR-AUC: 0.866
2024-10-13 19:07 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 19:07 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 19:07 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:07 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 19:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 19:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 19:07 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 19:07 - INFO - ---------------------------------------------
2024-10-13 19:09 - INFO - Fit the preprocessing pipeline
2024-10-13 19:09 - INFO - Training using device: cuda
2024-10-13 19:09 - INFO - Creating generators
2024-10-13 19:09 - INFO - The model has 651,257 trainable parameters
2024-10-13 19:09 - INFO - * Model:
2024-10-13 19:09 - INFO - * -----------
2024-10-13 19:09 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 19:09 - INFO - * -----------
2024-10-13 19:09 - INFO - Evaluating model based on: rocauc
2024-10-13 19:09 - INFO - Training..

2024-10-13 19:09 - INFO - ---------------------------------------------
2024-10-13 19:09 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 19:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96425
2024-10-13 19:09 - INFO - 	 Train Loss: 0.180
2024-10-13 19:09 - INFO - 	 Val. Loss: 0.109
2024-10-13 19:09 - INFO - 	 ROC-AUC: 0.964
2024-10-13 19:09 - INFO - 	 PR-AUC: 0.691
2024-10-13 19:09 - INFO - 	 Recall for 0.4 precision: 0.919
2024-10-13 19:09 - INFO - 	 Best Val. Loss: 0.109
2024-10-13 19:09 - INFO - 	 Best ROC-AUC: 0.964
2024-10-13 19:09 - INFO - 	 Best PR-AUC: 0.691
2024-10-13 19:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-13 19:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.693
2024-10-13 19:09 - INFO - 	 Best Recall for 0.4 precision: 0.919
2024-10-13 19:09 - INFO - ---------------------------------------------
2024-10-13 19:10 - INFO - ---------------------------------------------
2024-10-13 19:10 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 19:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9769
2024-10-13 19:10 - INFO - 	 Train Loss: 0.099
2024-10-13 19:10 - INFO - 	 Val. Loss: 0.085
2024-10-13 19:10 - INFO - 	 ROC-AUC: 0.977
2024-10-13 19:10 - INFO - 	 PR-AUC: 0.804
2024-10-13 19:10 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 19:10 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 19:10 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 19:10 - INFO - 	 Best PR-AUC: 0.804
2024-10-13 19:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 19:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 19:10 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 19:10 - INFO - ---------------------------------------------
2024-10-13 19:11 - INFO - ---------------------------------------------
2024-10-13 19:11 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 19:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97977
2024-10-13 19:11 - INFO - 	 Train Loss: 0.090
2024-10-13 19:11 - INFO - 	 Val. Loss: 0.078
2024-10-13 19:11 - INFO - 	 ROC-AUC: 0.980
2024-10-13 19:11 - INFO - 	 PR-AUC: 0.824
2024-10-13 19:11 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 19:11 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 19:11 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 19:11 - INFO - 	 Best PR-AUC: 0.824
2024-10-13 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-10-13 19:11 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 19:11 - INFO - ---------------------------------------------
2024-10-13 19:11 - INFO - ---------------------------------------------
2024-10-13 19:11 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 19:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98137
2024-10-13 19:11 - INFO - 	 Train Loss: 0.086
2024-10-13 19:11 - INFO - 	 Val. Loss: 0.079
2024-10-13 19:11 - INFO - 	 ROC-AUC: 0.981
2024-10-13 19:11 - INFO - 	 PR-AUC: 0.835
2024-10-13 19:11 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:11 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 19:11 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 19:11 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-13 19:11 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 19:11 - INFO - ---------------------------------------------
2024-10-13 19:12 - INFO - ---------------------------------------------
2024-10-13 19:12 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 19:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9834
2024-10-13 19:12 - INFO - 	 Train Loss: 0.081
2024-10-13 19:12 - INFO - 	 Val. Loss: 0.072
2024-10-13 19:12 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:12 - INFO - 	 PR-AUC: 0.839
2024-10-13 19:12 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:12 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 19:12 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 19:12 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 19:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 19:12 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:12 - INFO - ---------------------------------------------
2024-10-13 19:12 - INFO - ---------------------------------------------
2024-10-13 19:12 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 19:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.984
2024-10-13 19:12 - INFO - 	 Train Loss: 0.081
2024-10-13 19:12 - INFO - 	 Val. Loss: 0.072
2024-10-13 19:12 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:12 - INFO - 	 PR-AUC: 0.838
2024-10-13 19:12 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:12 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 19:12 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:12 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 19:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 19:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 19:12 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:12 - INFO - ---------------------------------------------
2024-10-13 19:13 - INFO - ---------------------------------------------
2024-10-13 19:13 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 19:13 - INFO - 	 Train Loss: 0.078
2024-10-13 19:13 - INFO - 	 Val. Loss: 0.075
2024-10-13 19:13 - INFO - 	 ROC-AUC: 0.981
2024-10-13 19:13 - INFO - 	 PR-AUC: 0.822
2024-10-13 19:13 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:13 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 19:13 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:13 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 19:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 19:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 19:13 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:13 - INFO - ---------------------------------------------
2024-10-13 19:13 - INFO - ---------------------------------------------
2024-10-13 19:13 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 19:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98592
2024-10-13 19:13 - INFO - 	 Train Loss: 0.076
2024-10-13 19:13 - INFO - 	 Val. Loss: 0.067
2024-10-13 19:13 - INFO - 	 ROC-AUC: 0.986
2024-10-13 19:13 - INFO - 	 PR-AUC: 0.849
2024-10-13 19:13 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-13 19:13 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 19:13 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 19:13 - INFO - 	 Best PR-AUC: 0.849
2024-10-13 19:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 19:13 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 19:13 - INFO - ---------------------------------------------
2024-10-13 19:14 - INFO - ---------------------------------------------
2024-10-13 19:14 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 19:14 - INFO - 	 Train Loss: 0.074
2024-10-13 19:14 - INFO - 	 Val. Loss: 0.076
2024-10-13 19:14 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:14 - INFO - 	 PR-AUC: 0.847
2024-10-13 19:14 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:14 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 19:14 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 19:14 - INFO - 	 Best PR-AUC: 0.849
2024-10-13 19:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 19:14 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 19:14 - INFO - ---------------------------------------------
2024-10-13 19:14 - INFO - ---------------------------------------------
2024-10-13 19:14 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 19:14 - INFO - 	 Train Loss: 0.075
2024-10-13 19:14 - INFO - 	 Val. Loss: 0.067
2024-10-13 19:14 - INFO - 	 ROC-AUC: 0.985
2024-10-13 19:14 - INFO - 	 PR-AUC: 0.864
2024-10-13 19:14 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:14 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 19:14 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 19:14 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 19:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-13 19:14 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 19:14 - INFO - ---------------------------------------------
2024-10-13 19:16 - INFO - Fit the preprocessing pipeline
2024-10-13 19:16 - INFO - Training using device: cuda
2024-10-13 19:16 - INFO - Creating generators
2024-10-13 19:16 - INFO - The model has 651,257 trainable parameters
2024-10-13 19:16 - INFO - * Model:
2024-10-13 19:16 - INFO - * -----------
2024-10-13 19:16 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 19:16 - INFO - * -----------
2024-10-13 19:16 - INFO - Evaluating model based on: rocauc
2024-10-13 19:16 - INFO - Training..

2024-10-13 19:16 - INFO - ---------------------------------------------
2024-10-13 19:16 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 19:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96913
2024-10-13 19:16 - INFO - 	 Train Loss: 0.182
2024-10-13 19:16 - INFO - 	 Val. Loss: 0.102
2024-10-13 19:16 - INFO - 	 ROC-AUC: 0.969
2024-10-13 19:16 - INFO - 	 PR-AUC: 0.733
2024-10-13 19:16 - INFO - 	 Recall for 0.4 precision: 0.943
2024-10-13 19:16 - INFO - 	 Best Val. Loss: 0.102
2024-10-13 19:16 - INFO - 	 Best ROC-AUC: 0.969
2024-10-13 19:16 - INFO - 	 Best PR-AUC: 0.733
2024-10-13 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-13 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.731
2024-10-13 19:16 - INFO - 	 Best Recall for 0.4 precision: 0.943
2024-10-13 19:16 - INFO - ---------------------------------------------
2024-10-13 19:17 - INFO - ---------------------------------------------
2024-10-13 19:17 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-13 19:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97751
2024-10-13 19:17 - INFO - 	 Train Loss: 0.099
2024-10-13 19:17 - INFO - 	 Val. Loss: 0.084
2024-10-13 19:17 - INFO - 	 ROC-AUC: 0.978
2024-10-13 19:17 - INFO - 	 PR-AUC: 0.777
2024-10-13 19:17 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 19:17 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 19:17 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 19:17 - INFO - 	 Best PR-AUC: 0.777
2024-10-13 19:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 19:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.765
2024-10-13 19:17 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 19:17 - INFO - ---------------------------------------------
2024-10-13 19:17 - INFO - ---------------------------------------------
2024-10-13 19:17 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 19:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97849
2024-10-13 19:17 - INFO - 	 Train Loss: 0.090
2024-10-13 19:17 - INFO - 	 Val. Loss: 0.084
2024-10-13 19:17 - INFO - 	 ROC-AUC: 0.978
2024-10-13 19:17 - INFO - 	 PR-AUC: 0.798
2024-10-13 19:17 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 19:17 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 19:17 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 19:17 - INFO - 	 Best PR-AUC: 0.798
2024-10-13 19:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 19:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-13 19:17 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 19:17 - INFO - ---------------------------------------------
2024-10-13 19:18 - INFO - ---------------------------------------------
2024-10-13 19:18 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 19:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98014
2024-10-13 19:18 - INFO - 	 Train Loss: 0.085
2024-10-13 19:18 - INFO - 	 Val. Loss: 0.085
2024-10-13 19:18 - INFO - 	 ROC-AUC: 0.980
2024-10-13 19:18 - INFO - 	 PR-AUC: 0.817
2024-10-13 19:18 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 19:18 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 19:18 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 19:18 - INFO - 	 Best PR-AUC: 0.817
2024-10-13 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-13 19:18 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 19:18 - INFO - ---------------------------------------------
2024-10-13 19:19 - INFO - ---------------------------------------------
2024-10-13 19:19 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 19:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98326
2024-10-13 19:19 - INFO - 	 Train Loss: 0.082
2024-10-13 19:19 - INFO - 	 Val. Loss: 0.071
2024-10-13 19:19 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:19 - INFO - 	 PR-AUC: 0.836
2024-10-13 19:19 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:19 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 19:19 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 19:19 - INFO - 	 Best PR-AUC: 0.836
2024-10-13 19:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 19:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-13 19:19 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:19 - INFO - ---------------------------------------------
2024-10-13 19:19 - INFO - ---------------------------------------------
2024-10-13 19:19 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 19:19 - INFO - 	 Train Loss: 0.078
2024-10-13 19:19 - INFO - 	 Val. Loss: 0.073
2024-10-13 19:19 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:19 - INFO - 	 PR-AUC: 0.840
2024-10-13 19:19 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:19 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 19:19 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 19:19 - INFO - 	 Best PR-AUC: 0.840
2024-10-13 19:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 19:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-13 19:19 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:19 - INFO - ---------------------------------------------
2024-10-13 19:20 - INFO - ---------------------------------------------
2024-10-13 19:20 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 19:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98369
2024-10-13 19:20 - INFO - 	 Train Loss: 0.076
2024-10-13 19:20 - INFO - 	 Val. Loss: 0.069
2024-10-13 19:20 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:20 - INFO - 	 PR-AUC: 0.845
2024-10-13 19:20 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 19:20 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 19:20 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:20 - INFO - 	 Best PR-AUC: 0.845
2024-10-13 19:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 19:20 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:20 - INFO - ---------------------------------------------
2024-10-13 19:20 - INFO - ---------------------------------------------
2024-10-13 19:20 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 19:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98411
2024-10-13 19:20 - INFO - 	 Train Loss: 0.076
2024-10-13 19:20 - INFO - 	 Val. Loss: 0.068
2024-10-13 19:20 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:20 - INFO - 	 PR-AUC: 0.862
2024-10-13 19:20 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 19:20 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 19:20 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:20 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 19:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 19:20 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 19:20 - INFO - ---------------------------------------------
2024-10-13 19:21 - INFO - ---------------------------------------------
2024-10-13 19:21 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 19:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98565
2024-10-13 19:21 - INFO - 	 Train Loss: 0.075
2024-10-13 19:21 - INFO - 	 Val. Loss: 0.066
2024-10-13 19:21 - INFO - 	 ROC-AUC: 0.986
2024-10-13 19:21 - INFO - 	 PR-AUC: 0.856
2024-10-13 19:21 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-13 19:21 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 19:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 19:21 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 19:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 19:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 19:21 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 19:21 - INFO - ---------------------------------------------
2024-10-13 19:21 - INFO - ---------------------------------------------
2024-10-13 19:21 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 19:21 - INFO - 	 Train Loss: 0.073
2024-10-13 19:21 - INFO - 	 Val. Loss: 0.067
2024-10-13 19:21 - INFO - 	 ROC-AUC: 0.985
2024-10-13 19:21 - INFO - 	 PR-AUC: 0.865
2024-10-13 19:21 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:21 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 19:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 19:21 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 19:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 19:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 19:21 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 19:21 - INFO - ---------------------------------------------
2024-10-13 19:23 - INFO - Fit the preprocessing pipeline
2024-10-13 19:23 - INFO - Training using device: cuda
2024-10-13 19:23 - INFO - Creating generators
2024-10-13 19:23 - INFO - The model has 651,257 trainable parameters
2024-10-13 19:23 - INFO - * Model:
2024-10-13 19:23 - INFO - * -----------
2024-10-13 19:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 19:23 - INFO - * -----------
2024-10-13 19:23 - INFO - Evaluating model based on: rocauc
2024-10-13 19:23 - INFO - Training..

2024-10-13 19:23 - INFO - ---------------------------------------------
2024-10-13 19:23 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 19:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96469
2024-10-13 19:23 - INFO - 	 Train Loss: 0.191
2024-10-13 19:23 - INFO - 	 Val. Loss: 0.111
2024-10-13 19:23 - INFO - 	 ROC-AUC: 0.965
2024-10-13 19:23 - INFO - 	 PR-AUC: 0.670
2024-10-13 19:23 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 19:23 - INFO - 	 Best Val. Loss: 0.111
2024-10-13 19:23 - INFO - 	 Best ROC-AUC: 0.965
2024-10-13 19:23 - INFO - 	 Best PR-AUC: 0.670
2024-10-13 19:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-13 19:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.672
2024-10-13 19:23 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-13 19:23 - INFO - ---------------------------------------------
2024-10-13 19:24 - INFO - ---------------------------------------------
2024-10-13 19:24 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 19:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97699
2024-10-13 19:24 - INFO - 	 Train Loss: 0.102
2024-10-13 19:24 - INFO - 	 Val. Loss: 0.088
2024-10-13 19:24 - INFO - 	 ROC-AUC: 0.977
2024-10-13 19:24 - INFO - 	 PR-AUC: 0.783
2024-10-13 19:24 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 19:24 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 19:24 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 19:24 - INFO - 	 Best PR-AUC: 0.783
2024-10-13 19:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 19:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-10-13 19:24 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 19:24 - INFO - ---------------------------------------------
2024-10-13 19:24 - INFO - ---------------------------------------------
2024-10-13 19:24 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 19:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98062
2024-10-13 19:24 - INFO - 	 Train Loss: 0.091
2024-10-13 19:24 - INFO - 	 Val. Loss: 0.080
2024-10-13 19:24 - INFO - 	 ROC-AUC: 0.981
2024-10-13 19:24 - INFO - 	 PR-AUC: 0.825
2024-10-13 19:24 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 19:24 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 19:24 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 19:24 - INFO - 	 Best PR-AUC: 0.825
2024-10-13 19:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-13 19:24 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 19:24 - INFO - ---------------------------------------------
2024-10-13 19:25 - INFO - ---------------------------------------------
2024-10-13 19:25 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 19:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98162
2024-10-13 19:25 - INFO - 	 Train Loss: 0.083
2024-10-13 19:25 - INFO - 	 Val. Loss: 0.082
2024-10-13 19:25 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:25 - INFO - 	 PR-AUC: 0.832
2024-10-13 19:25 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:25 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 19:25 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 19:25 - INFO - 	 Best PR-AUC: 0.832
2024-10-13 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-13 19:25 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 19:25 - INFO - ---------------------------------------------
2024-10-13 19:25 - INFO - ---------------------------------------------
2024-10-13 19:25 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 19:25 - INFO - 	 Train Loss: 0.082
2024-10-13 19:25 - INFO - 	 Val. Loss: 0.080
2024-10-13 19:25 - INFO - 	 ROC-AUC: 0.981
2024-10-13 19:25 - INFO - 	 PR-AUC: 0.819
2024-10-13 19:25 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:25 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 19:25 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 19:25 - INFO - 	 Best PR-AUC: 0.832
2024-10-13 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-13 19:25 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 19:25 - INFO - ---------------------------------------------
2024-10-13 19:26 - INFO - ---------------------------------------------
2024-10-13 19:26 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 19:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98393
2024-10-13 19:26 - INFO - 	 Train Loss: 0.080
2024-10-13 19:26 - INFO - 	 Val. Loss: 0.074
2024-10-13 19:26 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:26 - INFO - 	 PR-AUC: 0.858
2024-10-13 19:26 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:26 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 19:26 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:26 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 19:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 19:26 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:26 - INFO - ---------------------------------------------
2024-10-13 19:27 - INFO - ---------------------------------------------
2024-10-13 19:27 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 19:27 - INFO - 	 Train Loss: 0.078
2024-10-13 19:27 - INFO - 	 Val. Loss: 0.074
2024-10-13 19:27 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:27 - INFO - 	 PR-AUC: 0.840
2024-10-13 19:27 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 19:27 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 19:27 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:27 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 19:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 19:27 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:27 - INFO - ---------------------------------------------
2024-10-13 19:27 - INFO - ---------------------------------------------
2024-10-13 19:27 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 19:27 - INFO - 	 Train Loss: 0.076
2024-10-13 19:27 - INFO - 	 Val. Loss: 0.069
2024-10-13 19:27 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:27 - INFO - 	 PR-AUC: 0.861
2024-10-13 19:27 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:27 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 19:27 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:27 - INFO - 	 Best PR-AUC: 0.861
2024-10-13 19:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-13 19:27 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:27 - INFO - ---------------------------------------------
2024-10-13 19:28 - INFO - ---------------------------------------------
2024-10-13 19:28 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 19:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98485
2024-10-13 19:28 - INFO - 	 Train Loss: 0.075
2024-10-13 19:28 - INFO - 	 Val. Loss: 0.066
2024-10-13 19:28 - INFO - 	 ROC-AUC: 0.985
2024-10-13 19:28 - INFO - 	 PR-AUC: 0.869
2024-10-13 19:28 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 19:28 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 19:28 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:28 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 19:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 19:28 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 19:28 - INFO - ---------------------------------------------
2024-10-13 19:28 - INFO - ---------------------------------------------
2024-10-13 19:28 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 19:28 - INFO - 	 Train Loss: 0.074
2024-10-13 19:28 - INFO - 	 Val. Loss: 0.067
2024-10-13 19:28 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:28 - INFO - 	 PR-AUC: 0.869
2024-10-13 19:28 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:28 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 19:28 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:28 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 19:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 19:28 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 19:28 - INFO - ---------------------------------------------
2024-10-13 19:30 - INFO - Fit the preprocessing pipeline
2024-10-13 19:30 - INFO - Training using device: cuda
2024-10-13 19:30 - INFO - Creating generators
2024-10-13 19:30 - INFO - The model has 651,257 trainable parameters
2024-10-13 19:30 - INFO - * Model:
2024-10-13 19:30 - INFO - * -----------
2024-10-13 19:30 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 19:30 - INFO - * -----------
2024-10-13 19:30 - INFO - Evaluating model based on: rocauc
2024-10-13 19:30 - INFO - Training..

2024-10-13 19:30 - INFO - ---------------------------------------------
2024-10-13 19:30 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 19:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96708
2024-10-13 19:30 - INFO - 	 Train Loss: 0.194
2024-10-13 19:30 - INFO - 	 Val. Loss: 0.113
2024-10-13 19:30 - INFO - 	 ROC-AUC: 0.967
2024-10-13 19:30 - INFO - 	 PR-AUC: 0.663
2024-10-13 19:30 - INFO - 	 Recall for 0.4 precision: 0.936
2024-10-13 19:30 - INFO - 	 Best Val. Loss: 0.113
2024-10-13 19:30 - INFO - 	 Best ROC-AUC: 0.967
2024-10-13 19:30 - INFO - 	 Best PR-AUC: 0.663
2024-10-13 19:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 19:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.686
2024-10-13 19:30 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-13 19:30 - INFO - ---------------------------------------------
2024-10-13 19:31 - INFO - ---------------------------------------------
2024-10-13 19:31 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 19:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97601
2024-10-13 19:31 - INFO - 	 Train Loss: 0.104
2024-10-13 19:31 - INFO - 	 Val. Loss: 0.087
2024-10-13 19:31 - INFO - 	 ROC-AUC: 0.976
2024-10-13 19:31 - INFO - 	 PR-AUC: 0.772
2024-10-13 19:31 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 19:31 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 19:31 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 19:31 - INFO - 	 Best PR-AUC: 0.772
2024-10-13 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.765
2024-10-13 19:31 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 19:31 - INFO - ---------------------------------------------
2024-10-13 19:31 - INFO - ---------------------------------------------
2024-10-13 19:31 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 19:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97762
2024-10-13 19:31 - INFO - 	 Train Loss: 0.093
2024-10-13 19:31 - INFO - 	 Val. Loss: 0.082
2024-10-13 19:31 - INFO - 	 ROC-AUC: 0.978
2024-10-13 19:31 - INFO - 	 PR-AUC: 0.809
2024-10-13 19:31 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 19:31 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 19:31 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 19:31 - INFO - 	 Best PR-AUC: 0.809
2024-10-13 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-13 19:31 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 19:31 - INFO - ---------------------------------------------
2024-10-13 19:32 - INFO - ---------------------------------------------
2024-10-13 19:32 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 19:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98178
2024-10-13 19:32 - INFO - 	 Train Loss: 0.087
2024-10-13 19:32 - INFO - 	 Val. Loss: 0.075
2024-10-13 19:32 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:32 - INFO - 	 PR-AUC: 0.826
2024-10-13 19:32 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:32 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 19:32 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 19:32 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-13 19:32 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:32 - INFO - ---------------------------------------------
2024-10-13 19:32 - INFO - ---------------------------------------------
2024-10-13 19:32 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 19:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98212
2024-10-13 19:32 - INFO - 	 Train Loss: 0.082
2024-10-13 19:32 - INFO - 	 Val. Loss: 0.076
2024-10-13 19:32 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:32 - INFO - 	 PR-AUC: 0.841
2024-10-13 19:32 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 19:32 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 19:32 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 19:32 - INFO - 	 Best PR-AUC: 0.841
2024-10-13 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-10-13 19:32 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 19:32 - INFO - ---------------------------------------------
2024-10-13 19:33 - INFO - ---------------------------------------------
2024-10-13 19:33 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 19:33 - INFO - 	 Train Loss: 0.081
2024-10-13 19:33 - INFO - 	 Val. Loss: 0.074
2024-10-13 19:33 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:33 - INFO - 	 PR-AUC: 0.842
2024-10-13 19:33 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:33 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 19:33 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 19:33 - INFO - 	 Best PR-AUC: 0.842
2024-10-13 19:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 19:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 19:33 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 19:33 - INFO - ---------------------------------------------
2024-10-13 19:33 - INFO - ---------------------------------------------
2024-10-13 19:33 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 19:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98272
2024-10-13 19:33 - INFO - 	 Train Loss: 0.079
2024-10-13 19:33 - INFO - 	 Val. Loss: 0.073
2024-10-13 19:33 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:33 - INFO - 	 PR-AUC: 0.838
2024-10-13 19:33 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 19:33 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 19:33 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 19:33 - INFO - 	 Best PR-AUC: 0.842
2024-10-13 19:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 19:33 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 19:33 - INFO - ---------------------------------------------
2024-10-13 19:34 - INFO - ---------------------------------------------
2024-10-13 19:34 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 19:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98343
2024-10-13 19:34 - INFO - 	 Train Loss: 0.076
2024-10-13 19:34 - INFO - 	 Val. Loss: 0.071
2024-10-13 19:34 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:34 - INFO - 	 PR-AUC: 0.840
2024-10-13 19:34 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 19:34 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 19:34 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 19:34 - INFO - 	 Best PR-AUC: 0.842
2024-10-13 19:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 19:34 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 19:34 - INFO - ---------------------------------------------
2024-10-13 19:35 - INFO - ---------------------------------------------
2024-10-13 19:35 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 19:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98364
2024-10-13 19:35 - INFO - 	 Train Loss: 0.075
2024-10-13 19:35 - INFO - 	 Val. Loss: 0.070
2024-10-13 19:35 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:35 - INFO - 	 PR-AUC: 0.855
2024-10-13 19:35 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:35 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 19:35 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:35 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 19:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 19:35 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 19:35 - INFO - ---------------------------------------------
2024-10-13 19:35 - INFO - ---------------------------------------------
2024-10-13 19:35 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 19:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98472
2024-10-13 19:35 - INFO - 	 Train Loss: 0.075
2024-10-13 19:35 - INFO - 	 Val. Loss: 0.067
2024-10-13 19:35 - INFO - 	 ROC-AUC: 0.985
2024-10-13 19:35 - INFO - 	 PR-AUC: 0.858
2024-10-13 19:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:35 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 19:35 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:35 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 19:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 19:35 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 19:35 - INFO - ---------------------------------------------
2024-10-13 19:37 - INFO - Fit the preprocessing pipeline
2024-10-13 19:37 - INFO - Training using device: cuda
2024-10-13 19:37 - INFO - Creating generators
2024-10-13 19:37 - INFO - The model has 651,257 trainable parameters
2024-10-13 19:37 - INFO - * Model:
2024-10-13 19:37 - INFO - * -----------
2024-10-13 19:37 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 19:37 - INFO - * -----------
2024-10-13 19:37 - INFO - Evaluating model based on: rocauc
2024-10-13 19:37 - INFO - Training..

2024-10-13 19:37 - INFO - ---------------------------------------------
2024-10-13 19:37 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 19:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97226
2024-10-13 19:37 - INFO - 	 Train Loss: 0.191
2024-10-13 19:37 - INFO - 	 Val. Loss: 0.097
2024-10-13 19:37 - INFO - 	 ROC-AUC: 0.972
2024-10-13 19:37 - INFO - 	 PR-AUC: 0.751
2024-10-13 19:37 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-13 19:37 - INFO - 	 Best Val. Loss: 0.097
2024-10-13 19:37 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 19:37 - INFO - 	 Best PR-AUC: 0.751
2024-10-13 19:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 19:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.735
2024-10-13 19:37 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-13 19:37 - INFO - ---------------------------------------------
2024-10-13 19:38 - INFO - ---------------------------------------------
2024-10-13 19:38 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 19:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97785
2024-10-13 19:38 - INFO - 	 Train Loss: 0.102
2024-10-13 19:38 - INFO - 	 Val. Loss: 0.083
2024-10-13 19:38 - INFO - 	 ROC-AUC: 0.978
2024-10-13 19:38 - INFO - 	 PR-AUC: 0.799
2024-10-13 19:38 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 19:38 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 19:38 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 19:38 - INFO - 	 Best PR-AUC: 0.799
2024-10-13 19:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 19:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-13 19:38 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 19:38 - INFO - ---------------------------------------------
2024-10-13 19:38 - INFO - ---------------------------------------------
2024-10-13 19:38 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 19:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98115
2024-10-13 19:38 - INFO - 	 Train Loss: 0.090
2024-10-13 19:38 - INFO - 	 Val. Loss: 0.077
2024-10-13 19:38 - INFO - 	 ROC-AUC: 0.981
2024-10-13 19:38 - INFO - 	 PR-AUC: 0.823
2024-10-13 19:38 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 19:38 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 19:38 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 19:38 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 19:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 19:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-13 19:38 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 19:38 - INFO - ---------------------------------------------
2024-10-13 19:39 - INFO - ---------------------------------------------
2024-10-13 19:39 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 19:39 - INFO - 	 Train Loss: 0.086
2024-10-13 19:39 - INFO - 	 Val. Loss: 0.078
2024-10-13 19:39 - INFO - 	 ROC-AUC: 0.980
2024-10-13 19:39 - INFO - 	 PR-AUC: 0.820
2024-10-13 19:39 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 19:39 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 19:39 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 19:39 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-13 19:39 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 19:39 - INFO - ---------------------------------------------
2024-10-13 19:39 - INFO - ---------------------------------------------
2024-10-13 19:39 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 19:39 - INFO - 	 Train Loss: 0.081
2024-10-13 19:39 - INFO - 	 Val. Loss: 0.075
2024-10-13 19:39 - INFO - 	 ROC-AUC: 0.981
2024-10-13 19:39 - INFO - 	 PR-AUC: 0.840
2024-10-13 19:39 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 19:39 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 19:39 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 19:39 - INFO - 	 Best PR-AUC: 0.840
2024-10-13 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 19:39 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 19:39 - INFO - ---------------------------------------------
2024-10-13 19:40 - INFO - ---------------------------------------------
2024-10-13 19:40 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 19:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98251
2024-10-13 19:40 - INFO - 	 Train Loss: 0.079
2024-10-13 19:40 - INFO - 	 Val. Loss: 0.073
2024-10-13 19:40 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:40 - INFO - 	 PR-AUC: 0.844
2024-10-13 19:40 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:40 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 19:40 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 19:40 - INFO - 	 Best PR-AUC: 0.844
2024-10-13 19:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 19:40 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:40 - INFO - ---------------------------------------------
2024-10-13 19:40 - INFO - ---------------------------------------------
2024-10-13 19:40 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 19:40 - INFO - 	 Train Loss: 0.078
2024-10-13 19:40 - INFO - 	 Val. Loss: 0.074
2024-10-13 19:40 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:40 - INFO - 	 PR-AUC: 0.851
2024-10-13 19:40 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 19:40 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 19:40 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 19:40 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 19:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 19:40 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:40 - INFO - ---------------------------------------------
2024-10-13 19:41 - INFO - ---------------------------------------------
2024-10-13 19:41 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 19:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98495
2024-10-13 19:41 - INFO - 	 Train Loss: 0.076
2024-10-13 19:41 - INFO - 	 Val. Loss: 0.070
2024-10-13 19:41 - INFO - 	 ROC-AUC: 0.985
2024-10-13 19:41 - INFO - 	 PR-AUC: 0.851
2024-10-13 19:41 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 19:41 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 19:41 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:41 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 19:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 19:41 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 19:41 - INFO - ---------------------------------------------
2024-10-13 19:41 - INFO - ---------------------------------------------
2024-10-13 19:41 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 19:41 - INFO - 	 Train Loss: 0.076
2024-10-13 19:41 - INFO - 	 Val. Loss: 0.069
2024-10-13 19:41 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:41 - INFO - 	 PR-AUC: 0.856
2024-10-13 19:41 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 19:41 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 19:41 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:41 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 19:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-13 19:41 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 19:41 - INFO - ---------------------------------------------
2024-10-13 19:42 - INFO - ---------------------------------------------
2024-10-13 19:42 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 19:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98514
2024-10-13 19:42 - INFO - 	 Train Loss: 0.074
2024-10-13 19:42 - INFO - 	 Val. Loss: 0.067
2024-10-13 19:42 - INFO - 	 ROC-AUC: 0.985
2024-10-13 19:42 - INFO - 	 PR-AUC: 0.858
2024-10-13 19:42 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 19:42 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 19:42 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:42 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 19:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-13 19:42 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 19:42 - INFO - ---------------------------------------------
2024-10-13 19:44 - INFO - Fit the preprocessing pipeline
2024-10-13 19:44 - INFO - Training using device: cuda
2024-10-13 19:44 - INFO - Creating generators
2024-10-13 19:44 - INFO - The model has 651,257 trainable parameters
2024-10-13 19:44 - INFO - * Model:
2024-10-13 19:44 - INFO - * -----------
2024-10-13 19:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 19:44 - INFO - * -----------
2024-10-13 19:44 - INFO - Evaluating model based on: rocauc
2024-10-13 19:44 - INFO - Training..

2024-10-13 19:44 - INFO - ---------------------------------------------
2024-10-13 19:44 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 19:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96311
2024-10-13 19:44 - INFO - 	 Train Loss: 0.208
2024-10-13 19:44 - INFO - 	 Val. Loss: 0.108
2024-10-13 19:44 - INFO - 	 ROC-AUC: 0.963
2024-10-13 19:44 - INFO - 	 PR-AUC: 0.655
2024-10-13 19:44 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 19:44 - INFO - 	 Best Val. Loss: 0.108
2024-10-13 19:44 - INFO - 	 Best ROC-AUC: 0.963
2024-10-13 19:44 - INFO - 	 Best PR-AUC: 0.655
2024-10-13 19:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-13 19:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.659
2024-10-13 19:44 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-13 19:44 - INFO - ---------------------------------------------
2024-10-13 19:45 - INFO - ---------------------------------------------
2024-10-13 19:45 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 19:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97535
2024-10-13 19:45 - INFO - 	 Train Loss: 0.104
2024-10-13 19:45 - INFO - 	 Val. Loss: 0.087
2024-10-13 19:45 - INFO - 	 ROC-AUC: 0.975
2024-10-13 19:45 - INFO - 	 PR-AUC: 0.788
2024-10-13 19:45 - INFO - 	 Recall for 0.4 precision: 0.960
2024-10-13 19:45 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 19:45 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 19:45 - INFO - 	 Best PR-AUC: 0.788
2024-10-13 19:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 19:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.775
2024-10-13 19:45 - INFO - 	 Best Recall for 0.4 precision: 0.960
2024-10-13 19:45 - INFO - ---------------------------------------------
2024-10-13 19:45 - INFO - ---------------------------------------------
2024-10-13 19:45 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 19:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97813
2024-10-13 19:45 - INFO - 	 Train Loss: 0.090
2024-10-13 19:45 - INFO - 	 Val. Loss: 0.087
2024-10-13 19:45 - INFO - 	 ROC-AUC: 0.978
2024-10-13 19:45 - INFO - 	 PR-AUC: 0.810
2024-10-13 19:45 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 19:45 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 19:45 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 19:45 - INFO - 	 Best PR-AUC: 0.810
2024-10-13 19:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 19:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-13 19:45 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 19:45 - INFO - ---------------------------------------------
2024-10-13 19:46 - INFO - ---------------------------------------------
2024-10-13 19:46 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 19:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98463
2024-10-13 19:46 - INFO - 	 Train Loss: 0.085
2024-10-13 19:46 - INFO - 	 Val. Loss: 0.071
2024-10-13 19:46 - INFO - 	 ROC-AUC: 0.985
2024-10-13 19:46 - INFO - 	 PR-AUC: 0.854
2024-10-13 19:46 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 19:46 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 19:46 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:46 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 19:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 19:46 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 19:46 - INFO - ---------------------------------------------
2024-10-13 19:46 - INFO - ---------------------------------------------
2024-10-13 19:46 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 19:46 - INFO - 	 Train Loss: 0.081
2024-10-13 19:46 - INFO - 	 Val. Loss: 0.086
2024-10-13 19:46 - INFO - 	 ROC-AUC: 0.981
2024-10-13 19:46 - INFO - 	 PR-AUC: 0.837
2024-10-13 19:46 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 19:46 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 19:46 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:46 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 19:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 19:46 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 19:46 - INFO - ---------------------------------------------
2024-10-13 19:47 - INFO - ---------------------------------------------
2024-10-13 19:47 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 19:47 - INFO - 	 Train Loss: 0.079
2024-10-13 19:47 - INFO - 	 Val. Loss: 0.073
2024-10-13 19:47 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:47 - INFO - 	 PR-AUC: 0.854
2024-10-13 19:47 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:47 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 19:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:47 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 19:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 19:47 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:47 - INFO - ---------------------------------------------
2024-10-13 19:47 - INFO - ---------------------------------------------
2024-10-13 19:47 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 19:47 - INFO - 	 Train Loss: 0.077
2024-10-13 19:47 - INFO - 	 Val. Loss: 0.075
2024-10-13 19:47 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:47 - INFO - 	 PR-AUC: 0.853
2024-10-13 19:47 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 19:47 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 19:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:47 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 19:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 19:47 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:47 - INFO - ---------------------------------------------
2024-10-13 19:49 - INFO - Fit the preprocessing pipeline
2024-10-13 19:49 - INFO - Training using device: cuda
2024-10-13 19:49 - INFO - Creating generators
2024-10-13 19:49 - INFO - The model has 651,257 trainable parameters
2024-10-13 19:49 - INFO - * Model:
2024-10-13 19:49 - INFO - * -----------
2024-10-13 19:49 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 19:49 - INFO - * -----------
2024-10-13 19:49 - INFO - Evaluating model based on: rocauc
2024-10-13 19:49 - INFO - Training..

2024-10-13 19:50 - INFO - ---------------------------------------------
2024-10-13 19:50 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 19:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96731
2024-10-13 19:50 - INFO - 	 Train Loss: 0.183
2024-10-13 19:50 - INFO - 	 Val. Loss: 0.111
2024-10-13 19:50 - INFO - 	 ROC-AUC: 0.967
2024-10-13 19:50 - INFO - 	 PR-AUC: 0.663
2024-10-13 19:50 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-13 19:50 - INFO - 	 Best Val. Loss: 0.111
2024-10-13 19:50 - INFO - 	 Best ROC-AUC: 0.967
2024-10-13 19:50 - INFO - 	 Best PR-AUC: 0.663
2024-10-13 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-10-13 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.680
2024-10-13 19:50 - INFO - 	 Best Recall for 0.4 precision: 0.934
2024-10-13 19:50 - INFO - ---------------------------------------------
2024-10-13 19:51 - INFO - ---------------------------------------------
2024-10-13 19:51 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 19:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97704
2024-10-13 19:51 - INFO - 	 Train Loss: 0.102
2024-10-13 19:51 - INFO - 	 Val. Loss: 0.089
2024-10-13 19:51 - INFO - 	 ROC-AUC: 0.977
2024-10-13 19:51 - INFO - 	 PR-AUC: 0.793
2024-10-13 19:51 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 19:51 - INFO - 	 Best Val. Loss: 0.089
2024-10-13 19:51 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 19:51 - INFO - 	 Best PR-AUC: 0.793
2024-10-13 19:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 19:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-10-13 19:51 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 19:51 - INFO - ---------------------------------------------
2024-10-13 19:51 - INFO - ---------------------------------------------
2024-10-13 19:51 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 19:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97857
2024-10-13 19:51 - INFO - 	 Train Loss: 0.090
2024-10-13 19:51 - INFO - 	 Val. Loss: 0.080
2024-10-13 19:51 - INFO - 	 ROC-AUC: 0.979
2024-10-13 19:51 - INFO - 	 PR-AUC: 0.813
2024-10-13 19:51 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 19:51 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 19:51 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 19:51 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 19:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 19:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-10-13 19:51 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 19:51 - INFO - ---------------------------------------------
2024-10-13 19:52 - INFO - ---------------------------------------------
2024-10-13 19:52 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 19:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98154
2024-10-13 19:52 - INFO - 	 Train Loss: 0.087
2024-10-13 19:52 - INFO - 	 Val. Loss: 0.078
2024-10-13 19:52 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:52 - INFO - 	 PR-AUC: 0.839
2024-10-13 19:52 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 19:52 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 19:52 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 19:52 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 19:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 19:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 19:52 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 19:52 - INFO - ---------------------------------------------
2024-10-13 19:52 - INFO - ---------------------------------------------
2024-10-13 19:52 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 19:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98189
2024-10-13 19:52 - INFO - 	 Train Loss: 0.082
2024-10-13 19:52 - INFO - 	 Val. Loss: 0.074
2024-10-13 19:52 - INFO - 	 ROC-AUC: 0.982
2024-10-13 19:52 - INFO - 	 PR-AUC: 0.840
2024-10-13 19:52 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 19:52 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 19:52 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 19:52 - INFO - 	 Best PR-AUC: 0.840
2024-10-13 19:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 19:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-13 19:52 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 19:52 - INFO - ---------------------------------------------
2024-10-13 19:53 - INFO - ---------------------------------------------
2024-10-13 19:53 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 19:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98416
2024-10-13 19:53 - INFO - 	 Train Loss: 0.080
2024-10-13 19:53 - INFO - 	 Val. Loss: 0.070
2024-10-13 19:53 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:53 - INFO - 	 PR-AUC: 0.856
2024-10-13 19:53 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 19:53 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 19:53 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:53 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 19:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 19:53 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 19:53 - INFO - ---------------------------------------------
2024-10-13 19:53 - INFO - ---------------------------------------------
2024-10-13 19:53 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 19:53 - INFO - 	 Train Loss: 0.077
2024-10-13 19:53 - INFO - 	 Val. Loss: 0.071
2024-10-13 19:53 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:53 - INFO - 	 PR-AUC: 0.842
2024-10-13 19:53 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 19:53 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 19:53 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:53 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 19:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 19:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 19:53 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 19:53 - INFO - ---------------------------------------------
2024-10-13 19:54 - INFO - ---------------------------------------------
2024-10-13 19:54 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 19:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98445
2024-10-13 19:54 - INFO - 	 Train Loss: 0.076
2024-10-13 19:54 - INFO - 	 Val. Loss: 0.074
2024-10-13 19:54 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:54 - INFO - 	 PR-AUC: 0.866
2024-10-13 19:54 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 19:54 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 19:54 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:54 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 19:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 19:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 19:54 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 19:54 - INFO - ---------------------------------------------
2024-10-13 19:54 - INFO - ---------------------------------------------
2024-10-13 19:54 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 19:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98446
2024-10-13 19:54 - INFO - 	 Train Loss: 0.075
2024-10-13 19:54 - INFO - 	 Val. Loss: 0.069
2024-10-13 19:54 - INFO - 	 ROC-AUC: 0.984
2024-10-13 19:54 - INFO - 	 PR-AUC: 0.845
2024-10-13 19:54 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 19:54 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 19:54 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 19:54 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 19:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 19:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 19:54 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 19:54 - INFO - ---------------------------------------------
2024-10-13 19:55 - INFO - ---------------------------------------------
2024-10-13 19:55 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 19:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98502
2024-10-13 19:55 - INFO - 	 Train Loss: 0.074
2024-10-13 19:55 - INFO - 	 Val. Loss: 0.066
2024-10-13 19:55 - INFO - 	 ROC-AUC: 0.985
2024-10-13 19:55 - INFO - 	 PR-AUC: 0.858
2024-10-13 19:55 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 19:55 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 19:55 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 19:55 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 19:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 19:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 19:55 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 19:55 - INFO - ---------------------------------------------
2024-10-13 19:56 - INFO - Fit the preprocessing pipeline
2024-10-13 19:56 - INFO - Training using device: cuda
2024-10-13 19:56 - INFO - Creating generators
2024-10-13 19:56 - INFO - The model has 651,257 trainable parameters
2024-10-13 19:56 - INFO - * Model:
2024-10-13 19:56 - INFO - * -----------
2024-10-13 19:56 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 19:56 - INFO - * -----------
2024-10-13 19:56 - INFO - Evaluating model based on: rocauc
2024-10-13 19:56 - INFO - Training..

2024-10-13 19:57 - INFO - ---------------------------------------------
2024-10-13 19:57 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 19:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96962
2024-10-13 19:57 - INFO - 	 Train Loss: 0.190
2024-10-13 19:57 - INFO - 	 Val. Loss: 0.098
2024-10-13 19:57 - INFO - 	 ROC-AUC: 0.970
2024-10-13 19:57 - INFO - 	 PR-AUC: 0.736
2024-10-13 19:57 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-13 19:57 - INFO - 	 Best Val. Loss: 0.098
2024-10-13 19:57 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 19:57 - INFO - 	 Best PR-AUC: 0.736
2024-10-13 19:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-13 19:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.687
2024-10-13 19:57 - INFO - 	 Best Recall for 0.4 precision: 0.938
2024-10-13 19:57 - INFO - ---------------------------------------------
2024-10-13 19:57 - INFO - ---------------------------------------------
2024-10-13 19:57 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 19:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97608
2024-10-13 19:57 - INFO - 	 Train Loss: 0.106
2024-10-13 19:57 - INFO - 	 Val. Loss: 0.099
2024-10-13 19:57 - INFO - 	 ROC-AUC: 0.976
2024-10-13 19:57 - INFO - 	 PR-AUC: 0.766
2024-10-13 19:57 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 19:57 - INFO - 	 Best Val. Loss: 0.098
2024-10-13 19:57 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 19:57 - INFO - 	 Best PR-AUC: 0.766
2024-10-13 19:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 19:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.767
2024-10-13 19:57 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 19:57 - INFO - ---------------------------------------------
2024-10-13 19:58 - INFO - ---------------------------------------------
2024-10-13 19:58 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 19:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98144
2024-10-13 19:58 - INFO - 	 Train Loss: 0.092
2024-10-13 19:58 - INFO - 	 Val. Loss: 0.079
2024-10-13 19:58 - INFO - 	 ROC-AUC: 0.981
2024-10-13 19:58 - INFO - 	 PR-AUC: 0.837
2024-10-13 19:58 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:58 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 19:58 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 19:58 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 19:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 19:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-13 19:58 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 19:58 - INFO - ---------------------------------------------
2024-10-13 19:59 - INFO - ---------------------------------------------
2024-10-13 19:59 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 19:59 - INFO - 	 Train Loss: 0.085
2024-10-13 19:59 - INFO - 	 Val. Loss: 0.076
2024-10-13 19:59 - INFO - 	 ROC-AUC: 0.981
2024-10-13 19:59 - INFO - 	 PR-AUC: 0.833
2024-10-13 19:59 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 19:59 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 19:59 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 19:59 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 19:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 19:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-13 19:59 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 19:59 - INFO - ---------------------------------------------
2024-10-13 19:59 - INFO - ---------------------------------------------
2024-10-13 19:59 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 19:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9826
2024-10-13 19:59 - INFO - 	 Train Loss: 0.081
2024-10-13 19:59 - INFO - 	 Val. Loss: 0.074
2024-10-13 19:59 - INFO - 	 ROC-AUC: 0.983
2024-10-13 19:59 - INFO - 	 PR-AUC: 0.852
2024-10-13 19:59 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 19:59 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 19:59 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 19:59 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 19:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 19:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 19:59 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 19:59 - INFO - ---------------------------------------------
2024-10-13 20:00 - INFO - ---------------------------------------------
2024-10-13 20:00 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 20:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98445
2024-10-13 20:00 - INFO - 	 Train Loss: 0.079
2024-10-13 20:00 - INFO - 	 Val. Loss: 0.069
2024-10-13 20:00 - INFO - 	 ROC-AUC: 0.984
2024-10-13 20:00 - INFO - 	 PR-AUC: 0.857
2024-10-13 20:00 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 20:00 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 20:00 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 20:00 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 20:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-13 20:00 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 20:00 - INFO - ---------------------------------------------
2024-10-13 20:00 - INFO - ---------------------------------------------
2024-10-13 20:00 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 20:00 - INFO - 	 Train Loss: 0.077
2024-10-13 20:00 - INFO - 	 Val. Loss: 0.071
2024-10-13 20:00 - INFO - 	 ROC-AUC: 0.983
2024-10-13 20:00 - INFO - 	 PR-AUC: 0.848
2024-10-13 20:00 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 20:00 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 20:00 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 20:00 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 20:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-13 20:00 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 20:00 - INFO - ---------------------------------------------
2024-10-13 20:01 - INFO - ---------------------------------------------
2024-10-13 20:01 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 20:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9858
2024-10-13 20:01 - INFO - 	 Train Loss: 0.076
2024-10-13 20:01 - INFO - 	 Val. Loss: 0.066
2024-10-13 20:01 - INFO - 	 ROC-AUC: 0.986
2024-10-13 20:01 - INFO - 	 PR-AUC: 0.862
2024-10-13 20:01 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 20:01 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 20:01 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 20:01 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 20:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 20:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-13 20:01 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 20:01 - INFO - ---------------------------------------------
2024-10-13 20:01 - INFO - ---------------------------------------------
2024-10-13 20:01 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 20:01 - INFO - 	 Train Loss: 0.075
2024-10-13 20:01 - INFO - 	 Val. Loss: 0.069
2024-10-13 20:01 - INFO - 	 ROC-AUC: 0.984
2024-10-13 20:01 - INFO - 	 PR-AUC: 0.858
2024-10-13 20:01 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 20:01 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 20:01 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 20:01 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 20:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 20:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-13 20:01 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 20:01 - INFO - ---------------------------------------------
2024-10-13 20:02 - INFO - ---------------------------------------------
2024-10-13 20:02 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 20:02 - INFO - 	 Train Loss: 0.074
2024-10-13 20:02 - INFO - 	 Val. Loss: 0.065
2024-10-13 20:02 - INFO - 	 ROC-AUC: 0.985
2024-10-13 20:02 - INFO - 	 PR-AUC: 0.871
2024-10-13 20:02 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 20:02 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 20:02 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 20:02 - INFO - 	 Best PR-AUC: 0.871
2024-10-13 20:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 20:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-13 20:02 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 20:02 - INFO - ---------------------------------------------
2024-10-13 20:03 - INFO - Fit the preprocessing pipeline
2024-10-13 20:03 - INFO - Training using device: cuda
2024-10-13 20:03 - INFO - Creating generators
2024-10-13 20:03 - INFO - The model has 651,257 trainable parameters
2024-10-13 20:03 - INFO - * Model:
2024-10-13 20:03 - INFO - * -----------
2024-10-13 20:03 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 20:03 - INFO - * -----------
2024-10-13 20:03 - INFO - Evaluating model based on: rocauc
2024-10-13 20:03 - INFO - Training..

2024-10-13 20:04 - INFO - ---------------------------------------------
2024-10-13 20:04 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 20:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95863
2024-10-13 20:04 - INFO - 	 Train Loss: 0.194
2024-10-13 20:04 - INFO - 	 Val. Loss: 0.131
2024-10-13 20:04 - INFO - 	 ROC-AUC: 0.959
2024-10-13 20:04 - INFO - 	 PR-AUC: 0.618
2024-10-13 20:04 - INFO - 	 Recall for 0.4 precision: 0.903
2024-10-13 20:04 - INFO - 	 Best Val. Loss: 0.131
2024-10-13 20:04 - INFO - 	 Best ROC-AUC: 0.959
2024-10-13 20:04 - INFO - 	 Best PR-AUC: 0.618
2024-10-13 20:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-13 20:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.665
2024-10-13 20:04 - INFO - 	 Best Recall for 0.4 precision: 0.903
2024-10-13 20:04 - INFO - ---------------------------------------------
2024-10-13 20:04 - INFO - ---------------------------------------------
2024-10-13 20:04 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 20:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97712
2024-10-13 20:04 - INFO - 	 Train Loss: 0.102
2024-10-13 20:04 - INFO - 	 Val. Loss: 0.096
2024-10-13 20:04 - INFO - 	 ROC-AUC: 0.977
2024-10-13 20:04 - INFO - 	 PR-AUC: 0.785
2024-10-13 20:04 - INFO - 	 Recall for 0.4 precision: 0.960
2024-10-13 20:04 - INFO - 	 Best Val. Loss: 0.096
2024-10-13 20:04 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 20:04 - INFO - 	 Best PR-AUC: 0.785
2024-10-13 20:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 20:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.771
2024-10-13 20:04 - INFO - 	 Best Recall for 0.4 precision: 0.960
2024-10-13 20:04 - INFO - ---------------------------------------------
2024-10-13 20:05 - INFO - ---------------------------------------------
2024-10-13 20:05 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 20:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97939
2024-10-13 20:05 - INFO - 	 Train Loss: 0.092
2024-10-13 20:05 - INFO - 	 Val. Loss: 0.084
2024-10-13 20:05 - INFO - 	 ROC-AUC: 0.979
2024-10-13 20:05 - INFO - 	 PR-AUC: 0.815
2024-10-13 20:05 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 20:05 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 20:05 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 20:05 - INFO - 	 Best PR-AUC: 0.815
2024-10-13 20:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 20:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-10-13 20:05 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 20:05 - INFO - ---------------------------------------------
2024-10-13 20:06 - INFO - ---------------------------------------------
2024-10-13 20:06 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 20:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9831
2024-10-13 20:06 - INFO - 	 Train Loss: 0.087
2024-10-13 20:06 - INFO - 	 Val. Loss: 0.076
2024-10-13 20:06 - INFO - 	 ROC-AUC: 0.983
2024-10-13 20:06 - INFO - 	 PR-AUC: 0.842
2024-10-13 20:06 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 20:06 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:06 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 20:06 - INFO - 	 Best PR-AUC: 0.842
2024-10-13 20:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 20:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 20:06 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 20:06 - INFO - ---------------------------------------------
2024-10-13 20:06 - INFO - ---------------------------------------------
2024-10-13 20:06 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 20:06 - INFO - 	 Train Loss: 0.083
2024-10-13 20:06 - INFO - 	 Val. Loss: 0.078
2024-10-13 20:06 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:06 - INFO - 	 PR-AUC: 0.823
2024-10-13 20:06 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 20:06 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:06 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 20:06 - INFO - 	 Best PR-AUC: 0.842
2024-10-13 20:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 20:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 20:06 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 20:06 - INFO - ---------------------------------------------
2024-10-13 20:07 - INFO - ---------------------------------------------
2024-10-13 20:07 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 20:07 - INFO - 	 Train Loss: 0.080
2024-10-13 20:07 - INFO - 	 Val. Loss: 0.074
2024-10-13 20:07 - INFO - 	 ROC-AUC: 0.982
2024-10-13 20:07 - INFO - 	 PR-AUC: 0.849
2024-10-13 20:07 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 20:07 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 20:07 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 20:07 - INFO - 	 Best PR-AUC: 0.849
2024-10-13 20:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 20:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-13 20:07 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 20:07 - INFO - ---------------------------------------------
2024-10-13 20:07 - INFO - ---------------------------------------------
2024-10-13 20:07 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 20:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98352
2024-10-13 20:07 - INFO - 	 Train Loss: 0.077
2024-10-13 20:07 - INFO - 	 Val. Loss: 0.072
2024-10-13 20:07 - INFO - 	 ROC-AUC: 0.984
2024-10-13 20:07 - INFO - 	 PR-AUC: 0.853
2024-10-13 20:07 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 20:07 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 20:07 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 20:07 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 20:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 20:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 20:07 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:07 - INFO - ---------------------------------------------
2024-10-13 20:08 - INFO - ---------------------------------------------
2024-10-13 20:08 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 20:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98471
2024-10-13 20:08 - INFO - 	 Train Loss: 0.077
2024-10-13 20:08 - INFO - 	 Val. Loss: 0.069
2024-10-13 20:08 - INFO - 	 ROC-AUC: 0.985
2024-10-13 20:08 - INFO - 	 PR-AUC: 0.852
2024-10-13 20:08 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 20:08 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 20:08 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 20:08 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 20:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 20:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 20:08 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:08 - INFO - ---------------------------------------------
2024-10-13 20:08 - INFO - ---------------------------------------------
2024-10-13 20:08 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 20:08 - INFO - 	 Train Loss: 0.075
2024-10-13 20:08 - INFO - 	 Val. Loss: 0.069
2024-10-13 20:08 - INFO - 	 ROC-AUC: 0.984
2024-10-13 20:08 - INFO - 	 PR-AUC: 0.858
2024-10-13 20:08 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 20:08 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 20:08 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 20:08 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 20:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 20:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 20:08 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:08 - INFO - ---------------------------------------------
2024-10-13 20:09 - INFO - ---------------------------------------------
2024-10-13 20:09 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 20:09 - INFO - 	 Train Loss: 0.073
2024-10-13 20:09 - INFO - 	 Val. Loss: 0.069
2024-10-13 20:09 - INFO - 	 ROC-AUC: 0.984
2024-10-13 20:09 - INFO - 	 PR-AUC: 0.860
2024-10-13 20:09 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 20:09 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 20:09 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 20:09 - INFO - 	 Best PR-AUC: 0.860
2024-10-13 20:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 20:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 20:09 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 20:09 - INFO - ---------------------------------------------
2024-10-13 20:10 - INFO - Fit the preprocessing pipeline
2024-10-13 20:10 - INFO - Training using device: cuda
2024-10-13 20:10 - INFO - Creating generators
2024-10-13 20:10 - INFO - The model has 651,257 trainable parameters
2024-10-13 20:10 - INFO - * Model:
2024-10-13 20:10 - INFO - * -----------
2024-10-13 20:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 20:10 - INFO - * -----------
2024-10-13 20:10 - INFO - Evaluating model based on: rocauc
2024-10-13 20:10 - INFO - Training..

2024-10-13 20:11 - INFO - ---------------------------------------------
2024-10-13 20:11 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 20:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97116
2024-10-13 20:11 - INFO - 	 Train Loss: 0.187
2024-10-13 20:11 - INFO - 	 Val. Loss: 0.097
2024-10-13 20:11 - INFO - 	 ROC-AUC: 0.971
2024-10-13 20:11 - INFO - 	 PR-AUC: 0.734
2024-10-13 20:11 - INFO - 	 Recall for 0.4 precision: 0.945
2024-10-13 20:11 - INFO - 	 Best Val. Loss: 0.097
2024-10-13 20:11 - INFO - 	 Best ROC-AUC: 0.971
2024-10-13 20:11 - INFO - 	 Best PR-AUC: 0.734
2024-10-13 20:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-13 20:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.711
2024-10-13 20:11 - INFO - 	 Best Recall for 0.4 precision: 0.945
2024-10-13 20:11 - INFO - ---------------------------------------------
2024-10-13 20:11 - INFO - ---------------------------------------------
2024-10-13 20:11 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 20:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97802
2024-10-13 20:11 - INFO - 	 Train Loss: 0.102
2024-10-13 20:11 - INFO - 	 Val. Loss: 0.086
2024-10-13 20:11 - INFO - 	 ROC-AUC: 0.978
2024-10-13 20:11 - INFO - 	 PR-AUC: 0.811
2024-10-13 20:11 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 20:11 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 20:11 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 20:11 - INFO - 	 Best PR-AUC: 0.811
2024-10-13 20:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-13 20:11 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 20:11 - INFO - ---------------------------------------------
2024-10-13 20:12 - INFO - ---------------------------------------------
2024-10-13 20:12 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 20:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98133
2024-10-13 20:12 - INFO - 	 Train Loss: 0.091
2024-10-13 20:12 - INFO - 	 Val. Loss: 0.076
2024-10-13 20:12 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:12 - INFO - 	 PR-AUC: 0.824
2024-10-13 20:12 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 20:12 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:12 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 20:12 - INFO - 	 Best PR-AUC: 0.824
2024-10-13 20:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.796
2024-10-13 20:12 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 20:12 - INFO - ---------------------------------------------
2024-10-13 20:12 - INFO - ---------------------------------------------
2024-10-13 20:12 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 20:12 - INFO - 	 Train Loss: 0.085
2024-10-13 20:12 - INFO - 	 Val. Loss: 0.076
2024-10-13 20:12 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:12 - INFO - 	 PR-AUC: 0.832
2024-10-13 20:12 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 20:12 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:12 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 20:12 - INFO - 	 Best PR-AUC: 0.832
2024-10-13 20:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 20:12 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 20:12 - INFO - ---------------------------------------------
2024-10-13 20:13 - INFO - ---------------------------------------------
2024-10-13 20:13 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 20:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98225
2024-10-13 20:13 - INFO - 	 Train Loss: 0.080
2024-10-13 20:13 - INFO - 	 Val. Loss: 0.076
2024-10-13 20:13 - INFO - 	 ROC-AUC: 0.982
2024-10-13 20:13 - INFO - 	 PR-AUC: 0.854
2024-10-13 20:13 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 20:13 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:13 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:13 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 20:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 20:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-13 20:13 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 20:13 - INFO - ---------------------------------------------
2024-10-13 20:14 - INFO - ---------------------------------------------
2024-10-13 20:14 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 20:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98373
2024-10-13 20:14 - INFO - 	 Train Loss: 0.079
2024-10-13 20:14 - INFO - 	 Val. Loss: 0.069
2024-10-13 20:14 - INFO - 	 ROC-AUC: 0.984
2024-10-13 20:14 - INFO - 	 PR-AUC: 0.860
2024-10-13 20:14 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 20:14 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 20:14 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 20:14 - INFO - 	 Best PR-AUC: 0.860
2024-10-13 20:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 20:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 20:14 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 20:14 - INFO - ---------------------------------------------
2024-10-13 20:14 - INFO - ---------------------------------------------
2024-10-13 20:14 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 20:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98651
2024-10-13 20:14 - INFO - 	 Train Loss: 0.076
2024-10-13 20:14 - INFO - 	 Val. Loss: 0.064
2024-10-13 20:14 - INFO - 	 ROC-AUC: 0.987
2024-10-13 20:14 - INFO - 	 PR-AUC: 0.876
2024-10-13 20:14 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 20:14 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 20:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 20:14 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 20:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 20:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 20:14 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 20:14 - INFO - ---------------------------------------------
2024-10-13 20:15 - INFO - ---------------------------------------------
2024-10-13 20:15 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 20:15 - INFO - 	 Train Loss: 0.075
2024-10-13 20:15 - INFO - 	 Val. Loss: 0.072
2024-10-13 20:15 - INFO - 	 ROC-AUC: 0.986
2024-10-13 20:15 - INFO - 	 PR-AUC: 0.867
2024-10-13 20:15 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 20:15 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 20:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 20:15 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 20:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 20:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 20:15 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 20:15 - INFO - ---------------------------------------------
2024-10-13 20:15 - INFO - ---------------------------------------------
2024-10-13 20:15 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 20:15 - INFO - 	 Train Loss: 0.074
2024-10-13 20:15 - INFO - 	 Val. Loss: 0.071
2024-10-13 20:15 - INFO - 	 ROC-AUC: 0.983
2024-10-13 20:15 - INFO - 	 PR-AUC: 0.850
2024-10-13 20:15 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 20:15 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 20:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 20:15 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 20:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 20:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 20:15 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 20:15 - INFO - ---------------------------------------------
2024-10-13 20:16 - INFO - ---------------------------------------------
2024-10-13 20:16 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 20:16 - INFO - 	 Train Loss: 0.073
2024-10-13 20:16 - INFO - 	 Val. Loss: 0.066
2024-10-13 20:16 - INFO - 	 ROC-AUC: 0.985
2024-10-13 20:16 - INFO - 	 PR-AUC: 0.868
2024-10-13 20:16 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 20:16 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 20:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 20:16 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 20:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 20:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 20:16 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 20:16 - INFO - ---------------------------------------------
