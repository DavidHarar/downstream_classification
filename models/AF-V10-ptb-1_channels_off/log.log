2024-10-11 21:38 - INFO - Fit the preprocessing pipeline
2024-10-11 21:38 - INFO - Training using device: cuda
2024-10-11 21:38 - INFO - Creating generators
2024-10-11 21:38 - INFO - The model has 651,257 trainable parameters
2024-10-11 21:38 - INFO - * Model:
2024-10-11 21:38 - INFO - * -----------
2024-10-11 21:38 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 21:38 - INFO - * -----------
2024-10-11 21:38 - INFO - Evaluating model based on: rocauc
2024-10-11 21:38 - INFO - Training..

2024-10-11 21:39 - INFO - ---------------------------------------------
2024-10-11 21:39 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-11 21:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98114
2024-10-11 21:39 - INFO - 	 Train Loss: 0.152
2024-10-11 21:39 - INFO - 	 Val. Loss: 0.076
2024-10-11 21:39 - INFO - 	 ROC-AUC: 0.981
2024-10-11 21:39 - INFO - 	 PR-AUC: 0.843
2024-10-11 21:39 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 21:39 - INFO - 	 Best Val. Loss: 0.076
2024-10-11 21:39 - INFO - 	 Best ROC-AUC: 0.981
2024-10-11 21:39 - INFO - 	 Best PR-AUC: 0.843
2024-10-11 21:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-11 21:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-10-11 21:39 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-11 21:39 - INFO - ---------------------------------------------
2024-10-11 21:39 - INFO - ---------------------------------------------
2024-10-11 21:39 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-11 21:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98465
2024-10-11 21:39 - INFO - 	 Train Loss: 0.080
2024-10-11 21:39 - INFO - 	 Val. Loss: 0.066
2024-10-11 21:39 - INFO - 	 ROC-AUC: 0.985
2024-10-11 21:39 - INFO - 	 PR-AUC: 0.868
2024-10-11 21:39 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 21:39 - INFO - 	 Best Val. Loss: 0.066
2024-10-11 21:39 - INFO - 	 Best ROC-AUC: 0.985
2024-10-11 21:39 - INFO - 	 Best PR-AUC: 0.868
2024-10-11 21:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 21:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-11 21:39 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:39 - INFO - ---------------------------------------------
2024-10-11 21:40 - INFO - ---------------------------------------------
2024-10-11 21:40 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-11 21:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98562
2024-10-11 21:40 - INFO - 	 Train Loss: 0.069
2024-10-11 21:40 - INFO - 	 Val. Loss: 0.066
2024-10-11 21:40 - INFO - 	 ROC-AUC: 0.986
2024-10-11 21:40 - INFO - 	 PR-AUC: 0.877
2024-10-11 21:40 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 21:40 - INFO - 	 Best Val. Loss: 0.066
2024-10-11 21:40 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 21:40 - INFO - 	 Best PR-AUC: 0.877
2024-10-11 21:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-11 21:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-11 21:40 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:40 - INFO - ---------------------------------------------
2024-10-11 21:40 - INFO - ---------------------------------------------
2024-10-11 21:40 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-11 21:40 - INFO - 	 Train Loss: 0.064
2024-10-11 21:40 - INFO - 	 Val. Loss: 0.068
2024-10-11 21:40 - INFO - 	 ROC-AUC: 0.985
2024-10-11 21:40 - INFO - 	 PR-AUC: 0.874
2024-10-11 21:40 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 21:40 - INFO - 	 Best Val. Loss: 0.066
2024-10-11 21:40 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 21:40 - INFO - 	 Best PR-AUC: 0.877
2024-10-11 21:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-11 21:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-11 21:40 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:40 - INFO - ---------------------------------------------
2024-10-11 21:41 - INFO - ---------------------------------------------
2024-10-11 21:41 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-11 21:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98669
2024-10-11 21:41 - INFO - 	 Train Loss: 0.061
2024-10-11 21:41 - INFO - 	 Val. Loss: 0.062
2024-10-11 21:41 - INFO - 	 ROC-AUC: 0.987
2024-10-11 21:41 - INFO - 	 PR-AUC: 0.886
2024-10-11 21:41 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-11 21:41 - INFO - 	 Best Val. Loss: 0.062
2024-10-11 21:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 21:41 - INFO - 	 Best PR-AUC: 0.886
2024-10-11 21:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 21:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-11 21:41 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:41 - INFO - ---------------------------------------------
2024-10-11 21:42 - INFO - ---------------------------------------------
2024-10-11 21:42 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 21:42 - INFO - 	 Train Loss: 0.058
2024-10-11 21:42 - INFO - 	 Val. Loss: 0.063
2024-10-11 21:42 - INFO - 	 ROC-AUC: 0.986
2024-10-11 21:42 - INFO - 	 PR-AUC: 0.884
2024-10-11 21:42 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-11 21:42 - INFO - 	 Best Val. Loss: 0.062
2024-10-11 21:42 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 21:42 - INFO - 	 Best PR-AUC: 0.886
2024-10-11 21:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 21:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-11 21:42 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:42 - INFO - ---------------------------------------------
2024-10-11 21:42 - INFO - ---------------------------------------------
2024-10-11 21:42 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-11 21:42 - INFO - 	 Train Loss: 0.055
2024-10-11 21:42 - INFO - 	 Val. Loss: 0.063
2024-10-11 21:42 - INFO - 	 ROC-AUC: 0.986
2024-10-11 21:42 - INFO - 	 PR-AUC: 0.891
2024-10-11 21:42 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-11 21:42 - INFO - 	 Best Val. Loss: 0.062
2024-10-11 21:42 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 21:42 - INFO - 	 Best PR-AUC: 0.891
2024-10-11 21:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 21:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-11 21:42 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:42 - INFO - ---------------------------------------------
2024-10-11 21:43 - INFO - ---------------------------------------------
2024-10-11 21:43 - INFO - Epoch: 08 | Time: 0m 33s
2024-10-11 21:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98729
2024-10-11 21:43 - INFO - 	 Train Loss: 0.054
2024-10-11 21:43 - INFO - 	 Val. Loss: 0.061
2024-10-11 21:43 - INFO - 	 ROC-AUC: 0.987
2024-10-11 21:43 - INFO - 	 PR-AUC: 0.893
2024-10-11 21:43 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 21:43 - INFO - 	 Best Val. Loss: 0.061
2024-10-11 21:43 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 21:43 - INFO - 	 Best PR-AUC: 0.893
2024-10-11 21:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 21:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-11 21:43 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 21:43 - INFO - ---------------------------------------------
2024-10-11 21:43 - INFO - ---------------------------------------------
2024-10-11 21:43 - INFO - Epoch: 09 | Time: 0m 33s
2024-10-11 21:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9879
2024-10-11 21:43 - INFO - 	 Train Loss: 0.052
2024-10-11 21:43 - INFO - 	 Val. Loss: 0.058
2024-10-11 21:43 - INFO - 	 ROC-AUC: 0.988
2024-10-11 21:43 - INFO - 	 PR-AUC: 0.899
2024-10-11 21:43 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 21:43 - INFO - 	 Best Val. Loss: 0.058
2024-10-11 21:43 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 21:43 - INFO - 	 Best PR-AUC: 0.899
2024-10-11 21:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 21:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-10-11 21:43 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 21:43 - INFO - ---------------------------------------------
2024-10-11 21:44 - INFO - ---------------------------------------------
2024-10-11 21:44 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-11 21:44 - INFO - 	 Train Loss: 0.050
2024-10-11 21:44 - INFO - 	 Val. Loss: 0.061
2024-10-11 21:44 - INFO - 	 ROC-AUC: 0.986
2024-10-11 21:44 - INFO - 	 PR-AUC: 0.892
2024-10-11 21:44 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 21:44 - INFO - 	 Best Val. Loss: 0.058
2024-10-11 21:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 21:44 - INFO - 	 Best PR-AUC: 0.899
2024-10-11 21:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 21:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-10-11 21:44 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 21:44 - INFO - ---------------------------------------------
2024-10-11 21:45 - INFO - Fit the preprocessing pipeline
2024-10-11 21:45 - INFO - Training using device: cuda
2024-10-11 21:45 - INFO - Creating generators
2024-10-11 21:45 - INFO - The model has 651,257 trainable parameters
2024-10-11 21:45 - INFO - * Model:
2024-10-11 21:45 - INFO - * -----------
2024-10-11 21:45 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 21:45 - INFO - * -----------
2024-10-11 21:45 - INFO - Evaluating model based on: rocauc
2024-10-11 21:45 - INFO - Training..

2024-10-11 21:46 - INFO - ---------------------------------------------
2024-10-11 21:46 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-11 21:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97769
2024-10-11 21:46 - INFO - 	 Train Loss: 0.156
2024-10-11 21:46 - INFO - 	 Val. Loss: 0.081
2024-10-11 21:46 - INFO - 	 ROC-AUC: 0.978
2024-10-11 21:46 - INFO - 	 PR-AUC: 0.821
2024-10-11 21:46 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-11 21:46 - INFO - 	 Best Val. Loss: 0.081
2024-10-11 21:46 - INFO - 	 Best ROC-AUC: 0.978
2024-10-11 21:46 - INFO - 	 Best PR-AUC: 0.821
2024-10-11 21:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-11 21:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-11 21:46 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-11 21:46 - INFO - ---------------------------------------------
2024-10-11 21:46 - INFO - ---------------------------------------------
2024-10-11 21:46 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-11 21:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9841
2024-10-11 21:46 - INFO - 	 Train Loss: 0.082
2024-10-11 21:46 - INFO - 	 Val. Loss: 0.068
2024-10-11 21:46 - INFO - 	 ROC-AUC: 0.984
2024-10-11 21:46 - INFO - 	 PR-AUC: 0.859
2024-10-11 21:46 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 21:46 - INFO - 	 Best Val. Loss: 0.068
2024-10-11 21:46 - INFO - 	 Best ROC-AUC: 0.984
2024-10-11 21:46 - INFO - 	 Best PR-AUC: 0.859
2024-10-11 21:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-11 21:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-11 21:46 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:46 - INFO - ---------------------------------------------
2024-10-11 21:47 - INFO - ---------------------------------------------
2024-10-11 21:47 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-11 21:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98533
2024-10-11 21:47 - INFO - 	 Train Loss: 0.072
2024-10-11 21:47 - INFO - 	 Val. Loss: 0.065
2024-10-11 21:47 - INFO - 	 ROC-AUC: 0.985
2024-10-11 21:47 - INFO - 	 PR-AUC: 0.868
2024-10-11 21:47 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 21:47 - INFO - 	 Best Val. Loss: 0.065
2024-10-11 21:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-11 21:47 - INFO - 	 Best PR-AUC: 0.868
2024-10-11 21:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 21:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-11 21:47 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:47 - INFO - ---------------------------------------------
2024-10-11 21:48 - INFO - ---------------------------------------------
2024-10-11 21:48 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-11 21:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98583
2024-10-11 21:48 - INFO - 	 Train Loss: 0.066
2024-10-11 21:48 - INFO - 	 Val. Loss: 0.063
2024-10-11 21:48 - INFO - 	 ROC-AUC: 0.986
2024-10-11 21:48 - INFO - 	 PR-AUC: 0.875
2024-10-11 21:48 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 21:48 - INFO - 	 Best Val. Loss: 0.063
2024-10-11 21:48 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 21:48 - INFO - 	 Best PR-AUC: 0.875
2024-10-11 21:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 21:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-11 21:48 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:48 - INFO - ---------------------------------------------
2024-10-11 21:48 - INFO - ---------------------------------------------
2024-10-11 21:48 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-11 21:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98834
2024-10-11 21:48 - INFO - 	 Train Loss: 0.063
2024-10-11 21:48 - INFO - 	 Val. Loss: 0.059
2024-10-11 21:48 - INFO - 	 ROC-AUC: 0.988
2024-10-11 21:48 - INFO - 	 PR-AUC: 0.900
2024-10-11 21:48 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-11 21:48 - INFO - 	 Best Val. Loss: 0.059
2024-10-11 21:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 21:48 - INFO - 	 Best PR-AUC: 0.900
2024-10-11 21:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 21:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-11 21:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-11 21:48 - INFO - ---------------------------------------------
2024-10-11 21:49 - INFO - ---------------------------------------------
2024-10-11 21:49 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 21:49 - INFO - 	 Train Loss: 0.061
2024-10-11 21:49 - INFO - 	 Val. Loss: 0.060
2024-10-11 21:49 - INFO - 	 ROC-AUC: 0.987
2024-10-11 21:49 - INFO - 	 PR-AUC: 0.888
2024-10-11 21:49 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 21:49 - INFO - 	 Best Val. Loss: 0.059
2024-10-11 21:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 21:49 - INFO - 	 Best PR-AUC: 0.900
2024-10-11 21:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 21:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-11 21:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-11 21:49 - INFO - ---------------------------------------------
2024-10-11 21:49 - INFO - ---------------------------------------------
2024-10-11 21:49 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-11 21:49 - INFO - 	 Train Loss: 0.057
2024-10-11 21:49 - INFO - 	 Val. Loss: 0.060
2024-10-11 21:49 - INFO - 	 ROC-AUC: 0.988
2024-10-11 21:49 - INFO - 	 PR-AUC: 0.901
2024-10-11 21:49 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-11 21:49 - INFO - 	 Best Val. Loss: 0.059
2024-10-11 21:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 21:49 - INFO - 	 Best PR-AUC: 0.901
2024-10-11 21:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 21:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-11 21:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-11 21:49 - INFO - ---------------------------------------------
2024-10-11 21:50 - INFO - ---------------------------------------------
2024-10-11 21:50 - INFO - Epoch: 08 | Time: 0m 33s
2024-10-11 21:50 - INFO - 	 Train Loss: 0.055
2024-10-11 21:50 - INFO - 	 Val. Loss: 0.057
2024-10-11 21:50 - INFO - 	 ROC-AUC: 0.988
2024-10-11 21:50 - INFO - 	 PR-AUC: 0.907
2024-10-11 21:50 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 21:50 - INFO - 	 Best Val. Loss: 0.057
2024-10-11 21:50 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 21:50 - INFO - 	 Best PR-AUC: 0.907
2024-10-11 21:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 21:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-11 21:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-11 21:50 - INFO - ---------------------------------------------
2024-10-11 21:50 - INFO - ---------------------------------------------
2024-10-11 21:50 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-11 21:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98888
2024-10-11 21:50 - INFO - 	 Train Loss: 0.054
2024-10-11 21:50 - INFO - 	 Val. Loss: 0.056
2024-10-11 21:50 - INFO - 	 ROC-AUC: 0.989
2024-10-11 21:50 - INFO - 	 PR-AUC: 0.906
2024-10-11 21:50 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-11 21:50 - INFO - 	 Best Val. Loss: 0.056
2024-10-11 21:50 - INFO - 	 Best ROC-AUC: 0.989
2024-10-11 21:50 - INFO - 	 Best PR-AUC: 0.907
2024-10-11 21:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 21:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-11 21:50 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-11 21:50 - INFO - ---------------------------------------------
2024-10-11 21:51 - INFO - ---------------------------------------------
2024-10-11 21:51 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-11 21:51 - INFO - 	 Train Loss: 0.053
2024-10-11 21:51 - INFO - 	 Val. Loss: 0.057
2024-10-11 21:51 - INFO - 	 ROC-AUC: 0.989
2024-10-11 21:51 - INFO - 	 PR-AUC: 0.904
2024-10-11 21:51 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-11 21:51 - INFO - 	 Best Val. Loss: 0.056
2024-10-11 21:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-11 21:51 - INFO - 	 Best PR-AUC: 0.907
2024-10-11 21:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 21:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-11 21:51 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-11 21:51 - INFO - ---------------------------------------------
2024-10-11 21:52 - INFO - Fit the preprocessing pipeline
2024-10-11 21:52 - INFO - Training using device: cuda
2024-10-11 21:52 - INFO - Creating generators
2024-10-11 21:52 - INFO - The model has 651,257 trainable parameters
2024-10-11 21:52 - INFO - * Model:
2024-10-11 21:52 - INFO - * -----------
2024-10-11 21:52 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 21:52 - INFO - * -----------
2024-10-11 21:52 - INFO - Evaluating model based on: rocauc
2024-10-11 21:52 - INFO - Training..

2024-10-11 21:53 - INFO - ---------------------------------------------
2024-10-11 21:53 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-11 21:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97523
2024-10-11 21:53 - INFO - 	 Train Loss: 0.159
2024-10-11 21:53 - INFO - 	 Val. Loss: 0.087
2024-10-11 21:53 - INFO - 	 ROC-AUC: 0.975
2024-10-11 21:53 - INFO - 	 PR-AUC: 0.803
2024-10-11 21:53 - INFO - 	 Recall for 0.4 precision: 0.952
2024-10-11 21:53 - INFO - 	 Best Val. Loss: 0.087
2024-10-11 21:53 - INFO - 	 Best ROC-AUC: 0.975
2024-10-11 21:53 - INFO - 	 Best PR-AUC: 0.803
2024-10-11 21:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-11 21:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.766
2024-10-11 21:53 - INFO - 	 Best Recall for 0.4 precision: 0.952
2024-10-11 21:53 - INFO - ---------------------------------------------
2024-10-11 21:54 - INFO - ---------------------------------------------
2024-10-11 21:54 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-11 21:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98296
2024-10-11 21:54 - INFO - 	 Train Loss: 0.084
2024-10-11 21:54 - INFO - 	 Val. Loss: 0.074
2024-10-11 21:54 - INFO - 	 ROC-AUC: 0.983
2024-10-11 21:54 - INFO - 	 PR-AUC: 0.853
2024-10-11 21:54 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 21:54 - INFO - 	 Best Val. Loss: 0.074
2024-10-11 21:54 - INFO - 	 Best ROC-AUC: 0.983
2024-10-11 21:54 - INFO - 	 Best PR-AUC: 0.853
2024-10-11 21:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-11 21:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-11 21:54 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-11 21:54 - INFO - ---------------------------------------------
2024-10-11 21:54 - INFO - ---------------------------------------------
2024-10-11 21:54 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-11 21:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98509
2024-10-11 21:54 - INFO - 	 Train Loss: 0.074
2024-10-11 21:54 - INFO - 	 Val. Loss: 0.067
2024-10-11 21:54 - INFO - 	 ROC-AUC: 0.985
2024-10-11 21:54 - INFO - 	 PR-AUC: 0.868
2024-10-11 21:54 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 21:54 - INFO - 	 Best Val. Loss: 0.067
2024-10-11 21:54 - INFO - 	 Best ROC-AUC: 0.985
2024-10-11 21:54 - INFO - 	 Best PR-AUC: 0.868
2024-10-11 21:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-11 21:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-11 21:54 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 21:54 - INFO - ---------------------------------------------
2024-10-11 21:55 - INFO - ---------------------------------------------
2024-10-11 21:55 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-11 21:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98616
2024-10-11 21:55 - INFO - 	 Train Loss: 0.069
2024-10-11 21:55 - INFO - 	 Val. Loss: 0.063
2024-10-11 21:55 - INFO - 	 ROC-AUC: 0.986
2024-10-11 21:55 - INFO - 	 PR-AUC: 0.886
2024-10-11 21:55 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 21:55 - INFO - 	 Best Val. Loss: 0.063
2024-10-11 21:55 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 21:55 - INFO - 	 Best PR-AUC: 0.886
2024-10-11 21:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 21:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-11 21:55 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 21:55 - INFO - ---------------------------------------------
2024-10-11 21:55 - INFO - ---------------------------------------------
2024-10-11 21:55 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-11 21:55 - INFO - 	 Train Loss: 0.065
2024-10-11 21:55 - INFO - 	 Val. Loss: 0.065
2024-10-11 21:55 - INFO - 	 ROC-AUC: 0.986
2024-10-11 21:55 - INFO - 	 PR-AUC: 0.877
2024-10-11 21:55 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 21:55 - INFO - 	 Best Val. Loss: 0.063
2024-10-11 21:55 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 21:55 - INFO - 	 Best PR-AUC: 0.886
2024-10-11 21:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 21:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-11 21:55 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 21:55 - INFO - ---------------------------------------------
2024-10-11 21:56 - INFO - ---------------------------------------------
2024-10-11 21:56 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 21:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98689
2024-10-11 21:56 - INFO - 	 Train Loss: 0.063
2024-10-11 21:56 - INFO - 	 Val. Loss: 0.061
2024-10-11 21:56 - INFO - 	 ROC-AUC: 0.987
2024-10-11 21:56 - INFO - 	 PR-AUC: 0.880
2024-10-11 21:56 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 21:56 - INFO - 	 Best Val. Loss: 0.061
2024-10-11 21:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 21:56 - INFO - 	 Best PR-AUC: 0.886
2024-10-11 21:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 21:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-11 21:56 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:56 - INFO - ---------------------------------------------
2024-10-11 21:56 - INFO - ---------------------------------------------
2024-10-11 21:56 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-11 21:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98753
2024-10-11 21:56 - INFO - 	 Train Loss: 0.059
2024-10-11 21:56 - INFO - 	 Val. Loss: 0.061
2024-10-11 21:56 - INFO - 	 ROC-AUC: 0.988
2024-10-11 21:56 - INFO - 	 PR-AUC: 0.887
2024-10-11 21:56 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-11 21:56 - INFO - 	 Best Val. Loss: 0.061
2024-10-11 21:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 21:56 - INFO - 	 Best PR-AUC: 0.887
2024-10-11 21:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 21:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-11 21:56 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 21:56 - INFO - ---------------------------------------------
2024-10-11 21:57 - INFO - ---------------------------------------------
2024-10-11 21:57 - INFO - Epoch: 08 | Time: 0m 33s
2024-10-11 21:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98783
2024-10-11 21:57 - INFO - 	 Train Loss: 0.058
2024-10-11 21:57 - INFO - 	 Val. Loss: 0.059
2024-10-11 21:57 - INFO - 	 ROC-AUC: 0.988
2024-10-11 21:57 - INFO - 	 PR-AUC: 0.890
2024-10-11 21:57 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 21:57 - INFO - 	 Best Val. Loss: 0.059
2024-10-11 21:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 21:57 - INFO - 	 Best PR-AUC: 0.890
2024-10-11 21:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 21:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-11 21:57 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 21:57 - INFO - ---------------------------------------------
2024-10-11 21:57 - INFO - ---------------------------------------------
2024-10-11 21:57 - INFO - Epoch: 09 | Time: 0m 33s
2024-10-11 21:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9882
2024-10-11 21:57 - INFO - 	 Train Loss: 0.057
2024-10-11 21:57 - INFO - 	 Val. Loss: 0.057
2024-10-11 21:57 - INFO - 	 ROC-AUC: 0.988
2024-10-11 21:57 - INFO - 	 PR-AUC: 0.892
2024-10-11 21:57 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 21:57 - INFO - 	 Best Val. Loss: 0.057
2024-10-11 21:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 21:57 - INFO - 	 Best PR-AUC: 0.892
2024-10-11 21:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-11 21:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-11 21:57 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 21:57 - INFO - ---------------------------------------------
2024-10-11 21:58 - INFO - ---------------------------------------------
2024-10-11 21:58 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-11 21:58 - INFO - 	 Train Loss: 0.055
2024-10-11 21:58 - INFO - 	 Val. Loss: 0.058
2024-10-11 21:58 - INFO - 	 ROC-AUC: 0.987
2024-10-11 21:58 - INFO - 	 PR-AUC: 0.900
2024-10-11 21:58 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 21:58 - INFO - 	 Best Val. Loss: 0.057
2024-10-11 21:58 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 21:58 - INFO - 	 Best PR-AUC: 0.900
2024-10-11 21:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-11 21:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-11 21:58 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 21:58 - INFO - ---------------------------------------------
2024-10-11 22:00 - INFO - Fit the preprocessing pipeline
2024-10-11 22:00 - INFO - Training using device: cuda
2024-10-11 22:00 - INFO - Creating generators
2024-10-11 22:00 - INFO - The model has 651,257 trainable parameters
2024-10-11 22:00 - INFO - * Model:
2024-10-11 22:00 - INFO - * -----------
2024-10-11 22:00 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 22:00 - INFO - * -----------
2024-10-11 22:00 - INFO - Evaluating model based on: rocauc
2024-10-11 22:00 - INFO - Training..

2024-10-11 22:00 - INFO - ---------------------------------------------
2024-10-11 22:00 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-11 22:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98015
2024-10-11 22:00 - INFO - 	 Train Loss: 0.163
2024-10-11 22:00 - INFO - 	 Val. Loss: 0.077
2024-10-11 22:00 - INFO - 	 ROC-AUC: 0.980
2024-10-11 22:00 - INFO - 	 PR-AUC: 0.836
2024-10-11 22:00 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-11 22:00 - INFO - 	 Best Val. Loss: 0.077
2024-10-11 22:00 - INFO - 	 Best ROC-AUC: 0.980
2024-10-11 22:00 - INFO - 	 Best PR-AUC: 0.836
2024-10-11 22:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-11 22:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-11 22:00 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-11 22:00 - INFO - ---------------------------------------------
2024-10-11 22:01 - INFO - ---------------------------------------------
2024-10-11 22:01 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-11 22:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98345
2024-10-11 22:01 - INFO - 	 Train Loss: 0.084
2024-10-11 22:01 - INFO - 	 Val. Loss: 0.072
2024-10-11 22:01 - INFO - 	 ROC-AUC: 0.983
2024-10-11 22:01 - INFO - 	 PR-AUC: 0.857
2024-10-11 22:01 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-11 22:01 - INFO - 	 Best Val. Loss: 0.072
2024-10-11 22:01 - INFO - 	 Best ROC-AUC: 0.983
2024-10-11 22:01 - INFO - 	 Best PR-AUC: 0.857
2024-10-11 22:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-11 22:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-11 22:01 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-11 22:01 - INFO - ---------------------------------------------
2024-10-11 22:01 - INFO - ---------------------------------------------
2024-10-11 22:01 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-11 22:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98518
2024-10-11 22:01 - INFO - 	 Train Loss: 0.075
2024-10-11 22:01 - INFO - 	 Val. Loss: 0.068
2024-10-11 22:01 - INFO - 	 ROC-AUC: 0.985
2024-10-11 22:01 - INFO - 	 PR-AUC: 0.860
2024-10-11 22:01 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-11 22:01 - INFO - 	 Best Val. Loss: 0.068
2024-10-11 22:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-11 22:01 - INFO - 	 Best PR-AUC: 0.860
2024-10-11 22:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-11 22:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-11 22:01 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-11 22:01 - INFO - ---------------------------------------------
2024-10-11 22:02 - INFO - ---------------------------------------------
2024-10-11 22:02 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-11 22:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98619
2024-10-11 22:02 - INFO - 	 Train Loss: 0.070
2024-10-11 22:02 - INFO - 	 Val. Loss: 0.062
2024-10-11 22:02 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:02 - INFO - 	 PR-AUC: 0.885
2024-10-11 22:02 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 22:02 - INFO - 	 Best Val. Loss: 0.062
2024-10-11 22:02 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 22:02 - INFO - 	 Best PR-AUC: 0.885
2024-10-11 22:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 22:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-11 22:02 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:02 - INFO - ---------------------------------------------
2024-10-11 22:02 - INFO - ---------------------------------------------
2024-10-11 22:02 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-11 22:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98696
2024-10-11 22:02 - INFO - 	 Train Loss: 0.067
2024-10-11 22:02 - INFO - 	 Val. Loss: 0.061
2024-10-11 22:02 - INFO - 	 ROC-AUC: 0.987
2024-10-11 22:02 - INFO - 	 PR-AUC: 0.882
2024-10-11 22:02 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-11 22:02 - INFO - 	 Best Val. Loss: 0.061
2024-10-11 22:02 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 22:02 - INFO - 	 Best PR-AUC: 0.885
2024-10-11 22:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-11 22:02 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:02 - INFO - ---------------------------------------------
2024-10-11 22:03 - INFO - ---------------------------------------------
2024-10-11 22:03 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 22:03 - INFO - 	 Train Loss: 0.065
2024-10-11 22:03 - INFO - 	 Val. Loss: 0.063
2024-10-11 22:03 - INFO - 	 ROC-AUC: 0.987
2024-10-11 22:03 - INFO - 	 PR-AUC: 0.879
2024-10-11 22:03 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-11 22:03 - INFO - 	 Best Val. Loss: 0.061
2024-10-11 22:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 22:03 - INFO - 	 Best PR-AUC: 0.885
2024-10-11 22:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-11 22:03 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-11 22:03 - INFO - ---------------------------------------------
2024-10-11 22:04 - INFO - ---------------------------------------------
2024-10-11 22:04 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-11 22:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9878
2024-10-11 22:04 - INFO - 	 Train Loss: 0.061
2024-10-11 22:04 - INFO - 	 Val. Loss: 0.063
2024-10-11 22:04 - INFO - 	 ROC-AUC: 0.988
2024-10-11 22:04 - INFO - 	 PR-AUC: 0.889
2024-10-11 22:04 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 22:04 - INFO - 	 Best Val. Loss: 0.061
2024-10-11 22:04 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:04 - INFO - 	 Best PR-AUC: 0.889
2024-10-11 22:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 22:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-11 22:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-11 22:04 - INFO - ---------------------------------------------
2024-10-11 22:04 - INFO - ---------------------------------------------
2024-10-11 22:04 - INFO - Epoch: 08 | Time: 0m 33s
2024-10-11 22:04 - INFO - 	 Train Loss: 0.060
2024-10-11 22:04 - INFO - 	 Val. Loss: 0.060
2024-10-11 22:04 - INFO - 	 ROC-AUC: 0.988
2024-10-11 22:04 - INFO - 	 PR-AUC: 0.888
2024-10-11 22:04 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 22:04 - INFO - 	 Best Val. Loss: 0.060
2024-10-11 22:04 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:04 - INFO - 	 Best PR-AUC: 0.889
2024-10-11 22:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 22:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-11 22:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-11 22:04 - INFO - ---------------------------------------------
2024-10-11 22:05 - INFO - ---------------------------------------------
2024-10-11 22:05 - INFO - Epoch: 09 | Time: 0m 33s
2024-10-11 22:05 - INFO - 	 Train Loss: 0.060
2024-10-11 22:05 - INFO - 	 Val. Loss: 0.064
2024-10-11 22:05 - INFO - 	 ROC-AUC: 0.987
2024-10-11 22:05 - INFO - 	 PR-AUC: 0.884
2024-10-11 22:05 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-11 22:05 - INFO - 	 Best Val. Loss: 0.060
2024-10-11 22:05 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:05 - INFO - 	 Best PR-AUC: 0.889
2024-10-11 22:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 22:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-11 22:05 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-11 22:05 - INFO - ---------------------------------------------
2024-10-11 22:05 - INFO - ---------------------------------------------
2024-10-11 22:05 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-11 22:05 - INFO - 	 Train Loss: 0.059
2024-10-11 22:05 - INFO - 	 Val. Loss: 0.059
2024-10-11 22:05 - INFO - 	 ROC-AUC: 0.987
2024-10-11 22:05 - INFO - 	 PR-AUC: 0.897
2024-10-11 22:05 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 22:05 - INFO - 	 Best Val. Loss: 0.059
2024-10-11 22:05 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:05 - INFO - 	 Best PR-AUC: 0.897
2024-10-11 22:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 22:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-11 22:05 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-11 22:05 - INFO - ---------------------------------------------
2024-10-11 22:07 - INFO - Fit the preprocessing pipeline
2024-10-11 22:07 - INFO - Training using device: cuda
2024-10-11 22:07 - INFO - Creating generators
2024-10-11 22:07 - INFO - The model has 651,257 trainable parameters
2024-10-11 22:07 - INFO - * Model:
2024-10-11 22:07 - INFO - * -----------
2024-10-11 22:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 22:07 - INFO - * -----------
2024-10-11 22:07 - INFO - Evaluating model based on: rocauc
2024-10-11 22:07 - INFO - Training..

2024-10-11 22:07 - INFO - ---------------------------------------------
2024-10-11 22:07 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-11 22:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97696
2024-10-11 22:07 - INFO - 	 Train Loss: 0.168
2024-10-11 22:07 - INFO - 	 Val. Loss: 0.085
2024-10-11 22:07 - INFO - 	 ROC-AUC: 0.977
2024-10-11 22:07 - INFO - 	 PR-AUC: 0.799
2024-10-11 22:07 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-11 22:07 - INFO - 	 Best Val. Loss: 0.085
2024-10-11 22:07 - INFO - 	 Best ROC-AUC: 0.977
2024-10-11 22:07 - INFO - 	 Best PR-AUC: 0.799
2024-10-11 22:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-11 22:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.766
2024-10-11 22:07 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-11 22:07 - INFO - ---------------------------------------------
2024-10-11 22:08 - INFO - ---------------------------------------------
2024-10-11 22:08 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-11 22:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97987
2024-10-11 22:08 - INFO - 	 Train Loss: 0.087
2024-10-11 22:08 - INFO - 	 Val. Loss: 0.085
2024-10-11 22:08 - INFO - 	 ROC-AUC: 0.980
2024-10-11 22:08 - INFO - 	 PR-AUC: 0.828
2024-10-11 22:08 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-11 22:08 - INFO - 	 Best Val. Loss: 0.085
2024-10-11 22:08 - INFO - 	 Best ROC-AUC: 0.980
2024-10-11 22:08 - INFO - 	 Best PR-AUC: 0.828
2024-10-11 22:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-11 22:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-11 22:08 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-11 22:08 - INFO - ---------------------------------------------
2024-10-11 22:08 - INFO - ---------------------------------------------
2024-10-11 22:08 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-11 22:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98513
2024-10-11 22:08 - INFO - 	 Train Loss: 0.077
2024-10-11 22:08 - INFO - 	 Val. Loss: 0.068
2024-10-11 22:08 - INFO - 	 ROC-AUC: 0.985
2024-10-11 22:08 - INFO - 	 PR-AUC: 0.863
2024-10-11 22:08 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 22:08 - INFO - 	 Best Val. Loss: 0.068
2024-10-11 22:08 - INFO - 	 Best ROC-AUC: 0.985
2024-10-11 22:08 - INFO - 	 Best PR-AUC: 0.863
2024-10-11 22:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-11 22:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-11 22:08 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 22:08 - INFO - ---------------------------------------------
2024-10-11 22:09 - INFO - ---------------------------------------------
2024-10-11 22:09 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-11 22:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98536
2024-10-11 22:09 - INFO - 	 Train Loss: 0.071
2024-10-11 22:09 - INFO - 	 Val. Loss: 0.066
2024-10-11 22:09 - INFO - 	 ROC-AUC: 0.985
2024-10-11 22:09 - INFO - 	 PR-AUC: 0.875
2024-10-11 22:09 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-11 22:09 - INFO - 	 Best Val. Loss: 0.066
2024-10-11 22:09 - INFO - 	 Best ROC-AUC: 0.985
2024-10-11 22:09 - INFO - 	 Best PR-AUC: 0.875
2024-10-11 22:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-11 22:09 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-11 22:09 - INFO - ---------------------------------------------
2024-10-11 22:10 - INFO - ---------------------------------------------
2024-10-11 22:10 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-11 22:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98591
2024-10-11 22:10 - INFO - 	 Train Loss: 0.068
2024-10-11 22:10 - INFO - 	 Val. Loss: 0.064
2024-10-11 22:10 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:10 - INFO - 	 PR-AUC: 0.879
2024-10-11 22:10 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-11 22:10 - INFO - 	 Best Val. Loss: 0.064
2024-10-11 22:10 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 22:10 - INFO - 	 Best PR-AUC: 0.879
2024-10-11 22:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:10 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-11 22:10 - INFO - ---------------------------------------------
2024-10-11 22:10 - INFO - ---------------------------------------------
2024-10-11 22:10 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 22:10 - INFO - 	 Train Loss: 0.065
2024-10-11 22:10 - INFO - 	 Val. Loss: 0.068
2024-10-11 22:10 - INFO - 	 ROC-AUC: 0.985
2024-10-11 22:10 - INFO - 	 PR-AUC: 0.867
2024-10-11 22:10 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 22:10 - INFO - 	 Best Val. Loss: 0.064
2024-10-11 22:10 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 22:10 - INFO - 	 Best PR-AUC: 0.879
2024-10-11 22:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:10 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 22:10 - INFO - ---------------------------------------------
2024-10-11 22:11 - INFO - ---------------------------------------------
2024-10-11 22:11 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-11 22:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98711
2024-10-11 22:11 - INFO - 	 Train Loss: 0.064
2024-10-11 22:11 - INFO - 	 Val. Loss: 0.066
2024-10-11 22:11 - INFO - 	 ROC-AUC: 0.987
2024-10-11 22:11 - INFO - 	 PR-AUC: 0.879
2024-10-11 22:11 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 22:11 - INFO - 	 Best Val. Loss: 0.064
2024-10-11 22:11 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 22:11 - INFO - 	 Best PR-AUC: 0.879
2024-10-11 22:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 22:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-11 22:11 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 22:11 - INFO - ---------------------------------------------
2024-10-11 22:11 - INFO - ---------------------------------------------
2024-10-11 22:11 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-11 22:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98804
2024-10-11 22:11 - INFO - 	 Train Loss: 0.062
2024-10-11 22:11 - INFO - 	 Val. Loss: 0.060
2024-10-11 22:11 - INFO - 	 ROC-AUC: 0.988
2024-10-11 22:11 - INFO - 	 PR-AUC: 0.892
2024-10-11 22:11 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 22:11 - INFO - 	 Best Val. Loss: 0.060
2024-10-11 22:11 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:11 - INFO - 	 Best PR-AUC: 0.892
2024-10-11 22:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-11 22:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-11 22:11 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 22:11 - INFO - ---------------------------------------------
2024-10-11 22:12 - INFO - ---------------------------------------------
2024-10-11 22:12 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-11 22:12 - INFO - 	 Train Loss: 0.061
2024-10-11 22:12 - INFO - 	 Val. Loss: 0.059
2024-10-11 22:12 - INFO - 	 ROC-AUC: 0.988
2024-10-11 22:12 - INFO - 	 PR-AUC: 0.896
2024-10-11 22:12 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 22:12 - INFO - 	 Best Val. Loss: 0.059
2024-10-11 22:12 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:12 - INFO - 	 Best PR-AUC: 0.896
2024-10-11 22:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-11 22:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-11 22:12 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:12 - INFO - ---------------------------------------------
2024-10-11 22:12 - INFO - ---------------------------------------------
2024-10-11 22:12 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-11 22:12 - INFO - 	 Train Loss: 0.060
2024-10-11 22:12 - INFO - 	 Val. Loss: 0.063
2024-10-11 22:12 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:12 - INFO - 	 PR-AUC: 0.883
2024-10-11 22:12 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 22:12 - INFO - 	 Best Val. Loss: 0.059
2024-10-11 22:12 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:12 - INFO - 	 Best PR-AUC: 0.896
2024-10-11 22:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-11 22:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-11 22:12 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:12 - INFO - ---------------------------------------------
2024-10-11 22:14 - INFO - Fit the preprocessing pipeline
2024-10-11 22:14 - INFO - Training using device: cuda
2024-10-11 22:14 - INFO - Creating generators
2024-10-11 22:14 - INFO - The model has 651,257 trainable parameters
2024-10-11 22:14 - INFO - * Model:
2024-10-11 22:14 - INFO - * -----------
2024-10-11 22:14 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 22:14 - INFO - * -----------
2024-10-11 22:14 - INFO - Evaluating model based on: rocauc
2024-10-11 22:14 - INFO - Training..

2024-10-11 22:15 - INFO - ---------------------------------------------
2024-10-11 22:15 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-11 22:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97878
2024-10-11 22:15 - INFO - 	 Train Loss: 0.161
2024-10-11 22:15 - INFO - 	 Val. Loss: 0.080
2024-10-11 22:15 - INFO - 	 ROC-AUC: 0.979
2024-10-11 22:15 - INFO - 	 PR-AUC: 0.812
2024-10-11 22:15 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-11 22:15 - INFO - 	 Best Val. Loss: 0.080
2024-10-11 22:15 - INFO - 	 Best ROC-AUC: 0.979
2024-10-11 22:15 - INFO - 	 Best PR-AUC: 0.812
2024-10-11 22:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-11 22:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-10-11 22:15 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-11 22:15 - INFO - ---------------------------------------------
2024-10-11 22:15 - INFO - ---------------------------------------------
2024-10-11 22:15 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-11 22:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98177
2024-10-11 22:15 - INFO - 	 Train Loss: 0.085
2024-10-11 22:15 - INFO - 	 Val. Loss: 0.074
2024-10-11 22:15 - INFO - 	 ROC-AUC: 0.982
2024-10-11 22:15 - INFO - 	 PR-AUC: 0.851
2024-10-11 22:15 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-11 22:15 - INFO - 	 Best Val. Loss: 0.074
2024-10-11 22:15 - INFO - 	 Best ROC-AUC: 0.982
2024-10-11 22:15 - INFO - 	 Best PR-AUC: 0.851
2024-10-11 22:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-11 22:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-11 22:15 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-11 22:15 - INFO - ---------------------------------------------
2024-10-11 22:16 - INFO - ---------------------------------------------
2024-10-11 22:16 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-11 22:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98429
2024-10-11 22:16 - INFO - 	 Train Loss: 0.078
2024-10-11 22:16 - INFO - 	 Val. Loss: 0.071
2024-10-11 22:16 - INFO - 	 ROC-AUC: 0.984
2024-10-11 22:16 - INFO - 	 PR-AUC: 0.854
2024-10-11 22:16 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 22:16 - INFO - 	 Best Val. Loss: 0.071
2024-10-11 22:16 - INFO - 	 Best ROC-AUC: 0.984
2024-10-11 22:16 - INFO - 	 Best PR-AUC: 0.854
2024-10-11 22:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-11 22:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-11 22:16 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-11 22:16 - INFO - ---------------------------------------------
2024-10-11 22:16 - INFO - ---------------------------------------------
2024-10-11 22:16 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-11 22:16 - INFO - 	 Train Loss: 0.072
2024-10-11 22:16 - INFO - 	 Val. Loss: 0.067
2024-10-11 22:16 - INFO - 	 ROC-AUC: 0.984
2024-10-11 22:16 - INFO - 	 PR-AUC: 0.865
2024-10-11 22:16 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 22:16 - INFO - 	 Best Val. Loss: 0.067
2024-10-11 22:16 - INFO - 	 Best ROC-AUC: 0.984
2024-10-11 22:16 - INFO - 	 Best PR-AUC: 0.865
2024-10-11 22:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-11 22:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-11 22:16 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 22:16 - INFO - ---------------------------------------------
2024-10-11 22:17 - INFO - ---------------------------------------------
2024-10-11 22:17 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-11 22:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98539
2024-10-11 22:17 - INFO - 	 Train Loss: 0.070
2024-10-11 22:17 - INFO - 	 Val. Loss: 0.064
2024-10-11 22:17 - INFO - 	 ROC-AUC: 0.985
2024-10-11 22:17 - INFO - 	 PR-AUC: 0.873
2024-10-11 22:17 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 22:17 - INFO - 	 Best Val. Loss: 0.064
2024-10-11 22:17 - INFO - 	 Best ROC-AUC: 0.985
2024-10-11 22:17 - INFO - 	 Best PR-AUC: 0.873
2024-10-11 22:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 22:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-11 22:17 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 22:17 - INFO - ---------------------------------------------
2024-10-11 22:17 - INFO - ---------------------------------------------
2024-10-11 22:17 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 22:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98633
2024-10-11 22:17 - INFO - 	 Train Loss: 0.068
2024-10-11 22:17 - INFO - 	 Val. Loss: 0.061
2024-10-11 22:17 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:17 - INFO - 	 PR-AUC: 0.887
2024-10-11 22:17 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 22:17 - INFO - 	 Best Val. Loss: 0.061
2024-10-11 22:17 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 22:17 - INFO - 	 Best PR-AUC: 0.887
2024-10-11 22:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 22:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-11 22:17 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:17 - INFO - ---------------------------------------------
2024-10-11 22:18 - INFO - ---------------------------------------------
2024-10-11 22:18 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-11 22:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98727
2024-10-11 22:18 - INFO - 	 Train Loss: 0.066
2024-10-11 22:18 - INFO - 	 Val. Loss: 0.060
2024-10-11 22:18 - INFO - 	 ROC-AUC: 0.987
2024-10-11 22:18 - INFO - 	 PR-AUC: 0.886
2024-10-11 22:18 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-11 22:18 - INFO - 	 Best Val. Loss: 0.060
2024-10-11 22:18 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 22:18 - INFO - 	 Best PR-AUC: 0.887
2024-10-11 22:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-11 22:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-11 22:18 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:18 - INFO - ---------------------------------------------
2024-10-11 22:18 - INFO - ---------------------------------------------
2024-10-11 22:18 - INFO - Epoch: 08 | Time: 0m 33s
2024-10-11 22:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98766
2024-10-11 22:18 - INFO - 	 Train Loss: 0.065
2024-10-11 22:18 - INFO - 	 Val. Loss: 0.061
2024-10-11 22:18 - INFO - 	 ROC-AUC: 0.988
2024-10-11 22:18 - INFO - 	 PR-AUC: 0.884
2024-10-11 22:18 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 22:18 - INFO - 	 Best Val. Loss: 0.060
2024-10-11 22:18 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:18 - INFO - 	 Best PR-AUC: 0.887
2024-10-11 22:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-11 22:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-11 22:18 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:18 - INFO - ---------------------------------------------
2024-10-11 22:19 - INFO - ---------------------------------------------
2024-10-11 22:19 - INFO - Epoch: 09 | Time: 0m 33s
2024-10-11 22:19 - INFO - 	 Train Loss: 0.063
2024-10-11 22:19 - INFO - 	 Val. Loss: 0.060
2024-10-11 22:19 - INFO - 	 ROC-AUC: 0.987
2024-10-11 22:19 - INFO - 	 PR-AUC: 0.888
2024-10-11 22:19 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 22:19 - INFO - 	 Best Val. Loss: 0.060
2024-10-11 22:19 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:19 - INFO - 	 Best PR-AUC: 0.888
2024-10-11 22:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-11 22:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-11 22:19 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:19 - INFO - ---------------------------------------------
2024-10-11 22:20 - INFO - ---------------------------------------------
2024-10-11 22:20 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-11 22:20 - INFO - 	 Train Loss: 0.062
2024-10-11 22:20 - INFO - 	 Val. Loss: 0.065
2024-10-11 22:20 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:20 - INFO - 	 PR-AUC: 0.877
2024-10-11 22:20 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-11 22:20 - INFO - 	 Best Val. Loss: 0.060
2024-10-11 22:20 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:20 - INFO - 	 Best PR-AUC: 0.888
2024-10-11 22:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-11 22:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-11 22:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-11 22:20 - INFO - ---------------------------------------------
2024-10-11 22:21 - INFO - Fit the preprocessing pipeline
2024-10-11 22:21 - INFO - Training using device: cuda
2024-10-11 22:21 - INFO - Creating generators
2024-10-11 22:21 - INFO - The model has 651,257 trainable parameters
2024-10-11 22:21 - INFO - * Model:
2024-10-11 22:21 - INFO - * -----------
2024-10-11 22:21 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 22:21 - INFO - * -----------
2024-10-11 22:21 - INFO - Evaluating model based on: rocauc
2024-10-11 22:21 - INFO - Training..

2024-10-11 22:22 - INFO - ---------------------------------------------
2024-10-11 22:22 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-11 22:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97433
2024-10-11 22:22 - INFO - 	 Train Loss: 0.175
2024-10-11 22:22 - INFO - 	 Val. Loss: 0.092
2024-10-11 22:22 - INFO - 	 ROC-AUC: 0.974
2024-10-11 22:22 - INFO - 	 PR-AUC: 0.765
2024-10-11 22:22 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-11 22:22 - INFO - 	 Best Val. Loss: 0.092
2024-10-11 22:22 - INFO - 	 Best ROC-AUC: 0.974
2024-10-11 22:22 - INFO - 	 Best PR-AUC: 0.765
2024-10-11 22:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-11 22:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.745
2024-10-11 22:22 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-11 22:22 - INFO - ---------------------------------------------
2024-10-11 22:22 - INFO - ---------------------------------------------
2024-10-11 22:22 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-11 22:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98168
2024-10-11 22:22 - INFO - 	 Train Loss: 0.090
2024-10-11 22:22 - INFO - 	 Val. Loss: 0.089
2024-10-11 22:22 - INFO - 	 ROC-AUC: 0.982
2024-10-11 22:22 - INFO - 	 PR-AUC: 0.827
2024-10-11 22:22 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-11 22:22 - INFO - 	 Best Val. Loss: 0.089
2024-10-11 22:22 - INFO - 	 Best ROC-AUC: 0.982
2024-10-11 22:22 - INFO - 	 Best PR-AUC: 0.827
2024-10-11 22:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-11 22:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-11 22:22 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-11 22:22 - INFO - ---------------------------------------------
2024-10-11 22:23 - INFO - ---------------------------------------------
2024-10-11 22:23 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-11 22:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98388
2024-10-11 22:23 - INFO - 	 Train Loss: 0.081
2024-10-11 22:23 - INFO - 	 Val. Loss: 0.083
2024-10-11 22:23 - INFO - 	 ROC-AUC: 0.984
2024-10-11 22:23 - INFO - 	 PR-AUC: 0.854
2024-10-11 22:23 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 22:23 - INFO - 	 Best Val. Loss: 0.083
2024-10-11 22:23 - INFO - 	 Best ROC-AUC: 0.984
2024-10-11 22:23 - INFO - 	 Best PR-AUC: 0.854
2024-10-11 22:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-11 22:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-11 22:23 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-11 22:23 - INFO - ---------------------------------------------
2024-10-11 22:23 - INFO - ---------------------------------------------
2024-10-11 22:23 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-11 22:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9853
2024-10-11 22:23 - INFO - 	 Train Loss: 0.076
2024-10-11 22:23 - INFO - 	 Val. Loss: 0.067
2024-10-11 22:23 - INFO - 	 ROC-AUC: 0.985
2024-10-11 22:23 - INFO - 	 PR-AUC: 0.862
2024-10-11 22:23 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 22:23 - INFO - 	 Best Val. Loss: 0.067
2024-10-11 22:23 - INFO - 	 Best ROC-AUC: 0.985
2024-10-11 22:23 - INFO - 	 Best PR-AUC: 0.862
2024-10-11 22:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-11 22:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-11 22:23 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 22:23 - INFO - ---------------------------------------------
2024-10-11 22:24 - INFO - ---------------------------------------------
2024-10-11 22:24 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-11 22:24 - INFO - 	 Train Loss: 0.072
2024-10-11 22:24 - INFO - 	 Val. Loss: 0.069
2024-10-11 22:24 - INFO - 	 ROC-AUC: 0.984
2024-10-11 22:24 - INFO - 	 PR-AUC: 0.859
2024-10-11 22:24 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 22:24 - INFO - 	 Best Val. Loss: 0.067
2024-10-11 22:24 - INFO - 	 Best ROC-AUC: 0.985
2024-10-11 22:24 - INFO - 	 Best PR-AUC: 0.862
2024-10-11 22:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-11 22:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-11 22:24 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 22:24 - INFO - ---------------------------------------------
2024-10-11 22:24 - INFO - ---------------------------------------------
2024-10-11 22:24 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 22:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98571
2024-10-11 22:24 - INFO - 	 Train Loss: 0.072
2024-10-11 22:24 - INFO - 	 Val. Loss: 0.065
2024-10-11 22:24 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:24 - INFO - 	 PR-AUC: 0.875
2024-10-11 22:24 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 22:24 - INFO - 	 Best Val. Loss: 0.065
2024-10-11 22:24 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 22:24 - INFO - 	 Best PR-AUC: 0.875
2024-10-11 22:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-11 22:24 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 22:24 - INFO - ---------------------------------------------
2024-10-11 22:25 - INFO - ---------------------------------------------
2024-10-11 22:25 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-11 22:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9864
2024-10-11 22:25 - INFO - 	 Train Loss: 0.069
2024-10-11 22:25 - INFO - 	 Val. Loss: 0.063
2024-10-11 22:25 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:25 - INFO - 	 PR-AUC: 0.874
2024-10-11 22:25 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 22:25 - INFO - 	 Best Val. Loss: 0.063
2024-10-11 22:25 - INFO - 	 Best ROC-AUC: 0.986
2024-10-11 22:25 - INFO - 	 Best PR-AUC: 0.875
2024-10-11 22:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-11 22:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-11 22:25 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 22:25 - INFO - ---------------------------------------------
2024-10-11 22:26 - INFO - ---------------------------------------------
2024-10-11 22:26 - INFO - Epoch: 08 | Time: 0m 34s
2024-10-11 22:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98712
2024-10-11 22:26 - INFO - 	 Train Loss: 0.068
2024-10-11 22:26 - INFO - 	 Val. Loss: 0.064
2024-10-11 22:26 - INFO - 	 ROC-AUC: 0.987
2024-10-11 22:26 - INFO - 	 PR-AUC: 0.872
2024-10-11 22:26 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 22:26 - INFO - 	 Best Val. Loss: 0.063
2024-10-11 22:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 22:26 - INFO - 	 Best PR-AUC: 0.875
2024-10-11 22:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-11 22:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-11 22:26 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 22:26 - INFO - ---------------------------------------------
2024-10-11 22:26 - INFO - ---------------------------------------------
2024-10-11 22:26 - INFO - Epoch: 09 | Time: 0m 33s
2024-10-11 22:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98753
2024-10-11 22:26 - INFO - 	 Train Loss: 0.066
2024-10-11 22:26 - INFO - 	 Val. Loss: 0.061
2024-10-11 22:26 - INFO - 	 ROC-AUC: 0.988
2024-10-11 22:26 - INFO - 	 PR-AUC: 0.884
2024-10-11 22:26 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-11 22:26 - INFO - 	 Best Val. Loss: 0.061
2024-10-11 22:26 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:26 - INFO - 	 Best PR-AUC: 0.884
2024-10-11 22:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-11 22:26 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 22:26 - INFO - ---------------------------------------------
2024-10-11 22:27 - INFO - ---------------------------------------------
2024-10-11 22:27 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-11 22:27 - INFO - 	 Train Loss: 0.065
2024-10-11 22:27 - INFO - 	 Val. Loss: 0.070
2024-10-11 22:27 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:27 - INFO - 	 PR-AUC: 0.871
2024-10-11 22:27 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-11 22:27 - INFO - 	 Best Val. Loss: 0.061
2024-10-11 22:27 - INFO - 	 Best ROC-AUC: 0.988
2024-10-11 22:27 - INFO - 	 Best PR-AUC: 0.884
2024-10-11 22:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-11 22:27 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-11 22:27 - INFO - ---------------------------------------------
2024-10-11 22:28 - INFO - Fit the preprocessing pipeline
2024-10-11 22:28 - INFO - Training using device: cuda
2024-10-11 22:28 - INFO - Creating generators
2024-10-11 22:28 - INFO - The model has 651,257 trainable parameters
2024-10-11 22:28 - INFO - * Model:
2024-10-11 22:28 - INFO - * -----------
2024-10-11 22:28 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 22:28 - INFO - * -----------
2024-10-11 22:28 - INFO - Evaluating model based on: rocauc
2024-10-11 22:28 - INFO - Training..

2024-10-11 22:29 - INFO - ---------------------------------------------
2024-10-11 22:29 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-11 22:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96997
2024-10-11 22:29 - INFO - 	 Train Loss: 0.187
2024-10-11 22:29 - INFO - 	 Val. Loss: 0.105
2024-10-11 22:29 - INFO - 	 ROC-AUC: 0.970
2024-10-11 22:29 - INFO - 	 PR-AUC: 0.690
2024-10-11 22:29 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-11 22:29 - INFO - 	 Best Val. Loss: 0.105
2024-10-11 22:29 - INFO - 	 Best ROC-AUC: 0.970
2024-10-11 22:29 - INFO - 	 Best PR-AUC: 0.690
2024-10-11 22:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-11 22:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.704
2024-10-11 22:29 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-11 22:29 - INFO - ---------------------------------------------
2024-10-11 22:29 - INFO - ---------------------------------------------
2024-10-11 22:29 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-11 22:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9782
2024-10-11 22:29 - INFO - 	 Train Loss: 0.095
2024-10-11 22:29 - INFO - 	 Val. Loss: 0.092
2024-10-11 22:29 - INFO - 	 ROC-AUC: 0.978
2024-10-11 22:29 - INFO - 	 PR-AUC: 0.794
2024-10-11 22:29 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-11 22:29 - INFO - 	 Best Val. Loss: 0.092
2024-10-11 22:29 - INFO - 	 Best ROC-AUC: 0.978
2024-10-11 22:29 - INFO - 	 Best PR-AUC: 0.794
2024-10-11 22:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-11 22:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-11 22:29 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-11 22:29 - INFO - ---------------------------------------------
2024-10-11 22:30 - INFO - ---------------------------------------------
2024-10-11 22:30 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-11 22:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9833
2024-10-11 22:30 - INFO - 	 Train Loss: 0.086
2024-10-11 22:30 - INFO - 	 Val. Loss: 0.075
2024-10-11 22:30 - INFO - 	 ROC-AUC: 0.983
2024-10-11 22:30 - INFO - 	 PR-AUC: 0.845
2024-10-11 22:30 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-11 22:30 - INFO - 	 Best Val. Loss: 0.075
2024-10-11 22:30 - INFO - 	 Best ROC-AUC: 0.983
2024-10-11 22:30 - INFO - 	 Best PR-AUC: 0.845
2024-10-11 22:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-11 22:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-11 22:30 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-11 22:30 - INFO - ---------------------------------------------
2024-10-11 22:31 - INFO - ---------------------------------------------
2024-10-11 22:31 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-11 22:31 - INFO - 	 Train Loss: 0.081
2024-10-11 22:31 - INFO - 	 Val. Loss: 0.072
2024-10-11 22:31 - INFO - 	 ROC-AUC: 0.983
2024-10-11 22:31 - INFO - 	 PR-AUC: 0.835
2024-10-11 22:31 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 22:31 - INFO - 	 Best Val. Loss: 0.072
2024-10-11 22:31 - INFO - 	 Best ROC-AUC: 0.983
2024-10-11 22:31 - INFO - 	 Best PR-AUC: 0.845
2024-10-11 22:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-11 22:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-11 22:31 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-11 22:31 - INFO - ---------------------------------------------
2024-10-11 22:31 - INFO - ---------------------------------------------
2024-10-11 22:31 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-11 22:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98411
2024-10-11 22:31 - INFO - 	 Train Loss: 0.076
2024-10-11 22:31 - INFO - 	 Val. Loss: 0.071
2024-10-11 22:31 - INFO - 	 ROC-AUC: 0.984
2024-10-11 22:31 - INFO - 	 PR-AUC: 0.852
2024-10-11 22:31 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-11 22:31 - INFO - 	 Best Val. Loss: 0.071
2024-10-11 22:31 - INFO - 	 Best ROC-AUC: 0.984
2024-10-11 22:31 - INFO - 	 Best PR-AUC: 0.852
2024-10-11 22:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:31 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-11 22:31 - INFO - ---------------------------------------------
2024-10-11 22:32 - INFO - ---------------------------------------------
2024-10-11 22:32 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 22:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98523
2024-10-11 22:32 - INFO - 	 Train Loss: 0.075
2024-10-11 22:32 - INFO - 	 Val. Loss: 0.067
2024-10-11 22:32 - INFO - 	 ROC-AUC: 0.985
2024-10-11 22:32 - INFO - 	 PR-AUC: 0.866
2024-10-11 22:32 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 22:32 - INFO - 	 Best Val. Loss: 0.067
2024-10-11 22:32 - INFO - 	 Best ROC-AUC: 0.985
2024-10-11 22:32 - INFO - 	 Best PR-AUC: 0.866
2024-10-11 22:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-11 22:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-11 22:32 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 22:32 - INFO - ---------------------------------------------
2024-10-11 22:32 - INFO - ---------------------------------------------
2024-10-11 22:32 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-11 22:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98669
2024-10-11 22:32 - INFO - 	 Train Loss: 0.073
2024-10-11 22:32 - INFO - 	 Val. Loss: 0.063
2024-10-11 22:32 - INFO - 	 ROC-AUC: 0.987
2024-10-11 22:32 - INFO - 	 PR-AUC: 0.880
2024-10-11 22:32 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-11 22:32 - INFO - 	 Best Val. Loss: 0.063
2024-10-11 22:32 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 22:32 - INFO - 	 Best PR-AUC: 0.880
2024-10-11 22:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:32 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:32 - INFO - ---------------------------------------------
2024-10-11 22:33 - INFO - ---------------------------------------------
2024-10-11 22:33 - INFO - Epoch: 08 | Time: 0m 33s
2024-10-11 22:33 - INFO - 	 Train Loss: 0.072
2024-10-11 22:33 - INFO - 	 Val. Loss: 0.065
2024-10-11 22:33 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:33 - INFO - 	 PR-AUC: 0.872
2024-10-11 22:33 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-11 22:33 - INFO - 	 Best Val. Loss: 0.063
2024-10-11 22:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 22:33 - INFO - 	 Best PR-AUC: 0.880
2024-10-11 22:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:33 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:33 - INFO - ---------------------------------------------
2024-10-11 22:33 - INFO - ---------------------------------------------
2024-10-11 22:33 - INFO - Epoch: 09 | Time: 0m 33s
2024-10-11 22:33 - INFO - 	 Train Loss: 0.070
2024-10-11 22:33 - INFO - 	 Val. Loss: 0.065
2024-10-11 22:33 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:33 - INFO - 	 PR-AUC: 0.874
2024-10-11 22:33 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-11 22:33 - INFO - 	 Best Val. Loss: 0.063
2024-10-11 22:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 22:33 - INFO - 	 Best PR-AUC: 0.880
2024-10-11 22:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:33 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:33 - INFO - ---------------------------------------------
2024-10-11 22:34 - INFO - ---------------------------------------------
2024-10-11 22:34 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-11 22:34 - INFO - 	 Train Loss: 0.070
2024-10-11 22:34 - INFO - 	 Val. Loss: 0.065
2024-10-11 22:34 - INFO - 	 ROC-AUC: 0.986
2024-10-11 22:34 - INFO - 	 PR-AUC: 0.875
2024-10-11 22:34 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 22:34 - INFO - 	 Best Val. Loss: 0.063
2024-10-11 22:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-11 22:34 - INFO - 	 Best PR-AUC: 0.880
2024-10-11 22:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:34 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-11 22:34 - INFO - ---------------------------------------------
2024-10-11 22:35 - INFO - Fit the preprocessing pipeline
2024-10-11 22:35 - INFO - Training using device: cuda
2024-10-11 22:35 - INFO - Creating generators
2024-10-11 22:36 - INFO - The model has 651,257 trainable parameters
2024-10-11 22:36 - INFO - * Model:
2024-10-11 22:36 - INFO - * -----------
2024-10-11 22:36 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 22:36 - INFO - * -----------
2024-10-11 22:36 - INFO - Evaluating model based on: rocauc
2024-10-11 22:36 - INFO - Training..

2024-10-11 22:36 - INFO - ---------------------------------------------
2024-10-11 22:36 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-11 22:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96749
2024-10-11 22:36 - INFO - 	 Train Loss: 0.176
2024-10-11 22:36 - INFO - 	 Val. Loss: 0.108
2024-10-11 22:36 - INFO - 	 ROC-AUC: 0.967
2024-10-11 22:36 - INFO - 	 PR-AUC: 0.668
2024-10-11 22:36 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-11 22:36 - INFO - 	 Best Val. Loss: 0.108
2024-10-11 22:36 - INFO - 	 Best ROC-AUC: 0.967
2024-10-11 22:36 - INFO - 	 Best PR-AUC: 0.668
2024-10-11 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-11 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.700
2024-10-11 22:36 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-11 22:36 - INFO - ---------------------------------------------
2024-10-11 22:37 - INFO - ---------------------------------------------
2024-10-11 22:37 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-11 22:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97731
2024-10-11 22:37 - INFO - 	 Train Loss: 0.101
2024-10-11 22:37 - INFO - 	 Val. Loss: 0.095
2024-10-11 22:37 - INFO - 	 ROC-AUC: 0.977
2024-10-11 22:37 - INFO - 	 PR-AUC: 0.800
2024-10-11 22:37 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-11 22:37 - INFO - 	 Best Val. Loss: 0.095
2024-10-11 22:37 - INFO - 	 Best ROC-AUC: 0.977
2024-10-11 22:37 - INFO - 	 Best PR-AUC: 0.800
2024-10-11 22:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-11 22:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-10-11 22:37 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-11 22:37 - INFO - ---------------------------------------------
2024-10-11 22:37 - INFO - ---------------------------------------------
2024-10-11 22:37 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-11 22:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98014
2024-10-11 22:37 - INFO - 	 Train Loss: 0.090
2024-10-11 22:37 - INFO - 	 Val. Loss: 0.088
2024-10-11 22:37 - INFO - 	 ROC-AUC: 0.980
2024-10-11 22:37 - INFO - 	 PR-AUC: 0.814
2024-10-11 22:37 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-11 22:37 - INFO - 	 Best Val. Loss: 0.088
2024-10-11 22:37 - INFO - 	 Best ROC-AUC: 0.980
2024-10-11 22:37 - INFO - 	 Best PR-AUC: 0.814
2024-10-11 22:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-11 22:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-10-11 22:37 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-11 22:37 - INFO - ---------------------------------------------
2024-10-11 22:38 - INFO - ---------------------------------------------
2024-10-11 22:38 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-11 22:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98117
2024-10-11 22:38 - INFO - 	 Train Loss: 0.086
2024-10-11 22:38 - INFO - 	 Val. Loss: 0.075
2024-10-11 22:38 - INFO - 	 ROC-AUC: 0.981
2024-10-11 22:38 - INFO - 	 PR-AUC: 0.833
2024-10-11 22:38 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-11 22:38 - INFO - 	 Best Val. Loss: 0.075
2024-10-11 22:38 - INFO - 	 Best ROC-AUC: 0.981
2024-10-11 22:38 - INFO - 	 Best PR-AUC: 0.833
2024-10-11 22:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-11 22:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-11 22:38 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-11 22:38 - INFO - ---------------------------------------------
2024-10-11 22:38 - INFO - ---------------------------------------------
2024-10-11 22:38 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-11 22:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98252
2024-10-11 22:38 - INFO - 	 Train Loss: 0.081
2024-10-11 22:38 - INFO - 	 Val. Loss: 0.071
2024-10-11 22:38 - INFO - 	 ROC-AUC: 0.983
2024-10-11 22:38 - INFO - 	 PR-AUC: 0.850
2024-10-11 22:38 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-11 22:38 - INFO - 	 Best Val. Loss: 0.071
2024-10-11 22:38 - INFO - 	 Best ROC-AUC: 0.983
2024-10-11 22:38 - INFO - 	 Best PR-AUC: 0.850
2024-10-11 22:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-11 22:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-11 22:38 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-11 22:38 - INFO - ---------------------------------------------
2024-10-11 22:39 - INFO - ---------------------------------------------
2024-10-11 22:39 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 22:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98354
2024-10-11 22:39 - INFO - 	 Train Loss: 0.079
2024-10-11 22:39 - INFO - 	 Val. Loss: 0.069
2024-10-11 22:39 - INFO - 	 ROC-AUC: 0.984
2024-10-11 22:39 - INFO - 	 PR-AUC: 0.863
2024-10-11 22:39 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-11 22:39 - INFO - 	 Best Val. Loss: 0.069
2024-10-11 22:39 - INFO - 	 Best ROC-AUC: 0.984
2024-10-11 22:39 - INFO - 	 Best PR-AUC: 0.863
2024-10-11 22:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-11 22:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:39 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-11 22:39 - INFO - ---------------------------------------------
2024-10-11 22:39 - INFO - ---------------------------------------------
2024-10-11 22:39 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-11 22:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98405
2024-10-11 22:39 - INFO - 	 Train Loss: 0.077
2024-10-11 22:39 - INFO - 	 Val. Loss: 0.068
2024-10-11 22:39 - INFO - 	 ROC-AUC: 0.984
2024-10-11 22:39 - INFO - 	 PR-AUC: 0.858
2024-10-11 22:39 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 22:39 - INFO - 	 Best Val. Loss: 0.068
2024-10-11 22:39 - INFO - 	 Best ROC-AUC: 0.984
2024-10-11 22:39 - INFO - 	 Best PR-AUC: 0.863
2024-10-11 22:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-11 22:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:39 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 22:39 - INFO - ---------------------------------------------
2024-10-11 22:40 - INFO - ---------------------------------------------
2024-10-11 22:40 - INFO - Epoch: 08 | Time: 0m 33s
2024-10-11 22:40 - INFO - 	 Train Loss: 0.076
2024-10-11 22:40 - INFO - 	 Val. Loss: 0.075
2024-10-11 22:40 - INFO - 	 ROC-AUC: 0.982
2024-10-11 22:40 - INFO - 	 PR-AUC: 0.817
2024-10-11 22:40 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-11 22:40 - INFO - 	 Best Val. Loss: 0.068
2024-10-11 22:40 - INFO - 	 Best ROC-AUC: 0.984
2024-10-11 22:40 - INFO - 	 Best PR-AUC: 0.863
2024-10-11 22:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-11 22:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:40 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 22:40 - INFO - ---------------------------------------------
2024-10-11 22:41 - INFO - ---------------------------------------------
2024-10-11 22:41 - INFO - Epoch: 09 | Time: 0m 33s
2024-10-11 22:41 - INFO - 	 Train Loss: 0.074
2024-10-11 22:41 - INFO - 	 Val. Loss: 0.071
2024-10-11 22:41 - INFO - 	 ROC-AUC: 0.983
2024-10-11 22:41 - INFO - 	 PR-AUC: 0.844
2024-10-11 22:41 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-11 22:41 - INFO - 	 Best Val. Loss: 0.068
2024-10-11 22:41 - INFO - 	 Best ROC-AUC: 0.984
2024-10-11 22:41 - INFO - 	 Best PR-AUC: 0.863
2024-10-11 22:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-11 22:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:41 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 22:41 - INFO - ---------------------------------------------
2024-10-11 22:41 - INFO - ---------------------------------------------
2024-10-11 22:41 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-11 22:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98439
2024-10-11 22:41 - INFO - 	 Train Loss: 0.073
2024-10-11 22:41 - INFO - 	 Val. Loss: 0.068
2024-10-11 22:41 - INFO - 	 ROC-AUC: 0.984
2024-10-11 22:41 - INFO - 	 PR-AUC: 0.854
2024-10-11 22:41 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-11 22:41 - INFO - 	 Best Val. Loss: 0.068
2024-10-11 22:41 - INFO - 	 Best ROC-AUC: 0.984
2024-10-11 22:41 - INFO - 	 Best PR-AUC: 0.863
2024-10-11 22:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-11 22:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-11 22:41 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-11 22:41 - INFO - ---------------------------------------------
2024-10-11 22:43 - INFO - Fit the preprocessing pipeline
2024-10-11 22:43 - INFO - Training using device: cuda
2024-10-11 22:43 - INFO - Creating generators
2024-10-11 22:43 - INFO - The model has 651,257 trainable parameters
2024-10-11 22:43 - INFO - * Model:
2024-10-11 22:43 - INFO - * -----------
2024-10-11 22:43 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 22:43 - INFO - * -----------
2024-10-11 22:43 - INFO - Evaluating model based on: rocauc
2024-10-11 22:43 - INFO - Training..

2024-10-11 22:43 - INFO - ---------------------------------------------
2024-10-11 22:43 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-11 22:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94882
2024-10-11 22:43 - INFO - 	 Train Loss: 0.211
2024-10-11 22:43 - INFO - 	 Val. Loss: 0.124
2024-10-11 22:43 - INFO - 	 ROC-AUC: 0.949
2024-10-11 22:43 - INFO - 	 PR-AUC: 0.602
2024-10-11 22:43 - INFO - 	 Recall for 0.4 precision: 0.003
2024-10-11 22:43 - INFO - 	 Best Val. Loss: 0.124
2024-10-11 22:43 - INFO - 	 Best ROC-AUC: 0.949
2024-10-11 22:43 - INFO - 	 Best PR-AUC: 0.602
2024-10-11 22:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-10-11 22:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.594
2024-10-11 22:43 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-10-11 22:43 - INFO - ---------------------------------------------
2024-10-11 22:44 - INFO - ---------------------------------------------
2024-10-11 22:44 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-11 22:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97252
2024-10-11 22:44 - INFO - 	 Train Loss: 0.116
2024-10-11 22:44 - INFO - 	 Val. Loss: 0.096
2024-10-11 22:44 - INFO - 	 ROC-AUC: 0.973
2024-10-11 22:44 - INFO - 	 PR-AUC: 0.754
2024-10-11 22:44 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-11 22:44 - INFO - 	 Best Val. Loss: 0.096
2024-10-11 22:44 - INFO - 	 Best ROC-AUC: 0.973
2024-10-11 22:44 - INFO - 	 Best PR-AUC: 0.754
2024-10-11 22:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-11 22:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-11 22:44 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-11 22:44 - INFO - ---------------------------------------------
2024-10-11 22:44 - INFO - ---------------------------------------------
2024-10-11 22:44 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-11 22:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97602
2024-10-11 22:44 - INFO - 	 Train Loss: 0.101
2024-10-11 22:44 - INFO - 	 Val. Loss: 0.090
2024-10-11 22:44 - INFO - 	 ROC-AUC: 0.976
2024-10-11 22:44 - INFO - 	 PR-AUC: 0.788
2024-10-11 22:44 - INFO - 	 Recall for 0.4 precision: 0.960
2024-10-11 22:44 - INFO - 	 Best Val. Loss: 0.090
2024-10-11 22:44 - INFO - 	 Best ROC-AUC: 0.976
2024-10-11 22:44 - INFO - 	 Best PR-AUC: 0.788
2024-10-11 22:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-11 22:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-10-11 22:44 - INFO - 	 Best Recall for 0.4 precision: 0.960
2024-10-11 22:44 - INFO - ---------------------------------------------
2024-10-11 22:45 - INFO - ---------------------------------------------
2024-10-11 22:45 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-11 22:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97611
2024-10-11 22:45 - INFO - 	 Train Loss: 0.096
2024-10-11 22:45 - INFO - 	 Val. Loss: 0.090
2024-10-11 22:45 - INFO - 	 ROC-AUC: 0.976
2024-10-11 22:45 - INFO - 	 PR-AUC: 0.779
2024-10-11 22:45 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-11 22:45 - INFO - 	 Best Val. Loss: 0.090
2024-10-11 22:45 - INFO - 	 Best ROC-AUC: 0.976
2024-10-11 22:45 - INFO - 	 Best PR-AUC: 0.788
2024-10-11 22:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-11 22:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-10-11 22:45 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-11 22:45 - INFO - ---------------------------------------------
2024-10-11 22:46 - INFO - ---------------------------------------------
2024-10-11 22:46 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-11 22:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97822
2024-10-11 22:46 - INFO - 	 Train Loss: 0.090
2024-10-11 22:46 - INFO - 	 Val. Loss: 0.083
2024-10-11 22:46 - INFO - 	 ROC-AUC: 0.978
2024-10-11 22:46 - INFO - 	 PR-AUC: 0.803
2024-10-11 22:46 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-11 22:46 - INFO - 	 Best Val. Loss: 0.083
2024-10-11 22:46 - INFO - 	 Best ROC-AUC: 0.978
2024-10-11 22:46 - INFO - 	 Best PR-AUC: 0.803
2024-10-11 22:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-11 22:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-11 22:46 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-11 22:46 - INFO - ---------------------------------------------
2024-10-11 22:46 - INFO - ---------------------------------------------
2024-10-11 22:46 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 22:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97974
2024-10-11 22:46 - INFO - 	 Train Loss: 0.090
2024-10-11 22:46 - INFO - 	 Val. Loss: 0.078
2024-10-11 22:46 - INFO - 	 ROC-AUC: 0.980
2024-10-11 22:46 - INFO - 	 PR-AUC: 0.821
2024-10-11 22:46 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-11 22:46 - INFO - 	 Best Val. Loss: 0.078
2024-10-11 22:46 - INFO - 	 Best ROC-AUC: 0.980
2024-10-11 22:46 - INFO - 	 Best PR-AUC: 0.821
2024-10-11 22:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-11 22:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-11 22:46 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-11 22:46 - INFO - ---------------------------------------------
2024-10-11 22:47 - INFO - ---------------------------------------------
2024-10-11 22:47 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-11 22:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98123
2024-10-11 22:47 - INFO - 	 Train Loss: 0.086
2024-10-11 22:47 - INFO - 	 Val. Loss: 0.076
2024-10-11 22:47 - INFO - 	 ROC-AUC: 0.981
2024-10-11 22:47 - INFO - 	 PR-AUC: 0.829
2024-10-11 22:47 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-11 22:47 - INFO - 	 Best Val. Loss: 0.076
2024-10-11 22:47 - INFO - 	 Best ROC-AUC: 0.981
2024-10-11 22:47 - INFO - 	 Best PR-AUC: 0.829
2024-10-11 22:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-11 22:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-11 22:47 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-11 22:47 - INFO - ---------------------------------------------
2024-10-11 22:47 - INFO - ---------------------------------------------
2024-10-11 22:47 - INFO - Epoch: 08 | Time: 0m 34s
2024-10-11 22:47 - INFO - 	 Train Loss: 0.085
2024-10-11 22:47 - INFO - 	 Val. Loss: 0.080
2024-10-11 22:47 - INFO - 	 ROC-AUC: 0.980
2024-10-11 22:47 - INFO - 	 PR-AUC: 0.800
2024-10-11 22:47 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-11 22:47 - INFO - 	 Best Val. Loss: 0.076
2024-10-11 22:47 - INFO - 	 Best ROC-AUC: 0.981
2024-10-11 22:47 - INFO - 	 Best PR-AUC: 0.829
2024-10-11 22:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-11 22:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-11 22:47 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-11 22:47 - INFO - ---------------------------------------------
2024-10-11 22:48 - INFO - ---------------------------------------------
2024-10-11 22:48 - INFO - Epoch: 09 | Time: 0m 33s
2024-10-11 22:48 - INFO - 	 Train Loss: 0.083
2024-10-11 22:48 - INFO - 	 Val. Loss: 0.078
2024-10-11 22:48 - INFO - 	 ROC-AUC: 0.980
2024-10-11 22:48 - INFO - 	 PR-AUC: 0.816
2024-10-11 22:48 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-11 22:48 - INFO - 	 Best Val. Loss: 0.076
2024-10-11 22:48 - INFO - 	 Best ROC-AUC: 0.981
2024-10-11 22:48 - INFO - 	 Best PR-AUC: 0.829
2024-10-11 22:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-11 22:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-11 22:48 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-11 22:48 - INFO - ---------------------------------------------
2024-10-11 22:48 - INFO - ---------------------------------------------
2024-10-11 22:48 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-11 22:48 - INFO - 	 Train Loss: 0.083
2024-10-11 22:48 - INFO - 	 Val. Loss: 0.078
2024-10-11 22:48 - INFO - 	 ROC-AUC: 0.980
2024-10-11 22:48 - INFO - 	 PR-AUC: 0.813
2024-10-11 22:48 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-11 22:48 - INFO - 	 Best Val. Loss: 0.076
2024-10-11 22:48 - INFO - 	 Best ROC-AUC: 0.981
2024-10-11 22:48 - INFO - 	 Best PR-AUC: 0.829
2024-10-11 22:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-11 22:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-11 22:48 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-11 22:48 - INFO - ---------------------------------------------
2024-10-11 22:50 - INFO - Fit the preprocessing pipeline
2024-10-11 22:50 - INFO - Training using device: cuda
2024-10-11 22:50 - INFO - Creating generators
2024-10-11 22:50 - INFO - The model has 651,257 trainable parameters
2024-10-11 22:50 - INFO - * Model:
2024-10-11 22:50 - INFO - * -----------
2024-10-11 22:50 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-11 22:50 - INFO - * -----------
2024-10-11 22:50 - INFO - Evaluating model based on: rocauc
2024-10-11 22:50 - INFO - Training..

2024-10-11 22:51 - INFO - ---------------------------------------------
2024-10-11 22:51 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-11 22:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92163
2024-10-11 22:51 - INFO - 	 Train Loss: 0.228
2024-10-11 22:51 - INFO - 	 Val. Loss: 0.158
2024-10-11 22:51 - INFO - 	 ROC-AUC: 0.922
2024-10-11 22:51 - INFO - 	 PR-AUC: 0.451
2024-10-11 22:51 - INFO - 	 Recall for 0.4 precision: 0.694
2024-10-11 22:51 - INFO - 	 Best Val. Loss: 0.158
2024-10-11 22:51 - INFO - 	 Best ROC-AUC: 0.922
2024-10-11 22:51 - INFO - 	 Best PR-AUC: 0.451
2024-10-11 22:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.915
2024-10-11 22:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.499
2024-10-11 22:51 - INFO - 	 Best Recall for 0.4 precision: 0.694
2024-10-11 22:51 - INFO - ---------------------------------------------
2024-10-11 22:51 - INFO - ---------------------------------------------
2024-10-11 22:51 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-11 22:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95821
2024-10-11 22:51 - INFO - 	 Train Loss: 0.144
2024-10-11 22:51 - INFO - 	 Val. Loss: 0.119
2024-10-11 22:51 - INFO - 	 ROC-AUC: 0.958
2024-10-11 22:51 - INFO - 	 PR-AUC: 0.596
2024-10-11 22:51 - INFO - 	 Recall for 0.4 precision: 0.007
2024-10-11 22:51 - INFO - 	 Best Val. Loss: 0.119
2024-10-11 22:51 - INFO - 	 Best ROC-AUC: 0.958
2024-10-11 22:51 - INFO - 	 Best PR-AUC: 0.596
2024-10-11 22:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-11 22:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.637
2024-10-11 22:51 - INFO - 	 Best Recall for 0.4 precision: 0.694
2024-10-11 22:51 - INFO - ---------------------------------------------
2024-10-11 22:52 - INFO - ---------------------------------------------
2024-10-11 22:52 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-11 22:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96042
2024-10-11 22:52 - INFO - 	 Train Loss: 0.126
2024-10-11 22:52 - INFO - 	 Val. Loss: 0.124
2024-10-11 22:52 - INFO - 	 ROC-AUC: 0.960
2024-10-11 22:52 - INFO - 	 PR-AUC: 0.627
2024-10-11 22:52 - INFO - 	 Recall for 0.4 precision: 0.906
2024-10-11 22:52 - INFO - 	 Best Val. Loss: 0.119
2024-10-11 22:52 - INFO - 	 Best ROC-AUC: 0.960
2024-10-11 22:52 - INFO - 	 Best PR-AUC: 0.627
2024-10-11 22:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-11 22:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.642
2024-10-11 22:52 - INFO - 	 Best Recall for 0.4 precision: 0.906
2024-10-11 22:52 - INFO - ---------------------------------------------
2024-10-11 22:52 - INFO - ---------------------------------------------
2024-10-11 22:52 - INFO - Epoch: 04 | Time: 0m 34s
2024-10-11 22:52 - INFO - 	 Train Loss: 0.120
2024-10-11 22:52 - INFO - 	 Val. Loss: 0.113
2024-10-11 22:52 - INFO - 	 ROC-AUC: 0.960
2024-10-11 22:52 - INFO - 	 PR-AUC: 0.643
2024-10-11 22:52 - INFO - 	 Recall for 0.4 precision: 0.918
2024-10-11 22:52 - INFO - 	 Best Val. Loss: 0.113
2024-10-11 22:52 - INFO - 	 Best ROC-AUC: 0.960
2024-10-11 22:52 - INFO - 	 Best PR-AUC: 0.643
2024-10-11 22:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-11 22:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.681
2024-10-11 22:52 - INFO - 	 Best Recall for 0.4 precision: 0.918
2024-10-11 22:52 - INFO - ---------------------------------------------
2024-10-11 22:53 - INFO - ---------------------------------------------
2024-10-11 22:53 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-11 22:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96501
2024-10-11 22:53 - INFO - 	 Train Loss: 0.114
2024-10-11 22:53 - INFO - 	 Val. Loss: 0.107
2024-10-11 22:53 - INFO - 	 ROC-AUC: 0.965
2024-10-11 22:53 - INFO - 	 PR-AUC: 0.688
2024-10-11 22:53 - INFO - 	 Recall for 0.4 precision: 0.936
2024-10-11 22:53 - INFO - 	 Best Val. Loss: 0.107
2024-10-11 22:53 - INFO - 	 Best ROC-AUC: 0.965
2024-10-11 22:53 - INFO - 	 Best PR-AUC: 0.688
2024-10-11 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-11 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.719
2024-10-11 22:53 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-11 22:53 - INFO - ---------------------------------------------
2024-10-11 22:53 - INFO - ---------------------------------------------
2024-10-11 22:53 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-11 22:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96811
2024-10-11 22:53 - INFO - 	 Train Loss: 0.112
2024-10-11 22:53 - INFO - 	 Val. Loss: 0.102
2024-10-11 22:53 - INFO - 	 ROC-AUC: 0.968
2024-10-11 22:53 - INFO - 	 PR-AUC: 0.708
2024-10-11 22:53 - INFO - 	 Recall for 0.4 precision: 0.932
2024-10-11 22:53 - INFO - 	 Best Val. Loss: 0.102
2024-10-11 22:53 - INFO - 	 Best ROC-AUC: 0.968
2024-10-11 22:53 - INFO - 	 Best PR-AUC: 0.708
2024-10-11 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-11 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.709
2024-10-11 22:53 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-11 22:53 - INFO - ---------------------------------------------
2024-10-11 22:54 - INFO - ---------------------------------------------
2024-10-11 22:54 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-11 22:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97145
2024-10-11 22:54 - INFO - 	 Train Loss: 0.109
2024-10-11 22:54 - INFO - 	 Val. Loss: 0.096
2024-10-11 22:54 - INFO - 	 ROC-AUC: 0.971
2024-10-11 22:54 - INFO - 	 PR-AUC: 0.737
2024-10-11 22:54 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-11 22:54 - INFO - 	 Best Val. Loss: 0.096
2024-10-11 22:54 - INFO - 	 Best ROC-AUC: 0.971
2024-10-11 22:54 - INFO - 	 Best PR-AUC: 0.737
2024-10-11 22:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-11 22:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-11 22:54 - INFO - 	 Best Recall for 0.4 precision: 0.938
2024-10-11 22:54 - INFO - ---------------------------------------------
2024-10-11 22:54 - INFO - ---------------------------------------------
2024-10-11 22:54 - INFO - Epoch: 08 | Time: 0m 33s
2024-10-11 22:54 - INFO - 	 Train Loss: 0.107
2024-10-11 22:54 - INFO - 	 Val. Loss: 0.104
2024-10-11 22:54 - INFO - 	 ROC-AUC: 0.969
2024-10-11 22:54 - INFO - 	 PR-AUC: 0.719
2024-10-11 22:54 - INFO - 	 Recall for 0.4 precision: 0.943
2024-10-11 22:54 - INFO - 	 Best Val. Loss: 0.096
2024-10-11 22:54 - INFO - 	 Best ROC-AUC: 0.971
2024-10-11 22:54 - INFO - 	 Best PR-AUC: 0.737
2024-10-11 22:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-11 22:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-11 22:54 - INFO - 	 Best Recall for 0.4 precision: 0.943
2024-10-11 22:54 - INFO - ---------------------------------------------
2024-10-11 22:55 - INFO - ---------------------------------------------
2024-10-11 22:55 - INFO - Epoch: 09 | Time: 0m 33s
2024-10-11 22:55 - INFO - 	 Train Loss: 0.106
2024-10-11 22:55 - INFO - 	 Val. Loss: 0.098
2024-10-11 22:55 - INFO - 	 ROC-AUC: 0.969
2024-10-11 22:55 - INFO - 	 PR-AUC: 0.733
2024-10-11 22:55 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-11 22:55 - INFO - 	 Best Val. Loss: 0.096
2024-10-11 22:55 - INFO - 	 Best ROC-AUC: 0.971
2024-10-11 22:55 - INFO - 	 Best PR-AUC: 0.737
2024-10-11 22:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-11 22:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-11 22:55 - INFO - 	 Best Recall for 0.4 precision: 0.943
2024-10-11 22:55 - INFO - ---------------------------------------------
2024-10-11 22:56 - INFO - ---------------------------------------------
2024-10-11 22:56 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-11 22:56 - INFO - 	 Train Loss: 0.106
2024-10-11 22:56 - INFO - 	 Val. Loss: 0.100
2024-10-11 22:56 - INFO - 	 ROC-AUC: 0.968
2024-10-11 22:56 - INFO - 	 PR-AUC: 0.725
2024-10-11 22:56 - INFO - 	 Recall for 0.4 precision: 0.937
2024-10-11 22:56 - INFO - 	 Best Val. Loss: 0.096
2024-10-11 22:56 - INFO - 	 Best ROC-AUC: 0.971
2024-10-11 22:56 - INFO - 	 Best PR-AUC: 0.737
2024-10-11 22:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-11 22:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-11 22:56 - INFO - 	 Best Recall for 0.4 precision: 0.943
2024-10-11 22:56 - INFO - ---------------------------------------------
