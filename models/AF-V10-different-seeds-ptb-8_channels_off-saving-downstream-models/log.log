2024-10-25 16:43 - INFO - Fit the preprocessing pipeline
2024-10-25 16:43 - INFO - Training using device: cuda
2024-10-25 16:43 - INFO - Creating generators
2024-10-25 16:43 - INFO - The model has 651,257 trainable parameters
2024-10-25 16:43 - INFO - * Model:
2024-10-25 16:43 - INFO - * -----------
2024-10-25 16:43 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 16:43 - INFO - * -----------
2024-10-25 16:43 - INFO - Evaluating model based on: rocauc
2024-10-25 16:43 - INFO - Training..

2024-10-25 16:44 - INFO - ---------------------------------------------
2024-10-25 16:44 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 16:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97262
2024-10-25 16:44 - INFO - 	 Train Loss: 0.180
2024-10-25 16:44 - INFO - 	 Val. Loss: 0.094
2024-10-25 16:44 - INFO - 	 ROC-AUC: 0.973
2024-10-25 16:44 - INFO - 	 PR-AUC: 0.731
2024-10-25 16:44 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 16:44 - INFO - 	 Best Val. Loss: 0.094
2024-10-25 16:44 - INFO - 	 Best ROC-AUC: 0.973
2024-10-25 16:44 - INFO - 	 Best PR-AUC: 0.731
2024-10-25 16:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 16:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.742
2024-10-25 16:44 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 16:44 - INFO - ---------------------------------------------
2024-10-25 16:44 - INFO - ---------------------------------------------
2024-10-25 16:44 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 16:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97897
2024-10-25 16:44 - INFO - 	 Train Loss: 0.095
2024-10-25 16:44 - INFO - 	 Val. Loss: 0.085
2024-10-25 16:44 - INFO - 	 ROC-AUC: 0.979
2024-10-25 16:44 - INFO - 	 PR-AUC: 0.808
2024-10-25 16:44 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 16:44 - INFO - 	 Best Val. Loss: 0.085
2024-10-25 16:44 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 16:44 - INFO - 	 Best PR-AUC: 0.808
2024-10-25 16:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 16:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.775
2024-10-25 16:44 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 16:44 - INFO - ---------------------------------------------
2024-10-25 16:45 - INFO - ---------------------------------------------
2024-10-25 16:45 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 16:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9821
2024-10-25 16:45 - INFO - 	 Train Loss: 0.085
2024-10-25 16:45 - INFO - 	 Val. Loss: 0.074
2024-10-25 16:45 - INFO - 	 ROC-AUC: 0.982
2024-10-25 16:45 - INFO - 	 PR-AUC: 0.846
2024-10-25 16:45 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 16:45 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 16:45 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 16:45 - INFO - 	 Best PR-AUC: 0.846
2024-10-25 16:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 16:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 16:45 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 16:45 - INFO - ---------------------------------------------
2024-10-25 16:45 - INFO - ---------------------------------------------
2024-10-25 16:45 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 16:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98343
2024-10-25 16:45 - INFO - 	 Train Loss: 0.081
2024-10-25 16:45 - INFO - 	 Val. Loss: 0.075
2024-10-25 16:45 - INFO - 	 ROC-AUC: 0.983
2024-10-25 16:45 - INFO - 	 PR-AUC: 0.851
2024-10-25 16:45 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 16:45 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 16:45 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 16:45 - INFO - 	 Best PR-AUC: 0.851
2024-10-25 16:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-25 16:45 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 16:45 - INFO - ---------------------------------------------
2024-10-25 16:46 - INFO - ---------------------------------------------
2024-10-25 16:46 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 16:46 - INFO - 	 Train Loss: 0.077
2024-10-25 16:46 - INFO - 	 Val. Loss: 0.074
2024-10-25 16:46 - INFO - 	 ROC-AUC: 0.983
2024-10-25 16:46 - INFO - 	 PR-AUC: 0.849
2024-10-25 16:46 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 16:46 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 16:46 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 16:46 - INFO - 	 Best PR-AUC: 0.851
2024-10-25 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-25 16:46 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 16:46 - INFO - ---------------------------------------------
2024-10-25 16:47 - INFO - ---------------------------------------------
2024-10-25 16:47 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 16:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98422
2024-10-25 16:47 - INFO - 	 Train Loss: 0.074
2024-10-25 16:47 - INFO - 	 Val. Loss: 0.070
2024-10-25 16:47 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:47 - INFO - 	 PR-AUC: 0.853
2024-10-25 16:47 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:47 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 16:47 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:47 - INFO - 	 Best PR-AUC: 0.853
2024-10-25 16:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 16:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 16:47 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:47 - INFO - ---------------------------------------------
2024-10-25 16:47 - INFO - ---------------------------------------------
2024-10-25 16:47 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 16:47 - INFO - 	 Train Loss: 0.072
2024-10-25 16:47 - INFO - 	 Val. Loss: 0.071
2024-10-25 16:47 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:47 - INFO - 	 PR-AUC: 0.854
2024-10-25 16:47 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 16:47 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 16:47 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:47 - INFO - 	 Best PR-AUC: 0.854
2024-10-25 16:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 16:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 16:47 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:47 - INFO - ---------------------------------------------
2024-10-25 16:48 - INFO - ---------------------------------------------
2024-10-25 16:48 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 16:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98566
2024-10-25 16:48 - INFO - 	 Train Loss: 0.072
2024-10-25 16:48 - INFO - 	 Val. Loss: 0.065
2024-10-25 16:48 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:48 - INFO - 	 PR-AUC: 0.865
2024-10-25 16:48 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 16:48 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 16:48 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:48 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 16:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 16:48 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 16:48 - INFO - ---------------------------------------------
2024-10-25 16:48 - INFO - ---------------------------------------------
2024-10-25 16:48 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 16:48 - INFO - 	 Train Loss: 0.070
2024-10-25 16:48 - INFO - 	 Val. Loss: 0.068
2024-10-25 16:48 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:48 - INFO - 	 PR-AUC: 0.878
2024-10-25 16:48 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:48 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 16:48 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:48 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 16:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 16:48 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 16:48 - INFO - ---------------------------------------------
2024-10-25 16:49 - INFO - ---------------------------------------------
2024-10-25 16:49 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 16:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98714
2024-10-25 16:49 - INFO - 	 Train Loss: 0.069
2024-10-25 16:49 - INFO - 	 Val. Loss: 0.062
2024-10-25 16:49 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:49 - INFO - 	 PR-AUC: 0.876
2024-10-25 16:49 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 16:49 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 16:49 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:49 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 16:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 16:49 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 16:49 - INFO - ---------------------------------------------
2024-10-25 16:50 - INFO - Fit the preprocessing pipeline
2024-10-25 16:50 - INFO - Training using device: cuda
2024-10-25 16:50 - INFO - Creating generators
2024-10-25 16:50 - INFO - The model has 651,257 trainable parameters
2024-10-25 16:50 - INFO - * Model:
2024-10-25 16:50 - INFO - * -----------
2024-10-25 16:50 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 16:50 - INFO - * -----------
2024-10-25 16:50 - INFO - Evaluating model based on: rocauc
2024-10-25 16:50 - INFO - Training..

2024-10-25 16:51 - INFO - ---------------------------------------------
2024-10-25 16:51 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 16:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96961
2024-10-25 16:51 - INFO - 	 Train Loss: 0.174
2024-10-25 16:51 - INFO - 	 Val. Loss: 0.104
2024-10-25 16:51 - INFO - 	 ROC-AUC: 0.970
2024-10-25 16:51 - INFO - 	 PR-AUC: 0.751
2024-10-25 16:51 - INFO - 	 Recall for 0.4 precision: 0.936
2024-10-25 16:51 - INFO - 	 Best Val. Loss: 0.104
2024-10-25 16:51 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 16:51 - INFO - 	 Best PR-AUC: 0.751
2024-10-25 16:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-25 16:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.695
2024-10-25 16:51 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-25 16:51 - INFO - ---------------------------------------------
2024-10-25 16:51 - INFO - ---------------------------------------------
2024-10-25 16:51 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 16:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9795
2024-10-25 16:51 - INFO - 	 Train Loss: 0.095
2024-10-25 16:51 - INFO - 	 Val. Loss: 0.079
2024-10-25 16:51 - INFO - 	 ROC-AUC: 0.980
2024-10-25 16:51 - INFO - 	 PR-AUC: 0.824
2024-10-25 16:51 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 16:51 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 16:51 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 16:51 - INFO - 	 Best PR-AUC: 0.824
2024-10-25 16:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 16:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-10-25 16:51 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 16:51 - INFO - ---------------------------------------------
2024-10-25 16:52 - INFO - ---------------------------------------------
2024-10-25 16:52 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 16:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98396
2024-10-25 16:52 - INFO - 	 Train Loss: 0.086
2024-10-25 16:52 - INFO - 	 Val. Loss: 0.069
2024-10-25 16:52 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:52 - INFO - 	 PR-AUC: 0.861
2024-10-25 16:52 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:52 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 16:52 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:52 - INFO - 	 Best PR-AUC: 0.861
2024-10-25 16:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-25 16:52 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:52 - INFO - ---------------------------------------------
2024-10-25 16:52 - INFO - ---------------------------------------------
2024-10-25 16:52 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 16:52 - INFO - 	 Train Loss: 0.081
2024-10-25 16:52 - INFO - 	 Val. Loss: 0.070
2024-10-25 16:52 - INFO - 	 ROC-AUC: 0.983
2024-10-25 16:52 - INFO - 	 PR-AUC: 0.862
2024-10-25 16:52 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:52 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 16:52 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:52 - INFO - 	 Best PR-AUC: 0.862
2024-10-25 16:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-25 16:52 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:52 - INFO - ---------------------------------------------
2024-10-25 16:53 - INFO - ---------------------------------------------
2024-10-25 16:53 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 16:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98514
2024-10-25 16:53 - INFO - 	 Train Loss: 0.077
2024-10-25 16:53 - INFO - 	 Val. Loss: 0.066
2024-10-25 16:53 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:53 - INFO - 	 PR-AUC: 0.864
2024-10-25 16:53 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:53 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 16:53 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 16:53 - INFO - 	 Best PR-AUC: 0.864
2024-10-25 16:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 16:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 16:53 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:53 - INFO - ---------------------------------------------
2024-10-25 16:53 - INFO - ---------------------------------------------
2024-10-25 16:53 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 16:53 - INFO - 	 Train Loss: 0.074
2024-10-25 16:53 - INFO - 	 Val. Loss: 0.066
2024-10-25 16:53 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:53 - INFO - 	 PR-AUC: 0.867
2024-10-25 16:53 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:53 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 16:53 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 16:53 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 16:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 16:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 16:53 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:53 - INFO - ---------------------------------------------
2024-10-25 16:54 - INFO - ---------------------------------------------
2024-10-25 16:54 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 16:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98547
2024-10-25 16:54 - INFO - 	 Train Loss: 0.073
2024-10-25 16:54 - INFO - 	 Val. Loss: 0.064
2024-10-25 16:54 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:54 - INFO - 	 PR-AUC: 0.872
2024-10-25 16:54 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 16:54 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 16:54 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 16:54 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 16:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 16:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-25 16:54 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:54 - INFO - ---------------------------------------------
2024-10-25 16:54 - INFO - ---------------------------------------------
2024-10-25 16:54 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 16:54 - INFO - 	 Train Loss: 0.071
2024-10-25 16:54 - INFO - 	 Val. Loss: 0.070
2024-10-25 16:54 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:54 - INFO - 	 PR-AUC: 0.869
2024-10-25 16:54 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 16:54 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 16:54 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 16:54 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 16:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 16:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-25 16:54 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:54 - INFO - ---------------------------------------------
2024-10-25 16:55 - INFO - ---------------------------------------------
2024-10-25 16:55 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 16:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98702
2024-10-25 16:55 - INFO - 	 Train Loss: 0.069
2024-10-25 16:55 - INFO - 	 Val. Loss: 0.060
2024-10-25 16:55 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:55 - INFO - 	 PR-AUC: 0.892
2024-10-25 16:55 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 16:55 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 16:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:55 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 16:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 16:55 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:55 - INFO - ---------------------------------------------
2024-10-25 16:55 - INFO - ---------------------------------------------
2024-10-25 16:55 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 16:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98713
2024-10-25 16:55 - INFO - 	 Train Loss: 0.068
2024-10-25 16:55 - INFO - 	 Val. Loss: 0.061
2024-10-25 16:55 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:55 - INFO - 	 PR-AUC: 0.880
2024-10-25 16:55 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 16:55 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 16:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:55 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 16:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 16:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 16:55 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:55 - INFO - ---------------------------------------------
2024-10-25 16:57 - INFO - Fit the preprocessing pipeline
2024-10-25 16:57 - INFO - Training using device: cuda
2024-10-25 16:57 - INFO - Creating generators
2024-10-25 16:57 - INFO - The model has 651,257 trainable parameters
2024-10-25 16:57 - INFO - * Model:
2024-10-25 16:57 - INFO - * -----------
2024-10-25 16:57 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 16:57 - INFO - * -----------
2024-10-25 16:57 - INFO - Evaluating model based on: rocauc
2024-10-25 16:57 - INFO - Training..

2024-10-25 16:57 - INFO - ---------------------------------------------
2024-10-25 16:57 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 16:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97079
2024-10-25 16:57 - INFO - 	 Train Loss: 0.187
2024-10-25 16:57 - INFO - 	 Val. Loss: 0.106
2024-10-25 16:57 - INFO - 	 ROC-AUC: 0.971
2024-10-25 16:57 - INFO - 	 PR-AUC: 0.705
2024-10-25 16:57 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-25 16:57 - INFO - 	 Best Val. Loss: 0.106
2024-10-25 16:57 - INFO - 	 Best ROC-AUC: 0.971
2024-10-25 16:57 - INFO - 	 Best PR-AUC: 0.705
2024-10-25 16:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 16:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.720
2024-10-25 16:57 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-25 16:57 - INFO - ---------------------------------------------
2024-10-25 16:58 - INFO - ---------------------------------------------
2024-10-25 16:58 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 16:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98084
2024-10-25 16:58 - INFO - 	 Train Loss: 0.097
2024-10-25 16:58 - INFO - 	 Val. Loss: 0.079
2024-10-25 16:58 - INFO - 	 ROC-AUC: 0.981
2024-10-25 16:58 - INFO - 	 PR-AUC: 0.821
2024-10-25 16:58 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 16:58 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 16:58 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 16:58 - INFO - 	 Best PR-AUC: 0.821
2024-10-25 16:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 16:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-25 16:58 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 16:58 - INFO - ---------------------------------------------
2024-10-25 16:58 - INFO - ---------------------------------------------
2024-10-25 16:58 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 16:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98137
2024-10-25 16:58 - INFO - 	 Train Loss: 0.087
2024-10-25 16:58 - INFO - 	 Val. Loss: 0.077
2024-10-25 16:58 - INFO - 	 ROC-AUC: 0.981
2024-10-25 16:58 - INFO - 	 PR-AUC: 0.842
2024-10-25 16:58 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 16:58 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 16:58 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 16:58 - INFO - 	 Best PR-AUC: 0.842
2024-10-25 16:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 16:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-10-25 16:58 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 16:58 - INFO - ---------------------------------------------
2024-10-25 16:59 - INFO - ---------------------------------------------
2024-10-25 16:59 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 16:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98417
2024-10-25 16:59 - INFO - 	 Train Loss: 0.081
2024-10-25 16:59 - INFO - 	 Val. Loss: 0.075
2024-10-25 16:59 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:59 - INFO - 	 PR-AUC: 0.852
2024-10-25 16:59 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:59 - INFO - 	 Best Val. Loss: 0.075
2024-10-25 16:59 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:59 - INFO - 	 Best PR-AUC: 0.852
2024-10-25 16:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-25 16:59 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 16:59 - INFO - ---------------------------------------------
2024-10-25 17:00 - INFO - ---------------------------------------------
2024-10-25 17:00 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 17:00 - INFO - 	 Train Loss: 0.077
2024-10-25 17:00 - INFO - 	 Val. Loss: 0.069
2024-10-25 17:00 - INFO - 	 ROC-AUC: 0.983
2024-10-25 17:00 - INFO - 	 PR-AUC: 0.859
2024-10-25 17:00 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:00 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 17:00 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 17:00 - INFO - 	 Best PR-AUC: 0.859
2024-10-25 17:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 17:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 17:00 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 17:00 - INFO - ---------------------------------------------
2024-10-25 17:00 - INFO - ---------------------------------------------
2024-10-25 17:00 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 17:00 - INFO - 	 Train Loss: 0.075
2024-10-25 17:00 - INFO - 	 Val. Loss: 0.071
2024-10-25 17:00 - INFO - 	 ROC-AUC: 0.984
2024-10-25 17:00 - INFO - 	 PR-AUC: 0.854
2024-10-25 17:00 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 17:00 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 17:00 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 17:00 - INFO - 	 Best PR-AUC: 0.859
2024-10-25 17:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 17:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 17:00 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:00 - INFO - ---------------------------------------------
2024-10-25 17:01 - INFO - ---------------------------------------------
2024-10-25 17:01 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 17:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98509
2024-10-25 17:01 - INFO - 	 Train Loss: 0.073
2024-10-25 17:01 - INFO - 	 Val. Loss: 0.066
2024-10-25 17:01 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:01 - INFO - 	 PR-AUC: 0.859
2024-10-25 17:01 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:01 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 17:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:01 - INFO - 	 Best PR-AUC: 0.859
2024-10-25 17:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 17:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 17:01 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:01 - INFO - ---------------------------------------------
2024-10-25 17:01 - INFO - ---------------------------------------------
2024-10-25 17:01 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 17:01 - INFO - 	 Train Loss: 0.072
2024-10-25 17:01 - INFO - 	 Val. Loss: 0.067
2024-10-25 17:01 - INFO - 	 ROC-AUC: 0.984
2024-10-25 17:01 - INFO - 	 PR-AUC: 0.870
2024-10-25 17:01 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 17:01 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 17:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:01 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 17:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 17:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 17:01 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:01 - INFO - ---------------------------------------------
2024-10-25 17:02 - INFO - ---------------------------------------------
2024-10-25 17:02 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 17:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98641
2024-10-25 17:02 - INFO - 	 Train Loss: 0.070
2024-10-25 17:02 - INFO - 	 Val. Loss: 0.063
2024-10-25 17:02 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:02 - INFO - 	 PR-AUC: 0.869
2024-10-25 17:02 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 17:02 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 17:02 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:02 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 17:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 17:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 17:02 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 17:02 - INFO - ---------------------------------------------
2024-10-25 17:02 - INFO - ---------------------------------------------
2024-10-25 17:02 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 17:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98701
2024-10-25 17:02 - INFO - 	 Train Loss: 0.070
2024-10-25 17:02 - INFO - 	 Val. Loss: 0.061
2024-10-25 17:02 - INFO - 	 ROC-AUC: 0.987
2024-10-25 17:02 - INFO - 	 PR-AUC: 0.889
2024-10-25 17:02 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 17:02 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 17:02 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 17:02 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 17:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 17:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 17:02 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 17:02 - INFO - ---------------------------------------------
2024-10-25 17:04 - INFO - Fit the preprocessing pipeline
2024-10-25 17:04 - INFO - Training using device: cuda
2024-10-25 17:04 - INFO - Creating generators
2024-10-25 17:04 - INFO - The model has 651,257 trainable parameters
2024-10-25 17:04 - INFO - * Model:
2024-10-25 17:04 - INFO - * -----------
2024-10-25 17:04 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 17:04 - INFO - * -----------
2024-10-25 17:04 - INFO - Evaluating model based on: rocauc
2024-10-25 17:04 - INFO - Training..

2024-10-25 17:04 - INFO - ---------------------------------------------
2024-10-25 17:04 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 17:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97348
2024-10-25 17:04 - INFO - 	 Train Loss: 0.179
2024-10-25 17:04 - INFO - 	 Val. Loss: 0.094
2024-10-25 17:04 - INFO - 	 ROC-AUC: 0.973
2024-10-25 17:04 - INFO - 	 PR-AUC: 0.743
2024-10-25 17:04 - INFO - 	 Recall for 0.4 precision: 0.952
2024-10-25 17:04 - INFO - 	 Best Val. Loss: 0.094
2024-10-25 17:04 - INFO - 	 Best ROC-AUC: 0.973
2024-10-25 17:04 - INFO - 	 Best PR-AUC: 0.743
2024-10-25 17:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 17:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.721
2024-10-25 17:04 - INFO - 	 Best Recall for 0.4 precision: 0.952
2024-10-25 17:04 - INFO - ---------------------------------------------
2024-10-25 17:05 - INFO - ---------------------------------------------
2024-10-25 17:05 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 17:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97925
2024-10-25 17:05 - INFO - 	 Train Loss: 0.095
2024-10-25 17:05 - INFO - 	 Val. Loss: 0.102
2024-10-25 17:05 - INFO - 	 ROC-AUC: 0.979
2024-10-25 17:05 - INFO - 	 PR-AUC: 0.813
2024-10-25 17:05 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-25 17:05 - INFO - 	 Best Val. Loss: 0.094
2024-10-25 17:05 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 17:05 - INFO - 	 Best PR-AUC: 0.813
2024-10-25 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.792
2024-10-25 17:05 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-25 17:05 - INFO - ---------------------------------------------
2024-10-25 17:05 - INFO - ---------------------------------------------
2024-10-25 17:05 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 17:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98095
2024-10-25 17:05 - INFO - 	 Train Loss: 0.085
2024-10-25 17:05 - INFO - 	 Val. Loss: 0.078
2024-10-25 17:05 - INFO - 	 ROC-AUC: 0.981
2024-10-25 17:05 - INFO - 	 PR-AUC: 0.830
2024-10-25 17:05 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 17:05 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 17:05 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 17:05 - INFO - 	 Best PR-AUC: 0.830
2024-10-25 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-25 17:05 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 17:05 - INFO - ---------------------------------------------
2024-10-25 17:06 - INFO - ---------------------------------------------
2024-10-25 17:06 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 17:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9824
2024-10-25 17:06 - INFO - 	 Train Loss: 0.081
2024-10-25 17:06 - INFO - 	 Val. Loss: 0.074
2024-10-25 17:06 - INFO - 	 ROC-AUC: 0.982
2024-10-25 17:06 - INFO - 	 PR-AUC: 0.850
2024-10-25 17:06 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 17:06 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 17:06 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 17:06 - INFO - 	 Best PR-AUC: 0.850
2024-10-25 17:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 17:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 17:06 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 17:06 - INFO - ---------------------------------------------
2024-10-25 17:06 - INFO - ---------------------------------------------
2024-10-25 17:06 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 17:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98383
2024-10-25 17:06 - INFO - 	 Train Loss: 0.075
2024-10-25 17:06 - INFO - 	 Val. Loss: 0.073
2024-10-25 17:06 - INFO - 	 ROC-AUC: 0.984
2024-10-25 17:06 - INFO - 	 PR-AUC: 0.855
2024-10-25 17:06 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 17:06 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 17:06 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 17:06 - INFO - 	 Best PR-AUC: 0.855
2024-10-25 17:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 17:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 17:06 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 17:06 - INFO - ---------------------------------------------
2024-10-25 17:07 - INFO - ---------------------------------------------
2024-10-25 17:07 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 17:07 - INFO - 	 Train Loss: 0.075
2024-10-25 17:07 - INFO - 	 Val. Loss: 0.078
2024-10-25 17:07 - INFO - 	 ROC-AUC: 0.981
2024-10-25 17:07 - INFO - 	 PR-AUC: 0.828
2024-10-25 17:07 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 17:07 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 17:07 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 17:07 - INFO - 	 Best PR-AUC: 0.855
2024-10-25 17:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 17:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 17:07 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 17:07 - INFO - ---------------------------------------------
2024-10-25 17:07 - INFO - ---------------------------------------------
2024-10-25 17:07 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 17:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.984
2024-10-25 17:07 - INFO - 	 Train Loss: 0.072
2024-10-25 17:07 - INFO - 	 Val. Loss: 0.069
2024-10-25 17:07 - INFO - 	 ROC-AUC: 0.984
2024-10-25 17:07 - INFO - 	 PR-AUC: 0.860
2024-10-25 17:07 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 17:07 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 17:07 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 17:07 - INFO - 	 Best PR-AUC: 0.860
2024-10-25 17:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 17:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 17:07 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 17:07 - INFO - ---------------------------------------------
2024-10-25 17:08 - INFO - ---------------------------------------------
2024-10-25 17:08 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 17:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98575
2024-10-25 17:08 - INFO - 	 Train Loss: 0.071
2024-10-25 17:08 - INFO - 	 Val. Loss: 0.064
2024-10-25 17:08 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:08 - INFO - 	 PR-AUC: 0.887
2024-10-25 17:08 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 17:08 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 17:08 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:08 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 17:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 17:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 17:08 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 17:08 - INFO - ---------------------------------------------
2024-10-25 17:08 - INFO - ---------------------------------------------
2024-10-25 17:08 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 17:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98725
2024-10-25 17:08 - INFO - 	 Train Loss: 0.070
2024-10-25 17:08 - INFO - 	 Val. Loss: 0.063
2024-10-25 17:08 - INFO - 	 ROC-AUC: 0.987
2024-10-25 17:08 - INFO - 	 PR-AUC: 0.881
2024-10-25 17:08 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 17:08 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 17:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 17:08 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 17:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 17:08 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 17:08 - INFO - ---------------------------------------------
2024-10-25 17:09 - INFO - ---------------------------------------------
2024-10-25 17:09 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 17:09 - INFO - 	 Train Loss: 0.069
2024-10-25 17:09 - INFO - 	 Val. Loss: 0.064
2024-10-25 17:09 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:09 - INFO - 	 PR-AUC: 0.864
2024-10-25 17:09 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 17:09 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 17:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 17:09 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 17:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 17:09 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 17:09 - INFO - ---------------------------------------------
2024-10-25 17:10 - INFO - Fit the preprocessing pipeline
2024-10-25 17:10 - INFO - Training using device: cuda
2024-10-25 17:10 - INFO - Creating generators
2024-10-25 17:10 - INFO - The model has 651,257 trainable parameters
2024-10-25 17:10 - INFO - * Model:
2024-10-25 17:10 - INFO - * -----------
2024-10-25 17:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 17:10 - INFO - * -----------
2024-10-25 17:10 - INFO - Evaluating model based on: rocauc
2024-10-25 17:10 - INFO - Training..

2024-10-25 17:11 - INFO - ---------------------------------------------
2024-10-25 17:11 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 17:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96779
2024-10-25 17:11 - INFO - 	 Train Loss: 0.179
2024-10-25 17:11 - INFO - 	 Val. Loss: 0.114
2024-10-25 17:11 - INFO - 	 ROC-AUC: 0.968
2024-10-25 17:11 - INFO - 	 PR-AUC: 0.744
2024-10-25 17:11 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-25 17:11 - INFO - 	 Best Val. Loss: 0.114
2024-10-25 17:11 - INFO - 	 Best ROC-AUC: 0.968
2024-10-25 17:11 - INFO - 	 Best PR-AUC: 0.744
2024-10-25 17:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-25 17:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.703
2024-10-25 17:11 - INFO - 	 Best Recall for 0.4 precision: 0.934
2024-10-25 17:11 - INFO - ---------------------------------------------
2024-10-25 17:12 - INFO - ---------------------------------------------
2024-10-25 17:12 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 17:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98105
2024-10-25 17:12 - INFO - 	 Train Loss: 0.097
2024-10-25 17:12 - INFO - 	 Val. Loss: 0.081
2024-10-25 17:12 - INFO - 	 ROC-AUC: 0.981
2024-10-25 17:12 - INFO - 	 PR-AUC: 0.825
2024-10-25 17:12 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 17:12 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 17:12 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 17:12 - INFO - 	 Best PR-AUC: 0.825
2024-10-25 17:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 17:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.771
2024-10-25 17:12 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 17:12 - INFO - ---------------------------------------------
2024-10-25 17:12 - INFO - ---------------------------------------------
2024-10-25 17:12 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 17:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98129
2024-10-25 17:12 - INFO - 	 Train Loss: 0.086
2024-10-25 17:12 - INFO - 	 Val. Loss: 0.074
2024-10-25 17:12 - INFO - 	 ROC-AUC: 0.981
2024-10-25 17:12 - INFO - 	 PR-AUC: 0.831
2024-10-25 17:12 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 17:12 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 17:12 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 17:12 - INFO - 	 Best PR-AUC: 0.831
2024-10-25 17:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 17:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-25 17:12 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:12 - INFO - ---------------------------------------------
2024-10-25 17:13 - INFO - ---------------------------------------------
2024-10-25 17:13 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 17:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98207
2024-10-25 17:13 - INFO - 	 Train Loss: 0.080
2024-10-25 17:13 - INFO - 	 Val. Loss: 0.074
2024-10-25 17:13 - INFO - 	 ROC-AUC: 0.982
2024-10-25 17:13 - INFO - 	 PR-AUC: 0.855
2024-10-25 17:13 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 17:13 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 17:13 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 17:13 - INFO - 	 Best PR-AUC: 0.855
2024-10-25 17:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 17:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-25 17:13 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:13 - INFO - ---------------------------------------------
2024-10-25 17:13 - INFO - ---------------------------------------------
2024-10-25 17:13 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 17:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98463
2024-10-25 17:13 - INFO - 	 Train Loss: 0.076
2024-10-25 17:13 - INFO - 	 Val. Loss: 0.067
2024-10-25 17:13 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:13 - INFO - 	 PR-AUC: 0.858
2024-10-25 17:13 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:13 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 17:13 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:13 - INFO - 	 Best PR-AUC: 0.858
2024-10-25 17:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-25 17:13 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:13 - INFO - ---------------------------------------------
2024-10-25 17:14 - INFO - ---------------------------------------------
2024-10-25 17:14 - INFO - Epoch: 06 | Time: 0m 30s
2024-10-25 17:14 - INFO - 	 Train Loss: 0.074
2024-10-25 17:14 - INFO - 	 Val. Loss: 0.075
2024-10-25 17:14 - INFO - 	 ROC-AUC: 0.984
2024-10-25 17:14 - INFO - 	 PR-AUC: 0.858
2024-10-25 17:14 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 17:14 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 17:14 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:14 - INFO - 	 Best PR-AUC: 0.858
2024-10-25 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-25 17:14 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 17:14 - INFO - ---------------------------------------------
2024-10-25 17:14 - INFO - ---------------------------------------------
2024-10-25 17:14 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 17:14 - INFO - 	 Train Loss: 0.073
2024-10-25 17:14 - INFO - 	 Val. Loss: 0.072
2024-10-25 17:14 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:14 - INFO - 	 PR-AUC: 0.856
2024-10-25 17:14 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 17:14 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 17:14 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:14 - INFO - 	 Best PR-AUC: 0.858
2024-10-25 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-25 17:14 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 17:14 - INFO - ---------------------------------------------
2024-10-25 17:15 - INFO - ---------------------------------------------
2024-10-25 17:15 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 17:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98553
2024-10-25 17:15 - INFO - 	 Train Loss: 0.071
2024-10-25 17:15 - INFO - 	 Val. Loss: 0.065
2024-10-25 17:15 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:15 - INFO - 	 PR-AUC: 0.867
2024-10-25 17:15 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 17:15 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 17:15 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:15 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 17:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 17:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 17:15 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 17:15 - INFO - ---------------------------------------------
2024-10-25 17:15 - INFO - ---------------------------------------------
2024-10-25 17:15 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 17:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98574
2024-10-25 17:15 - INFO - 	 Train Loss: 0.070
2024-10-25 17:15 - INFO - 	 Val. Loss: 0.067
2024-10-25 17:15 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:15 - INFO - 	 PR-AUC: 0.868
2024-10-25 17:15 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:15 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 17:15 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:15 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 17:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 17:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 17:15 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 17:15 - INFO - ---------------------------------------------
2024-10-25 17:16 - INFO - ---------------------------------------------
2024-10-25 17:16 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 17:16 - INFO - 	 Train Loss: 0.068
2024-10-25 17:16 - INFO - 	 Val. Loss: 0.067
2024-10-25 17:16 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:16 - INFO - 	 PR-AUC: 0.872
2024-10-25 17:16 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 17:16 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 17:16 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:16 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 17:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 17:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 17:16 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 17:16 - INFO - ---------------------------------------------
2024-10-25 17:17 - INFO - Fit the preprocessing pipeline
2024-10-25 17:17 - INFO - Training using device: cuda
2024-10-25 17:17 - INFO - Creating generators
2024-10-25 17:17 - INFO - The model has 651,257 trainable parameters
2024-10-25 17:17 - INFO - * Model:
2024-10-25 17:17 - INFO - * -----------
2024-10-25 17:17 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 17:17 - INFO - * -----------
2024-10-25 17:17 - INFO - Evaluating model based on: rocauc
2024-10-25 17:17 - INFO - Training..

2024-10-25 17:18 - INFO - ---------------------------------------------
2024-10-25 17:18 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 17:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97149
2024-10-25 17:18 - INFO - 	 Train Loss: 0.175
2024-10-25 17:18 - INFO - 	 Val. Loss: 0.095
2024-10-25 17:18 - INFO - 	 ROC-AUC: 0.971
2024-10-25 17:18 - INFO - 	 PR-AUC: 0.761
2024-10-25 17:18 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-25 17:18 - INFO - 	 Best Val. Loss: 0.095
2024-10-25 17:18 - INFO - 	 Best ROC-AUC: 0.971
2024-10-25 17:18 - INFO - 	 Best PR-AUC: 0.761
2024-10-25 17:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 17:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-25 17:18 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-25 17:18 - INFO - ---------------------------------------------
2024-10-25 17:18 - INFO - ---------------------------------------------
2024-10-25 17:18 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 17:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98035
2024-10-25 17:18 - INFO - 	 Train Loss: 0.095
2024-10-25 17:18 - INFO - 	 Val. Loss: 0.080
2024-10-25 17:18 - INFO - 	 ROC-AUC: 0.980
2024-10-25 17:18 - INFO - 	 PR-AUC: 0.805
2024-10-25 17:18 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 17:18 - INFO - 	 Best Val. Loss: 0.080
2024-10-25 17:18 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 17:18 - INFO - 	 Best PR-AUC: 0.805
2024-10-25 17:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 17:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-25 17:18 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 17:18 - INFO - ---------------------------------------------
2024-10-25 17:19 - INFO - ---------------------------------------------
2024-10-25 17:19 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 17:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98328
2024-10-25 17:19 - INFO - 	 Train Loss: 0.085
2024-10-25 17:19 - INFO - 	 Val. Loss: 0.073
2024-10-25 17:19 - INFO - 	 ROC-AUC: 0.983
2024-10-25 17:19 - INFO - 	 PR-AUC: 0.839
2024-10-25 17:19 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:19 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 17:19 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 17:19 - INFO - 	 Best PR-AUC: 0.839
2024-10-25 17:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 17:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-25 17:19 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 17:19 - INFO - ---------------------------------------------
2024-10-25 17:19 - INFO - ---------------------------------------------
2024-10-25 17:19 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 17:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98367
2024-10-25 17:19 - INFO - 	 Train Loss: 0.081
2024-10-25 17:19 - INFO - 	 Val. Loss: 0.072
2024-10-25 17:19 - INFO - 	 ROC-AUC: 0.984
2024-10-25 17:19 - INFO - 	 PR-AUC: 0.846
2024-10-25 17:19 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 17:19 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 17:19 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 17:19 - INFO - 	 Best PR-AUC: 0.846
2024-10-25 17:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 17:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-25 17:19 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 17:19 - INFO - ---------------------------------------------
2024-10-25 17:20 - INFO - ---------------------------------------------
2024-10-25 17:20 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 17:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98494
2024-10-25 17:20 - INFO - 	 Train Loss: 0.076
2024-10-25 17:20 - INFO - 	 Val. Loss: 0.071
2024-10-25 17:20 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:20 - INFO - 	 PR-AUC: 0.850
2024-10-25 17:20 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 17:20 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 17:20 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:20 - INFO - 	 Best PR-AUC: 0.850
2024-10-25 17:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 17:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-25 17:20 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:20 - INFO - ---------------------------------------------
2024-10-25 17:20 - INFO - ---------------------------------------------
2024-10-25 17:20 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 17:20 - INFO - 	 Train Loss: 0.074
2024-10-25 17:20 - INFO - 	 Val. Loss: 0.068
2024-10-25 17:20 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:20 - INFO - 	 PR-AUC: 0.858
2024-10-25 17:20 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:20 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 17:20 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:20 - INFO - 	 Best PR-AUC: 0.858
2024-10-25 17:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 17:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-25 17:20 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:20 - INFO - ---------------------------------------------
2024-10-25 17:21 - INFO - ---------------------------------------------
2024-10-25 17:21 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 17:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98619
2024-10-25 17:21 - INFO - 	 Train Loss: 0.073
2024-10-25 17:21 - INFO - 	 Val. Loss: 0.065
2024-10-25 17:21 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:21 - INFO - 	 PR-AUC: 0.866
2024-10-25 17:21 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 17:21 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 17:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:21 - INFO - 	 Best PR-AUC: 0.866
2024-10-25 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 17:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 17:21 - INFO - ---------------------------------------------
2024-10-25 17:22 - INFO - ---------------------------------------------
2024-10-25 17:22 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 17:22 - INFO - 	 Train Loss: 0.071
2024-10-25 17:22 - INFO - 	 Val. Loss: 0.064
2024-10-25 17:22 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:22 - INFO - 	 PR-AUC: 0.872
2024-10-25 17:22 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 17:22 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 17:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:22 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 17:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 17:22 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 17:22 - INFO - ---------------------------------------------
2024-10-25 17:22 - INFO - ---------------------------------------------
2024-10-25 17:22 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 17:22 - INFO - 	 Train Loss: 0.070
2024-10-25 17:22 - INFO - 	 Val. Loss: 0.066
2024-10-25 17:22 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:22 - INFO - 	 PR-AUC: 0.868
2024-10-25 17:22 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 17:22 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 17:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:22 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 17:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 17:22 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 17:22 - INFO - ---------------------------------------------
2024-10-25 17:23 - INFO - ---------------------------------------------
2024-10-25 17:23 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 17:23 - INFO - 	 Train Loss: 0.067
2024-10-25 17:23 - INFO - 	 Val. Loss: 0.066
2024-10-25 17:23 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:23 - INFO - 	 PR-AUC: 0.866
2024-10-25 17:23 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 17:23 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 17:23 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:23 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 17:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 17:23 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 17:23 - INFO - ---------------------------------------------
2024-10-25 17:24 - INFO - Fit the preprocessing pipeline
2024-10-25 17:24 - INFO - Training using device: cuda
2024-10-25 17:24 - INFO - Creating generators
2024-10-25 17:24 - INFO - The model has 651,257 trainable parameters
2024-10-25 17:24 - INFO - * Model:
2024-10-25 17:24 - INFO - * -----------
2024-10-25 17:24 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 17:24 - INFO - * -----------
2024-10-25 17:24 - INFO - Evaluating model based on: rocauc
2024-10-25 17:24 - INFO - Training..

2024-10-25 17:25 - INFO - ---------------------------------------------
2024-10-25 17:25 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 17:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96917
2024-10-25 17:25 - INFO - 	 Train Loss: 0.189
2024-10-25 17:25 - INFO - 	 Val. Loss: 0.100
2024-10-25 17:25 - INFO - 	 ROC-AUC: 0.969
2024-10-25 17:25 - INFO - 	 PR-AUC: 0.725
2024-10-25 17:25 - INFO - 	 Recall for 0.4 precision: 0.946
2024-10-25 17:25 - INFO - 	 Best Val. Loss: 0.100
2024-10-25 17:25 - INFO - 	 Best ROC-AUC: 0.969
2024-10-25 17:25 - INFO - 	 Best PR-AUC: 0.725
2024-10-25 17:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-25 17:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.708
2024-10-25 17:25 - INFO - 	 Best Recall for 0.4 precision: 0.946
2024-10-25 17:25 - INFO - ---------------------------------------------
2024-10-25 17:25 - INFO - ---------------------------------------------
2024-10-25 17:25 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 17:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98075
2024-10-25 17:25 - INFO - 	 Train Loss: 0.096
2024-10-25 17:25 - INFO - 	 Val. Loss: 0.078
2024-10-25 17:25 - INFO - 	 ROC-AUC: 0.981
2024-10-25 17:25 - INFO - 	 PR-AUC: 0.815
2024-10-25 17:25 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 17:25 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 17:25 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 17:25 - INFO - 	 Best PR-AUC: 0.815
2024-10-25 17:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 17:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-10-25 17:25 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 17:25 - INFO - ---------------------------------------------
2024-10-25 17:26 - INFO - ---------------------------------------------
2024-10-25 17:26 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 17:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98213
2024-10-25 17:26 - INFO - 	 Train Loss: 0.084
2024-10-25 17:26 - INFO - 	 Val. Loss: 0.082
2024-10-25 17:26 - INFO - 	 ROC-AUC: 0.982
2024-10-25 17:26 - INFO - 	 PR-AUC: 0.844
2024-10-25 17:26 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:26 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 17:26 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 17:26 - INFO - 	 Best PR-AUC: 0.844
2024-10-25 17:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 17:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-25 17:26 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 17:26 - INFO - ---------------------------------------------
2024-10-25 17:26 - INFO - ---------------------------------------------
2024-10-25 17:26 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 17:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98356
2024-10-25 17:26 - INFO - 	 Train Loss: 0.079
2024-10-25 17:26 - INFO - 	 Val. Loss: 0.073
2024-10-25 17:26 - INFO - 	 ROC-AUC: 0.984
2024-10-25 17:26 - INFO - 	 PR-AUC: 0.846
2024-10-25 17:26 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 17:26 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 17:26 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 17:26 - INFO - 	 Best PR-AUC: 0.846
2024-10-25 17:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 17:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-25 17:26 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:26 - INFO - ---------------------------------------------
2024-10-25 17:27 - INFO - ---------------------------------------------
2024-10-25 17:27 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 17:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9851
2024-10-25 17:27 - INFO - 	 Train Loss: 0.076
2024-10-25 17:27 - INFO - 	 Val. Loss: 0.075
2024-10-25 17:27 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:27 - INFO - 	 PR-AUC: 0.857
2024-10-25 17:27 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:27 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 17:27 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:27 - INFO - 	 Best PR-AUC: 0.857
2024-10-25 17:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-25 17:27 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:27 - INFO - ---------------------------------------------
2024-10-25 17:27 - INFO - ---------------------------------------------
2024-10-25 17:27 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 17:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98553
2024-10-25 17:27 - INFO - 	 Train Loss: 0.074
2024-10-25 17:27 - INFO - 	 Val. Loss: 0.065
2024-10-25 17:27 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:27 - INFO - 	 PR-AUC: 0.879
2024-10-25 17:27 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 17:27 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 17:27 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:27 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 17:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 17:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 17:27 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:27 - INFO - ---------------------------------------------
2024-10-25 17:28 - INFO - ---------------------------------------------
2024-10-25 17:28 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 17:28 - INFO - 	 Train Loss: 0.071
2024-10-25 17:28 - INFO - 	 Val. Loss: 0.069
2024-10-25 17:28 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:28 - INFO - 	 PR-AUC: 0.868
2024-10-25 17:28 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 17:28 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 17:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:28 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 17:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 17:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 17:28 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 17:28 - INFO - ---------------------------------------------
2024-10-25 17:28 - INFO - ---------------------------------------------
2024-10-25 17:28 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 17:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98593
2024-10-25 17:28 - INFO - 	 Train Loss: 0.070
2024-10-25 17:28 - INFO - 	 Val. Loss: 0.066
2024-10-25 17:28 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:28 - INFO - 	 PR-AUC: 0.870
2024-10-25 17:28 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 17:28 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 17:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:28 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 17:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 17:28 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 17:28 - INFO - ---------------------------------------------
2024-10-25 17:29 - INFO - ---------------------------------------------
2024-10-25 17:29 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 17:29 - INFO - 	 Train Loss: 0.070
2024-10-25 17:29 - INFO - 	 Val. Loss: 0.066
2024-10-25 17:29 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:29 - INFO - 	 PR-AUC: 0.875
2024-10-25 17:29 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 17:29 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 17:29 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:29 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 17:29 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 17:29 - INFO - ---------------------------------------------
2024-10-25 17:29 - INFO - ---------------------------------------------
2024-10-25 17:29 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 17:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9873
2024-10-25 17:29 - INFO - 	 Train Loss: 0.069
2024-10-25 17:29 - INFO - 	 Val. Loss: 0.063
2024-10-25 17:29 - INFO - 	 ROC-AUC: 0.987
2024-10-25 17:29 - INFO - 	 PR-AUC: 0.884
2024-10-25 17:29 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 17:29 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 17:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 17:29 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 17:29 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 17:29 - INFO - ---------------------------------------------
2024-10-25 17:31 - INFO - Fit the preprocessing pipeline
2024-10-25 17:31 - INFO - Training using device: cuda
2024-10-25 17:31 - INFO - Creating generators
2024-10-25 17:31 - INFO - The model has 651,257 trainable parameters
2024-10-25 17:31 - INFO - * Model:
2024-10-25 17:31 - INFO - * -----------
2024-10-25 17:31 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 17:31 - INFO - * -----------
2024-10-25 17:31 - INFO - Evaluating model based on: rocauc
2024-10-25 17:31 - INFO - Training..

2024-10-25 17:31 - INFO - ---------------------------------------------
2024-10-25 17:31 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 17:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97446
2024-10-25 17:31 - INFO - 	 Train Loss: 0.173
2024-10-25 17:31 - INFO - 	 Val. Loss: 0.090
2024-10-25 17:31 - INFO - 	 ROC-AUC: 0.974
2024-10-25 17:31 - INFO - 	 PR-AUC: 0.768
2024-10-25 17:31 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-25 17:31 - INFO - 	 Best Val. Loss: 0.090
2024-10-25 17:31 - INFO - 	 Best ROC-AUC: 0.974
2024-10-25 17:31 - INFO - 	 Best PR-AUC: 0.768
2024-10-25 17:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 17:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.766
2024-10-25 17:31 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-25 17:31 - INFO - ---------------------------------------------
2024-10-25 17:32 - INFO - ---------------------------------------------
2024-10-25 17:32 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 17:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98181
2024-10-25 17:32 - INFO - 	 Train Loss: 0.095
2024-10-25 17:32 - INFO - 	 Val. Loss: 0.075
2024-10-25 17:32 - INFO - 	 ROC-AUC: 0.982
2024-10-25 17:32 - INFO - 	 PR-AUC: 0.839
2024-10-25 17:32 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:32 - INFO - 	 Best Val. Loss: 0.075
2024-10-25 17:32 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 17:32 - INFO - 	 Best PR-AUC: 0.839
2024-10-25 17:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 17:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-25 17:32 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 17:32 - INFO - ---------------------------------------------
2024-10-25 17:32 - INFO - ---------------------------------------------
2024-10-25 17:32 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 17:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98291
2024-10-25 17:32 - INFO - 	 Train Loss: 0.085
2024-10-25 17:32 - INFO - 	 Val. Loss: 0.077
2024-10-25 17:32 - INFO - 	 ROC-AUC: 0.983
2024-10-25 17:32 - INFO - 	 PR-AUC: 0.842
2024-10-25 17:32 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:32 - INFO - 	 Best Val. Loss: 0.075
2024-10-25 17:32 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 17:32 - INFO - 	 Best PR-AUC: 0.842
2024-10-25 17:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 17:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-25 17:32 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 17:32 - INFO - ---------------------------------------------
2024-10-25 17:33 - INFO - ---------------------------------------------
2024-10-25 17:33 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 17:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98306
2024-10-25 17:33 - INFO - 	 Train Loss: 0.078
2024-10-25 17:33 - INFO - 	 Val. Loss: 0.080
2024-10-25 17:33 - INFO - 	 ROC-AUC: 0.983
2024-10-25 17:33 - INFO - 	 PR-AUC: 0.849
2024-10-25 17:33 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 17:33 - INFO - 	 Best Val. Loss: 0.075
2024-10-25 17:33 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 17:33 - INFO - 	 Best PR-AUC: 0.849
2024-10-25 17:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 17:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-25 17:33 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 17:33 - INFO - ---------------------------------------------
2024-10-25 17:34 - INFO - ---------------------------------------------
2024-10-25 17:34 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 17:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98466
2024-10-25 17:34 - INFO - 	 Train Loss: 0.077
2024-10-25 17:34 - INFO - 	 Val. Loss: 0.068
2024-10-25 17:34 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:34 - INFO - 	 PR-AUC: 0.856
2024-10-25 17:34 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 17:34 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 17:34 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:34 - INFO - 	 Best PR-AUC: 0.856
2024-10-25 17:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 17:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 17:34 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 17:34 - INFO - ---------------------------------------------
2024-10-25 17:34 - INFO - ---------------------------------------------
2024-10-25 17:34 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 17:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98539
2024-10-25 17:34 - INFO - 	 Train Loss: 0.074
2024-10-25 17:34 - INFO - 	 Val. Loss: 0.067
2024-10-25 17:34 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:34 - INFO - 	 PR-AUC: 0.867
2024-10-25 17:34 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 17:34 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 17:34 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:34 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 17:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 17:34 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 17:34 - INFO - ---------------------------------------------
2024-10-25 17:35 - INFO - ---------------------------------------------
2024-10-25 17:35 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 17:35 - INFO - 	 Train Loss: 0.071
2024-10-25 17:35 - INFO - 	 Val. Loss: 0.068
2024-10-25 17:35 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:35 - INFO - 	 PR-AUC: 0.860
2024-10-25 17:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:35 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 17:35 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:35 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 17:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 17:35 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 17:35 - INFO - ---------------------------------------------
2024-10-25 17:35 - INFO - ---------------------------------------------
2024-10-25 17:35 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 17:35 - INFO - 	 Train Loss: 0.071
2024-10-25 17:35 - INFO - 	 Val. Loss: 0.067
2024-10-25 17:35 - INFO - 	 ROC-AUC: 0.984
2024-10-25 17:35 - INFO - 	 PR-AUC: 0.856
2024-10-25 17:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:35 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 17:35 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:35 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 17:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 17:35 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 17:35 - INFO - ---------------------------------------------
2024-10-25 17:36 - INFO - ---------------------------------------------
2024-10-25 17:36 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 17:36 - INFO - 	 Train Loss: 0.068
2024-10-25 17:36 - INFO - 	 Val. Loss: 0.068
2024-10-25 17:36 - INFO - 	 ROC-AUC: 0.985
2024-10-25 17:36 - INFO - 	 PR-AUC: 0.853
2024-10-25 17:36 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 17:36 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 17:36 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 17:36 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 17:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 17:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 17:36 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 17:36 - INFO - ---------------------------------------------
2024-10-25 17:36 - INFO - ---------------------------------------------
2024-10-25 17:36 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 17:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.986
2024-10-25 17:36 - INFO - 	 Train Loss: 0.069
2024-10-25 17:36 - INFO - 	 Val. Loss: 0.064
2024-10-25 17:36 - INFO - 	 ROC-AUC: 0.986
2024-10-25 17:36 - INFO - 	 PR-AUC: 0.875
2024-10-25 17:36 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 17:36 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 17:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 17:36 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 17:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 17:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-25 17:36 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 17:36 - INFO - ---------------------------------------------
