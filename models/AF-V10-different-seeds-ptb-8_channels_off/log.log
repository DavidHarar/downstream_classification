2024-10-13 13:02 - INFO - Fit the preprocessing pipeline
2024-10-13 13:02 - INFO - Training using device: cuda
2024-10-13 13:02 - INFO - Creating generators
2024-10-13 13:02 - INFO - The model has 651,257 trainable parameters
2024-10-13 13:02 - INFO - * Model:
2024-10-13 13:02 - INFO - * -----------
2024-10-13 13:02 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 13:02 - INFO - * -----------
2024-10-13 13:02 - INFO - Evaluating model based on: rocauc
2024-10-13 13:02 - INFO - Training..

2024-10-13 13:03 - INFO - ---------------------------------------------
2024-10-13 13:03 - INFO - Epoch: 01 | Time: 0m 50s
2024-10-13 13:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97355
2024-10-13 13:03 - INFO - 	 Train Loss: 0.182
2024-10-13 13:03 - INFO - 	 Val. Loss: 0.094
2024-10-13 13:03 - INFO - 	 ROC-AUC: 0.974
2024-10-13 13:03 - INFO - 	 PR-AUC: 0.743
2024-10-13 13:03 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 13:03 - INFO - 	 Best Val. Loss: 0.094
2024-10-13 13:03 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 13:03 - INFO - 	 Best PR-AUC: 0.743
2024-10-13 13:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 13:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.744
2024-10-13 13:03 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 13:03 - INFO - ---------------------------------------------
2024-10-13 13:04 - INFO - ---------------------------------------------
2024-10-13 13:04 - INFO - Epoch: 02 | Time: 0m 44s
2024-10-13 13:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97997
2024-10-13 13:04 - INFO - 	 Train Loss: 0.095
2024-10-13 13:04 - INFO - 	 Val. Loss: 0.082
2024-10-13 13:04 - INFO - 	 ROC-AUC: 0.980
2024-10-13 13:04 - INFO - 	 PR-AUC: 0.814
2024-10-13 13:04 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 13:04 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 13:04 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 13:04 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 13:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 13:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-13 13:04 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 13:04 - INFO - ---------------------------------------------
2024-10-13 13:05 - INFO - ---------------------------------------------
2024-10-13 13:05 - INFO - Epoch: 03 | Time: 0m 44s
2024-10-13 13:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98321
2024-10-13 13:05 - INFO - 	 Train Loss: 0.084
2024-10-13 13:05 - INFO - 	 Val. Loss: 0.071
2024-10-13 13:05 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:05 - INFO - 	 PR-AUC: 0.855
2024-10-13 13:05 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 13:05 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 13:05 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 13:05 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 13:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 13:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-13 13:05 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 13:05 - INFO - ---------------------------------------------
2024-10-13 13:05 - INFO - ---------------------------------------------
2024-10-13 13:05 - INFO - Epoch: 04 | Time: 0m 44s
2024-10-13 13:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98465
2024-10-13 13:05 - INFO - 	 Train Loss: 0.081
2024-10-13 13:05 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:05 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:05 - INFO - 	 PR-AUC: 0.858
2024-10-13 13:05 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:05 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:05 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:05 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 13:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 13:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-13 13:05 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:05 - INFO - ---------------------------------------------
2024-10-13 13:06 - INFO - ---------------------------------------------
2024-10-13 13:06 - INFO - Epoch: 05 | Time: 0m 43s
2024-10-13 13:06 - INFO - 	 Train Loss: 0.077
2024-10-13 13:06 - INFO - 	 Val. Loss: 0.071
2024-10-13 13:06 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:06 - INFO - 	 PR-AUC: 0.856
2024-10-13 13:06 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 13:06 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:06 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:06 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 13:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 13:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-13 13:06 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:06 - INFO - ---------------------------------------------
2024-10-13 13:07 - INFO - ---------------------------------------------
2024-10-13 13:07 - INFO - Epoch: 06 | Time: 0m 40s
2024-10-13 13:07 - INFO - 	 Train Loss: 0.075
2024-10-13 13:07 - INFO - 	 Val. Loss: 0.067
2024-10-13 13:07 - INFO - 	 ROC-AUC: 0.984
2024-10-13 13:07 - INFO - 	 PR-AUC: 0.863
2024-10-13 13:07 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 13:07 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 13:07 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:07 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 13:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 13:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 13:07 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:07 - INFO - ---------------------------------------------
2024-10-13 13:07 - INFO - ---------------------------------------------
2024-10-13 13:07 - INFO - Epoch: 07 | Time: 0m 34s
2024-10-13 13:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9853
2024-10-13 13:07 - INFO - 	 Train Loss: 0.072
2024-10-13 13:07 - INFO - 	 Val. Loss: 0.067
2024-10-13 13:07 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:07 - INFO - 	 PR-AUC: 0.866
2024-10-13 13:07 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:07 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 13:07 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:07 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 13:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 13:07 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:07 - INFO - ---------------------------------------------
2024-10-13 13:08 - INFO - ---------------------------------------------
2024-10-13 13:08 - INFO - Epoch: 08 | Time: 0m 34s
2024-10-13 13:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98661
2024-10-13 13:08 - INFO - 	 Train Loss: 0.072
2024-10-13 13:08 - INFO - 	 Val. Loss: 0.064
2024-10-13 13:08 - INFO - 	 ROC-AUC: 0.987
2024-10-13 13:08 - INFO - 	 PR-AUC: 0.870
2024-10-13 13:08 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 13:08 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 13:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 13:08 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 13:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-13 13:08 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 13:08 - INFO - ---------------------------------------------
2024-10-13 13:09 - INFO - ---------------------------------------------
2024-10-13 13:09 - INFO - Epoch: 09 | Time: 0m 34s
2024-10-13 13:09 - INFO - 	 Train Loss: 0.070
2024-10-13 13:09 - INFO - 	 Val. Loss: 0.066
2024-10-13 13:09 - INFO - 	 ROC-AUC: 0.986
2024-10-13 13:09 - INFO - 	 PR-AUC: 0.875
2024-10-13 13:09 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 13:09 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 13:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 13:09 - INFO - 	 Best PR-AUC: 0.875
2024-10-13 13:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-13 13:09 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 13:09 - INFO - ---------------------------------------------
2024-10-13 13:09 - INFO - ---------------------------------------------
2024-10-13 13:09 - INFO - Epoch: 10 | Time: 0m 35s
2024-10-13 13:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98741
2024-10-13 13:09 - INFO - 	 Train Loss: 0.069
2024-10-13 13:09 - INFO - 	 Val. Loss: 0.062
2024-10-13 13:09 - INFO - 	 ROC-AUC: 0.987
2024-10-13 13:09 - INFO - 	 PR-AUC: 0.884
2024-10-13 13:09 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-13 13:09 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 13:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 13:09 - INFO - 	 Best PR-AUC: 0.884
2024-10-13 13:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-13 13:09 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 13:09 - INFO - ---------------------------------------------
2024-10-13 13:11 - INFO - Fit the preprocessing pipeline
2024-10-13 13:11 - INFO - Training using device: cuda
2024-10-13 13:11 - INFO - Creating generators
2024-10-13 13:11 - INFO - The model has 651,257 trainable parameters
2024-10-13 13:11 - INFO - * Model:
2024-10-13 13:11 - INFO - * -----------
2024-10-13 13:11 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 13:11 - INFO - * -----------
2024-10-13 13:11 - INFO - Evaluating model based on: rocauc
2024-10-13 13:11 - INFO - Training..

2024-10-13 13:11 - INFO - ---------------------------------------------
2024-10-13 13:11 - INFO - Epoch: 01 | Time: 0m 34s
2024-10-13 13:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97181
2024-10-13 13:11 - INFO - 	 Train Loss: 0.172
2024-10-13 13:11 - INFO - 	 Val. Loss: 0.102
2024-10-13 13:11 - INFO - 	 ROC-AUC: 0.972
2024-10-13 13:11 - INFO - 	 PR-AUC: 0.750
2024-10-13 13:11 - INFO - 	 Recall for 0.4 precision: 0.948
2024-10-13 13:11 - INFO - 	 Best Val. Loss: 0.102
2024-10-13 13:11 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 13:11 - INFO - 	 Best PR-AUC: 0.750
2024-10-13 13:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-13 13:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.703
2024-10-13 13:11 - INFO - 	 Best Recall for 0.4 precision: 0.948
2024-10-13 13:11 - INFO - ---------------------------------------------
2024-10-13 13:12 - INFO - ---------------------------------------------
2024-10-13 13:12 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-13 13:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97836
2024-10-13 13:12 - INFO - 	 Train Loss: 0.095
2024-10-13 13:12 - INFO - 	 Val. Loss: 0.083
2024-10-13 13:12 - INFO - 	 ROC-AUC: 0.978
2024-10-13 13:12 - INFO - 	 PR-AUC: 0.813
2024-10-13 13:12 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 13:12 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 13:12 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 13:12 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 13:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 13:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.780
2024-10-13 13:12 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 13:12 - INFO - ---------------------------------------------
2024-10-13 13:13 - INFO - ---------------------------------------------
2024-10-13 13:13 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-13 13:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98331
2024-10-13 13:13 - INFO - 	 Train Loss: 0.087
2024-10-13 13:13 - INFO - 	 Val. Loss: 0.070
2024-10-13 13:13 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:13 - INFO - 	 PR-AUC: 0.857
2024-10-13 13:13 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:13 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 13:13 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 13:13 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 13:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 13:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 13:13 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:13 - INFO - ---------------------------------------------
2024-10-13 13:13 - INFO - ---------------------------------------------
2024-10-13 13:13 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 13:13 - INFO - 	 Train Loss: 0.080
2024-10-13 13:13 - INFO - 	 Val. Loss: 0.076
2024-10-13 13:13 - INFO - 	 ROC-AUC: 0.982
2024-10-13 13:13 - INFO - 	 PR-AUC: 0.851
2024-10-13 13:13 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 13:13 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 13:13 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 13:13 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 13:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 13:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 13:13 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:13 - INFO - ---------------------------------------------
2024-10-13 13:14 - INFO - ---------------------------------------------
2024-10-13 13:14 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-13 13:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98468
2024-10-13 13:14 - INFO - 	 Train Loss: 0.076
2024-10-13 13:14 - INFO - 	 Val. Loss: 0.067
2024-10-13 13:14 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:14 - INFO - 	 PR-AUC: 0.869
2024-10-13 13:14 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:14 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 13:14 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:14 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 13:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 13:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 13:14 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:14 - INFO - ---------------------------------------------
2024-10-13 13:14 - INFO - ---------------------------------------------
2024-10-13 13:14 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 13:14 - INFO - 	 Train Loss: 0.074
2024-10-13 13:14 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:14 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:14 - INFO - 	 PR-AUC: 0.864
2024-10-13 13:14 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:14 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 13:14 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:14 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 13:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 13:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 13:14 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:14 - INFO - ---------------------------------------------
2024-10-13 13:15 - INFO - ---------------------------------------------
2024-10-13 13:15 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 13:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98521
2024-10-13 13:15 - INFO - 	 Train Loss: 0.073
2024-10-13 13:15 - INFO - 	 Val. Loss: 0.064
2024-10-13 13:15 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:15 - INFO - 	 PR-AUC: 0.874
2024-10-13 13:15 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 13:15 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 13:15 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:15 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 13:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 13:15 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 13:15 - INFO - ---------------------------------------------
2024-10-13 13:15 - INFO - ---------------------------------------------
2024-10-13 13:15 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 13:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98557
2024-10-13 13:15 - INFO - 	 Train Loss: 0.071
2024-10-13 13:15 - INFO - 	 Val. Loss: 0.066
2024-10-13 13:15 - INFO - 	 ROC-AUC: 0.986
2024-10-13 13:15 - INFO - 	 PR-AUC: 0.873
2024-10-13 13:15 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 13:15 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 13:15 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 13:15 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 13:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 13:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 13:15 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 13:15 - INFO - ---------------------------------------------
2024-10-13 13:16 - INFO - ---------------------------------------------
2024-10-13 13:16 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 13:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9863
2024-10-13 13:16 - INFO - 	 Train Loss: 0.069
2024-10-13 13:16 - INFO - 	 Val. Loss: 0.062
2024-10-13 13:16 - INFO - 	 ROC-AUC: 0.986
2024-10-13 13:16 - INFO - 	 PR-AUC: 0.881
2024-10-13 13:16 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 13:16 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 13:16 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 13:16 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 13:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-13 13:16 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 13:16 - INFO - ---------------------------------------------
2024-10-13 13:16 - INFO - ---------------------------------------------
2024-10-13 13:16 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 13:16 - INFO - 	 Train Loss: 0.067
2024-10-13 13:16 - INFO - 	 Val. Loss: 0.063
2024-10-13 13:16 - INFO - 	 ROC-AUC: 0.986
2024-10-13 13:16 - INFO - 	 PR-AUC: 0.873
2024-10-13 13:16 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 13:16 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 13:16 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 13:16 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 13:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-13 13:16 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 13:16 - INFO - ---------------------------------------------
2024-10-13 13:18 - INFO - Fit the preprocessing pipeline
2024-10-13 13:18 - INFO - Training using device: cuda
2024-10-13 13:18 - INFO - Creating generators
2024-10-13 13:18 - INFO - The model has 651,257 trainable parameters
2024-10-13 13:18 - INFO - * Model:
2024-10-13 13:18 - INFO - * -----------
2024-10-13 13:18 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 13:18 - INFO - * -----------
2024-10-13 13:18 - INFO - Evaluating model based on: rocauc
2024-10-13 13:18 - INFO - Training..

2024-10-13 13:19 - INFO - ---------------------------------------------
2024-10-13 13:19 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 13:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9715
2024-10-13 13:19 - INFO - 	 Train Loss: 0.189
2024-10-13 13:19 - INFO - 	 Val. Loss: 0.099
2024-10-13 13:19 - INFO - 	 ROC-AUC: 0.972
2024-10-13 13:19 - INFO - 	 PR-AUC: 0.714
2024-10-13 13:19 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-13 13:19 - INFO - 	 Best Val. Loss: 0.099
2024-10-13 13:19 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 13:19 - INFO - 	 Best PR-AUC: 0.714
2024-10-13 13:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-13 13:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.734
2024-10-13 13:19 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-13 13:19 - INFO - ---------------------------------------------
2024-10-13 13:19 - INFO - ---------------------------------------------
2024-10-13 13:19 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 13:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98129
2024-10-13 13:19 - INFO - 	 Train Loss: 0.095
2024-10-13 13:19 - INFO - 	 Val. Loss: 0.077
2024-10-13 13:19 - INFO - 	 ROC-AUC: 0.981
2024-10-13 13:19 - INFO - 	 PR-AUC: 0.822
2024-10-13 13:19 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 13:19 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 13:19 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 13:19 - INFO - 	 Best PR-AUC: 0.822
2024-10-13 13:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 13:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 13:19 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 13:19 - INFO - ---------------------------------------------
2024-10-13 13:20 - INFO - ---------------------------------------------
2024-10-13 13:20 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 13:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9832
2024-10-13 13:20 - INFO - 	 Train Loss: 0.086
2024-10-13 13:20 - INFO - 	 Val. Loss: 0.073
2024-10-13 13:20 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:20 - INFO - 	 PR-AUC: 0.852
2024-10-13 13:20 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:20 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 13:20 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 13:20 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 13:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 13:20 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:20 - INFO - ---------------------------------------------
2024-10-13 13:20 - INFO - ---------------------------------------------
2024-10-13 13:20 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 13:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98525
2024-10-13 13:20 - INFO - 	 Train Loss: 0.081
2024-10-13 13:20 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:20 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:20 - INFO - 	 PR-AUC: 0.860
2024-10-13 13:20 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 13:20 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:20 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:20 - INFO - 	 Best PR-AUC: 0.860
2024-10-13 13:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-13 13:20 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:20 - INFO - ---------------------------------------------
2024-10-13 13:21 - INFO - ---------------------------------------------
2024-10-13 13:21 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 13:21 - INFO - 	 Train Loss: 0.077
2024-10-13 13:21 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:21 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:21 - INFO - 	 PR-AUC: 0.855
2024-10-13 13:21 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:21 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:21 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:21 - INFO - 	 Best PR-AUC: 0.860
2024-10-13 13:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-13 13:21 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:21 - INFO - ---------------------------------------------
2024-10-13 13:21 - INFO - ---------------------------------------------
2024-10-13 13:21 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 13:21 - INFO - 	 Train Loss: 0.075
2024-10-13 13:21 - INFO - 	 Val. Loss: 0.071
2024-10-13 13:21 - INFO - 	 ROC-AUC: 0.984
2024-10-13 13:21 - INFO - 	 PR-AUC: 0.854
2024-10-13 13:21 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 13:21 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:21 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:21 - INFO - 	 Best PR-AUC: 0.860
2024-10-13 13:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-13 13:21 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:21 - INFO - ---------------------------------------------
2024-10-13 13:22 - INFO - ---------------------------------------------
2024-10-13 13:22 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 13:22 - INFO - 	 Train Loss: 0.074
2024-10-13 13:22 - INFO - 	 Val. Loss: 0.065
2024-10-13 13:22 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:22 - INFO - 	 PR-AUC: 0.865
2024-10-13 13:22 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:22 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 13:22 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:22 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 13:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 13:22 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:22 - INFO - ---------------------------------------------
2024-10-13 13:24 - INFO - Fit the preprocessing pipeline
2024-10-13 13:24 - INFO - Training using device: cuda
2024-10-13 13:24 - INFO - Creating generators
2024-10-13 13:24 - INFO - The model has 651,257 trainable parameters
2024-10-13 13:24 - INFO - * Model:
2024-10-13 13:24 - INFO - * -----------
2024-10-13 13:24 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 13:24 - INFO - * -----------
2024-10-13 13:24 - INFO - Evaluating model based on: rocauc
2024-10-13 13:24 - INFO - Training..

2024-10-13 13:24 - INFO - ---------------------------------------------
2024-10-13 13:24 - INFO - Epoch: 01 | Time: 0m 35s
2024-10-13 13:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9748
2024-10-13 13:24 - INFO - 	 Train Loss: 0.177
2024-10-13 13:24 - INFO - 	 Val. Loss: 0.090
2024-10-13 13:24 - INFO - 	 ROC-AUC: 0.975
2024-10-13 13:24 - INFO - 	 PR-AUC: 0.764
2024-10-13 13:24 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 13:24 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 13:24 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 13:24 - INFO - 	 Best PR-AUC: 0.764
2024-10-13 13:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 13:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.724
2024-10-13 13:24 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 13:24 - INFO - ---------------------------------------------
2024-10-13 13:25 - INFO - ---------------------------------------------
2024-10-13 13:25 - INFO - Epoch: 02 | Time: 0m 44s
2024-10-13 13:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98129
2024-10-13 13:25 - INFO - 	 Train Loss: 0.094
2024-10-13 13:25 - INFO - 	 Val. Loss: 0.079
2024-10-13 13:25 - INFO - 	 ROC-AUC: 0.981
2024-10-13 13:25 - INFO - 	 PR-AUC: 0.831
2024-10-13 13:25 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 13:25 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 13:25 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 13:25 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 13:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-13 13:25 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 13:25 - INFO - ---------------------------------------------
2024-10-13 13:26 - INFO - ---------------------------------------------
2024-10-13 13:26 - INFO - Epoch: 03 | Time: 0m 44s
2024-10-13 13:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98449
2024-10-13 13:26 - INFO - 	 Train Loss: 0.083
2024-10-13 13:26 - INFO - 	 Val. Loss: 0.071
2024-10-13 13:26 - INFO - 	 ROC-AUC: 0.984
2024-10-13 13:26 - INFO - 	 PR-AUC: 0.859
2024-10-13 13:26 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:26 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 13:26 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 13:26 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 13:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 13:26 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:26 - INFO - ---------------------------------------------
2024-10-13 13:27 - INFO - ---------------------------------------------
2024-10-13 13:27 - INFO - Epoch: 04 | Time: 0m 44s
2024-10-13 13:27 - INFO - 	 Train Loss: 0.079
2024-10-13 13:27 - INFO - 	 Val. Loss: 0.073
2024-10-13 13:27 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:27 - INFO - 	 PR-AUC: 0.855
2024-10-13 13:27 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 13:27 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 13:27 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 13:27 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 13:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 13:27 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:27 - INFO - ---------------------------------------------
2024-10-13 13:27 - INFO - ---------------------------------------------
2024-10-13 13:27 - INFO - Epoch: 05 | Time: 0m 44s
2024-10-13 13:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98538
2024-10-13 13:27 - INFO - 	 Train Loss: 0.074
2024-10-13 13:27 - INFO - 	 Val. Loss: 0.069
2024-10-13 13:27 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:27 - INFO - 	 PR-AUC: 0.870
2024-10-13 13:27 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 13:27 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 13:27 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:27 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 13:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 13:27 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 13:27 - INFO - ---------------------------------------------
2024-10-13 13:28 - INFO - ---------------------------------------------
2024-10-13 13:28 - INFO - Epoch: 06 | Time: 0m 44s
2024-10-13 13:28 - INFO - 	 Train Loss: 0.074
2024-10-13 13:28 - INFO - 	 Val. Loss: 0.069
2024-10-13 13:28 - INFO - 	 ROC-AUC: 0.984
2024-10-13 13:28 - INFO - 	 PR-AUC: 0.851
2024-10-13 13:28 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 13:28 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 13:28 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:28 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 13:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 13:28 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 13:28 - INFO - ---------------------------------------------
2024-10-13 13:29 - INFO - ---------------------------------------------
2024-10-13 13:29 - INFO - Epoch: 07 | Time: 0m 44s
2024-10-13 13:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98558
2024-10-13 13:29 - INFO - 	 Train Loss: 0.071
2024-10-13 13:29 - INFO - 	 Val. Loss: 0.067
2024-10-13 13:29 - INFO - 	 ROC-AUC: 0.986
2024-10-13 13:29 - INFO - 	 PR-AUC: 0.868
2024-10-13 13:29 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 13:29 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 13:29 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 13:29 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 13:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 13:29 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 13:29 - INFO - ---------------------------------------------
2024-10-13 13:30 - INFO - ---------------------------------------------
2024-10-13 13:30 - INFO - Epoch: 08 | Time: 0m 44s
2024-10-13 13:30 - INFO - 	 Train Loss: 0.071
2024-10-13 13:30 - INFO - 	 Val. Loss: 0.065
2024-10-13 13:30 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:30 - INFO - 	 PR-AUC: 0.884
2024-10-13 13:30 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 13:30 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 13:30 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 13:30 - INFO - 	 Best PR-AUC: 0.884
2024-10-13 13:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-13 13:30 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 13:30 - INFO - ---------------------------------------------
2024-10-13 13:30 - INFO - ---------------------------------------------
2024-10-13 13:30 - INFO - Epoch: 09 | Time: 0m 44s
2024-10-13 13:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9874
2024-10-13 13:30 - INFO - 	 Train Loss: 0.068
2024-10-13 13:30 - INFO - 	 Val. Loss: 0.065
2024-10-13 13:30 - INFO - 	 ROC-AUC: 0.987
2024-10-13 13:30 - INFO - 	 PR-AUC: 0.882
2024-10-13 13:30 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 13:30 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 13:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 13:30 - INFO - 	 Best PR-AUC: 0.884
2024-10-13 13:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-13 13:30 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 13:30 - INFO - ---------------------------------------------
2024-10-13 13:31 - INFO - ---------------------------------------------
2024-10-13 13:31 - INFO - Epoch: 10 | Time: 0m 44s
2024-10-13 13:31 - INFO - 	 Train Loss: 0.069
2024-10-13 13:31 - INFO - 	 Val. Loss: 0.062
2024-10-13 13:31 - INFO - 	 ROC-AUC: 0.987
2024-10-13 13:31 - INFO - 	 PR-AUC: 0.877
2024-10-13 13:31 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 13:31 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 13:31 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 13:31 - INFO - 	 Best PR-AUC: 0.884
2024-10-13 13:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-13 13:31 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 13:31 - INFO - ---------------------------------------------
2024-10-13 13:33 - INFO - Fit the preprocessing pipeline
2024-10-13 13:33 - INFO - Training using device: cuda
2024-10-13 13:33 - INFO - Creating generators
2024-10-13 13:33 - INFO - The model has 651,257 trainable parameters
2024-10-13 13:33 - INFO - * Model:
2024-10-13 13:33 - INFO - * -----------
2024-10-13 13:33 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 13:33 - INFO - * -----------
2024-10-13 13:33 - INFO - Evaluating model based on: rocauc
2024-10-13 13:33 - INFO - Training..

2024-10-13 13:34 - INFO - ---------------------------------------------
2024-10-13 13:34 - INFO - Epoch: 01 | Time: 0m 43s
2024-10-13 13:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9704
2024-10-13 13:34 - INFO - 	 Train Loss: 0.177
2024-10-13 13:34 - INFO - 	 Val. Loss: 0.107
2024-10-13 13:34 - INFO - 	 ROC-AUC: 0.970
2024-10-13 13:34 - INFO - 	 PR-AUC: 0.753
2024-10-13 13:34 - INFO - 	 Recall for 0.4 precision: 0.941
2024-10-13 13:34 - INFO - 	 Best Val. Loss: 0.107
2024-10-13 13:34 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 13:34 - INFO - 	 Best PR-AUC: 0.753
2024-10-13 13:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 13:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.722
2024-10-13 13:34 - INFO - 	 Best Recall for 0.4 precision: 0.941
2024-10-13 13:34 - INFO - ---------------------------------------------
2024-10-13 13:35 - INFO - ---------------------------------------------
2024-10-13 13:35 - INFO - Epoch: 02 | Time: 0m 43s
2024-10-13 13:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98185
2024-10-13 13:35 - INFO - 	 Train Loss: 0.096
2024-10-13 13:35 - INFO - 	 Val. Loss: 0.085
2024-10-13 13:35 - INFO - 	 ROC-AUC: 0.982
2024-10-13 13:35 - INFO - 	 PR-AUC: 0.828
2024-10-13 13:35 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 13:35 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 13:35 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 13:35 - INFO - 	 Best PR-AUC: 0.828
2024-10-13 13:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 13:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-13 13:35 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 13:35 - INFO - ---------------------------------------------
2024-10-13 13:35 - INFO - ---------------------------------------------
2024-10-13 13:35 - INFO - Epoch: 03 | Time: 0m 34s
2024-10-13 13:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98257
2024-10-13 13:35 - INFO - 	 Train Loss: 0.087
2024-10-13 13:35 - INFO - 	 Val. Loss: 0.071
2024-10-13 13:35 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:35 - INFO - 	 PR-AUC: 0.839
2024-10-13 13:35 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 13:35 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 13:35 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 13:35 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 13:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 13:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-13 13:35 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 13:35 - INFO - ---------------------------------------------
2024-10-13 13:36 - INFO - ---------------------------------------------
2024-10-13 13:36 - INFO - Epoch: 04 | Time: 0m 34s
2024-10-13 13:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98378
2024-10-13 13:36 - INFO - 	 Train Loss: 0.080
2024-10-13 13:36 - INFO - 	 Val. Loss: 0.071
2024-10-13 13:36 - INFO - 	 ROC-AUC: 0.984
2024-10-13 13:36 - INFO - 	 PR-AUC: 0.863
2024-10-13 13:36 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 13:36 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 13:36 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 13:36 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 13:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-13 13:36 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 13:36 - INFO - ---------------------------------------------
2024-10-13 13:37 - INFO - ---------------------------------------------
2024-10-13 13:37 - INFO - Epoch: 05 | Time: 0m 45s
2024-10-13 13:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98558
2024-10-13 13:37 - INFO - 	 Train Loss: 0.075
2024-10-13 13:37 - INFO - 	 Val. Loss: 0.066
2024-10-13 13:37 - INFO - 	 ROC-AUC: 0.986
2024-10-13 13:37 - INFO - 	 PR-AUC: 0.869
2024-10-13 13:37 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 13:37 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 13:37 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 13:37 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 13:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 13:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 13:37 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 13:37 - INFO - ---------------------------------------------
2024-10-13 13:38 - INFO - ---------------------------------------------
2024-10-13 13:38 - INFO - Epoch: 06 | Time: 0m 45s
2024-10-13 13:38 - INFO - 	 Train Loss: 0.073
2024-10-13 13:38 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:38 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:38 - INFO - 	 PR-AUC: 0.862
2024-10-13 13:38 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 13:38 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 13:38 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 13:38 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 13:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 13:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 13:38 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:38 - INFO - ---------------------------------------------
2024-10-13 13:38 - INFO - ---------------------------------------------
2024-10-13 13:38 - INFO - Epoch: 07 | Time: 0m 45s
2024-10-13 13:38 - INFO - 	 Train Loss: 0.072
2024-10-13 13:38 - INFO - 	 Val. Loss: 0.066
2024-10-13 13:38 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:38 - INFO - 	 PR-AUC: 0.862
2024-10-13 13:38 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 13:38 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 13:38 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 13:38 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 13:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 13:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 13:38 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:38 - INFO - ---------------------------------------------
2024-10-13 13:39 - INFO - ---------------------------------------------
2024-10-13 13:39 - INFO - Epoch: 08 | Time: 0m 45s
2024-10-13 13:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98629
2024-10-13 13:39 - INFO - 	 Train Loss: 0.070
2024-10-13 13:39 - INFO - 	 Val. Loss: 0.063
2024-10-13 13:39 - INFO - 	 ROC-AUC: 0.986
2024-10-13 13:39 - INFO - 	 PR-AUC: 0.879
2024-10-13 13:39 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 13:39 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 13:39 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 13:39 - INFO - 	 Best PR-AUC: 0.879
2024-10-13 13:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 13:39 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:39 - INFO - ---------------------------------------------
2024-10-13 13:40 - INFO - ---------------------------------------------
2024-10-13 13:40 - INFO - Epoch: 09 | Time: 0m 44s
2024-10-13 13:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98653
2024-10-13 13:40 - INFO - 	 Train Loss: 0.070
2024-10-13 13:40 - INFO - 	 Val. Loss: 0.064
2024-10-13 13:40 - INFO - 	 ROC-AUC: 0.987
2024-10-13 13:40 - INFO - 	 PR-AUC: 0.877
2024-10-13 13:40 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 13:40 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 13:40 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 13:40 - INFO - 	 Best PR-AUC: 0.879
2024-10-13 13:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 13:40 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:40 - INFO - ---------------------------------------------
2024-10-13 13:41 - INFO - ---------------------------------------------
2024-10-13 13:41 - INFO - Epoch: 10 | Time: 0m 44s
2024-10-13 13:41 - INFO - 	 Train Loss: 0.067
2024-10-13 13:41 - INFO - 	 Val. Loss: 0.065
2024-10-13 13:41 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:41 - INFO - 	 PR-AUC: 0.871
2024-10-13 13:41 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 13:41 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 13:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 13:41 - INFO - 	 Best PR-AUC: 0.879
2024-10-13 13:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 13:41 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 13:41 - INFO - ---------------------------------------------
2024-10-13 13:43 - INFO - Fit the preprocessing pipeline
2024-10-13 13:43 - INFO - Training using device: cuda
2024-10-13 13:43 - INFO - Creating generators
2024-10-13 13:43 - INFO - The model has 651,257 trainable parameters
2024-10-13 13:43 - INFO - * Model:
2024-10-13 13:43 - INFO - * -----------
2024-10-13 13:43 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 13:43 - INFO - * -----------
2024-10-13 13:43 - INFO - Evaluating model based on: rocauc
2024-10-13 13:43 - INFO - Training..

2024-10-13 13:44 - INFO - ---------------------------------------------
2024-10-13 13:44 - INFO - Epoch: 01 | Time: 0m 44s
2024-10-13 13:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97008
2024-10-13 13:44 - INFO - 	 Train Loss: 0.173
2024-10-13 13:44 - INFO - 	 Val. Loss: 0.105
2024-10-13 13:44 - INFO - 	 ROC-AUC: 0.970
2024-10-13 13:44 - INFO - 	 PR-AUC: 0.733
2024-10-13 13:44 - INFO - 	 Recall for 0.4 precision: 0.933
2024-10-13 13:44 - INFO - 	 Best Val. Loss: 0.105
2024-10-13 13:44 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 13:44 - INFO - 	 Best PR-AUC: 0.733
2024-10-13 13:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 13:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.726
2024-10-13 13:44 - INFO - 	 Best Recall for 0.4 precision: 0.933
2024-10-13 13:44 - INFO - ---------------------------------------------
2024-10-13 13:44 - INFO - ---------------------------------------------
2024-10-13 13:44 - INFO - Epoch: 02 | Time: 0m 44s
2024-10-13 13:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97941
2024-10-13 13:44 - INFO - 	 Train Loss: 0.096
2024-10-13 13:44 - INFO - 	 Val. Loss: 0.085
2024-10-13 13:44 - INFO - 	 ROC-AUC: 0.979
2024-10-13 13:44 - INFO - 	 PR-AUC: 0.783
2024-10-13 13:44 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 13:44 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 13:44 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 13:44 - INFO - 	 Best PR-AUC: 0.783
2024-10-13 13:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 13:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.770
2024-10-13 13:44 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 13:44 - INFO - ---------------------------------------------
2024-10-13 13:45 - INFO - ---------------------------------------------
2024-10-13 13:45 - INFO - Epoch: 03 | Time: 0m 44s
2024-10-13 13:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98296
2024-10-13 13:45 - INFO - 	 Train Loss: 0.086
2024-10-13 13:45 - INFO - 	 Val. Loss: 0.075
2024-10-13 13:45 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:45 - INFO - 	 PR-AUC: 0.833
2024-10-13 13:45 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:45 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 13:45 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 13:45 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 13:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 13:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-13 13:45 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:45 - INFO - ---------------------------------------------
2024-10-13 13:46 - INFO - ---------------------------------------------
2024-10-13 13:46 - INFO - Epoch: 04 | Time: 0m 44s
2024-10-13 13:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98304
2024-10-13 13:46 - INFO - 	 Train Loss: 0.082
2024-10-13 13:46 - INFO - 	 Val. Loss: 0.078
2024-10-13 13:46 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:46 - INFO - 	 PR-AUC: 0.844
2024-10-13 13:46 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 13:46 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 13:46 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 13:46 - INFO - 	 Best PR-AUC: 0.844
2024-10-13 13:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 13:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-13 13:46 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:46 - INFO - ---------------------------------------------
2024-10-13 13:47 - INFO - ---------------------------------------------
2024-10-13 13:47 - INFO - Epoch: 05 | Time: 0m 41s
2024-10-13 13:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98521
2024-10-13 13:47 - INFO - 	 Train Loss: 0.077
2024-10-13 13:47 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:47 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:47 - INFO - 	 PR-AUC: 0.844
2024-10-13 13:47 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 13:47 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:47 - INFO - 	 Best PR-AUC: 0.844
2024-10-13 13:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 13:47 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 13:47 - INFO - ---------------------------------------------
2024-10-13 13:47 - INFO - ---------------------------------------------
2024-10-13 13:47 - INFO - Epoch: 06 | Time: 0m 34s
2024-10-13 13:47 - INFO - 	 Train Loss: 0.074
2024-10-13 13:47 - INFO - 	 Val. Loss: 0.069
2024-10-13 13:47 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:47 - INFO - 	 PR-AUC: 0.855
2024-10-13 13:47 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:47 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:47 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 13:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-13 13:47 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 13:47 - INFO - ---------------------------------------------
2024-10-13 13:48 - INFO - ---------------------------------------------
2024-10-13 13:48 - INFO - Epoch: 07 | Time: 0m 34s
2024-10-13 13:48 - INFO - 	 Train Loss: 0.073
2024-10-13 13:48 - INFO - 	 Val. Loss: 0.067
2024-10-13 13:48 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:48 - INFO - 	 PR-AUC: 0.866
2024-10-13 13:48 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 13:48 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 13:48 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:48 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 13:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 13:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 13:48 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 13:48 - INFO - ---------------------------------------------
2024-10-13 13:48 - INFO - ---------------------------------------------
2024-10-13 13:48 - INFO - Epoch: 08 | Time: 0m 35s
2024-10-13 13:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98536
2024-10-13 13:48 - INFO - 	 Train Loss: 0.071
2024-10-13 13:48 - INFO - 	 Val. Loss: 0.065
2024-10-13 13:48 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:48 - INFO - 	 PR-AUC: 0.865
2024-10-13 13:48 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 13:48 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 13:48 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:48 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 13:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 13:48 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 13:48 - INFO - ---------------------------------------------
2024-10-13 13:49 - INFO - ---------------------------------------------
2024-10-13 13:49 - INFO - Epoch: 09 | Time: 0m 35s
2024-10-13 13:49 - INFO - 	 Train Loss: 0.071
2024-10-13 13:49 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:49 - INFO - 	 ROC-AUC: 0.984
2024-10-13 13:49 - INFO - 	 PR-AUC: 0.858
2024-10-13 13:49 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:49 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 13:49 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:49 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 13:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 13:49 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 13:49 - INFO - ---------------------------------------------
2024-10-13 13:49 - INFO - ---------------------------------------------
2024-10-13 13:49 - INFO - Epoch: 10 | Time: 0m 35s
2024-10-13 13:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98571
2024-10-13 13:49 - INFO - 	 Train Loss: 0.069
2024-10-13 13:49 - INFO - 	 Val. Loss: 0.067
2024-10-13 13:49 - INFO - 	 ROC-AUC: 0.986
2024-10-13 13:49 - INFO - 	 PR-AUC: 0.856
2024-10-13 13:49 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 13:49 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 13:49 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 13:49 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 13:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 13:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 13:49 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 13:49 - INFO - ---------------------------------------------
2024-10-13 13:51 - INFO - Fit the preprocessing pipeline
2024-10-13 13:51 - INFO - Training using device: cuda
2024-10-13 13:51 - INFO - Creating generators
2024-10-13 13:51 - INFO - The model has 651,257 trainable parameters
2024-10-13 13:51 - INFO - * Model:
2024-10-13 13:51 - INFO - * -----------
2024-10-13 13:51 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 13:51 - INFO - * -----------
2024-10-13 13:51 - INFO - Evaluating model based on: rocauc
2024-10-13 13:51 - INFO - Training..

2024-10-13 13:52 - INFO - ---------------------------------------------
2024-10-13 13:52 - INFO - Epoch: 01 | Time: 0m 37s
2024-10-13 13:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96916
2024-10-13 13:52 - INFO - 	 Train Loss: 0.183
2024-10-13 13:52 - INFO - 	 Val. Loss: 0.104
2024-10-13 13:52 - INFO - 	 ROC-AUC: 0.969
2024-10-13 13:52 - INFO - 	 PR-AUC: 0.716
2024-10-13 13:52 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-13 13:52 - INFO - 	 Best Val. Loss: 0.104
2024-10-13 13:52 - INFO - 	 Best ROC-AUC: 0.969
2024-10-13 13:52 - INFO - 	 Best PR-AUC: 0.716
2024-10-13 13:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-13 13:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.707
2024-10-13 13:52 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-13 13:52 - INFO - ---------------------------------------------
2024-10-13 13:52 - INFO - ---------------------------------------------
2024-10-13 13:52 - INFO - Epoch: 02 | Time: 0m 35s
2024-10-13 13:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97994
2024-10-13 13:52 - INFO - 	 Train Loss: 0.095
2024-10-13 13:52 - INFO - 	 Val. Loss: 0.083
2024-10-13 13:52 - INFO - 	 ROC-AUC: 0.980
2024-10-13 13:52 - INFO - 	 PR-AUC: 0.794
2024-10-13 13:52 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 13:52 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 13:52 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 13:52 - INFO - 	 Best PR-AUC: 0.794
2024-10-13 13:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 13:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-13 13:52 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 13:52 - INFO - ---------------------------------------------
2024-10-13 13:53 - INFO - ---------------------------------------------
2024-10-13 13:53 - INFO - Epoch: 03 | Time: 0m 37s
2024-10-13 13:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98038
2024-10-13 13:53 - INFO - 	 Train Loss: 0.085
2024-10-13 13:53 - INFO - 	 Val. Loss: 0.092
2024-10-13 13:53 - INFO - 	 ROC-AUC: 0.980
2024-10-13 13:53 - INFO - 	 PR-AUC: 0.817
2024-10-13 13:53 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 13:53 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 13:53 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 13:53 - INFO - 	 Best PR-AUC: 0.817
2024-10-13 13:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 13:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-13 13:53 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 13:53 - INFO - ---------------------------------------------
2024-10-13 13:54 - INFO - ---------------------------------------------
2024-10-13 13:54 - INFO - Epoch: 04 | Time: 0m 36s
2024-10-13 13:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98314
2024-10-13 13:54 - INFO - 	 Train Loss: 0.080
2024-10-13 13:54 - INFO - 	 Val. Loss: 0.076
2024-10-13 13:54 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:54 - INFO - 	 PR-AUC: 0.843
2024-10-13 13:54 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:54 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 13:54 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 13:54 - INFO - 	 Best PR-AUC: 0.843
2024-10-13 13:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 13:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 13:54 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 13:54 - INFO - ---------------------------------------------
2024-10-13 13:54 - INFO - ---------------------------------------------
2024-10-13 13:54 - INFO - Epoch: 05 | Time: 0m 34s
2024-10-13 13:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98502
2024-10-13 13:54 - INFO - 	 Train Loss: 0.077
2024-10-13 13:54 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:54 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:54 - INFO - 	 PR-AUC: 0.849
2024-10-13 13:54 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 13:54 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:54 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:54 - INFO - 	 Best PR-AUC: 0.849
2024-10-13 13:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 13:54 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 13:54 - INFO - ---------------------------------------------
2024-10-13 13:55 - INFO - ---------------------------------------------
2024-10-13 13:55 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-13 13:55 - INFO - 	 Train Loss: 0.075
2024-10-13 13:55 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:55 - INFO - 	 ROC-AUC: 0.984
2024-10-13 13:55 - INFO - 	 PR-AUC: 0.862
2024-10-13 13:55 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 13:55 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:55 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:55 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 13:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-13 13:55 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 13:55 - INFO - ---------------------------------------------
2024-10-13 13:55 - INFO - ---------------------------------------------
2024-10-13 13:55 - INFO - Epoch: 07 | Time: 0m 34s
2024-10-13 13:55 - INFO - 	 Train Loss: 0.072
2024-10-13 13:55 - INFO - 	 Val. Loss: 0.073
2024-10-13 13:55 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:55 - INFO - 	 PR-AUC: 0.855
2024-10-13 13:55 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:55 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:55 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:55 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 13:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-13 13:55 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 13:55 - INFO - ---------------------------------------------
2024-10-13 13:56 - INFO - ---------------------------------------------
2024-10-13 13:56 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 13:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98531
2024-10-13 13:56 - INFO - 	 Train Loss: 0.071
2024-10-13 13:56 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:56 - INFO - 	 ROC-AUC: 0.985
2024-10-13 13:56 - INFO - 	 PR-AUC: 0.865
2024-10-13 13:56 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 13:56 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:56 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:56 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 13:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 13:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 13:56 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:56 - INFO - ---------------------------------------------
2024-10-13 13:56 - INFO - ---------------------------------------------
2024-10-13 13:56 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 13:56 - INFO - 	 Train Loss: 0.071
2024-10-13 13:56 - INFO - 	 Val. Loss: 0.068
2024-10-13 13:56 - INFO - 	 ROC-AUC: 0.983
2024-10-13 13:56 - INFO - 	 PR-AUC: 0.867
2024-10-13 13:56 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:56 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 13:56 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 13:56 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 13:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 13:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 13:56 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:56 - INFO - ---------------------------------------------
2024-10-13 13:57 - INFO - ---------------------------------------------
2024-10-13 13:57 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 13:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98712
2024-10-13 13:57 - INFO - 	 Train Loss: 0.069
2024-10-13 13:57 - INFO - 	 Val. Loss: 0.063
2024-10-13 13:57 - INFO - 	 ROC-AUC: 0.987
2024-10-13 13:57 - INFO - 	 PR-AUC: 0.882
2024-10-13 13:57 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 13:57 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 13:57 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 13:57 - INFO - 	 Best PR-AUC: 0.882
2024-10-13 13:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 13:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-13 13:57 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 13:57 - INFO - ---------------------------------------------
2024-10-13 13:58 - INFO - Fit the preprocessing pipeline
2024-10-13 13:58 - INFO - Training using device: cuda
2024-10-13 13:58 - INFO - Creating generators
2024-10-13 13:58 - INFO - The model has 651,257 trainable parameters
2024-10-13 13:58 - INFO - * Model:
2024-10-13 13:58 - INFO - * -----------
2024-10-13 13:58 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 13:58 - INFO - * -----------
2024-10-13 13:58 - INFO - Evaluating model based on: rocauc
2024-10-13 13:58 - INFO - Training..

2024-10-13 13:59 - INFO - ---------------------------------------------
2024-10-13 13:59 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 13:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97075
2024-10-13 13:59 - INFO - 	 Train Loss: 0.182
2024-10-13 13:59 - INFO - 	 Val. Loss: 0.099
2024-10-13 13:59 - INFO - 	 ROC-AUC: 0.971
2024-10-13 13:59 - INFO - 	 PR-AUC: 0.711
2024-10-13 13:59 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 13:59 - INFO - 	 Best Val. Loss: 0.099
2024-10-13 13:59 - INFO - 	 Best ROC-AUC: 0.971
2024-10-13 13:59 - INFO - 	 Best PR-AUC: 0.711
2024-10-13 13:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 13:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.736
2024-10-13 13:59 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-13 13:59 - INFO - ---------------------------------------------
2024-10-13 14:00 - INFO - ---------------------------------------------
2024-10-13 14:00 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 14:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98183
2024-10-13 14:00 - INFO - 	 Train Loss: 0.098
2024-10-13 14:00 - INFO - 	 Val. Loss: 0.076
2024-10-13 14:00 - INFO - 	 ROC-AUC: 0.982
2024-10-13 14:00 - INFO - 	 PR-AUC: 0.836
2024-10-13 14:00 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 14:00 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 14:00 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 14:00 - INFO - 	 Best PR-AUC: 0.836
2024-10-13 14:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 14:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-13 14:00 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 14:00 - INFO - ---------------------------------------------
2024-10-13 14:00 - INFO - ---------------------------------------------
2024-10-13 14:00 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 14:00 - INFO - 	 Train Loss: 0.086
2024-10-13 14:00 - INFO - 	 Val. Loss: 0.080
2024-10-13 14:00 - INFO - 	 ROC-AUC: 0.980
2024-10-13 14:00 - INFO - 	 PR-AUC: 0.825
2024-10-13 14:00 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 14:00 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 14:00 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 14:00 - INFO - 	 Best PR-AUC: 0.836
2024-10-13 14:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 14:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-13 14:00 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 14:00 - INFO - ---------------------------------------------
2024-10-13 14:01 - INFO - ---------------------------------------------
2024-10-13 14:01 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 14:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9839
2024-10-13 14:01 - INFO - 	 Train Loss: 0.078
2024-10-13 14:01 - INFO - 	 Val. Loss: 0.077
2024-10-13 14:01 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:01 - INFO - 	 PR-AUC: 0.856
2024-10-13 14:01 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 14:01 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 14:01 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:01 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 14:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 14:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-13 14:01 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 14:01 - INFO - ---------------------------------------------
2024-10-13 14:01 - INFO - ---------------------------------------------
2024-10-13 14:01 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 14:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98448
2024-10-13 14:01 - INFO - 	 Train Loss: 0.077
2024-10-13 14:01 - INFO - 	 Val. Loss: 0.069
2024-10-13 14:01 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:01 - INFO - 	 PR-AUC: 0.857
2024-10-13 14:01 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:01 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 14:01 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:01 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 14:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 14:01 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:01 - INFO - ---------------------------------------------
2024-10-13 14:02 - INFO - ---------------------------------------------
2024-10-13 14:02 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-13 14:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98452
2024-10-13 14:02 - INFO - 	 Train Loss: 0.074
2024-10-13 14:02 - INFO - 	 Val. Loss: 0.071
2024-10-13 14:02 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:02 - INFO - 	 PR-AUC: 0.869
2024-10-13 14:02 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 14:02 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 14:02 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:02 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 14:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 14:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 14:02 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:02 - INFO - ---------------------------------------------
2024-10-13 14:02 - INFO - ---------------------------------------------
2024-10-13 14:02 - INFO - Epoch: 07 | Time: 0m 38s
2024-10-13 14:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98648
2024-10-13 14:02 - INFO - 	 Train Loss: 0.072
2024-10-13 14:02 - INFO - 	 Val. Loss: 0.066
2024-10-13 14:02 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:02 - INFO - 	 PR-AUC: 0.874
2024-10-13 14:02 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:02 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 14:02 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:02 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 14:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 14:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 14:02 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:02 - INFO - ---------------------------------------------
2024-10-13 14:03 - INFO - ---------------------------------------------
2024-10-13 14:03 - INFO - Epoch: 08 | Time: 0m 44s
2024-10-13 14:03 - INFO - 	 Train Loss: 0.071
2024-10-13 14:03 - INFO - 	 Val. Loss: 0.070
2024-10-13 14:03 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:03 - INFO - 	 PR-AUC: 0.864
2024-10-13 14:03 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 14:03 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 14:03 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:03 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 14:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 14:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 14:03 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:03 - INFO - ---------------------------------------------
2024-10-13 14:04 - INFO - ---------------------------------------------
2024-10-13 14:04 - INFO - Epoch: 09 | Time: 0m 44s
2024-10-13 14:04 - INFO - 	 Train Loss: 0.069
2024-10-13 14:04 - INFO - 	 Val. Loss: 0.066
2024-10-13 14:04 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:04 - INFO - 	 PR-AUC: 0.865
2024-10-13 14:04 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 14:04 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 14:04 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:04 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 14:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 14:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 14:04 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 14:04 - INFO - ---------------------------------------------
2024-10-13 14:05 - INFO - ---------------------------------------------
2024-10-13 14:05 - INFO - Epoch: 10 | Time: 0m 44s
2024-10-13 14:05 - INFO - 	 Train Loss: 0.069
2024-10-13 14:05 - INFO - 	 Val. Loss: 0.065
2024-10-13 14:05 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:05 - INFO - 	 PR-AUC: 0.872
2024-10-13 14:05 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:05 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 14:05 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:05 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 14:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 14:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 14:05 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 14:05 - INFO - ---------------------------------------------
2024-10-13 14:07 - INFO - Fit the preprocessing pipeline
2024-10-13 14:07 - INFO - Training using device: cuda
2024-10-13 14:07 - INFO - Creating generators
2024-10-13 14:07 - INFO - The model has 651,257 trainable parameters
2024-10-13 14:07 - INFO - * Model:
2024-10-13 14:07 - INFO - * -----------
2024-10-13 14:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 14:07 - INFO - * -----------
2024-10-13 14:07 - INFO - Evaluating model based on: rocauc
2024-10-13 14:07 - INFO - Training..

2024-10-13 14:08 - INFO - ---------------------------------------------
2024-10-13 14:08 - INFO - Epoch: 01 | Time: 0m 44s
2024-10-13 14:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97382
2024-10-13 14:08 - INFO - 	 Train Loss: 0.173
2024-10-13 14:08 - INFO - 	 Val. Loss: 0.094
2024-10-13 14:08 - INFO - 	 ROC-AUC: 0.974
2024-10-13 14:08 - INFO - 	 PR-AUC: 0.768
2024-10-13 14:08 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 14:08 - INFO - 	 Best Val. Loss: 0.094
2024-10-13 14:08 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 14:08 - INFO - 	 Best PR-AUC: 0.768
2024-10-13 14:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 14:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.729
2024-10-13 14:08 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 14:08 - INFO - ---------------------------------------------
2024-10-13 14:08 - INFO - ---------------------------------------------
2024-10-13 14:08 - INFO - Epoch: 02 | Time: 0m 44s
2024-10-13 14:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98033
2024-10-13 14:08 - INFO - 	 Train Loss: 0.096
2024-10-13 14:08 - INFO - 	 Val. Loss: 0.079
2024-10-13 14:08 - INFO - 	 ROC-AUC: 0.980
2024-10-13 14:08 - INFO - 	 PR-AUC: 0.827
2024-10-13 14:08 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 14:08 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 14:08 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 14:08 - INFO - 	 Best PR-AUC: 0.827
2024-10-13 14:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 14:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-13 14:08 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 14:08 - INFO - ---------------------------------------------
2024-10-13 14:09 - INFO - ---------------------------------------------
2024-10-13 14:09 - INFO - Epoch: 03 | Time: 0m 44s
2024-10-13 14:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.984
2024-10-13 14:09 - INFO - 	 Train Loss: 0.085
2024-10-13 14:09 - INFO - 	 Val. Loss: 0.070
2024-10-13 14:09 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:09 - INFO - 	 PR-AUC: 0.853
2024-10-13 14:09 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 14:09 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 14:09 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:09 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 14:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 14:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-13 14:09 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 14:09 - INFO - ---------------------------------------------
2024-10-13 14:10 - INFO - ---------------------------------------------
2024-10-13 14:10 - INFO - Epoch: 04 | Time: 0m 44s
2024-10-13 14:10 - INFO - 	 Train Loss: 0.080
2024-10-13 14:10 - INFO - 	 Val. Loss: 0.068
2024-10-13 14:10 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:10 - INFO - 	 PR-AUC: 0.857
2024-10-13 14:10 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 14:10 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 14:10 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:10 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 14:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 14:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 14:10 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 14:10 - INFO - ---------------------------------------------
2024-10-13 14:11 - INFO - ---------------------------------------------
2024-10-13 14:11 - INFO - Epoch: 05 | Time: 0m 44s
2024-10-13 14:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98539
2024-10-13 14:11 - INFO - 	 Train Loss: 0.077
2024-10-13 14:11 - INFO - 	 Val. Loss: 0.067
2024-10-13 14:11 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:11 - INFO - 	 PR-AUC: 0.867
2024-10-13 14:11 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 14:11 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 14:11 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:11 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 14:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-13 14:11 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:11 - INFO - ---------------------------------------------
2024-10-13 14:11 - INFO - ---------------------------------------------
2024-10-13 14:11 - INFO - Epoch: 06 | Time: 0m 43s
2024-10-13 14:11 - INFO - 	 Train Loss: 0.074
2024-10-13 14:11 - INFO - 	 Val. Loss: 0.068
2024-10-13 14:11 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:11 - INFO - 	 PR-AUC: 0.863
2024-10-13 14:11 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 14:11 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 14:11 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:11 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 14:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-13 14:11 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:11 - INFO - ---------------------------------------------
2024-10-13 14:12 - INFO - ---------------------------------------------
2024-10-13 14:12 - INFO - Epoch: 07 | Time: 0m 43s
2024-10-13 14:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98603
2024-10-13 14:12 - INFO - 	 Train Loss: 0.073
2024-10-13 14:12 - INFO - 	 Val. Loss: 0.065
2024-10-13 14:12 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:12 - INFO - 	 PR-AUC: 0.864
2024-10-13 14:12 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:12 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 14:12 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:12 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 14:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-13 14:12 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:12 - INFO - ---------------------------------------------
2024-10-13 14:13 - INFO - ---------------------------------------------
2024-10-13 14:13 - INFO - Epoch: 08 | Time: 0m 41s
2024-10-13 14:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98608
2024-10-13 14:13 - INFO - 	 Train Loss: 0.071
2024-10-13 14:13 - INFO - 	 Val. Loss: 0.064
2024-10-13 14:13 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:13 - INFO - 	 PR-AUC: 0.872
2024-10-13 14:13 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:13 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 14:13 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:13 - INFO - 	 Best PR-AUC: 0.872
2024-10-13 14:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 14:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 14:13 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:13 - INFO - ---------------------------------------------
2024-10-13 14:13 - INFO - ---------------------------------------------
2024-10-13 14:13 - INFO - Epoch: 09 | Time: 0m 34s
2024-10-13 14:13 - INFO - 	 Train Loss: 0.070
2024-10-13 14:13 - INFO - 	 Val. Loss: 0.066
2024-10-13 14:13 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:13 - INFO - 	 PR-AUC: 0.865
2024-10-13 14:13 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 14:13 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 14:13 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:13 - INFO - 	 Best PR-AUC: 0.872
2024-10-13 14:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 14:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 14:13 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 14:13 - INFO - ---------------------------------------------
2024-10-13 14:14 - INFO - ---------------------------------------------
2024-10-13 14:14 - INFO - Epoch: 10 | Time: 0m 40s
2024-10-13 14:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98686
2024-10-13 14:14 - INFO - 	 Train Loss: 0.068
2024-10-13 14:14 - INFO - 	 Val. Loss: 0.066
2024-10-13 14:14 - INFO - 	 ROC-AUC: 0.987
2024-10-13 14:14 - INFO - 	 PR-AUC: 0.875
2024-10-13 14:14 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 14:14 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 14:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 14:14 - INFO - 	 Best PR-AUC: 0.875
2024-10-13 14:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-13 14:14 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 14:14 - INFO - ---------------------------------------------
2024-10-13 14:16 - INFO - Fit the preprocessing pipeline
2024-10-13 14:16 - INFO - Training using device: cuda
2024-10-13 14:16 - INFO - Creating generators
2024-10-13 14:16 - INFO - The model has 651,257 trainable parameters
2024-10-13 14:16 - INFO - * Model:
2024-10-13 14:16 - INFO - * -----------
2024-10-13 14:16 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 14:16 - INFO - * -----------
2024-10-13 14:16 - INFO - Evaluating model based on: rocauc
2024-10-13 14:16 - INFO - Training..

2024-10-13 14:17 - INFO - ---------------------------------------------
2024-10-13 14:17 - INFO - Epoch: 01 | Time: 0m 44s
2024-10-13 14:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97328
2024-10-13 14:17 - INFO - 	 Train Loss: 0.171
2024-10-13 14:17 - INFO - 	 Val. Loss: 0.099
2024-10-13 14:17 - INFO - 	 ROC-AUC: 0.973
2024-10-13 14:17 - INFO - 	 PR-AUC: 0.770
2024-10-13 14:17 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-13 14:17 - INFO - 	 Best Val. Loss: 0.099
2024-10-13 14:17 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 14:17 - INFO - 	 Best PR-AUC: 0.770
2024-10-13 14:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 14:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.746
2024-10-13 14:17 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-13 14:17 - INFO - ---------------------------------------------
2024-10-13 14:18 - INFO - ---------------------------------------------
2024-10-13 14:18 - INFO - Epoch: 02 | Time: 0m 44s
2024-10-13 14:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97955
2024-10-13 14:18 - INFO - 	 Train Loss: 0.095
2024-10-13 14:18 - INFO - 	 Val. Loss: 0.085
2024-10-13 14:18 - INFO - 	 ROC-AUC: 0.980
2024-10-13 14:18 - INFO - 	 PR-AUC: 0.823
2024-10-13 14:18 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 14:18 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 14:18 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 14:18 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 14:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 14:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-10-13 14:18 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 14:18 - INFO - ---------------------------------------------
2024-10-13 14:18 - INFO - ---------------------------------------------
2024-10-13 14:18 - INFO - Epoch: 03 | Time: 0m 44s
2024-10-13 14:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98261
2024-10-13 14:18 - INFO - 	 Train Loss: 0.084
2024-10-13 14:18 - INFO - 	 Val. Loss: 0.074
2024-10-13 14:18 - INFO - 	 ROC-AUC: 0.983
2024-10-13 14:18 - INFO - 	 PR-AUC: 0.826
2024-10-13 14:18 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:18 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 14:18 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 14:18 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 14:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 14:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-13 14:18 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:18 - INFO - ---------------------------------------------
2024-10-13 14:19 - INFO - ---------------------------------------------
2024-10-13 14:19 - INFO - Epoch: 04 | Time: 0m 44s
2024-10-13 14:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98403
2024-10-13 14:19 - INFO - 	 Train Loss: 0.080
2024-10-13 14:19 - INFO - 	 Val. Loss: 0.070
2024-10-13 14:19 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:19 - INFO - 	 PR-AUC: 0.849
2024-10-13 14:19 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 14:19 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 14:19 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:19 - INFO - 	 Best PR-AUC: 0.849
2024-10-13 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-13 14:19 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:19 - INFO - ---------------------------------------------
2024-10-13 14:20 - INFO - ---------------------------------------------
2024-10-13 14:20 - INFO - Epoch: 05 | Time: 0m 44s
2024-10-13 14:20 - INFO - 	 Train Loss: 0.077
2024-10-13 14:20 - INFO - 	 Val. Loss: 0.073
2024-10-13 14:20 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:20 - INFO - 	 PR-AUC: 0.852
2024-10-13 14:20 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 14:20 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 14:20 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:20 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 14:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 14:20 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:20 - INFO - ---------------------------------------------
2024-10-13 14:21 - INFO - ---------------------------------------------
2024-10-13 14:21 - INFO - Epoch: 06 | Time: 0m 44s
2024-10-13 14:21 - INFO - 	 Train Loss: 0.074
2024-10-13 14:21 - INFO - 	 Val. Loss: 0.068
2024-10-13 14:21 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:21 - INFO - 	 PR-AUC: 0.855
2024-10-13 14:21 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:21 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 14:21 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:21 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 14:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-13 14:21 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:21 - INFO - ---------------------------------------------
2024-10-13 14:21 - INFO - ---------------------------------------------
2024-10-13 14:21 - INFO - Epoch: 07 | Time: 0m 44s
2024-10-13 14:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98557
2024-10-13 14:21 - INFO - 	 Train Loss: 0.073
2024-10-13 14:21 - INFO - 	 Val. Loss: 0.065
2024-10-13 14:21 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:21 - INFO - 	 PR-AUC: 0.873
2024-10-13 14:21 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 14:21 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 14:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:21 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 14:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 14:21 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:21 - INFO - ---------------------------------------------
2024-10-13 14:22 - INFO - ---------------------------------------------
2024-10-13 14:22 - INFO - Epoch: 08 | Time: 0m 44s
2024-10-13 14:22 - INFO - 	 Train Loss: 0.071
2024-10-13 14:22 - INFO - 	 Val. Loss: 0.065
2024-10-13 14:22 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:22 - INFO - 	 PR-AUC: 0.877
2024-10-13 14:22 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:22 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 14:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:22 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 14:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-13 14:22 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:22 - INFO - ---------------------------------------------
2024-10-13 14:23 - INFO - ---------------------------------------------
2024-10-13 14:23 - INFO - Epoch: 09 | Time: 0m 43s
2024-10-13 14:23 - INFO - 	 Train Loss: 0.069
2024-10-13 14:23 - INFO - 	 Val. Loss: 0.079
2024-10-13 14:23 - INFO - 	 ROC-AUC: 0.979
2024-10-13 14:23 - INFO - 	 PR-AUC: 0.843
2024-10-13 14:23 - INFO - 	 Recall for 0.4 precision: 0.956
2024-10-13 14:23 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 14:23 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:23 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 14:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-13 14:23 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:23 - INFO - ---------------------------------------------
2024-10-13 14:24 - INFO - ---------------------------------------------
2024-10-13 14:24 - INFO - Epoch: 10 | Time: 0m 43s
2024-10-13 14:24 - INFO - 	 Train Loss: 0.069
2024-10-13 14:24 - INFO - 	 Val. Loss: 0.066
2024-10-13 14:24 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:24 - INFO - 	 PR-AUC: 0.867
2024-10-13 14:24 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:24 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 14:24 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:24 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-13 14:24 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:24 - INFO - ---------------------------------------------
2024-10-13 14:25 - INFO - Fit the preprocessing pipeline
2024-10-13 14:25 - INFO - Training using device: cuda
2024-10-13 14:25 - INFO - Creating generators
2024-10-13 14:25 - INFO - The model has 651,257 trainable parameters
2024-10-13 14:25 - INFO - * Model:
2024-10-13 14:25 - INFO - * -----------
2024-10-13 14:25 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 14:25 - INFO - * -----------
2024-10-13 14:25 - INFO - Evaluating model based on: rocauc
2024-10-13 14:25 - INFO - Training..

2024-10-13 14:26 - INFO - ---------------------------------------------
2024-10-13 14:26 - INFO - Epoch: 01 | Time: 0m 34s
2024-10-13 14:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9727
2024-10-13 14:26 - INFO - 	 Train Loss: 0.178
2024-10-13 14:26 - INFO - 	 Val. Loss: 0.093
2024-10-13 14:26 - INFO - 	 ROC-AUC: 0.973
2024-10-13 14:26 - INFO - 	 PR-AUC: 0.756
2024-10-13 14:26 - INFO - 	 Recall for 0.4 precision: 0.947
2024-10-13 14:26 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 14:26 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 14:26 - INFO - 	 Best PR-AUC: 0.756
2024-10-13 14:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 14:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.730
2024-10-13 14:26 - INFO - 	 Best Recall for 0.4 precision: 0.947
2024-10-13 14:26 - INFO - ---------------------------------------------
2024-10-13 14:26 - INFO - ---------------------------------------------
2024-10-13 14:26 - INFO - Epoch: 02 | Time: 0m 35s
2024-10-13 14:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97891
2024-10-13 14:26 - INFO - 	 Train Loss: 0.095
2024-10-13 14:26 - INFO - 	 Val. Loss: 0.100
2024-10-13 14:26 - INFO - 	 ROC-AUC: 0.979
2024-10-13 14:26 - INFO - 	 PR-AUC: 0.801
2024-10-13 14:26 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 14:26 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 14:26 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 14:26 - INFO - 	 Best PR-AUC: 0.801
2024-10-13 14:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 14:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-13 14:26 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 14:26 - INFO - ---------------------------------------------
2024-10-13 14:27 - INFO - ---------------------------------------------
2024-10-13 14:27 - INFO - Epoch: 03 | Time: 0m 34s
2024-10-13 14:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98182
2024-10-13 14:27 - INFO - 	 Train Loss: 0.086
2024-10-13 14:27 - INFO - 	 Val. Loss: 0.076
2024-10-13 14:27 - INFO - 	 ROC-AUC: 0.982
2024-10-13 14:27 - INFO - 	 PR-AUC: 0.835
2024-10-13 14:27 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 14:27 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 14:27 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 14:27 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 14:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 14:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-13 14:27 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 14:27 - INFO - ---------------------------------------------
2024-10-13 14:28 - INFO - ---------------------------------------------
2024-10-13 14:28 - INFO - Epoch: 04 | Time: 0m 35s
2024-10-13 14:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98373
2024-10-13 14:28 - INFO - 	 Train Loss: 0.081
2024-10-13 14:28 - INFO - 	 Val. Loss: 0.069
2024-10-13 14:28 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:28 - INFO - 	 PR-AUC: 0.848
2024-10-13 14:28 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 14:28 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 14:28 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:28 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 14:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 14:28 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:28 - INFO - ---------------------------------------------
2024-10-13 14:28 - INFO - ---------------------------------------------
2024-10-13 14:28 - INFO - Epoch: 05 | Time: 0m 34s
2024-10-13 14:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98429
2024-10-13 14:28 - INFO - 	 Train Loss: 0.076
2024-10-13 14:28 - INFO - 	 Val. Loss: 0.067
2024-10-13 14:28 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:28 - INFO - 	 PR-AUC: 0.855
2024-10-13 14:28 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:28 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 14:28 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:28 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 14:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 14:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 14:28 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:28 - INFO - ---------------------------------------------
2024-10-13 14:29 - INFO - ---------------------------------------------
2024-10-13 14:29 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 14:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98488
2024-10-13 14:29 - INFO - 	 Train Loss: 0.075
2024-10-13 14:29 - INFO - 	 Val. Loss: 0.069
2024-10-13 14:29 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:29 - INFO - 	 PR-AUC: 0.864
2024-10-13 14:29 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:29 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 14:29 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:29 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 14:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 14:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-13 14:29 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:29 - INFO - ---------------------------------------------
2024-10-13 14:29 - INFO - ---------------------------------------------
2024-10-13 14:29 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 14:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98666
2024-10-13 14:29 - INFO - 	 Train Loss: 0.072
2024-10-13 14:29 - INFO - 	 Val. Loss: 0.063
2024-10-13 14:29 - INFO - 	 ROC-AUC: 0.987
2024-10-13 14:29 - INFO - 	 PR-AUC: 0.874
2024-10-13 14:29 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 14:29 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 14:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 14:29 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 14:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-13 14:29 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:29 - INFO - ---------------------------------------------
2024-10-13 14:30 - INFO - ---------------------------------------------
2024-10-13 14:30 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 14:30 - INFO - 	 Train Loss: 0.072
2024-10-13 14:30 - INFO - 	 Val. Loss: 0.067
2024-10-13 14:30 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:30 - INFO - 	 PR-AUC: 0.856
2024-10-13 14:30 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 14:30 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 14:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 14:30 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 14:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-13 14:30 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:30 - INFO - ---------------------------------------------
2024-10-13 14:30 - INFO - ---------------------------------------------
2024-10-13 14:30 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 14:30 - INFO - 	 Train Loss: 0.070
2024-10-13 14:30 - INFO - 	 Val. Loss: 0.064
2024-10-13 14:30 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:30 - INFO - 	 PR-AUC: 0.869
2024-10-13 14:30 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:30 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 14:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 14:30 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 14:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-13 14:30 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:30 - INFO - ---------------------------------------------
2024-10-13 14:31 - INFO - ---------------------------------------------
2024-10-13 14:31 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 14:31 - INFO - 	 Train Loss: 0.069
2024-10-13 14:31 - INFO - 	 Val. Loss: 0.067
2024-10-13 14:31 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:31 - INFO - 	 PR-AUC: 0.866
2024-10-13 14:31 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 14:31 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 14:31 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 14:31 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 14:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-13 14:31 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:31 - INFO - ---------------------------------------------
2024-10-13 14:32 - INFO - Fit the preprocessing pipeline
2024-10-13 14:32 - INFO - Training using device: cuda
2024-10-13 14:32 - INFO - Creating generators
2024-10-13 14:33 - INFO - The model has 651,257 trainable parameters
2024-10-13 14:33 - INFO - * Model:
2024-10-13 14:33 - INFO - * -----------
2024-10-13 14:33 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 14:33 - INFO - * -----------
2024-10-13 14:33 - INFO - Evaluating model based on: rocauc
2024-10-13 14:33 - INFO - Training..

2024-10-13 14:33 - INFO - ---------------------------------------------
2024-10-13 14:33 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 14:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96836
2024-10-13 14:33 - INFO - 	 Train Loss: 0.169
2024-10-13 14:33 - INFO - 	 Val. Loss: 0.106
2024-10-13 14:33 - INFO - 	 ROC-AUC: 0.968
2024-10-13 14:33 - INFO - 	 PR-AUC: 0.716
2024-10-13 14:33 - INFO - 	 Recall for 0.4 precision: 0.936
2024-10-13 14:33 - INFO - 	 Best Val. Loss: 0.106
2024-10-13 14:33 - INFO - 	 Best ROC-AUC: 0.968
2024-10-13 14:33 - INFO - 	 Best PR-AUC: 0.716
2024-10-13 14:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-13 14:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.729
2024-10-13 14:33 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-13 14:33 - INFO - ---------------------------------------------
2024-10-13 14:34 - INFO - ---------------------------------------------
2024-10-13 14:34 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 14:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9802
2024-10-13 14:34 - INFO - 	 Train Loss: 0.096
2024-10-13 14:34 - INFO - 	 Val. Loss: 0.080
2024-10-13 14:34 - INFO - 	 ROC-AUC: 0.980
2024-10-13 14:34 - INFO - 	 PR-AUC: 0.833
2024-10-13 14:34 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 14:34 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 14:34 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 14:34 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 14:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 14:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.776
2024-10-13 14:34 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 14:34 - INFO - ---------------------------------------------
2024-10-13 14:34 - INFO - ---------------------------------------------
2024-10-13 14:34 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 14:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98395
2024-10-13 14:34 - INFO - 	 Train Loss: 0.083
2024-10-13 14:34 - INFO - 	 Val. Loss: 0.070
2024-10-13 14:34 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:34 - INFO - 	 PR-AUC: 0.860
2024-10-13 14:34 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:34 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 14:34 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:34 - INFO - 	 Best PR-AUC: 0.860
2024-10-13 14:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-13 14:34 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:34 - INFO - ---------------------------------------------
2024-10-13 14:35 - INFO - ---------------------------------------------
2024-10-13 14:35 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 14:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98467
2024-10-13 14:35 - INFO - 	 Train Loss: 0.079
2024-10-13 14:35 - INFO - 	 Val. Loss: 0.068
2024-10-13 14:35 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:35 - INFO - 	 PR-AUC: 0.868
2024-10-13 14:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:35 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 14:35 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:35 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 14:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 14:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-13 14:35 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:35 - INFO - ---------------------------------------------
2024-10-13 14:35 - INFO - ---------------------------------------------
2024-10-13 14:35 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 14:35 - INFO - 	 Train Loss: 0.077
2024-10-13 14:35 - INFO - 	 Val. Loss: 0.071
2024-10-13 14:35 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:35 - INFO - 	 PR-AUC: 0.863
2024-10-13 14:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:35 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 14:35 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:35 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 14:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 14:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-13 14:35 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:35 - INFO - ---------------------------------------------
2024-10-13 14:36 - INFO - ---------------------------------------------
2024-10-13 14:36 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 14:36 - INFO - 	 Train Loss: 0.073
2024-10-13 14:36 - INFO - 	 Val. Loss: 0.072
2024-10-13 14:36 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:36 - INFO - 	 PR-AUC: 0.871
2024-10-13 14:36 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 14:36 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 14:36 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:36 - INFO - 	 Best PR-AUC: 0.871
2024-10-13 14:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 14:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 14:36 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:36 - INFO - ---------------------------------------------
2024-10-13 14:36 - INFO - ---------------------------------------------
2024-10-13 14:36 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 14:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98483
2024-10-13 14:36 - INFO - 	 Train Loss: 0.072
2024-10-13 14:36 - INFO - 	 Val. Loss: 0.071
2024-10-13 14:36 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:36 - INFO - 	 PR-AUC: 0.877
2024-10-13 14:36 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:36 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 14:36 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:36 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 14:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 14:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-13 14:36 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:36 - INFO - ---------------------------------------------
2024-10-13 14:37 - INFO - ---------------------------------------------
2024-10-13 14:37 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 14:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98543
2024-10-13 14:37 - INFO - 	 Train Loss: 0.071
2024-10-13 14:37 - INFO - 	 Val. Loss: 0.066
2024-10-13 14:37 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:37 - INFO - 	 PR-AUC: 0.871
2024-10-13 14:37 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 14:37 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 14:37 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:37 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 14:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-13 14:37 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 14:37 - INFO - ---------------------------------------------
2024-10-13 14:37 - INFO - ---------------------------------------------
2024-10-13 14:37 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 14:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98608
2024-10-13 14:37 - INFO - 	 Train Loss: 0.069
2024-10-13 14:37 - INFO - 	 Val. Loss: 0.068
2024-10-13 14:37 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:37 - INFO - 	 PR-AUC: 0.876
2024-10-13 14:37 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 14:37 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 14:37 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:37 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 14:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 14:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-13 14:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 14:37 - INFO - ---------------------------------------------
2024-10-13 14:38 - INFO - ---------------------------------------------
2024-10-13 14:38 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 14:38 - INFO - 	 Train Loss: 0.068
2024-10-13 14:38 - INFO - 	 Val. Loss: 0.070
2024-10-13 14:38 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:38 - INFO - 	 PR-AUC: 0.867
2024-10-13 14:38 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 14:38 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 14:38 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:38 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 14:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 14:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-13 14:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 14:38 - INFO - ---------------------------------------------
2024-10-13 14:39 - INFO - Fit the preprocessing pipeline
2024-10-13 14:39 - INFO - Training using device: cuda
2024-10-13 14:39 - INFO - Creating generators
2024-10-13 14:39 - INFO - The model has 651,257 trainable parameters
2024-10-13 14:39 - INFO - * Model:
2024-10-13 14:39 - INFO - * -----------
2024-10-13 14:39 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 14:39 - INFO - * -----------
2024-10-13 14:39 - INFO - Evaluating model based on: rocauc
2024-10-13 14:39 - INFO - Training..

2024-10-13 14:40 - INFO - ---------------------------------------------
2024-10-13 14:40 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 14:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97184
2024-10-13 14:40 - INFO - 	 Train Loss: 0.170
2024-10-13 14:40 - INFO - 	 Val. Loss: 0.105
2024-10-13 14:40 - INFO - 	 ROC-AUC: 0.972
2024-10-13 14:40 - INFO - 	 PR-AUC: 0.775
2024-10-13 14:40 - INFO - 	 Recall for 0.4 precision: 0.948
2024-10-13 14:40 - INFO - 	 Best Val. Loss: 0.105
2024-10-13 14:40 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 14:40 - INFO - 	 Best PR-AUC: 0.775
2024-10-13 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-10-13 14:40 - INFO - 	 Best Recall for 0.4 precision: 0.948
2024-10-13 14:40 - INFO - ---------------------------------------------
2024-10-13 14:40 - INFO - ---------------------------------------------
2024-10-13 14:40 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 14:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98122
2024-10-13 14:40 - INFO - 	 Train Loss: 0.094
2024-10-13 14:40 - INFO - 	 Val. Loss: 0.078
2024-10-13 14:40 - INFO - 	 ROC-AUC: 0.981
2024-10-13 14:40 - INFO - 	 PR-AUC: 0.826
2024-10-13 14:40 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 14:40 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 14:40 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 14:40 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-10-13 14:40 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 14:40 - INFO - ---------------------------------------------
2024-10-13 14:41 - INFO - ---------------------------------------------
2024-10-13 14:41 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 14:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98187
2024-10-13 14:41 - INFO - 	 Train Loss: 0.085
2024-10-13 14:41 - INFO - 	 Val. Loss: 0.079
2024-10-13 14:41 - INFO - 	 ROC-AUC: 0.982
2024-10-13 14:41 - INFO - 	 PR-AUC: 0.831
2024-10-13 14:41 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 14:41 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 14:41 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 14:41 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 14:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 14:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-13 14:41 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 14:41 - INFO - ---------------------------------------------
2024-10-13 14:42 - INFO - ---------------------------------------------
2024-10-13 14:42 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 14:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98412
2024-10-13 14:42 - INFO - 	 Train Loss: 0.080
2024-10-13 14:42 - INFO - 	 Val. Loss: 0.070
2024-10-13 14:42 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:42 - INFO - 	 PR-AUC: 0.861
2024-10-13 14:42 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 14:42 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 14:42 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:42 - INFO - 	 Best PR-AUC: 0.861
2024-10-13 14:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 14:42 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 14:42 - INFO - ---------------------------------------------
2024-10-13 14:42 - INFO - ---------------------------------------------
2024-10-13 14:42 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 14:42 - INFO - 	 Train Loss: 0.077
2024-10-13 14:42 - INFO - 	 Val. Loss: 0.076
2024-10-13 14:42 - INFO - 	 ROC-AUC: 0.982
2024-10-13 14:42 - INFO - 	 PR-AUC: 0.854
2024-10-13 14:42 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 14:42 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 14:42 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:42 - INFO - 	 Best PR-AUC: 0.861
2024-10-13 14:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 14:42 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 14:42 - INFO - ---------------------------------------------
2024-10-13 14:43 - INFO - ---------------------------------------------
2024-10-13 14:43 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 14:43 - INFO - 	 Train Loss: 0.076
2024-10-13 14:43 - INFO - 	 Val. Loss: 0.068
2024-10-13 14:43 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:43 - INFO - 	 PR-AUC: 0.864
2024-10-13 14:43 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 14:43 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 14:43 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:43 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 14:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 14:43 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 14:43 - INFO - ---------------------------------------------
2024-10-13 14:43 - INFO - ---------------------------------------------
2024-10-13 14:43 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 14:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98414
2024-10-13 14:43 - INFO - 	 Train Loss: 0.072
2024-10-13 14:43 - INFO - 	 Val. Loss: 0.069
2024-10-13 14:43 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:43 - INFO - 	 PR-AUC: 0.850
2024-10-13 14:43 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 14:43 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 14:43 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:43 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 14:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 14:43 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 14:43 - INFO - ---------------------------------------------
2024-10-13 14:44 - INFO - ---------------------------------------------
2024-10-13 14:44 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 14:44 - INFO - 	 Train Loss: 0.072
2024-10-13 14:44 - INFO - 	 Val. Loss: 0.071
2024-10-13 14:44 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:44 - INFO - 	 PR-AUC: 0.857
2024-10-13 14:44 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:44 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 14:44 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:44 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 14:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 14:44 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 14:44 - INFO - ---------------------------------------------
2024-10-13 14:44 - INFO - ---------------------------------------------
2024-10-13 14:44 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 14:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98704
2024-10-13 14:44 - INFO - 	 Train Loss: 0.070
2024-10-13 14:44 - INFO - 	 Val. Loss: 0.062
2024-10-13 14:44 - INFO - 	 ROC-AUC: 0.987
2024-10-13 14:44 - INFO - 	 PR-AUC: 0.880
2024-10-13 14:44 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 14:44 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 14:44 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 14:44 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 14:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 14:44 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 14:44 - INFO - ---------------------------------------------
2024-10-13 14:45 - INFO - ---------------------------------------------
2024-10-13 14:45 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 14:45 - INFO - 	 Train Loss: 0.068
2024-10-13 14:45 - INFO - 	 Val. Loss: 0.072
2024-10-13 14:45 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:45 - INFO - 	 PR-AUC: 0.857
2024-10-13 14:45 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:45 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 14:45 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 14:45 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 14:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 14:45 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 14:45 - INFO - ---------------------------------------------
2024-10-13 14:46 - INFO - Fit the preprocessing pipeline
2024-10-13 14:46 - INFO - Training using device: cuda
2024-10-13 14:46 - INFO - Creating generators
2024-10-13 14:46 - INFO - The model has 651,257 trainable parameters
2024-10-13 14:46 - INFO - * Model:
2024-10-13 14:46 - INFO - * -----------
2024-10-13 14:46 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 14:46 - INFO - * -----------
2024-10-13 14:46 - INFO - Evaluating model based on: rocauc
2024-10-13 14:46 - INFO - Training..

2024-10-13 14:47 - INFO - ---------------------------------------------
2024-10-13 14:47 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 14:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97072
2024-10-13 14:47 - INFO - 	 Train Loss: 0.168
2024-10-13 14:47 - INFO - 	 Val. Loss: 0.103
2024-10-13 14:47 - INFO - 	 ROC-AUC: 0.971
2024-10-13 14:47 - INFO - 	 PR-AUC: 0.754
2024-10-13 14:47 - INFO - 	 Recall for 0.4 precision: 0.947
2024-10-13 14:47 - INFO - 	 Best Val. Loss: 0.103
2024-10-13 14:47 - INFO - 	 Best ROC-AUC: 0.971
2024-10-13 14:47 - INFO - 	 Best PR-AUC: 0.754
2024-10-13 14:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 14:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-10-13 14:47 - INFO - 	 Best Recall for 0.4 precision: 0.947
2024-10-13 14:47 - INFO - ---------------------------------------------
2024-10-13 14:47 - INFO - ---------------------------------------------
2024-10-13 14:47 - INFO - Epoch: 02 | Time: 0m 36s
2024-10-13 14:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98006
2024-10-13 14:47 - INFO - 	 Train Loss: 0.093
2024-10-13 14:47 - INFO - 	 Val. Loss: 0.077
2024-10-13 14:47 - INFO - 	 ROC-AUC: 0.980
2024-10-13 14:47 - INFO - 	 PR-AUC: 0.825
2024-10-13 14:47 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 14:47 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 14:47 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 14:47 - INFO - 	 Best PR-AUC: 0.825
2024-10-13 14:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 14:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-13 14:47 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 14:47 - INFO - ---------------------------------------------
2024-10-13 14:48 - INFO - ---------------------------------------------
2024-10-13 14:48 - INFO - Epoch: 03 | Time: 1m 0s
2024-10-13 14:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98388
2024-10-13 14:48 - INFO - 	 Train Loss: 0.085
2024-10-13 14:48 - INFO - 	 Val. Loss: 0.071
2024-10-13 14:48 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:48 - INFO - 	 PR-AUC: 0.851
2024-10-13 14:48 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 14:48 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 14:48 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:48 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 14:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 14:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 14:48 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 14:48 - INFO - ---------------------------------------------
2024-10-13 14:49 - INFO - ---------------------------------------------
2024-10-13 14:49 - INFO - Epoch: 04 | Time: 0m 56s
2024-10-13 14:49 - INFO - 	 Train Loss: 0.080
2024-10-13 14:49 - INFO - 	 Val. Loss: 0.075
2024-10-13 14:49 - INFO - 	 ROC-AUC: 0.983
2024-10-13 14:49 - INFO - 	 PR-AUC: 0.840
2024-10-13 14:49 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:49 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 14:49 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 14:49 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 14:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 14:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 14:49 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:49 - INFO - ---------------------------------------------
2024-10-13 14:50 - INFO - ---------------------------------------------
2024-10-13 14:50 - INFO - Epoch: 05 | Time: 0m 53s
2024-10-13 14:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98515
2024-10-13 14:50 - INFO - 	 Train Loss: 0.078
2024-10-13 14:50 - INFO - 	 Val. Loss: 0.067
2024-10-13 14:50 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:50 - INFO - 	 PR-AUC: 0.864
2024-10-13 14:50 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:50 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 14:50 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:50 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 14:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 14:50 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 14:50 - INFO - ---------------------------------------------
2024-10-13 14:51 - INFO - ---------------------------------------------
2024-10-13 14:51 - INFO - Epoch: 06 | Time: 0m 53s
2024-10-13 14:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98558
2024-10-13 14:51 - INFO - 	 Train Loss: 0.075
2024-10-13 14:51 - INFO - 	 Val. Loss: 0.064
2024-10-13 14:51 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:51 - INFO - 	 PR-AUC: 0.863
2024-10-13 14:51 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 14:51 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 14:51 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:51 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 14:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 14:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 14:51 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:51 - INFO - ---------------------------------------------
2024-10-13 14:52 - INFO - ---------------------------------------------
2024-10-13 14:52 - INFO - Epoch: 07 | Time: 0m 53s
2024-10-13 14:52 - INFO - 	 Train Loss: 0.073
2024-10-13 14:52 - INFO - 	 Val. Loss: 0.068
2024-10-13 14:52 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:52 - INFO - 	 PR-AUC: 0.859
2024-10-13 14:52 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:52 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 14:52 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:52 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 14:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 14:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 14:52 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:52 - INFO - ---------------------------------------------
2024-10-13 14:53 - INFO - ---------------------------------------------
2024-10-13 14:53 - INFO - Epoch: 08 | Time: 0m 51s
2024-10-13 14:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98608
2024-10-13 14:53 - INFO - 	 Train Loss: 0.070
2024-10-13 14:53 - INFO - 	 Val. Loss: 0.065
2024-10-13 14:53 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:53 - INFO - 	 PR-AUC: 0.862
2024-10-13 14:53 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:53 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 14:53 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:53 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 14:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 14:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 14:53 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:53 - INFO - ---------------------------------------------
2024-10-13 14:53 - INFO - ---------------------------------------------
2024-10-13 14:53 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 14:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9862
2024-10-13 14:53 - INFO - 	 Train Loss: 0.070
2024-10-13 14:53 - INFO - 	 Val. Loss: 0.065
2024-10-13 14:53 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:53 - INFO - 	 PR-AUC: 0.870
2024-10-13 14:53 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 14:53 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 14:53 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:53 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 14:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 14:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-13 14:53 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:53 - INFO - ---------------------------------------------
2024-10-13 14:54 - INFO - ---------------------------------------------
2024-10-13 14:54 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 14:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98644
2024-10-13 14:54 - INFO - 	 Train Loss: 0.068
2024-10-13 14:54 - INFO - 	 Val. Loss: 0.064
2024-10-13 14:54 - INFO - 	 ROC-AUC: 0.986
2024-10-13 14:54 - INFO - 	 PR-AUC: 0.869
2024-10-13 14:54 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 14:54 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 14:54 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 14:54 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 14:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 14:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-13 14:54 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:54 - INFO - ---------------------------------------------
2024-10-13 14:56 - INFO - Fit the preprocessing pipeline
2024-10-13 14:56 - INFO - Training using device: cuda
2024-10-13 14:56 - INFO - Creating generators
2024-10-13 14:56 - INFO - The model has 651,257 trainable parameters
2024-10-13 14:56 - INFO - * Model:
2024-10-13 14:56 - INFO - * -----------
2024-10-13 14:56 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 14:56 - INFO - * -----------
2024-10-13 14:56 - INFO - Evaluating model based on: rocauc
2024-10-13 14:56 - INFO - Training..

2024-10-13 14:57 - INFO - ---------------------------------------------
2024-10-13 14:57 - INFO - Epoch: 01 | Time: 0m 45s
2024-10-13 14:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97472
2024-10-13 14:57 - INFO - 	 Train Loss: 0.179
2024-10-13 14:57 - INFO - 	 Val. Loss: 0.088
2024-10-13 14:57 - INFO - 	 ROC-AUC: 0.975
2024-10-13 14:57 - INFO - 	 PR-AUC: 0.795
2024-10-13 14:57 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 14:57 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 14:57 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 14:57 - INFO - 	 Best PR-AUC: 0.795
2024-10-13 14:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 14:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.757
2024-10-13 14:57 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 14:57 - INFO - ---------------------------------------------
2024-10-13 14:57 - INFO - ---------------------------------------------
2024-10-13 14:57 - INFO - Epoch: 02 | Time: 0m 39s
2024-10-13 14:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97983
2024-10-13 14:57 - INFO - 	 Train Loss: 0.095
2024-10-13 14:57 - INFO - 	 Val. Loss: 0.080
2024-10-13 14:57 - INFO - 	 ROC-AUC: 0.980
2024-10-13 14:57 - INFO - 	 PR-AUC: 0.824
2024-10-13 14:57 - INFO - 	 Recall for 0.4 precision: 0.962
2024-10-13 14:57 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 14:57 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 14:57 - INFO - 	 Best PR-AUC: 0.824
2024-10-13 14:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 14:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-13 14:57 - INFO - 	 Best Recall for 0.4 precision: 0.962
2024-10-13 14:57 - INFO - ---------------------------------------------
2024-10-13 14:58 - INFO - ---------------------------------------------
2024-10-13 14:58 - INFO - Epoch: 03 | Time: 0m 34s
2024-10-13 14:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98276
2024-10-13 14:58 - INFO - 	 Train Loss: 0.083
2024-10-13 14:58 - INFO - 	 Val. Loss: 0.074
2024-10-13 14:58 - INFO - 	 ROC-AUC: 0.983
2024-10-13 14:58 - INFO - 	 PR-AUC: 0.847
2024-10-13 14:58 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 14:58 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 14:58 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 14:58 - INFO - 	 Best PR-AUC: 0.847
2024-10-13 14:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 14:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-13 14:58 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 14:58 - INFO - ---------------------------------------------
2024-10-13 14:59 - INFO - ---------------------------------------------
2024-10-13 14:59 - INFO - Epoch: 04 | Time: 0m 41s
2024-10-13 14:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98466
2024-10-13 14:59 - INFO - 	 Train Loss: 0.079
2024-10-13 14:59 - INFO - 	 Val. Loss: 0.071
2024-10-13 14:59 - INFO - 	 ROC-AUC: 0.985
2024-10-13 14:59 - INFO - 	 PR-AUC: 0.857
2024-10-13 14:59 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 14:59 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 14:59 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:59 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 14:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 14:59 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:59 - INFO - ---------------------------------------------
2024-10-13 14:59 - INFO - ---------------------------------------------
2024-10-13 14:59 - INFO - Epoch: 05 | Time: 0m 44s
2024-10-13 14:59 - INFO - 	 Train Loss: 0.075
2024-10-13 14:59 - INFO - 	 Val. Loss: 0.067
2024-10-13 14:59 - INFO - 	 ROC-AUC: 0.984
2024-10-13 14:59 - INFO - 	 PR-AUC: 0.868
2024-10-13 14:59 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 14:59 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 14:59 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 14:59 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 14:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 14:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-13 14:59 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 14:59 - INFO - ---------------------------------------------
2024-10-13 15:00 - INFO - ---------------------------------------------
2024-10-13 15:00 - INFO - Epoch: 06 | Time: 0m 44s
2024-10-13 15:00 - INFO - 	 Train Loss: 0.073
2024-10-13 15:00 - INFO - 	 Val. Loss: 0.068
2024-10-13 15:00 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:00 - INFO - 	 PR-AUC: 0.866
2024-10-13 15:00 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 15:00 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 15:00 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:00 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 15:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-13 15:00 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 15:00 - INFO - ---------------------------------------------
2024-10-13 15:01 - INFO - ---------------------------------------------
2024-10-13 15:01 - INFO - Epoch: 07 | Time: 0m 44s
2024-10-13 15:01 - INFO - 	 Train Loss: 0.073
2024-10-13 15:01 - INFO - 	 Val. Loss: 0.069
2024-10-13 15:01 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:01 - INFO - 	 PR-AUC: 0.868
2024-10-13 15:01 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:01 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 15:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:01 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 15:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-13 15:01 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 15:01 - INFO - ---------------------------------------------
2024-10-13 15:01 - INFO - ---------------------------------------------
2024-10-13 15:01 - INFO - Epoch: 08 | Time: 0m 44s
2024-10-13 15:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98611
2024-10-13 15:01 - INFO - 	 Train Loss: 0.070
2024-10-13 15:01 - INFO - 	 Val. Loss: 0.065
2024-10-13 15:01 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:01 - INFO - 	 PR-AUC: 0.870
2024-10-13 15:01 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 15:01 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 15:01 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:01 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 15:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 15:01 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 15:01 - INFO - ---------------------------------------------
2024-10-13 15:02 - INFO - ---------------------------------------------
2024-10-13 15:02 - INFO - Epoch: 09 | Time: 0m 44s
2024-10-13 15:02 - INFO - 	 Train Loss: 0.071
2024-10-13 15:02 - INFO - 	 Val. Loss: 0.064
2024-10-13 15:02 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:02 - INFO - 	 PR-AUC: 0.876
2024-10-13 15:02 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 15:02 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 15:02 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:02 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 15:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-13 15:02 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 15:02 - INFO - ---------------------------------------------
2024-10-13 15:03 - INFO - ---------------------------------------------
2024-10-13 15:03 - INFO - Epoch: 10 | Time: 0m 45s
2024-10-13 15:03 - INFO - 	 Train Loss: 0.068
2024-10-13 15:03 - INFO - 	 Val. Loss: 0.070
2024-10-13 15:03 - INFO - 	 ROC-AUC: 0.983
2024-10-13 15:03 - INFO - 	 PR-AUC: 0.863
2024-10-13 15:03 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 15:03 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 15:03 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:03 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 15:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-13 15:03 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 15:03 - INFO - ---------------------------------------------
2024-10-13 15:05 - INFO - Fit the preprocessing pipeline
2024-10-13 15:05 - INFO - Training using device: cuda
2024-10-13 15:05 - INFO - Creating generators
2024-10-13 15:05 - INFO - The model has 651,257 trainable parameters
2024-10-13 15:05 - INFO - * Model:
2024-10-13 15:05 - INFO - * -----------
2024-10-13 15:05 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 15:05 - INFO - * -----------
2024-10-13 15:05 - INFO - Evaluating model based on: rocauc
2024-10-13 15:05 - INFO - Training..

2024-10-13 15:06 - INFO - ---------------------------------------------
2024-10-13 15:06 - INFO - Epoch: 01 | Time: 0m 45s
2024-10-13 15:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97365
2024-10-13 15:06 - INFO - 	 Train Loss: 0.175
2024-10-13 15:06 - INFO - 	 Val. Loss: 0.093
2024-10-13 15:06 - INFO - 	 ROC-AUC: 0.974
2024-10-13 15:06 - INFO - 	 PR-AUC: 0.760
2024-10-13 15:06 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-13 15:06 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 15:06 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 15:06 - INFO - 	 Best PR-AUC: 0.760
2024-10-13 15:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 15:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.740
2024-10-13 15:06 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-13 15:06 - INFO - ---------------------------------------------
2024-10-13 15:07 - INFO - ---------------------------------------------
2024-10-13 15:07 - INFO - Epoch: 02 | Time: 0m 44s
2024-10-13 15:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98253
2024-10-13 15:07 - INFO - 	 Train Loss: 0.094
2024-10-13 15:07 - INFO - 	 Val. Loss: 0.078
2024-10-13 15:07 - INFO - 	 ROC-AUC: 0.983
2024-10-13 15:07 - INFO - 	 PR-AUC: 0.834
2024-10-13 15:07 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 15:07 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 15:07 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 15:07 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 15:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 15:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-13 15:07 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 15:07 - INFO - ---------------------------------------------
2024-10-13 15:07 - INFO - ---------------------------------------------
2024-10-13 15:07 - INFO - Epoch: 03 | Time: 0m 45s
2024-10-13 15:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98352
2024-10-13 15:07 - INFO - 	 Train Loss: 0.084
2024-10-13 15:07 - INFO - 	 Val. Loss: 0.078
2024-10-13 15:07 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:07 - INFO - 	 PR-AUC: 0.851
2024-10-13 15:07 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 15:07 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 15:07 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:07 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 15:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 15:07 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 15:07 - INFO - ---------------------------------------------
2024-10-13 15:08 - INFO - ---------------------------------------------
2024-10-13 15:08 - INFO - Epoch: 04 | Time: 0m 43s
2024-10-13 15:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98406
2024-10-13 15:08 - INFO - 	 Train Loss: 0.079
2024-10-13 15:08 - INFO - 	 Val. Loss: 0.068
2024-10-13 15:08 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:08 - INFO - 	 PR-AUC: 0.855
2024-10-13 15:08 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:08 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 15:08 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:08 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 15:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 15:08 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:08 - INFO - ---------------------------------------------
2024-10-13 15:09 - INFO - ---------------------------------------------
2024-10-13 15:09 - INFO - Epoch: 05 | Time: 0m 38s
2024-10-13 15:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98427
2024-10-13 15:09 - INFO - 	 Train Loss: 0.077
2024-10-13 15:09 - INFO - 	 Val. Loss: 0.068
2024-10-13 15:09 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:09 - INFO - 	 PR-AUC: 0.867
2024-10-13 15:09 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 15:09 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 15:09 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:09 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 15:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 15:09 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:09 - INFO - ---------------------------------------------
2024-10-13 15:09 - INFO - ---------------------------------------------
2024-10-13 15:09 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-13 15:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98436
2024-10-13 15:09 - INFO - 	 Train Loss: 0.075
2024-10-13 15:09 - INFO - 	 Val. Loss: 0.068
2024-10-13 15:09 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:09 - INFO - 	 PR-AUC: 0.864
2024-10-13 15:09 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:09 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 15:09 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:09 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 15:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 15:09 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:09 - INFO - ---------------------------------------------
2024-10-13 15:10 - INFO - ---------------------------------------------
2024-10-13 15:10 - INFO - Epoch: 07 | Time: 0m 41s
2024-10-13 15:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98486
2024-10-13 15:10 - INFO - 	 Train Loss: 0.073
2024-10-13 15:10 - INFO - 	 Val. Loss: 0.065
2024-10-13 15:10 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:10 - INFO - 	 PR-AUC: 0.878
2024-10-13 15:10 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 15:10 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 15:10 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:10 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 15:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 15:10 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:10 - INFO - ---------------------------------------------
2024-10-13 15:11 - INFO - ---------------------------------------------
2024-10-13 15:11 - INFO - Epoch: 08 | Time: 0m 44s
2024-10-13 15:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98566
2024-10-13 15:11 - INFO - 	 Train Loss: 0.071
2024-10-13 15:11 - INFO - 	 Val. Loss: 0.065
2024-10-13 15:11 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:11 - INFO - 	 PR-AUC: 0.873
2024-10-13 15:11 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:11 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 15:11 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:11 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 15:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 15:11 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:11 - INFO - ---------------------------------------------
2024-10-13 15:12 - INFO - ---------------------------------------------
2024-10-13 15:12 - INFO - Epoch: 09 | Time: 0m 44s
2024-10-13 15:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98653
2024-10-13 15:12 - INFO - 	 Train Loss: 0.070
2024-10-13 15:12 - INFO - 	 Val. Loss: 0.062
2024-10-13 15:12 - INFO - 	 ROC-AUC: 0.987
2024-10-13 15:12 - INFO - 	 PR-AUC: 0.877
2024-10-13 15:12 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 15:12 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 15:12 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 15:12 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 15:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 15:12 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:12 - INFO - ---------------------------------------------
2024-10-13 15:12 - INFO - ---------------------------------------------
2024-10-13 15:12 - INFO - Epoch: 10 | Time: 0m 44s
2024-10-13 15:12 - INFO - 	 Train Loss: 0.068
2024-10-13 15:12 - INFO - 	 Val. Loss: 0.064
2024-10-13 15:12 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:12 - INFO - 	 PR-AUC: 0.875
2024-10-13 15:12 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:12 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 15:12 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 15:12 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 15:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 15:12 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:12 - INFO - ---------------------------------------------
2024-10-13 15:15 - INFO - Fit the preprocessing pipeline
2024-10-13 15:15 - INFO - Training using device: cuda
2024-10-13 15:15 - INFO - Creating generators
2024-10-13 15:15 - INFO - The model has 651,257 trainable parameters
2024-10-13 15:15 - INFO - * Model:
2024-10-13 15:15 - INFO - * -----------
2024-10-13 15:15 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 15:15 - INFO - * -----------
2024-10-13 15:15 - INFO - Evaluating model based on: rocauc
2024-10-13 15:15 - INFO - Training..

2024-10-13 15:15 - INFO - ---------------------------------------------
2024-10-13 15:15 - INFO - Epoch: 01 | Time: 0m 45s
2024-10-13 15:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97327
2024-10-13 15:15 - INFO - 	 Train Loss: 0.181
2024-10-13 15:15 - INFO - 	 Val. Loss: 0.093
2024-10-13 15:15 - INFO - 	 ROC-AUC: 0.973
2024-10-13 15:15 - INFO - 	 PR-AUC: 0.773
2024-10-13 15:15 - INFO - 	 Recall for 0.4 precision: 0.948
2024-10-13 15:15 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 15:15 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 15:15 - INFO - 	 Best PR-AUC: 0.773
2024-10-13 15:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 15:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-10-13 15:15 - INFO - 	 Best Recall for 0.4 precision: 0.948
2024-10-13 15:15 - INFO - ---------------------------------------------
2024-10-13 15:16 - INFO - ---------------------------------------------
2024-10-13 15:16 - INFO - Epoch: 02 | Time: 0m 44s
2024-10-13 15:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97866
2024-10-13 15:16 - INFO - 	 Train Loss: 0.094
2024-10-13 15:16 - INFO - 	 Val. Loss: 0.086
2024-10-13 15:16 - INFO - 	 ROC-AUC: 0.979
2024-10-13 15:16 - INFO - 	 PR-AUC: 0.806
2024-10-13 15:16 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 15:16 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 15:16 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 15:16 - INFO - 	 Best PR-AUC: 0.806
2024-10-13 15:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 15:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-13 15:16 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 15:16 - INFO - ---------------------------------------------
2024-10-13 15:17 - INFO - ---------------------------------------------
2024-10-13 15:17 - INFO - Epoch: 03 | Time: 0m 44s
2024-10-13 15:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98286
2024-10-13 15:17 - INFO - 	 Train Loss: 0.084
2024-10-13 15:17 - INFO - 	 Val. Loss: 0.071
2024-10-13 15:17 - INFO - 	 ROC-AUC: 0.983
2024-10-13 15:17 - INFO - 	 PR-AUC: 0.850
2024-10-13 15:17 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 15:17 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 15:17 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 15:17 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 15:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-13 15:17 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 15:17 - INFO - ---------------------------------------------
2024-10-13 15:18 - INFO - ---------------------------------------------
2024-10-13 15:18 - INFO - Epoch: 04 | Time: 0m 44s
2024-10-13 15:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98402
2024-10-13 15:18 - INFO - 	 Train Loss: 0.080
2024-10-13 15:18 - INFO - 	 Val. Loss: 0.070
2024-10-13 15:18 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:18 - INFO - 	 PR-AUC: 0.852
2024-10-13 15:18 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 15:18 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 15:18 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:18 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 15:18 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 15:18 - INFO - ---------------------------------------------
2024-10-13 15:18 - INFO - ---------------------------------------------
2024-10-13 15:18 - INFO - Epoch: 05 | Time: 0m 45s
2024-10-13 15:18 - INFO - 	 Train Loss: 0.076
2024-10-13 15:18 - INFO - 	 Val. Loss: 0.073
2024-10-13 15:18 - INFO - 	 ROC-AUC: 0.983
2024-10-13 15:18 - INFO - 	 PR-AUC: 0.841
2024-10-13 15:18 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 15:18 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 15:18 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:18 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 15:18 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 15:18 - INFO - ---------------------------------------------
2024-10-13 15:19 - INFO - ---------------------------------------------
2024-10-13 15:19 - INFO - Epoch: 06 | Time: 0m 45s
2024-10-13 15:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98602
2024-10-13 15:19 - INFO - 	 Train Loss: 0.073
2024-10-13 15:19 - INFO - 	 Val. Loss: 0.066
2024-10-13 15:19 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:19 - INFO - 	 PR-AUC: 0.865
2024-10-13 15:19 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:19 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 15:19 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:19 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 15:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 15:19 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:19 - INFO - ---------------------------------------------
2024-10-13 15:20 - INFO - ---------------------------------------------
2024-10-13 15:20 - INFO - Epoch: 07 | Time: 0m 44s
2024-10-13 15:20 - INFO - 	 Train Loss: 0.071
2024-10-13 15:20 - INFO - 	 Val. Loss: 0.066
2024-10-13 15:20 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:20 - INFO - 	 PR-AUC: 0.869
2024-10-13 15:20 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:20 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 15:20 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:20 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 15:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-13 15:20 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:20 - INFO - ---------------------------------------------
2024-10-13 15:21 - INFO - ---------------------------------------------
2024-10-13 15:21 - INFO - Epoch: 08 | Time: 0m 37s
2024-10-13 15:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98637
2024-10-13 15:21 - INFO - 	 Train Loss: 0.070
2024-10-13 15:21 - INFO - 	 Val. Loss: 0.063
2024-10-13 15:21 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:21 - INFO - 	 PR-AUC: 0.881
2024-10-13 15:21 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 15:21 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 15:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:21 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 15:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-13 15:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:21 - INFO - ---------------------------------------------
2024-10-13 15:21 - INFO - ---------------------------------------------
2024-10-13 15:21 - INFO - Epoch: 09 | Time: 0m 34s
2024-10-13 15:21 - INFO - 	 Train Loss: 0.070
2024-10-13 15:21 - INFO - 	 Val. Loss: 0.065
2024-10-13 15:21 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:21 - INFO - 	 PR-AUC: 0.868
2024-10-13 15:21 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:21 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 15:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:21 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 15:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-13 15:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:21 - INFO - ---------------------------------------------
2024-10-13 15:22 - INFO - ---------------------------------------------
2024-10-13 15:22 - INFO - Epoch: 10 | Time: 0m 34s
2024-10-13 15:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98688
2024-10-13 15:22 - INFO - 	 Train Loss: 0.068
2024-10-13 15:22 - INFO - 	 Val. Loss: 0.063
2024-10-13 15:22 - INFO - 	 ROC-AUC: 0.987
2024-10-13 15:22 - INFO - 	 PR-AUC: 0.872
2024-10-13 15:22 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-13 15:22 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 15:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 15:22 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 15:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-13 15:22 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 15:22 - INFO - ---------------------------------------------
2024-10-13 15:23 - INFO - Fit the preprocessing pipeline
2024-10-13 15:23 - INFO - Training using device: cuda
2024-10-13 15:23 - INFO - Creating generators
2024-10-13 15:23 - INFO - The model has 651,257 trainable parameters
2024-10-13 15:23 - INFO - * Model:
2024-10-13 15:23 - INFO - * -----------
2024-10-13 15:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 15:23 - INFO - * -----------
2024-10-13 15:23 - INFO - Evaluating model based on: rocauc
2024-10-13 15:23 - INFO - Training..

2024-10-13 15:24 - INFO - ---------------------------------------------
2024-10-13 15:24 - INFO - Epoch: 01 | Time: 0m 36s
2024-10-13 15:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97426
2024-10-13 15:24 - INFO - 	 Train Loss: 0.169
2024-10-13 15:24 - INFO - 	 Val. Loss: 0.093
2024-10-13 15:24 - INFO - 	 ROC-AUC: 0.974
2024-10-13 15:24 - INFO - 	 PR-AUC: 0.745
2024-10-13 15:24 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 15:24 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 15:24 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 15:24 - INFO - 	 Best PR-AUC: 0.745
2024-10-13 15:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 15:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.744
2024-10-13 15:24 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 15:24 - INFO - ---------------------------------------------
2024-10-13 15:25 - INFO - ---------------------------------------------
2024-10-13 15:25 - INFO - Epoch: 02 | Time: 0m 34s
2024-10-13 15:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98055
2024-10-13 15:25 - INFO - 	 Train Loss: 0.094
2024-10-13 15:25 - INFO - 	 Val. Loss: 0.079
2024-10-13 15:25 - INFO - 	 ROC-AUC: 0.981
2024-10-13 15:25 - INFO - 	 PR-AUC: 0.819
2024-10-13 15:25 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 15:25 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 15:25 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 15:25 - INFO - 	 Best PR-AUC: 0.819
2024-10-13 15:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 15:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-13 15:25 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 15:25 - INFO - ---------------------------------------------
2024-10-13 15:25 - INFO - ---------------------------------------------
2024-10-13 15:25 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-13 15:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98377
2024-10-13 15:25 - INFO - 	 Train Loss: 0.085
2024-10-13 15:25 - INFO - 	 Val. Loss: 0.071
2024-10-13 15:25 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:25 - INFO - 	 PR-AUC: 0.852
2024-10-13 15:25 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 15:25 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 15:25 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:25 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 15:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 15:25 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:25 - INFO - ---------------------------------------------
2024-10-13 15:26 - INFO - ---------------------------------------------
2024-10-13 15:26 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-13 15:26 - INFO - 	 Train Loss: 0.080
2024-10-13 15:26 - INFO - 	 Val. Loss: 0.071
2024-10-13 15:26 - INFO - 	 ROC-AUC: 0.983
2024-10-13 15:26 - INFO - 	 PR-AUC: 0.847
2024-10-13 15:26 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:26 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 15:26 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:26 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 15:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 15:26 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:26 - INFO - ---------------------------------------------
2024-10-13 15:26 - INFO - ---------------------------------------------
2024-10-13 15:26 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 15:26 - INFO - 	 Train Loss: 0.076
2024-10-13 15:26 - INFO - 	 Val. Loss: 0.071
2024-10-13 15:26 - INFO - 	 ROC-AUC: 0.983
2024-10-13 15:26 - INFO - 	 PR-AUC: 0.844
2024-10-13 15:26 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 15:26 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 15:26 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:26 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 15:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 15:26 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:26 - INFO - ---------------------------------------------
2024-10-13 15:27 - INFO - ---------------------------------------------
2024-10-13 15:27 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 15:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98578
2024-10-13 15:27 - INFO - 	 Train Loss: 0.075
2024-10-13 15:27 - INFO - 	 Val. Loss: 0.066
2024-10-13 15:27 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:27 - INFO - 	 PR-AUC: 0.863
2024-10-13 15:27 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:27 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 15:27 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:27 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 15:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 15:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:27 - INFO - ---------------------------------------------
2024-10-13 15:27 - INFO - ---------------------------------------------
2024-10-13 15:27 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 15:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98593
2024-10-13 15:27 - INFO - 	 Train Loss: 0.073
2024-10-13 15:27 - INFO - 	 Val. Loss: 0.066
2024-10-13 15:27 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:27 - INFO - 	 PR-AUC: 0.865
2024-10-13 15:27 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:27 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 15:27 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:27 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 15:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-13 15:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:27 - INFO - ---------------------------------------------
2024-10-13 15:28 - INFO - ---------------------------------------------
2024-10-13 15:28 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 15:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98611
2024-10-13 15:28 - INFO - 	 Train Loss: 0.071
2024-10-13 15:28 - INFO - 	 Val. Loss: 0.065
2024-10-13 15:28 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:28 - INFO - 	 PR-AUC: 0.868
2024-10-13 15:28 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:28 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 15:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:28 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 15:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 15:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:28 - INFO - ---------------------------------------------
2024-10-13 15:28 - INFO - ---------------------------------------------
2024-10-13 15:28 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 15:28 - INFO - 	 Train Loss: 0.069
2024-10-13 15:28 - INFO - 	 Val. Loss: 0.062
2024-10-13 15:28 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:28 - INFO - 	 PR-AUC: 0.880
2024-10-13 15:28 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 15:28 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 15:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:28 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 15:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-13 15:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:28 - INFO - ---------------------------------------------
2024-10-13 15:29 - INFO - ---------------------------------------------
2024-10-13 15:29 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 15:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98701
2024-10-13 15:29 - INFO - 	 Train Loss: 0.068
2024-10-13 15:29 - INFO - 	 Val. Loss: 0.062
2024-10-13 15:29 - INFO - 	 ROC-AUC: 0.987
2024-10-13 15:29 - INFO - 	 PR-AUC: 0.886
2024-10-13 15:29 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-13 15:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 15:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 15:29 - INFO - 	 Best PR-AUC: 0.886
2024-10-13 15:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-13 15:29 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 15:29 - INFO - ---------------------------------------------
2024-10-13 15:30 - INFO - Fit the preprocessing pipeline
2024-10-13 15:30 - INFO - Training using device: cuda
2024-10-13 15:30 - INFO - Creating generators
2024-10-13 15:31 - INFO - The model has 651,257 trainable parameters
2024-10-13 15:31 - INFO - * Model:
2024-10-13 15:31 - INFO - * -----------
2024-10-13 15:31 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 15:31 - INFO - * -----------
2024-10-13 15:31 - INFO - Evaluating model based on: rocauc
2024-10-13 15:31 - INFO - Training..

2024-10-13 15:31 - INFO - ---------------------------------------------
2024-10-13 15:31 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 15:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97319
2024-10-13 15:31 - INFO - 	 Train Loss: 0.179
2024-10-13 15:31 - INFO - 	 Val. Loss: 0.102
2024-10-13 15:31 - INFO - 	 ROC-AUC: 0.973
2024-10-13 15:31 - INFO - 	 PR-AUC: 0.736
2024-10-13 15:31 - INFO - 	 Recall for 0.4 precision: 0.955
2024-10-13 15:31 - INFO - 	 Best Val. Loss: 0.102
2024-10-13 15:31 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 15:31 - INFO - 	 Best PR-AUC: 0.736
2024-10-13 15:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 15:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.731
2024-10-13 15:31 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-13 15:31 - INFO - ---------------------------------------------
2024-10-13 15:32 - INFO - ---------------------------------------------
2024-10-13 15:32 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 15:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97917
2024-10-13 15:32 - INFO - 	 Train Loss: 0.095
2024-10-13 15:32 - INFO - 	 Val. Loss: 0.082
2024-10-13 15:32 - INFO - 	 ROC-AUC: 0.979
2024-10-13 15:32 - INFO - 	 PR-AUC: 0.821
2024-10-13 15:32 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 15:32 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 15:32 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 15:32 - INFO - 	 Best PR-AUC: 0.821
2024-10-13 15:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 15:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-13 15:32 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 15:32 - INFO - ---------------------------------------------
2024-10-13 15:32 - INFO - ---------------------------------------------
2024-10-13 15:32 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 15:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98274
2024-10-13 15:32 - INFO - 	 Train Loss: 0.086
2024-10-13 15:32 - INFO - 	 Val. Loss: 0.073
2024-10-13 15:32 - INFO - 	 ROC-AUC: 0.983
2024-10-13 15:32 - INFO - 	 PR-AUC: 0.837
2024-10-13 15:32 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:32 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 15:32 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 15:32 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 15:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 15:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-13 15:32 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:32 - INFO - ---------------------------------------------
2024-10-13 15:33 - INFO - ---------------------------------------------
2024-10-13 15:33 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 15:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98334
2024-10-13 15:33 - INFO - 	 Train Loss: 0.079
2024-10-13 15:33 - INFO - 	 Val. Loss: 0.073
2024-10-13 15:33 - INFO - 	 ROC-AUC: 0.983
2024-10-13 15:33 - INFO - 	 PR-AUC: 0.850
2024-10-13 15:33 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 15:33 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 15:33 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 15:33 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 15:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 15:33 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:33 - INFO - ---------------------------------------------
2024-10-13 15:33 - INFO - ---------------------------------------------
2024-10-13 15:33 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 15:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98495
2024-10-13 15:33 - INFO - 	 Train Loss: 0.077
2024-10-13 15:33 - INFO - 	 Val. Loss: 0.068
2024-10-13 15:33 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:33 - INFO - 	 PR-AUC: 0.855
2024-10-13 15:33 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:33 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 15:33 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:33 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 15:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 15:33 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:33 - INFO - ---------------------------------------------
2024-10-13 15:34 - INFO - ---------------------------------------------
2024-10-13 15:34 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 15:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98505
2024-10-13 15:34 - INFO - 	 Train Loss: 0.075
2024-10-13 15:34 - INFO - 	 Val. Loss: 0.068
2024-10-13 15:34 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:34 - INFO - 	 PR-AUC: 0.873
2024-10-13 15:34 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:34 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 15:34 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:34 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 15:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 15:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-13 15:34 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:34 - INFO - ---------------------------------------------
2024-10-13 15:34 - INFO - ---------------------------------------------
2024-10-13 15:34 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 15:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9866
2024-10-13 15:34 - INFO - 	 Train Loss: 0.072
2024-10-13 15:34 - INFO - 	 Val. Loss: 0.064
2024-10-13 15:34 - INFO - 	 ROC-AUC: 0.987
2024-10-13 15:34 - INFO - 	 PR-AUC: 0.864
2024-10-13 15:34 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:34 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 15:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 15:34 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 15:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-13 15:34 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:34 - INFO - ---------------------------------------------
2024-10-13 15:35 - INFO - ---------------------------------------------
2024-10-13 15:35 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 15:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98713
2024-10-13 15:35 - INFO - 	 Train Loss: 0.071
2024-10-13 15:35 - INFO - 	 Val. Loss: 0.063
2024-10-13 15:35 - INFO - 	 ROC-AUC: 0.987
2024-10-13 15:35 - INFO - 	 PR-AUC: 0.883
2024-10-13 15:35 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 15:35 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 15:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 15:35 - INFO - 	 Best PR-AUC: 0.883
2024-10-13 15:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-13 15:35 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 15:35 - INFO - ---------------------------------------------
2024-10-13 15:35 - INFO - ---------------------------------------------
2024-10-13 15:35 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 15:35 - INFO - 	 Train Loss: 0.070
2024-10-13 15:35 - INFO - 	 Val. Loss: 0.062
2024-10-13 15:35 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:35 - INFO - 	 PR-AUC: 0.882
2024-10-13 15:35 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 15:35 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 15:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 15:35 - INFO - 	 Best PR-AUC: 0.883
2024-10-13 15:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-13 15:35 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 15:35 - INFO - ---------------------------------------------
2024-10-13 15:36 - INFO - ---------------------------------------------
2024-10-13 15:36 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 15:36 - INFO - 	 Train Loss: 0.068
2024-10-13 15:36 - INFO - 	 Val. Loss: 0.062
2024-10-13 15:36 - INFO - 	 ROC-AUC: 0.987
2024-10-13 15:36 - INFO - 	 PR-AUC: 0.881
2024-10-13 15:36 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 15:36 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 15:36 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 15:36 - INFO - 	 Best PR-AUC: 0.883
2024-10-13 15:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-13 15:36 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 15:36 - INFO - ---------------------------------------------
2024-10-13 15:37 - INFO - Fit the preprocessing pipeline
2024-10-13 15:37 - INFO - Training using device: cuda
2024-10-13 15:37 - INFO - Creating generators
2024-10-13 15:37 - INFO - The model has 651,257 trainable parameters
2024-10-13 15:37 - INFO - * Model:
2024-10-13 15:37 - INFO - * -----------
2024-10-13 15:37 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 15:37 - INFO - * -----------
2024-10-13 15:37 - INFO - Evaluating model based on: rocauc
2024-10-13 15:37 - INFO - Training..

2024-10-13 15:38 - INFO - ---------------------------------------------
2024-10-13 15:38 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 15:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97312
2024-10-13 15:38 - INFO - 	 Train Loss: 0.169
2024-10-13 15:38 - INFO - 	 Val. Loss: 0.091
2024-10-13 15:38 - INFO - 	 ROC-AUC: 0.973
2024-10-13 15:38 - INFO - 	 PR-AUC: 0.785
2024-10-13 15:38 - INFO - 	 Recall for 0.4 precision: 0.943
2024-10-13 15:38 - INFO - 	 Best Val. Loss: 0.091
2024-10-13 15:38 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 15:38 - INFO - 	 Best PR-AUC: 0.785
2024-10-13 15:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-13 15:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.749
2024-10-13 15:38 - INFO - 	 Best Recall for 0.4 precision: 0.943
2024-10-13 15:38 - INFO - ---------------------------------------------
2024-10-13 15:39 - INFO - ---------------------------------------------
2024-10-13 15:39 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 15:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98222
2024-10-13 15:39 - INFO - 	 Train Loss: 0.094
2024-10-13 15:39 - INFO - 	 Val. Loss: 0.080
2024-10-13 15:39 - INFO - 	 ROC-AUC: 0.982
2024-10-13 15:39 - INFO - 	 PR-AUC: 0.834
2024-10-13 15:39 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 15:39 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 15:39 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 15:39 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-13 15:39 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 15:39 - INFO - ---------------------------------------------
2024-10-13 15:39 - INFO - ---------------------------------------------
2024-10-13 15:39 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 15:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98404
2024-10-13 15:39 - INFO - 	 Train Loss: 0.082
2024-10-13 15:39 - INFO - 	 Val. Loss: 0.075
2024-10-13 15:39 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:39 - INFO - 	 PR-AUC: 0.846
2024-10-13 15:39 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:39 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 15:39 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:39 - INFO - 	 Best PR-AUC: 0.846
2024-10-13 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 15:39 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:39 - INFO - ---------------------------------------------
2024-10-13 15:40 - INFO - ---------------------------------------------
2024-10-13 15:40 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 15:40 - INFO - 	 Train Loss: 0.079
2024-10-13 15:40 - INFO - 	 Val. Loss: 0.072
2024-10-13 15:40 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:40 - INFO - 	 PR-AUC: 0.844
2024-10-13 15:40 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:40 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 15:40 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:40 - INFO - 	 Best PR-AUC: 0.846
2024-10-13 15:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 15:40 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:40 - INFO - ---------------------------------------------
2024-10-13 15:40 - INFO - ---------------------------------------------
2024-10-13 15:40 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 15:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9841
2024-10-13 15:40 - INFO - 	 Train Loss: 0.076
2024-10-13 15:40 - INFO - 	 Val. Loss: 0.070
2024-10-13 15:40 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:40 - INFO - 	 PR-AUC: 0.856
2024-10-13 15:40 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:40 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 15:40 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:40 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 15:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 15:40 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:40 - INFO - ---------------------------------------------
2024-10-13 15:41 - INFO - ---------------------------------------------
2024-10-13 15:41 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 15:41 - INFO - 	 Train Loss: 0.075
2024-10-13 15:41 - INFO - 	 Val. Loss: 0.072
2024-10-13 15:41 - INFO - 	 ROC-AUC: 0.982
2024-10-13 15:41 - INFO - 	 PR-AUC: 0.849
2024-10-13 15:41 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 15:41 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 15:41 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:41 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 15:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 15:41 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:41 - INFO - ---------------------------------------------
2024-10-13 15:41 - INFO - ---------------------------------------------
2024-10-13 15:41 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 15:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98525
2024-10-13 15:41 - INFO - 	 Train Loss: 0.072
2024-10-13 15:41 - INFO - 	 Val. Loss: 0.066
2024-10-13 15:41 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:41 - INFO - 	 PR-AUC: 0.862
2024-10-13 15:41 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:41 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 15:41 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:41 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 15:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-13 15:41 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:41 - INFO - ---------------------------------------------
2024-10-13 15:42 - INFO - ---------------------------------------------
2024-10-13 15:42 - INFO - Epoch: 08 | Time: 0m 33s
2024-10-13 15:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98531
2024-10-13 15:42 - INFO - 	 Train Loss: 0.071
2024-10-13 15:42 - INFO - 	 Val. Loss: 0.067
2024-10-13 15:42 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:42 - INFO - 	 PR-AUC: 0.872
2024-10-13 15:42 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:42 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 15:42 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:42 - INFO - 	 Best PR-AUC: 0.872
2024-10-13 15:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-13 15:42 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:42 - INFO - ---------------------------------------------
2024-10-13 15:42 - INFO - ---------------------------------------------
2024-10-13 15:42 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 15:42 - INFO - 	 Train Loss: 0.070
2024-10-13 15:42 - INFO - 	 Val. Loss: 0.066
2024-10-13 15:42 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:42 - INFO - 	 PR-AUC: 0.873
2024-10-13 15:42 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:42 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 15:42 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:42 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 15:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 15:42 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:42 - INFO - ---------------------------------------------
2024-10-13 15:43 - INFO - ---------------------------------------------
2024-10-13 15:43 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 15:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98692
2024-10-13 15:43 - INFO - 	 Train Loss: 0.068
2024-10-13 15:43 - INFO - 	 Val. Loss: 0.062
2024-10-13 15:43 - INFO - 	 ROC-AUC: 0.987
2024-10-13 15:43 - INFO - 	 PR-AUC: 0.885
2024-10-13 15:43 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 15:43 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 15:43 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 15:43 - INFO - 	 Best PR-AUC: 0.885
2024-10-13 15:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 15:43 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 15:43 - INFO - ---------------------------------------------
2024-10-13 15:44 - INFO - Fit the preprocessing pipeline
2024-10-13 15:44 - INFO - Training using device: cuda
2024-10-13 15:44 - INFO - Creating generators
2024-10-13 15:44 - INFO - The model has 651,257 trainable parameters
2024-10-13 15:44 - INFO - * Model:
2024-10-13 15:44 - INFO - * -----------
2024-10-13 15:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 15:44 - INFO - * -----------
2024-10-13 15:44 - INFO - Evaluating model based on: rocauc
2024-10-13 15:44 - INFO - Training..

2024-10-13 15:45 - INFO - ---------------------------------------------
2024-10-13 15:45 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 15:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97457
2024-10-13 15:45 - INFO - 	 Train Loss: 0.182
2024-10-13 15:45 - INFO - 	 Val. Loss: 0.090
2024-10-13 15:45 - INFO - 	 ROC-AUC: 0.975
2024-10-13 15:45 - INFO - 	 PR-AUC: 0.765
2024-10-13 15:45 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 15:45 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 15:45 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 15:45 - INFO - 	 Best PR-AUC: 0.765
2024-10-13 15:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 15:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.756
2024-10-13 15:45 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 15:45 - INFO - ---------------------------------------------
2024-10-13 15:45 - INFO - ---------------------------------------------
2024-10-13 15:45 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 15:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97869
2024-10-13 15:45 - INFO - 	 Train Loss: 0.095
2024-10-13 15:45 - INFO - 	 Val. Loss: 0.081
2024-10-13 15:45 - INFO - 	 ROC-AUC: 0.979
2024-10-13 15:45 - INFO - 	 PR-AUC: 0.816
2024-10-13 15:45 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 15:45 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 15:45 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 15:45 - INFO - 	 Best PR-AUC: 0.816
2024-10-13 15:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 15:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-13 15:45 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 15:45 - INFO - ---------------------------------------------
2024-10-13 15:46 - INFO - ---------------------------------------------
2024-10-13 15:46 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 15:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98377
2024-10-13 15:46 - INFO - 	 Train Loss: 0.085
2024-10-13 15:46 - INFO - 	 Val. Loss: 0.070
2024-10-13 15:46 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:46 - INFO - 	 PR-AUC: 0.854
2024-10-13 15:46 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:46 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 15:46 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 15:46 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 15:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 15:46 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:46 - INFO - ---------------------------------------------
2024-10-13 15:47 - INFO - ---------------------------------------------
2024-10-13 15:47 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 15:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98493
2024-10-13 15:47 - INFO - 	 Train Loss: 0.082
2024-10-13 15:47 - INFO - 	 Val. Loss: 0.069
2024-10-13 15:47 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:47 - INFO - 	 PR-AUC: 0.863
2024-10-13 15:47 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 15:47 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 15:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:47 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 15:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 15:47 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:47 - INFO - ---------------------------------------------
2024-10-13 15:47 - INFO - ---------------------------------------------
2024-10-13 15:47 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 15:47 - INFO - 	 Train Loss: 0.076
2024-10-13 15:47 - INFO - 	 Val. Loss: 0.070
2024-10-13 15:47 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:47 - INFO - 	 PR-AUC: 0.862
2024-10-13 15:47 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:47 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 15:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:47 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 15:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 15:47 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:47 - INFO - ---------------------------------------------
2024-10-13 15:48 - INFO - ---------------------------------------------
2024-10-13 15:48 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 15:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98526
2024-10-13 15:48 - INFO - 	 Train Loss: 0.074
2024-10-13 15:48 - INFO - 	 Val. Loss: 0.068
2024-10-13 15:48 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:48 - INFO - 	 PR-AUC: 0.858
2024-10-13 15:48 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 15:48 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 15:48 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:48 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 15:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 15:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:48 - INFO - ---------------------------------------------
2024-10-13 15:48 - INFO - ---------------------------------------------
2024-10-13 15:48 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 15:48 - INFO - 	 Train Loss: 0.073
2024-10-13 15:48 - INFO - 	 Val. Loss: 0.069
2024-10-13 15:48 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:48 - INFO - 	 PR-AUC: 0.856
2024-10-13 15:48 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:48 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 15:48 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:48 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 15:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 15:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:48 - INFO - ---------------------------------------------
2024-10-13 15:49 - INFO - ---------------------------------------------
2024-10-13 15:49 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 15:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98636
2024-10-13 15:49 - INFO - 	 Train Loss: 0.071
2024-10-13 15:49 - INFO - 	 Val. Loss: 0.066
2024-10-13 15:49 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:49 - INFO - 	 PR-AUC: 0.866
2024-10-13 15:49 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 15:49 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 15:49 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:49 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 15:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-13 15:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:49 - INFO - ---------------------------------------------
2024-10-13 15:49 - INFO - ---------------------------------------------
2024-10-13 15:49 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 15:49 - INFO - 	 Train Loss: 0.071
2024-10-13 15:49 - INFO - 	 Val. Loss: 0.067
2024-10-13 15:49 - INFO - 	 ROC-AUC: 0.984
2024-10-13 15:49 - INFO - 	 PR-AUC: 0.865
2024-10-13 15:49 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 15:49 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 15:49 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:49 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 15:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-13 15:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:49 - INFO - ---------------------------------------------
2024-10-13 15:50 - INFO - ---------------------------------------------
2024-10-13 15:50 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 15:50 - INFO - 	 Train Loss: 0.069
2024-10-13 15:50 - INFO - 	 Val. Loss: 0.062
2024-10-13 15:50 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:50 - INFO - 	 PR-AUC: 0.884
2024-10-13 15:50 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 15:50 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 15:50 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:50 - INFO - 	 Best PR-AUC: 0.884
2024-10-13 15:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 15:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 15:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 15:50 - INFO - ---------------------------------------------
2024-10-13 15:51 - INFO - Fit the preprocessing pipeline
2024-10-13 15:51 - INFO - Training using device: cuda
2024-10-13 15:51 - INFO - Creating generators
2024-10-13 15:51 - INFO - The model has 651,257 trainable parameters
2024-10-13 15:51 - INFO - * Model:
2024-10-13 15:51 - INFO - * -----------
2024-10-13 15:51 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 15:51 - INFO - * -----------
2024-10-13 15:51 - INFO - Evaluating model based on: rocauc
2024-10-13 15:51 - INFO - Training..

2024-10-13 15:52 - INFO - ---------------------------------------------
2024-10-13 15:52 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 15:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97667
2024-10-13 15:52 - INFO - 	 Train Loss: 0.178
2024-10-13 15:52 - INFO - 	 Val. Loss: 0.088
2024-10-13 15:52 - INFO - 	 ROC-AUC: 0.977
2024-10-13 15:52 - INFO - 	 PR-AUC: 0.766
2024-10-13 15:52 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 15:52 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 15:52 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 15:52 - INFO - 	 Best PR-AUC: 0.766
2024-10-13 15:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 15:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-10-13 15:52 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 15:52 - INFO - ---------------------------------------------
2024-10-13 15:52 - INFO - ---------------------------------------------
2024-10-13 15:52 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 15:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97948
2024-10-13 15:52 - INFO - 	 Train Loss: 0.095
2024-10-13 15:52 - INFO - 	 Val. Loss: 0.083
2024-10-13 15:52 - INFO - 	 ROC-AUC: 0.979
2024-10-13 15:52 - INFO - 	 PR-AUC: 0.809
2024-10-13 15:52 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 15:52 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 15:52 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 15:52 - INFO - 	 Best PR-AUC: 0.809
2024-10-13 15:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 15:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-10-13 15:52 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 15:52 - INFO - ---------------------------------------------
2024-10-13 15:53 - INFO - ---------------------------------------------
2024-10-13 15:53 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 15:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98141
2024-10-13 15:53 - INFO - 	 Train Loss: 0.085
2024-10-13 15:53 - INFO - 	 Val. Loss: 0.079
2024-10-13 15:53 - INFO - 	 ROC-AUC: 0.981
2024-10-13 15:53 - INFO - 	 PR-AUC: 0.834
2024-10-13 15:53 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 15:53 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 15:53 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 15:53 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 15:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 15:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-13 15:53 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:53 - INFO - ---------------------------------------------
2024-10-13 15:53 - INFO - ---------------------------------------------
2024-10-13 15:53 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 15:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98142
2024-10-13 15:53 - INFO - 	 Train Loss: 0.080
2024-10-13 15:53 - INFO - 	 Val. Loss: 0.082
2024-10-13 15:53 - INFO - 	 ROC-AUC: 0.981
2024-10-13 15:53 - INFO - 	 PR-AUC: 0.840
2024-10-13 15:53 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 15:53 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 15:53 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 15:53 - INFO - 	 Best PR-AUC: 0.840
2024-10-13 15:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 15:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 15:53 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:53 - INFO - ---------------------------------------------
2024-10-13 15:54 - INFO - ---------------------------------------------
2024-10-13 15:54 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 15:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98323
2024-10-13 15:54 - INFO - 	 Train Loss: 0.076
2024-10-13 15:54 - INFO - 	 Val. Loss: 0.070
2024-10-13 15:54 - INFO - 	 ROC-AUC: 0.983
2024-10-13 15:54 - INFO - 	 PR-AUC: 0.849
2024-10-13 15:54 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 15:54 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 15:54 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 15:54 - INFO - 	 Best PR-AUC: 0.849
2024-10-13 15:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 15:54 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 15:54 - INFO - ---------------------------------------------
2024-10-13 15:54 - INFO - ---------------------------------------------
2024-10-13 15:54 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 15:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98533
2024-10-13 15:54 - INFO - 	 Train Loss: 0.075
2024-10-13 15:54 - INFO - 	 Val. Loss: 0.065
2024-10-13 15:54 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:54 - INFO - 	 PR-AUC: 0.877
2024-10-13 15:54 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 15:54 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 15:54 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 15:54 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 15:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 15:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 15:54 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 15:54 - INFO - ---------------------------------------------
2024-10-13 15:55 - INFO - ---------------------------------------------
2024-10-13 15:55 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 15:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98613
2024-10-13 15:55 - INFO - 	 Train Loss: 0.072
2024-10-13 15:55 - INFO - 	 Val. Loss: 0.063
2024-10-13 15:55 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:55 - INFO - 	 PR-AUC: 0.874
2024-10-13 15:55 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:55 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 15:55 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:55 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 15:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 15:55 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:55 - INFO - ---------------------------------------------
2024-10-13 15:56 - INFO - ---------------------------------------------
2024-10-13 15:56 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 15:56 - INFO - 	 Train Loss: 0.071
2024-10-13 15:56 - INFO - 	 Val. Loss: 0.064
2024-10-13 15:56 - INFO - 	 ROC-AUC: 0.985
2024-10-13 15:56 - INFO - 	 PR-AUC: 0.876
2024-10-13 15:56 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 15:56 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 15:56 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:56 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 15:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 15:56 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 15:56 - INFO - ---------------------------------------------
2024-10-13 15:56 - INFO - ---------------------------------------------
2024-10-13 15:56 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 15:56 - INFO - 	 Train Loss: 0.069
2024-10-13 15:56 - INFO - 	 Val. Loss: 0.063
2024-10-13 15:56 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:56 - INFO - 	 PR-AUC: 0.876
2024-10-13 15:56 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 15:56 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 15:56 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:56 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 15:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 15:56 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 15:56 - INFO - ---------------------------------------------
2024-10-13 15:57 - INFO - ---------------------------------------------
2024-10-13 15:57 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 15:57 - INFO - 	 Train Loss: 0.068
2024-10-13 15:57 - INFO - 	 Val. Loss: 0.063
2024-10-13 15:57 - INFO - 	 ROC-AUC: 0.986
2024-10-13 15:57 - INFO - 	 PR-AUC: 0.882
2024-10-13 15:57 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 15:57 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 15:57 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 15:57 - INFO - 	 Best PR-AUC: 0.882
2024-10-13 15:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 15:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-13 15:57 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 15:57 - INFO - ---------------------------------------------
2024-10-13 15:58 - INFO - Fit the preprocessing pipeline
2024-10-13 15:58 - INFO - Training using device: cuda
2024-10-13 15:58 - INFO - Creating generators
2024-10-13 15:58 - INFO - The model has 651,257 trainable parameters
2024-10-13 15:58 - INFO - * Model:
2024-10-13 15:58 - INFO - * -----------
2024-10-13 15:58 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 15:58 - INFO - * -----------
2024-10-13 15:58 - INFO - Evaluating model based on: rocauc
2024-10-13 15:58 - INFO - Training..

2024-10-13 15:59 - INFO - ---------------------------------------------
2024-10-13 15:59 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 15:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9717
2024-10-13 15:59 - INFO - 	 Train Loss: 0.179
2024-10-13 15:59 - INFO - 	 Val. Loss: 0.103
2024-10-13 15:59 - INFO - 	 ROC-AUC: 0.972
2024-10-13 15:59 - INFO - 	 PR-AUC: 0.717
2024-10-13 15:59 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-13 15:59 - INFO - 	 Best Val. Loss: 0.103
2024-10-13 15:59 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 15:59 - INFO - 	 Best PR-AUC: 0.717
2024-10-13 15:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-13 15:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-13 15:59 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-13 15:59 - INFO - ---------------------------------------------
2024-10-13 15:59 - INFO - ---------------------------------------------
2024-10-13 15:59 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 15:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97989
2024-10-13 15:59 - INFO - 	 Train Loss: 0.095
2024-10-13 15:59 - INFO - 	 Val. Loss: 0.079
2024-10-13 15:59 - INFO - 	 ROC-AUC: 0.980
2024-10-13 15:59 - INFO - 	 PR-AUC: 0.821
2024-10-13 15:59 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 15:59 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 15:59 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 15:59 - INFO - 	 Best PR-AUC: 0.821
2024-10-13 15:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 15:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-13 15:59 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 15:59 - INFO - ---------------------------------------------
2024-10-13 16:00 - INFO - ---------------------------------------------
2024-10-13 16:00 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 16:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98214
2024-10-13 16:00 - INFO - 	 Train Loss: 0.085
2024-10-13 16:00 - INFO - 	 Val. Loss: 0.074
2024-10-13 16:00 - INFO - 	 ROC-AUC: 0.982
2024-10-13 16:00 - INFO - 	 PR-AUC: 0.840
2024-10-13 16:00 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 16:00 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 16:00 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 16:00 - INFO - 	 Best PR-AUC: 0.840
2024-10-13 16:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 16:00 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 16:00 - INFO - ---------------------------------------------
2024-10-13 16:00 - INFO - ---------------------------------------------
2024-10-13 16:00 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 16:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98536
2024-10-13 16:00 - INFO - 	 Train Loss: 0.079
2024-10-13 16:00 - INFO - 	 Val. Loss: 0.072
2024-10-13 16:00 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:00 - INFO - 	 PR-AUC: 0.859
2024-10-13 16:00 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-13 16:00 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 16:00 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:00 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 16:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 16:00 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 16:00 - INFO - ---------------------------------------------
2024-10-13 16:01 - INFO - ---------------------------------------------
2024-10-13 16:01 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 16:01 - INFO - 	 Train Loss: 0.078
2024-10-13 16:01 - INFO - 	 Val. Loss: 0.070
2024-10-13 16:01 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:01 - INFO - 	 PR-AUC: 0.859
2024-10-13 16:01 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 16:01 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 16:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:01 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 16:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 16:01 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 16:01 - INFO - ---------------------------------------------
2024-10-13 16:01 - INFO - ---------------------------------------------
2024-10-13 16:01 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 16:01 - INFO - 	 Train Loss: 0.075
2024-10-13 16:01 - INFO - 	 Val. Loss: 0.067
2024-10-13 16:01 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:01 - INFO - 	 PR-AUC: 0.865
2024-10-13 16:01 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:01 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 16:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:01 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 16:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 16:01 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 16:01 - INFO - ---------------------------------------------
2024-10-13 16:02 - INFO - ---------------------------------------------
2024-10-13 16:02 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 16:02 - INFO - 	 Train Loss: 0.072
2024-10-13 16:02 - INFO - 	 Val. Loss: 0.071
2024-10-13 16:02 - INFO - 	 ROC-AUC: 0.983
2024-10-13 16:02 - INFO - 	 PR-AUC: 0.851
2024-10-13 16:02 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 16:02 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 16:02 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:02 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 16:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 16:02 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 16:02 - INFO - ---------------------------------------------
2024-10-13 16:04 - INFO - Fit the preprocessing pipeline
2024-10-13 16:04 - INFO - Training using device: cuda
2024-10-13 16:04 - INFO - Creating generators
2024-10-13 16:04 - INFO - The model has 651,257 trainable parameters
2024-10-13 16:04 - INFO - * Model:
2024-10-13 16:04 - INFO - * -----------
2024-10-13 16:04 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 16:04 - INFO - * -----------
2024-10-13 16:04 - INFO - Evaluating model based on: rocauc
2024-10-13 16:04 - INFO - Training..

2024-10-13 16:05 - INFO - ---------------------------------------------
2024-10-13 16:05 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 16:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97339
2024-10-13 16:05 - INFO - 	 Train Loss: 0.185
2024-10-13 16:05 - INFO - 	 Val. Loss: 0.102
2024-10-13 16:05 - INFO - 	 ROC-AUC: 0.973
2024-10-13 16:05 - INFO - 	 PR-AUC: 0.737
2024-10-13 16:05 - INFO - 	 Recall for 0.4 precision: 0.962
2024-10-13 16:05 - INFO - 	 Best Val. Loss: 0.102
2024-10-13 16:05 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 16:05 - INFO - 	 Best PR-AUC: 0.737
2024-10-13 16:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 16:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.736
2024-10-13 16:05 - INFO - 	 Best Recall for 0.4 precision: 0.962
2024-10-13 16:05 - INFO - ---------------------------------------------
2024-10-13 16:05 - INFO - ---------------------------------------------
2024-10-13 16:05 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 16:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9784
2024-10-13 16:05 - INFO - 	 Train Loss: 0.096
2024-10-13 16:05 - INFO - 	 Val. Loss: 0.090
2024-10-13 16:05 - INFO - 	 ROC-AUC: 0.978
2024-10-13 16:05 - INFO - 	 PR-AUC: 0.800
2024-10-13 16:05 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 16:05 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 16:05 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 16:05 - INFO - 	 Best PR-AUC: 0.800
2024-10-13 16:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 16:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.775
2024-10-13 16:05 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 16:05 - INFO - ---------------------------------------------
2024-10-13 16:06 - INFO - ---------------------------------------------
2024-10-13 16:06 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 16:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98237
2024-10-13 16:06 - INFO - 	 Train Loss: 0.086
2024-10-13 16:06 - INFO - 	 Val. Loss: 0.073
2024-10-13 16:06 - INFO - 	 ROC-AUC: 0.982
2024-10-13 16:06 - INFO - 	 PR-AUC: 0.847
2024-10-13 16:06 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 16:06 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 16:06 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 16:06 - INFO - 	 Best PR-AUC: 0.847
2024-10-13 16:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 16:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-13 16:06 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 16:06 - INFO - ---------------------------------------------
2024-10-13 16:06 - INFO - ---------------------------------------------
2024-10-13 16:06 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 16:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98457
2024-10-13 16:06 - INFO - 	 Train Loss: 0.081
2024-10-13 16:06 - INFO - 	 Val. Loss: 0.070
2024-10-13 16:06 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:06 - INFO - 	 PR-AUC: 0.863
2024-10-13 16:06 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:06 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 16:06 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:06 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 16:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 16:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 16:06 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 16:06 - INFO - ---------------------------------------------
2024-10-13 16:07 - INFO - ---------------------------------------------
2024-10-13 16:07 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 16:07 - INFO - 	 Train Loss: 0.076
2024-10-13 16:07 - INFO - 	 Val. Loss: 0.070
2024-10-13 16:07 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:07 - INFO - 	 PR-AUC: 0.859
2024-10-13 16:07 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 16:07 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 16:07 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:07 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 16:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 16:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 16:07 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 16:07 - INFO - ---------------------------------------------
2024-10-13 16:07 - INFO - ---------------------------------------------
2024-10-13 16:07 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 16:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98481
2024-10-13 16:07 - INFO - 	 Train Loss: 0.075
2024-10-13 16:07 - INFO - 	 Val. Loss: 0.067
2024-10-13 16:07 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:07 - INFO - 	 PR-AUC: 0.863
2024-10-13 16:07 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 16:07 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 16:07 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:07 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 16:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 16:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 16:07 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 16:07 - INFO - ---------------------------------------------
2024-10-13 16:08 - INFO - ---------------------------------------------
2024-10-13 16:08 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 16:08 - INFO - 	 Train Loss: 0.073
2024-10-13 16:08 - INFO - 	 Val. Loss: 0.066
2024-10-13 16:08 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:08 - INFO - 	 PR-AUC: 0.855
2024-10-13 16:08 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 16:08 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 16:08 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:08 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 16:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 16:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 16:08 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 16:08 - INFO - ---------------------------------------------
2024-10-13 16:08 - INFO - ---------------------------------------------
2024-10-13 16:08 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 16:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98642
2024-10-13 16:08 - INFO - 	 Train Loss: 0.071
2024-10-13 16:08 - INFO - 	 Val. Loss: 0.066
2024-10-13 16:08 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:08 - INFO - 	 PR-AUC: 0.870
2024-10-13 16:08 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 16:08 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 16:08 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:08 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 16:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 16:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-13 16:08 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 16:08 - INFO - ---------------------------------------------
2024-10-13 16:09 - INFO - ---------------------------------------------
2024-10-13 16:09 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 16:09 - INFO - 	 Train Loss: 0.069
2024-10-13 16:09 - INFO - 	 Val. Loss: 0.065
2024-10-13 16:09 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:09 - INFO - 	 PR-AUC: 0.878
2024-10-13 16:09 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 16:09 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 16:09 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:09 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 16:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 16:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-13 16:09 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 16:09 - INFO - ---------------------------------------------
2024-10-13 16:10 - INFO - ---------------------------------------------
2024-10-13 16:10 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 16:10 - INFO - 	 Train Loss: 0.068
2024-10-13 16:10 - INFO - 	 Val. Loss: 0.065
2024-10-13 16:10 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:10 - INFO - 	 PR-AUC: 0.868
2024-10-13 16:10 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:10 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 16:10 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:10 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 16:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 16:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-13 16:10 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 16:10 - INFO - ---------------------------------------------
2024-10-13 16:11 - INFO - Fit the preprocessing pipeline
2024-10-13 16:11 - INFO - Training using device: cuda
2024-10-13 16:11 - INFO - Creating generators
2024-10-13 16:11 - INFO - The model has 651,257 trainable parameters
2024-10-13 16:11 - INFO - * Model:
2024-10-13 16:11 - INFO - * -----------
2024-10-13 16:11 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 16:11 - INFO - * -----------
2024-10-13 16:11 - INFO - Evaluating model based on: rocauc
2024-10-13 16:11 - INFO - Training..

2024-10-13 16:12 - INFO - ---------------------------------------------
2024-10-13 16:12 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 16:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97416
2024-10-13 16:12 - INFO - 	 Train Loss: 0.179
2024-10-13 16:12 - INFO - 	 Val. Loss: 0.090
2024-10-13 16:12 - INFO - 	 ROC-AUC: 0.974
2024-10-13 16:12 - INFO - 	 PR-AUC: 0.757
2024-10-13 16:12 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 16:12 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 16:12 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 16:12 - INFO - 	 Best PR-AUC: 0.757
2024-10-13 16:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 16:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-13 16:12 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 16:12 - INFO - ---------------------------------------------
2024-10-13 16:12 - INFO - ---------------------------------------------
2024-10-13 16:12 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 16:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98042
2024-10-13 16:12 - INFO - 	 Train Loss: 0.095
2024-10-13 16:12 - INFO - 	 Val. Loss: 0.077
2024-10-13 16:12 - INFO - 	 ROC-AUC: 0.980
2024-10-13 16:12 - INFO - 	 PR-AUC: 0.835
2024-10-13 16:12 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 16:12 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 16:12 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 16:12 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 16:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 16:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-13 16:12 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 16:12 - INFO - ---------------------------------------------
2024-10-13 16:13 - INFO - ---------------------------------------------
2024-10-13 16:13 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 16:13 - INFO - 	 Train Loss: 0.084
2024-10-13 16:13 - INFO - 	 Val. Loss: 0.080
2024-10-13 16:13 - INFO - 	 ROC-AUC: 0.980
2024-10-13 16:13 - INFO - 	 PR-AUC: 0.834
2024-10-13 16:13 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 16:13 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 16:13 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 16:13 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 16:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 16:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-13 16:13 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 16:13 - INFO - ---------------------------------------------
2024-10-13 16:13 - INFO - ---------------------------------------------
2024-10-13 16:13 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 16:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98315
2024-10-13 16:13 - INFO - 	 Train Loss: 0.079
2024-10-13 16:13 - INFO - 	 Val. Loss: 0.070
2024-10-13 16:13 - INFO - 	 ROC-AUC: 0.983
2024-10-13 16:13 - INFO - 	 PR-AUC: 0.855
2024-10-13 16:13 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 16:13 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 16:13 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 16:13 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 16:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 16:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 16:13 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 16:13 - INFO - ---------------------------------------------
2024-10-13 16:14 - INFO - ---------------------------------------------
2024-10-13 16:14 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 16:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98409
2024-10-13 16:14 - INFO - 	 Train Loss: 0.075
2024-10-13 16:14 - INFO - 	 Val. Loss: 0.068
2024-10-13 16:14 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:14 - INFO - 	 PR-AUC: 0.869
2024-10-13 16:14 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:14 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 16:14 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 16:14 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 16:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 16:14 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 16:14 - INFO - ---------------------------------------------
2024-10-13 16:14 - INFO - ---------------------------------------------
2024-10-13 16:14 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 16:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98448
2024-10-13 16:14 - INFO - 	 Train Loss: 0.074
2024-10-13 16:14 - INFO - 	 Val. Loss: 0.068
2024-10-13 16:14 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:14 - INFO - 	 PR-AUC: 0.858
2024-10-13 16:14 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 16:14 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 16:14 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 16:14 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 16:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 16:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 16:14 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 16:14 - INFO - ---------------------------------------------
2024-10-13 16:15 - INFO - ---------------------------------------------
2024-10-13 16:15 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 16:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98566
2024-10-13 16:15 - INFO - 	 Train Loss: 0.073
2024-10-13 16:15 - INFO - 	 Val. Loss: 0.065
2024-10-13 16:15 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:15 - INFO - 	 PR-AUC: 0.866
2024-10-13 16:15 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 16:15 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 16:15 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:15 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 16:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 16:15 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 16:15 - INFO - ---------------------------------------------
2024-10-13 16:15 - INFO - ---------------------------------------------
2024-10-13 16:15 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 16:15 - INFO - 	 Train Loss: 0.070
2024-10-13 16:15 - INFO - 	 Val. Loss: 0.066
2024-10-13 16:15 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:15 - INFO - 	 PR-AUC: 0.869
2024-10-13 16:15 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 16:15 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 16:15 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:15 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 16:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 16:15 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 16:15 - INFO - ---------------------------------------------
2024-10-13 16:16 - INFO - ---------------------------------------------
2024-10-13 16:16 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 16:16 - INFO - 	 Train Loss: 0.069
2024-10-13 16:16 - INFO - 	 Val. Loss: 0.064
2024-10-13 16:16 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:16 - INFO - 	 PR-AUC: 0.867
2024-10-13 16:16 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:16 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 16:16 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:16 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 16:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 16:16 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 16:16 - INFO - ---------------------------------------------
2024-10-13 16:17 - INFO - ---------------------------------------------
2024-10-13 16:17 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 16:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98615
2024-10-13 16:17 - INFO - 	 Train Loss: 0.068
2024-10-13 16:17 - INFO - 	 Val. Loss: 0.062
2024-10-13 16:17 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:17 - INFO - 	 PR-AUC: 0.871
2024-10-13 16:17 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 16:17 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 16:17 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:17 - INFO - 	 Best PR-AUC: 0.871
2024-10-13 16:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 16:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 16:17 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 16:17 - INFO - ---------------------------------------------
2024-10-13 16:18 - INFO - Fit the preprocessing pipeline
2024-10-13 16:18 - INFO - Training using device: cuda
2024-10-13 16:18 - INFO - Creating generators
2024-10-13 16:18 - INFO - The model has 651,257 trainable parameters
2024-10-13 16:18 - INFO - * Model:
2024-10-13 16:18 - INFO - * -----------
2024-10-13 16:18 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 16:18 - INFO - * -----------
2024-10-13 16:18 - INFO - Evaluating model based on: rocauc
2024-10-13 16:18 - INFO - Training..

2024-10-13 16:19 - INFO - ---------------------------------------------
2024-10-13 16:19 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 16:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96595
2024-10-13 16:19 - INFO - 	 Train Loss: 0.184
2024-10-13 16:19 - INFO - 	 Val. Loss: 0.129
2024-10-13 16:19 - INFO - 	 ROC-AUC: 0.966
2024-10-13 16:19 - INFO - 	 PR-AUC: 0.668
2024-10-13 16:19 - INFO - 	 Recall for 0.4 precision: 0.931
2024-10-13 16:19 - INFO - 	 Best Val. Loss: 0.129
2024-10-13 16:19 - INFO - 	 Best ROC-AUC: 0.966
2024-10-13 16:19 - INFO - 	 Best PR-AUC: 0.668
2024-10-13 16:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-10-13 16:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.687
2024-10-13 16:19 - INFO - 	 Best Recall for 0.4 precision: 0.931
2024-10-13 16:19 - INFO - ---------------------------------------------
2024-10-13 16:19 - INFO - ---------------------------------------------
2024-10-13 16:19 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 16:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97892
2024-10-13 16:19 - INFO - 	 Train Loss: 0.096
2024-10-13 16:19 - INFO - 	 Val. Loss: 0.086
2024-10-13 16:19 - INFO - 	 ROC-AUC: 0.979
2024-10-13 16:19 - INFO - 	 PR-AUC: 0.816
2024-10-13 16:19 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 16:19 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 16:19 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 16:19 - INFO - 	 Best PR-AUC: 0.816
2024-10-13 16:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 16:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 16:19 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 16:19 - INFO - ---------------------------------------------
2024-10-13 16:20 - INFO - ---------------------------------------------
2024-10-13 16:20 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 16:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9833
2024-10-13 16:20 - INFO - 	 Train Loss: 0.085
2024-10-13 16:20 - INFO - 	 Val. Loss: 0.074
2024-10-13 16:20 - INFO - 	 ROC-AUC: 0.983
2024-10-13 16:20 - INFO - 	 PR-AUC: 0.848
2024-10-13 16:20 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 16:20 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 16:20 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 16:20 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 16:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 16:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 16:20 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 16:20 - INFO - ---------------------------------------------
2024-10-13 16:20 - INFO - ---------------------------------------------
2024-10-13 16:20 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 16:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9858
2024-10-13 16:20 - INFO - 	 Train Loss: 0.080
2024-10-13 16:20 - INFO - 	 Val. Loss: 0.074
2024-10-13 16:20 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:20 - INFO - 	 PR-AUC: 0.861
2024-10-13 16:20 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:20 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 16:20 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:20 - INFO - 	 Best PR-AUC: 0.861
2024-10-13 16:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 16:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 16:20 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 16:20 - INFO - ---------------------------------------------
2024-10-13 16:21 - INFO - ---------------------------------------------
2024-10-13 16:21 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 16:21 - INFO - 	 Train Loss: 0.076
2024-10-13 16:21 - INFO - 	 Val. Loss: 0.073
2024-10-13 16:21 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:21 - INFO - 	 PR-AUC: 0.865
2024-10-13 16:21 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 16:21 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 16:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:21 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 16:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 16:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 16:21 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 16:21 - INFO - ---------------------------------------------
2024-10-13 16:21 - INFO - ---------------------------------------------
2024-10-13 16:21 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 16:21 - INFO - 	 Train Loss: 0.075
2024-10-13 16:21 - INFO - 	 Val. Loss: 0.068
2024-10-13 16:21 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:21 - INFO - 	 PR-AUC: 0.867
2024-10-13 16:21 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 16:21 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 16:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:21 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 16:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 16:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 16:21 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 16:21 - INFO - ---------------------------------------------
2024-10-13 16:22 - INFO - ---------------------------------------------
2024-10-13 16:22 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 16:22 - INFO - 	 Train Loss: 0.073
2024-10-13 16:22 - INFO - 	 Val. Loss: 0.066
2024-10-13 16:22 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:22 - INFO - 	 PR-AUC: 0.876
2024-10-13 16:22 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 16:22 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 16:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:22 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 16:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 16:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 16:22 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 16:22 - INFO - ---------------------------------------------
2024-10-13 16:24 - INFO - Fit the preprocessing pipeline
2024-10-13 16:24 - INFO - Training using device: cuda
2024-10-13 16:24 - INFO - Creating generators
2024-10-13 16:24 - INFO - The model has 651,257 trainable parameters
2024-10-13 16:24 - INFO - * Model:
2024-10-13 16:24 - INFO - * -----------
2024-10-13 16:24 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 16:24 - INFO - * -----------
2024-10-13 16:24 - INFO - Evaluating model based on: rocauc
2024-10-13 16:24 - INFO - Training..

2024-10-13 16:24 - INFO - ---------------------------------------------
2024-10-13 16:24 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 16:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97201
2024-10-13 16:24 - INFO - 	 Train Loss: 0.173
2024-10-13 16:24 - INFO - 	 Val. Loss: 0.100
2024-10-13 16:24 - INFO - 	 ROC-AUC: 0.972
2024-10-13 16:24 - INFO - 	 PR-AUC: 0.727
2024-10-13 16:24 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-13 16:24 - INFO - 	 Best Val. Loss: 0.100
2024-10-13 16:24 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 16:24 - INFO - 	 Best PR-AUC: 0.727
2024-10-13 16:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-13 16:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.723
2024-10-13 16:24 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-13 16:24 - INFO - ---------------------------------------------
2024-10-13 16:25 - INFO - ---------------------------------------------
2024-10-13 16:25 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 16:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9802
2024-10-13 16:25 - INFO - 	 Train Loss: 0.095
2024-10-13 16:25 - INFO - 	 Val. Loss: 0.080
2024-10-13 16:25 - INFO - 	 ROC-AUC: 0.980
2024-10-13 16:25 - INFO - 	 PR-AUC: 0.809
2024-10-13 16:25 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 16:25 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 16:25 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 16:25 - INFO - 	 Best PR-AUC: 0.809
2024-10-13 16:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 16:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-13 16:25 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 16:25 - INFO - ---------------------------------------------
2024-10-13 16:25 - INFO - ---------------------------------------------
2024-10-13 16:25 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 16:25 - INFO - 	 Train Loss: 0.085
2024-10-13 16:25 - INFO - 	 Val. Loss: 0.080
2024-10-13 16:25 - INFO - 	 ROC-AUC: 0.980
2024-10-13 16:25 - INFO - 	 PR-AUC: 0.815
2024-10-13 16:25 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 16:25 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 16:25 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 16:25 - INFO - 	 Best PR-AUC: 0.815
2024-10-13 16:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 16:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 16:25 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 16:25 - INFO - ---------------------------------------------
2024-10-13 16:26 - INFO - ---------------------------------------------
2024-10-13 16:26 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-13 16:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98411
2024-10-13 16:26 - INFO - 	 Train Loss: 0.081
2024-10-13 16:26 - INFO - 	 Val. Loss: 0.070
2024-10-13 16:26 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:26 - INFO - 	 PR-AUC: 0.858
2024-10-13 16:26 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 16:26 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 16:26 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 16:26 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 16:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 16:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 16:26 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 16:26 - INFO - ---------------------------------------------
2024-10-13 16:27 - INFO - ---------------------------------------------
2024-10-13 16:27 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 16:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98474
2024-10-13 16:27 - INFO - 	 Train Loss: 0.077
2024-10-13 16:27 - INFO - 	 Val. Loss: 0.068
2024-10-13 16:27 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:27 - INFO - 	 PR-AUC: 0.867
2024-10-13 16:27 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:27 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 16:27 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:27 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 16:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 16:27 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 16:27 - INFO - ---------------------------------------------
2024-10-13 16:27 - INFO - ---------------------------------------------
2024-10-13 16:27 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 16:27 - INFO - 	 Train Loss: 0.074
2024-10-13 16:27 - INFO - 	 Val. Loss: 0.068
2024-10-13 16:27 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:27 - INFO - 	 PR-AUC: 0.863
2024-10-13 16:27 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 16:27 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 16:27 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:27 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 16:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 16:27 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 16:27 - INFO - ---------------------------------------------
2024-10-13 16:28 - INFO - ---------------------------------------------
2024-10-13 16:28 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 16:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98521
2024-10-13 16:28 - INFO - 	 Train Loss: 0.072
2024-10-13 16:28 - INFO - 	 Val. Loss: 0.067
2024-10-13 16:28 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:28 - INFO - 	 PR-AUC: 0.861
2024-10-13 16:28 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 16:28 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 16:28 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:28 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 16:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 16:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 16:28 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 16:28 - INFO - ---------------------------------------------
2024-10-13 16:28 - INFO - ---------------------------------------------
2024-10-13 16:28 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 16:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98637
2024-10-13 16:28 - INFO - 	 Train Loss: 0.071
2024-10-13 16:28 - INFO - 	 Val. Loss: 0.064
2024-10-13 16:28 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:28 - INFO - 	 PR-AUC: 0.871
2024-10-13 16:28 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 16:28 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 16:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:28 - INFO - 	 Best PR-AUC: 0.871
2024-10-13 16:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 16:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 16:28 - INFO - ---------------------------------------------
2024-10-13 16:29 - INFO - ---------------------------------------------
2024-10-13 16:29 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 16:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98685
2024-10-13 16:29 - INFO - 	 Train Loss: 0.070
2024-10-13 16:29 - INFO - 	 Val. Loss: 0.063
2024-10-13 16:29 - INFO - 	 ROC-AUC: 0.987
2024-10-13 16:29 - INFO - 	 PR-AUC: 0.867
2024-10-13 16:29 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 16:29 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 16:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 16:29 - INFO - 	 Best PR-AUC: 0.871
2024-10-13 16:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 16:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 16:29 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 16:29 - INFO - ---------------------------------------------
2024-10-13 16:29 - INFO - ---------------------------------------------
2024-10-13 16:29 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 16:29 - INFO - 	 Train Loss: 0.068
2024-10-13 16:29 - INFO - 	 Val. Loss: 0.062
2024-10-13 16:29 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:29 - INFO - 	 PR-AUC: 0.877
2024-10-13 16:29 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 16:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 16:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 16:29 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 16:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 16:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-13 16:29 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 16:29 - INFO - ---------------------------------------------
2024-10-13 16:31 - INFO - Fit the preprocessing pipeline
2024-10-13 16:31 - INFO - Training using device: cuda
2024-10-13 16:31 - INFO - Creating generators
2024-10-13 16:31 - INFO - The model has 651,257 trainable parameters
2024-10-13 16:31 - INFO - * Model:
2024-10-13 16:31 - INFO - * -----------
2024-10-13 16:31 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 16:31 - INFO - * -----------
2024-10-13 16:31 - INFO - Evaluating model based on: rocauc
2024-10-13 16:31 - INFO - Training..

2024-10-13 16:31 - INFO - ---------------------------------------------
2024-10-13 16:31 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 16:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9732
2024-10-13 16:31 - INFO - 	 Train Loss: 0.177
2024-10-13 16:31 - INFO - 	 Val. Loss: 0.092
2024-10-13 16:31 - INFO - 	 ROC-AUC: 0.973
2024-10-13 16:31 - INFO - 	 PR-AUC: 0.761
2024-10-13 16:31 - INFO - 	 Recall for 0.4 precision: 0.953
2024-10-13 16:31 - INFO - 	 Best Val. Loss: 0.092
2024-10-13 16:31 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 16:31 - INFO - 	 Best PR-AUC: 0.761
2024-10-13 16:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 16:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.734
2024-10-13 16:31 - INFO - 	 Best Recall for 0.4 precision: 0.953
2024-10-13 16:31 - INFO - ---------------------------------------------
2024-10-13 16:32 - INFO - ---------------------------------------------
2024-10-13 16:32 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 16:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97899
2024-10-13 16:32 - INFO - 	 Train Loss: 0.098
2024-10-13 16:32 - INFO - 	 Val. Loss: 0.085
2024-10-13 16:32 - INFO - 	 ROC-AUC: 0.979
2024-10-13 16:32 - INFO - 	 PR-AUC: 0.815
2024-10-13 16:32 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 16:32 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 16:32 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 16:32 - INFO - 	 Best PR-AUC: 0.815
2024-10-13 16:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 16:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-10-13 16:32 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 16:32 - INFO - ---------------------------------------------
2024-10-13 16:32 - INFO - ---------------------------------------------
2024-10-13 16:32 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 16:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98312
2024-10-13 16:32 - INFO - 	 Train Loss: 0.086
2024-10-13 16:32 - INFO - 	 Val. Loss: 0.072
2024-10-13 16:32 - INFO - 	 ROC-AUC: 0.983
2024-10-13 16:32 - INFO - 	 PR-AUC: 0.843
2024-10-13 16:32 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 16:32 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 16:32 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 16:32 - INFO - 	 Best PR-AUC: 0.843
2024-10-13 16:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 16:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 16:32 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 16:32 - INFO - ---------------------------------------------
2024-10-13 16:33 - INFO - ---------------------------------------------
2024-10-13 16:33 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 16:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98383
2024-10-13 16:33 - INFO - 	 Train Loss: 0.080
2024-10-13 16:33 - INFO - 	 Val. Loss: 0.074
2024-10-13 16:33 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:33 - INFO - 	 PR-AUC: 0.846
2024-10-13 16:33 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 16:33 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 16:33 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 16:33 - INFO - 	 Best PR-AUC: 0.846
2024-10-13 16:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 16:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-13 16:33 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 16:33 - INFO - ---------------------------------------------
2024-10-13 16:33 - INFO - ---------------------------------------------
2024-10-13 16:33 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 16:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98596
2024-10-13 16:33 - INFO - 	 Train Loss: 0.076
2024-10-13 16:33 - INFO - 	 Val. Loss: 0.066
2024-10-13 16:33 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:33 - INFO - 	 PR-AUC: 0.878
2024-10-13 16:33 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 16:33 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 16:33 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:33 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 16:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-13 16:33 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 16:33 - INFO - ---------------------------------------------
2024-10-13 16:34 - INFO - ---------------------------------------------
2024-10-13 16:34 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 16:34 - INFO - 	 Train Loss: 0.075
2024-10-13 16:34 - INFO - 	 Val. Loss: 0.067
2024-10-13 16:34 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:34 - INFO - 	 PR-AUC: 0.870
2024-10-13 16:34 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 16:34 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 16:34 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:34 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 16:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-13 16:34 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 16:34 - INFO - ---------------------------------------------
2024-10-13 16:35 - INFO - ---------------------------------------------
2024-10-13 16:35 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 16:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98666
2024-10-13 16:35 - INFO - 	 Train Loss: 0.072
2024-10-13 16:35 - INFO - 	 Val. Loss: 0.063
2024-10-13 16:35 - INFO - 	 ROC-AUC: 0.987
2024-10-13 16:35 - INFO - 	 PR-AUC: 0.880
2024-10-13 16:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:35 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 16:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 16:35 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 16:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-13 16:35 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 16:35 - INFO - ---------------------------------------------
2024-10-13 16:35 - INFO - ---------------------------------------------
2024-10-13 16:35 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 16:35 - INFO - 	 Train Loss: 0.071
2024-10-13 16:35 - INFO - 	 Val. Loss: 0.064
2024-10-13 16:35 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:35 - INFO - 	 PR-AUC: 0.871
2024-10-13 16:35 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 16:35 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 16:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 16:35 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 16:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-13 16:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 16:35 - INFO - ---------------------------------------------
2024-10-13 16:36 - INFO - ---------------------------------------------
2024-10-13 16:36 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 16:36 - INFO - 	 Train Loss: 0.070
2024-10-13 16:36 - INFO - 	 Val. Loss: 0.064
2024-10-13 16:36 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:36 - INFO - 	 PR-AUC: 0.873
2024-10-13 16:36 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:36 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 16:36 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 16:36 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 16:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-13 16:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 16:36 - INFO - ---------------------------------------------
2024-10-13 16:36 - INFO - ---------------------------------------------
2024-10-13 16:36 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 16:36 - INFO - 	 Train Loss: 0.070
2024-10-13 16:36 - INFO - 	 Val. Loss: 0.064
2024-10-13 16:36 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:36 - INFO - 	 PR-AUC: 0.870
2024-10-13 16:36 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 16:36 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 16:36 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 16:36 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 16:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-13 16:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 16:36 - INFO - ---------------------------------------------
2024-10-13 16:38 - INFO - Fit the preprocessing pipeline
2024-10-13 16:38 - INFO - Training using device: cuda
2024-10-13 16:38 - INFO - Creating generators
2024-10-13 16:38 - INFO - The model has 651,257 trainable parameters
2024-10-13 16:38 - INFO - * Model:
2024-10-13 16:38 - INFO - * -----------
2024-10-13 16:38 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 16:38 - INFO - * -----------
2024-10-13 16:38 - INFO - Evaluating model based on: rocauc
2024-10-13 16:38 - INFO - Training..

2024-10-13 16:38 - INFO - ---------------------------------------------
2024-10-13 16:38 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 16:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9699
2024-10-13 16:38 - INFO - 	 Train Loss: 0.187
2024-10-13 16:38 - INFO - 	 Val. Loss: 0.099
2024-10-13 16:38 - INFO - 	 ROC-AUC: 0.970
2024-10-13 16:38 - INFO - 	 PR-AUC: 0.736
2024-10-13 16:38 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-13 16:38 - INFO - 	 Best Val. Loss: 0.099
2024-10-13 16:38 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 16:38 - INFO - 	 Best PR-AUC: 0.736
2024-10-13 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-13 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-13 16:38 - INFO - 	 Best Recall for 0.4 precision: 0.938
2024-10-13 16:38 - INFO - ---------------------------------------------
2024-10-13 16:39 - INFO - ---------------------------------------------
2024-10-13 16:39 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 16:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98005
2024-10-13 16:39 - INFO - 	 Train Loss: 0.098
2024-10-13 16:39 - INFO - 	 Val. Loss: 0.080
2024-10-13 16:39 - INFO - 	 ROC-AUC: 0.980
2024-10-13 16:39 - INFO - 	 PR-AUC: 0.820
2024-10-13 16:39 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 16:39 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 16:39 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 16:39 - INFO - 	 Best PR-AUC: 0.820
2024-10-13 16:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 16:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-13 16:39 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 16:39 - INFO - ---------------------------------------------
2024-10-13 16:39 - INFO - ---------------------------------------------
2024-10-13 16:39 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 16:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98241
2024-10-13 16:39 - INFO - 	 Train Loss: 0.086
2024-10-13 16:39 - INFO - 	 Val. Loss: 0.073
2024-10-13 16:39 - INFO - 	 ROC-AUC: 0.982
2024-10-13 16:39 - INFO - 	 PR-AUC: 0.844
2024-10-13 16:39 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 16:39 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 16:39 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 16:39 - INFO - 	 Best PR-AUC: 0.844
2024-10-13 16:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 16:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 16:39 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 16:39 - INFO - ---------------------------------------------
2024-10-13 16:40 - INFO - ---------------------------------------------
2024-10-13 16:40 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 16:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98422
2024-10-13 16:40 - INFO - 	 Train Loss: 0.081
2024-10-13 16:40 - INFO - 	 Val. Loss: 0.070
2024-10-13 16:40 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:40 - INFO - 	 PR-AUC: 0.855
2024-10-13 16:40 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 16:40 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 16:40 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 16:40 - INFO - 	 Best PR-AUC: 0.855
2024-10-13 16:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 16:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 16:40 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 16:40 - INFO - ---------------------------------------------
2024-10-13 16:40 - INFO - ---------------------------------------------
2024-10-13 16:40 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 16:40 - INFO - 	 Train Loss: 0.078
2024-10-13 16:40 - INFO - 	 Val. Loss: 0.069
2024-10-13 16:40 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:40 - INFO - 	 PR-AUC: 0.859
2024-10-13 16:40 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 16:40 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 16:40 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 16:40 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 16:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 16:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 16:40 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 16:40 - INFO - ---------------------------------------------
2024-10-13 16:41 - INFO - ---------------------------------------------
2024-10-13 16:41 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 16:41 - INFO - 	 Train Loss: 0.074
2024-10-13 16:41 - INFO - 	 Val. Loss: 0.070
2024-10-13 16:41 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:41 - INFO - 	 PR-AUC: 0.858
2024-10-13 16:41 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 16:41 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 16:41 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 16:41 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 16:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 16:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 16:41 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 16:41 - INFO - ---------------------------------------------
2024-10-13 16:41 - INFO - ---------------------------------------------
2024-10-13 16:41 - INFO - Epoch: 07 | Time: 0m 34s
2024-10-13 16:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98514
2024-10-13 16:41 - INFO - 	 Train Loss: 0.072
2024-10-13 16:41 - INFO - 	 Val. Loss: 0.068
2024-10-13 16:41 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:41 - INFO - 	 PR-AUC: 0.866
2024-10-13 16:41 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 16:41 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 16:41 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:41 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 16:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 16:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 16:41 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 16:41 - INFO - ---------------------------------------------
2024-10-13 16:42 - INFO - ---------------------------------------------
2024-10-13 16:42 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 16:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9852
2024-10-13 16:42 - INFO - 	 Train Loss: 0.071
2024-10-13 16:42 - INFO - 	 Val. Loss: 0.067
2024-10-13 16:42 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:42 - INFO - 	 PR-AUC: 0.860
2024-10-13 16:42 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:42 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 16:42 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:42 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 16:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 16:42 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 16:42 - INFO - ---------------------------------------------
2024-10-13 16:43 - INFO - ---------------------------------------------
2024-10-13 16:43 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 16:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98597
2024-10-13 16:43 - INFO - 	 Train Loss: 0.070
2024-10-13 16:43 - INFO - 	 Val. Loss: 0.065
2024-10-13 16:43 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:43 - INFO - 	 PR-AUC: 0.873
2024-10-13 16:43 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 16:43 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 16:43 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:43 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 16:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-13 16:43 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 16:43 - INFO - ---------------------------------------------
2024-10-13 16:43 - INFO - ---------------------------------------------
2024-10-13 16:43 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 16:43 - INFO - 	 Train Loss: 0.069
2024-10-13 16:43 - INFO - 	 Val. Loss: 0.066
2024-10-13 16:43 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:43 - INFO - 	 PR-AUC: 0.876
2024-10-13 16:43 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 16:43 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 16:43 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 16:43 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 16:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-13 16:43 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 16:43 - INFO - ---------------------------------------------
2024-10-13 16:45 - INFO - Fit the preprocessing pipeline
2024-10-13 16:45 - INFO - Training using device: cuda
2024-10-13 16:45 - INFO - Creating generators
2024-10-13 16:45 - INFO - The model has 651,257 trainable parameters
2024-10-13 16:45 - INFO - * Model:
2024-10-13 16:45 - INFO - * -----------
2024-10-13 16:45 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 16:45 - INFO - * -----------
2024-10-13 16:45 - INFO - Evaluating model based on: rocauc
2024-10-13 16:45 - INFO - Training..

2024-10-13 16:45 - INFO - ---------------------------------------------
2024-10-13 16:45 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 16:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97461
2024-10-13 16:45 - INFO - 	 Train Loss: 0.181
2024-10-13 16:45 - INFO - 	 Val. Loss: 0.089
2024-10-13 16:45 - INFO - 	 ROC-AUC: 0.975
2024-10-13 16:45 - INFO - 	 PR-AUC: 0.784
2024-10-13 16:45 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-13 16:45 - INFO - 	 Best Val. Loss: 0.089
2024-10-13 16:45 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 16:45 - INFO - 	 Best PR-AUC: 0.784
2024-10-13 16:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 16:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.743
2024-10-13 16:45 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-13 16:45 - INFO - ---------------------------------------------
2024-10-13 16:46 - INFO - ---------------------------------------------
2024-10-13 16:46 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 16:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98154
2024-10-13 16:46 - INFO - 	 Train Loss: 0.095
2024-10-13 16:46 - INFO - 	 Val. Loss: 0.079
2024-10-13 16:46 - INFO - 	 ROC-AUC: 0.982
2024-10-13 16:46 - INFO - 	 PR-AUC: 0.838
2024-10-13 16:46 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 16:46 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 16:46 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 16:46 - INFO - 	 Best PR-AUC: 0.838
2024-10-13 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-13 16:46 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 16:46 - INFO - ---------------------------------------------
2024-10-13 16:46 - INFO - ---------------------------------------------
2024-10-13 16:46 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 16:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9826
2024-10-13 16:46 - INFO - 	 Train Loss: 0.084
2024-10-13 16:46 - INFO - 	 Val. Loss: 0.074
2024-10-13 16:46 - INFO - 	 ROC-AUC: 0.983
2024-10-13 16:46 - INFO - 	 PR-AUC: 0.846
2024-10-13 16:46 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 16:46 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 16:46 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 16:46 - INFO - 	 Best PR-AUC: 0.846
2024-10-13 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 16:46 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 16:46 - INFO - ---------------------------------------------
2024-10-13 16:47 - INFO - ---------------------------------------------
2024-10-13 16:47 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 16:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98304
2024-10-13 16:47 - INFO - 	 Train Loss: 0.079
2024-10-13 16:47 - INFO - 	 Val. Loss: 0.071
2024-10-13 16:47 - INFO - 	 ROC-AUC: 0.983
2024-10-13 16:47 - INFO - 	 PR-AUC: 0.853
2024-10-13 16:47 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 16:47 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 16:47 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 16:47 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 16:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 16:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 16:47 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 16:47 - INFO - ---------------------------------------------
2024-10-13 16:47 - INFO - ---------------------------------------------
2024-10-13 16:47 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 16:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98426
2024-10-13 16:47 - INFO - 	 Train Loss: 0.076
2024-10-13 16:47 - INFO - 	 Val. Loss: 0.067
2024-10-13 16:47 - INFO - 	 ROC-AUC: 0.984
2024-10-13 16:47 - INFO - 	 PR-AUC: 0.866
2024-10-13 16:47 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:47 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 16:47 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 16:47 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 16:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 16:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 16:47 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 16:47 - INFO - ---------------------------------------------
2024-10-13 16:48 - INFO - ---------------------------------------------
2024-10-13 16:48 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 16:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98521
2024-10-13 16:48 - INFO - 	 Train Loss: 0.075
2024-10-13 16:48 - INFO - 	 Val. Loss: 0.069
2024-10-13 16:48 - INFO - 	 ROC-AUC: 0.985
2024-10-13 16:48 - INFO - 	 PR-AUC: 0.863
2024-10-13 16:48 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 16:48 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 16:48 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 16:48 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 16:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 16:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 16:48 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 16:48 - INFO - ---------------------------------------------
2024-10-13 16:48 - INFO - ---------------------------------------------
2024-10-13 16:48 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 16:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98741
2024-10-13 16:48 - INFO - 	 Train Loss: 0.071
2024-10-13 16:48 - INFO - 	 Val. Loss: 0.061
2024-10-13 16:48 - INFO - 	 ROC-AUC: 0.987
2024-10-13 16:48 - INFO - 	 PR-AUC: 0.884
2024-10-13 16:48 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-13 16:48 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 16:48 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 16:48 - INFO - 	 Best PR-AUC: 0.884
2024-10-13 16:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 16:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-13 16:48 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 16:48 - INFO - ---------------------------------------------
2024-10-13 16:49 - INFO - ---------------------------------------------
2024-10-13 16:49 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 16:49 - INFO - 	 Train Loss: 0.070
2024-10-13 16:49 - INFO - 	 Val. Loss: 0.065
2024-10-13 16:49 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:49 - INFO - 	 PR-AUC: 0.874
2024-10-13 16:49 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-13 16:49 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 16:49 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 16:49 - INFO - 	 Best PR-AUC: 0.884
2024-10-13 16:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 16:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-13 16:49 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 16:49 - INFO - ---------------------------------------------
2024-10-13 16:50 - INFO - ---------------------------------------------
2024-10-13 16:50 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 16:50 - INFO - 	 Train Loss: 0.069
2024-10-13 16:50 - INFO - 	 Val. Loss: 0.066
2024-10-13 16:50 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:50 - INFO - 	 PR-AUC: 0.871
2024-10-13 16:50 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 16:50 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 16:50 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 16:50 - INFO - 	 Best PR-AUC: 0.884
2024-10-13 16:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 16:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-13 16:50 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 16:50 - INFO - ---------------------------------------------
2024-10-13 16:50 - INFO - ---------------------------------------------
2024-10-13 16:50 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 16:50 - INFO - 	 Train Loss: 0.068
2024-10-13 16:50 - INFO - 	 Val. Loss: 0.064
2024-10-13 16:50 - INFO - 	 ROC-AUC: 0.986
2024-10-13 16:50 - INFO - 	 PR-AUC: 0.873
2024-10-13 16:50 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 16:50 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 16:50 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 16:50 - INFO - 	 Best PR-AUC: 0.884
2024-10-13 16:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 16:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-13 16:50 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 16:50 - INFO - ---------------------------------------------
