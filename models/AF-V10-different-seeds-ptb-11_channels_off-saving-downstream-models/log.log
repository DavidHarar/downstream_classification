2024-10-25 19:27 - INFO - Fit the preprocessing pipeline
2024-10-25 19:27 - INFO - Training using device: cuda
2024-10-25 19:27 - INFO - Creating generators
2024-10-25 19:27 - INFO - The model has 651,257 trainable parameters
2024-10-25 19:27 - INFO - * Model:
2024-10-25 19:27 - INFO - * -----------
2024-10-25 19:27 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 19:27 - INFO - * -----------
2024-10-25 19:27 - INFO - Evaluating model based on: rocauc
2024-10-25 19:27 - INFO - Training..

2024-10-25 19:28 - INFO - ---------------------------------------------
2024-10-25 19:28 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 19:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.91045
2024-10-25 19:28 - INFO - 	 Train Loss: 0.227
2024-10-25 19:28 - INFO - 	 Val. Loss: 0.215
2024-10-25 19:28 - INFO - 	 ROC-AUC: 0.910
2024-10-25 19:28 - INFO - 	 PR-AUC: 0.412
2024-10-25 19:28 - INFO - 	 Recall for 0.4 precision: 0.656
2024-10-25 19:28 - INFO - 	 Best Val. Loss: 0.215
2024-10-25 19:28 - INFO - 	 Best ROC-AUC: 0.910
2024-10-25 19:28 - INFO - 	 Best PR-AUC: 0.412
2024-10-25 19:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-10-25 19:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-10-25 19:28 - INFO - 	 Best Recall for 0.4 precision: 0.656
2024-10-25 19:28 - INFO - ---------------------------------------------
2024-10-25 19:29 - INFO - ---------------------------------------------
2024-10-25 19:29 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 19:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95515
2024-10-25 19:29 - INFO - 	 Train Loss: 0.143
2024-10-25 19:29 - INFO - 	 Val. Loss: 0.127
2024-10-25 19:29 - INFO - 	 ROC-AUC: 0.955
2024-10-25 19:29 - INFO - 	 PR-AUC: 0.603
2024-10-25 19:29 - INFO - 	 Recall for 0.4 precision: 0.885
2024-10-25 19:29 - INFO - 	 Best Val. Loss: 0.127
2024-10-25 19:29 - INFO - 	 Best ROC-AUC: 0.955
2024-10-25 19:29 - INFO - 	 Best PR-AUC: 0.603
2024-10-25 19:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-10-25 19:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.607
2024-10-25 19:29 - INFO - 	 Best Recall for 0.4 precision: 0.885
2024-10-25 19:29 - INFO - ---------------------------------------------
2024-10-25 19:29 - INFO - ---------------------------------------------
2024-10-25 19:29 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 19:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96595
2024-10-25 19:29 - INFO - 	 Train Loss: 0.128
2024-10-25 19:29 - INFO - 	 Val. Loss: 0.107
2024-10-25 19:29 - INFO - 	 ROC-AUC: 0.966
2024-10-25 19:29 - INFO - 	 PR-AUC: 0.684
2024-10-25 19:29 - INFO - 	 Recall for 0.4 precision: 0.925
2024-10-25 19:29 - INFO - 	 Best Val. Loss: 0.107
2024-10-25 19:29 - INFO - 	 Best ROC-AUC: 0.966
2024-10-25 19:29 - INFO - 	 Best PR-AUC: 0.684
2024-10-25 19:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-25 19:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.705
2024-10-25 19:29 - INFO - 	 Best Recall for 0.4 precision: 0.925
2024-10-25 19:29 - INFO - ---------------------------------------------
2024-10-25 19:30 - INFO - ---------------------------------------------
2024-10-25 19:30 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 19:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96655
2024-10-25 19:30 - INFO - 	 Train Loss: 0.120
2024-10-25 19:30 - INFO - 	 Val. Loss: 0.102
2024-10-25 19:30 - INFO - 	 ROC-AUC: 0.967
2024-10-25 19:30 - INFO - 	 PR-AUC: 0.718
2024-10-25 19:30 - INFO - 	 Recall for 0.4 precision: 0.927
2024-10-25 19:30 - INFO - 	 Best Val. Loss: 0.102
2024-10-25 19:30 - INFO - 	 Best ROC-AUC: 0.967
2024-10-25 19:30 - INFO - 	 Best PR-AUC: 0.718
2024-10-25 19:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-25 19:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.730
2024-10-25 19:30 - INFO - 	 Best Recall for 0.4 precision: 0.927
2024-10-25 19:30 - INFO - ---------------------------------------------
2024-10-25 19:30 - INFO - ---------------------------------------------
2024-10-25 19:30 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 19:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96753
2024-10-25 19:30 - INFO - 	 Train Loss: 0.115
2024-10-25 19:30 - INFO - 	 Val. Loss: 0.110
2024-10-25 19:30 - INFO - 	 ROC-AUC: 0.968
2024-10-25 19:30 - INFO - 	 PR-AUC: 0.724
2024-10-25 19:30 - INFO - 	 Recall for 0.4 precision: 0.933
2024-10-25 19:30 - INFO - 	 Best Val. Loss: 0.102
2024-10-25 19:30 - INFO - 	 Best ROC-AUC: 0.968
2024-10-25 19:30 - INFO - 	 Best PR-AUC: 0.724
2024-10-25 19:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 19:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.719
2024-10-25 19:30 - INFO - 	 Best Recall for 0.4 precision: 0.933
2024-10-25 19:30 - INFO - ---------------------------------------------
2024-10-25 19:31 - INFO - ---------------------------------------------
2024-10-25 19:31 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 19:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96956
2024-10-25 19:31 - INFO - 	 Train Loss: 0.114
2024-10-25 19:31 - INFO - 	 Val. Loss: 0.097
2024-10-25 19:31 - INFO - 	 ROC-AUC: 0.970
2024-10-25 19:31 - INFO - 	 PR-AUC: 0.750
2024-10-25 19:31 - INFO - 	 Recall for 0.4 precision: 0.945
2024-10-25 19:31 - INFO - 	 Best Val. Loss: 0.097
2024-10-25 19:31 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 19:31 - INFO - 	 Best PR-AUC: 0.750
2024-10-25 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-25 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.721
2024-10-25 19:31 - INFO - 	 Best Recall for 0.4 precision: 0.945
2024-10-25 19:31 - INFO - ---------------------------------------------
2024-10-25 19:31 - INFO - ---------------------------------------------
2024-10-25 19:31 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 19:31 - INFO - 	 Train Loss: 0.110
2024-10-25 19:31 - INFO - 	 Val. Loss: 0.105
2024-10-25 19:31 - INFO - 	 ROC-AUC: 0.968
2024-10-25 19:31 - INFO - 	 PR-AUC: 0.733
2024-10-25 19:31 - INFO - 	 Recall for 0.4 precision: 0.929
2024-10-25 19:31 - INFO - 	 Best Val. Loss: 0.097
2024-10-25 19:31 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 19:31 - INFO - 	 Best PR-AUC: 0.750
2024-10-25 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-25 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.721
2024-10-25 19:31 - INFO - 	 Best Recall for 0.4 precision: 0.945
2024-10-25 19:31 - INFO - ---------------------------------------------
2024-10-25 19:32 - INFO - ---------------------------------------------
2024-10-25 19:32 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 19:32 - INFO - 	 Train Loss: 0.107
2024-10-25 19:32 - INFO - 	 Val. Loss: 0.100
2024-10-25 19:32 - INFO - 	 ROC-AUC: 0.969
2024-10-25 19:32 - INFO - 	 PR-AUC: 0.720
2024-10-25 19:32 - INFO - 	 Recall for 0.4 precision: 0.948
2024-10-25 19:32 - INFO - 	 Best Val. Loss: 0.097
2024-10-25 19:32 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 19:32 - INFO - 	 Best PR-AUC: 0.750
2024-10-25 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-25 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.721
2024-10-25 19:32 - INFO - 	 Best Recall for 0.4 precision: 0.948
2024-10-25 19:32 - INFO - ---------------------------------------------
2024-10-25 19:32 - INFO - ---------------------------------------------
2024-10-25 19:32 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 19:32 - INFO - 	 Train Loss: 0.108
2024-10-25 19:32 - INFO - 	 Val. Loss: 0.103
2024-10-25 19:32 - INFO - 	 ROC-AUC: 0.968
2024-10-25 19:32 - INFO - 	 PR-AUC: 0.748
2024-10-25 19:32 - INFO - 	 Recall for 0.4 precision: 0.946
2024-10-25 19:32 - INFO - 	 Best Val. Loss: 0.097
2024-10-25 19:32 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 19:32 - INFO - 	 Best PR-AUC: 0.750
2024-10-25 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-25 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.721
2024-10-25 19:32 - INFO - 	 Best Recall for 0.4 precision: 0.948
2024-10-25 19:32 - INFO - ---------------------------------------------
2024-10-25 19:33 - INFO - ---------------------------------------------
2024-10-25 19:33 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 19:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9721
2024-10-25 19:33 - INFO - 	 Train Loss: 0.106
2024-10-25 19:33 - INFO - 	 Val. Loss: 0.094
2024-10-25 19:33 - INFO - 	 ROC-AUC: 0.972
2024-10-25 19:33 - INFO - 	 PR-AUC: 0.760
2024-10-25 19:33 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-25 19:33 - INFO - 	 Best Val. Loss: 0.094
2024-10-25 19:33 - INFO - 	 Best ROC-AUC: 0.972
2024-10-25 19:33 - INFO - 	 Best PR-AUC: 0.760
2024-10-25 19:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 19:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.756
2024-10-25 19:33 - INFO - 	 Best Recall for 0.4 precision: 0.948
2024-10-25 19:33 - INFO - ---------------------------------------------
2024-10-25 19:34 - INFO - Fit the preprocessing pipeline
2024-10-25 19:34 - INFO - Training using device: cuda
2024-10-25 19:34 - INFO - Creating generators
2024-10-25 19:34 - INFO - The model has 651,257 trainable parameters
2024-10-25 19:34 - INFO - * Model:
2024-10-25 19:34 - INFO - * -----------
2024-10-25 19:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 19:34 - INFO - * -----------
2024-10-25 19:34 - INFO - Evaluating model based on: rocauc
2024-10-25 19:34 - INFO - Training..

2024-10-25 19:35 - INFO - ---------------------------------------------
2024-10-25 19:35 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 19:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92732
2024-10-25 19:35 - INFO - 	 Train Loss: 0.217
2024-10-25 19:35 - INFO - 	 Val. Loss: 0.182
2024-10-25 19:35 - INFO - 	 ROC-AUC: 0.927
2024-10-25 19:35 - INFO - 	 PR-AUC: 0.489
2024-10-25 19:35 - INFO - 	 Recall for 0.4 precision: 0.730
2024-10-25 19:35 - INFO - 	 Best Val. Loss: 0.182
2024-10-25 19:35 - INFO - 	 Best ROC-AUC: 0.927
2024-10-25 19:35 - INFO - 	 Best PR-AUC: 0.489
2024-10-25 19:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.923
2024-10-25 19:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.503
2024-10-25 19:35 - INFO - 	 Best Recall for 0.4 precision: 0.730
2024-10-25 19:35 - INFO - ---------------------------------------------
2024-10-25 19:35 - INFO - ---------------------------------------------
2024-10-25 19:35 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 19:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94888
2024-10-25 19:35 - INFO - 	 Train Loss: 0.142
2024-10-25 19:35 - INFO - 	 Val. Loss: 0.148
2024-10-25 19:35 - INFO - 	 ROC-AUC: 0.949
2024-10-25 19:35 - INFO - 	 PR-AUC: 0.552
2024-10-25 19:35 - INFO - 	 Recall for 0.4 precision: 0.005
2024-10-25 19:35 - INFO - 	 Best Val. Loss: 0.148
2024-10-25 19:35 - INFO - 	 Best ROC-AUC: 0.949
2024-10-25 19:35 - INFO - 	 Best PR-AUC: 0.552
2024-10-25 19:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-10-25 19:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.565
2024-10-25 19:35 - INFO - 	 Best Recall for 0.4 precision: 0.730
2024-10-25 19:35 - INFO - ---------------------------------------------
2024-10-25 19:36 - INFO - ---------------------------------------------
2024-10-25 19:36 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 19:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96301
2024-10-25 19:36 - INFO - 	 Train Loss: 0.126
2024-10-25 19:36 - INFO - 	 Val. Loss: 0.111
2024-10-25 19:36 - INFO - 	 ROC-AUC: 0.963
2024-10-25 19:36 - INFO - 	 PR-AUC: 0.665
2024-10-25 19:36 - INFO - 	 Recall for 0.4 precision: 0.911
2024-10-25 19:36 - INFO - 	 Best Val. Loss: 0.111
2024-10-25 19:36 - INFO - 	 Best ROC-AUC: 0.963
2024-10-25 19:36 - INFO - 	 Best PR-AUC: 0.665
2024-10-25 19:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-10-25 19:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.667
2024-10-25 19:36 - INFO - 	 Best Recall for 0.4 precision: 0.911
2024-10-25 19:36 - INFO - ---------------------------------------------
2024-10-25 19:36 - INFO - ---------------------------------------------
2024-10-25 19:36 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 19:36 - INFO - 	 Train Loss: 0.119
2024-10-25 19:36 - INFO - 	 Val. Loss: 0.112
2024-10-25 19:36 - INFO - 	 ROC-AUC: 0.959
2024-10-25 19:36 - INFO - 	 PR-AUC: 0.677
2024-10-25 19:36 - INFO - 	 Recall for 0.4 precision: 0.902
2024-10-25 19:36 - INFO - 	 Best Val. Loss: 0.111
2024-10-25 19:36 - INFO - 	 Best ROC-AUC: 0.963
2024-10-25 19:36 - INFO - 	 Best PR-AUC: 0.677
2024-10-25 19:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-10-25 19:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.663
2024-10-25 19:36 - INFO - 	 Best Recall for 0.4 precision: 0.911
2024-10-25 19:36 - INFO - ---------------------------------------------
2024-10-25 19:37 - INFO - ---------------------------------------------
2024-10-25 19:37 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 19:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96658
2024-10-25 19:37 - INFO - 	 Train Loss: 0.116
2024-10-25 19:37 - INFO - 	 Val. Loss: 0.102
2024-10-25 19:37 - INFO - 	 ROC-AUC: 0.967
2024-10-25 19:37 - INFO - 	 PR-AUC: 0.722
2024-10-25 19:37 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-25 19:37 - INFO - 	 Best Val. Loss: 0.102
2024-10-25 19:37 - INFO - 	 Best ROC-AUC: 0.967
2024-10-25 19:37 - INFO - 	 Best PR-AUC: 0.722
2024-10-25 19:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 19:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.722
2024-10-25 19:37 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-25 19:37 - INFO - ---------------------------------------------
2024-10-25 19:37 - INFO - ---------------------------------------------
2024-10-25 19:37 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 19:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96695
2024-10-25 19:37 - INFO - 	 Train Loss: 0.113
2024-10-25 19:37 - INFO - 	 Val. Loss: 0.102
2024-10-25 19:37 - INFO - 	 ROC-AUC: 0.967
2024-10-25 19:37 - INFO - 	 PR-AUC: 0.721
2024-10-25 19:37 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-25 19:37 - INFO - 	 Best Val. Loss: 0.102
2024-10-25 19:37 - INFO - 	 Best ROC-AUC: 0.967
2024-10-25 19:37 - INFO - 	 Best PR-AUC: 0.722
2024-10-25 19:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-25 19:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.722
2024-10-25 19:37 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-25 19:37 - INFO - ---------------------------------------------
2024-10-25 19:38 - INFO - ---------------------------------------------
2024-10-25 19:38 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 19:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9673
2024-10-25 19:38 - INFO - 	 Train Loss: 0.110
2024-10-25 19:38 - INFO - 	 Val. Loss: 0.101
2024-10-25 19:38 - INFO - 	 ROC-AUC: 0.967
2024-10-25 19:38 - INFO - 	 PR-AUC: 0.723
2024-10-25 19:38 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-25 19:38 - INFO - 	 Best Val. Loss: 0.101
2024-10-25 19:38 - INFO - 	 Best ROC-AUC: 0.967
2024-10-25 19:38 - INFO - 	 Best PR-AUC: 0.723
2024-10-25 19:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-25 19:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-25 19:38 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-25 19:38 - INFO - ---------------------------------------------
2024-10-25 19:39 - INFO - ---------------------------------------------
2024-10-25 19:39 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 19:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96943
2024-10-25 19:39 - INFO - 	 Train Loss: 0.108
2024-10-25 19:39 - INFO - 	 Val. Loss: 0.099
2024-10-25 19:39 - INFO - 	 ROC-AUC: 0.969
2024-10-25 19:39 - INFO - 	 PR-AUC: 0.730
2024-10-25 19:39 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-25 19:39 - INFO - 	 Best Val. Loss: 0.099
2024-10-25 19:39 - INFO - 	 Best ROC-AUC: 0.969
2024-10-25 19:39 - INFO - 	 Best PR-AUC: 0.730
2024-10-25 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.726
2024-10-25 19:39 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-25 19:39 - INFO - ---------------------------------------------
2024-10-25 19:39 - INFO - ---------------------------------------------
2024-10-25 19:39 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 19:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97002
2024-10-25 19:39 - INFO - 	 Train Loss: 0.107
2024-10-25 19:39 - INFO - 	 Val. Loss: 0.098
2024-10-25 19:39 - INFO - 	 ROC-AUC: 0.970
2024-10-25 19:39 - INFO - 	 PR-AUC: 0.730
2024-10-25 19:39 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-25 19:39 - INFO - 	 Best Val. Loss: 0.098
2024-10-25 19:39 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 19:39 - INFO - 	 Best PR-AUC: 0.730
2024-10-25 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-25 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.726
2024-10-25 19:39 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-25 19:39 - INFO - ---------------------------------------------
2024-10-25 19:40 - INFO - ---------------------------------------------
2024-10-25 19:40 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 19:40 - INFO - 	 Train Loss: 0.106
2024-10-25 19:40 - INFO - 	 Val. Loss: 0.099
2024-10-25 19:40 - INFO - 	 ROC-AUC: 0.970
2024-10-25 19:40 - INFO - 	 PR-AUC: 0.725
2024-10-25 19:40 - INFO - 	 Recall for 0.4 precision: 0.945
2024-10-25 19:40 - INFO - 	 Best Val. Loss: 0.098
2024-10-25 19:40 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 19:40 - INFO - 	 Best PR-AUC: 0.730
2024-10-25 19:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-25 19:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.726
2024-10-25 19:40 - INFO - 	 Best Recall for 0.4 precision: 0.945
2024-10-25 19:40 - INFO - ---------------------------------------------
2024-10-25 19:41 - INFO - Fit the preprocessing pipeline
2024-10-25 19:41 - INFO - Training using device: cuda
2024-10-25 19:41 - INFO - Creating generators
2024-10-25 19:41 - INFO - The model has 651,257 trainable parameters
2024-10-25 19:41 - INFO - * Model:
2024-10-25 19:41 - INFO - * -----------
2024-10-25 19:41 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 19:41 - INFO - * -----------
2024-10-25 19:41 - INFO - Evaluating model based on: rocauc
2024-10-25 19:41 - INFO - Training..

2024-10-25 19:42 - INFO - ---------------------------------------------
2024-10-25 19:42 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 19:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90849
2024-10-25 19:42 - INFO - 	 Train Loss: 0.232
2024-10-25 19:42 - INFO - 	 Val. Loss: 0.166
2024-10-25 19:42 - INFO - 	 ROC-AUC: 0.908
2024-10-25 19:42 - INFO - 	 PR-AUC: 0.404
2024-10-25 19:42 - INFO - 	 Recall for 0.4 precision: 0.617
2024-10-25 19:42 - INFO - 	 Best Val. Loss: 0.166
2024-10-25 19:42 - INFO - 	 Best ROC-AUC: 0.908
2024-10-25 19:42 - INFO - 	 Best PR-AUC: 0.404
2024-10-25 19:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.899
2024-10-25 19:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-10-25 19:42 - INFO - 	 Best Recall for 0.4 precision: 0.617
2024-10-25 19:42 - INFO - ---------------------------------------------
2024-10-25 19:42 - INFO - ---------------------------------------------
2024-10-25 19:42 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 19:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95235
2024-10-25 19:42 - INFO - 	 Train Loss: 0.144
2024-10-25 19:42 - INFO - 	 Val. Loss: 0.127
2024-10-25 19:42 - INFO - 	 ROC-AUC: 0.952
2024-10-25 19:42 - INFO - 	 PR-AUC: 0.605
2024-10-25 19:42 - INFO - 	 Recall for 0.4 precision: 0.866
2024-10-25 19:42 - INFO - 	 Best Val. Loss: 0.127
2024-10-25 19:42 - INFO - 	 Best ROC-AUC: 0.952
2024-10-25 19:42 - INFO - 	 Best PR-AUC: 0.605
2024-10-25 19:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-10-25 19:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.625
2024-10-25 19:42 - INFO - 	 Best Recall for 0.4 precision: 0.866
2024-10-25 19:42 - INFO - ---------------------------------------------
2024-10-25 19:43 - INFO - ---------------------------------------------
2024-10-25 19:43 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 19:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95943
2024-10-25 19:43 - INFO - 	 Train Loss: 0.126
2024-10-25 19:43 - INFO - 	 Val. Loss: 0.114
2024-10-25 19:43 - INFO - 	 ROC-AUC: 0.959
2024-10-25 19:43 - INFO - 	 PR-AUC: 0.669
2024-10-25 19:43 - INFO - 	 Recall for 0.4 precision: 0.894
2024-10-25 19:43 - INFO - 	 Best Val. Loss: 0.114
2024-10-25 19:43 - INFO - 	 Best ROC-AUC: 0.959
2024-10-25 19:43 - INFO - 	 Best PR-AUC: 0.669
2024-10-25 19:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-25 19:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.676
2024-10-25 19:43 - INFO - 	 Best Recall for 0.4 precision: 0.894
2024-10-25 19:43 - INFO - ---------------------------------------------
2024-10-25 19:43 - INFO - ---------------------------------------------
2024-10-25 19:43 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 19:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96924
2024-10-25 19:43 - INFO - 	 Train Loss: 0.120
2024-10-25 19:43 - INFO - 	 Val. Loss: 0.105
2024-10-25 19:43 - INFO - 	 ROC-AUC: 0.969
2024-10-25 19:43 - INFO - 	 PR-AUC: 0.733
2024-10-25 19:43 - INFO - 	 Recall for 0.4 precision: 0.930
2024-10-25 19:43 - INFO - 	 Best Val. Loss: 0.105
2024-10-25 19:43 - INFO - 	 Best ROC-AUC: 0.969
2024-10-25 19:43 - INFO - 	 Best PR-AUC: 0.733
2024-10-25 19:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-25 19:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.705
2024-10-25 19:43 - INFO - 	 Best Recall for 0.4 precision: 0.930
2024-10-25 19:43 - INFO - ---------------------------------------------
2024-10-25 19:44 - INFO - ---------------------------------------------
2024-10-25 19:44 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 19:44 - INFO - 	 Train Loss: 0.116
2024-10-25 19:44 - INFO - 	 Val. Loss: 0.102
2024-10-25 19:44 - INFO - 	 ROC-AUC: 0.969
2024-10-25 19:44 - INFO - 	 PR-AUC: 0.730
2024-10-25 19:44 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-25 19:44 - INFO - 	 Best Val. Loss: 0.102
2024-10-25 19:44 - INFO - 	 Best ROC-AUC: 0.969
2024-10-25 19:44 - INFO - 	 Best PR-AUC: 0.733
2024-10-25 19:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-25 19:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.705
2024-10-25 19:44 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-25 19:44 - INFO - ---------------------------------------------
2024-10-25 19:44 - INFO - ---------------------------------------------
2024-10-25 19:44 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 19:44 - INFO - 	 Train Loss: 0.112
2024-10-25 19:44 - INFO - 	 Val. Loss: 0.103
2024-10-25 19:44 - INFO - 	 ROC-AUC: 0.967
2024-10-25 19:44 - INFO - 	 PR-AUC: 0.726
2024-10-25 19:44 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-25 19:44 - INFO - 	 Best Val. Loss: 0.102
2024-10-25 19:44 - INFO - 	 Best ROC-AUC: 0.969
2024-10-25 19:44 - INFO - 	 Best PR-AUC: 0.733
2024-10-25 19:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-25 19:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.705
2024-10-25 19:44 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-25 19:44 - INFO - ---------------------------------------------
2024-10-25 19:45 - INFO - ---------------------------------------------
2024-10-25 19:45 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 19:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97161
2024-10-25 19:45 - INFO - 	 Train Loss: 0.110
2024-10-25 19:45 - INFO - 	 Val. Loss: 0.093
2024-10-25 19:45 - INFO - 	 ROC-AUC: 0.972
2024-10-25 19:45 - INFO - 	 PR-AUC: 0.764
2024-10-25 19:45 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-25 19:45 - INFO - 	 Best Val. Loss: 0.093
2024-10-25 19:45 - INFO - 	 Best ROC-AUC: 0.972
2024-10-25 19:45 - INFO - 	 Best PR-AUC: 0.764
2024-10-25 19:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 19:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-10-25 19:45 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-25 19:45 - INFO - ---------------------------------------------
2024-10-25 19:45 - INFO - ---------------------------------------------
2024-10-25 19:45 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 19:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97276
2024-10-25 19:45 - INFO - 	 Train Loss: 0.108
2024-10-25 19:45 - INFO - 	 Val. Loss: 0.093
2024-10-25 19:45 - INFO - 	 ROC-AUC: 0.973
2024-10-25 19:45 - INFO - 	 PR-AUC: 0.756
2024-10-25 19:45 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-25 19:45 - INFO - 	 Best Val. Loss: 0.093
2024-10-25 19:45 - INFO - 	 Best ROC-AUC: 0.973
2024-10-25 19:45 - INFO - 	 Best PR-AUC: 0.764
2024-10-25 19:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 19:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-10-25 19:45 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-25 19:45 - INFO - ---------------------------------------------
2024-10-25 19:46 - INFO - ---------------------------------------------
2024-10-25 19:46 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 19:46 - INFO - 	 Train Loss: 0.107
2024-10-25 19:46 - INFO - 	 Val. Loss: 0.098
2024-10-25 19:46 - INFO - 	 ROC-AUC: 0.970
2024-10-25 19:46 - INFO - 	 PR-AUC: 0.720
2024-10-25 19:46 - INFO - 	 Recall for 0.4 precision: 0.950
2024-10-25 19:46 - INFO - 	 Best Val. Loss: 0.093
2024-10-25 19:46 - INFO - 	 Best ROC-AUC: 0.973
2024-10-25 19:46 - INFO - 	 Best PR-AUC: 0.764
2024-10-25 19:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 19:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-10-25 19:46 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-25 19:46 - INFO - ---------------------------------------------
2024-10-25 19:46 - INFO - ---------------------------------------------
2024-10-25 19:46 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 19:46 - INFO - 	 Train Loss: 0.106
2024-10-25 19:46 - INFO - 	 Val. Loss: 0.096
2024-10-25 19:46 - INFO - 	 ROC-AUC: 0.971
2024-10-25 19:46 - INFO - 	 PR-AUC: 0.752
2024-10-25 19:46 - INFO - 	 Recall for 0.4 precision: 0.941
2024-10-25 19:46 - INFO - 	 Best Val. Loss: 0.093
2024-10-25 19:46 - INFO - 	 Best ROC-AUC: 0.973
2024-10-25 19:46 - INFO - 	 Best PR-AUC: 0.764
2024-10-25 19:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 19:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-10-25 19:46 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-25 19:46 - INFO - ---------------------------------------------
2024-10-25 19:48 - INFO - Fit the preprocessing pipeline
2024-10-25 19:48 - INFO - Training using device: cuda
2024-10-25 19:48 - INFO - Creating generators
2024-10-25 19:48 - INFO - The model has 651,257 trainable parameters
2024-10-25 19:48 - INFO - * Model:
2024-10-25 19:48 - INFO - * -----------
2024-10-25 19:48 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 19:48 - INFO - * -----------
2024-10-25 19:48 - INFO - Evaluating model based on: rocauc
2024-10-25 19:48 - INFO - Training..

2024-10-25 19:48 - INFO - ---------------------------------------------
2024-10-25 19:48 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 19:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9308
2024-10-25 19:48 - INFO - 	 Train Loss: 0.230
2024-10-25 19:48 - INFO - 	 Val. Loss: 0.149
2024-10-25 19:48 - INFO - 	 ROC-AUC: 0.931
2024-10-25 19:48 - INFO - 	 PR-AUC: 0.451
2024-10-25 19:48 - INFO - 	 Recall for 0.4 precision: 0.015
2024-10-25 19:48 - INFO - 	 Best Val. Loss: 0.149
2024-10-25 19:48 - INFO - 	 Best ROC-AUC: 0.931
2024-10-25 19:48 - INFO - 	 Best PR-AUC: 0.451
2024-10-25 19:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-10-25 19:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.470
2024-10-25 19:48 - INFO - 	 Best Recall for 0.4 precision: 0.015
2024-10-25 19:48 - INFO - ---------------------------------------------
2024-10-25 19:49 - INFO - ---------------------------------------------
2024-10-25 19:49 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 19:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95056
2024-10-25 19:49 - INFO - 	 Train Loss: 0.141
2024-10-25 19:49 - INFO - 	 Val. Loss: 0.123
2024-10-25 19:49 - INFO - 	 ROC-AUC: 0.951
2024-10-25 19:49 - INFO - 	 PR-AUC: 0.601
2024-10-25 19:49 - INFO - 	 Recall for 0.4 precision: 0.870
2024-10-25 19:49 - INFO - 	 Best Val. Loss: 0.123
2024-10-25 19:49 - INFO - 	 Best ROC-AUC: 0.951
2024-10-25 19:49 - INFO - 	 Best PR-AUC: 0.601
2024-10-25 19:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-10-25 19:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.581
2024-10-25 19:49 - INFO - 	 Best Recall for 0.4 precision: 0.870
2024-10-25 19:49 - INFO - ---------------------------------------------
2024-10-25 19:49 - INFO - ---------------------------------------------
2024-10-25 19:49 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 19:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95423
2024-10-25 19:49 - INFO - 	 Train Loss: 0.127
2024-10-25 19:49 - INFO - 	 Val. Loss: 0.125
2024-10-25 19:49 - INFO - 	 ROC-AUC: 0.954
2024-10-25 19:49 - INFO - 	 PR-AUC: 0.630
2024-10-25 19:49 - INFO - 	 Recall for 0.4 precision: 0.895
2024-10-25 19:49 - INFO - 	 Best Val. Loss: 0.123
2024-10-25 19:49 - INFO - 	 Best ROC-AUC: 0.954
2024-10-25 19:49 - INFO - 	 Best PR-AUC: 0.630
2024-10-25 19:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-10-25 19:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.618
2024-10-25 19:49 - INFO - 	 Best Recall for 0.4 precision: 0.895
2024-10-25 19:49 - INFO - ---------------------------------------------
2024-10-25 19:50 - INFO - ---------------------------------------------
2024-10-25 19:50 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 19:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96676
2024-10-25 19:50 - INFO - 	 Train Loss: 0.121
2024-10-25 19:50 - INFO - 	 Val. Loss: 0.105
2024-10-25 19:50 - INFO - 	 ROC-AUC: 0.967
2024-10-25 19:50 - INFO - 	 PR-AUC: 0.713
2024-10-25 19:50 - INFO - 	 Recall for 0.4 precision: 0.933
2024-10-25 19:50 - INFO - 	 Best Val. Loss: 0.105
2024-10-25 19:50 - INFO - 	 Best ROC-AUC: 0.967
2024-10-25 19:50 - INFO - 	 Best PR-AUC: 0.713
2024-10-25 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-25 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.695
2024-10-25 19:50 - INFO - 	 Best Recall for 0.4 precision: 0.933
2024-10-25 19:50 - INFO - ---------------------------------------------
2024-10-25 19:51 - INFO - ---------------------------------------------
2024-10-25 19:51 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 19:51 - INFO - 	 Train Loss: 0.116
2024-10-25 19:51 - INFO - 	 Val. Loss: 0.105
2024-10-25 19:51 - INFO - 	 ROC-AUC: 0.966
2024-10-25 19:51 - INFO - 	 PR-AUC: 0.717
2024-10-25 19:51 - INFO - 	 Recall for 0.4 precision: 0.932
2024-10-25 19:51 - INFO - 	 Best Val. Loss: 0.105
2024-10-25 19:51 - INFO - 	 Best ROC-AUC: 0.967
2024-10-25 19:51 - INFO - 	 Best PR-AUC: 0.717
2024-10-25 19:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-25 19:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-25 19:51 - INFO - 	 Best Recall for 0.4 precision: 0.933
2024-10-25 19:51 - INFO - ---------------------------------------------
2024-10-25 19:51 - INFO - ---------------------------------------------
2024-10-25 19:51 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 19:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96962
2024-10-25 19:51 - INFO - 	 Train Loss: 0.113
2024-10-25 19:51 - INFO - 	 Val. Loss: 0.099
2024-10-25 19:51 - INFO - 	 ROC-AUC: 0.970
2024-10-25 19:51 - INFO - 	 PR-AUC: 0.729
2024-10-25 19:51 - INFO - 	 Recall for 0.4 precision: 0.940
2024-10-25 19:51 - INFO - 	 Best Val. Loss: 0.099
2024-10-25 19:51 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 19:51 - INFO - 	 Best PR-AUC: 0.729
2024-10-25 19:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-25 19:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.748
2024-10-25 19:51 - INFO - 	 Best Recall for 0.4 precision: 0.940
2024-10-25 19:51 - INFO - ---------------------------------------------
2024-10-25 19:52 - INFO - ---------------------------------------------
2024-10-25 19:52 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 19:52 - INFO - 	 Train Loss: 0.111
2024-10-25 19:52 - INFO - 	 Val. Loss: 0.100
2024-10-25 19:52 - INFO - 	 ROC-AUC: 0.969
2024-10-25 19:52 - INFO - 	 PR-AUC: 0.716
2024-10-25 19:52 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-25 19:52 - INFO - 	 Best Val. Loss: 0.099
2024-10-25 19:52 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 19:52 - INFO - 	 Best PR-AUC: 0.729
2024-10-25 19:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-25 19:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.748
2024-10-25 19:52 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-25 19:52 - INFO - ---------------------------------------------
2024-10-25 19:52 - INFO - ---------------------------------------------
2024-10-25 19:52 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 19:52 - INFO - 	 Train Loss: 0.108
2024-10-25 19:52 - INFO - 	 Val. Loss: 0.102
2024-10-25 19:52 - INFO - 	 ROC-AUC: 0.969
2024-10-25 19:52 - INFO - 	 PR-AUC: 0.728
2024-10-25 19:52 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-25 19:52 - INFO - 	 Best Val. Loss: 0.099
2024-10-25 19:52 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 19:52 - INFO - 	 Best PR-AUC: 0.729
2024-10-25 19:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-25 19:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.748
2024-10-25 19:52 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-25 19:52 - INFO - ---------------------------------------------
2024-10-25 19:53 - INFO - ---------------------------------------------
2024-10-25 19:53 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 19:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97109
2024-10-25 19:53 - INFO - 	 Train Loss: 0.107
2024-10-25 19:53 - INFO - 	 Val. Loss: 0.096
2024-10-25 19:53 - INFO - 	 ROC-AUC: 0.971
2024-10-25 19:53 - INFO - 	 PR-AUC: 0.750
2024-10-25 19:53 - INFO - 	 Recall for 0.4 precision: 0.947
2024-10-25 19:53 - INFO - 	 Best Val. Loss: 0.096
2024-10-25 19:53 - INFO - 	 Best ROC-AUC: 0.971
2024-10-25 19:53 - INFO - 	 Best PR-AUC: 0.750
2024-10-25 19:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 19:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-10-25 19:53 - INFO - 	 Best Recall for 0.4 precision: 0.947
2024-10-25 19:53 - INFO - ---------------------------------------------
2024-10-25 19:53 - INFO - ---------------------------------------------
2024-10-25 19:53 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 19:53 - INFO - 	 Train Loss: 0.105
2024-10-25 19:53 - INFO - 	 Val. Loss: 0.100
2024-10-25 19:53 - INFO - 	 ROC-AUC: 0.970
2024-10-25 19:53 - INFO - 	 PR-AUC: 0.724
2024-10-25 19:53 - INFO - 	 Recall for 0.4 precision: 0.947
2024-10-25 19:53 - INFO - 	 Best Val. Loss: 0.096
2024-10-25 19:53 - INFO - 	 Best ROC-AUC: 0.971
2024-10-25 19:53 - INFO - 	 Best PR-AUC: 0.750
2024-10-25 19:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 19:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-10-25 19:53 - INFO - 	 Best Recall for 0.4 precision: 0.947
2024-10-25 19:53 - INFO - ---------------------------------------------
2024-10-25 19:55 - INFO - Fit the preprocessing pipeline
2024-10-25 19:55 - INFO - Training using device: cuda
2024-10-25 19:55 - INFO - Creating generators
2024-10-25 19:55 - INFO - The model has 651,257 trainable parameters
2024-10-25 19:55 - INFO - * Model:
2024-10-25 19:55 - INFO - * -----------
2024-10-25 19:55 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 19:55 - INFO - * -----------
2024-10-25 19:55 - INFO - Evaluating model based on: rocauc
2024-10-25 19:55 - INFO - Training..

2024-10-25 19:55 - INFO - ---------------------------------------------
2024-10-25 19:55 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 19:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92942
2024-10-25 19:55 - INFO - 	 Train Loss: 0.228
2024-10-25 19:55 - INFO - 	 Val. Loss: 0.141
2024-10-25 19:55 - INFO - 	 ROC-AUC: 0.929
2024-10-25 19:55 - INFO - 	 PR-AUC: 0.504
2024-10-25 19:55 - INFO - 	 Recall for 0.4 precision: 0.769
2024-10-25 19:55 - INFO - 	 Best Val. Loss: 0.141
2024-10-25 19:55 - INFO - 	 Best ROC-AUC: 0.929
2024-10-25 19:55 - INFO - 	 Best PR-AUC: 0.504
2024-10-25 19:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-10-25 19:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.522
2024-10-25 19:55 - INFO - 	 Best Recall for 0.4 precision: 0.769
2024-10-25 19:55 - INFO - ---------------------------------------------
2024-10-25 19:56 - INFO - ---------------------------------------------
2024-10-25 19:56 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 19:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95746
2024-10-25 19:56 - INFO - 	 Train Loss: 0.141
2024-10-25 19:56 - INFO - 	 Val. Loss: 0.121
2024-10-25 19:56 - INFO - 	 ROC-AUC: 0.957
2024-10-25 19:56 - INFO - 	 PR-AUC: 0.627
2024-10-25 19:56 - INFO - 	 Recall for 0.4 precision: 0.883
2024-10-25 19:56 - INFO - 	 Best Val. Loss: 0.121
2024-10-25 19:56 - INFO - 	 Best ROC-AUC: 0.957
2024-10-25 19:56 - INFO - 	 Best PR-AUC: 0.627
2024-10-25 19:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-25 19:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.628
2024-10-25 19:56 - INFO - 	 Best Recall for 0.4 precision: 0.883
2024-10-25 19:56 - INFO - ---------------------------------------------
2024-10-25 19:56 - INFO - ---------------------------------------------
2024-10-25 19:56 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 19:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96268
2024-10-25 19:56 - INFO - 	 Train Loss: 0.126
2024-10-25 19:56 - INFO - 	 Val. Loss: 0.107
2024-10-25 19:56 - INFO - 	 ROC-AUC: 0.963
2024-10-25 19:56 - INFO - 	 PR-AUC: 0.705
2024-10-25 19:56 - INFO - 	 Recall for 0.4 precision: 0.915
2024-10-25 19:56 - INFO - 	 Best Val. Loss: 0.107
2024-10-25 19:56 - INFO - 	 Best ROC-AUC: 0.963
2024-10-25 19:56 - INFO - 	 Best PR-AUC: 0.705
2024-10-25 19:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-25 19:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.690
2024-10-25 19:56 - INFO - 	 Best Recall for 0.4 precision: 0.915
2024-10-25 19:56 - INFO - ---------------------------------------------
2024-10-25 19:57 - INFO - ---------------------------------------------
2024-10-25 19:57 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 19:57 - INFO - 	 Train Loss: 0.120
2024-10-25 19:57 - INFO - 	 Val. Loss: 0.108
2024-10-25 19:57 - INFO - 	 ROC-AUC: 0.962
2024-10-25 19:57 - INFO - 	 PR-AUC: 0.693
2024-10-25 19:57 - INFO - 	 Recall for 0.4 precision: 0.908
2024-10-25 19:57 - INFO - 	 Best Val. Loss: 0.107
2024-10-25 19:57 - INFO - 	 Best ROC-AUC: 0.963
2024-10-25 19:57 - INFO - 	 Best PR-AUC: 0.705
2024-10-25 19:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-25 19:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.690
2024-10-25 19:57 - INFO - 	 Best Recall for 0.4 precision: 0.915
2024-10-25 19:57 - INFO - ---------------------------------------------
2024-10-25 19:57 - INFO - ---------------------------------------------
2024-10-25 19:57 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 19:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96447
2024-10-25 19:57 - INFO - 	 Train Loss: 0.115
2024-10-25 19:57 - INFO - 	 Val. Loss: 0.107
2024-10-25 19:57 - INFO - 	 ROC-AUC: 0.964
2024-10-25 19:57 - INFO - 	 PR-AUC: 0.693
2024-10-25 19:57 - INFO - 	 Recall for 0.4 precision: 0.922
2024-10-25 19:57 - INFO - 	 Best Val. Loss: 0.107
2024-10-25 19:57 - INFO - 	 Best ROC-AUC: 0.964
2024-10-25 19:57 - INFO - 	 Best PR-AUC: 0.705
2024-10-25 19:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-25 19:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.690
2024-10-25 19:57 - INFO - 	 Best Recall for 0.4 precision: 0.922
2024-10-25 19:57 - INFO - ---------------------------------------------
2024-10-25 19:58 - INFO - ---------------------------------------------
2024-10-25 19:58 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 19:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96785
2024-10-25 19:58 - INFO - 	 Train Loss: 0.114
2024-10-25 19:58 - INFO - 	 Val. Loss: 0.100
2024-10-25 19:58 - INFO - 	 ROC-AUC: 0.968
2024-10-25 19:58 - INFO - 	 PR-AUC: 0.739
2024-10-25 19:58 - INFO - 	 Recall for 0.4 precision: 0.935
2024-10-25 19:58 - INFO - 	 Best Val. Loss: 0.100
2024-10-25 19:58 - INFO - 	 Best ROC-AUC: 0.968
2024-10-25 19:58 - INFO - 	 Best PR-AUC: 0.739
2024-10-25 19:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 19:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.741
2024-10-25 19:58 - INFO - 	 Best Recall for 0.4 precision: 0.935
2024-10-25 19:58 - INFO - ---------------------------------------------
2024-10-25 19:58 - INFO - ---------------------------------------------
2024-10-25 19:58 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 19:58 - INFO - 	 Train Loss: 0.111
2024-10-25 19:58 - INFO - 	 Val. Loss: 0.102
2024-10-25 19:58 - INFO - 	 ROC-AUC: 0.967
2024-10-25 19:58 - INFO - 	 PR-AUC: 0.714
2024-10-25 19:58 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-25 19:58 - INFO - 	 Best Val. Loss: 0.100
2024-10-25 19:58 - INFO - 	 Best ROC-AUC: 0.968
2024-10-25 19:58 - INFO - 	 Best PR-AUC: 0.739
2024-10-25 19:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 19:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.741
2024-10-25 19:58 - INFO - 	 Best Recall for 0.4 precision: 0.935
2024-10-25 19:58 - INFO - ---------------------------------------------
2024-10-25 19:59 - INFO - ---------------------------------------------
2024-10-25 19:59 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 19:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9689
2024-10-25 19:59 - INFO - 	 Train Loss: 0.109
2024-10-25 19:59 - INFO - 	 Val. Loss: 0.099
2024-10-25 19:59 - INFO - 	 ROC-AUC: 0.969
2024-10-25 19:59 - INFO - 	 PR-AUC: 0.728
2024-10-25 19:59 - INFO - 	 Recall for 0.4 precision: 0.932
2024-10-25 19:59 - INFO - 	 Best Val. Loss: 0.099
2024-10-25 19:59 - INFO - 	 Best ROC-AUC: 0.969
2024-10-25 19:59 - INFO - 	 Best PR-AUC: 0.739
2024-10-25 19:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-25 19:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.741
2024-10-25 19:59 - INFO - 	 Best Recall for 0.4 precision: 0.935
2024-10-25 19:59 - INFO - ---------------------------------------------
2024-10-25 20:00 - INFO - ---------------------------------------------
2024-10-25 20:00 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 20:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97022
2024-10-25 20:00 - INFO - 	 Train Loss: 0.108
2024-10-25 20:00 - INFO - 	 Val. Loss: 0.100
2024-10-25 20:00 - INFO - 	 ROC-AUC: 0.970
2024-10-25 20:00 - INFO - 	 PR-AUC: 0.716
2024-10-25 20:00 - INFO - 	 Recall for 0.4 precision: 0.936
2024-10-25 20:00 - INFO - 	 Best Val. Loss: 0.099
2024-10-25 20:00 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 20:00 - INFO - 	 Best PR-AUC: 0.739
2024-10-25 20:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 20:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.741
2024-10-25 20:00 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-25 20:00 - INFO - ---------------------------------------------
2024-10-25 20:00 - INFO - ---------------------------------------------
2024-10-25 20:00 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 20:00 - INFO - 	 Train Loss: 0.106
2024-10-25 20:00 - INFO - 	 Val. Loss: 0.102
2024-10-25 20:00 - INFO - 	 ROC-AUC: 0.968
2024-10-25 20:00 - INFO - 	 PR-AUC: 0.694
2024-10-25 20:00 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-25 20:00 - INFO - 	 Best Val. Loss: 0.099
2024-10-25 20:00 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 20:00 - INFO - 	 Best PR-AUC: 0.739
2024-10-25 20:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 20:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.741
2024-10-25 20:00 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-25 20:00 - INFO - ---------------------------------------------
2024-10-25 20:02 - INFO - Fit the preprocessing pipeline
2024-10-25 20:02 - INFO - Training using device: cuda
2024-10-25 20:02 - INFO - Creating generators
2024-10-25 20:02 - INFO - The model has 651,257 trainable parameters
2024-10-25 20:02 - INFO - * Model:
2024-10-25 20:02 - INFO - * -----------
2024-10-25 20:02 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 20:02 - INFO - * -----------
2024-10-25 20:02 - INFO - Evaluating model based on: rocauc
2024-10-25 20:02 - INFO - Training..

2024-10-25 20:02 - INFO - ---------------------------------------------
2024-10-25 20:02 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 20:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.91788
2024-10-25 20:02 - INFO - 	 Train Loss: 0.226
2024-10-25 20:02 - INFO - 	 Val. Loss: 0.157
2024-10-25 20:02 - INFO - 	 ROC-AUC: 0.918
2024-10-25 20:02 - INFO - 	 PR-AUC: 0.439
2024-10-25 20:02 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-25 20:02 - INFO - 	 Best Val. Loss: 0.157
2024-10-25 20:02 - INFO - 	 Best ROC-AUC: 0.918
2024-10-25 20:02 - INFO - 	 Best PR-AUC: 0.439
2024-10-25 20:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-10-25 20:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.467
2024-10-25 20:02 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-25 20:02 - INFO - ---------------------------------------------
2024-10-25 20:03 - INFO - ---------------------------------------------
2024-10-25 20:03 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 20:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94901
2024-10-25 20:03 - INFO - 	 Train Loss: 0.142
2024-10-25 20:03 - INFO - 	 Val. Loss: 0.128
2024-10-25 20:03 - INFO - 	 ROC-AUC: 0.949
2024-10-25 20:03 - INFO - 	 PR-AUC: 0.580
2024-10-25 20:03 - INFO - 	 Recall for 0.4 precision: 0.865
2024-10-25 20:03 - INFO - 	 Best Val. Loss: 0.128
2024-10-25 20:03 - INFO - 	 Best ROC-AUC: 0.949
2024-10-25 20:03 - INFO - 	 Best PR-AUC: 0.580
2024-10-25 20:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-10-25 20:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.585
2024-10-25 20:03 - INFO - 	 Best Recall for 0.4 precision: 0.865
2024-10-25 20:03 - INFO - ---------------------------------------------
2024-10-25 20:03 - INFO - ---------------------------------------------
2024-10-25 20:03 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 20:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95733
2024-10-25 20:03 - INFO - 	 Train Loss: 0.128
2024-10-25 20:03 - INFO - 	 Val. Loss: 0.119
2024-10-25 20:03 - INFO - 	 ROC-AUC: 0.957
2024-10-25 20:03 - INFO - 	 PR-AUC: 0.619
2024-10-25 20:03 - INFO - 	 Recall for 0.4 precision: 0.883
2024-10-25 20:03 - INFO - 	 Best Val. Loss: 0.119
2024-10-25 20:03 - INFO - 	 Best ROC-AUC: 0.957
2024-10-25 20:03 - INFO - 	 Best PR-AUC: 0.619
2024-10-25 20:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-10-25 20:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.639
2024-10-25 20:03 - INFO - 	 Best Recall for 0.4 precision: 0.883
2024-10-25 20:03 - INFO - ---------------------------------------------
2024-10-25 20:04 - INFO - ---------------------------------------------
2024-10-25 20:04 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 20:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96169
2024-10-25 20:04 - INFO - 	 Train Loss: 0.121
2024-10-25 20:04 - INFO - 	 Val. Loss: 0.109
2024-10-25 20:04 - INFO - 	 ROC-AUC: 0.962
2024-10-25 20:04 - INFO - 	 PR-AUC: 0.692
2024-10-25 20:04 - INFO - 	 Recall for 0.4 precision: 0.915
2024-10-25 20:04 - INFO - 	 Best Val. Loss: 0.109
2024-10-25 20:04 - INFO - 	 Best ROC-AUC: 0.962
2024-10-25 20:04 - INFO - 	 Best PR-AUC: 0.692
2024-10-25 20:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-25 20:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.679
2024-10-25 20:04 - INFO - 	 Best Recall for 0.4 precision: 0.915
2024-10-25 20:04 - INFO - ---------------------------------------------
2024-10-25 20:04 - INFO - ---------------------------------------------
2024-10-25 20:04 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 20:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96404
2024-10-25 20:04 - INFO - 	 Train Loss: 0.117
2024-10-25 20:04 - INFO - 	 Val. Loss: 0.109
2024-10-25 20:04 - INFO - 	 ROC-AUC: 0.964
2024-10-25 20:04 - INFO - 	 PR-AUC: 0.692
2024-10-25 20:04 - INFO - 	 Recall for 0.4 precision: 0.928
2024-10-25 20:04 - INFO - 	 Best Val. Loss: 0.109
2024-10-25 20:04 - INFO - 	 Best ROC-AUC: 0.964
2024-10-25 20:04 - INFO - 	 Best PR-AUC: 0.692
2024-10-25 20:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-25 20:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.688
2024-10-25 20:04 - INFO - 	 Best Recall for 0.4 precision: 0.928
2024-10-25 20:04 - INFO - ---------------------------------------------
2024-10-25 20:05 - INFO - ---------------------------------------------
2024-10-25 20:05 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 20:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96805
2024-10-25 20:05 - INFO - 	 Train Loss: 0.113
2024-10-25 20:05 - INFO - 	 Val. Loss: 0.103
2024-10-25 20:05 - INFO - 	 ROC-AUC: 0.968
2024-10-25 20:05 - INFO - 	 PR-AUC: 0.697
2024-10-25 20:05 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-25 20:05 - INFO - 	 Best Val. Loss: 0.103
2024-10-25 20:05 - INFO - 	 Best ROC-AUC: 0.968
2024-10-25 20:05 - INFO - 	 Best PR-AUC: 0.697
2024-10-25 20:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-25 20:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.737
2024-10-25 20:05 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-25 20:05 - INFO - ---------------------------------------------
2024-10-25 20:05 - INFO - ---------------------------------------------
2024-10-25 20:05 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 20:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96997
2024-10-25 20:05 - INFO - 	 Train Loss: 0.111
2024-10-25 20:05 - INFO - 	 Val. Loss: 0.101
2024-10-25 20:05 - INFO - 	 ROC-AUC: 0.970
2024-10-25 20:05 - INFO - 	 PR-AUC: 0.702
2024-10-25 20:05 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-25 20:05 - INFO - 	 Best Val. Loss: 0.101
2024-10-25 20:05 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 20:05 - INFO - 	 Best PR-AUC: 0.702
2024-10-25 20:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 20:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.724
2024-10-25 20:05 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-25 20:05 - INFO - ---------------------------------------------
2024-10-25 20:06 - INFO - ---------------------------------------------
2024-10-25 20:06 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 20:06 - INFO - 	 Train Loss: 0.110
2024-10-25 20:06 - INFO - 	 Val. Loss: 0.099
2024-10-25 20:06 - INFO - 	 ROC-AUC: 0.969
2024-10-25 20:06 - INFO - 	 PR-AUC: 0.730
2024-10-25 20:06 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-25 20:06 - INFO - 	 Best Val. Loss: 0.099
2024-10-25 20:06 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 20:06 - INFO - 	 Best PR-AUC: 0.730
2024-10-25 20:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 20:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.747
2024-10-25 20:06 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-25 20:06 - INFO - ---------------------------------------------
2024-10-25 20:06 - INFO - ---------------------------------------------
2024-10-25 20:06 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 20:06 - INFO - 	 Train Loss: 0.108
2024-10-25 20:06 - INFO - 	 Val. Loss: 0.105
2024-10-25 20:06 - INFO - 	 ROC-AUC: 0.968
2024-10-25 20:06 - INFO - 	 PR-AUC: 0.698
2024-10-25 20:06 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-25 20:06 - INFO - 	 Best Val. Loss: 0.099
2024-10-25 20:06 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 20:06 - INFO - 	 Best PR-AUC: 0.730
2024-10-25 20:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 20:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.747
2024-10-25 20:06 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-25 20:06 - INFO - ---------------------------------------------
2024-10-25 20:07 - INFO - ---------------------------------------------
2024-10-25 20:07 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 20:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9728
2024-10-25 20:07 - INFO - 	 Train Loss: 0.109
2024-10-25 20:07 - INFO - 	 Val. Loss: 0.095
2024-10-25 20:07 - INFO - 	 ROC-AUC: 0.973
2024-10-25 20:07 - INFO - 	 PR-AUC: 0.753
2024-10-25 20:07 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-25 20:07 - INFO - 	 Best Val. Loss: 0.095
2024-10-25 20:07 - INFO - 	 Best ROC-AUC: 0.973
2024-10-25 20:07 - INFO - 	 Best PR-AUC: 0.753
2024-10-25 20:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 20:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.736
2024-10-25 20:07 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-25 20:07 - INFO - ---------------------------------------------
2024-10-25 20:08 - INFO - Fit the preprocessing pipeline
2024-10-25 20:08 - INFO - Training using device: cuda
2024-10-25 20:08 - INFO - Creating generators
2024-10-25 20:08 - INFO - The model has 651,257 trainable parameters
2024-10-25 20:08 - INFO - * Model:
2024-10-25 20:08 - INFO - * -----------
2024-10-25 20:08 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 20:08 - INFO - * -----------
2024-10-25 20:08 - INFO - Evaluating model based on: rocauc
2024-10-25 20:08 - INFO - Training..

2024-10-25 20:09 - INFO - ---------------------------------------------
2024-10-25 20:09 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 20:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.93152
2024-10-25 20:09 - INFO - 	 Train Loss: 0.219
2024-10-25 20:09 - INFO - 	 Val. Loss: 0.156
2024-10-25 20:09 - INFO - 	 ROC-AUC: 0.932
2024-10-25 20:09 - INFO - 	 PR-AUC: 0.453
2024-10-25 20:09 - INFO - 	 Recall for 0.4 precision: 0.773
2024-10-25 20:09 - INFO - 	 Best Val. Loss: 0.156
2024-10-25 20:09 - INFO - 	 Best ROC-AUC: 0.932
2024-10-25 20:09 - INFO - 	 Best PR-AUC: 0.453
2024-10-25 20:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-10-25 20:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.486
2024-10-25 20:09 - INFO - 	 Best Recall for 0.4 precision: 0.773
2024-10-25 20:09 - INFO - ---------------------------------------------
2024-10-25 20:09 - INFO - ---------------------------------------------
2024-10-25 20:09 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 20:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95516
2024-10-25 20:09 - INFO - 	 Train Loss: 0.140
2024-10-25 20:09 - INFO - 	 Val. Loss: 0.122
2024-10-25 20:09 - INFO - 	 ROC-AUC: 0.955
2024-10-25 20:09 - INFO - 	 PR-AUC: 0.587
2024-10-25 20:09 - INFO - 	 Recall for 0.4 precision: 0.900
2024-10-25 20:09 - INFO - 	 Best Val. Loss: 0.122
2024-10-25 20:09 - INFO - 	 Best ROC-AUC: 0.955
2024-10-25 20:09 - INFO - 	 Best PR-AUC: 0.587
2024-10-25 20:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-10-25 20:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.630
2024-10-25 20:09 - INFO - 	 Best Recall for 0.4 precision: 0.900
2024-10-25 20:09 - INFO - ---------------------------------------------
2024-10-25 20:10 - INFO - ---------------------------------------------
2024-10-25 20:10 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 20:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96304
2024-10-25 20:10 - INFO - 	 Train Loss: 0.125
2024-10-25 20:10 - INFO - 	 Val. Loss: 0.108
2024-10-25 20:10 - INFO - 	 ROC-AUC: 0.963
2024-10-25 20:10 - INFO - 	 PR-AUC: 0.688
2024-10-25 20:10 - INFO - 	 Recall for 0.4 precision: 0.915
2024-10-25 20:10 - INFO - 	 Best Val. Loss: 0.108
2024-10-25 20:10 - INFO - 	 Best ROC-AUC: 0.963
2024-10-25 20:10 - INFO - 	 Best PR-AUC: 0.688
2024-10-25 20:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-25 20:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.676
2024-10-25 20:10 - INFO - 	 Best Recall for 0.4 precision: 0.915
2024-10-25 20:10 - INFO - ---------------------------------------------
2024-10-25 20:11 - INFO - ---------------------------------------------
2024-10-25 20:11 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 20:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96787
2024-10-25 20:11 - INFO - 	 Train Loss: 0.117
2024-10-25 20:11 - INFO - 	 Val. Loss: 0.102
2024-10-25 20:11 - INFO - 	 ROC-AUC: 0.968
2024-10-25 20:11 - INFO - 	 PR-AUC: 0.720
2024-10-25 20:11 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-25 20:11 - INFO - 	 Best Val. Loss: 0.102
2024-10-25 20:11 - INFO - 	 Best ROC-AUC: 0.968
2024-10-25 20:11 - INFO - 	 Best PR-AUC: 0.720
2024-10-25 20:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 20:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.723
2024-10-25 20:11 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-25 20:11 - INFO - ---------------------------------------------
2024-10-25 20:11 - INFO - ---------------------------------------------
2024-10-25 20:11 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 20:11 - INFO - 	 Train Loss: 0.114
2024-10-25 20:11 - INFO - 	 Val. Loss: 0.107
2024-10-25 20:11 - INFO - 	 ROC-AUC: 0.964
2024-10-25 20:11 - INFO - 	 PR-AUC: 0.698
2024-10-25 20:11 - INFO - 	 Recall for 0.4 precision: 0.926
2024-10-25 20:11 - INFO - 	 Best Val. Loss: 0.102
2024-10-25 20:11 - INFO - 	 Best ROC-AUC: 0.968
2024-10-25 20:11 - INFO - 	 Best PR-AUC: 0.720
2024-10-25 20:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 20:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.723
2024-10-25 20:11 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-25 20:11 - INFO - ---------------------------------------------
2024-10-25 20:12 - INFO - ---------------------------------------------
2024-10-25 20:12 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 20:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96868
2024-10-25 20:12 - INFO - 	 Train Loss: 0.112
2024-10-25 20:12 - INFO - 	 Val. Loss: 0.100
2024-10-25 20:12 - INFO - 	 ROC-AUC: 0.969
2024-10-25 20:12 - INFO - 	 PR-AUC: 0.738
2024-10-25 20:12 - INFO - 	 Recall for 0.4 precision: 0.935
2024-10-25 20:12 - INFO - 	 Best Val. Loss: 0.100
2024-10-25 20:12 - INFO - 	 Best ROC-AUC: 0.969
2024-10-25 20:12 - INFO - 	 Best PR-AUC: 0.738
2024-10-25 20:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 20:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-10-25 20:12 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-25 20:12 - INFO - ---------------------------------------------
2024-10-25 20:12 - INFO - ---------------------------------------------
2024-10-25 20:12 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 20:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9704
2024-10-25 20:12 - INFO - 	 Train Loss: 0.110
2024-10-25 20:12 - INFO - 	 Val. Loss: 0.096
2024-10-25 20:12 - INFO - 	 ROC-AUC: 0.970
2024-10-25 20:12 - INFO - 	 PR-AUC: 0.748
2024-10-25 20:12 - INFO - 	 Recall for 0.4 precision: 0.950
2024-10-25 20:12 - INFO - 	 Best Val. Loss: 0.096
2024-10-25 20:12 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 20:12 - INFO - 	 Best PR-AUC: 0.748
2024-10-25 20:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 20:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.759
2024-10-25 20:12 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-25 20:12 - INFO - ---------------------------------------------
2024-10-25 20:13 - INFO - ---------------------------------------------
2024-10-25 20:13 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 20:13 - INFO - 	 Train Loss: 0.108
2024-10-25 20:13 - INFO - 	 Val. Loss: 0.104
2024-10-25 20:13 - INFO - 	 ROC-AUC: 0.967
2024-10-25 20:13 - INFO - 	 PR-AUC: 0.682
2024-10-25 20:13 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-25 20:13 - INFO - 	 Best Val. Loss: 0.096
2024-10-25 20:13 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 20:13 - INFO - 	 Best PR-AUC: 0.748
2024-10-25 20:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 20:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.759
2024-10-25 20:13 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-25 20:13 - INFO - ---------------------------------------------
2024-10-25 20:13 - INFO - ---------------------------------------------
2024-10-25 20:13 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 20:13 - INFO - 	 Train Loss: 0.107
2024-10-25 20:13 - INFO - 	 Val. Loss: 0.099
2024-10-25 20:13 - INFO - 	 ROC-AUC: 0.969
2024-10-25 20:13 - INFO - 	 PR-AUC: 0.724
2024-10-25 20:13 - INFO - 	 Recall for 0.4 precision: 0.941
2024-10-25 20:13 - INFO - 	 Best Val. Loss: 0.096
2024-10-25 20:13 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 20:13 - INFO - 	 Best PR-AUC: 0.748
2024-10-25 20:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 20:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.759
2024-10-25 20:13 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-25 20:13 - INFO - ---------------------------------------------
2024-10-25 20:14 - INFO - ---------------------------------------------
2024-10-25 20:14 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 20:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97315
2024-10-25 20:14 - INFO - 	 Train Loss: 0.106
2024-10-25 20:14 - INFO - 	 Val. Loss: 0.094
2024-10-25 20:14 - INFO - 	 ROC-AUC: 0.973
2024-10-25 20:14 - INFO - 	 PR-AUC: 0.750
2024-10-25 20:14 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-25 20:14 - INFO - 	 Best Val. Loss: 0.094
2024-10-25 20:14 - INFO - 	 Best ROC-AUC: 0.973
2024-10-25 20:14 - INFO - 	 Best PR-AUC: 0.750
2024-10-25 20:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 20:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.760
2024-10-25 20:14 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-25 20:14 - INFO - ---------------------------------------------
2024-10-25 20:15 - INFO - Fit the preprocessing pipeline
2024-10-25 20:15 - INFO - Training using device: cuda
2024-10-25 20:15 - INFO - Creating generators
2024-10-25 20:15 - INFO - The model has 651,257 trainable parameters
2024-10-25 20:15 - INFO - * Model:
2024-10-25 20:15 - INFO - * -----------
2024-10-25 20:15 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 20:15 - INFO - * -----------
2024-10-25 20:15 - INFO - Evaluating model based on: rocauc
2024-10-25 20:15 - INFO - Training..

2024-10-25 20:16 - INFO - ---------------------------------------------
2024-10-25 20:16 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 20:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92639
2024-10-25 20:16 - INFO - 	 Train Loss: 0.230
2024-10-25 20:16 - INFO - 	 Val. Loss: 0.164
2024-10-25 20:16 - INFO - 	 ROC-AUC: 0.926
2024-10-25 20:16 - INFO - 	 PR-AUC: 0.481
2024-10-25 20:16 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-25 20:16 - INFO - 	 Best Val. Loss: 0.164
2024-10-25 20:16 - INFO - 	 Best ROC-AUC: 0.926
2024-10-25 20:16 - INFO - 	 Best PR-AUC: 0.481
2024-10-25 20:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-10-25 20:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.495
2024-10-25 20:16 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-25 20:16 - INFO - ---------------------------------------------
2024-10-25 20:16 - INFO - ---------------------------------------------
2024-10-25 20:16 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 20:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95572
2024-10-25 20:16 - INFO - 	 Train Loss: 0.142
2024-10-25 20:16 - INFO - 	 Val. Loss: 0.128
2024-10-25 20:16 - INFO - 	 ROC-AUC: 0.956
2024-10-25 20:16 - INFO - 	 PR-AUC: 0.602
2024-10-25 20:16 - INFO - 	 Recall for 0.4 precision: 0.875
2024-10-25 20:16 - INFO - 	 Best Val. Loss: 0.128
2024-10-25 20:16 - INFO - 	 Best ROC-AUC: 0.956
2024-10-25 20:16 - INFO - 	 Best PR-AUC: 0.602
2024-10-25 20:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-10-25 20:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.643
2024-10-25 20:16 - INFO - 	 Best Recall for 0.4 precision: 0.875
2024-10-25 20:16 - INFO - ---------------------------------------------
2024-10-25 20:17 - INFO - ---------------------------------------------
2024-10-25 20:17 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 20:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95697
2024-10-25 20:17 - INFO - 	 Train Loss: 0.126
2024-10-25 20:17 - INFO - 	 Val. Loss: 0.121
2024-10-25 20:17 - INFO - 	 ROC-AUC: 0.957
2024-10-25 20:17 - INFO - 	 PR-AUC: 0.619
2024-10-25 20:17 - INFO - 	 Recall for 0.4 precision: 0.904
2024-10-25 20:17 - INFO - 	 Best Val. Loss: 0.121
2024-10-25 20:17 - INFO - 	 Best ROC-AUC: 0.957
2024-10-25 20:17 - INFO - 	 Best PR-AUC: 0.619
2024-10-25 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-10-25 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.642
2024-10-25 20:17 - INFO - 	 Best Recall for 0.4 precision: 0.904
2024-10-25 20:17 - INFO - ---------------------------------------------
2024-10-25 20:17 - INFO - ---------------------------------------------
2024-10-25 20:17 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 20:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96373
2024-10-25 20:17 - INFO - 	 Train Loss: 0.120
2024-10-25 20:17 - INFO - 	 Val. Loss: 0.108
2024-10-25 20:17 - INFO - 	 ROC-AUC: 0.964
2024-10-25 20:17 - INFO - 	 PR-AUC: 0.682
2024-10-25 20:17 - INFO - 	 Recall for 0.4 precision: 0.926
2024-10-25 20:17 - INFO - 	 Best Val. Loss: 0.108
2024-10-25 20:17 - INFO - 	 Best ROC-AUC: 0.964
2024-10-25 20:17 - INFO - 	 Best PR-AUC: 0.682
2024-10-25 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-25 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.703
2024-10-25 20:17 - INFO - 	 Best Recall for 0.4 precision: 0.926
2024-10-25 20:17 - INFO - ---------------------------------------------
2024-10-25 20:18 - INFO - ---------------------------------------------
2024-10-25 20:18 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 20:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96514
2024-10-25 20:18 - INFO - 	 Train Loss: 0.115
2024-10-25 20:18 - INFO - 	 Val. Loss: 0.104
2024-10-25 20:18 - INFO - 	 ROC-AUC: 0.965
2024-10-25 20:18 - INFO - 	 PR-AUC: 0.702
2024-10-25 20:18 - INFO - 	 Recall for 0.4 precision: 0.927
2024-10-25 20:18 - INFO - 	 Best Val. Loss: 0.104
2024-10-25 20:18 - INFO - 	 Best ROC-AUC: 0.965
2024-10-25 20:18 - INFO - 	 Best PR-AUC: 0.702
2024-10-25 20:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 20:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.722
2024-10-25 20:18 - INFO - 	 Best Recall for 0.4 precision: 0.927
2024-10-25 20:18 - INFO - ---------------------------------------------
2024-10-25 20:18 - INFO - ---------------------------------------------
2024-10-25 20:18 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 20:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96549
2024-10-25 20:18 - INFO - 	 Train Loss: 0.112
2024-10-25 20:18 - INFO - 	 Val. Loss: 0.104
2024-10-25 20:18 - INFO - 	 ROC-AUC: 0.965
2024-10-25 20:18 - INFO - 	 PR-AUC: 0.708
2024-10-25 20:18 - INFO - 	 Recall for 0.4 precision: 0.922
2024-10-25 20:18 - INFO - 	 Best Val. Loss: 0.104
2024-10-25 20:18 - INFO - 	 Best ROC-AUC: 0.965
2024-10-25 20:18 - INFO - 	 Best PR-AUC: 0.708
2024-10-25 20:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-25 20:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.720
2024-10-25 20:18 - INFO - 	 Best Recall for 0.4 precision: 0.927
2024-10-25 20:18 - INFO - ---------------------------------------------
2024-10-25 20:19 - INFO - ---------------------------------------------
2024-10-25 20:19 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 20:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9696
2024-10-25 20:19 - INFO - 	 Train Loss: 0.109
2024-10-25 20:19 - INFO - 	 Val. Loss: 0.097
2024-10-25 20:19 - INFO - 	 ROC-AUC: 0.970
2024-10-25 20:19 - INFO - 	 PR-AUC: 0.744
2024-10-25 20:19 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-25 20:19 - INFO - 	 Best Val. Loss: 0.097
2024-10-25 20:19 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 20:19 - INFO - 	 Best PR-AUC: 0.744
2024-10-25 20:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 20:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.731
2024-10-25 20:19 - INFO - 	 Best Recall for 0.4 precision: 0.938
2024-10-25 20:19 - INFO - ---------------------------------------------
2024-10-25 20:20 - INFO - ---------------------------------------------
2024-10-25 20:20 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 20:20 - INFO - 	 Train Loss: 0.106
2024-10-25 20:20 - INFO - 	 Val. Loss: 0.098
2024-10-25 20:20 - INFO - 	 ROC-AUC: 0.969
2024-10-25 20:20 - INFO - 	 PR-AUC: 0.743
2024-10-25 20:20 - INFO - 	 Recall for 0.4 precision: 0.946
2024-10-25 20:20 - INFO - 	 Best Val. Loss: 0.097
2024-10-25 20:20 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 20:20 - INFO - 	 Best PR-AUC: 0.744
2024-10-25 20:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 20:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.731
2024-10-25 20:20 - INFO - 	 Best Recall for 0.4 precision: 0.946
2024-10-25 20:20 - INFO - ---------------------------------------------
2024-10-25 20:20 - INFO - ---------------------------------------------
2024-10-25 20:20 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 20:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97117
2024-10-25 20:20 - INFO - 	 Train Loss: 0.105
2024-10-25 20:20 - INFO - 	 Val. Loss: 0.096
2024-10-25 20:20 - INFO - 	 ROC-AUC: 0.971
2024-10-25 20:20 - INFO - 	 PR-AUC: 0.752
2024-10-25 20:20 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-25 20:20 - INFO - 	 Best Val. Loss: 0.096
2024-10-25 20:20 - INFO - 	 Best ROC-AUC: 0.971
2024-10-25 20:20 - INFO - 	 Best PR-AUC: 0.752
2024-10-25 20:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 20:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-10-25 20:20 - INFO - 	 Best Recall for 0.4 precision: 0.946
2024-10-25 20:20 - INFO - ---------------------------------------------
2024-10-25 20:21 - INFO - ---------------------------------------------
2024-10-25 20:21 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 20:21 - INFO - 	 Train Loss: 0.105
2024-10-25 20:21 - INFO - 	 Val. Loss: 0.097
2024-10-25 20:21 - INFO - 	 ROC-AUC: 0.970
2024-10-25 20:21 - INFO - 	 PR-AUC: 0.734
2024-10-25 20:21 - INFO - 	 Recall for 0.4 precision: 0.948
2024-10-25 20:21 - INFO - 	 Best Val. Loss: 0.096
2024-10-25 20:21 - INFO - 	 Best ROC-AUC: 0.971
2024-10-25 20:21 - INFO - 	 Best PR-AUC: 0.752
2024-10-25 20:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 20:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-10-25 20:21 - INFO - 	 Best Recall for 0.4 precision: 0.948
2024-10-25 20:21 - INFO - ---------------------------------------------
