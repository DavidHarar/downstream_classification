2024-10-12 23:18 - INFO - Fit the preprocessing pipeline
2024-10-12 23:18 - INFO - Training using device: cuda
2024-10-12 23:18 - INFO - Creating generators
2024-10-12 23:18 - INFO - The model has 651,257 trainable parameters
2024-10-12 23:18 - INFO - * Model:
2024-10-12 23:18 - INFO - * -----------
2024-10-12 23:18 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 23:18 - INFO - * -----------
2024-10-12 23:18 - INFO - Evaluating model based on: rocauc
2024-10-12 23:18 - INFO - Training..

2024-10-12 23:18 - INFO - ---------------------------------------------
2024-10-12 23:18 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 23:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97769
2024-10-12 23:18 - INFO - 	 Train Loss: 0.164
2024-10-12 23:18 - INFO - 	 Val. Loss: 0.085
2024-10-12 23:18 - INFO - 	 ROC-AUC: 0.978
2024-10-12 23:18 - INFO - 	 PR-AUC: 0.807
2024-10-12 23:18 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-12 23:18 - INFO - 	 Best Val. Loss: 0.085
2024-10-12 23:18 - INFO - 	 Best ROC-AUC: 0.978
2024-10-12 23:18 - INFO - 	 Best PR-AUC: 0.807
2024-10-12 23:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-12 23:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-10-12 23:18 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-12 23:18 - INFO - ---------------------------------------------
2024-10-12 23:19 - INFO - ---------------------------------------------
2024-10-12 23:19 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 23:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98408
2024-10-12 23:19 - INFO - 	 Train Loss: 0.086
2024-10-12 23:19 - INFO - 	 Val. Loss: 0.069
2024-10-12 23:19 - INFO - 	 ROC-AUC: 0.984
2024-10-12 23:19 - INFO - 	 PR-AUC: 0.858
2024-10-12 23:19 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-12 23:19 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 23:19 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 23:19 - INFO - 	 Best PR-AUC: 0.858
2024-10-12 23:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 23:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-12 23:19 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-12 23:19 - INFO - ---------------------------------------------
2024-10-12 23:19 - INFO - ---------------------------------------------
2024-10-12 23:19 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 23:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98453
2024-10-12 23:19 - INFO - 	 Train Loss: 0.075
2024-10-12 23:19 - INFO - 	 Val. Loss: 0.067
2024-10-12 23:19 - INFO - 	 ROC-AUC: 0.985
2024-10-12 23:19 - INFO - 	 PR-AUC: 0.875
2024-10-12 23:19 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-12 23:19 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 23:19 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 23:19 - INFO - 	 Best PR-AUC: 0.875
2024-10-12 23:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 23:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-12 23:19 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-12 23:19 - INFO - ---------------------------------------------
2024-10-12 23:20 - INFO - ---------------------------------------------
2024-10-12 23:20 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 23:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98684
2024-10-12 23:20 - INFO - 	 Train Loss: 0.069
2024-10-12 23:20 - INFO - 	 Val. Loss: 0.062
2024-10-12 23:20 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:20 - INFO - 	 PR-AUC: 0.880
2024-10-12 23:20 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 23:20 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 23:20 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:20 - INFO - 	 Best PR-AUC: 0.880
2024-10-12 23:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 23:20 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 23:20 - INFO - ---------------------------------------------
2024-10-12 23:21 - INFO - ---------------------------------------------
2024-10-12 23:21 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 23:21 - INFO - 	 Train Loss: 0.065
2024-10-12 23:21 - INFO - 	 Val. Loss: 0.069
2024-10-12 23:21 - INFO - 	 ROC-AUC: 0.986
2024-10-12 23:21 - INFO - 	 PR-AUC: 0.876
2024-10-12 23:21 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-12 23:21 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 23:21 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:21 - INFO - 	 Best PR-AUC: 0.880
2024-10-12 23:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 23:21 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 23:21 - INFO - ---------------------------------------------
2024-10-12 23:21 - INFO - ---------------------------------------------
2024-10-12 23:21 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 23:21 - INFO - 	 Train Loss: 0.064
2024-10-12 23:21 - INFO - 	 Val. Loss: 0.062
2024-10-12 23:21 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:21 - INFO - 	 PR-AUC: 0.870
2024-10-12 23:21 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 23:21 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 23:21 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:21 - INFO - 	 Best PR-AUC: 0.880
2024-10-12 23:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 23:21 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 23:21 - INFO - ---------------------------------------------
2024-10-12 23:22 - INFO - ---------------------------------------------
2024-10-12 23:22 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 23:22 - INFO - 	 Train Loss: 0.062
2024-10-12 23:22 - INFO - 	 Val. Loss: 0.062
2024-10-12 23:22 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:22 - INFO - 	 PR-AUC: 0.873
2024-10-12 23:22 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 23:22 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 23:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:22 - INFO - 	 Best PR-AUC: 0.880
2024-10-12 23:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 23:22 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 23:22 - INFO - ---------------------------------------------
2024-10-12 23:22 - INFO - ---------------------------------------------
2024-10-12 23:22 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 23:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98777
2024-10-12 23:22 - INFO - 	 Train Loss: 0.060
2024-10-12 23:22 - INFO - 	 Val. Loss: 0.059
2024-10-12 23:22 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:22 - INFO - 	 PR-AUC: 0.884
2024-10-12 23:22 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 23:22 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 23:22 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:22 - INFO - 	 Best PR-AUC: 0.884
2024-10-12 23:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 23:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-12 23:22 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 23:22 - INFO - ---------------------------------------------
2024-10-12 23:23 - INFO - ---------------------------------------------
2024-10-12 23:23 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 23:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98852
2024-10-12 23:23 - INFO - 	 Train Loss: 0.058
2024-10-12 23:23 - INFO - 	 Val. Loss: 0.057
2024-10-12 23:23 - INFO - 	 ROC-AUC: 0.989
2024-10-12 23:23 - INFO - 	 PR-AUC: 0.895
2024-10-12 23:23 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:23 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 23:23 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 23:23 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 23:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 23:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-12 23:23 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 23:23 - INFO - ---------------------------------------------
2024-10-12 23:23 - INFO - ---------------------------------------------
2024-10-12 23:23 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 23:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98893
2024-10-12 23:23 - INFO - 	 Train Loss: 0.057
2024-10-12 23:23 - INFO - 	 Val. Loss: 0.059
2024-10-12 23:23 - INFO - 	 ROC-AUC: 0.989
2024-10-12 23:23 - INFO - 	 PR-AUC: 0.887
2024-10-12 23:23 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 23:23 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 23:23 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 23:23 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 23:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 23:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-12 23:23 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 23:23 - INFO - ---------------------------------------------
2024-10-12 23:25 - INFO - Fit the preprocessing pipeline
2024-10-12 23:25 - INFO - Training using device: cuda
2024-10-12 23:25 - INFO - Creating generators
2024-10-12 23:25 - INFO - The model has 651,257 trainable parameters
2024-10-12 23:25 - INFO - * Model:
2024-10-12 23:25 - INFO - * -----------
2024-10-12 23:25 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 23:25 - INFO - * -----------
2024-10-12 23:25 - INFO - Evaluating model based on: rocauc
2024-10-12 23:25 - INFO - Training..

2024-10-12 23:25 - INFO - ---------------------------------------------
2024-10-12 23:25 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 23:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97945
2024-10-12 23:25 - INFO - 	 Train Loss: 0.154
2024-10-12 23:25 - INFO - 	 Val. Loss: 0.084
2024-10-12 23:25 - INFO - 	 ROC-AUC: 0.979
2024-10-12 23:25 - INFO - 	 PR-AUC: 0.803
2024-10-12 23:25 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-12 23:25 - INFO - 	 Best Val. Loss: 0.084
2024-10-12 23:25 - INFO - 	 Best ROC-AUC: 0.979
2024-10-12 23:25 - INFO - 	 Best PR-AUC: 0.803
2024-10-12 23:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-12 23:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-10-12 23:25 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-12 23:25 - INFO - ---------------------------------------------
2024-10-12 23:26 - INFO - ---------------------------------------------
2024-10-12 23:26 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 23:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98463
2024-10-12 23:26 - INFO - 	 Train Loss: 0.085
2024-10-12 23:26 - INFO - 	 Val. Loss: 0.069
2024-10-12 23:26 - INFO - 	 ROC-AUC: 0.985
2024-10-12 23:26 - INFO - 	 PR-AUC: 0.853
2024-10-12 23:26 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 23:26 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 23:26 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 23:26 - INFO - 	 Best PR-AUC: 0.853
2024-10-12 23:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 23:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-12 23:26 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 23:26 - INFO - ---------------------------------------------
2024-10-12 23:26 - INFO - ---------------------------------------------
2024-10-12 23:26 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 23:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98681
2024-10-12 23:26 - INFO - 	 Train Loss: 0.076
2024-10-12 23:26 - INFO - 	 Val. Loss: 0.063
2024-10-12 23:26 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:26 - INFO - 	 PR-AUC: 0.872
2024-10-12 23:26 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:26 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 23:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:26 - INFO - 	 Best PR-AUC: 0.872
2024-10-12 23:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 23:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-12 23:26 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 23:26 - INFO - ---------------------------------------------
2024-10-12 23:27 - INFO - ---------------------------------------------
2024-10-12 23:27 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 23:27 - INFO - 	 Train Loss: 0.071
2024-10-12 23:27 - INFO - 	 Val. Loss: 0.063
2024-10-12 23:27 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:27 - INFO - 	 PR-AUC: 0.878
2024-10-12 23:27 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 23:27 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 23:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:27 - INFO - 	 Best PR-AUC: 0.878
2024-10-12 23:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 23:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-12 23:27 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 23:27 - INFO - ---------------------------------------------
2024-10-12 23:27 - INFO - ---------------------------------------------
2024-10-12 23:27 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 23:27 - INFO - 	 Train Loss: 0.067
2024-10-12 23:27 - INFO - 	 Val. Loss: 0.062
2024-10-12 23:27 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:27 - INFO - 	 PR-AUC: 0.878
2024-10-12 23:27 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:27 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 23:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:27 - INFO - 	 Best PR-AUC: 0.878
2024-10-12 23:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 23:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-12 23:27 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 23:27 - INFO - ---------------------------------------------
2024-10-12 23:28 - INFO - ---------------------------------------------
2024-10-12 23:28 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 23:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9871
2024-10-12 23:28 - INFO - 	 Train Loss: 0.065
2024-10-12 23:28 - INFO - 	 Val. Loss: 0.061
2024-10-12 23:28 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:28 - INFO - 	 PR-AUC: 0.877
2024-10-12 23:28 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 23:28 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 23:28 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:28 - INFO - 	 Best PR-AUC: 0.878
2024-10-12 23:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 23:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-12 23:28 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 23:28 - INFO - ---------------------------------------------
2024-10-12 23:28 - INFO - ---------------------------------------------
2024-10-12 23:28 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 23:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98749
2024-10-12 23:28 - INFO - 	 Train Loss: 0.063
2024-10-12 23:28 - INFO - 	 Val. Loss: 0.060
2024-10-12 23:28 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:28 - INFO - 	 PR-AUC: 0.883
2024-10-12 23:28 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 23:28 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 23:28 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:28 - INFO - 	 Best PR-AUC: 0.883
2024-10-12 23:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-12 23:28 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 23:28 - INFO - ---------------------------------------------
2024-10-12 23:29 - INFO - ---------------------------------------------
2024-10-12 23:29 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 23:29 - INFO - 	 Train Loss: 0.062
2024-10-12 23:29 - INFO - 	 Val. Loss: 0.059
2024-10-12 23:29 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:29 - INFO - 	 PR-AUC: 0.890
2024-10-12 23:29 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 23:29 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 23:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:29 - INFO - 	 Best PR-AUC: 0.890
2024-10-12 23:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-12 23:29 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 23:29 - INFO - ---------------------------------------------
2024-10-12 23:29 - INFO - ---------------------------------------------
2024-10-12 23:29 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 23:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98906
2024-10-12 23:29 - INFO - 	 Train Loss: 0.060
2024-10-12 23:29 - INFO - 	 Val. Loss: 0.055
2024-10-12 23:29 - INFO - 	 ROC-AUC: 0.989
2024-10-12 23:29 - INFO - 	 PR-AUC: 0.901
2024-10-12 23:29 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 23:29 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 23:29 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 23:29 - INFO - 	 Best PR-AUC: 0.901
2024-10-12 23:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 23:29 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:29 - INFO - ---------------------------------------------
2024-10-12 23:30 - INFO - ---------------------------------------------
2024-10-12 23:30 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 23:30 - INFO - 	 Train Loss: 0.058
2024-10-12 23:30 - INFO - 	 Val. Loss: 0.058
2024-10-12 23:30 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:30 - INFO - 	 PR-AUC: 0.891
2024-10-12 23:30 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 23:30 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 23:30 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 23:30 - INFO - 	 Best PR-AUC: 0.901
2024-10-12 23:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 23:30 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:30 - INFO - ---------------------------------------------
2024-10-12 23:31 - INFO - Fit the preprocessing pipeline
2024-10-12 23:31 - INFO - Training using device: cuda
2024-10-12 23:31 - INFO - Creating generators
2024-10-12 23:31 - INFO - The model has 651,257 trainable parameters
2024-10-12 23:31 - INFO - * Model:
2024-10-12 23:31 - INFO - * -----------
2024-10-12 23:31 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 23:31 - INFO - * -----------
2024-10-12 23:31 - INFO - Evaluating model based on: rocauc
2024-10-12 23:31 - INFO - Training..

2024-10-12 23:32 - INFO - ---------------------------------------------
2024-10-12 23:32 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 23:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97917
2024-10-12 23:32 - INFO - 	 Train Loss: 0.159
2024-10-12 23:32 - INFO - 	 Val. Loss: 0.082
2024-10-12 23:32 - INFO - 	 ROC-AUC: 0.979
2024-10-12 23:32 - INFO - 	 PR-AUC: 0.810
2024-10-12 23:32 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-12 23:32 - INFO - 	 Best Val. Loss: 0.082
2024-10-12 23:32 - INFO - 	 Best ROC-AUC: 0.979
2024-10-12 23:32 - INFO - 	 Best PR-AUC: 0.810
2024-10-12 23:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-12 23:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-12 23:32 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-12 23:32 - INFO - ---------------------------------------------
2024-10-12 23:32 - INFO - ---------------------------------------------
2024-10-12 23:32 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 23:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98445
2024-10-12 23:32 - INFO - 	 Train Loss: 0.085
2024-10-12 23:32 - INFO - 	 Val. Loss: 0.068
2024-10-12 23:32 - INFO - 	 ROC-AUC: 0.984
2024-10-12 23:32 - INFO - 	 PR-AUC: 0.861
2024-10-12 23:32 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 23:32 - INFO - 	 Best Val. Loss: 0.068
2024-10-12 23:32 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 23:32 - INFO - 	 Best PR-AUC: 0.861
2024-10-12 23:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 23:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-12 23:32 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 23:32 - INFO - ---------------------------------------------
2024-10-12 23:33 - INFO - ---------------------------------------------
2024-10-12 23:33 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 23:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98589
2024-10-12 23:33 - INFO - 	 Train Loss: 0.075
2024-10-12 23:33 - INFO - 	 Val. Loss: 0.068
2024-10-12 23:33 - INFO - 	 ROC-AUC: 0.986
2024-10-12 23:33 - INFO - 	 PR-AUC: 0.864
2024-10-12 23:33 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 23:33 - INFO - 	 Best Val. Loss: 0.068
2024-10-12 23:33 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 23:33 - INFO - 	 Best PR-AUC: 0.864
2024-10-12 23:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-12 23:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:33 - INFO - ---------------------------------------------
2024-10-12 23:34 - INFO - ---------------------------------------------
2024-10-12 23:34 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 23:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9871
2024-10-12 23:34 - INFO - 	 Train Loss: 0.070
2024-10-12 23:34 - INFO - 	 Val. Loss: 0.063
2024-10-12 23:34 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:34 - INFO - 	 PR-AUC: 0.883
2024-10-12 23:34 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 23:34 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 23:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:34 - INFO - 	 Best PR-AUC: 0.883
2024-10-12 23:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 23:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-12 23:34 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:34 - INFO - ---------------------------------------------
2024-10-12 23:34 - INFO - ---------------------------------------------
2024-10-12 23:34 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 23:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98738
2024-10-12 23:34 - INFO - 	 Train Loss: 0.065
2024-10-12 23:34 - INFO - 	 Val. Loss: 0.063
2024-10-12 23:34 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:34 - INFO - 	 PR-AUC: 0.886
2024-10-12 23:34 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 23:34 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 23:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:34 - INFO - 	 Best PR-AUC: 0.886
2024-10-12 23:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 23:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-12 23:34 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:34 - INFO - ---------------------------------------------
2024-10-12 23:35 - INFO - ---------------------------------------------
2024-10-12 23:35 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 23:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98739
2024-10-12 23:35 - INFO - 	 Train Loss: 0.063
2024-10-12 23:35 - INFO - 	 Val. Loss: 0.060
2024-10-12 23:35 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:35 - INFO - 	 PR-AUC: 0.883
2024-10-12 23:35 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 23:35 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 23:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:35 - INFO - 	 Best PR-AUC: 0.886
2024-10-12 23:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 23:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-12 23:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:35 - INFO - ---------------------------------------------
2024-10-12 23:35 - INFO - ---------------------------------------------
2024-10-12 23:35 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 23:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98808
2024-10-12 23:35 - INFO - 	 Train Loss: 0.062
2024-10-12 23:35 - INFO - 	 Val. Loss: 0.058
2024-10-12 23:35 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:35 - INFO - 	 PR-AUC: 0.892
2024-10-12 23:35 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 23:35 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 23:35 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:35 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 23:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-12 23:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-12 23:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:35 - INFO - ---------------------------------------------
2024-10-12 23:36 - INFO - ---------------------------------------------
2024-10-12 23:36 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 23:36 - INFO - 	 Train Loss: 0.060
2024-10-12 23:36 - INFO - 	 Val. Loss: 0.069
2024-10-12 23:36 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:36 - INFO - 	 PR-AUC: 0.895
2024-10-12 23:36 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:36 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 23:36 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:36 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 23:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-12 23:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 23:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:36 - INFO - ---------------------------------------------
2024-10-12 23:36 - INFO - ---------------------------------------------
2024-10-12 23:36 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 23:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98857
2024-10-12 23:36 - INFO - 	 Train Loss: 0.059
2024-10-12 23:36 - INFO - 	 Val. Loss: 0.060
2024-10-12 23:36 - INFO - 	 ROC-AUC: 0.989
2024-10-12 23:36 - INFO - 	 PR-AUC: 0.895
2024-10-12 23:36 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:36 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 23:36 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 23:36 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 23:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 23:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-12 23:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:36 - INFO - ---------------------------------------------
2024-10-12 23:37 - INFO - ---------------------------------------------
2024-10-12 23:37 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 23:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98943
2024-10-12 23:37 - INFO - 	 Train Loss: 0.057
2024-10-12 23:37 - INFO - 	 Val. Loss: 0.058
2024-10-12 23:37 - INFO - 	 ROC-AUC: 0.989
2024-10-12 23:37 - INFO - 	 PR-AUC: 0.904
2024-10-12 23:37 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 23:37 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 23:37 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 23:37 - INFO - 	 Best PR-AUC: 0.904
2024-10-12 23:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-12 23:37 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 23:37 - INFO - ---------------------------------------------
2024-10-12 23:38 - INFO - Fit the preprocessing pipeline
2024-10-12 23:38 - INFO - Training using device: cuda
2024-10-12 23:38 - INFO - Creating generators
2024-10-12 23:38 - INFO - The model has 651,257 trainable parameters
2024-10-12 23:38 - INFO - * Model:
2024-10-12 23:38 - INFO - * -----------
2024-10-12 23:38 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 23:38 - INFO - * -----------
2024-10-12 23:38 - INFO - Evaluating model based on: rocauc
2024-10-12 23:38 - INFO - Training..

2024-10-12 23:39 - INFO - ---------------------------------------------
2024-10-12 23:39 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 23:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98026
2024-10-12 23:39 - INFO - 	 Train Loss: 0.149
2024-10-12 23:39 - INFO - 	 Val. Loss: 0.082
2024-10-12 23:39 - INFO - 	 ROC-AUC: 0.980
2024-10-12 23:39 - INFO - 	 PR-AUC: 0.801
2024-10-12 23:39 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-12 23:39 - INFO - 	 Best Val. Loss: 0.082
2024-10-12 23:39 - INFO - 	 Best ROC-AUC: 0.980
2024-10-12 23:39 - INFO - 	 Best PR-AUC: 0.801
2024-10-12 23:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-12 23:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.771
2024-10-12 23:39 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-12 23:39 - INFO - ---------------------------------------------
2024-10-12 23:39 - INFO - ---------------------------------------------
2024-10-12 23:39 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 23:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98473
2024-10-12 23:39 - INFO - 	 Train Loss: 0.085
2024-10-12 23:39 - INFO - 	 Val. Loss: 0.070
2024-10-12 23:39 - INFO - 	 ROC-AUC: 0.985
2024-10-12 23:39 - INFO - 	 PR-AUC: 0.856
2024-10-12 23:39 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 23:39 - INFO - 	 Best Val. Loss: 0.070
2024-10-12 23:39 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 23:39 - INFO - 	 Best PR-AUC: 0.856
2024-10-12 23:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 23:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-12 23:39 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 23:39 - INFO - ---------------------------------------------
2024-10-12 23:40 - INFO - ---------------------------------------------
2024-10-12 23:40 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 23:40 - INFO - 	 Train Loss: 0.076
2024-10-12 23:40 - INFO - 	 Val. Loss: 0.069
2024-10-12 23:40 - INFO - 	 ROC-AUC: 0.985
2024-10-12 23:40 - INFO - 	 PR-AUC: 0.861
2024-10-12 23:40 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 23:40 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 23:40 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 23:40 - INFO - 	 Best PR-AUC: 0.861
2024-10-12 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-12 23:40 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 23:40 - INFO - ---------------------------------------------
2024-10-12 23:40 - INFO - ---------------------------------------------
2024-10-12 23:40 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 23:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98548
2024-10-12 23:40 - INFO - 	 Train Loss: 0.071
2024-10-12 23:40 - INFO - 	 Val. Loss: 0.067
2024-10-12 23:40 - INFO - 	 ROC-AUC: 0.985
2024-10-12 23:40 - INFO - 	 PR-AUC: 0.863
2024-10-12 23:40 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 23:40 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 23:40 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 23:40 - INFO - 	 Best PR-AUC: 0.863
2024-10-12 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-12 23:40 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 23:40 - INFO - ---------------------------------------------
2024-10-12 23:41 - INFO - ---------------------------------------------
2024-10-12 23:41 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 23:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98735
2024-10-12 23:41 - INFO - 	 Train Loss: 0.066
2024-10-12 23:41 - INFO - 	 Val. Loss: 0.063
2024-10-12 23:41 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:41 - INFO - 	 PR-AUC: 0.870
2024-10-12 23:41 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:41 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 23:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:41 - INFO - 	 Best PR-AUC: 0.870
2024-10-12 23:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 23:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-12 23:41 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 23:41 - INFO - ---------------------------------------------
2024-10-12 23:41 - INFO - ---------------------------------------------
2024-10-12 23:41 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 23:41 - INFO - 	 Train Loss: 0.064
2024-10-12 23:41 - INFO - 	 Val. Loss: 0.063
2024-10-12 23:41 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:41 - INFO - 	 PR-AUC: 0.876
2024-10-12 23:41 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 23:41 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 23:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:41 - INFO - 	 Best PR-AUC: 0.876
2024-10-12 23:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 23:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-12 23:41 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:41 - INFO - ---------------------------------------------
2024-10-12 23:42 - INFO - ---------------------------------------------
2024-10-12 23:42 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 23:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98752
2024-10-12 23:42 - INFO - 	 Train Loss: 0.063
2024-10-12 23:42 - INFO - 	 Val. Loss: 0.062
2024-10-12 23:42 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:42 - INFO - 	 PR-AUC: 0.882
2024-10-12 23:42 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 23:42 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 23:42 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:42 - INFO - 	 Best PR-AUC: 0.882
2024-10-12 23:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-12 23:42 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:42 - INFO - ---------------------------------------------
2024-10-12 23:42 - INFO - ---------------------------------------------
2024-10-12 23:42 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 23:42 - INFO - 	 Train Loss: 0.060
2024-10-12 23:42 - INFO - 	 Val. Loss: 0.063
2024-10-12 23:42 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:42 - INFO - 	 PR-AUC: 0.882
2024-10-12 23:42 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 23:42 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 23:42 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:42 - INFO - 	 Best PR-AUC: 0.882
2024-10-12 23:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-12 23:42 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:42 - INFO - ---------------------------------------------
2024-10-12 23:43 - INFO - ---------------------------------------------
2024-10-12 23:43 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 23:43 - INFO - 	 Train Loss: 0.059
2024-10-12 23:43 - INFO - 	 Val. Loss: 0.061
2024-10-12 23:43 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:43 - INFO - 	 PR-AUC: 0.885
2024-10-12 23:43 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 23:43 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 23:43 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:43 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 23:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-12 23:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:43 - INFO - ---------------------------------------------
2024-10-12 23:43 - INFO - ---------------------------------------------
2024-10-12 23:43 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 23:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98779
2024-10-12 23:43 - INFO - 	 Train Loss: 0.057
2024-10-12 23:43 - INFO - 	 Val. Loss: 0.059
2024-10-12 23:43 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:43 - INFO - 	 PR-AUC: 0.892
2024-10-12 23:43 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 23:43 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 23:43 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:43 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 23:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-12 23:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:43 - INFO - ---------------------------------------------
2024-10-12 23:45 - INFO - Fit the preprocessing pipeline
2024-10-12 23:45 - INFO - Training using device: cuda
2024-10-12 23:45 - INFO - Creating generators
2024-10-12 23:45 - INFO - The model has 651,257 trainable parameters
2024-10-12 23:45 - INFO - * Model:
2024-10-12 23:45 - INFO - * -----------
2024-10-12 23:45 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 23:45 - INFO - * -----------
2024-10-12 23:45 - INFO - Evaluating model based on: rocauc
2024-10-12 23:45 - INFO - Training..

2024-10-12 23:45 - INFO - ---------------------------------------------
2024-10-12 23:45 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 23:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97851
2024-10-12 23:45 - INFO - 	 Train Loss: 0.168
2024-10-12 23:45 - INFO - 	 Val. Loss: 0.083
2024-10-12 23:45 - INFO - 	 ROC-AUC: 0.979
2024-10-12 23:45 - INFO - 	 PR-AUC: 0.816
2024-10-12 23:45 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-12 23:45 - INFO - 	 Best Val. Loss: 0.083
2024-10-12 23:45 - INFO - 	 Best ROC-AUC: 0.979
2024-10-12 23:45 - INFO - 	 Best PR-AUC: 0.816
2024-10-12 23:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-12 23:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.775
2024-10-12 23:45 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-12 23:45 - INFO - ---------------------------------------------
2024-10-12 23:46 - INFO - ---------------------------------------------
2024-10-12 23:46 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 23:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98371
2024-10-12 23:46 - INFO - 	 Train Loss: 0.085
2024-10-12 23:46 - INFO - 	 Val. Loss: 0.069
2024-10-12 23:46 - INFO - 	 ROC-AUC: 0.984
2024-10-12 23:46 - INFO - 	 PR-AUC: 0.860
2024-10-12 23:46 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 23:46 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 23:46 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 23:46 - INFO - 	 Best PR-AUC: 0.860
2024-10-12 23:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 23:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-12 23:46 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 23:46 - INFO - ---------------------------------------------
2024-10-12 23:47 - INFO - ---------------------------------------------
2024-10-12 23:47 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 23:47 - INFO - 	 Train Loss: 0.075
2024-10-12 23:47 - INFO - 	 Val. Loss: 0.073
2024-10-12 23:47 - INFO - 	 ROC-AUC: 0.983
2024-10-12 23:47 - INFO - 	 PR-AUC: 0.868
2024-10-12 23:47 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-12 23:47 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 23:47 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 23:47 - INFO - 	 Best PR-AUC: 0.868
2024-10-12 23:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 23:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-12 23:47 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 23:47 - INFO - ---------------------------------------------
2024-10-12 23:47 - INFO - ---------------------------------------------
2024-10-12 23:47 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 23:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98759
2024-10-12 23:47 - INFO - 	 Train Loss: 0.069
2024-10-12 23:47 - INFO - 	 Val. Loss: 0.061
2024-10-12 23:47 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:47 - INFO - 	 PR-AUC: 0.885
2024-10-12 23:47 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 23:47 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 23:47 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:47 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 23:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 23:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-12 23:47 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:47 - INFO - ---------------------------------------------
2024-10-12 23:48 - INFO - ---------------------------------------------
2024-10-12 23:48 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 23:48 - INFO - 	 Train Loss: 0.065
2024-10-12 23:48 - INFO - 	 Val. Loss: 0.062
2024-10-12 23:48 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:48 - INFO - 	 PR-AUC: 0.889
2024-10-12 23:48 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:48 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 23:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:48 - INFO - 	 Best PR-AUC: 0.889
2024-10-12 23:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 23:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-12 23:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:48 - INFO - ---------------------------------------------
2024-10-12 23:48 - INFO - ---------------------------------------------
2024-10-12 23:48 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 23:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98797
2024-10-12 23:48 - INFO - 	 Train Loss: 0.064
2024-10-12 23:48 - INFO - 	 Val. Loss: 0.060
2024-10-12 23:48 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:48 - INFO - 	 PR-AUC: 0.888
2024-10-12 23:48 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 23:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 23:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:48 - INFO - 	 Best PR-AUC: 0.889
2024-10-12 23:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 23:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-12 23:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:48 - INFO - ---------------------------------------------
2024-10-12 23:49 - INFO - ---------------------------------------------
2024-10-12 23:49 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 23:49 - INFO - 	 Train Loss: 0.062
2024-10-12 23:49 - INFO - 	 Val. Loss: 0.060
2024-10-12 23:49 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:49 - INFO - 	 PR-AUC: 0.894
2024-10-12 23:49 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:49 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 23:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:49 - INFO - 	 Best PR-AUC: 0.894
2024-10-12 23:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 23:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-12 23:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:49 - INFO - ---------------------------------------------
2024-10-12 23:49 - INFO - ---------------------------------------------
2024-10-12 23:49 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 23:49 - INFO - 	 Train Loss: 0.059
2024-10-12 23:49 - INFO - 	 Val. Loss: 0.062
2024-10-12 23:49 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:49 - INFO - 	 PR-AUC: 0.892
2024-10-12 23:49 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:49 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 23:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:49 - INFO - 	 Best PR-AUC: 0.894
2024-10-12 23:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 23:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-12 23:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:49 - INFO - ---------------------------------------------
2024-10-12 23:50 - INFO - ---------------------------------------------
2024-10-12 23:50 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 23:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9888
2024-10-12 23:50 - INFO - 	 Train Loss: 0.058
2024-10-12 23:50 - INFO - 	 Val. Loss: 0.058
2024-10-12 23:50 - INFO - 	 ROC-AUC: 0.989
2024-10-12 23:50 - INFO - 	 PR-AUC: 0.896
2024-10-12 23:50 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 23:50 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 23:50 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 23:50 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 23:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 23:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-12 23:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:50 - INFO - ---------------------------------------------
2024-10-12 23:50 - INFO - ---------------------------------------------
2024-10-12 23:50 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 23:50 - INFO - 	 Train Loss: 0.057
2024-10-12 23:50 - INFO - 	 Val. Loss: 0.064
2024-10-12 23:50 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:50 - INFO - 	 PR-AUC: 0.894
2024-10-12 23:50 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 23:50 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 23:50 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 23:50 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 23:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 23:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-12 23:50 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 23:50 - INFO - ---------------------------------------------
2024-10-12 23:52 - INFO - Fit the preprocessing pipeline
2024-10-12 23:52 - INFO - Training using device: cuda
2024-10-12 23:52 - INFO - Creating generators
2024-10-12 23:52 - INFO - The model has 651,257 trainable parameters
2024-10-12 23:52 - INFO - * Model:
2024-10-12 23:52 - INFO - * -----------
2024-10-12 23:52 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 23:52 - INFO - * -----------
2024-10-12 23:52 - INFO - Evaluating model based on: rocauc
2024-10-12 23:52 - INFO - Training..

2024-10-12 23:52 - INFO - ---------------------------------------------
2024-10-12 23:52 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 23:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97202
2024-10-12 23:52 - INFO - 	 Train Loss: 0.162
2024-10-12 23:52 - INFO - 	 Val. Loss: 0.098
2024-10-12 23:52 - INFO - 	 ROC-AUC: 0.972
2024-10-12 23:52 - INFO - 	 PR-AUC: 0.727
2024-10-12 23:52 - INFO - 	 Recall for 0.4 precision: 0.941
2024-10-12 23:52 - INFO - 	 Best Val. Loss: 0.098
2024-10-12 23:52 - INFO - 	 Best ROC-AUC: 0.972
2024-10-12 23:52 - INFO - 	 Best PR-AUC: 0.727
2024-10-12 23:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-12 23:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-12 23:52 - INFO - 	 Best Recall for 0.4 precision: 0.941
2024-10-12 23:52 - INFO - ---------------------------------------------
2024-10-12 23:53 - INFO - ---------------------------------------------
2024-10-12 23:53 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 23:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9841
2024-10-12 23:53 - INFO - 	 Train Loss: 0.086
2024-10-12 23:53 - INFO - 	 Val. Loss: 0.071
2024-10-12 23:53 - INFO - 	 ROC-AUC: 0.984
2024-10-12 23:53 - INFO - 	 PR-AUC: 0.857
2024-10-12 23:53 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 23:53 - INFO - 	 Best Val. Loss: 0.071
2024-10-12 23:53 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 23:53 - INFO - 	 Best PR-AUC: 0.857
2024-10-12 23:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 23:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-12 23:53 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 23:53 - INFO - ---------------------------------------------
2024-10-12 23:53 - INFO - ---------------------------------------------
2024-10-12 23:53 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 23:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98536
2024-10-12 23:53 - INFO - 	 Train Loss: 0.075
2024-10-12 23:53 - INFO - 	 Val. Loss: 0.069
2024-10-12 23:53 - INFO - 	 ROC-AUC: 0.985
2024-10-12 23:53 - INFO - 	 PR-AUC: 0.863
2024-10-12 23:53 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 23:53 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 23:53 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 23:53 - INFO - 	 Best PR-AUC: 0.863
2024-10-12 23:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 23:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-12 23:53 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 23:53 - INFO - ---------------------------------------------
2024-10-12 23:54 - INFO - ---------------------------------------------
2024-10-12 23:54 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 23:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98636
2024-10-12 23:54 - INFO - 	 Train Loss: 0.069
2024-10-12 23:54 - INFO - 	 Val. Loss: 0.062
2024-10-12 23:54 - INFO - 	 ROC-AUC: 0.986
2024-10-12 23:54 - INFO - 	 PR-AUC: 0.881
2024-10-12 23:54 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 23:54 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 23:54 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 23:54 - INFO - 	 Best PR-AUC: 0.881
2024-10-12 23:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 23:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-12 23:54 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 23:54 - INFO - ---------------------------------------------
2024-10-12 23:54 - INFO - ---------------------------------------------
2024-10-12 23:54 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 23:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98712
2024-10-12 23:54 - INFO - 	 Train Loss: 0.066
2024-10-12 23:54 - INFO - 	 Val. Loss: 0.061
2024-10-12 23:54 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:54 - INFO - 	 PR-AUC: 0.883
2024-10-12 23:54 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 23:54 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 23:54 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 23:54 - INFO - 	 Best PR-AUC: 0.883
2024-10-12 23:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 23:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-12 23:54 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 23:54 - INFO - ---------------------------------------------
2024-10-12 23:55 - INFO - ---------------------------------------------
2024-10-12 23:55 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 23:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98761
2024-10-12 23:55 - INFO - 	 Train Loss: 0.065
2024-10-12 23:55 - INFO - 	 Val. Loss: 0.060
2024-10-12 23:55 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:55 - INFO - 	 PR-AUC: 0.883
2024-10-12 23:55 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:55 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 23:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:55 - INFO - 	 Best PR-AUC: 0.883
2024-10-12 23:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 23:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-12 23:55 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 23:55 - INFO - ---------------------------------------------
2024-10-12 23:55 - INFO - ---------------------------------------------
2024-10-12 23:55 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 23:55 - INFO - 	 Train Loss: 0.062
2024-10-12 23:55 - INFO - 	 Val. Loss: 0.063
2024-10-12 23:55 - INFO - 	 ROC-AUC: 0.987
2024-10-12 23:55 - INFO - 	 PR-AUC: 0.876
2024-10-12 23:55 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 23:55 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 23:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:55 - INFO - 	 Best PR-AUC: 0.883
2024-10-12 23:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 23:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-12 23:55 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 23:55 - INFO - ---------------------------------------------
2024-10-12 23:56 - INFO - ---------------------------------------------
2024-10-12 23:56 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 23:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98813
2024-10-12 23:56 - INFO - 	 Train Loss: 0.061
2024-10-12 23:56 - INFO - 	 Val. Loss: 0.059
2024-10-12 23:56 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:56 - INFO - 	 PR-AUC: 0.891
2024-10-12 23:56 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 23:56 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 23:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:56 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 23:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 23:56 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:56 - INFO - ---------------------------------------------
2024-10-12 23:56 - INFO - ---------------------------------------------
2024-10-12 23:56 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 23:56 - INFO - 	 Train Loss: 0.059
2024-10-12 23:56 - INFO - 	 Val. Loss: 0.060
2024-10-12 23:56 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:56 - INFO - 	 PR-AUC: 0.895
2024-10-12 23:56 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 23:56 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 23:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:56 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 23:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 23:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-12 23:56 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:56 - INFO - ---------------------------------------------
2024-10-12 23:57 - INFO - ---------------------------------------------
2024-10-12 23:57 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 23:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98843
2024-10-12 23:57 - INFO - 	 Train Loss: 0.059
2024-10-12 23:57 - INFO - 	 Val. Loss: 0.058
2024-10-12 23:57 - INFO - 	 ROC-AUC: 0.988
2024-10-12 23:57 - INFO - 	 PR-AUC: 0.894
2024-10-12 23:57 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 23:57 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 23:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 23:57 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 23:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 23:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-12 23:57 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 23:57 - INFO - ---------------------------------------------
2024-10-12 23:58 - INFO - Fit the preprocessing pipeline
2024-10-12 23:58 - INFO - Training using device: cuda
2024-10-12 23:58 - INFO - Creating generators
2024-10-12 23:58 - INFO - The model has 651,257 trainable parameters
2024-10-12 23:58 - INFO - * Model:
2024-10-12 23:58 - INFO - * -----------
2024-10-12 23:58 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 23:58 - INFO - * -----------
2024-10-12 23:58 - INFO - Evaluating model based on: rocauc
2024-10-12 23:58 - INFO - Training..

2024-10-12 23:59 - INFO - ---------------------------------------------
2024-10-12 23:59 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 23:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97579
2024-10-12 23:59 - INFO - 	 Train Loss: 0.159
2024-10-12 23:59 - INFO - 	 Val. Loss: 0.087
2024-10-12 23:59 - INFO - 	 ROC-AUC: 0.976
2024-10-12 23:59 - INFO - 	 PR-AUC: 0.797
2024-10-12 23:59 - INFO - 	 Recall for 0.4 precision: 0.955
2024-10-12 23:59 - INFO - 	 Best Val. Loss: 0.087
2024-10-12 23:59 - INFO - 	 Best ROC-AUC: 0.976
2024-10-12 23:59 - INFO - 	 Best PR-AUC: 0.797
2024-10-12 23:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-12 23:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.766
2024-10-12 23:59 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-12 23:59 - INFO - ---------------------------------------------
2024-10-13 00:00 - INFO - ---------------------------------------------
2024-10-13 00:00 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 00:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98429
2024-10-13 00:00 - INFO - 	 Train Loss: 0.085
2024-10-13 00:00 - INFO - 	 Val. Loss: 0.075
2024-10-13 00:00 - INFO - 	 ROC-AUC: 0.984
2024-10-13 00:00 - INFO - 	 PR-AUC: 0.852
2024-10-13 00:00 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:00 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 00:00 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 00:00 - INFO - 	 Best PR-AUC: 0.852
2024-10-13 00:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 00:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-13 00:00 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:00 - INFO - ---------------------------------------------
2024-10-13 00:00 - INFO - ---------------------------------------------
2024-10-13 00:00 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 00:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98611
2024-10-13 00:00 - INFO - 	 Train Loss: 0.075
2024-10-13 00:00 - INFO - 	 Val. Loss: 0.063
2024-10-13 00:00 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:00 - INFO - 	 PR-AUC: 0.873
2024-10-13 00:00 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:00 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 00:00 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:00 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 00:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-13 00:00 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:00 - INFO - ---------------------------------------------
2024-10-13 00:01 - INFO - ---------------------------------------------
2024-10-13 00:01 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 00:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98681
2024-10-13 00:01 - INFO - 	 Train Loss: 0.069
2024-10-13 00:01 - INFO - 	 Val. Loss: 0.064
2024-10-13 00:01 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:01 - INFO - 	 PR-AUC: 0.871
2024-10-13 00:01 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:01 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 00:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:01 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 00:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-13 00:01 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:01 - INFO - ---------------------------------------------
2024-10-13 00:01 - INFO - ---------------------------------------------
2024-10-13 00:01 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 00:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98685
2024-10-13 00:01 - INFO - 	 Train Loss: 0.066
2024-10-13 00:01 - INFO - 	 Val. Loss: 0.063
2024-10-13 00:01 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:01 - INFO - 	 PR-AUC: 0.880
2024-10-13 00:01 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:01 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 00:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:01 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 00:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-13 00:01 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:01 - INFO - ---------------------------------------------
2024-10-13 00:02 - INFO - ---------------------------------------------
2024-10-13 00:02 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 00:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98715
2024-10-13 00:02 - INFO - 	 Train Loss: 0.064
2024-10-13 00:02 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:02 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:02 - INFO - 	 PR-AUC: 0.881
2024-10-13 00:02 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:02 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 00:02 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:02 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 00:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-13 00:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:02 - INFO - ---------------------------------------------
2024-10-13 00:02 - INFO - ---------------------------------------------
2024-10-13 00:02 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 00:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98737
2024-10-13 00:02 - INFO - 	 Train Loss: 0.061
2024-10-13 00:02 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:02 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:02 - INFO - 	 PR-AUC: 0.885
2024-10-13 00:02 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:02 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 00:02 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:02 - INFO - 	 Best PR-AUC: 0.885
2024-10-13 00:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 00:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-13 00:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:02 - INFO - ---------------------------------------------
2024-10-13 00:03 - INFO - ---------------------------------------------
2024-10-13 00:03 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 00:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9874
2024-10-13 00:03 - INFO - 	 Train Loss: 0.061
2024-10-13 00:03 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:03 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:03 - INFO - 	 PR-AUC: 0.885
2024-10-13 00:03 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:03 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 00:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:03 - INFO - 	 Best PR-AUC: 0.885
2024-10-13 00:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-13 00:03 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:03 - INFO - ---------------------------------------------
2024-10-13 00:03 - INFO - ---------------------------------------------
2024-10-13 00:03 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 00:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98839
2024-10-13 00:03 - INFO - 	 Train Loss: 0.059
2024-10-13 00:03 - INFO - 	 Val. Loss: 0.057
2024-10-13 00:03 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:03 - INFO - 	 PR-AUC: 0.893
2024-10-13 00:03 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:03 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 00:03 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:03 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 00:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-13 00:03 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:03 - INFO - ---------------------------------------------
2024-10-13 00:04 - INFO - ---------------------------------------------
2024-10-13 00:04 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 00:04 - INFO - 	 Train Loss: 0.057
2024-10-13 00:04 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:04 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:04 - INFO - 	 PR-AUC: 0.889
2024-10-13 00:04 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:04 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 00:04 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:04 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 00:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-13 00:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:04 - INFO - ---------------------------------------------
2024-10-13 00:05 - INFO - Fit the preprocessing pipeline
2024-10-13 00:05 - INFO - Training using device: cuda
2024-10-13 00:05 - INFO - Creating generators
2024-10-13 00:05 - INFO - The model has 651,257 trainable parameters
2024-10-13 00:05 - INFO - * Model:
2024-10-13 00:05 - INFO - * -----------
2024-10-13 00:05 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 00:05 - INFO - * -----------
2024-10-13 00:05 - INFO - Evaluating model based on: rocauc
2024-10-13 00:05 - INFO - Training..

2024-10-13 00:06 - INFO - ---------------------------------------------
2024-10-13 00:06 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 00:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97823
2024-10-13 00:06 - INFO - 	 Train Loss: 0.167
2024-10-13 00:06 - INFO - 	 Val. Loss: 0.085
2024-10-13 00:06 - INFO - 	 ROC-AUC: 0.978
2024-10-13 00:06 - INFO - 	 PR-AUC: 0.779
2024-10-13 00:06 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 00:06 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 00:06 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 00:06 - INFO - 	 Best PR-AUC: 0.779
2024-10-13 00:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 00:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.775
2024-10-13 00:06 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 00:06 - INFO - ---------------------------------------------
2024-10-13 00:06 - INFO - ---------------------------------------------
2024-10-13 00:06 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 00:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98502
2024-10-13 00:06 - INFO - 	 Train Loss: 0.085
2024-10-13 00:06 - INFO - 	 Val. Loss: 0.075
2024-10-13 00:06 - INFO - 	 ROC-AUC: 0.985
2024-10-13 00:06 - INFO - 	 PR-AUC: 0.865
2024-10-13 00:06 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 00:06 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 00:06 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 00:06 - INFO - 	 Best PR-AUC: 0.865
2024-10-13 00:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 00:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 00:06 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 00:06 - INFO - ---------------------------------------------
2024-10-13 00:07 - INFO - ---------------------------------------------
2024-10-13 00:07 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 00:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98589
2024-10-13 00:07 - INFO - 	 Train Loss: 0.075
2024-10-13 00:07 - INFO - 	 Val. Loss: 0.065
2024-10-13 00:07 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:07 - INFO - 	 PR-AUC: 0.868
2024-10-13 00:07 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:07 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 00:07 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:07 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 00:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 00:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 00:07 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 00:07 - INFO - ---------------------------------------------
2024-10-13 00:07 - INFO - ---------------------------------------------
2024-10-13 00:07 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 00:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98791
2024-10-13 00:07 - INFO - 	 Train Loss: 0.069
2024-10-13 00:07 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:07 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:07 - INFO - 	 PR-AUC: 0.891
2024-10-13 00:07 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:07 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 00:07 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:07 - INFO - 	 Best PR-AUC: 0.891
2024-10-13 00:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-13 00:07 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:07 - INFO - ---------------------------------------------
2024-10-13 00:08 - INFO - ---------------------------------------------
2024-10-13 00:08 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 00:08 - INFO - 	 Train Loss: 0.064
2024-10-13 00:08 - INFO - 	 Val. Loss: 0.061
2024-10-13 00:08 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:08 - INFO - 	 PR-AUC: 0.877
2024-10-13 00:08 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:08 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 00:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:08 - INFO - 	 Best PR-AUC: 0.891
2024-10-13 00:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-13 00:08 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:08 - INFO - ---------------------------------------------
2024-10-13 00:08 - INFO - ---------------------------------------------
2024-10-13 00:08 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 00:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98807
2024-10-13 00:08 - INFO - 	 Train Loss: 0.064
2024-10-13 00:08 - INFO - 	 Val. Loss: 0.059
2024-10-13 00:08 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:08 - INFO - 	 PR-AUC: 0.892
2024-10-13 00:08 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-13 00:08 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:08 - INFO - 	 Best PR-AUC: 0.892
2024-10-13 00:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-13 00:08 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 00:08 - INFO - ---------------------------------------------
2024-10-13 00:09 - INFO - ---------------------------------------------
2024-10-13 00:09 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 00:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98823
2024-10-13 00:09 - INFO - 	 Train Loss: 0.061
2024-10-13 00:09 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:09 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:09 - INFO - 	 PR-AUC: 0.890
2024-10-13 00:09 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:09 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:09 - INFO - 	 Best PR-AUC: 0.892
2024-10-13 00:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 00:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-13 00:09 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 00:09 - INFO - ---------------------------------------------
2024-10-13 00:09 - INFO - ---------------------------------------------
2024-10-13 00:09 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 00:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9886
2024-10-13 00:09 - INFO - 	 Train Loss: 0.059
2024-10-13 00:09 - INFO - 	 Val. Loss: 0.056
2024-10-13 00:09 - INFO - 	 ROC-AUC: 0.989
2024-10-13 00:09 - INFO - 	 PR-AUC: 0.898
2024-10-13 00:09 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:09 - INFO - 	 Best Val. Loss: 0.056
2024-10-13 00:09 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 00:09 - INFO - 	 Best PR-AUC: 0.898
2024-10-13 00:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 00:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-13 00:09 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 00:09 - INFO - ---------------------------------------------
2024-10-13 00:10 - INFO - ---------------------------------------------
2024-10-13 00:10 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 00:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98869
2024-10-13 00:10 - INFO - 	 Train Loss: 0.059
2024-10-13 00:10 - INFO - 	 Val. Loss: 0.056
2024-10-13 00:10 - INFO - 	 ROC-AUC: 0.989
2024-10-13 00:10 - INFO - 	 PR-AUC: 0.900
2024-10-13 00:10 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:10 - INFO - 	 Best Val. Loss: 0.056
2024-10-13 00:10 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 00:10 - INFO - 	 Best PR-AUC: 0.900
2024-10-13 00:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-13 00:10 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 00:10 - INFO - ---------------------------------------------
2024-10-13 00:11 - INFO - ---------------------------------------------
2024-10-13 00:11 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 00:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98885
2024-10-13 00:11 - INFO - 	 Train Loss: 0.057
2024-10-13 00:11 - INFO - 	 Val. Loss: 0.056
2024-10-13 00:11 - INFO - 	 ROC-AUC: 0.989
2024-10-13 00:11 - INFO - 	 PR-AUC: 0.903
2024-10-13 00:11 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-13 00:11 - INFO - 	 Best Val. Loss: 0.056
2024-10-13 00:11 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 00:11 - INFO - 	 Best PR-AUC: 0.903
2024-10-13 00:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-13 00:11 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-13 00:11 - INFO - ---------------------------------------------
2024-10-13 00:12 - INFO - Fit the preprocessing pipeline
2024-10-13 00:12 - INFO - Training using device: cuda
2024-10-13 00:12 - INFO - Creating generators
2024-10-13 00:12 - INFO - The model has 651,257 trainable parameters
2024-10-13 00:12 - INFO - * Model:
2024-10-13 00:12 - INFO - * -----------
2024-10-13 00:12 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 00:12 - INFO - * -----------
2024-10-13 00:12 - INFO - Evaluating model based on: rocauc
2024-10-13 00:12 - INFO - Training..

2024-10-13 00:13 - INFO - ---------------------------------------------
2024-10-13 00:13 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 00:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98082
2024-10-13 00:13 - INFO - 	 Train Loss: 0.158
2024-10-13 00:13 - INFO - 	 Val. Loss: 0.079
2024-10-13 00:13 - INFO - 	 ROC-AUC: 0.981
2024-10-13 00:13 - INFO - 	 PR-AUC: 0.810
2024-10-13 00:13 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 00:13 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 00:13 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 00:13 - INFO - 	 Best PR-AUC: 0.810
2024-10-13 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.782
2024-10-13 00:13 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 00:13 - INFO - ---------------------------------------------
2024-10-13 00:13 - INFO - ---------------------------------------------
2024-10-13 00:13 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 00:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98578
2024-10-13 00:13 - INFO - 	 Train Loss: 0.083
2024-10-13 00:13 - INFO - 	 Val. Loss: 0.068
2024-10-13 00:13 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:13 - INFO - 	 PR-AUC: 0.863
2024-10-13 00:13 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 00:13 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 00:13 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:13 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-13 00:13 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 00:13 - INFO - ---------------------------------------------
2024-10-13 00:14 - INFO - ---------------------------------------------
2024-10-13 00:14 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 00:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98681
2024-10-13 00:14 - INFO - 	 Train Loss: 0.073
2024-10-13 00:14 - INFO - 	 Val. Loss: 0.064
2024-10-13 00:14 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:14 - INFO - 	 PR-AUC: 0.875
2024-10-13 00:14 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:14 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 00:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:14 - INFO - 	 Best PR-AUC: 0.875
2024-10-13 00:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 00:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-13 00:14 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:14 - INFO - ---------------------------------------------
2024-10-13 00:14 - INFO - ---------------------------------------------
2024-10-13 00:14 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 00:14 - INFO - 	 Train Loss: 0.069
2024-10-13 00:14 - INFO - 	 Val. Loss: 0.067
2024-10-13 00:14 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:14 - INFO - 	 PR-AUC: 0.867
2024-10-13 00:14 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:14 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 00:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:14 - INFO - 	 Best PR-AUC: 0.875
2024-10-13 00:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 00:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-13 00:14 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:14 - INFO - ---------------------------------------------
2024-10-13 00:15 - INFO - ---------------------------------------------
2024-10-13 00:15 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 00:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98692
2024-10-13 00:15 - INFO - 	 Train Loss: 0.067
2024-10-13 00:15 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:15 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:15 - INFO - 	 PR-AUC: 0.878
2024-10-13 00:15 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:15 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 00:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:15 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 00:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 00:15 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 00:15 - INFO - ---------------------------------------------
2024-10-13 00:15 - INFO - ---------------------------------------------
2024-10-13 00:15 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 00:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98764
2024-10-13 00:15 - INFO - 	 Train Loss: 0.063
2024-10-13 00:15 - INFO - 	 Val. Loss: 0.059
2024-10-13 00:15 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:15 - INFO - 	 PR-AUC: 0.886
2024-10-13 00:15 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:15 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:15 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:15 - INFO - 	 Best PR-AUC: 0.886
2024-10-13 00:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 00:15 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:15 - INFO - ---------------------------------------------
2024-10-13 00:16 - INFO - ---------------------------------------------
2024-10-13 00:16 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 00:16 - INFO - 	 Train Loss: 0.062
2024-10-13 00:16 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:16 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:16 - INFO - 	 PR-AUC: 0.888
2024-10-13 00:16 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:16 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:16 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 00:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-13 00:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:16 - INFO - ---------------------------------------------
2024-10-13 00:16 - INFO - ---------------------------------------------
2024-10-13 00:16 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 00:16 - INFO - 	 Train Loss: 0.060
2024-10-13 00:16 - INFO - 	 Val. Loss: 0.059
2024-10-13 00:16 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:16 - INFO - 	 PR-AUC: 0.891
2024-10-13 00:16 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:16 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:16 - INFO - 	 Best PR-AUC: 0.891
2024-10-13 00:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-13 00:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:16 - INFO - ---------------------------------------------
2024-10-13 00:17 - INFO - ---------------------------------------------
2024-10-13 00:17 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 00:17 - INFO - 	 Train Loss: 0.057
2024-10-13 00:17 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:17 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:17 - INFO - 	 PR-AUC: 0.882
2024-10-13 00:17 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:17 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:17 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:17 - INFO - 	 Best PR-AUC: 0.891
2024-10-13 00:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-13 00:17 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:17 - INFO - ---------------------------------------------
2024-10-13 00:17 - INFO - ---------------------------------------------
2024-10-13 00:17 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 00:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98832
2024-10-13 00:17 - INFO - 	 Train Loss: 0.057
2024-10-13 00:17 - INFO - 	 Val. Loss: 0.057
2024-10-13 00:17 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:17 - INFO - 	 PR-AUC: 0.896
2024-10-13 00:17 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:17 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 00:17 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:17 - INFO - 	 Best PR-AUC: 0.896
2024-10-13 00:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-13 00:17 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:17 - INFO - ---------------------------------------------
2024-10-13 00:19 - INFO - Fit the preprocessing pipeline
2024-10-13 00:19 - INFO - Training using device: cuda
2024-10-13 00:19 - INFO - Creating generators
2024-10-13 00:19 - INFO - The model has 651,257 trainable parameters
2024-10-13 00:19 - INFO - * Model:
2024-10-13 00:19 - INFO - * -----------
2024-10-13 00:19 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 00:19 - INFO - * -----------
2024-10-13 00:19 - INFO - Evaluating model based on: rocauc
2024-10-13 00:19 - INFO - Training..

2024-10-13 00:19 - INFO - ---------------------------------------------
2024-10-13 00:19 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 00:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9793
2024-10-13 00:19 - INFO - 	 Train Loss: 0.159
2024-10-13 00:19 - INFO - 	 Val. Loss: 0.089
2024-10-13 00:19 - INFO - 	 ROC-AUC: 0.979
2024-10-13 00:19 - INFO - 	 PR-AUC: 0.793
2024-10-13 00:19 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 00:19 - INFO - 	 Best Val. Loss: 0.089
2024-10-13 00:19 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 00:19 - INFO - 	 Best PR-AUC: 0.793
2024-10-13 00:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 00:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-13 00:19 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 00:19 - INFO - ---------------------------------------------
2024-10-13 00:20 - INFO - ---------------------------------------------
2024-10-13 00:20 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 00:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98259
2024-10-13 00:20 - INFO - 	 Train Loss: 0.085
2024-10-13 00:20 - INFO - 	 Val. Loss: 0.070
2024-10-13 00:20 - INFO - 	 ROC-AUC: 0.983
2024-10-13 00:20 - INFO - 	 PR-AUC: 0.848
2024-10-13 00:20 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 00:20 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 00:20 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 00:20 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 00:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 00:20 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 00:20 - INFO - ---------------------------------------------
2024-10-13 00:20 - INFO - ---------------------------------------------
2024-10-13 00:20 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 00:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98499
2024-10-13 00:20 - INFO - 	 Train Loss: 0.075
2024-10-13 00:20 - INFO - 	 Val. Loss: 0.068
2024-10-13 00:20 - INFO - 	 ROC-AUC: 0.985
2024-10-13 00:20 - INFO - 	 PR-AUC: 0.866
2024-10-13 00:20 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:20 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 00:20 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 00:20 - INFO - 	 Best PR-AUC: 0.866
2024-10-13 00:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 00:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 00:20 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 00:20 - INFO - ---------------------------------------------
2024-10-13 00:21 - INFO - ---------------------------------------------
2024-10-13 00:21 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 00:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98609
2024-10-13 00:21 - INFO - 	 Train Loss: 0.071
2024-10-13 00:21 - INFO - 	 Val. Loss: 0.064
2024-10-13 00:21 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:21 - INFO - 	 PR-AUC: 0.872
2024-10-13 00:21 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:21 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 00:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:21 - INFO - 	 Best PR-AUC: 0.872
2024-10-13 00:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 00:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 00:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:21 - INFO - ---------------------------------------------
2024-10-13 00:21 - INFO - ---------------------------------------------
2024-10-13 00:21 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 00:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98681
2024-10-13 00:21 - INFO - 	 Train Loss: 0.067
2024-10-13 00:21 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:21 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:21 - INFO - 	 PR-AUC: 0.878
2024-10-13 00:21 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:21 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 00:21 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:21 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 00:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 00:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-13 00:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:21 - INFO - ---------------------------------------------
2024-10-13 00:22 - INFO - ---------------------------------------------
2024-10-13 00:22 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 00:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.987
2024-10-13 00:22 - INFO - 	 Train Loss: 0.063
2024-10-13 00:22 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:22 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:22 - INFO - 	 PR-AUC: 0.882
2024-10-13 00:22 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 00:22 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 00:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:22 - INFO - 	 Best PR-AUC: 0.882
2024-10-13 00:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 00:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-13 00:22 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:22 - INFO - ---------------------------------------------
2024-10-13 00:23 - INFO - ---------------------------------------------
2024-10-13 00:23 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 00:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98756
2024-10-13 00:23 - INFO - 	 Train Loss: 0.062
2024-10-13 00:23 - INFO - 	 Val. Loss: 0.066
2024-10-13 00:23 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:23 - INFO - 	 PR-AUC: 0.889
2024-10-13 00:23 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:23 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 00:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:23 - INFO - 	 Best PR-AUC: 0.889
2024-10-13 00:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-13 00:23 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:23 - INFO - ---------------------------------------------
2024-10-13 00:23 - INFO - ---------------------------------------------
2024-10-13 00:23 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 00:23 - INFO - 	 Train Loss: 0.060
2024-10-13 00:23 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:23 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:23 - INFO - 	 PR-AUC: 0.879
2024-10-13 00:23 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:23 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 00:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:23 - INFO - 	 Best PR-AUC: 0.889
2024-10-13 00:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-13 00:23 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:23 - INFO - ---------------------------------------------
2024-10-13 00:24 - INFO - ---------------------------------------------
2024-10-13 00:24 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 00:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98798
2024-10-13 00:24 - INFO - 	 Train Loss: 0.059
2024-10-13 00:24 - INFO - 	 Val. Loss: 0.058
2024-10-13 00:24 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:24 - INFO - 	 PR-AUC: 0.895
2024-10-13 00:24 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:24 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 00:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:24 - INFO - 	 Best PR-AUC: 0.895
2024-10-13 00:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-13 00:24 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:24 - INFO - ---------------------------------------------
2024-10-13 00:24 - INFO - ---------------------------------------------
2024-10-13 00:24 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 00:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98823
2024-10-13 00:24 - INFO - 	 Train Loss: 0.058
2024-10-13 00:24 - INFO - 	 Val. Loss: 0.058
2024-10-13 00:24 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:24 - INFO - 	 PR-AUC: 0.897
2024-10-13 00:24 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-13 00:24 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 00:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:24 - INFO - 	 Best PR-AUC: 0.897
2024-10-13 00:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 00:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-13 00:24 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 00:24 - INFO - ---------------------------------------------
2024-10-13 00:26 - INFO - Fit the preprocessing pipeline
2024-10-13 00:26 - INFO - Training using device: cuda
2024-10-13 00:26 - INFO - Creating generators
2024-10-13 00:26 - INFO - The model has 651,257 trainable parameters
2024-10-13 00:26 - INFO - * Model:
2024-10-13 00:26 - INFO - * -----------
2024-10-13 00:26 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 00:26 - INFO - * -----------
2024-10-13 00:26 - INFO - Evaluating model based on: rocauc
2024-10-13 00:26 - INFO - Training..

2024-10-13 00:26 - INFO - ---------------------------------------------
2024-10-13 00:26 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 00:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97975
2024-10-13 00:26 - INFO - 	 Train Loss: 0.156
2024-10-13 00:26 - INFO - 	 Val. Loss: 0.079
2024-10-13 00:26 - INFO - 	 ROC-AUC: 0.980
2024-10-13 00:26 - INFO - 	 PR-AUC: 0.831
2024-10-13 00:26 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 00:26 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 00:26 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 00:26 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 00:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 00:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-13 00:26 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 00:26 - INFO - ---------------------------------------------
2024-10-13 00:27 - INFO - ---------------------------------------------
2024-10-13 00:27 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 00:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98275
2024-10-13 00:27 - INFO - 	 Train Loss: 0.084
2024-10-13 00:27 - INFO - 	 Val. Loss: 0.072
2024-10-13 00:27 - INFO - 	 ROC-AUC: 0.983
2024-10-13 00:27 - INFO - 	 PR-AUC: 0.853
2024-10-13 00:27 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 00:27 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 00:27 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 00:27 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 00:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 00:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 00:27 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 00:27 - INFO - ---------------------------------------------
2024-10-13 00:27 - INFO - ---------------------------------------------
2024-10-13 00:27 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 00:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98455
2024-10-13 00:27 - INFO - 	 Train Loss: 0.074
2024-10-13 00:27 - INFO - 	 Val. Loss: 0.072
2024-10-13 00:27 - INFO - 	 ROC-AUC: 0.985
2024-10-13 00:27 - INFO - 	 PR-AUC: 0.867
2024-10-13 00:27 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 00:27 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 00:27 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 00:27 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 00:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 00:27 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 00:27 - INFO - ---------------------------------------------
2024-10-13 00:28 - INFO - ---------------------------------------------
2024-10-13 00:28 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 00:28 - INFO - 	 Train Loss: 0.070
2024-10-13 00:28 - INFO - 	 Val. Loss: 0.072
2024-10-13 00:28 - INFO - 	 ROC-AUC: 0.984
2024-10-13 00:28 - INFO - 	 PR-AUC: 0.874
2024-10-13 00:28 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 00:28 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 00:28 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 00:28 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 00:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 00:28 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 00:28 - INFO - ---------------------------------------------
2024-10-13 00:28 - INFO - ---------------------------------------------
2024-10-13 00:28 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 00:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98714
2024-10-13 00:28 - INFO - 	 Train Loss: 0.067
2024-10-13 00:28 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:28 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:28 - INFO - 	 PR-AUC: 0.881
2024-10-13 00:28 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:28 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 00:28 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:28 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 00:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 00:28 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:28 - INFO - ---------------------------------------------
2024-10-13 00:29 - INFO - ---------------------------------------------
2024-10-13 00:29 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 00:29 - INFO - 	 Train Loss: 0.066
2024-10-13 00:29 - INFO - 	 Val. Loss: 0.064
2024-10-13 00:29 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:29 - INFO - 	 PR-AUC: 0.875
2024-10-13 00:29 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 00:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:29 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 00:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 00:29 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:29 - INFO - ---------------------------------------------
2024-10-13 00:29 - INFO - ---------------------------------------------
2024-10-13 00:29 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 00:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98749
2024-10-13 00:29 - INFO - 	 Train Loss: 0.062
2024-10-13 00:29 - INFO - 	 Val. Loss: 0.064
2024-10-13 00:29 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:29 - INFO - 	 PR-AUC: 0.879
2024-10-13 00:29 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 00:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:29 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 00:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 00:29 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:29 - INFO - ---------------------------------------------
2024-10-13 00:30 - INFO - ---------------------------------------------
2024-10-13 00:30 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 00:30 - INFO - 	 Train Loss: 0.060
2024-10-13 00:30 - INFO - 	 Val. Loss: 0.061
2024-10-13 00:30 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:30 - INFO - 	 PR-AUC: 0.881
2024-10-13 00:30 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:30 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 00:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:30 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 00:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 00:30 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:30 - INFO - ---------------------------------------------
2024-10-13 00:30 - INFO - ---------------------------------------------
2024-10-13 00:30 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 00:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98823
2024-10-13 00:30 - INFO - 	 Train Loss: 0.058
2024-10-13 00:30 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:30 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:30 - INFO - 	 PR-AUC: 0.889
2024-10-13 00:30 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:30 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 00:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:30 - INFO - 	 Best PR-AUC: 0.889
2024-10-13 00:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-13 00:30 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:30 - INFO - ---------------------------------------------
2024-10-13 00:31 - INFO - ---------------------------------------------
2024-10-13 00:31 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 00:31 - INFO - 	 Train Loss: 0.058
2024-10-13 00:31 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:31 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:31 - INFO - 	 PR-AUC: 0.885
2024-10-13 00:31 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:31 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 00:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:31 - INFO - 	 Best PR-AUC: 0.889
2024-10-13 00:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-13 00:31 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:31 - INFO - ---------------------------------------------
2024-10-13 00:32 - INFO - Fit the preprocessing pipeline
2024-10-13 00:32 - INFO - Training using device: cuda
2024-10-13 00:32 - INFO - Creating generators
2024-10-13 00:32 - INFO - The model has 651,257 trainable parameters
2024-10-13 00:32 - INFO - * Model:
2024-10-13 00:32 - INFO - * -----------
2024-10-13 00:32 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 00:32 - INFO - * -----------
2024-10-13 00:32 - INFO - Evaluating model based on: rocauc
2024-10-13 00:32 - INFO - Training..

2024-10-13 00:33 - INFO - ---------------------------------------------
2024-10-13 00:33 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 00:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97811
2024-10-13 00:33 - INFO - 	 Train Loss: 0.149
2024-10-13 00:33 - INFO - 	 Val. Loss: 0.112
2024-10-13 00:33 - INFO - 	 ROC-AUC: 0.978
2024-10-13 00:33 - INFO - 	 PR-AUC: 0.826
2024-10-13 00:33 - INFO - 	 Recall for 0.4 precision: 0.960
2024-10-13 00:33 - INFO - 	 Best Val. Loss: 0.112
2024-10-13 00:33 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 00:33 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 00:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 00:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-13 00:33 - INFO - 	 Best Recall for 0.4 precision: 0.960
2024-10-13 00:33 - INFO - ---------------------------------------------
2024-10-13 00:33 - INFO - ---------------------------------------------
2024-10-13 00:33 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 00:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98374
2024-10-13 00:33 - INFO - 	 Train Loss: 0.082
2024-10-13 00:33 - INFO - 	 Val. Loss: 0.083
2024-10-13 00:33 - INFO - 	 ROC-AUC: 0.984
2024-10-13 00:33 - INFO - 	 PR-AUC: 0.868
2024-10-13 00:33 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 00:33 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 00:33 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 00:33 - INFO - 	 Best PR-AUC: 0.868
2024-10-13 00:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 00:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 00:33 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 00:33 - INFO - ---------------------------------------------
2024-10-13 00:34 - INFO - ---------------------------------------------
2024-10-13 00:34 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 00:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98683
2024-10-13 00:34 - INFO - 	 Train Loss: 0.074
2024-10-13 00:34 - INFO - 	 Val. Loss: 0.067
2024-10-13 00:34 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:34 - INFO - 	 PR-AUC: 0.883
2024-10-13 00:34 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:34 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 00:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:34 - INFO - 	 Best PR-AUC: 0.883
2024-10-13 00:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 00:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 00:34 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:34 - INFO - ---------------------------------------------
2024-10-13 00:34 - INFO - ---------------------------------------------
2024-10-13 00:34 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 00:34 - INFO - 	 Train Loss: 0.068
2024-10-13 00:34 - INFO - 	 Val. Loss: 0.066
2024-10-13 00:34 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:34 - INFO - 	 PR-AUC: 0.880
2024-10-13 00:34 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 00:34 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 00:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:34 - INFO - 	 Best PR-AUC: 0.883
2024-10-13 00:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 00:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 00:34 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:34 - INFO - ---------------------------------------------
2024-10-13 00:35 - INFO - ---------------------------------------------
2024-10-13 00:35 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 00:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98689
2024-10-13 00:35 - INFO - 	 Train Loss: 0.067
2024-10-13 00:35 - INFO - 	 Val. Loss: 0.071
2024-10-13 00:35 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:35 - INFO - 	 PR-AUC: 0.888
2024-10-13 00:35 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:35 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 00:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:35 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 00:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 00:35 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 00:35 - INFO - ---------------------------------------------
2024-10-13 00:36 - INFO - ---------------------------------------------
2024-10-13 00:36 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 00:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98706
2024-10-13 00:36 - INFO - 	 Train Loss: 0.063
2024-10-13 00:36 - INFO - 	 Val. Loss: 0.076
2024-10-13 00:36 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:36 - INFO - 	 PR-AUC: 0.878
2024-10-13 00:36 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:36 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 00:36 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:36 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 00:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-13 00:36 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 00:36 - INFO - ---------------------------------------------
2024-10-13 00:36 - INFO - ---------------------------------------------
2024-10-13 00:36 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 00:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98798
2024-10-13 00:36 - INFO - 	 Train Loss: 0.060
2024-10-13 00:36 - INFO - 	 Val. Loss: 0.068
2024-10-13 00:36 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:36 - INFO - 	 PR-AUC: 0.891
2024-10-13 00:36 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:36 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 00:36 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:36 - INFO - 	 Best PR-AUC: 0.891
2024-10-13 00:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-13 00:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:36 - INFO - ---------------------------------------------
2024-10-13 00:37 - INFO - ---------------------------------------------
2024-10-13 00:37 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 00:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98814
2024-10-13 00:37 - INFO - 	 Train Loss: 0.060
2024-10-13 00:37 - INFO - 	 Val. Loss: 0.063
2024-10-13 00:37 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:37 - INFO - 	 PR-AUC: 0.892
2024-10-13 00:37 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:37 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 00:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:37 - INFO - 	 Best PR-AUC: 0.892
2024-10-13 00:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-13 00:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:37 - INFO - ---------------------------------------------
2024-10-13 00:37 - INFO - ---------------------------------------------
2024-10-13 00:37 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 00:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98864
2024-10-13 00:37 - INFO - 	 Train Loss: 0.058
2024-10-13 00:37 - INFO - 	 Val. Loss: 0.059
2024-10-13 00:37 - INFO - 	 ROC-AUC: 0.989
2024-10-13 00:37 - INFO - 	 PR-AUC: 0.894
2024-10-13 00:37 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:37 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:37 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 00:37 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 00:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-13 00:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:37 - INFO - ---------------------------------------------
2024-10-13 00:38 - INFO - ---------------------------------------------
2024-10-13 00:38 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 00:38 - INFO - 	 Train Loss: 0.057
2024-10-13 00:38 - INFO - 	 Val. Loss: 0.059
2024-10-13 00:38 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:38 - INFO - 	 PR-AUC: 0.898
2024-10-13 00:38 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:38 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:38 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 00:38 - INFO - 	 Best PR-AUC: 0.898
2024-10-13 00:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-13 00:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:38 - INFO - ---------------------------------------------
2024-10-13 00:39 - INFO - Fit the preprocessing pipeline
2024-10-13 00:39 - INFO - Training using device: cuda
2024-10-13 00:39 - INFO - Creating generators
2024-10-13 00:39 - INFO - The model has 651,257 trainable parameters
2024-10-13 00:39 - INFO - * Model:
2024-10-13 00:39 - INFO - * -----------
2024-10-13 00:39 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 00:39 - INFO - * -----------
2024-10-13 00:39 - INFO - Evaluating model based on: rocauc
2024-10-13 00:39 - INFO - Training..

2024-10-13 00:40 - INFO - ---------------------------------------------
2024-10-13 00:40 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 00:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97847
2024-10-13 00:40 - INFO - 	 Train Loss: 0.160
2024-10-13 00:40 - INFO - 	 Val. Loss: 0.084
2024-10-13 00:40 - INFO - 	 ROC-AUC: 0.978
2024-10-13 00:40 - INFO - 	 PR-AUC: 0.812
2024-10-13 00:40 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 00:40 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 00:40 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 00:40 - INFO - 	 Best PR-AUC: 0.812
2024-10-13 00:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 00:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.770
2024-10-13 00:40 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 00:40 - INFO - ---------------------------------------------
2024-10-13 00:40 - INFO - ---------------------------------------------
2024-10-13 00:40 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 00:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98538
2024-10-13 00:40 - INFO - 	 Train Loss: 0.084
2024-10-13 00:40 - INFO - 	 Val. Loss: 0.067
2024-10-13 00:40 - INFO - 	 ROC-AUC: 0.985
2024-10-13 00:40 - INFO - 	 PR-AUC: 0.858
2024-10-13 00:40 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 00:40 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 00:40 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 00:40 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 00:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 00:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 00:40 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 00:40 - INFO - ---------------------------------------------
2024-10-13 00:41 - INFO - ---------------------------------------------
2024-10-13 00:41 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 00:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98583
2024-10-13 00:41 - INFO - 	 Train Loss: 0.076
2024-10-13 00:41 - INFO - 	 Val. Loss: 0.067
2024-10-13 00:41 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:41 - INFO - 	 PR-AUC: 0.860
2024-10-13 00:41 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:41 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 00:41 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:41 - INFO - 	 Best PR-AUC: 0.860
2024-10-13 00:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 00:41 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:41 - INFO - ---------------------------------------------
2024-10-13 00:41 - INFO - ---------------------------------------------
2024-10-13 00:41 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 00:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9859
2024-10-13 00:41 - INFO - 	 Train Loss: 0.071
2024-10-13 00:41 - INFO - 	 Val. Loss: 0.067
2024-10-13 00:41 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:41 - INFO - 	 PR-AUC: 0.877
2024-10-13 00:41 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 00:41 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 00:41 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:41 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 00:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 00:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-13 00:41 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:41 - INFO - ---------------------------------------------
2024-10-13 00:42 - INFO - ---------------------------------------------
2024-10-13 00:42 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 00:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98635
2024-10-13 00:42 - INFO - 	 Train Loss: 0.067
2024-10-13 00:42 - INFO - 	 Val. Loss: 0.064
2024-10-13 00:42 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:42 - INFO - 	 PR-AUC: 0.874
2024-10-13 00:42 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 00:42 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 00:42 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:42 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 00:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-13 00:42 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:42 - INFO - ---------------------------------------------
2024-10-13 00:42 - INFO - ---------------------------------------------
2024-10-13 00:42 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 00:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98724
2024-10-13 00:42 - INFO - 	 Train Loss: 0.064
2024-10-13 00:42 - INFO - 	 Val. Loss: 0.065
2024-10-13 00:42 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:42 - INFO - 	 PR-AUC: 0.882
2024-10-13 00:42 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:42 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 00:42 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:42 - INFO - 	 Best PR-AUC: 0.882
2024-10-13 00:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-13 00:42 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:42 - INFO - ---------------------------------------------
2024-10-13 00:43 - INFO - ---------------------------------------------
2024-10-13 00:43 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 00:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98753
2024-10-13 00:43 - INFO - 	 Train Loss: 0.062
2024-10-13 00:43 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:43 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:43 - INFO - 	 PR-AUC: 0.894
2024-10-13 00:43 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 00:43 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 00:43 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:43 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 00:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-13 00:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:43 - INFO - ---------------------------------------------
2024-10-13 00:43 - INFO - ---------------------------------------------
2024-10-13 00:43 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 00:43 - INFO - 	 Train Loss: 0.060
2024-10-13 00:43 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:43 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:43 - INFO - 	 PR-AUC: 0.887
2024-10-13 00:43 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:43 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 00:43 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:43 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 00:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-13 00:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:43 - INFO - ---------------------------------------------
2024-10-13 00:44 - INFO - ---------------------------------------------
2024-10-13 00:44 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 00:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98944
2024-10-13 00:44 - INFO - 	 Train Loss: 0.059
2024-10-13 00:44 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:44 - INFO - 	 ROC-AUC: 0.989
2024-10-13 00:44 - INFO - 	 PR-AUC: 0.902
2024-10-13 00:44 - INFO - 	 Recall for 0.4 precision: 0.982
2024-10-13 00:44 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 00:44 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 00:44 - INFO - 	 Best PR-AUC: 0.902
2024-10-13 00:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-13 00:44 - INFO - 	 Best Recall for 0.4 precision: 0.982
2024-10-13 00:44 - INFO - ---------------------------------------------
2024-10-13 00:44 - INFO - ---------------------------------------------
2024-10-13 00:44 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 00:44 - INFO - 	 Train Loss: 0.057
2024-10-13 00:44 - INFO - 	 Val. Loss: 0.058
2024-10-13 00:44 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:44 - INFO - 	 PR-AUC: 0.895
2024-10-13 00:44 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:44 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 00:44 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 00:44 - INFO - 	 Best PR-AUC: 0.902
2024-10-13 00:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-13 00:44 - INFO - 	 Best Recall for 0.4 precision: 0.982
2024-10-13 00:44 - INFO - ---------------------------------------------
2024-10-13 00:46 - INFO - Fit the preprocessing pipeline
2024-10-13 00:46 - INFO - Training using device: cuda
2024-10-13 00:46 - INFO - Creating generators
2024-10-13 00:46 - INFO - The model has 651,257 trainable parameters
2024-10-13 00:46 - INFO - * Model:
2024-10-13 00:46 - INFO - * -----------
2024-10-13 00:46 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 00:46 - INFO - * -----------
2024-10-13 00:46 - INFO - Evaluating model based on: rocauc
2024-10-13 00:46 - INFO - Training..

2024-10-13 00:46 - INFO - ---------------------------------------------
2024-10-13 00:46 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 00:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97925
2024-10-13 00:46 - INFO - 	 Train Loss: 0.156
2024-10-13 00:46 - INFO - 	 Val. Loss: 0.082
2024-10-13 00:46 - INFO - 	 ROC-AUC: 0.979
2024-10-13 00:46 - INFO - 	 PR-AUC: 0.805
2024-10-13 00:46 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 00:46 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 00:46 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 00:46 - INFO - 	 Best PR-AUC: 0.805
2024-10-13 00:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 00:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-13 00:46 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 00:46 - INFO - ---------------------------------------------
2024-10-13 00:47 - INFO - ---------------------------------------------
2024-10-13 00:47 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 00:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98465
2024-10-13 00:47 - INFO - 	 Train Loss: 0.083
2024-10-13 00:47 - INFO - 	 Val. Loss: 0.066
2024-10-13 00:47 - INFO - 	 ROC-AUC: 0.985
2024-10-13 00:47 - INFO - 	 PR-AUC: 0.864
2024-10-13 00:47 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:47 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 00:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 00:47 - INFO - 	 Best PR-AUC: 0.864
2024-10-13 00:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 00:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 00:47 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:47 - INFO - ---------------------------------------------
2024-10-13 00:48 - INFO - ---------------------------------------------
2024-10-13 00:48 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 00:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98571
2024-10-13 00:48 - INFO - 	 Train Loss: 0.073
2024-10-13 00:48 - INFO - 	 Val. Loss: 0.066
2024-10-13 00:48 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:48 - INFO - 	 PR-AUC: 0.874
2024-10-13 00:48 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:48 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 00:48 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:48 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 00:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 00:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 00:48 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:48 - INFO - ---------------------------------------------
2024-10-13 00:48 - INFO - ---------------------------------------------
2024-10-13 00:48 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 00:48 - INFO - 	 Train Loss: 0.071
2024-10-13 00:48 - INFO - 	 Val. Loss: 0.067
2024-10-13 00:48 - INFO - 	 ROC-AUC: 0.985
2024-10-13 00:48 - INFO - 	 PR-AUC: 0.868
2024-10-13 00:48 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 00:48 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 00:48 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:48 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 00:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 00:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 00:48 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:48 - INFO - ---------------------------------------------
2024-10-13 00:49 - INFO - ---------------------------------------------
2024-10-13 00:49 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 00:49 - INFO - 	 Train Loss: 0.066
2024-10-13 00:49 - INFO - 	 Val. Loss: 0.074
2024-10-13 00:49 - INFO - 	 ROC-AUC: 0.985
2024-10-13 00:49 - INFO - 	 PR-AUC: 0.871
2024-10-13 00:49 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 00:49 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 00:49 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:49 - INFO - 	 Best PR-AUC: 0.874
2024-10-13 00:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 00:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 00:49 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:49 - INFO - ---------------------------------------------
2024-10-13 00:49 - INFO - ---------------------------------------------
2024-10-13 00:49 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 00:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98786
2024-10-13 00:49 - INFO - 	 Train Loss: 0.064
2024-10-13 00:49 - INFO - 	 Val. Loss: 0.058
2024-10-13 00:49 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:49 - INFO - 	 PR-AUC: 0.893
2024-10-13 00:49 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:49 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 00:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:49 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 00:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 00:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:49 - INFO - ---------------------------------------------
2024-10-13 00:50 - INFO - ---------------------------------------------
2024-10-13 00:50 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 00:50 - INFO - 	 Train Loss: 0.062
2024-10-13 00:50 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:50 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:50 - INFO - 	 PR-AUC: 0.875
2024-10-13 00:50 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 00:50 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 00:50 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:50 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 00:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 00:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:50 - INFO - ---------------------------------------------
2024-10-13 00:50 - INFO - ---------------------------------------------
2024-10-13 00:50 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 00:50 - INFO - 	 Train Loss: 0.060
2024-10-13 00:50 - INFO - 	 Val. Loss: 0.058
2024-10-13 00:50 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:50 - INFO - 	 PR-AUC: 0.891
2024-10-13 00:50 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 00:50 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 00:50 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:50 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 00:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 00:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 00:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:50 - INFO - ---------------------------------------------
2024-10-13 00:51 - INFO - ---------------------------------------------
2024-10-13 00:51 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 00:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98848
2024-10-13 00:51 - INFO - 	 Train Loss: 0.058
2024-10-13 00:51 - INFO - 	 Val. Loss: 0.059
2024-10-13 00:51 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:51 - INFO - 	 PR-AUC: 0.893
2024-10-13 00:51 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:51 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 00:51 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:51 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 00:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 00:51 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:51 - INFO - ---------------------------------------------
2024-10-13 00:51 - INFO - ---------------------------------------------
2024-10-13 00:51 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 00:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98902
2024-10-13 00:51 - INFO - 	 Train Loss: 0.057
2024-10-13 00:51 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:51 - INFO - 	 ROC-AUC: 0.989
2024-10-13 00:51 - INFO - 	 PR-AUC: 0.894
2024-10-13 00:51 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:51 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 00:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 00:51 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 00:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-13 00:51 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:51 - INFO - ---------------------------------------------
2024-10-13 00:53 - INFO - Fit the preprocessing pipeline
2024-10-13 00:53 - INFO - Training using device: cuda
2024-10-13 00:53 - INFO - Creating generators
2024-10-13 00:53 - INFO - The model has 651,257 trainable parameters
2024-10-13 00:53 - INFO - * Model:
2024-10-13 00:53 - INFO - * -----------
2024-10-13 00:53 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 00:53 - INFO - * -----------
2024-10-13 00:53 - INFO - Evaluating model based on: rocauc
2024-10-13 00:53 - INFO - Training..

2024-10-13 00:53 - INFO - ---------------------------------------------
2024-10-13 00:53 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 00:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97488
2024-10-13 00:53 - INFO - 	 Train Loss: 0.159
2024-10-13 00:53 - INFO - 	 Val. Loss: 0.085
2024-10-13 00:53 - INFO - 	 ROC-AUC: 0.975
2024-10-13 00:53 - INFO - 	 PR-AUC: 0.812
2024-10-13 00:53 - INFO - 	 Recall for 0.4 precision: 0.950
2024-10-13 00:53 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 00:53 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 00:53 - INFO - 	 Best PR-AUC: 0.812
2024-10-13 00:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 00:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-13 00:53 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-13 00:53 - INFO - ---------------------------------------------
2024-10-13 00:54 - INFO - ---------------------------------------------
2024-10-13 00:54 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 00:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98489
2024-10-13 00:54 - INFO - 	 Train Loss: 0.085
2024-10-13 00:54 - INFO - 	 Val. Loss: 0.069
2024-10-13 00:54 - INFO - 	 ROC-AUC: 0.985
2024-10-13 00:54 - INFO - 	 PR-AUC: 0.858
2024-10-13 00:54 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:54 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 00:54 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 00:54 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 00:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 00:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 00:54 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 00:54 - INFO - ---------------------------------------------
2024-10-13 00:54 - INFO - ---------------------------------------------
2024-10-13 00:54 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 00:54 - INFO - 	 Train Loss: 0.072
2024-10-13 00:54 - INFO - 	 Val. Loss: 0.066
2024-10-13 00:54 - INFO - 	 ROC-AUC: 0.985
2024-10-13 00:54 - INFO - 	 PR-AUC: 0.861
2024-10-13 00:54 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:54 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 00:54 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 00:54 - INFO - 	 Best PR-AUC: 0.861
2024-10-13 00:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 00:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 00:54 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 00:54 - INFO - ---------------------------------------------
2024-10-13 00:55 - INFO - ---------------------------------------------
2024-10-13 00:55 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 00:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98617
2024-10-13 00:55 - INFO - 	 Train Loss: 0.068
2024-10-13 00:55 - INFO - 	 Val. Loss: 0.067
2024-10-13 00:55 - INFO - 	 ROC-AUC: 0.986
2024-10-13 00:55 - INFO - 	 PR-AUC: 0.871
2024-10-13 00:55 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:55 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 00:55 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 00:55 - INFO - 	 Best PR-AUC: 0.871
2024-10-13 00:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 00:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-13 00:55 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:55 - INFO - ---------------------------------------------
2024-10-13 00:55 - INFO - ---------------------------------------------
2024-10-13 00:55 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 00:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98739
2024-10-13 00:55 - INFO - 	 Train Loss: 0.065
2024-10-13 00:55 - INFO - 	 Val. Loss: 0.062
2024-10-13 00:55 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:55 - INFO - 	 PR-AUC: 0.891
2024-10-13 00:55 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:55 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 00:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:55 - INFO - 	 Best PR-AUC: 0.891
2024-10-13 00:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-13 00:55 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:55 - INFO - ---------------------------------------------
2024-10-13 00:56 - INFO - ---------------------------------------------
2024-10-13 00:56 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 00:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98748
2024-10-13 00:56 - INFO - 	 Train Loss: 0.063
2024-10-13 00:56 - INFO - 	 Val. Loss: 0.059
2024-10-13 00:56 - INFO - 	 ROC-AUC: 0.987
2024-10-13 00:56 - INFO - 	 PR-AUC: 0.894
2024-10-13 00:56 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 00:56 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 00:56 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 00:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-13 00:56 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:56 - INFO - ---------------------------------------------
2024-10-13 00:56 - INFO - ---------------------------------------------
2024-10-13 00:56 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 00:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98796
2024-10-13 00:56 - INFO - 	 Train Loss: 0.061
2024-10-13 00:56 - INFO - 	 Val. Loss: 0.060
2024-10-13 00:56 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:56 - INFO - 	 PR-AUC: 0.887
2024-10-13 00:56 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:56 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:56 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 00:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 00:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-13 00:56 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:56 - INFO - ---------------------------------------------
2024-10-13 00:57 - INFO - ---------------------------------------------
2024-10-13 00:57 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 00:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9882
2024-10-13 00:57 - INFO - 	 Train Loss: 0.060
2024-10-13 00:57 - INFO - 	 Val. Loss: 0.059
2024-10-13 00:57 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:57 - INFO - 	 PR-AUC: 0.890
2024-10-13 00:57 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 00:57 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 00:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:57 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 00:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 00:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-13 00:57 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:57 - INFO - ---------------------------------------------
2024-10-13 00:58 - INFO - ---------------------------------------------
2024-10-13 00:58 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 00:58 - INFO - 	 Train Loss: 0.059
2024-10-13 00:58 - INFO - 	 Val. Loss: 0.058
2024-10-13 00:58 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:58 - INFO - 	 PR-AUC: 0.890
2024-10-13 00:58 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 00:58 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 00:58 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:58 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 00:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 00:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-13 00:58 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:58 - INFO - ---------------------------------------------
2024-10-13 00:58 - INFO - ---------------------------------------------
2024-10-13 00:58 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 00:58 - INFO - 	 Train Loss: 0.058
2024-10-13 00:58 - INFO - 	 Val. Loss: 0.057
2024-10-13 00:58 - INFO - 	 ROC-AUC: 0.988
2024-10-13 00:58 - INFO - 	 PR-AUC: 0.897
2024-10-13 00:58 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 00:58 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 00:58 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 00:58 - INFO - 	 Best PR-AUC: 0.897
2024-10-13 00:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 00:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-13 00:58 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 00:58 - INFO - ---------------------------------------------
2024-10-13 01:00 - INFO - Fit the preprocessing pipeline
2024-10-13 01:00 - INFO - Training using device: cuda
2024-10-13 01:00 - INFO - Creating generators
2024-10-13 01:00 - INFO - The model has 651,257 trainable parameters
2024-10-13 01:00 - INFO - * Model:
2024-10-13 01:00 - INFO - * -----------
2024-10-13 01:00 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 01:00 - INFO - * -----------
2024-10-13 01:00 - INFO - Evaluating model based on: rocauc
2024-10-13 01:00 - INFO - Training..

2024-10-13 01:00 - INFO - ---------------------------------------------
2024-10-13 01:00 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 01:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97954
2024-10-13 01:00 - INFO - 	 Train Loss: 0.163
2024-10-13 01:00 - INFO - 	 Val. Loss: 0.084
2024-10-13 01:00 - INFO - 	 ROC-AUC: 0.980
2024-10-13 01:00 - INFO - 	 PR-AUC: 0.781
2024-10-13 01:00 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 01:00 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 01:00 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 01:00 - INFO - 	 Best PR-AUC: 0.781
2024-10-13 01:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 01:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-13 01:00 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 01:00 - INFO - ---------------------------------------------
2024-10-13 01:01 - INFO - ---------------------------------------------
2024-10-13 01:01 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 01:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98285
2024-10-13 01:01 - INFO - 	 Train Loss: 0.085
2024-10-13 01:01 - INFO - 	 Val. Loss: 0.071
2024-10-13 01:01 - INFO - 	 ROC-AUC: 0.983
2024-10-13 01:01 - INFO - 	 PR-AUC: 0.849
2024-10-13 01:01 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 01:01 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 01:01 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 01:01 - INFO - 	 Best PR-AUC: 0.849
2024-10-13 01:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 01:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-13 01:01 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 01:01 - INFO - ---------------------------------------------
2024-10-13 01:01 - INFO - ---------------------------------------------
2024-10-13 01:01 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 01:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98667
2024-10-13 01:01 - INFO - 	 Train Loss: 0.074
2024-10-13 01:01 - INFO - 	 Val. Loss: 0.068
2024-10-13 01:01 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:01 - INFO - 	 PR-AUC: 0.867
2024-10-13 01:01 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 01:01 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 01:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:01 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 01:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-13 01:01 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 01:01 - INFO - ---------------------------------------------
2024-10-13 01:02 - INFO - ---------------------------------------------
2024-10-13 01:02 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 01:02 - INFO - 	 Train Loss: 0.070
2024-10-13 01:02 - INFO - 	 Val. Loss: 0.063
2024-10-13 01:02 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:02 - INFO - 	 PR-AUC: 0.878
2024-10-13 01:02 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 01:02 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 01:02 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:02 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 01:02 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 01:02 - INFO - ---------------------------------------------
2024-10-13 01:02 - INFO - ---------------------------------------------
2024-10-13 01:02 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 01:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98808
2024-10-13 01:02 - INFO - 	 Train Loss: 0.068
2024-10-13 01:02 - INFO - 	 Val. Loss: 0.062
2024-10-13 01:02 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:02 - INFO - 	 PR-AUC: 0.894
2024-10-13 01:02 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:02 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 01:02 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:02 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-13 01:02 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 01:02 - INFO - ---------------------------------------------
2024-10-13 01:03 - INFO - ---------------------------------------------
2024-10-13 01:03 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 01:03 - INFO - 	 Train Loss: 0.063
2024-10-13 01:03 - INFO - 	 Val. Loss: 0.079
2024-10-13 01:03 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:03 - INFO - 	 PR-AUC: 0.883
2024-10-13 01:03 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:03 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 01:03 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:03 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 01:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-13 01:03 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 01:03 - INFO - ---------------------------------------------
2024-10-13 01:03 - INFO - ---------------------------------------------
2024-10-13 01:03 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 01:03 - INFO - 	 Train Loss: 0.062
2024-10-13 01:03 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:03 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:03 - INFO - 	 PR-AUC: 0.888
2024-10-13 01:03 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:03 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:03 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:03 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 01:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-13 01:03 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:03 - INFO - ---------------------------------------------
2024-10-13 01:04 - INFO - ---------------------------------------------
2024-10-13 01:04 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 01:04 - INFO - 	 Train Loss: 0.060
2024-10-13 01:04 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:04 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:04 - INFO - 	 PR-AUC: 0.881
2024-10-13 01:04 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:04 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:04 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:04 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 01:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-13 01:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:04 - INFO - ---------------------------------------------
2024-10-13 01:04 - INFO - ---------------------------------------------
2024-10-13 01:04 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 01:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98878
2024-10-13 01:04 - INFO - 	 Train Loss: 0.058
2024-10-13 01:04 - INFO - 	 Val. Loss: 0.060
2024-10-13 01:04 - INFO - 	 ROC-AUC: 0.989
2024-10-13 01:04 - INFO - 	 PR-AUC: 0.891
2024-10-13 01:04 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:04 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 01:04 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 01:04 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 01:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-13 01:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:04 - INFO - ---------------------------------------------
2024-10-13 01:05 - INFO - ---------------------------------------------
2024-10-13 01:05 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 01:05 - INFO - 	 Train Loss: 0.056
2024-10-13 01:05 - INFO - 	 Val. Loss: 0.063
2024-10-13 01:05 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:05 - INFO - 	 PR-AUC: 0.884
2024-10-13 01:05 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:05 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 01:05 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 01:05 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 01:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-13 01:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:05 - INFO - ---------------------------------------------
2024-10-13 01:06 - INFO - Fit the preprocessing pipeline
2024-10-13 01:06 - INFO - Training using device: cuda
2024-10-13 01:06 - INFO - Creating generators
2024-10-13 01:06 - INFO - The model has 651,257 trainable parameters
2024-10-13 01:06 - INFO - * Model:
2024-10-13 01:06 - INFO - * -----------
2024-10-13 01:06 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 01:06 - INFO - * -----------
2024-10-13 01:06 - INFO - Evaluating model based on: rocauc
2024-10-13 01:06 - INFO - Training..

2024-10-13 01:07 - INFO - ---------------------------------------------
2024-10-13 01:07 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 01:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97977
2024-10-13 01:07 - INFO - 	 Train Loss: 0.154
2024-10-13 01:07 - INFO - 	 Val. Loss: 0.080
2024-10-13 01:07 - INFO - 	 ROC-AUC: 0.980
2024-10-13 01:07 - INFO - 	 PR-AUC: 0.804
2024-10-13 01:07 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 01:07 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 01:07 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 01:07 - INFO - 	 Best PR-AUC: 0.804
2024-10-13 01:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 01:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 01:07 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 01:07 - INFO - ---------------------------------------------
2024-10-13 01:08 - INFO - ---------------------------------------------
2024-10-13 01:08 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 01:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98449
2024-10-13 01:08 - INFO - 	 Train Loss: 0.083
2024-10-13 01:08 - INFO - 	 Val. Loss: 0.067
2024-10-13 01:08 - INFO - 	 ROC-AUC: 0.984
2024-10-13 01:08 - INFO - 	 PR-AUC: 0.859
2024-10-13 01:08 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 01:08 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 01:08 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 01:08 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 01:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-13 01:08 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 01:08 - INFO - ---------------------------------------------
2024-10-13 01:08 - INFO - ---------------------------------------------
2024-10-13 01:08 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 01:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98654
2024-10-13 01:08 - INFO - 	 Train Loss: 0.073
2024-10-13 01:08 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:08 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:08 - INFO - 	 PR-AUC: 0.880
2024-10-13 01:08 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:08 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:08 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 01:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-13 01:08 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:08 - INFO - ---------------------------------------------
2024-10-13 01:09 - INFO - ---------------------------------------------
2024-10-13 01:09 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 01:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98669
2024-10-13 01:09 - INFO - 	 Train Loss: 0.069
2024-10-13 01:09 - INFO - 	 Val. Loss: 0.062
2024-10-13 01:09 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:09 - INFO - 	 PR-AUC: 0.880
2024-10-13 01:09 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 01:09 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:09 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 01:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-13 01:09 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:09 - INFO - ---------------------------------------------
2024-10-13 01:09 - INFO - ---------------------------------------------
2024-10-13 01:09 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 01:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98761
2024-10-13 01:09 - INFO - 	 Train Loss: 0.066
2024-10-13 01:09 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:09 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:09 - INFO - 	 PR-AUC: 0.886
2024-10-13 01:09 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:09 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:09 - INFO - 	 Best PR-AUC: 0.886
2024-10-13 01:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 01:09 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:09 - INFO - ---------------------------------------------
2024-10-13 01:10 - INFO - ---------------------------------------------
2024-10-13 01:10 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 01:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98812
2024-10-13 01:10 - INFO - 	 Train Loss: 0.063
2024-10-13 01:10 - INFO - 	 Val. Loss: 0.059
2024-10-13 01:10 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:10 - INFO - 	 PR-AUC: 0.897
2024-10-13 01:10 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:10 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 01:10 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:10 - INFO - 	 Best PR-AUC: 0.897
2024-10-13 01:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:10 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:10 - INFO - ---------------------------------------------
2024-10-13 01:10 - INFO - ---------------------------------------------
2024-10-13 01:10 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 01:10 - INFO - 	 Train Loss: 0.061
2024-10-13 01:10 - INFO - 	 Val. Loss: 0.063
2024-10-13 01:10 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:10 - INFO - 	 PR-AUC: 0.889
2024-10-13 01:10 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:10 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 01:10 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:10 - INFO - 	 Best PR-AUC: 0.897
2024-10-13 01:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:10 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:10 - INFO - ---------------------------------------------
2024-10-13 01:11 - INFO - ---------------------------------------------
2024-10-13 01:11 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 01:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98833
2024-10-13 01:11 - INFO - 	 Train Loss: 0.060
2024-10-13 01:11 - INFO - 	 Val. Loss: 0.058
2024-10-13 01:11 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:11 - INFO - 	 PR-AUC: 0.896
2024-10-13 01:11 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:11 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:11 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:11 - INFO - 	 Best PR-AUC: 0.897
2024-10-13 01:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 01:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:11 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:11 - INFO - ---------------------------------------------
2024-10-13 01:11 - INFO - ---------------------------------------------
2024-10-13 01:11 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 01:11 - INFO - 	 Train Loss: 0.057
2024-10-13 01:11 - INFO - 	 Val. Loss: 0.060
2024-10-13 01:11 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:11 - INFO - 	 PR-AUC: 0.890
2024-10-13 01:11 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:11 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:11 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:11 - INFO - 	 Best PR-AUC: 0.897
2024-10-13 01:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 01:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:11 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:11 - INFO - ---------------------------------------------
2024-10-13 01:12 - INFO - ---------------------------------------------
2024-10-13 01:12 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 01:12 - INFO - 	 Train Loss: 0.056
2024-10-13 01:12 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:12 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:12 - INFO - 	 PR-AUC: 0.894
2024-10-13 01:12 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:12 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:12 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:12 - INFO - 	 Best PR-AUC: 0.897
2024-10-13 01:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 01:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:12 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:12 - INFO - ---------------------------------------------
2024-10-13 01:13 - INFO - Fit the preprocessing pipeline
2024-10-13 01:13 - INFO - Training using device: cuda
2024-10-13 01:13 - INFO - Creating generators
2024-10-13 01:13 - INFO - The model has 651,257 trainable parameters
2024-10-13 01:13 - INFO - * Model:
2024-10-13 01:13 - INFO - * -----------
2024-10-13 01:13 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 01:13 - INFO - * -----------
2024-10-13 01:13 - INFO - Evaluating model based on: rocauc
2024-10-13 01:13 - INFO - Training..

2024-10-13 01:14 - INFO - ---------------------------------------------
2024-10-13 01:14 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-13 01:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97774
2024-10-13 01:14 - INFO - 	 Train Loss: 0.161
2024-10-13 01:14 - INFO - 	 Val. Loss: 0.086
2024-10-13 01:14 - INFO - 	 ROC-AUC: 0.978
2024-10-13 01:14 - INFO - 	 PR-AUC: 0.804
2024-10-13 01:14 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 01:14 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 01:14 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 01:14 - INFO - 	 Best PR-AUC: 0.804
2024-10-13 01:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 01:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.775
2024-10-13 01:14 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 01:14 - INFO - ---------------------------------------------
2024-10-13 01:14 - INFO - ---------------------------------------------
2024-10-13 01:14 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 01:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98271
2024-10-13 01:14 - INFO - 	 Train Loss: 0.087
2024-10-13 01:14 - INFO - 	 Val. Loss: 0.072
2024-10-13 01:14 - INFO - 	 ROC-AUC: 0.983
2024-10-13 01:14 - INFO - 	 PR-AUC: 0.851
2024-10-13 01:14 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 01:14 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 01:14 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 01:14 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 01:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 01:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 01:14 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 01:14 - INFO - ---------------------------------------------
2024-10-13 01:15 - INFO - ---------------------------------------------
2024-10-13 01:15 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 01:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98584
2024-10-13 01:15 - INFO - 	 Train Loss: 0.076
2024-10-13 01:15 - INFO - 	 Val. Loss: 0.064
2024-10-13 01:15 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:15 - INFO - 	 PR-AUC: 0.881
2024-10-13 01:15 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 01:15 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 01:15 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 01:15 - INFO - 	 Best PR-AUC: 0.881
2024-10-13 01:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-13 01:15 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 01:15 - INFO - ---------------------------------------------
2024-10-13 01:15 - INFO - ---------------------------------------------
2024-10-13 01:15 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 01:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98789
2024-10-13 01:15 - INFO - 	 Train Loss: 0.070
2024-10-13 01:15 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:15 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:15 - INFO - 	 PR-AUC: 0.887
2024-10-13 01:15 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 01:15 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:15 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:15 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 01:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-13 01:15 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 01:15 - INFO - ---------------------------------------------
2024-10-13 01:16 - INFO - ---------------------------------------------
2024-10-13 01:16 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 01:16 - INFO - 	 Train Loss: 0.066
2024-10-13 01:16 - INFO - 	 Val. Loss: 0.062
2024-10-13 01:16 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:16 - INFO - 	 PR-AUC: 0.880
2024-10-13 01:16 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 01:16 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:16 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 01:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-13 01:16 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 01:16 - INFO - ---------------------------------------------
2024-10-13 01:16 - INFO - ---------------------------------------------
2024-10-13 01:16 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 01:16 - INFO - 	 Train Loss: 0.064
2024-10-13 01:16 - INFO - 	 Val. Loss: 0.060
2024-10-13 01:16 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:16 - INFO - 	 PR-AUC: 0.885
2024-10-13 01:16 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 01:16 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 01:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:16 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 01:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-13 01:16 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 01:16 - INFO - ---------------------------------------------
2024-10-13 01:17 - INFO - ---------------------------------------------
2024-10-13 01:17 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 01:17 - INFO - 	 Train Loss: 0.062
2024-10-13 01:17 - INFO - 	 Val. Loss: 0.062
2024-10-13 01:17 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:17 - INFO - 	 PR-AUC: 0.896
2024-10-13 01:17 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 01:17 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 01:17 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:17 - INFO - 	 Best PR-AUC: 0.896
2024-10-13 01:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-13 01:17 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 01:17 - INFO - ---------------------------------------------
2024-10-13 01:18 - INFO - ---------------------------------------------
2024-10-13 01:18 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 01:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98921
2024-10-13 01:18 - INFO - 	 Train Loss: 0.061
2024-10-13 01:18 - INFO - 	 Val. Loss: 0.057
2024-10-13 01:18 - INFO - 	 ROC-AUC: 0.989
2024-10-13 01:18 - INFO - 	 PR-AUC: 0.895
2024-10-13 01:18 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:18 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 01:18 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 01:18 - INFO - 	 Best PR-AUC: 0.896
2024-10-13 01:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-13 01:18 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:18 - INFO - ---------------------------------------------
2024-10-13 01:18 - INFO - ---------------------------------------------
2024-10-13 01:18 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 01:18 - INFO - 	 Train Loss: 0.059
2024-10-13 01:18 - INFO - 	 Val. Loss: 0.060
2024-10-13 01:18 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:18 - INFO - 	 PR-AUC: 0.898
2024-10-13 01:18 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 01:18 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 01:18 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 01:18 - INFO - 	 Best PR-AUC: 0.898
2024-10-13 01:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-13 01:18 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:18 - INFO - ---------------------------------------------
2024-10-13 01:19 - INFO - ---------------------------------------------
2024-10-13 01:19 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 01:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98934
2024-10-13 01:19 - INFO - 	 Train Loss: 0.057
2024-10-13 01:19 - INFO - 	 Val. Loss: 0.055
2024-10-13 01:19 - INFO - 	 ROC-AUC: 0.989
2024-10-13 01:19 - INFO - 	 PR-AUC: 0.905
2024-10-13 01:19 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-13 01:19 - INFO - 	 Best Val. Loss: 0.055
2024-10-13 01:19 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 01:19 - INFO - 	 Best PR-AUC: 0.905
2024-10-13 01:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-13 01:19 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 01:19 - INFO - ---------------------------------------------
2024-10-13 01:20 - INFO - Fit the preprocessing pipeline
2024-10-13 01:20 - INFO - Training using device: cuda
2024-10-13 01:20 - INFO - Creating generators
2024-10-13 01:20 - INFO - The model has 651,257 trainable parameters
2024-10-13 01:20 - INFO - * Model:
2024-10-13 01:20 - INFO - * -----------
2024-10-13 01:20 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 01:20 - INFO - * -----------
2024-10-13 01:20 - INFO - Evaluating model based on: rocauc
2024-10-13 01:20 - INFO - Training..

2024-10-13 01:21 - INFO - ---------------------------------------------
2024-10-13 01:21 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 01:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9822
2024-10-13 01:21 - INFO - 	 Train Loss: 0.171
2024-10-13 01:21 - INFO - 	 Val. Loss: 0.074
2024-10-13 01:21 - INFO - 	 ROC-AUC: 0.982
2024-10-13 01:21 - INFO - 	 PR-AUC: 0.834
2024-10-13 01:21 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 01:21 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 01:21 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 01:21 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 01:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 01:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-13 01:21 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 01:21 - INFO - ---------------------------------------------
2024-10-13 01:21 - INFO - ---------------------------------------------
2024-10-13 01:21 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 01:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98548
2024-10-13 01:21 - INFO - 	 Train Loss: 0.085
2024-10-13 01:21 - INFO - 	 Val. Loss: 0.070
2024-10-13 01:21 - INFO - 	 ROC-AUC: 0.985
2024-10-13 01:21 - INFO - 	 PR-AUC: 0.867
2024-10-13 01:21 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 01:21 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 01:21 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 01:21 - INFO - 	 Best PR-AUC: 0.867
2024-10-13 01:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 01:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 01:21 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 01:21 - INFO - ---------------------------------------------
2024-10-13 01:22 - INFO - ---------------------------------------------
2024-10-13 01:22 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 01:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98618
2024-10-13 01:22 - INFO - 	 Train Loss: 0.075
2024-10-13 01:22 - INFO - 	 Val. Loss: 0.065
2024-10-13 01:22 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:22 - INFO - 	 PR-AUC: 0.869
2024-10-13 01:22 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 01:22 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 01:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 01:22 - INFO - 	 Best PR-AUC: 0.869
2024-10-13 01:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 01:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-13 01:22 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 01:22 - INFO - ---------------------------------------------
2024-10-13 01:22 - INFO - ---------------------------------------------
2024-10-13 01:22 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 01:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98666
2024-10-13 01:22 - INFO - 	 Train Loss: 0.070
2024-10-13 01:22 - INFO - 	 Val. Loss: 0.063
2024-10-13 01:22 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:22 - INFO - 	 PR-AUC: 0.879
2024-10-13 01:22 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 01:22 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 01:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:22 - INFO - 	 Best PR-AUC: 0.879
2024-10-13 01:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 01:22 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 01:22 - INFO - ---------------------------------------------
2024-10-13 01:23 - INFO - ---------------------------------------------
2024-10-13 01:23 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 01:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98699
2024-10-13 01:23 - INFO - 	 Train Loss: 0.065
2024-10-13 01:23 - INFO - 	 Val. Loss: 0.063
2024-10-13 01:23 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:23 - INFO - 	 PR-AUC: 0.878
2024-10-13 01:23 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:23 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 01:23 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:23 - INFO - 	 Best PR-AUC: 0.879
2024-10-13 01:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-13 01:23 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 01:23 - INFO - ---------------------------------------------
2024-10-13 01:23 - INFO - ---------------------------------------------
2024-10-13 01:23 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 01:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9879
2024-10-13 01:23 - INFO - 	 Train Loss: 0.064
2024-10-13 01:23 - INFO - 	 Val. Loss: 0.060
2024-10-13 01:23 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:23 - INFO - 	 PR-AUC: 0.893
2024-10-13 01:23 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:23 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 01:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:23 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 01:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-13 01:23 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 01:23 - INFO - ---------------------------------------------
2024-10-13 01:24 - INFO - ---------------------------------------------
2024-10-13 01:24 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 01:24 - INFO - 	 Train Loss: 0.062
2024-10-13 01:24 - INFO - 	 Val. Loss: 0.060
2024-10-13 01:24 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:24 - INFO - 	 PR-AUC: 0.891
2024-10-13 01:24 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 01:24 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 01:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:24 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 01:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-13 01:24 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 01:24 - INFO - ---------------------------------------------
2024-10-13 01:24 - INFO - ---------------------------------------------
2024-10-13 01:24 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 01:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98838
2024-10-13 01:24 - INFO - 	 Train Loss: 0.059
2024-10-13 01:24 - INFO - 	 Val. Loss: 0.059
2024-10-13 01:24 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:24 - INFO - 	 PR-AUC: 0.889
2024-10-13 01:24 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-13 01:24 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 01:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:24 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 01:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-13 01:24 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 01:24 - INFO - ---------------------------------------------
2024-10-13 01:25 - INFO - ---------------------------------------------
2024-10-13 01:25 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 01:25 - INFO - 	 Train Loss: 0.059
2024-10-13 01:25 - INFO - 	 Val. Loss: 0.058
2024-10-13 01:25 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:25 - INFO - 	 PR-AUC: 0.899
2024-10-13 01:25 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:25 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:25 - INFO - 	 Best PR-AUC: 0.899
2024-10-13 01:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-13 01:25 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 01:25 - INFO - ---------------------------------------------
2024-10-13 01:25 - INFO - ---------------------------------------------
2024-10-13 01:25 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 01:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98937
2024-10-13 01:25 - INFO - 	 Train Loss: 0.057
2024-10-13 01:25 - INFO - 	 Val. Loss: 0.057
2024-10-13 01:25 - INFO - 	 ROC-AUC: 0.989
2024-10-13 01:25 - INFO - 	 PR-AUC: 0.899
2024-10-13 01:25 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-13 01:25 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 01:25 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 01:25 - INFO - 	 Best PR-AUC: 0.899
2024-10-13 01:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-13 01:25 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-13 01:25 - INFO - ---------------------------------------------
2024-10-13 01:27 - INFO - Fit the preprocessing pipeline
2024-10-13 01:27 - INFO - Training using device: cuda
2024-10-13 01:27 - INFO - Creating generators
2024-10-13 01:27 - INFO - The model has 651,257 trainable parameters
2024-10-13 01:27 - INFO - * Model:
2024-10-13 01:27 - INFO - * -----------
2024-10-13 01:27 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 01:27 - INFO - * -----------
2024-10-13 01:27 - INFO - Evaluating model based on: rocauc
2024-10-13 01:27 - INFO - Training..

2024-10-13 01:27 - INFO - ---------------------------------------------
2024-10-13 01:27 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 01:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97864
2024-10-13 01:27 - INFO - 	 Train Loss: 0.153
2024-10-13 01:27 - INFO - 	 Val. Loss: 0.083
2024-10-13 01:27 - INFO - 	 ROC-AUC: 0.979
2024-10-13 01:27 - INFO - 	 PR-AUC: 0.793
2024-10-13 01:27 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 01:27 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 01:27 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 01:27 - INFO - 	 Best PR-AUC: 0.793
2024-10-13 01:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 01:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 01:27 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 01:27 - INFO - ---------------------------------------------
2024-10-13 01:28 - INFO - ---------------------------------------------
2024-10-13 01:28 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 01:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98369
2024-10-13 01:28 - INFO - 	 Train Loss: 0.085
2024-10-13 01:28 - INFO - 	 Val. Loss: 0.073
2024-10-13 01:28 - INFO - 	 ROC-AUC: 0.984
2024-10-13 01:28 - INFO - 	 PR-AUC: 0.856
2024-10-13 01:28 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 01:28 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 01:28 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 01:28 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 01:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 01:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 01:28 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 01:28 - INFO - ---------------------------------------------
2024-10-13 01:29 - INFO - ---------------------------------------------
2024-10-13 01:29 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 01:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98593
2024-10-13 01:29 - INFO - 	 Train Loss: 0.073
2024-10-13 01:29 - INFO - 	 Val. Loss: 0.070
2024-10-13 01:29 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:29 - INFO - 	 PR-AUC: 0.876
2024-10-13 01:29 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 01:29 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 01:29 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 01:29 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 01:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 01:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-13 01:29 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 01:29 - INFO - ---------------------------------------------
2024-10-13 01:29 - INFO - ---------------------------------------------
2024-10-13 01:29 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 01:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9864
2024-10-13 01:29 - INFO - 	 Train Loss: 0.070
2024-10-13 01:29 - INFO - 	 Val. Loss: 0.066
2024-10-13 01:29 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:29 - INFO - 	 PR-AUC: 0.877
2024-10-13 01:29 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 01:29 - INFO - 	 Best Val. Loss: 0.066
2024-10-13 01:29 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 01:29 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 01:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-13 01:29 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 01:29 - INFO - ---------------------------------------------
2024-10-13 01:30 - INFO - ---------------------------------------------
2024-10-13 01:30 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 01:30 - INFO - 	 Train Loss: 0.066
2024-10-13 01:30 - INFO - 	 Val. Loss: 0.065
2024-10-13 01:30 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:30 - INFO - 	 PR-AUC: 0.880
2024-10-13 01:30 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 01:30 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 01:30 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 01:30 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 01:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 01:30 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 01:30 - INFO - ---------------------------------------------
2024-10-13 01:30 - INFO - ---------------------------------------------
2024-10-13 01:30 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 01:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98671
2024-10-13 01:30 - INFO - 	 Train Loss: 0.063
2024-10-13 01:30 - INFO - 	 Val. Loss: 0.063
2024-10-13 01:30 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:30 - INFO - 	 PR-AUC: 0.888
2024-10-13 01:30 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 01:30 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 01:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:30 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 01:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-13 01:30 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 01:30 - INFO - ---------------------------------------------
2024-10-13 01:31 - INFO - ---------------------------------------------
2024-10-13 01:31 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 01:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9879
2024-10-13 01:31 - INFO - 	 Train Loss: 0.062
2024-10-13 01:31 - INFO - 	 Val. Loss: 0.060
2024-10-13 01:31 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:31 - INFO - 	 PR-AUC: 0.888
2024-10-13 01:31 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 01:31 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 01:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:31 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 01:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-13 01:31 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 01:31 - INFO - ---------------------------------------------
2024-10-13 01:31 - INFO - ---------------------------------------------
2024-10-13 01:31 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 01:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98817
2024-10-13 01:31 - INFO - 	 Train Loss: 0.059
2024-10-13 01:31 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:31 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:31 - INFO - 	 PR-AUC: 0.892
2024-10-13 01:31 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:31 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 01:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:31 - INFO - 	 Best PR-AUC: 0.892
2024-10-13 01:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-13 01:31 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:31 - INFO - ---------------------------------------------
2024-10-13 01:32 - INFO - ---------------------------------------------
2024-10-13 01:32 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 01:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98842
2024-10-13 01:32 - INFO - 	 Train Loss: 0.059
2024-10-13 01:32 - INFO - 	 Val. Loss: 0.059
2024-10-13 01:32 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:32 - INFO - 	 PR-AUC: 0.892
2024-10-13 01:32 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:32 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 01:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:32 - INFO - 	 Best PR-AUC: 0.892
2024-10-13 01:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-13 01:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:32 - INFO - ---------------------------------------------
2024-10-13 01:32 - INFO - ---------------------------------------------
2024-10-13 01:32 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 01:32 - INFO - 	 Train Loss: 0.059
2024-10-13 01:32 - INFO - 	 Val. Loss: 0.059
2024-10-13 01:32 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:32 - INFO - 	 PR-AUC: 0.895
2024-10-13 01:32 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 01:32 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 01:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:32 - INFO - 	 Best PR-AUC: 0.895
2024-10-13 01:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:32 - INFO - ---------------------------------------------
2024-10-13 01:34 - INFO - Fit the preprocessing pipeline
2024-10-13 01:34 - INFO - Training using device: cuda
2024-10-13 01:34 - INFO - Creating generators
2024-10-13 01:34 - INFO - The model has 651,257 trainable parameters
2024-10-13 01:34 - INFO - * Model:
2024-10-13 01:34 - INFO - * -----------
2024-10-13 01:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 01:34 - INFO - * -----------
2024-10-13 01:34 - INFO - Evaluating model based on: rocauc
2024-10-13 01:34 - INFO - Training..

2024-10-13 01:34 - INFO - ---------------------------------------------
2024-10-13 01:34 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 01:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97927
2024-10-13 01:34 - INFO - 	 Train Loss: 0.158
2024-10-13 01:34 - INFO - 	 Val. Loss: 0.081
2024-10-13 01:34 - INFO - 	 ROC-AUC: 0.979
2024-10-13 01:34 - INFO - 	 PR-AUC: 0.822
2024-10-13 01:34 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 01:34 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 01:34 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 01:34 - INFO - 	 Best PR-AUC: 0.822
2024-10-13 01:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 01:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 01:34 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 01:34 - INFO - ---------------------------------------------
2024-10-13 01:35 - INFO - ---------------------------------------------
2024-10-13 01:35 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 01:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98407
2024-10-13 01:35 - INFO - 	 Train Loss: 0.084
2024-10-13 01:35 - INFO - 	 Val. Loss: 0.068
2024-10-13 01:35 - INFO - 	 ROC-AUC: 0.984
2024-10-13 01:35 - INFO - 	 PR-AUC: 0.871
2024-10-13 01:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 01:35 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 01:35 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 01:35 - INFO - 	 Best PR-AUC: 0.871
2024-10-13 01:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 01:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 01:35 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 01:35 - INFO - ---------------------------------------------
2024-10-13 01:35 - INFO - ---------------------------------------------
2024-10-13 01:35 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 01:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98521
2024-10-13 01:35 - INFO - 	 Train Loss: 0.075
2024-10-13 01:35 - INFO - 	 Val. Loss: 0.068
2024-10-13 01:35 - INFO - 	 ROC-AUC: 0.985
2024-10-13 01:35 - INFO - 	 PR-AUC: 0.863
2024-10-13 01:35 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:35 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 01:35 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 01:35 - INFO - 	 Best PR-AUC: 0.871
2024-10-13 01:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 01:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:35 - INFO - ---------------------------------------------
2024-10-13 01:36 - INFO - ---------------------------------------------
2024-10-13 01:36 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 01:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98666
2024-10-13 01:36 - INFO - 	 Train Loss: 0.070
2024-10-13 01:36 - INFO - 	 Val. Loss: 0.062
2024-10-13 01:36 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:36 - INFO - 	 PR-AUC: 0.882
2024-10-13 01:36 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 01:36 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 01:36 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:36 - INFO - 	 Best PR-AUC: 0.882
2024-10-13 01:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-13 01:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:36 - INFO - ---------------------------------------------
2024-10-13 01:37 - INFO - ---------------------------------------------
2024-10-13 01:37 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 01:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98756
2024-10-13 01:37 - INFO - 	 Train Loss: 0.066
2024-10-13 01:37 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:37 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:37 - INFO - 	 PR-AUC: 0.888
2024-10-13 01:37 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:37 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:37 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 01:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 01:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:37 - INFO - ---------------------------------------------
2024-10-13 01:37 - INFO - ---------------------------------------------
2024-10-13 01:37 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 01:37 - INFO - 	 Train Loss: 0.064
2024-10-13 01:37 - INFO - 	 Val. Loss: 0.065
2024-10-13 01:37 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:37 - INFO - 	 PR-AUC: 0.880
2024-10-13 01:37 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:37 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:37 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 01:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 01:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:37 - INFO - ---------------------------------------------
2024-10-13 01:38 - INFO - ---------------------------------------------
2024-10-13 01:38 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 01:38 - INFO - 	 Train Loss: 0.062
2024-10-13 01:38 - INFO - 	 Val. Loss: 0.064
2024-10-13 01:38 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:38 - INFO - 	 PR-AUC: 0.875
2024-10-13 01:38 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 01:38 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:38 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 01:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 01:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:38 - INFO - ---------------------------------------------
2024-10-13 01:38 - INFO - ---------------------------------------------
2024-10-13 01:38 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 01:38 - INFO - 	 Train Loss: 0.060
2024-10-13 01:38 - INFO - 	 Val. Loss: 0.066
2024-10-13 01:38 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:38 - INFO - 	 PR-AUC: 0.877
2024-10-13 01:38 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:38 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:38 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 01:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 01:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:38 - INFO - ---------------------------------------------
2024-10-13 01:39 - INFO - ---------------------------------------------
2024-10-13 01:39 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 01:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98818
2024-10-13 01:39 - INFO - 	 Train Loss: 0.059
2024-10-13 01:39 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:39 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:39 - INFO - 	 PR-AUC: 0.888
2024-10-13 01:39 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:39 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:39 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 01:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-13 01:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:39 - INFO - ---------------------------------------------
2024-10-13 01:39 - INFO - ---------------------------------------------
2024-10-13 01:39 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 01:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98832
2024-10-13 01:39 - INFO - 	 Train Loss: 0.058
2024-10-13 01:39 - INFO - 	 Val. Loss: 0.060
2024-10-13 01:39 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:39 - INFO - 	 PR-AUC: 0.884
2024-10-13 01:39 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:39 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 01:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:39 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 01:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-13 01:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:39 - INFO - ---------------------------------------------
2024-10-13 01:41 - INFO - Fit the preprocessing pipeline
2024-10-13 01:41 - INFO - Training using device: cuda
2024-10-13 01:41 - INFO - Creating generators
2024-10-13 01:41 - INFO - The model has 651,257 trainable parameters
2024-10-13 01:41 - INFO - * Model:
2024-10-13 01:41 - INFO - * -----------
2024-10-13 01:41 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 01:41 - INFO - * -----------
2024-10-13 01:41 - INFO - Evaluating model based on: rocauc
2024-10-13 01:41 - INFO - Training..

2024-10-13 01:41 - INFO - ---------------------------------------------
2024-10-13 01:41 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 01:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97
2024-10-13 01:41 - INFO - 	 Train Loss: 0.155
2024-10-13 01:41 - INFO - 	 Val. Loss: 0.095
2024-10-13 01:41 - INFO - 	 ROC-AUC: 0.970
2024-10-13 01:41 - INFO - 	 PR-AUC: 0.775
2024-10-13 01:41 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-13 01:41 - INFO - 	 Best Val. Loss: 0.095
2024-10-13 01:41 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 01:41 - INFO - 	 Best PR-AUC: 0.775
2024-10-13 01:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-13 01:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.743
2024-10-13 01:41 - INFO - 	 Best Recall for 0.4 precision: 0.938
2024-10-13 01:41 - INFO - ---------------------------------------------
2024-10-13 01:42 - INFO - ---------------------------------------------
2024-10-13 01:42 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 01:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98459
2024-10-13 01:42 - INFO - 	 Train Loss: 0.083
2024-10-13 01:42 - INFO - 	 Val. Loss: 0.071
2024-10-13 01:42 - INFO - 	 ROC-AUC: 0.985
2024-10-13 01:42 - INFO - 	 PR-AUC: 0.850
2024-10-13 01:42 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 01:42 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 01:42 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 01:42 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 01:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 01:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 01:42 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 01:42 - INFO - ---------------------------------------------
2024-10-13 01:42 - INFO - ---------------------------------------------
2024-10-13 01:42 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 01:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98535
2024-10-13 01:42 - INFO - 	 Train Loss: 0.074
2024-10-13 01:42 - INFO - 	 Val. Loss: 0.069
2024-10-13 01:42 - INFO - 	 ROC-AUC: 0.985
2024-10-13 01:42 - INFO - 	 PR-AUC: 0.863
2024-10-13 01:42 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:42 - INFO - 	 Best Val. Loss: 0.069
2024-10-13 01:42 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 01:42 - INFO - 	 Best PR-AUC: 0.863
2024-10-13 01:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-13 01:42 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:42 - INFO - ---------------------------------------------
2024-10-13 01:43 - INFO - ---------------------------------------------
2024-10-13 01:43 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 01:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98666
2024-10-13 01:43 - INFO - 	 Train Loss: 0.071
2024-10-13 01:43 - INFO - 	 Val. Loss: 0.063
2024-10-13 01:43 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:43 - INFO - 	 PR-AUC: 0.876
2024-10-13 01:43 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:43 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 01:43 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:43 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 01:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 01:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:43 - INFO - ---------------------------------------------
2024-10-13 01:43 - INFO - ---------------------------------------------
2024-10-13 01:43 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 01:43 - INFO - 	 Train Loss: 0.067
2024-10-13 01:43 - INFO - 	 Val. Loss: 0.063
2024-10-13 01:43 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:43 - INFO - 	 PR-AUC: 0.875
2024-10-13 01:43 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 01:43 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 01:43 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:43 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 01:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-13 01:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:43 - INFO - ---------------------------------------------
2024-10-13 01:44 - INFO - ---------------------------------------------
2024-10-13 01:44 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 01:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9867
2024-10-13 01:44 - INFO - 	 Train Loss: 0.064
2024-10-13 01:44 - INFO - 	 Val. Loss: 0.063
2024-10-13 01:44 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:44 - INFO - 	 PR-AUC: 0.880
2024-10-13 01:44 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:44 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 01:44 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:44 - INFO - 	 Best PR-AUC: 0.880
2024-10-13 01:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-13 01:44 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:44 - INFO - ---------------------------------------------
2024-10-13 01:44 - INFO - ---------------------------------------------
2024-10-13 01:44 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 01:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98742
2024-10-13 01:44 - INFO - 	 Train Loss: 0.062
2024-10-13 01:44 - INFO - 	 Val. Loss: 0.058
2024-10-13 01:44 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:44 - INFO - 	 PR-AUC: 0.903
2024-10-13 01:44 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 01:44 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:44 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:44 - INFO - 	 Best PR-AUC: 0.903
2024-10-13 01:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:44 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:44 - INFO - ---------------------------------------------
2024-10-13 01:45 - INFO - ---------------------------------------------
2024-10-13 01:45 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 01:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98793
2024-10-13 01:45 - INFO - 	 Train Loss: 0.060
2024-10-13 01:45 - INFO - 	 Val. Loss: 0.059
2024-10-13 01:45 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:45 - INFO - 	 PR-AUC: 0.895
2024-10-13 01:45 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 01:45 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:45 - INFO - 	 Best PR-AUC: 0.903
2024-10-13 01:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:45 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:45 - INFO - ---------------------------------------------
2024-10-13 01:45 - INFO - ---------------------------------------------
2024-10-13 01:45 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 01:45 - INFO - 	 Train Loss: 0.059
2024-10-13 01:45 - INFO - 	 Val. Loss: 0.059
2024-10-13 01:45 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:45 - INFO - 	 PR-AUC: 0.890
2024-10-13 01:45 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:45 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:45 - INFO - 	 Best PR-AUC: 0.903
2024-10-13 01:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 01:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:45 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:45 - INFO - ---------------------------------------------
2024-10-13 01:46 - INFO - ---------------------------------------------
2024-10-13 01:46 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 01:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98836
2024-10-13 01:46 - INFO - 	 Train Loss: 0.057
2024-10-13 01:46 - INFO - 	 Val. Loss: 0.060
2024-10-13 01:46 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:46 - INFO - 	 PR-AUC: 0.895
2024-10-13 01:46 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 01:46 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:46 - INFO - 	 Best PR-AUC: 0.903
2024-10-13 01:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-13 01:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:46 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:46 - INFO - ---------------------------------------------
2024-10-13 01:47 - INFO - Fit the preprocessing pipeline
2024-10-13 01:47 - INFO - Training using device: cuda
2024-10-13 01:47 - INFO - Creating generators
2024-10-13 01:47 - INFO - The model has 651,257 trainable parameters
2024-10-13 01:47 - INFO - * Model:
2024-10-13 01:47 - INFO - * -----------
2024-10-13 01:47 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 01:47 - INFO - * -----------
2024-10-13 01:47 - INFO - Evaluating model based on: rocauc
2024-10-13 01:47 - INFO - Training..

2024-10-13 01:48 - INFO - ---------------------------------------------
2024-10-13 01:48 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 01:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97707
2024-10-13 01:48 - INFO - 	 Train Loss: 0.161
2024-10-13 01:48 - INFO - 	 Val. Loss: 0.087
2024-10-13 01:48 - INFO - 	 ROC-AUC: 0.977
2024-10-13 01:48 - INFO - 	 PR-AUC: 0.795
2024-10-13 01:48 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 01:48 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 01:48 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 01:48 - INFO - 	 Best PR-AUC: 0.795
2024-10-13 01:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 01:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-13 01:48 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 01:48 - INFO - ---------------------------------------------
2024-10-13 01:49 - INFO - ---------------------------------------------
2024-10-13 01:49 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 01:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98413
2024-10-13 01:49 - INFO - 	 Train Loss: 0.084
2024-10-13 01:49 - INFO - 	 Val. Loss: 0.068
2024-10-13 01:49 - INFO - 	 ROC-AUC: 0.984
2024-10-13 01:49 - INFO - 	 PR-AUC: 0.858
2024-10-13 01:49 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 01:49 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 01:49 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 01:49 - INFO - 	 Best PR-AUC: 0.858
2024-10-13 01:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 01:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 01:49 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 01:49 - INFO - ---------------------------------------------
2024-10-13 01:49 - INFO - ---------------------------------------------
2024-10-13 01:49 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 01:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98522
2024-10-13 01:49 - INFO - 	 Train Loss: 0.074
2024-10-13 01:49 - INFO - 	 Val. Loss: 0.067
2024-10-13 01:49 - INFO - 	 ROC-AUC: 0.985
2024-10-13 01:49 - INFO - 	 PR-AUC: 0.862
2024-10-13 01:49 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 01:49 - INFO - 	 Best Val. Loss: 0.067
2024-10-13 01:49 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 01:49 - INFO - 	 Best PR-AUC: 0.862
2024-10-13 01:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 01:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-13 01:49 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 01:49 - INFO - ---------------------------------------------
2024-10-13 01:50 - INFO - ---------------------------------------------
2024-10-13 01:50 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 01:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98607
2024-10-13 01:50 - INFO - 	 Train Loss: 0.069
2024-10-13 01:50 - INFO - 	 Val. Loss: 0.065
2024-10-13 01:50 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:50 - INFO - 	 PR-AUC: 0.877
2024-10-13 01:50 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 01:50 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 01:50 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 01:50 - INFO - 	 Best PR-AUC: 0.877
2024-10-13 01:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-13 01:50 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 01:50 - INFO - ---------------------------------------------
2024-10-13 01:50 - INFO - ---------------------------------------------
2024-10-13 01:50 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 01:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98646
2024-10-13 01:50 - INFO - 	 Train Loss: 0.066
2024-10-13 01:50 - INFO - 	 Val. Loss: 0.063
2024-10-13 01:50 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:50 - INFO - 	 PR-AUC: 0.878
2024-10-13 01:50 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 01:50 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 01:50 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 01:50 - INFO - 	 Best PR-AUC: 0.878
2024-10-13 01:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-13 01:50 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 01:50 - INFO - ---------------------------------------------
2024-10-13 01:51 - INFO - ---------------------------------------------
2024-10-13 01:51 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 01:51 - INFO - 	 Train Loss: 0.064
2024-10-13 01:51 - INFO - 	 Val. Loss: 0.062
2024-10-13 01:51 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:51 - INFO - 	 PR-AUC: 0.886
2024-10-13 01:51 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 01:51 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 01:51 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 01:51 - INFO - 	 Best PR-AUC: 0.886
2024-10-13 01:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-13 01:51 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 01:51 - INFO - ---------------------------------------------
2024-10-13 01:51 - INFO - ---------------------------------------------
2024-10-13 01:51 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 01:51 - INFO - 	 Train Loss: 0.061
2024-10-13 01:51 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:51 - INFO - 	 ROC-AUC: 0.986
2024-10-13 01:51 - INFO - 	 PR-AUC: 0.888
2024-10-13 01:51 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 01:51 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:51 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 01:51 - INFO - 	 Best PR-AUC: 0.888
2024-10-13 01:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-13 01:51 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 01:51 - INFO - ---------------------------------------------
2024-10-13 01:52 - INFO - ---------------------------------------------
2024-10-13 01:52 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 01:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98774
2024-10-13 01:52 - INFO - 	 Train Loss: 0.061
2024-10-13 01:52 - INFO - 	 Val. Loss: 0.058
2024-10-13 01:52 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:52 - INFO - 	 PR-AUC: 0.893
2024-10-13 01:52 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 01:52 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:52 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 01:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-13 01:52 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 01:52 - INFO - ---------------------------------------------
2024-10-13 01:52 - INFO - ---------------------------------------------
2024-10-13 01:52 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 01:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98826
2024-10-13 01:52 - INFO - 	 Train Loss: 0.059
2024-10-13 01:52 - INFO - 	 Val. Loss: 0.058
2024-10-13 01:52 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:52 - INFO - 	 PR-AUC: 0.891
2024-10-13 01:52 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 01:52 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:52 - INFO - 	 Best PR-AUC: 0.893
2024-10-13 01:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-13 01:52 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 01:52 - INFO - ---------------------------------------------
2024-10-13 01:53 - INFO - ---------------------------------------------
2024-10-13 01:53 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 01:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98832
2024-10-13 01:53 - INFO - 	 Train Loss: 0.057
2024-10-13 01:53 - INFO - 	 Val. Loss: 0.058
2024-10-13 01:53 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:53 - INFO - 	 PR-AUC: 0.900
2024-10-13 01:53 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 01:53 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 01:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:53 - INFO - 	 Best PR-AUC: 0.900
2024-10-13 01:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 01:53 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 01:53 - INFO - ---------------------------------------------
2024-10-13 01:54 - INFO - Fit the preprocessing pipeline
2024-10-13 01:54 - INFO - Training using device: cuda
2024-10-13 01:54 - INFO - Creating generators
2024-10-13 01:54 - INFO - The model has 651,257 trainable parameters
2024-10-13 01:54 - INFO - * Model:
2024-10-13 01:54 - INFO - * -----------
2024-10-13 01:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 01:54 - INFO - * -----------
2024-10-13 01:54 - INFO - Evaluating model based on: rocauc
2024-10-13 01:54 - INFO - Training..

2024-10-13 01:55 - INFO - ---------------------------------------------
2024-10-13 01:55 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 01:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97847
2024-10-13 01:55 - INFO - 	 Train Loss: 0.161
2024-10-13 01:55 - INFO - 	 Val. Loss: 0.081
2024-10-13 01:55 - INFO - 	 ROC-AUC: 0.978
2024-10-13 01:55 - INFO - 	 PR-AUC: 0.809
2024-10-13 01:55 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 01:55 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 01:55 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 01:55 - INFO - 	 Best PR-AUC: 0.809
2024-10-13 01:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 01:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-13 01:55 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 01:55 - INFO - ---------------------------------------------
2024-10-13 01:55 - INFO - ---------------------------------------------
2024-10-13 01:55 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 01:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98456
2024-10-13 01:55 - INFO - 	 Train Loss: 0.084
2024-10-13 01:55 - INFO - 	 Val. Loss: 0.075
2024-10-13 01:55 - INFO - 	 ROC-AUC: 0.985
2024-10-13 01:55 - INFO - 	 PR-AUC: 0.859
2024-10-13 01:55 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:55 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 01:55 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 01:55 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 01:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 01:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 01:55 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 01:55 - INFO - ---------------------------------------------
2024-10-13 01:56 - INFO - ---------------------------------------------
2024-10-13 01:56 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 01:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98494
2024-10-13 01:56 - INFO - 	 Train Loss: 0.075
2024-10-13 01:56 - INFO - 	 Val. Loss: 0.065
2024-10-13 01:56 - INFO - 	 ROC-AUC: 0.985
2024-10-13 01:56 - INFO - 	 PR-AUC: 0.876
2024-10-13 01:56 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 01:56 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 01:56 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 01:56 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 01:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 01:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 01:56 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 01:56 - INFO - ---------------------------------------------
2024-10-13 01:56 - INFO - ---------------------------------------------
2024-10-13 01:56 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 01:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98651
2024-10-13 01:56 - INFO - 	 Train Loss: 0.071
2024-10-13 01:56 - INFO - 	 Val. Loss: 0.064
2024-10-13 01:56 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:56 - INFO - 	 PR-AUC: 0.871
2024-10-13 01:56 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 01:56 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 01:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:56 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 01:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 01:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 01:56 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 01:56 - INFO - ---------------------------------------------
2024-10-13 01:57 - INFO - ---------------------------------------------
2024-10-13 01:57 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 01:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98704
2024-10-13 01:57 - INFO - 	 Train Loss: 0.067
2024-10-13 01:57 - INFO - 	 Val. Loss: 0.062
2024-10-13 01:57 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:57 - INFO - 	 PR-AUC: 0.879
2024-10-13 01:57 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 01:57 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 01:57 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:57 - INFO - 	 Best PR-AUC: 0.879
2024-10-13 01:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 01:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-13 01:57 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:57 - INFO - ---------------------------------------------
2024-10-13 01:57 - INFO - ---------------------------------------------
2024-10-13 01:57 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 01:57 - INFO - 	 Train Loss: 0.065
2024-10-13 01:57 - INFO - 	 Val. Loss: 0.061
2024-10-13 01:57 - INFO - 	 ROC-AUC: 0.987
2024-10-13 01:57 - INFO - 	 PR-AUC: 0.887
2024-10-13 01:57 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:57 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 01:57 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 01:57 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 01:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 01:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-13 01:57 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:57 - INFO - ---------------------------------------------
2024-10-13 01:58 - INFO - ---------------------------------------------
2024-10-13 01:58 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 01:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98761
2024-10-13 01:58 - INFO - 	 Train Loss: 0.062
2024-10-13 01:58 - INFO - 	 Val. Loss: 0.059
2024-10-13 01:58 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:58 - INFO - 	 PR-AUC: 0.885
2024-10-13 01:58 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 01:58 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 01:58 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:58 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 01:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-13 01:58 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:58 - INFO - ---------------------------------------------
2024-10-13 01:58 - INFO - ---------------------------------------------
2024-10-13 01:58 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 01:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98844
2024-10-13 01:58 - INFO - 	 Train Loss: 0.061
2024-10-13 01:58 - INFO - 	 Val. Loss: 0.057
2024-10-13 01:58 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:58 - INFO - 	 PR-AUC: 0.896
2024-10-13 01:58 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 01:58 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 01:58 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:58 - INFO - 	 Best PR-AUC: 0.896
2024-10-13 01:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-13 01:58 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:58 - INFO - ---------------------------------------------
2024-10-13 01:59 - INFO - ---------------------------------------------
2024-10-13 01:59 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 01:59 - INFO - 	 Train Loss: 0.060
2024-10-13 01:59 - INFO - 	 Val. Loss: 0.058
2024-10-13 01:59 - INFO - 	 ROC-AUC: 0.988
2024-10-13 01:59 - INFO - 	 PR-AUC: 0.890
2024-10-13 01:59 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 01:59 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 01:59 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 01:59 - INFO - 	 Best PR-AUC: 0.896
2024-10-13 01:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 01:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-13 01:59 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 01:59 - INFO - ---------------------------------------------
2024-10-13 02:00 - INFO - ---------------------------------------------
2024-10-13 02:00 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 02:00 - INFO - 	 Train Loss: 0.058
2024-10-13 02:00 - INFO - 	 Val. Loss: 0.057
2024-10-13 02:00 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:00 - INFO - 	 PR-AUC: 0.899
2024-10-13 02:00 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:00 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 02:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:00 - INFO - 	 Best PR-AUC: 0.899
2024-10-13 02:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-13 02:00 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:00 - INFO - ---------------------------------------------
2024-10-13 02:01 - INFO - Fit the preprocessing pipeline
2024-10-13 02:01 - INFO - Training using device: cuda
2024-10-13 02:01 - INFO - Creating generators
2024-10-13 02:01 - INFO - The model has 651,257 trainable parameters
2024-10-13 02:01 - INFO - * Model:
2024-10-13 02:01 - INFO - * -----------
2024-10-13 02:01 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 02:01 - INFO - * -----------
2024-10-13 02:01 - INFO - Evaluating model based on: rocauc
2024-10-13 02:01 - INFO - Training..

2024-10-13 02:02 - INFO - ---------------------------------------------
2024-10-13 02:02 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 02:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97463
2024-10-13 02:02 - INFO - 	 Train Loss: 0.161
2024-10-13 02:02 - INFO - 	 Val. Loss: 0.091
2024-10-13 02:02 - INFO - 	 ROC-AUC: 0.975
2024-10-13 02:02 - INFO - 	 PR-AUC: 0.803
2024-10-13 02:02 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-13 02:02 - INFO - 	 Best Val. Loss: 0.091
2024-10-13 02:02 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 02:02 - INFO - 	 Best PR-AUC: 0.803
2024-10-13 02:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 02:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.758
2024-10-13 02:02 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-13 02:02 - INFO - ---------------------------------------------
2024-10-13 02:02 - INFO - ---------------------------------------------
2024-10-13 02:02 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-13 02:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98327
2024-10-13 02:02 - INFO - 	 Train Loss: 0.085
2024-10-13 02:02 - INFO - 	 Val. Loss: 0.071
2024-10-13 02:02 - INFO - 	 ROC-AUC: 0.983
2024-10-13 02:02 - INFO - 	 PR-AUC: 0.853
2024-10-13 02:02 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 02:02 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 02:02 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 02:02 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 02:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 02:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-13 02:02 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 02:02 - INFO - ---------------------------------------------
2024-10-13 02:03 - INFO - ---------------------------------------------
2024-10-13 02:03 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 02:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98503
2024-10-13 02:03 - INFO - 	 Train Loss: 0.073
2024-10-13 02:03 - INFO - 	 Val. Loss: 0.070
2024-10-13 02:03 - INFO - 	 ROC-AUC: 0.985
2024-10-13 02:03 - INFO - 	 PR-AUC: 0.856
2024-10-13 02:03 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 02:03 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 02:03 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 02:03 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 02:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 02:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-13 02:03 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 02:03 - INFO - ---------------------------------------------
2024-10-13 02:03 - INFO - ---------------------------------------------
2024-10-13 02:03 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 02:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98628
2024-10-13 02:03 - INFO - 	 Train Loss: 0.070
2024-10-13 02:03 - INFO - 	 Val. Loss: 0.064
2024-10-13 02:03 - INFO - 	 ROC-AUC: 0.986
2024-10-13 02:03 - INFO - 	 PR-AUC: 0.870
2024-10-13 02:03 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 02:03 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 02:03 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 02:03 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 02:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 02:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-13 02:03 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 02:03 - INFO - ---------------------------------------------
2024-10-13 02:04 - INFO - ---------------------------------------------
2024-10-13 02:04 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 02:04 - INFO - 	 Train Loss: 0.066
2024-10-13 02:04 - INFO - 	 Val. Loss: 0.071
2024-10-13 02:04 - INFO - 	 ROC-AUC: 0.985
2024-10-13 02:04 - INFO - 	 PR-AUC: 0.869
2024-10-13 02:04 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:04 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 02:04 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 02:04 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 02:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 02:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-13 02:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:04 - INFO - ---------------------------------------------
2024-10-13 02:04 - INFO - ---------------------------------------------
2024-10-13 02:04 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 02:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98739
2024-10-13 02:04 - INFO - 	 Train Loss: 0.064
2024-10-13 02:04 - INFO - 	 Val. Loss: 0.061
2024-10-13 02:04 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:04 - INFO - 	 PR-AUC: 0.883
2024-10-13 02:04 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:04 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 02:04 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:04 - INFO - 	 Best PR-AUC: 0.883
2024-10-13 02:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 02:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-13 02:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:04 - INFO - ---------------------------------------------
2024-10-13 02:05 - INFO - ---------------------------------------------
2024-10-13 02:05 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 02:05 - INFO - 	 Train Loss: 0.062
2024-10-13 02:05 - INFO - 	 Val. Loss: 0.060
2024-10-13 02:05 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:05 - INFO - 	 PR-AUC: 0.886
2024-10-13 02:05 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:05 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 02:05 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:05 - INFO - 	 Best PR-AUC: 0.886
2024-10-13 02:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 02:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-13 02:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:05 - INFO - ---------------------------------------------
2024-10-13 02:05 - INFO - ---------------------------------------------
2024-10-13 02:05 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 02:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98845
2024-10-13 02:05 - INFO - 	 Train Loss: 0.059
2024-10-13 02:05 - INFO - 	 Val. Loss: 0.058
2024-10-13 02:05 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:05 - INFO - 	 PR-AUC: 0.894
2024-10-13 02:05 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:05 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 02:05 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:05 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 02:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-13 02:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:05 - INFO - ---------------------------------------------
2024-10-13 02:06 - INFO - ---------------------------------------------
2024-10-13 02:06 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 02:06 - INFO - 	 Train Loss: 0.058
2024-10-13 02:06 - INFO - 	 Val. Loss: 0.059
2024-10-13 02:06 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:06 - INFO - 	 PR-AUC: 0.890
2024-10-13 02:06 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-13 02:06 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 02:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:06 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 02:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-13 02:06 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 02:06 - INFO - ---------------------------------------------
2024-10-13 02:06 - INFO - ---------------------------------------------
2024-10-13 02:06 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 02:06 - INFO - 	 Train Loss: 0.057
2024-10-13 02:06 - INFO - 	 Val. Loss: 0.063
2024-10-13 02:06 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:06 - INFO - 	 PR-AUC: 0.892
2024-10-13 02:06 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:06 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 02:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:06 - INFO - 	 Best PR-AUC: 0.894
2024-10-13 02:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-13 02:06 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 02:06 - INFO - ---------------------------------------------
2024-10-13 02:08 - INFO - Fit the preprocessing pipeline
2024-10-13 02:08 - INFO - Training using device: cuda
2024-10-13 02:08 - INFO - Creating generators
2024-10-13 02:08 - INFO - The model has 651,257 trainable parameters
2024-10-13 02:08 - INFO - * Model:
2024-10-13 02:08 - INFO - * -----------
2024-10-13 02:08 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 02:08 - INFO - * -----------
2024-10-13 02:08 - INFO - Evaluating model based on: rocauc
2024-10-13 02:08 - INFO - Training..

2024-10-13 02:08 - INFO - ---------------------------------------------
2024-10-13 02:08 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 02:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97934
2024-10-13 02:08 - INFO - 	 Train Loss: 0.158
2024-10-13 02:08 - INFO - 	 Val. Loss: 0.084
2024-10-13 02:08 - INFO - 	 ROC-AUC: 0.979
2024-10-13 02:08 - INFO - 	 PR-AUC: 0.804
2024-10-13 02:08 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 02:08 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 02:08 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 02:08 - INFO - 	 Best PR-AUC: 0.804
2024-10-13 02:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 02:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-13 02:08 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 02:08 - INFO - ---------------------------------------------
2024-10-13 02:09 - INFO - ---------------------------------------------
2024-10-13 02:09 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 02:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98327
2024-10-13 02:09 - INFO - 	 Train Loss: 0.084
2024-10-13 02:09 - INFO - 	 Val. Loss: 0.071
2024-10-13 02:09 - INFO - 	 ROC-AUC: 0.983
2024-10-13 02:09 - INFO - 	 PR-AUC: 0.850
2024-10-13 02:09 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 02:09 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 02:09 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 02:09 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 02:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 02:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 02:09 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 02:09 - INFO - ---------------------------------------------
2024-10-13 02:09 - INFO - ---------------------------------------------
2024-10-13 02:09 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 02:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98511
2024-10-13 02:09 - INFO - 	 Train Loss: 0.074
2024-10-13 02:09 - INFO - 	 Val. Loss: 0.068
2024-10-13 02:09 - INFO - 	 ROC-AUC: 0.985
2024-10-13 02:09 - INFO - 	 PR-AUC: 0.870
2024-10-13 02:09 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 02:09 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 02:09 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 02:09 - INFO - 	 Best PR-AUC: 0.870
2024-10-13 02:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 02:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-13 02:09 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 02:09 - INFO - ---------------------------------------------
2024-10-13 02:10 - INFO - ---------------------------------------------
2024-10-13 02:10 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 02:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98716
2024-10-13 02:10 - INFO - 	 Train Loss: 0.069
2024-10-13 02:10 - INFO - 	 Val. Loss: 0.063
2024-10-13 02:10 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:10 - INFO - 	 PR-AUC: 0.883
2024-10-13 02:10 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 02:10 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 02:10 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:10 - INFO - 	 Best PR-AUC: 0.883
2024-10-13 02:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-13 02:10 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 02:10 - INFO - ---------------------------------------------
2024-10-13 02:11 - INFO - ---------------------------------------------
2024-10-13 02:11 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 02:11 - INFO - 	 Train Loss: 0.067
2024-10-13 02:11 - INFO - 	 Val. Loss: 0.065
2024-10-13 02:11 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:11 - INFO - 	 PR-AUC: 0.886
2024-10-13 02:11 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 02:11 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 02:11 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:11 - INFO - 	 Best PR-AUC: 0.886
2024-10-13 02:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-13 02:11 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-13 02:11 - INFO - ---------------------------------------------
2024-10-13 02:11 - INFO - ---------------------------------------------
2024-10-13 02:11 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 02:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98865
2024-10-13 02:11 - INFO - 	 Train Loss: 0.065
2024-10-13 02:11 - INFO - 	 Val. Loss: 0.063
2024-10-13 02:11 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:11 - INFO - 	 PR-AUC: 0.887
2024-10-13 02:11 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:11 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 02:11 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:11 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 02:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-13 02:11 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 02:11 - INFO - ---------------------------------------------
2024-10-13 02:12 - INFO - ---------------------------------------------
2024-10-13 02:12 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 02:12 - INFO - 	 Train Loss: 0.062
2024-10-13 02:12 - INFO - 	 Val. Loss: 0.064
2024-10-13 02:12 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:12 - INFO - 	 PR-AUC: 0.891
2024-10-13 02:12 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 02:12 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 02:12 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:12 - INFO - 	 Best PR-AUC: 0.891
2024-10-13 02:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 02:12 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 02:12 - INFO - ---------------------------------------------
2024-10-13 02:12 - INFO - ---------------------------------------------
2024-10-13 02:12 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 02:12 - INFO - 	 Train Loss: 0.061
2024-10-13 02:12 - INFO - 	 Val. Loss: 0.072
2024-10-13 02:12 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:12 - INFO - 	 PR-AUC: 0.887
2024-10-13 02:12 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:12 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 02:12 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:12 - INFO - 	 Best PR-AUC: 0.891
2024-10-13 02:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 02:12 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 02:12 - INFO - ---------------------------------------------
2024-10-13 02:13 - INFO - ---------------------------------------------
2024-10-13 02:13 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 02:13 - INFO - 	 Train Loss: 0.060
2024-10-13 02:13 - INFO - 	 Val. Loss: 0.061
2024-10-13 02:13 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:13 - INFO - 	 PR-AUC: 0.885
2024-10-13 02:13 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 02:13 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 02:13 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:13 - INFO - 	 Best PR-AUC: 0.891
2024-10-13 02:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-13 02:13 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 02:13 - INFO - ---------------------------------------------
2024-10-13 02:15 - INFO - Fit the preprocessing pipeline
2024-10-13 02:15 - INFO - Training using device: cuda
2024-10-13 02:15 - INFO - Creating generators
2024-10-13 02:15 - INFO - The model has 651,257 trainable parameters
2024-10-13 02:15 - INFO - * Model:
2024-10-13 02:15 - INFO - * -----------
2024-10-13 02:15 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 02:15 - INFO - * -----------
2024-10-13 02:15 - INFO - Evaluating model based on: rocauc
2024-10-13 02:15 - INFO - Training..

2024-10-13 02:15 - INFO - ---------------------------------------------
2024-10-13 02:15 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 02:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97923
2024-10-13 02:15 - INFO - 	 Train Loss: 0.166
2024-10-13 02:15 - INFO - 	 Val. Loss: 0.080
2024-10-13 02:15 - INFO - 	 ROC-AUC: 0.979
2024-10-13 02:15 - INFO - 	 PR-AUC: 0.819
2024-10-13 02:15 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 02:15 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 02:15 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 02:15 - INFO - 	 Best PR-AUC: 0.819
2024-10-13 02:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 02:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.768
2024-10-13 02:15 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 02:15 - INFO - ---------------------------------------------
2024-10-13 02:16 - INFO - ---------------------------------------------
2024-10-13 02:16 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 02:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98392
2024-10-13 02:16 - INFO - 	 Train Loss: 0.083
2024-10-13 02:16 - INFO - 	 Val. Loss: 0.078
2024-10-13 02:16 - INFO - 	 ROC-AUC: 0.984
2024-10-13 02:16 - INFO - 	 PR-AUC: 0.859
2024-10-13 02:16 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 02:16 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 02:16 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 02:16 - INFO - 	 Best PR-AUC: 0.859
2024-10-13 02:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 02:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-13 02:16 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 02:16 - INFO - ---------------------------------------------
2024-10-13 02:16 - INFO - ---------------------------------------------
2024-10-13 02:16 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 02:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98728
2024-10-13 02:16 - INFO - 	 Train Loss: 0.075
2024-10-13 02:16 - INFO - 	 Val. Loss: 0.064
2024-10-13 02:16 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:16 - INFO - 	 PR-AUC: 0.872
2024-10-13 02:16 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:16 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 02:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:16 - INFO - 	 Best PR-AUC: 0.872
2024-10-13 02:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 02:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-13 02:16 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 02:16 - INFO - ---------------------------------------------
2024-10-13 02:17 - INFO - ---------------------------------------------
2024-10-13 02:17 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 02:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98774
2024-10-13 02:17 - INFO - 	 Train Loss: 0.070
2024-10-13 02:17 - INFO - 	 Val. Loss: 0.061
2024-10-13 02:17 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:17 - INFO - 	 PR-AUC: 0.887
2024-10-13 02:17 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:17 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 02:17 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:17 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-13 02:17 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 02:17 - INFO - ---------------------------------------------
2024-10-13 02:17 - INFO - ---------------------------------------------
2024-10-13 02:17 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 02:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98803
2024-10-13 02:17 - INFO - 	 Train Loss: 0.067
2024-10-13 02:17 - INFO - 	 Val. Loss: 0.063
2024-10-13 02:17 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:17 - INFO - 	 PR-AUC: 0.887
2024-10-13 02:17 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-13 02:17 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 02:17 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:17 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-13 02:17 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 02:17 - INFO - ---------------------------------------------
2024-10-13 02:18 - INFO - ---------------------------------------------
2024-10-13 02:18 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 02:18 - INFO - 	 Train Loss: 0.063
2024-10-13 02:18 - INFO - 	 Val. Loss: 0.062
2024-10-13 02:18 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:18 - INFO - 	 PR-AUC: 0.881
2024-10-13 02:18 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:18 - INFO - 	 Best Val. Loss: 0.061
2024-10-13 02:18 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:18 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 02:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-13 02:18 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 02:18 - INFO - ---------------------------------------------
2024-10-13 02:18 - INFO - ---------------------------------------------
2024-10-13 02:18 - INFO - Epoch: 07 | Time: 0m 33s
2024-10-13 02:18 - INFO - 	 Train Loss: 0.061
2024-10-13 02:18 - INFO - 	 Val. Loss: 0.060
2024-10-13 02:18 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:18 - INFO - 	 PR-AUC: 0.883
2024-10-13 02:18 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:18 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 02:18 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:18 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 02:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-13 02:18 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 02:18 - INFO - ---------------------------------------------
2024-10-13 02:19 - INFO - ---------------------------------------------
2024-10-13 02:19 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 02:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98856
2024-10-13 02:19 - INFO - 	 Train Loss: 0.061
2024-10-13 02:19 - INFO - 	 Val. Loss: 0.062
2024-10-13 02:19 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:19 - INFO - 	 PR-AUC: 0.879
2024-10-13 02:19 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:19 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 02:19 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:19 - INFO - 	 Best PR-AUC: 0.887
2024-10-13 02:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-13 02:19 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 02:19 - INFO - ---------------------------------------------
2024-10-13 02:19 - INFO - ---------------------------------------------
2024-10-13 02:19 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 02:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98883
2024-10-13 02:19 - INFO - 	 Train Loss: 0.058
2024-10-13 02:19 - INFO - 	 Val. Loss: 0.058
2024-10-13 02:19 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:19 - INFO - 	 PR-AUC: 0.889
2024-10-13 02:19 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-13 02:19 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 02:19 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:19 - INFO - 	 Best PR-AUC: 0.889
2024-10-13 02:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-13 02:19 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-13 02:19 - INFO - ---------------------------------------------
2024-10-13 02:20 - INFO - ---------------------------------------------
2024-10-13 02:20 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 02:20 - INFO - 	 Train Loss: 0.057
2024-10-13 02:20 - INFO - 	 Val. Loss: 0.057
2024-10-13 02:20 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:20 - INFO - 	 PR-AUC: 0.890
2024-10-13 02:20 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:20 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 02:20 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:20 - INFO - 	 Best PR-AUC: 0.890
2024-10-13 02:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-13 02:20 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-13 02:20 - INFO - ---------------------------------------------
2024-10-13 02:22 - INFO - Fit the preprocessing pipeline
2024-10-13 02:22 - INFO - Training using device: cuda
2024-10-13 02:22 - INFO - Creating generators
2024-10-13 02:22 - INFO - The model has 651,257 trainable parameters
2024-10-13 02:22 - INFO - * Model:
2024-10-13 02:22 - INFO - * -----------
2024-10-13 02:22 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 02:22 - INFO - * -----------
2024-10-13 02:22 - INFO - Evaluating model based on: rocauc
2024-10-13 02:22 - INFO - Training..

2024-10-13 02:22 - INFO - ---------------------------------------------
2024-10-13 02:22 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 02:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9819
2024-10-13 02:22 - INFO - 	 Train Loss: 0.171
2024-10-13 02:22 - INFO - 	 Val. Loss: 0.076
2024-10-13 02:22 - INFO - 	 ROC-AUC: 0.982
2024-10-13 02:22 - INFO - 	 PR-AUC: 0.828
2024-10-13 02:22 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 02:22 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 02:22 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 02:22 - INFO - 	 Best PR-AUC: 0.828
2024-10-13 02:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 02:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-10-13 02:22 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 02:22 - INFO - ---------------------------------------------
2024-10-13 02:23 - INFO - ---------------------------------------------
2024-10-13 02:23 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 02:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9854
2024-10-13 02:23 - INFO - 	 Train Loss: 0.087
2024-10-13 02:23 - INFO - 	 Val. Loss: 0.071
2024-10-13 02:23 - INFO - 	 ROC-AUC: 0.985
2024-10-13 02:23 - INFO - 	 PR-AUC: 0.857
2024-10-13 02:23 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 02:23 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 02:23 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 02:23 - INFO - 	 Best PR-AUC: 0.857
2024-10-13 02:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 02:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-13 02:23 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 02:23 - INFO - ---------------------------------------------
2024-10-13 02:23 - INFO - ---------------------------------------------
2024-10-13 02:23 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 02:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98599
2024-10-13 02:23 - INFO - 	 Train Loss: 0.075
2024-10-13 02:23 - INFO - 	 Val. Loss: 0.065
2024-10-13 02:23 - INFO - 	 ROC-AUC: 0.986
2024-10-13 02:23 - INFO - 	 PR-AUC: 0.872
2024-10-13 02:23 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 02:23 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 02:23 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 02:23 - INFO - 	 Best PR-AUC: 0.872
2024-10-13 02:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 02:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-13 02:23 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 02:23 - INFO - ---------------------------------------------
2024-10-13 02:24 - INFO - ---------------------------------------------
2024-10-13 02:24 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 02:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98716
2024-10-13 02:24 - INFO - 	 Train Loss: 0.070
2024-10-13 02:24 - INFO - 	 Val. Loss: 0.060
2024-10-13 02:24 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:24 - INFO - 	 PR-AUC: 0.889
2024-10-13 02:24 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 02:24 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 02:24 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:24 - INFO - 	 Best PR-AUC: 0.889
2024-10-13 02:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 02:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-13 02:24 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 02:24 - INFO - ---------------------------------------------
2024-10-13 02:24 - INFO - ---------------------------------------------
2024-10-13 02:24 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 02:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98801
2024-10-13 02:24 - INFO - 	 Train Loss: 0.066
2024-10-13 02:24 - INFO - 	 Val. Loss: 0.058
2024-10-13 02:24 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:24 - INFO - 	 PR-AUC: 0.903
2024-10-13 02:24 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:24 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 02:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:24 - INFO - 	 Best PR-AUC: 0.903
2024-10-13 02:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 02:24 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:24 - INFO - ---------------------------------------------
2024-10-13 02:25 - INFO - ---------------------------------------------
2024-10-13 02:25 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 02:25 - INFO - 	 Train Loss: 0.063
2024-10-13 02:25 - INFO - 	 Val. Loss: 0.061
2024-10-13 02:25 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:25 - INFO - 	 PR-AUC: 0.888
2024-10-13 02:25 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-13 02:25 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 02:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:25 - INFO - 	 Best PR-AUC: 0.903
2024-10-13 02:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 02:25 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:25 - INFO - ---------------------------------------------
2024-10-13 02:25 - INFO - ---------------------------------------------
2024-10-13 02:25 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 02:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98874
2024-10-13 02:25 - INFO - 	 Train Loss: 0.061
2024-10-13 02:25 - INFO - 	 Val. Loss: 0.059
2024-10-13 02:25 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:25 - INFO - 	 PR-AUC: 0.896
2024-10-13 02:25 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 02:25 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 02:25 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:25 - INFO - 	 Best PR-AUC: 0.903
2024-10-13 02:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 02:25 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:25 - INFO - ---------------------------------------------
2024-10-13 02:26 - INFO - ---------------------------------------------
2024-10-13 02:26 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 02:26 - INFO - 	 Train Loss: 0.059
2024-10-13 02:26 - INFO - 	 Val. Loss: 0.060
2024-10-13 02:26 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:26 - INFO - 	 PR-AUC: 0.887
2024-10-13 02:26 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-13 02:26 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 02:26 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:26 - INFO - 	 Best PR-AUC: 0.903
2024-10-13 02:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 02:26 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 02:26 - INFO - ---------------------------------------------
2024-10-13 02:26 - INFO - ---------------------------------------------
2024-10-13 02:26 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-13 02:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98903
2024-10-13 02:26 - INFO - 	 Train Loss: 0.059
2024-10-13 02:26 - INFO - 	 Val. Loss: 0.060
2024-10-13 02:26 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:26 - INFO - 	 PR-AUC: 0.896
2024-10-13 02:26 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:26 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 02:26 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:26 - INFO - 	 Best PR-AUC: 0.903
2024-10-13 02:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-13 02:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-13 02:26 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 02:26 - INFO - ---------------------------------------------
2024-10-13 02:27 - INFO - ---------------------------------------------
2024-10-13 02:27 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 02:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98904
2024-10-13 02:27 - INFO - 	 Train Loss: 0.058
2024-10-13 02:27 - INFO - 	 Val. Loss: 0.055
2024-10-13 02:27 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:27 - INFO - 	 PR-AUC: 0.905
2024-10-13 02:27 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-13 02:27 - INFO - 	 Best Val. Loss: 0.055
2024-10-13 02:27 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:27 - INFO - 	 Best PR-AUC: 0.905
2024-10-13 02:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-13 02:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-13 02:27 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-13 02:27 - INFO - ---------------------------------------------
2024-10-13 02:28 - INFO - Fit the preprocessing pipeline
2024-10-13 02:28 - INFO - Training using device: cuda
2024-10-13 02:28 - INFO - Creating generators
2024-10-13 02:28 - INFO - The model has 651,257 trainable parameters
2024-10-13 02:28 - INFO - * Model:
2024-10-13 02:28 - INFO - * -----------
2024-10-13 02:28 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 02:28 - INFO - * -----------
2024-10-13 02:28 - INFO - Evaluating model based on: rocauc
2024-10-13 02:28 - INFO - Training..

2024-10-13 02:29 - INFO - ---------------------------------------------
2024-10-13 02:29 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 02:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97535
2024-10-13 02:29 - INFO - 	 Train Loss: 0.160
2024-10-13 02:29 - INFO - 	 Val. Loss: 0.088
2024-10-13 02:29 - INFO - 	 ROC-AUC: 0.975
2024-10-13 02:29 - INFO - 	 PR-AUC: 0.787
2024-10-13 02:29 - INFO - 	 Recall for 0.4 precision: 0.955
2024-10-13 02:29 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 02:29 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 02:29 - INFO - 	 Best PR-AUC: 0.787
2024-10-13 02:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 02:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-13 02:29 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-13 02:29 - INFO - ---------------------------------------------
2024-10-13 02:29 - INFO - ---------------------------------------------
2024-10-13 02:29 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 02:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98513
2024-10-13 02:29 - INFO - 	 Train Loss: 0.086
2024-10-13 02:29 - INFO - 	 Val. Loss: 0.068
2024-10-13 02:29 - INFO - 	 ROC-AUC: 0.985
2024-10-13 02:29 - INFO - 	 PR-AUC: 0.853
2024-10-13 02:29 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 02:29 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 02:29 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 02:29 - INFO - 	 Best PR-AUC: 0.853
2024-10-13 02:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 02:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 02:29 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 02:29 - INFO - ---------------------------------------------
2024-10-13 02:30 - INFO - ---------------------------------------------
2024-10-13 02:30 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 02:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98522
2024-10-13 02:30 - INFO - 	 Train Loss: 0.074
2024-10-13 02:30 - INFO - 	 Val. Loss: 0.072
2024-10-13 02:30 - INFO - 	 ROC-AUC: 0.985
2024-10-13 02:30 - INFO - 	 PR-AUC: 0.856
2024-10-13 02:30 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:30 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 02:30 - INFO - 	 Best ROC-AUC: 0.985
2024-10-13 02:30 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 02:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 02:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-13 02:30 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:30 - INFO - ---------------------------------------------
2024-10-13 02:31 - INFO - ---------------------------------------------
2024-10-13 02:31 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 02:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98701
2024-10-13 02:31 - INFO - 	 Train Loss: 0.069
2024-10-13 02:31 - INFO - 	 Val. Loss: 0.064
2024-10-13 02:31 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:31 - INFO - 	 PR-AUC: 0.876
2024-10-13 02:31 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:31 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 02:31 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:31 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 02:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 02:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 02:31 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:31 - INFO - ---------------------------------------------
2024-10-13 02:31 - INFO - ---------------------------------------------
2024-10-13 02:31 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 02:31 - INFO - 	 Train Loss: 0.066
2024-10-13 02:31 - INFO - 	 Val. Loss: 0.066
2024-10-13 02:31 - INFO - 	 ROC-AUC: 0.986
2024-10-13 02:31 - INFO - 	 PR-AUC: 0.873
2024-10-13 02:31 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 02:31 - INFO - 	 Best Val. Loss: 0.064
2024-10-13 02:31 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:31 - INFO - 	 Best PR-AUC: 0.876
2024-10-13 02:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 02:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-13 02:31 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:31 - INFO - ---------------------------------------------
2024-10-13 02:32 - INFO - ---------------------------------------------
2024-10-13 02:32 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 02:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98744
2024-10-13 02:32 - INFO - 	 Train Loss: 0.063
2024-10-13 02:32 - INFO - 	 Val. Loss: 0.062
2024-10-13 02:32 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:32 - INFO - 	 PR-AUC: 0.883
2024-10-13 02:32 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:32 - INFO - 	 Best Val. Loss: 0.062
2024-10-13 02:32 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:32 - INFO - 	 Best PR-AUC: 0.883
2024-10-13 02:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 02:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-13 02:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:32 - INFO - ---------------------------------------------
2024-10-13 02:32 - INFO - ---------------------------------------------
2024-10-13 02:32 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 02:32 - INFO - 	 Train Loss: 0.062
2024-10-13 02:32 - INFO - 	 Val. Loss: 0.060
2024-10-13 02:32 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:32 - INFO - 	 PR-AUC: 0.885
2024-10-13 02:32 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 02:32 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 02:32 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:32 - INFO - 	 Best PR-AUC: 0.885
2024-10-13 02:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 02:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-13 02:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:32 - INFO - ---------------------------------------------
2024-10-13 02:33 - INFO - ---------------------------------------------
2024-10-13 02:33 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 02:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9886
2024-10-13 02:33 - INFO - 	 Train Loss: 0.059
2024-10-13 02:33 - INFO - 	 Val. Loss: 0.061
2024-10-13 02:33 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:33 - INFO - 	 PR-AUC: 0.900
2024-10-13 02:33 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:33 - INFO - 	 Best Val. Loss: 0.060
2024-10-13 02:33 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:33 - INFO - 	 Best PR-AUC: 0.900
2024-10-13 02:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-13 02:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:33 - INFO - ---------------------------------------------
2024-10-13 02:33 - INFO - ---------------------------------------------
2024-10-13 02:33 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 02:33 - INFO - 	 Train Loss: 0.059
2024-10-13 02:33 - INFO - 	 Val. Loss: 0.058
2024-10-13 02:33 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:33 - INFO - 	 PR-AUC: 0.900
2024-10-13 02:33 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 02:33 - INFO - 	 Best Val. Loss: 0.058
2024-10-13 02:33 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:33 - INFO - 	 Best PR-AUC: 0.900
2024-10-13 02:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-13 02:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:33 - INFO - ---------------------------------------------
2024-10-13 02:34 - INFO - ---------------------------------------------
2024-10-13 02:34 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 02:34 - INFO - 	 Train Loss: 0.057
2024-10-13 02:34 - INFO - 	 Val. Loss: 0.057
2024-10-13 02:34 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:34 - INFO - 	 PR-AUC: 0.902
2024-10-13 02:34 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 02:34 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 02:34 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:34 - INFO - 	 Best PR-AUC: 0.902
2024-10-13 02:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-13 02:34 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-13 02:34 - INFO - ---------------------------------------------
2024-10-13 02:35 - INFO - Fit the preprocessing pipeline
2024-10-13 02:35 - INFO - Training using device: cuda
2024-10-13 02:35 - INFO - Creating generators
2024-10-13 02:35 - INFO - The model has 651,257 trainable parameters
2024-10-13 02:35 - INFO - * Model:
2024-10-13 02:35 - INFO - * -----------
2024-10-13 02:35 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 02:35 - INFO - * -----------
2024-10-13 02:35 - INFO - Evaluating model based on: rocauc
2024-10-13 02:35 - INFO - Training..

2024-10-13 02:36 - INFO - ---------------------------------------------
2024-10-13 02:36 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 02:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97716
2024-10-13 02:36 - INFO - 	 Train Loss: 0.161
2024-10-13 02:36 - INFO - 	 Val. Loss: 0.089
2024-10-13 02:36 - INFO - 	 ROC-AUC: 0.977
2024-10-13 02:36 - INFO - 	 PR-AUC: 0.800
2024-10-13 02:36 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 02:36 - INFO - 	 Best Val. Loss: 0.089
2024-10-13 02:36 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 02:36 - INFO - 	 Best PR-AUC: 0.800
2024-10-13 02:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 02:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.769
2024-10-13 02:36 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 02:36 - INFO - ---------------------------------------------
2024-10-13 02:36 - INFO - ---------------------------------------------
2024-10-13 02:36 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 02:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98439
2024-10-13 02:36 - INFO - 	 Train Loss: 0.085
2024-10-13 02:36 - INFO - 	 Val. Loss: 0.068
2024-10-13 02:36 - INFO - 	 ROC-AUC: 0.984
2024-10-13 02:36 - INFO - 	 PR-AUC: 0.856
2024-10-13 02:36 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-13 02:36 - INFO - 	 Best Val. Loss: 0.068
2024-10-13 02:36 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 02:36 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 02:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 02:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 02:36 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 02:36 - INFO - ---------------------------------------------
2024-10-13 02:37 - INFO - ---------------------------------------------
2024-10-13 02:37 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 02:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98583
2024-10-13 02:37 - INFO - 	 Train Loss: 0.074
2024-10-13 02:37 - INFO - 	 Val. Loss: 0.065
2024-10-13 02:37 - INFO - 	 ROC-AUC: 0.986
2024-10-13 02:37 - INFO - 	 PR-AUC: 0.873
2024-10-13 02:37 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 02:37 - INFO - 	 Best Val. Loss: 0.065
2024-10-13 02:37 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 02:37 - INFO - 	 Best PR-AUC: 0.873
2024-10-13 02:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-13 02:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 02:37 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 02:37 - INFO - ---------------------------------------------
2024-10-13 02:37 - INFO - ---------------------------------------------
2024-10-13 02:37 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 02:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98588
2024-10-13 02:37 - INFO - 	 Train Loss: 0.069
2024-10-13 02:37 - INFO - 	 Val. Loss: 0.063
2024-10-13 02:37 - INFO - 	 ROC-AUC: 0.986
2024-10-13 02:37 - INFO - 	 PR-AUC: 0.879
2024-10-13 02:37 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 02:37 - INFO - 	 Best Val. Loss: 0.063
2024-10-13 02:37 - INFO - 	 Best ROC-AUC: 0.986
2024-10-13 02:37 - INFO - 	 Best PR-AUC: 0.879
2024-10-13 02:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 02:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-13 02:37 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 02:37 - INFO - ---------------------------------------------
2024-10-13 02:38 - INFO - ---------------------------------------------
2024-10-13 02:38 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 02:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98712
2024-10-13 02:38 - INFO - 	 Train Loss: 0.065
2024-10-13 02:38 - INFO - 	 Val. Loss: 0.059
2024-10-13 02:38 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:38 - INFO - 	 PR-AUC: 0.896
2024-10-13 02:38 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 02:38 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 02:38 - INFO - 	 Best ROC-AUC: 0.987
2024-10-13 02:38 - INFO - 	 Best PR-AUC: 0.896
2024-10-13 02:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-13 02:38 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-13 02:38 - INFO - ---------------------------------------------
2024-10-13 02:38 - INFO - ---------------------------------------------
2024-10-13 02:38 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 02:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98799
2024-10-13 02:38 - INFO - 	 Train Loss: 0.063
2024-10-13 02:38 - INFO - 	 Val. Loss: 0.060
2024-10-13 02:38 - INFO - 	 ROC-AUC: 0.988
2024-10-13 02:38 - INFO - 	 PR-AUC: 0.892
2024-10-13 02:38 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:38 - INFO - 	 Best Val. Loss: 0.059
2024-10-13 02:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-13 02:38 - INFO - 	 Best PR-AUC: 0.896
2024-10-13 02:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-13 02:38 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-13 02:38 - INFO - ---------------------------------------------
2024-10-13 02:39 - INFO - ---------------------------------------------
2024-10-13 02:39 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 02:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9885
2024-10-13 02:39 - INFO - 	 Train Loss: 0.061
2024-10-13 02:39 - INFO - 	 Val. Loss: 0.057
2024-10-13 02:39 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:39 - INFO - 	 PR-AUC: 0.901
2024-10-13 02:39 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-13 02:39 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 02:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:39 - INFO - 	 Best PR-AUC: 0.901
2024-10-13 02:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-13 02:39 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 02:39 - INFO - ---------------------------------------------
2024-10-13 02:39 - INFO - ---------------------------------------------
2024-10-13 02:39 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 02:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98894
2024-10-13 02:39 - INFO - 	 Train Loss: 0.059
2024-10-13 02:39 - INFO - 	 Val. Loss: 0.058
2024-10-13 02:39 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:39 - INFO - 	 PR-AUC: 0.904
2024-10-13 02:39 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-13 02:39 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 02:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:39 - INFO - 	 Best PR-AUC: 0.904
2024-10-13 02:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-13 02:39 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 02:39 - INFO - ---------------------------------------------
2024-10-13 02:40 - INFO - ---------------------------------------------
2024-10-13 02:40 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 02:40 - INFO - 	 Train Loss: 0.058
2024-10-13 02:40 - INFO - 	 Val. Loss: 0.060
2024-10-13 02:40 - INFO - 	 ROC-AUC: 0.987
2024-10-13 02:40 - INFO - 	 PR-AUC: 0.896
2024-10-13 02:40 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-13 02:40 - INFO - 	 Best Val. Loss: 0.057
2024-10-13 02:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:40 - INFO - 	 Best PR-AUC: 0.904
2024-10-13 02:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-13 02:40 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 02:40 - INFO - ---------------------------------------------
2024-10-13 02:41 - INFO - ---------------------------------------------
2024-10-13 02:41 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 02:41 - INFO - 	 Train Loss: 0.058
2024-10-13 02:41 - INFO - 	 Val. Loss: 0.056
2024-10-13 02:41 - INFO - 	 ROC-AUC: 0.989
2024-10-13 02:41 - INFO - 	 PR-AUC: 0.903
2024-10-13 02:41 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-13 02:41 - INFO - 	 Best Val. Loss: 0.056
2024-10-13 02:41 - INFO - 	 Best ROC-AUC: 0.989
2024-10-13 02:41 - INFO - 	 Best PR-AUC: 0.904
2024-10-13 02:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-13 02:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-13 02:41 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-13 02:41 - INFO - ---------------------------------------------
