2024-10-25 15:51 - INFO - Fit the preprocessing pipeline
2024-10-25 15:51 - INFO - Training using device: cuda
2024-10-25 15:51 - INFO - Creating generators
2024-10-25 15:51 - INFO - The model has 651,257 trainable parameters
2024-10-25 15:51 - INFO - * Model:
2024-10-25 15:51 - INFO - * -----------
2024-10-25 15:51 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 15:51 - INFO - * -----------
2024-10-25 15:51 - INFO - Evaluating model based on: rocauc
2024-10-25 15:51 - INFO - Training..

2024-10-25 15:51 - INFO - ---------------------------------------------
2024-10-25 15:51 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 15:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97843
2024-10-25 15:51 - INFO - 	 Train Loss: 0.171
2024-10-25 15:51 - INFO - 	 Val. Loss: 0.084
2024-10-25 15:51 - INFO - 	 ROC-AUC: 0.978
2024-10-25 15:51 - INFO - 	 PR-AUC: 0.786
2024-10-25 15:51 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 15:51 - INFO - 	 Best Val. Loss: 0.084
2024-10-25 15:51 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 15:51 - INFO - 	 Best PR-AUC: 0.786
2024-10-25 15:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 15:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.765
2024-10-25 15:51 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 15:51 - INFO - ---------------------------------------------
2024-10-25 15:52 - INFO - ---------------------------------------------
2024-10-25 15:52 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 15:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98087
2024-10-25 15:52 - INFO - 	 Train Loss: 0.091
2024-10-25 15:52 - INFO - 	 Val. Loss: 0.078
2024-10-25 15:52 - INFO - 	 ROC-AUC: 0.981
2024-10-25 15:52 - INFO - 	 PR-AUC: 0.829
2024-10-25 15:52 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 15:52 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 15:52 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 15:52 - INFO - 	 Best PR-AUC: 0.829
2024-10-25 15:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 15:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-25 15:52 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 15:52 - INFO - ---------------------------------------------
2024-10-25 15:52 - INFO - ---------------------------------------------
2024-10-25 15:52 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 15:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9844
2024-10-25 15:52 - INFO - 	 Train Loss: 0.081
2024-10-25 15:52 - INFO - 	 Val. Loss: 0.070
2024-10-25 15:52 - INFO - 	 ROC-AUC: 0.984
2024-10-25 15:52 - INFO - 	 PR-AUC: 0.860
2024-10-25 15:52 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 15:52 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 15:52 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 15:52 - INFO - 	 Best PR-AUC: 0.860
2024-10-25 15:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 15:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-25 15:52 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 15:52 - INFO - ---------------------------------------------
2024-10-25 15:53 - INFO - ---------------------------------------------
2024-10-25 15:53 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 15:53 - INFO - 	 Train Loss: 0.076
2024-10-25 15:53 - INFO - 	 Val. Loss: 0.073
2024-10-25 15:53 - INFO - 	 ROC-AUC: 0.984
2024-10-25 15:53 - INFO - 	 PR-AUC: 0.858
2024-10-25 15:53 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 15:53 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 15:53 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 15:53 - INFO - 	 Best PR-AUC: 0.860
2024-10-25 15:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 15:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-25 15:53 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 15:53 - INFO - ---------------------------------------------
2024-10-25 15:53 - INFO - ---------------------------------------------
2024-10-25 15:53 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 15:53 - INFO - 	 Train Loss: 0.073
2024-10-25 15:53 - INFO - 	 Val. Loss: 0.084
2024-10-25 15:53 - INFO - 	 ROC-AUC: 0.983
2024-10-25 15:53 - INFO - 	 PR-AUC: 0.858
2024-10-25 15:53 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:53 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 15:53 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 15:53 - INFO - 	 Best PR-AUC: 0.860
2024-10-25 15:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 15:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-25 15:53 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 15:53 - INFO - ---------------------------------------------
2024-10-25 15:54 - INFO - ---------------------------------------------
2024-10-25 15:54 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 15:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98509
2024-10-25 15:54 - INFO - 	 Train Loss: 0.071
2024-10-25 15:54 - INFO - 	 Val. Loss: 0.071
2024-10-25 15:54 - INFO - 	 ROC-AUC: 0.985
2024-10-25 15:54 - INFO - 	 PR-AUC: 0.861
2024-10-25 15:54 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:54 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 15:54 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 15:54 - INFO - 	 Best PR-AUC: 0.861
2024-10-25 15:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 15:54 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:54 - INFO - ---------------------------------------------
2024-10-25 15:55 - INFO - ---------------------------------------------
2024-10-25 15:55 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 15:55 - INFO - 	 Train Loss: 0.069
2024-10-25 15:55 - INFO - 	 Val. Loss: 0.073
2024-10-25 15:55 - INFO - 	 ROC-AUC: 0.984
2024-10-25 15:55 - INFO - 	 PR-AUC: 0.855
2024-10-25 15:55 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 15:55 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 15:55 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 15:55 - INFO - 	 Best PR-AUC: 0.861
2024-10-25 15:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 15:55 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:55 - INFO - ---------------------------------------------
2024-10-25 15:55 - INFO - ---------------------------------------------
2024-10-25 15:55 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 15:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9865
2024-10-25 15:55 - INFO - 	 Train Loss: 0.067
2024-10-25 15:55 - INFO - 	 Val. Loss: 0.064
2024-10-25 15:55 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:55 - INFO - 	 PR-AUC: 0.873
2024-10-25 15:55 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:55 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 15:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:55 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 15:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 15:55 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:55 - INFO - ---------------------------------------------
2024-10-25 15:56 - INFO - ---------------------------------------------
2024-10-25 15:56 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 15:56 - INFO - 	 Train Loss: 0.066
2024-10-25 15:56 - INFO - 	 Val. Loss: 0.066
2024-10-25 15:56 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:56 - INFO - 	 PR-AUC: 0.868
2024-10-25 15:56 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:56 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 15:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:56 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 15:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 15:56 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:56 - INFO - ---------------------------------------------
2024-10-25 15:56 - INFO - ---------------------------------------------
2024-10-25 15:56 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 15:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98729
2024-10-25 15:56 - INFO - 	 Train Loss: 0.064
2024-10-25 15:56 - INFO - 	 Val. Loss: 0.062
2024-10-25 15:56 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:56 - INFO - 	 PR-AUC: 0.882
2024-10-25 15:56 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:56 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 15:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:56 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 15:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 15:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 15:56 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:56 - INFO - ---------------------------------------------
2024-10-25 15:58 - INFO - Fit the preprocessing pipeline
2024-10-25 15:58 - INFO - Training using device: cuda
2024-10-25 15:58 - INFO - Creating generators
2024-10-25 15:58 - INFO - The model has 651,257 trainable parameters
2024-10-25 15:58 - INFO - * Model:
2024-10-25 15:58 - INFO - * -----------
2024-10-25 15:58 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 15:58 - INFO - * -----------
2024-10-25 15:58 - INFO - Evaluating model based on: rocauc
2024-10-25 15:58 - INFO - Training..

2024-10-25 15:58 - INFO - ---------------------------------------------
2024-10-25 15:58 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 15:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97739
2024-10-25 15:58 - INFO - 	 Train Loss: 0.166
2024-10-25 15:58 - INFO - 	 Val. Loss: 0.087
2024-10-25 15:58 - INFO - 	 ROC-AUC: 0.977
2024-10-25 15:58 - INFO - 	 PR-AUC: 0.799
2024-10-25 15:58 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 15:58 - INFO - 	 Best Val. Loss: 0.087
2024-10-25 15:58 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 15:58 - INFO - 	 Best PR-AUC: 0.799
2024-10-25 15:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-25 15:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.766
2024-10-25 15:58 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 15:58 - INFO - ---------------------------------------------
2024-10-25 15:59 - INFO - ---------------------------------------------
2024-10-25 15:59 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 15:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98103
2024-10-25 15:59 - INFO - 	 Train Loss: 0.092
2024-10-25 15:59 - INFO - 	 Val. Loss: 0.078
2024-10-25 15:59 - INFO - 	 ROC-AUC: 0.981
2024-10-25 15:59 - INFO - 	 PR-AUC: 0.837
2024-10-25 15:59 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:59 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 15:59 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 15:59 - INFO - 	 Best PR-AUC: 0.837
2024-10-25 15:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 15:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-25 15:59 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 15:59 - INFO - ---------------------------------------------
2024-10-25 15:59 - INFO - ---------------------------------------------
2024-10-25 15:59 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 15:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98579
2024-10-25 15:59 - INFO - 	 Train Loss: 0.083
2024-10-25 15:59 - INFO - 	 Val. Loss: 0.066
2024-10-25 15:59 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:59 - INFO - 	 PR-AUC: 0.873
2024-10-25 15:59 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 15:59 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 15:59 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:59 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 15:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 15:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 15:59 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 15:59 - INFO - ---------------------------------------------
2024-10-25 16:00 - INFO - ---------------------------------------------
2024-10-25 16:00 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 16:00 - INFO - 	 Train Loss: 0.076
2024-10-25 16:00 - INFO - 	 Val. Loss: 0.072
2024-10-25 16:00 - INFO - 	 ROC-AUC: 0.983
2024-10-25 16:00 - INFO - 	 PR-AUC: 0.860
2024-10-25 16:00 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 16:00 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 16:00 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:00 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 16:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 16:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 16:00 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:00 - INFO - ---------------------------------------------
2024-10-25 16:00 - INFO - ---------------------------------------------
2024-10-25 16:00 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 16:00 - INFO - 	 Train Loss: 0.074
2024-10-25 16:00 - INFO - 	 Val. Loss: 0.067
2024-10-25 16:00 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:00 - INFO - 	 PR-AUC: 0.862
2024-10-25 16:00 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:00 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 16:00 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:00 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 16:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 16:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 16:00 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:00 - INFO - ---------------------------------------------
2024-10-25 16:01 - INFO - ---------------------------------------------
2024-10-25 16:01 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 16:01 - INFO - 	 Train Loss: 0.071
2024-10-25 16:01 - INFO - 	 Val. Loss: 0.067
2024-10-25 16:01 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:01 - INFO - 	 PR-AUC: 0.877
2024-10-25 16:01 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:01 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 16:01 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:01 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 16:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 16:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-25 16:01 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:01 - INFO - ---------------------------------------------
2024-10-25 16:03 - INFO - Fit the preprocessing pipeline
2024-10-25 16:03 - INFO - Training using device: cuda
2024-10-25 16:03 - INFO - Creating generators
2024-10-25 16:03 - INFO - The model has 651,257 trainable parameters
2024-10-25 16:03 - INFO - * Model:
2024-10-25 16:03 - INFO - * -----------
2024-10-25 16:03 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 16:03 - INFO - * -----------
2024-10-25 16:03 - INFO - Evaluating model based on: rocauc
2024-10-25 16:03 - INFO - Training..

2024-10-25 16:03 - INFO - ---------------------------------------------
2024-10-25 16:03 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 16:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97569
2024-10-25 16:03 - INFO - 	 Train Loss: 0.174
2024-10-25 16:03 - INFO - 	 Val. Loss: 0.094
2024-10-25 16:03 - INFO - 	 ROC-AUC: 0.976
2024-10-25 16:03 - INFO - 	 PR-AUC: 0.772
2024-10-25 16:03 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-25 16:03 - INFO - 	 Best Val. Loss: 0.094
2024-10-25 16:03 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 16:03 - INFO - 	 Best PR-AUC: 0.772
2024-10-25 16:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 16:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.758
2024-10-25 16:03 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-25 16:03 - INFO - ---------------------------------------------
2024-10-25 16:04 - INFO - ---------------------------------------------
2024-10-25 16:04 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 16:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98335
2024-10-25 16:04 - INFO - 	 Train Loss: 0.091
2024-10-25 16:04 - INFO - 	 Val. Loss: 0.072
2024-10-25 16:04 - INFO - 	 ROC-AUC: 0.983
2024-10-25 16:04 - INFO - 	 PR-AUC: 0.839
2024-10-25 16:04 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 16:04 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 16:04 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 16:04 - INFO - 	 Best PR-AUC: 0.839
2024-10-25 16:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 16:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 16:04 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 16:04 - INFO - ---------------------------------------------
2024-10-25 16:04 - INFO - ---------------------------------------------
2024-10-25 16:04 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 16:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98423
2024-10-25 16:04 - INFO - 	 Train Loss: 0.081
2024-10-25 16:04 - INFO - 	 Val. Loss: 0.070
2024-10-25 16:04 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:04 - INFO - 	 PR-AUC: 0.866
2024-10-25 16:04 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:04 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 16:04 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:04 - INFO - 	 Best PR-AUC: 0.866
2024-10-25 16:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 16:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-25 16:04 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:04 - INFO - ---------------------------------------------
2024-10-25 16:05 - INFO - ---------------------------------------------
2024-10-25 16:05 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 16:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98578
2024-10-25 16:05 - INFO - 	 Train Loss: 0.076
2024-10-25 16:05 - INFO - 	 Val. Loss: 0.070
2024-10-25 16:05 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:05 - INFO - 	 PR-AUC: 0.867
2024-10-25 16:05 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:05 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 16:05 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:05 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 16:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 16:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 16:05 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:05 - INFO - ---------------------------------------------
2024-10-25 16:06 - INFO - ---------------------------------------------
2024-10-25 16:06 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 16:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98579
2024-10-25 16:06 - INFO - 	 Train Loss: 0.073
2024-10-25 16:06 - INFO - 	 Val. Loss: 0.064
2024-10-25 16:06 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:06 - INFO - 	 PR-AUC: 0.865
2024-10-25 16:06 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 16:06 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 16:06 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:06 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 16:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 16:06 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:06 - INFO - ---------------------------------------------
2024-10-25 16:06 - INFO - ---------------------------------------------
2024-10-25 16:06 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 16:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98612
2024-10-25 16:06 - INFO - 	 Train Loss: 0.070
2024-10-25 16:06 - INFO - 	 Val. Loss: 0.064
2024-10-25 16:06 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:06 - INFO - 	 PR-AUC: 0.867
2024-10-25 16:06 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:06 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 16:06 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:06 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 16:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 16:06 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:06 - INFO - ---------------------------------------------
2024-10-25 16:07 - INFO - ---------------------------------------------
2024-10-25 16:07 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 16:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98686
2024-10-25 16:07 - INFO - 	 Train Loss: 0.069
2024-10-25 16:07 - INFO - 	 Val. Loss: 0.062
2024-10-25 16:07 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:07 - INFO - 	 PR-AUC: 0.875
2024-10-25 16:07 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:07 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 16:07 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:07 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 16:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 16:07 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:07 - INFO - ---------------------------------------------
2024-10-25 16:07 - INFO - ---------------------------------------------
2024-10-25 16:07 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 16:07 - INFO - 	 Train Loss: 0.067
2024-10-25 16:07 - INFO - 	 Val. Loss: 0.066
2024-10-25 16:07 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:07 - INFO - 	 PR-AUC: 0.874
2024-10-25 16:07 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:07 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 16:07 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:07 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 16:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 16:07 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:07 - INFO - ---------------------------------------------
2024-10-25 16:08 - INFO - ---------------------------------------------
2024-10-25 16:08 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 16:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98789
2024-10-25 16:08 - INFO - 	 Train Loss: 0.065
2024-10-25 16:08 - INFO - 	 Val. Loss: 0.059
2024-10-25 16:08 - INFO - 	 ROC-AUC: 0.988
2024-10-25 16:08 - INFO - 	 PR-AUC: 0.892
2024-10-25 16:08 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 16:08 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 16:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 16:08 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 16:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 16:08 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:08 - INFO - ---------------------------------------------
2024-10-25 16:08 - INFO - ---------------------------------------------
2024-10-25 16:08 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 16:08 - INFO - 	 Train Loss: 0.065
2024-10-25 16:08 - INFO - 	 Val. Loss: 0.060
2024-10-25 16:08 - INFO - 	 ROC-AUC: 0.988
2024-10-25 16:08 - INFO - 	 PR-AUC: 0.890
2024-10-25 16:08 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 16:08 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 16:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 16:08 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 16:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 16:08 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:08 - INFO - ---------------------------------------------
2024-10-25 16:10 - INFO - Fit the preprocessing pipeline
2024-10-25 16:10 - INFO - Training using device: cuda
2024-10-25 16:10 - INFO - Creating generators
2024-10-25 16:10 - INFO - The model has 651,257 trainable parameters
2024-10-25 16:10 - INFO - * Model:
2024-10-25 16:10 - INFO - * -----------
2024-10-25 16:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 16:10 - INFO - * -----------
2024-10-25 16:10 - INFO - Evaluating model based on: rocauc
2024-10-25 16:10 - INFO - Training..

2024-10-25 16:10 - INFO - ---------------------------------------------
2024-10-25 16:10 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 16:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97684
2024-10-25 16:10 - INFO - 	 Train Loss: 0.165
2024-10-25 16:10 - INFO - 	 Val. Loss: 0.087
2024-10-25 16:10 - INFO - 	 ROC-AUC: 0.977
2024-10-25 16:10 - INFO - 	 PR-AUC: 0.790
2024-10-25 16:10 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-25 16:10 - INFO - 	 Best Val. Loss: 0.087
2024-10-25 16:10 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 16:10 - INFO - 	 Best PR-AUC: 0.790
2024-10-25 16:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 16:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-25 16:10 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-25 16:10 - INFO - ---------------------------------------------
2024-10-25 16:11 - INFO - ---------------------------------------------
2024-10-25 16:11 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 16:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98277
2024-10-25 16:11 - INFO - 	 Train Loss: 0.089
2024-10-25 16:11 - INFO - 	 Val. Loss: 0.078
2024-10-25 16:11 - INFO - 	 ROC-AUC: 0.983
2024-10-25 16:11 - INFO - 	 PR-AUC: 0.841
2024-10-25 16:11 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:11 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 16:11 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 16:11 - INFO - 	 Best PR-AUC: 0.841
2024-10-25 16:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 16:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-25 16:11 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 16:11 - INFO - ---------------------------------------------
2024-10-25 16:11 - INFO - ---------------------------------------------
2024-10-25 16:11 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 16:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98428
2024-10-25 16:11 - INFO - 	 Train Loss: 0.080
2024-10-25 16:11 - INFO - 	 Val. Loss: 0.069
2024-10-25 16:11 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:11 - INFO - 	 PR-AUC: 0.862
2024-10-25 16:11 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:11 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 16:11 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:11 - INFO - 	 Best PR-AUC: 0.862
2024-10-25 16:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-25 16:11 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 16:11 - INFO - ---------------------------------------------
2024-10-25 16:12 - INFO - ---------------------------------------------
2024-10-25 16:12 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 16:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98514
2024-10-25 16:12 - INFO - 	 Train Loss: 0.077
2024-10-25 16:12 - INFO - 	 Val. Loss: 0.068
2024-10-25 16:12 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:12 - INFO - 	 PR-AUC: 0.855
2024-10-25 16:12 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 16:12 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 16:12 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 16:12 - INFO - 	 Best PR-AUC: 0.862
2024-10-25 16:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 16:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-25 16:12 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 16:12 - INFO - ---------------------------------------------
2024-10-25 16:12 - INFO - ---------------------------------------------
2024-10-25 16:12 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 16:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98622
2024-10-25 16:12 - INFO - 	 Train Loss: 0.073
2024-10-25 16:12 - INFO - 	 Val. Loss: 0.066
2024-10-25 16:12 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:12 - INFO - 	 PR-AUC: 0.873
2024-10-25 16:12 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 16:12 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 16:12 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:12 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 16:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-25 16:12 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:12 - INFO - ---------------------------------------------
2024-10-25 16:13 - INFO - ---------------------------------------------
2024-10-25 16:13 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 16:13 - INFO - 	 Train Loss: 0.071
2024-10-25 16:13 - INFO - 	 Val. Loss: 0.067
2024-10-25 16:13 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:13 - INFO - 	 PR-AUC: 0.861
2024-10-25 16:13 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:13 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 16:13 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:13 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 16:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-25 16:13 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:13 - INFO - ---------------------------------------------
2024-10-25 16:13 - INFO - ---------------------------------------------
2024-10-25 16:13 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 16:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98691
2024-10-25 16:13 - INFO - 	 Train Loss: 0.068
2024-10-25 16:13 - INFO - 	 Val. Loss: 0.062
2024-10-25 16:13 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:13 - INFO - 	 PR-AUC: 0.883
2024-10-25 16:13 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 16:13 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 16:13 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:13 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 16:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-25 16:13 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:13 - INFO - ---------------------------------------------
2024-10-25 16:14 - INFO - ---------------------------------------------
2024-10-25 16:14 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 16:14 - INFO - 	 Train Loss: 0.068
2024-10-25 16:14 - INFO - 	 Val. Loss: 0.064
2024-10-25 16:14 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:14 - INFO - 	 PR-AUC: 0.879
2024-10-25 16:14 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:14 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 16:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:14 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 16:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-25 16:14 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:14 - INFO - ---------------------------------------------
2024-10-25 16:14 - INFO - ---------------------------------------------
2024-10-25 16:14 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 16:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98733
2024-10-25 16:14 - INFO - 	 Train Loss: 0.066
2024-10-25 16:14 - INFO - 	 Val. Loss: 0.061
2024-10-25 16:14 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:14 - INFO - 	 PR-AUC: 0.885
2024-10-25 16:14 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 16:14 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 16:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:14 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 16:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 16:14 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:14 - INFO - ---------------------------------------------
2024-10-25 16:15 - INFO - ---------------------------------------------
2024-10-25 16:15 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 16:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98815
2024-10-25 16:15 - INFO - 	 Train Loss: 0.065
2024-10-25 16:15 - INFO - 	 Val. Loss: 0.060
2024-10-25 16:15 - INFO - 	 ROC-AUC: 0.988
2024-10-25 16:15 - INFO - 	 PR-AUC: 0.879
2024-10-25 16:15 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 16:15 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 16:15 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 16:15 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 16:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 16:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 16:15 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:15 - INFO - ---------------------------------------------
2024-10-25 16:16 - INFO - Fit the preprocessing pipeline
2024-10-25 16:16 - INFO - Training using device: cuda
2024-10-25 16:16 - INFO - Creating generators
2024-10-25 16:16 - INFO - The model has 651,257 trainable parameters
2024-10-25 16:16 - INFO - * Model:
2024-10-25 16:16 - INFO - * -----------
2024-10-25 16:16 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 16:16 - INFO - * -----------
2024-10-25 16:16 - INFO - Evaluating model based on: rocauc
2024-10-25 16:16 - INFO - Training..

2024-10-25 16:17 - INFO - ---------------------------------------------
2024-10-25 16:17 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 16:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97042
2024-10-25 16:17 - INFO - 	 Train Loss: 0.167
2024-10-25 16:17 - INFO - 	 Val. Loss: 0.106
2024-10-25 16:17 - INFO - 	 ROC-AUC: 0.970
2024-10-25 16:17 - INFO - 	 PR-AUC: 0.738
2024-10-25 16:17 - INFO - 	 Recall for 0.4 precision: 0.941
2024-10-25 16:17 - INFO - 	 Best Val. Loss: 0.106
2024-10-25 16:17 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 16:17 - INFO - 	 Best PR-AUC: 0.738
2024-10-25 16:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 16:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-10-25 16:17 - INFO - 	 Best Recall for 0.4 precision: 0.941
2024-10-25 16:17 - INFO - ---------------------------------------------
2024-10-25 16:18 - INFO - ---------------------------------------------
2024-10-25 16:18 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 16:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98158
2024-10-25 16:18 - INFO - 	 Train Loss: 0.091
2024-10-25 16:18 - INFO - 	 Val. Loss: 0.090
2024-10-25 16:18 - INFO - 	 ROC-AUC: 0.982
2024-10-25 16:18 - INFO - 	 PR-AUC: 0.826
2024-10-25 16:18 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 16:18 - INFO - 	 Best Val. Loss: 0.090
2024-10-25 16:18 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 16:18 - INFO - 	 Best PR-AUC: 0.826
2024-10-25 16:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 16:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-10-25 16:18 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 16:18 - INFO - ---------------------------------------------
2024-10-25 16:18 - INFO - ---------------------------------------------
2024-10-25 16:18 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 16:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98402
2024-10-25 16:18 - INFO - 	 Train Loss: 0.083
2024-10-25 16:18 - INFO - 	 Val. Loss: 0.070
2024-10-25 16:18 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:18 - INFO - 	 PR-AUC: 0.858
2024-10-25 16:18 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:18 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 16:18 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:18 - INFO - 	 Best PR-AUC: 0.858
2024-10-25 16:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 16:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-25 16:18 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 16:18 - INFO - ---------------------------------------------
2024-10-25 16:19 - INFO - ---------------------------------------------
2024-10-25 16:19 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 16:19 - INFO - 	 Train Loss: 0.076
2024-10-25 16:19 - INFO - 	 Val. Loss: 0.072
2024-10-25 16:19 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:19 - INFO - 	 PR-AUC: 0.869
2024-10-25 16:19 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 16:19 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 16:19 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:19 - INFO - 	 Best PR-AUC: 0.869
2024-10-25 16:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 16:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 16:19 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 16:19 - INFO - ---------------------------------------------
2024-10-25 16:19 - INFO - ---------------------------------------------
2024-10-25 16:19 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 16:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98563
2024-10-25 16:19 - INFO - 	 Train Loss: 0.073
2024-10-25 16:19 - INFO - 	 Val. Loss: 0.071
2024-10-25 16:19 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:19 - INFO - 	 PR-AUC: 0.870
2024-10-25 16:19 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:19 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 16:19 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:19 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 16:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 16:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 16:19 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 16:19 - INFO - ---------------------------------------------
2024-10-25 16:20 - INFO - ---------------------------------------------
2024-10-25 16:20 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 16:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98657
2024-10-25 16:20 - INFO - 	 Train Loss: 0.071
2024-10-25 16:20 - INFO - 	 Val. Loss: 0.067
2024-10-25 16:20 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:20 - INFO - 	 PR-AUC: 0.878
2024-10-25 16:20 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:20 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 16:20 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:20 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 16:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 16:20 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:20 - INFO - ---------------------------------------------
2024-10-25 16:20 - INFO - ---------------------------------------------
2024-10-25 16:20 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 16:20 - INFO - 	 Train Loss: 0.069
2024-10-25 16:20 - INFO - 	 Val. Loss: 0.063
2024-10-25 16:20 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:20 - INFO - 	 PR-AUC: 0.876
2024-10-25 16:20 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:20 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 16:20 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:20 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 16:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 16:20 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:20 - INFO - ---------------------------------------------
2024-10-25 16:21 - INFO - ---------------------------------------------
2024-10-25 16:21 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 16:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98687
2024-10-25 16:21 - INFO - 	 Train Loss: 0.067
2024-10-25 16:21 - INFO - 	 Val. Loss: 0.062
2024-10-25 16:21 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:21 - INFO - 	 PR-AUC: 0.879
2024-10-25 16:21 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:21 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 16:21 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:21 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 16:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 16:21 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:21 - INFO - ---------------------------------------------
2024-10-25 16:21 - INFO - ---------------------------------------------
2024-10-25 16:21 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 16:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98715
2024-10-25 16:21 - INFO - 	 Train Loss: 0.066
2024-10-25 16:21 - INFO - 	 Val. Loss: 0.064
2024-10-25 16:21 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:21 - INFO - 	 PR-AUC: 0.885
2024-10-25 16:21 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:21 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 16:21 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:21 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 16:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 16:21 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:21 - INFO - ---------------------------------------------
2024-10-25 16:22 - INFO - ---------------------------------------------
2024-10-25 16:22 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 16:22 - INFO - 	 Train Loss: 0.065
2024-10-25 16:22 - INFO - 	 Val. Loss: 0.064
2024-10-25 16:22 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:22 - INFO - 	 PR-AUC: 0.878
2024-10-25 16:22 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 16:22 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 16:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:22 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 16:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 16:22 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 16:22 - INFO - ---------------------------------------------
2024-10-25 16:23 - INFO - Fit the preprocessing pipeline
2024-10-25 16:23 - INFO - Training using device: cuda
2024-10-25 16:23 - INFO - Creating generators
2024-10-25 16:23 - INFO - The model has 651,257 trainable parameters
2024-10-25 16:23 - INFO - * Model:
2024-10-25 16:23 - INFO - * -----------
2024-10-25 16:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 16:23 - INFO - * -----------
2024-10-25 16:23 - INFO - Evaluating model based on: rocauc
2024-10-25 16:23 - INFO - Training..

2024-10-25 16:24 - INFO - ---------------------------------------------
2024-10-25 16:24 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 16:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96923
2024-10-25 16:24 - INFO - 	 Train Loss: 0.178
2024-10-25 16:24 - INFO - 	 Val. Loss: 0.102
2024-10-25 16:24 - INFO - 	 ROC-AUC: 0.969
2024-10-25 16:24 - INFO - 	 PR-AUC: 0.735
2024-10-25 16:24 - INFO - 	 Recall for 0.4 precision: 0.935
2024-10-25 16:24 - INFO - 	 Best Val. Loss: 0.102
2024-10-25 16:24 - INFO - 	 Best ROC-AUC: 0.969
2024-10-25 16:24 - INFO - 	 Best PR-AUC: 0.735
2024-10-25 16:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 16:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-25 16:24 - INFO - 	 Best Recall for 0.4 precision: 0.935
2024-10-25 16:24 - INFO - ---------------------------------------------
2024-10-25 16:24 - INFO - ---------------------------------------------
2024-10-25 16:24 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 16:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98244
2024-10-25 16:24 - INFO - 	 Train Loss: 0.095
2024-10-25 16:24 - INFO - 	 Val. Loss: 0.075
2024-10-25 16:24 - INFO - 	 ROC-AUC: 0.982
2024-10-25 16:24 - INFO - 	 PR-AUC: 0.840
2024-10-25 16:24 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 16:24 - INFO - 	 Best Val. Loss: 0.075
2024-10-25 16:24 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 16:24 - INFO - 	 Best PR-AUC: 0.840
2024-10-25 16:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 16:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-10-25 16:24 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 16:24 - INFO - ---------------------------------------------
2024-10-25 16:25 - INFO - ---------------------------------------------
2024-10-25 16:25 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 16:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98493
2024-10-25 16:25 - INFO - 	 Train Loss: 0.083
2024-10-25 16:25 - INFO - 	 Val. Loss: 0.069
2024-10-25 16:25 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:25 - INFO - 	 PR-AUC: 0.855
2024-10-25 16:25 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 16:25 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 16:25 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 16:25 - INFO - 	 Best PR-AUC: 0.855
2024-10-25 16:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 16:25 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:25 - INFO - ---------------------------------------------
2024-10-25 16:26 - INFO - ---------------------------------------------
2024-10-25 16:26 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 16:26 - INFO - 	 Train Loss: 0.078
2024-10-25 16:26 - INFO - 	 Val. Loss: 0.069
2024-10-25 16:26 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:26 - INFO - 	 PR-AUC: 0.862
2024-10-25 16:26 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:26 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 16:26 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 16:26 - INFO - 	 Best PR-AUC: 0.862
2024-10-25 16:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 16:26 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:26 - INFO - ---------------------------------------------
2024-10-25 16:26 - INFO - ---------------------------------------------
2024-10-25 16:26 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 16:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98603
2024-10-25 16:26 - INFO - 	 Train Loss: 0.075
2024-10-25 16:26 - INFO - 	 Val. Loss: 0.066
2024-10-25 16:26 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:26 - INFO - 	 PR-AUC: 0.861
2024-10-25 16:26 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:26 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 16:26 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:26 - INFO - 	 Best PR-AUC: 0.862
2024-10-25 16:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 16:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 16:26 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:26 - INFO - ---------------------------------------------
2024-10-25 16:27 - INFO - ---------------------------------------------
2024-10-25 16:27 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 16:27 - INFO - 	 Train Loss: 0.072
2024-10-25 16:27 - INFO - 	 Val. Loss: 0.068
2024-10-25 16:27 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:27 - INFO - 	 PR-AUC: 0.860
2024-10-25 16:27 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:27 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 16:27 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:27 - INFO - 	 Best PR-AUC: 0.862
2024-10-25 16:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 16:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 16:27 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:27 - INFO - ---------------------------------------------
2024-10-25 16:27 - INFO - ---------------------------------------------
2024-10-25 16:27 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 16:27 - INFO - 	 Train Loss: 0.070
2024-10-25 16:27 - INFO - 	 Val. Loss: 0.068
2024-10-25 16:27 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:27 - INFO - 	 PR-AUC: 0.861
2024-10-25 16:27 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:27 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 16:27 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:27 - INFO - 	 Best PR-AUC: 0.862
2024-10-25 16:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 16:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 16:27 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:27 - INFO - ---------------------------------------------
2024-10-25 16:28 - INFO - ---------------------------------------------
2024-10-25 16:28 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 16:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9864
2024-10-25 16:28 - INFO - 	 Train Loss: 0.068
2024-10-25 16:28 - INFO - 	 Val. Loss: 0.064
2024-10-25 16:28 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:28 - INFO - 	 PR-AUC: 0.878
2024-10-25 16:28 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 16:28 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 16:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:28 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 16:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 16:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:28 - INFO - ---------------------------------------------
2024-10-25 16:28 - INFO - ---------------------------------------------
2024-10-25 16:28 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 16:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9866
2024-10-25 16:28 - INFO - 	 Train Loss: 0.067
2024-10-25 16:28 - INFO - 	 Val. Loss: 0.064
2024-10-25 16:28 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:28 - INFO - 	 PR-AUC: 0.877
2024-10-25 16:28 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:28 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 16:28 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:28 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 16:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 16:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:28 - INFO - ---------------------------------------------
2024-10-25 16:29 - INFO - ---------------------------------------------
2024-10-25 16:29 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 16:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98706
2024-10-25 16:29 - INFO - 	 Train Loss: 0.066
2024-10-25 16:29 - INFO - 	 Val. Loss: 0.062
2024-10-25 16:29 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:29 - INFO - 	 PR-AUC: 0.879
2024-10-25 16:29 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 16:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 16:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:29 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 16:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 16:29 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 16:29 - INFO - ---------------------------------------------
2024-10-25 16:30 - INFO - Fit the preprocessing pipeline
2024-10-25 16:30 - INFO - Training using device: cuda
2024-10-25 16:30 - INFO - Creating generators
2024-10-25 16:30 - INFO - The model has 651,257 trainable parameters
2024-10-25 16:30 - INFO - * Model:
2024-10-25 16:30 - INFO - * -----------
2024-10-25 16:30 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 16:30 - INFO - * -----------
2024-10-25 16:30 - INFO - Evaluating model based on: rocauc
2024-10-25 16:30 - INFO - Training..

2024-10-25 16:31 - INFO - ---------------------------------------------
2024-10-25 16:31 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 16:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97003
2024-10-25 16:31 - INFO - 	 Train Loss: 0.177
2024-10-25 16:31 - INFO - 	 Val. Loss: 0.105
2024-10-25 16:31 - INFO - 	 ROC-AUC: 0.970
2024-10-25 16:31 - INFO - 	 PR-AUC: 0.725
2024-10-25 16:31 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-25 16:31 - INFO - 	 Best Val. Loss: 0.105
2024-10-25 16:31 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 16:31 - INFO - 	 Best PR-AUC: 0.725
2024-10-25 16:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-25 16:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.723
2024-10-25 16:31 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-25 16:31 - INFO - ---------------------------------------------
2024-10-25 16:31 - INFO - ---------------------------------------------
2024-10-25 16:31 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 16:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98164
2024-10-25 16:31 - INFO - 	 Train Loss: 0.090
2024-10-25 16:31 - INFO - 	 Val. Loss: 0.080
2024-10-25 16:31 - INFO - 	 ROC-AUC: 0.982
2024-10-25 16:31 - INFO - 	 PR-AUC: 0.825
2024-10-25 16:31 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 16:31 - INFO - 	 Best Val. Loss: 0.080
2024-10-25 16:31 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 16:31 - INFO - 	 Best PR-AUC: 0.825
2024-10-25 16:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 16:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-25 16:31 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 16:31 - INFO - ---------------------------------------------
2024-10-25 16:32 - INFO - ---------------------------------------------
2024-10-25 16:32 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 16:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98357
2024-10-25 16:32 - INFO - 	 Train Loss: 0.079
2024-10-25 16:32 - INFO - 	 Val. Loss: 0.081
2024-10-25 16:32 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:32 - INFO - 	 PR-AUC: 0.845
2024-10-25 16:32 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:32 - INFO - 	 Best Val. Loss: 0.080
2024-10-25 16:32 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:32 - INFO - 	 Best PR-AUC: 0.845
2024-10-25 16:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 16:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-25 16:32 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 16:32 - INFO - ---------------------------------------------
2024-10-25 16:32 - INFO - ---------------------------------------------
2024-10-25 16:32 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 16:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98496
2024-10-25 16:32 - INFO - 	 Train Loss: 0.076
2024-10-25 16:32 - INFO - 	 Val. Loss: 0.070
2024-10-25 16:32 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:32 - INFO - 	 PR-AUC: 0.855
2024-10-25 16:32 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 16:32 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 16:32 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 16:32 - INFO - 	 Best PR-AUC: 0.855
2024-10-25 16:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 16:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-25 16:32 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:32 - INFO - ---------------------------------------------
2024-10-25 16:33 - INFO - ---------------------------------------------
2024-10-25 16:33 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 16:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98557
2024-10-25 16:33 - INFO - 	 Train Loss: 0.073
2024-10-25 16:33 - INFO - 	 Val. Loss: 0.070
2024-10-25 16:33 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:33 - INFO - 	 PR-AUC: 0.863
2024-10-25 16:33 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:33 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 16:33 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:33 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 16:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 16:33 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:33 - INFO - ---------------------------------------------
2024-10-25 16:33 - INFO - ---------------------------------------------
2024-10-25 16:33 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 16:33 - INFO - 	 Train Loss: 0.071
2024-10-25 16:33 - INFO - 	 Val. Loss: 0.071
2024-10-25 16:33 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:33 - INFO - 	 PR-AUC: 0.851
2024-10-25 16:33 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:33 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 16:33 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:33 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 16:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 16:33 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:33 - INFO - ---------------------------------------------
2024-10-25 16:34 - INFO - ---------------------------------------------
2024-10-25 16:34 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 16:34 - INFO - 	 Train Loss: 0.069
2024-10-25 16:34 - INFO - 	 Val. Loss: 0.068
2024-10-25 16:34 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:34 - INFO - 	 PR-AUC: 0.865
2024-10-25 16:34 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 16:34 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 16:34 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:34 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 16:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 16:34 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:34 - INFO - ---------------------------------------------
2024-10-25 16:34 - INFO - ---------------------------------------------
2024-10-25 16:34 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 16:34 - INFO - 	 Train Loss: 0.067
2024-10-25 16:34 - INFO - 	 Val. Loss: 0.072
2024-10-25 16:34 - INFO - 	 ROC-AUC: 0.985
2024-10-25 16:34 - INFO - 	 PR-AUC: 0.857
2024-10-25 16:34 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 16:34 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 16:34 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:34 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 16:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 16:34 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 16:34 - INFO - ---------------------------------------------
2024-10-25 16:36 - INFO - Fit the preprocessing pipeline
2024-10-25 16:36 - INFO - Training using device: cuda
2024-10-25 16:36 - INFO - Creating generators
2024-10-25 16:36 - INFO - The model has 651,257 trainable parameters
2024-10-25 16:36 - INFO - * Model:
2024-10-25 16:36 - INFO - * -----------
2024-10-25 16:36 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 16:36 - INFO - * -----------
2024-10-25 16:36 - INFO - Evaluating model based on: rocauc
2024-10-25 16:36 - INFO - Training..

2024-10-25 16:37 - INFO - ---------------------------------------------
2024-10-25 16:37 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 16:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9679
2024-10-25 16:37 - INFO - 	 Train Loss: 0.181
2024-10-25 16:37 - INFO - 	 Val. Loss: 0.100
2024-10-25 16:37 - INFO - 	 ROC-AUC: 0.968
2024-10-25 16:37 - INFO - 	 PR-AUC: 0.714
2024-10-25 16:37 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-25 16:37 - INFO - 	 Best Val. Loss: 0.100
2024-10-25 16:37 - INFO - 	 Best ROC-AUC: 0.968
2024-10-25 16:37 - INFO - 	 Best PR-AUC: 0.714
2024-10-25 16:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-25 16:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.706
2024-10-25 16:37 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-25 16:37 - INFO - ---------------------------------------------
2024-10-25 16:38 - INFO - ---------------------------------------------
2024-10-25 16:38 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 16:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98309
2024-10-25 16:38 - INFO - 	 Train Loss: 0.093
2024-10-25 16:38 - INFO - 	 Val. Loss: 0.073
2024-10-25 16:38 - INFO - 	 ROC-AUC: 0.983
2024-10-25 16:38 - INFO - 	 PR-AUC: 0.841
2024-10-25 16:38 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 16:38 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 16:38 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 16:38 - INFO - 	 Best PR-AUC: 0.841
2024-10-25 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-25 16:38 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 16:38 - INFO - ---------------------------------------------
2024-10-25 16:38 - INFO - ---------------------------------------------
2024-10-25 16:38 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 16:38 - INFO - 	 Train Loss: 0.082
2024-10-25 16:38 - INFO - 	 Val. Loss: 0.073
2024-10-25 16:38 - INFO - 	 ROC-AUC: 0.983
2024-10-25 16:38 - INFO - 	 PR-AUC: 0.832
2024-10-25 16:38 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:38 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 16:38 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 16:38 - INFO - 	 Best PR-AUC: 0.841
2024-10-25 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-25 16:38 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 16:38 - INFO - ---------------------------------------------
2024-10-25 16:39 - INFO - ---------------------------------------------
2024-10-25 16:39 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 16:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98437
2024-10-25 16:39 - INFO - 	 Train Loss: 0.076
2024-10-25 16:39 - INFO - 	 Val. Loss: 0.072
2024-10-25 16:39 - INFO - 	 ROC-AUC: 0.984
2024-10-25 16:39 - INFO - 	 PR-AUC: 0.848
2024-10-25 16:39 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:39 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 16:39 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 16:39 - INFO - 	 Best PR-AUC: 0.848
2024-10-25 16:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 16:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 16:39 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 16:39 - INFO - ---------------------------------------------
2024-10-25 16:39 - INFO - ---------------------------------------------
2024-10-25 16:39 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 16:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98594
2024-10-25 16:39 - INFO - 	 Train Loss: 0.074
2024-10-25 16:39 - INFO - 	 Val. Loss: 0.065
2024-10-25 16:39 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:39 - INFO - 	 PR-AUC: 0.867
2024-10-25 16:39 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 16:39 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 16:39 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 16:39 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 16:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-25 16:39 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 16:39 - INFO - ---------------------------------------------
2024-10-25 16:40 - INFO - ---------------------------------------------
2024-10-25 16:40 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 16:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98694
2024-10-25 16:40 - INFO - 	 Train Loss: 0.071
2024-10-25 16:40 - INFO - 	 Val. Loss: 0.062
2024-10-25 16:40 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:40 - INFO - 	 PR-AUC: 0.877
2024-10-25 16:40 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:40 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 16:40 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:40 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 16:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 16:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 16:40 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 16:40 - INFO - ---------------------------------------------
2024-10-25 16:40 - INFO - ---------------------------------------------
2024-10-25 16:40 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 16:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98709
2024-10-25 16:40 - INFO - 	 Train Loss: 0.068
2024-10-25 16:40 - INFO - 	 Val. Loss: 0.061
2024-10-25 16:40 - INFO - 	 ROC-AUC: 0.987
2024-10-25 16:40 - INFO - 	 PR-AUC: 0.882
2024-10-25 16:40 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 16:40 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 16:40 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:40 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 16:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 16:40 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 16:40 - INFO - ---------------------------------------------
2024-10-25 16:41 - INFO - ---------------------------------------------
2024-10-25 16:41 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 16:41 - INFO - 	 Train Loss: 0.067
2024-10-25 16:41 - INFO - 	 Val. Loss: 0.062
2024-10-25 16:41 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:41 - INFO - 	 PR-AUC: 0.873
2024-10-25 16:41 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 16:41 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 16:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:41 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 16:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 16:41 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 16:41 - INFO - ---------------------------------------------
2024-10-25 16:41 - INFO - ---------------------------------------------
2024-10-25 16:41 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 16:41 - INFO - 	 Train Loss: 0.065
2024-10-25 16:41 - INFO - 	 Val. Loss: 0.064
2024-10-25 16:41 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:41 - INFO - 	 PR-AUC: 0.871
2024-10-25 16:41 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 16:41 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 16:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:41 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 16:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 16:41 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 16:41 - INFO - ---------------------------------------------
2024-10-25 16:42 - INFO - ---------------------------------------------
2024-10-25 16:42 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 16:42 - INFO - 	 Train Loss: 0.065
2024-10-25 16:42 - INFO - 	 Val. Loss: 0.062
2024-10-25 16:42 - INFO - 	 ROC-AUC: 0.986
2024-10-25 16:42 - INFO - 	 PR-AUC: 0.878
2024-10-25 16:42 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 16:42 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 16:42 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 16:42 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 16:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 16:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 16:42 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 16:42 - INFO - ---------------------------------------------
