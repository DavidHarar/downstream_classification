2024-11-04 21:34 - INFO - Fit the preprocessing pipeline
2024-11-04 21:34 - INFO - Training using device: mps
2024-11-04 21:34 - INFO - Creating generators
2024-11-04 21:34 - INFO - The model has 651,257 trainable parameters
2024-11-04 21:34 - INFO - * Model:
2024-11-04 21:34 - INFO - * -----------
2024-11-04 21:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 21:34 - INFO - * -----------
2024-11-04 21:34 - INFO - Evaluating model based on: aucpr
2024-11-04 21:34 - INFO - Training..

2024-11-04 21:36 - INFO - ---------------------------------------------
2024-11-04 21:36 - INFO - Epoch: 01 | Time: 2m 10s
2024-11-04 21:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06921
2024-11-04 21:36 - INFO - 	 Train Loss: 0.259
2024-11-04 21:36 - INFO - 	 Val. Loss: 0.296
2024-11-04 21:36 - INFO - 	 ROC-AUC: 0.577
2024-11-04 21:36 - INFO - 	 PR-AUC: 0.069
2024-11-04 21:36 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 21:36 - INFO - 	 Best Val. Loss: 0.296
2024-11-04 21:36 - INFO - 	 Best ROC-AUC: 0.577
2024-11-04 21:36 - INFO - 	 Best PR-AUC: 0.069
2024-11-04 21:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.581
2024-11-04 21:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.067
2024-11-04 21:36 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-04 21:36 - INFO - ---------------------------------------------
2024-11-04 21:38 - INFO - ---------------------------------------------
2024-11-04 21:38 - INFO - Epoch: 02 | Time: 2m 10s
2024-11-04 21:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09595
2024-11-04 21:38 - INFO - 	 Train Loss: 0.206
2024-11-04 21:38 - INFO - 	 Val. Loss: 0.283
2024-11-04 21:38 - INFO - 	 ROC-AUC: 0.657
2024-11-04 21:38 - INFO - 	 PR-AUC: 0.096
2024-11-04 21:38 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 21:38 - INFO - 	 Best Val. Loss: 0.283
2024-11-04 21:38 - INFO - 	 Best ROC-AUC: 0.657
2024-11-04 21:38 - INFO - 	 Best PR-AUC: 0.096
2024-11-04 21:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.647
2024-11-04 21:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.104
2024-11-04 21:38 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-04 21:38 - INFO - ---------------------------------------------
2024-11-04 21:41 - INFO - ---------------------------------------------
2024-11-04 21:41 - INFO - Epoch: 03 | Time: 2m 10s
2024-11-04 21:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1602
2024-11-04 21:41 - INFO - 	 Train Loss: 0.190
2024-11-04 21:41 - INFO - 	 Val. Loss: 0.216
2024-11-04 21:41 - INFO - 	 ROC-AUC: 0.766
2024-11-04 21:41 - INFO - 	 PR-AUC: 0.160
2024-11-04 21:41 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-04 21:41 - INFO - 	 Best Val. Loss: 0.216
2024-11-04 21:41 - INFO - 	 Best ROC-AUC: 0.766
2024-11-04 21:41 - INFO - 	 Best PR-AUC: 0.160
2024-11-04 21:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.734
2024-11-04 21:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-04 21:41 - INFO - 	 Best Recall for 0.4 precision: 0.026
2024-11-04 21:41 - INFO - ---------------------------------------------
2024-11-04 21:43 - INFO - ---------------------------------------------
2024-11-04 21:43 - INFO - Epoch: 04 | Time: 2m 9s
2024-11-04 21:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24512
2024-11-04 21:43 - INFO - 	 Train Loss: 0.176
2024-11-04 21:43 - INFO - 	 Val. Loss: 0.199
2024-11-04 21:43 - INFO - 	 ROC-AUC: 0.787
2024-11-04 21:43 - INFO - 	 PR-AUC: 0.245
2024-11-04 21:43 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-04 21:43 - INFO - 	 Best Val. Loss: 0.199
2024-11-04 21:43 - INFO - 	 Best ROC-AUC: 0.787
2024-11-04 21:43 - INFO - 	 Best PR-AUC: 0.245
2024-11-04 21:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-04 21:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 21:43 - INFO - 	 Best Recall for 0.4 precision: 0.163
2024-11-04 21:43 - INFO - ---------------------------------------------
2024-11-04 21:45 - INFO - ---------------------------------------------
2024-11-04 21:45 - INFO - Epoch: 05 | Time: 2m 10s
2024-11-04 21:45 - INFO - 	 Train Loss: 0.171
2024-11-04 21:45 - INFO - 	 Val. Loss: 0.186
2024-11-04 21:45 - INFO - 	 ROC-AUC: 0.810
2024-11-04 21:45 - INFO - 	 PR-AUC: 0.242
2024-11-04 21:45 - INFO - 	 Recall for 0.4 precision: 0.172
2024-11-04 21:45 - INFO - 	 Best Val. Loss: 0.186
2024-11-04 21:45 - INFO - 	 Best ROC-AUC: 0.810
2024-11-04 21:45 - INFO - 	 Best PR-AUC: 0.245
2024-11-04 21:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 21:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 21:45 - INFO - 	 Best Recall for 0.4 precision: 0.172
2024-11-04 21:45 - INFO - ---------------------------------------------
2024-11-04 21:47 - INFO - ---------------------------------------------
2024-11-04 21:47 - INFO - Epoch: 06 | Time: 2m 10s
2024-11-04 21:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33658
2024-11-04 21:47 - INFO - 	 Train Loss: 0.155
2024-11-04 21:47 - INFO - 	 Val. Loss: 0.170
2024-11-04 21:47 - INFO - 	 ROC-AUC: 0.902
2024-11-04 21:47 - INFO - 	 PR-AUC: 0.337
2024-11-04 21:47 - INFO - 	 Recall for 0.4 precision: 0.302
2024-11-04 21:47 - INFO - 	 Best Val. Loss: 0.170
2024-11-04 21:47 - INFO - 	 Best ROC-AUC: 0.902
2024-11-04 21:47 - INFO - 	 Best PR-AUC: 0.337
2024-11-04 21:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.874
2024-11-04 21:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.227
2024-11-04 21:47 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-04 21:47 - INFO - ---------------------------------------------
2024-11-04 21:49 - INFO - ---------------------------------------------
2024-11-04 21:49 - INFO - Epoch: 07 | Time: 2m 16s
2024-11-04 21:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40174
2024-11-04 21:49 - INFO - 	 Train Loss: 0.135
2024-11-04 21:49 - INFO - 	 Val. Loss: 0.137
2024-11-04 21:49 - INFO - 	 ROC-AUC: 0.948
2024-11-04 21:49 - INFO - 	 PR-AUC: 0.402
2024-11-04 21:49 - INFO - 	 Recall for 0.4 precision: 0.592
2024-11-04 21:49 - INFO - 	 Best Val. Loss: 0.137
2024-11-04 21:49 - INFO - 	 Best ROC-AUC: 0.948
2024-11-04 21:49 - INFO - 	 Best PR-AUC: 0.402
2024-11-04 21:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-04 21:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.296
2024-11-04 21:49 - INFO - 	 Best Recall for 0.4 precision: 0.592
2024-11-04 21:49 - INFO - ---------------------------------------------
2024-11-04 21:52 - INFO - ---------------------------------------------
2024-11-04 21:52 - INFO - Epoch: 08 | Time: 2m 12s
2024-11-04 21:52 - INFO - 	 Train Loss: 0.124
2024-11-04 21:52 - INFO - 	 Val. Loss: 0.150
2024-11-04 21:52 - INFO - 	 ROC-AUC: 0.903
2024-11-04 21:52 - INFO - 	 PR-AUC: 0.326
2024-11-04 21:52 - INFO - 	 Recall for 0.4 precision: 0.442
2024-11-04 21:52 - INFO - 	 Best Val. Loss: 0.137
2024-11-04 21:52 - INFO - 	 Best ROC-AUC: 0.948
2024-11-04 21:52 - INFO - 	 Best PR-AUC: 0.402
2024-11-04 21:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-04 21:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.296
2024-11-04 21:52 - INFO - 	 Best Recall for 0.4 precision: 0.592
2024-11-04 21:52 - INFO - ---------------------------------------------
2024-11-04 21:54 - INFO - ---------------------------------------------
2024-11-04 21:54 - INFO - Epoch: 09 | Time: 2m 13s
2024-11-04 21:54 - INFO - 	 Train Loss: 0.119
2024-11-04 21:54 - INFO - 	 Val. Loss: 0.158
2024-11-04 21:54 - INFO - 	 ROC-AUC: 0.905
2024-11-04 21:54 - INFO - 	 PR-AUC: 0.312
2024-11-04 21:54 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-04 21:54 - INFO - 	 Best Val. Loss: 0.137
2024-11-04 21:54 - INFO - 	 Best ROC-AUC: 0.948
2024-11-04 21:54 - INFO - 	 Best PR-AUC: 0.402
2024-11-04 21:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-04 21:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.296
2024-11-04 21:54 - INFO - 	 Best Recall for 0.4 precision: 0.592
2024-11-04 21:54 - INFO - ---------------------------------------------
2024-11-04 21:56 - INFO - ---------------------------------------------
2024-11-04 21:56 - INFO - Epoch: 10 | Time: 2m 13s
2024-11-04 21:56 - INFO - 	 Train Loss: 0.118
2024-11-04 21:56 - INFO - 	 Val. Loss: 0.160
2024-11-04 21:56 - INFO - 	 ROC-AUC: 0.913
2024-11-04 21:56 - INFO - 	 PR-AUC: 0.380
2024-11-04 21:56 - INFO - 	 Recall for 0.4 precision: 0.467
2024-11-04 21:56 - INFO - 	 Best Val. Loss: 0.137
2024-11-04 21:56 - INFO - 	 Best ROC-AUC: 0.948
2024-11-04 21:56 - INFO - 	 Best PR-AUC: 0.402
2024-11-04 21:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-04 21:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.296
2024-11-04 21:56 - INFO - 	 Best Recall for 0.4 precision: 0.592
2024-11-04 21:56 - INFO - ---------------------------------------------
2024-11-04 21:59 - INFO - Fit the preprocessing pipeline
2024-11-04 21:59 - INFO - Training using device: mps
2024-11-04 21:59 - INFO - Creating generators
2024-11-04 21:59 - INFO - The model has 651,257 trainable parameters
2024-11-04 21:59 - INFO - * Model:
2024-11-04 21:59 - INFO - * -----------
2024-11-04 21:59 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 21:59 - INFO - * -----------
2024-11-04 21:59 - INFO - Evaluating model based on: aucpr
2024-11-04 21:59 - INFO - Training..

2024-11-04 22:01 - INFO - ---------------------------------------------
2024-11-04 22:01 - INFO - Epoch: 01 | Time: 2m 5s
2024-11-04 22:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09055
2024-11-04 22:01 - INFO - 	 Train Loss: 0.251
2024-11-04 22:01 - INFO - 	 Val. Loss: 0.286
2024-11-04 22:01 - INFO - 	 ROC-AUC: 0.628
2024-11-04 22:01 - INFO - 	 PR-AUC: 0.091
2024-11-04 22:01 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 22:01 - INFO - 	 Best Val. Loss: 0.286
2024-11-04 22:01 - INFO - 	 Best ROC-AUC: 0.628
2024-11-04 22:01 - INFO - 	 Best PR-AUC: 0.091
2024-11-04 22:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.631
2024-11-04 22:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.085
2024-11-04 22:01 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-04 22:01 - INFO - ---------------------------------------------
2024-11-04 22:03 - INFO - ---------------------------------------------
2024-11-04 22:03 - INFO - Epoch: 02 | Time: 2m 14s
2024-11-04 22:03 - INFO - 	 Train Loss: 0.207
2024-11-04 22:03 - INFO - 	 Val. Loss: 0.253
2024-11-04 22:03 - INFO - 	 ROC-AUC: 0.623
2024-11-04 22:03 - INFO - 	 PR-AUC: 0.075
2024-11-04 22:03 - INFO - 	 Recall for 0.4 precision: 0.050
2024-11-04 22:03 - INFO - 	 Best Val. Loss: 0.253
2024-11-04 22:03 - INFO - 	 Best ROC-AUC: 0.628
2024-11-04 22:03 - INFO - 	 Best PR-AUC: 0.091
2024-11-04 22:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.631
2024-11-04 22:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.085
2024-11-04 22:03 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-04 22:03 - INFO - ---------------------------------------------
2024-11-04 22:05 - INFO - ---------------------------------------------
2024-11-04 22:05 - INFO - Epoch: 03 | Time: 2m 11s
2024-11-04 22:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11655
2024-11-04 22:05 - INFO - 	 Train Loss: 0.189
2024-11-04 22:05 - INFO - 	 Val. Loss: 0.236
2024-11-04 22:05 - INFO - 	 ROC-AUC: 0.702
2024-11-04 22:05 - INFO - 	 PR-AUC: 0.117
2024-11-04 22:05 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 22:05 - INFO - 	 Best Val. Loss: 0.236
2024-11-04 22:05 - INFO - 	 Best ROC-AUC: 0.702
2024-11-04 22:05 - INFO - 	 Best PR-AUC: 0.117
2024-11-04 22:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.689
2024-11-04 22:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.104
2024-11-04 22:05 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-04 22:05 - INFO - ---------------------------------------------
2024-11-04 22:08 - INFO - ---------------------------------------------
2024-11-04 22:08 - INFO - Epoch: 04 | Time: 2m 13s
2024-11-04 22:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13784
2024-11-04 22:08 - INFO - 	 Train Loss: 0.178
2024-11-04 22:08 - INFO - 	 Val. Loss: 0.221
2024-11-04 22:08 - INFO - 	 ROC-AUC: 0.683
2024-11-04 22:08 - INFO - 	 PR-AUC: 0.138
2024-11-04 22:08 - INFO - 	 Recall for 0.4 precision: 0.052
2024-11-04 22:08 - INFO - 	 Best Val. Loss: 0.221
2024-11-04 22:08 - INFO - 	 Best ROC-AUC: 0.702
2024-11-04 22:08 - INFO - 	 Best PR-AUC: 0.138
2024-11-04 22:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.689
2024-11-04 22:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.102
2024-11-04 22:08 - INFO - 	 Best Recall for 0.4 precision: 0.052
2024-11-04 22:08 - INFO - ---------------------------------------------
2024-11-04 22:10 - INFO - ---------------------------------------------
2024-11-04 22:10 - INFO - Epoch: 05 | Time: 2m 14s
2024-11-04 22:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26325
2024-11-04 22:10 - INFO - 	 Train Loss: 0.171
2024-11-04 22:10 - INFO - 	 Val. Loss: 0.198
2024-11-04 22:10 - INFO - 	 ROC-AUC: 0.819
2024-11-04 22:10 - INFO - 	 PR-AUC: 0.263
2024-11-04 22:10 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-04 22:10 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 22:10 - INFO - 	 Best ROC-AUC: 0.819
2024-11-04 22:10 - INFO - 	 Best PR-AUC: 0.263
2024-11-04 22:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-04 22:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-04 22:10 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-04 22:10 - INFO - ---------------------------------------------
2024-11-04 22:12 - INFO - ---------------------------------------------
2024-11-04 22:12 - INFO - Epoch: 06 | Time: 2m 3s
2024-11-04 22:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26615
2024-11-04 22:12 - INFO - 	 Train Loss: 0.162
2024-11-04 22:12 - INFO - 	 Val. Loss: 0.190
2024-11-04 22:12 - INFO - 	 ROC-AUC: 0.855
2024-11-04 22:12 - INFO - 	 PR-AUC: 0.266
2024-11-04 22:12 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-04 22:12 - INFO - 	 Best Val. Loss: 0.190
2024-11-04 22:12 - INFO - 	 Best ROC-AUC: 0.855
2024-11-04 22:12 - INFO - 	 Best PR-AUC: 0.266
2024-11-04 22:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.820
2024-11-04 22:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-04 22:12 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-04 22:12 - INFO - ---------------------------------------------
2024-11-04 22:14 - INFO - ---------------------------------------------
2024-11-04 22:14 - INFO - Epoch: 07 | Time: 2m 0s
2024-11-04 22:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30995
2024-11-04 22:14 - INFO - 	 Train Loss: 0.147
2024-11-04 22:14 - INFO - 	 Val. Loss: 0.173
2024-11-04 22:14 - INFO - 	 ROC-AUC: 0.895
2024-11-04 22:14 - INFO - 	 PR-AUC: 0.310
2024-11-04 22:14 - INFO - 	 Recall for 0.4 precision: 0.215
2024-11-04 22:14 - INFO - 	 Best Val. Loss: 0.173
2024-11-04 22:14 - INFO - 	 Best ROC-AUC: 0.895
2024-11-04 22:14 - INFO - 	 Best PR-AUC: 0.310
2024-11-04 22:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.846
2024-11-04 22:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.193
2024-11-04 22:14 - INFO - 	 Best Recall for 0.4 precision: 0.215
2024-11-04 22:14 - INFO - ---------------------------------------------
2024-11-04 22:16 - INFO - ---------------------------------------------
2024-11-04 22:16 - INFO - Epoch: 08 | Time: 1m 59s
2024-11-04 22:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36083
2024-11-04 22:16 - INFO - 	 Train Loss: 0.134
2024-11-04 22:16 - INFO - 	 Val. Loss: 0.159
2024-11-04 22:16 - INFO - 	 ROC-AUC: 0.926
2024-11-04 22:16 - INFO - 	 PR-AUC: 0.361
2024-11-04 22:16 - INFO - 	 Recall for 0.4 precision: 0.257
2024-11-04 22:16 - INFO - 	 Best Val. Loss: 0.159
2024-11-04 22:16 - INFO - 	 Best ROC-AUC: 0.926
2024-11-04 22:16 - INFO - 	 Best PR-AUC: 0.361
2024-11-04 22:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.888
2024-11-04 22:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.244
2024-11-04 22:16 - INFO - 	 Best Recall for 0.4 precision: 0.257
2024-11-04 22:16 - INFO - ---------------------------------------------
2024-11-04 22:18 - INFO - ---------------------------------------------
2024-11-04 22:18 - INFO - Epoch: 09 | Time: 1m 58s
2024-11-04 22:18 - INFO - 	 Train Loss: 0.125
2024-11-04 22:18 - INFO - 	 Val. Loss: 0.162
2024-11-04 22:18 - INFO - 	 ROC-AUC: 0.903
2024-11-04 22:18 - INFO - 	 PR-AUC: 0.327
2024-11-04 22:18 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-04 22:18 - INFO - 	 Best Val. Loss: 0.159
2024-11-04 22:18 - INFO - 	 Best ROC-AUC: 0.926
2024-11-04 22:18 - INFO - 	 Best PR-AUC: 0.361
2024-11-04 22:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.888
2024-11-04 22:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.244
2024-11-04 22:18 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-04 22:18 - INFO - ---------------------------------------------
2024-11-04 22:20 - INFO - ---------------------------------------------
2024-11-04 22:20 - INFO - Epoch: 10 | Time: 1m 57s
2024-11-04 22:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40929
2024-11-04 22:20 - INFO - 	 Train Loss: 0.120
2024-11-04 22:20 - INFO - 	 Val. Loss: 0.173
2024-11-04 22:20 - INFO - 	 ROC-AUC: 0.936
2024-11-04 22:20 - INFO - 	 PR-AUC: 0.409
2024-11-04 22:20 - INFO - 	 Recall for 0.4 precision: 0.628
2024-11-04 22:20 - INFO - 	 Best Val. Loss: 0.159
2024-11-04 22:20 - INFO - 	 Best ROC-AUC: 0.936
2024-11-04 22:20 - INFO - 	 Best PR-AUC: 0.409
2024-11-04 22:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.914
2024-11-04 22:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.304
2024-11-04 22:20 - INFO - 	 Best Recall for 0.4 precision: 0.628
2024-11-04 22:20 - INFO - ---------------------------------------------
2024-11-04 22:22 - INFO - Fit the preprocessing pipeline
2024-11-04 22:22 - INFO - Training using device: mps
2024-11-04 22:22 - INFO - Creating generators
2024-11-04 22:22 - INFO - The model has 651,257 trainable parameters
2024-11-04 22:22 - INFO - * Model:
2024-11-04 22:22 - INFO - * -----------
2024-11-04 22:22 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 22:22 - INFO - * -----------
2024-11-04 22:22 - INFO - Evaluating model based on: aucpr
2024-11-04 22:22 - INFO - Training..

2024-11-04 22:24 - INFO - ---------------------------------------------
2024-11-04 22:24 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-04 22:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05548
2024-11-04 22:24 - INFO - 	 Train Loss: 0.258
2024-11-04 22:24 - INFO - 	 Val. Loss: 0.314
2024-11-04 22:24 - INFO - 	 ROC-AUC: 0.568
2024-11-04 22:24 - INFO - 	 PR-AUC: 0.055
2024-11-04 22:24 - INFO - 	 Recall for 0.4 precision: 0.210
2024-11-04 22:24 - INFO - 	 Best Val. Loss: 0.314
2024-11-04 22:24 - INFO - 	 Best ROC-AUC: 0.568
2024-11-04 22:24 - INFO - 	 Best PR-AUC: 0.055
2024-11-04 22:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.577
2024-11-04 22:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.059
2024-11-04 22:24 - INFO - 	 Best Recall for 0.4 precision: 0.210
2024-11-04 22:24 - INFO - ---------------------------------------------
2024-11-04 22:26 - INFO - ---------------------------------------------
2024-11-04 22:26 - INFO - Epoch: 02 | Time: 1m 53s
2024-11-04 22:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05911
2024-11-04 22:26 - INFO - 	 Train Loss: 0.218
2024-11-04 22:26 - INFO - 	 Val. Loss: 0.262
2024-11-04 22:26 - INFO - 	 ROC-AUC: 0.559
2024-11-04 22:26 - INFO - 	 PR-AUC: 0.059
2024-11-04 22:26 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 22:26 - INFO - 	 Best Val. Loss: 0.262
2024-11-04 22:26 - INFO - 	 Best ROC-AUC: 0.568
2024-11-04 22:26 - INFO - 	 Best PR-AUC: 0.059
2024-11-04 22:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.577
2024-11-04 22:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.072
2024-11-04 22:26 - INFO - 	 Best Recall for 0.4 precision: 0.210
2024-11-04 22:26 - INFO - ---------------------------------------------
2024-11-04 22:28 - INFO - ---------------------------------------------
2024-11-04 22:28 - INFO - Epoch: 03 | Time: 1m 53s
2024-11-04 22:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06196
2024-11-04 22:28 - INFO - 	 Train Loss: 0.196
2024-11-04 22:28 - INFO - 	 Val. Loss: 0.246
2024-11-04 22:28 - INFO - 	 ROC-AUC: 0.576
2024-11-04 22:28 - INFO - 	 PR-AUC: 0.062
2024-11-04 22:28 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 22:28 - INFO - 	 Best Val. Loss: 0.246
2024-11-04 22:28 - INFO - 	 Best ROC-AUC: 0.576
2024-11-04 22:28 - INFO - 	 Best PR-AUC: 0.062
2024-11-04 22:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.567
2024-11-04 22:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.062
2024-11-04 22:28 - INFO - 	 Best Recall for 0.4 precision: 0.210
2024-11-04 22:28 - INFO - ---------------------------------------------
2024-11-04 22:30 - INFO - ---------------------------------------------
2024-11-04 22:30 - INFO - Epoch: 04 | Time: 1m 54s
2024-11-04 22:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06515
2024-11-04 22:30 - INFO - 	 Train Loss: 0.190
2024-11-04 22:30 - INFO - 	 Val. Loss: 0.236
2024-11-04 22:30 - INFO - 	 ROC-AUC: 0.599
2024-11-04 22:30 - INFO - 	 PR-AUC: 0.065
2024-11-04 22:30 - INFO - 	 Recall for 0.4 precision: 0.033
2024-11-04 22:30 - INFO - 	 Best Val. Loss: 0.236
2024-11-04 22:30 - INFO - 	 Best ROC-AUC: 0.599
2024-11-04 22:30 - INFO - 	 Best PR-AUC: 0.065
2024-11-04 22:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.593
2024-11-04 22:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.070
2024-11-04 22:30 - INFO - 	 Best Recall for 0.4 precision: 0.210
2024-11-04 22:30 - INFO - ---------------------------------------------
2024-11-04 22:32 - INFO - ---------------------------------------------
2024-11-04 22:32 - INFO - Epoch: 05 | Time: 1m 55s
2024-11-04 22:32 - INFO - 	 Train Loss: 0.184
2024-11-04 22:32 - INFO - 	 Val. Loss: 0.231
2024-11-04 22:32 - INFO - 	 ROC-AUC: 0.593
2024-11-04 22:32 - INFO - 	 PR-AUC: 0.061
2024-11-04 22:32 - INFO - 	 Recall for 0.4 precision: 0.008
2024-11-04 22:32 - INFO - 	 Best Val. Loss: 0.231
2024-11-04 22:32 - INFO - 	 Best ROC-AUC: 0.599
2024-11-04 22:32 - INFO - 	 Best PR-AUC: 0.065
2024-11-04 22:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.593
2024-11-04 22:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.070
2024-11-04 22:32 - INFO - 	 Best Recall for 0.4 precision: 0.210
2024-11-04 22:32 - INFO - ---------------------------------------------
2024-11-04 22:34 - INFO - ---------------------------------------------
2024-11-04 22:34 - INFO - Epoch: 06 | Time: 1m 54s
2024-11-04 22:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.0718
2024-11-04 22:34 - INFO - 	 Train Loss: 0.180
2024-11-04 22:34 - INFO - 	 Val. Loss: 0.216
2024-11-04 22:34 - INFO - 	 ROC-AUC: 0.627
2024-11-04 22:34 - INFO - 	 PR-AUC: 0.072
2024-11-04 22:34 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 22:34 - INFO - 	 Best Val. Loss: 0.216
2024-11-04 22:34 - INFO - 	 Best ROC-AUC: 0.627
2024-11-04 22:34 - INFO - 	 Best PR-AUC: 0.072
2024-11-04 22:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.640
2024-11-04 22:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.082
2024-11-04 22:34 - INFO - 	 Best Recall for 0.4 precision: 0.210
2024-11-04 22:34 - INFO - ---------------------------------------------
2024-11-04 22:36 - INFO - ---------------------------------------------
2024-11-04 22:36 - INFO - Epoch: 07 | Time: 1m 54s
2024-11-04 22:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09828
2024-11-04 22:36 - INFO - 	 Train Loss: 0.177
2024-11-04 22:36 - INFO - 	 Val. Loss: 0.212
2024-11-04 22:36 - INFO - 	 ROC-AUC: 0.670
2024-11-04 22:36 - INFO - 	 PR-AUC: 0.098
2024-11-04 22:36 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 22:36 - INFO - 	 Best Val. Loss: 0.212
2024-11-04 22:36 - INFO - 	 Best ROC-AUC: 0.670
2024-11-04 22:36 - INFO - 	 Best PR-AUC: 0.098
2024-11-04 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.637
2024-11-04 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.090
2024-11-04 22:36 - INFO - 	 Best Recall for 0.4 precision: 0.210
2024-11-04 22:36 - INFO - ---------------------------------------------
2024-11-04 22:38 - INFO - ---------------------------------------------
2024-11-04 22:38 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-04 22:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14237
2024-11-04 22:38 - INFO - 	 Train Loss: 0.176
2024-11-04 22:38 - INFO - 	 Val. Loss: 0.211
2024-11-04 22:38 - INFO - 	 ROC-AUC: 0.741
2024-11-04 22:38 - INFO - 	 PR-AUC: 0.142
2024-11-04 22:38 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-04 22:38 - INFO - 	 Best Val. Loss: 0.211
2024-11-04 22:38 - INFO - 	 Best ROC-AUC: 0.741
2024-11-04 22:38 - INFO - 	 Best PR-AUC: 0.142
2024-11-04 22:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.693
2024-11-04 22:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.102
2024-11-04 22:38 - INFO - 	 Best Recall for 0.4 precision: 0.210
2024-11-04 22:38 - INFO - ---------------------------------------------
2024-11-04 22:39 - INFO - ---------------------------------------------
2024-11-04 22:39 - INFO - Epoch: 09 | Time: 1m 54s
2024-11-04 22:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17088
2024-11-04 22:39 - INFO - 	 Train Loss: 0.171
2024-11-04 22:39 - INFO - 	 Val. Loss: 0.203
2024-11-04 22:39 - INFO - 	 ROC-AUC: 0.724
2024-11-04 22:39 - INFO - 	 PR-AUC: 0.171
2024-11-04 22:39 - INFO - 	 Recall for 0.4 precision: 0.088
2024-11-04 22:39 - INFO - 	 Best Val. Loss: 0.203
2024-11-04 22:39 - INFO - 	 Best ROC-AUC: 0.741
2024-11-04 22:39 - INFO - 	 Best PR-AUC: 0.171
2024-11-04 22:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.693
2024-11-04 22:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.092
2024-11-04 22:39 - INFO - 	 Best Recall for 0.4 precision: 0.210
2024-11-04 22:39 - INFO - ---------------------------------------------
2024-11-04 22:41 - INFO - ---------------------------------------------
2024-11-04 22:41 - INFO - Epoch: 10 | Time: 1m 55s
2024-11-04 22:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20528
2024-11-04 22:41 - INFO - 	 Train Loss: 0.167
2024-11-04 22:41 - INFO - 	 Val. Loss: 0.187
2024-11-04 22:41 - INFO - 	 ROC-AUC: 0.748
2024-11-04 22:41 - INFO - 	 PR-AUC: 0.205
2024-11-04 22:41 - INFO - 	 Recall for 0.4 precision: 0.107
2024-11-04 22:41 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 22:41 - INFO - 	 Best ROC-AUC: 0.748
2024-11-04 22:41 - INFO - 	 Best PR-AUC: 0.205
2024-11-04 22:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.691
2024-11-04 22:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.106
2024-11-04 22:41 - INFO - 	 Best Recall for 0.4 precision: 0.210
2024-11-04 22:41 - INFO - ---------------------------------------------
2024-11-04 22:44 - INFO - Fit the preprocessing pipeline
2024-11-04 22:44 - INFO - Training using device: mps
2024-11-04 22:44 - INFO - Creating generators
2024-11-04 22:44 - INFO - The model has 651,257 trainable parameters
2024-11-04 22:44 - INFO - * Model:
2024-11-04 22:44 - INFO - * -----------
2024-11-04 22:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 22:44 - INFO - * -----------
2024-11-04 22:44 - INFO - Evaluating model based on: aucpr
2024-11-04 22:44 - INFO - Training..

2024-11-04 22:46 - INFO - ---------------------------------------------
2024-11-04 22:46 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 22:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05458
2024-11-04 22:46 - INFO - 	 Train Loss: 0.260
2024-11-04 22:46 - INFO - 	 Val. Loss: 0.300
2024-11-04 22:46 - INFO - 	 ROC-AUC: 0.510
2024-11-04 22:46 - INFO - 	 PR-AUC: 0.055
2024-11-04 22:46 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 22:46 - INFO - 	 Best Val. Loss: 0.300
2024-11-04 22:46 - INFO - 	 Best ROC-AUC: 0.510
2024-11-04 22:46 - INFO - 	 Best PR-AUC: 0.055
2024-11-04 22:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.506
2024-11-04 22:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.052
2024-11-04 22:46 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-04 22:46 - INFO - ---------------------------------------------
2024-11-04 22:48 - INFO - ---------------------------------------------
2024-11-04 22:48 - INFO - Epoch: 02 | Time: 1m 51s
2024-11-04 22:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07543
2024-11-04 22:48 - INFO - 	 Train Loss: 0.212
2024-11-04 22:48 - INFO - 	 Val. Loss: 0.276
2024-11-04 22:48 - INFO - 	 ROC-AUC: 0.577
2024-11-04 22:48 - INFO - 	 PR-AUC: 0.075
2024-11-04 22:48 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-04 22:48 - INFO - 	 Best Val. Loss: 0.276
2024-11-04 22:48 - INFO - 	 Best ROC-AUC: 0.577
2024-11-04 22:48 - INFO - 	 Best PR-AUC: 0.075
2024-11-04 22:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.566
2024-11-04 22:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-04 22:48 - INFO - 	 Best Recall for 0.4 precision: 0.013
2024-11-04 22:48 - INFO - ---------------------------------------------
2024-11-04 22:49 - INFO - ---------------------------------------------
2024-11-04 22:49 - INFO - Epoch: 03 | Time: 1m 53s
2024-11-04 22:49 - INFO - 	 Train Loss: 0.202
2024-11-04 22:49 - INFO - 	 Val. Loss: 0.267
2024-11-04 22:49 - INFO - 	 ROC-AUC: 0.584
2024-11-04 22:49 - INFO - 	 PR-AUC: 0.066
2024-11-04 22:49 - INFO - 	 Recall for 0.4 precision: 0.023
2024-11-04 22:49 - INFO - 	 Best Val. Loss: 0.267
2024-11-04 22:49 - INFO - 	 Best ROC-AUC: 0.584
2024-11-04 22:49 - INFO - 	 Best PR-AUC: 0.075
2024-11-04 22:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.585
2024-11-04 22:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-04 22:49 - INFO - 	 Best Recall for 0.4 precision: 0.023
2024-11-04 22:49 - INFO - ---------------------------------------------
2024-11-04 22:51 - INFO - ---------------------------------------------
2024-11-04 22:51 - INFO - Epoch: 04 | Time: 1m 53s
2024-11-04 22:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13036
2024-11-04 22:51 - INFO - 	 Train Loss: 0.188
2024-11-04 22:51 - INFO - 	 Val. Loss: 0.226
2024-11-04 22:51 - INFO - 	 ROC-AUC: 0.688
2024-11-04 22:51 - INFO - 	 PR-AUC: 0.130
2024-11-04 22:51 - INFO - 	 Recall for 0.4 precision: 0.042
2024-11-04 22:51 - INFO - 	 Best Val. Loss: 0.226
2024-11-04 22:51 - INFO - 	 Best ROC-AUC: 0.688
2024-11-04 22:51 - INFO - 	 Best PR-AUC: 0.130
2024-11-04 22:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.653
2024-11-04 22:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.096
2024-11-04 22:51 - INFO - 	 Best Recall for 0.4 precision: 0.042
2024-11-04 22:51 - INFO - ---------------------------------------------
2024-11-04 22:53 - INFO - ---------------------------------------------
2024-11-04 22:53 - INFO - Epoch: 05 | Time: 1m 54s
2024-11-04 22:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18544
2024-11-04 22:53 - INFO - 	 Train Loss: 0.183
2024-11-04 22:53 - INFO - 	 Val. Loss: 0.209
2024-11-04 22:53 - INFO - 	 ROC-AUC: 0.750
2024-11-04 22:53 - INFO - 	 PR-AUC: 0.185
2024-11-04 22:53 - INFO - 	 Recall for 0.4 precision: 0.101
2024-11-04 22:53 - INFO - 	 Best Val. Loss: 0.209
2024-11-04 22:53 - INFO - 	 Best ROC-AUC: 0.750
2024-11-04 22:53 - INFO - 	 Best PR-AUC: 0.185
2024-11-04 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-11-04 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-04 22:53 - INFO - 	 Best Recall for 0.4 precision: 0.101
2024-11-04 22:53 - INFO - ---------------------------------------------
2024-11-04 22:55 - INFO - ---------------------------------------------
2024-11-04 22:55 - INFO - Epoch: 06 | Time: 1m 54s
2024-11-04 22:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21871
2024-11-04 22:55 - INFO - 	 Train Loss: 0.175
2024-11-04 22:55 - INFO - 	 Val. Loss: 0.195
2024-11-04 22:55 - INFO - 	 ROC-AUC: 0.756
2024-11-04 22:55 - INFO - 	 PR-AUC: 0.219
2024-11-04 22:55 - INFO - 	 Recall for 0.4 precision: 0.153
2024-11-04 22:55 - INFO - 	 Best Val. Loss: 0.195
2024-11-04 22:55 - INFO - 	 Best ROC-AUC: 0.756
2024-11-04 22:55 - INFO - 	 Best PR-AUC: 0.219
2024-11-04 22:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-11-04 22:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-04 22:55 - INFO - 	 Best Recall for 0.4 precision: 0.153
2024-11-04 22:55 - INFO - ---------------------------------------------
2024-11-04 22:57 - INFO - ---------------------------------------------
2024-11-04 22:57 - INFO - Epoch: 07 | Time: 1m 54s
2024-11-04 22:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2277
2024-11-04 22:57 - INFO - 	 Train Loss: 0.167
2024-11-04 22:57 - INFO - 	 Val. Loss: 0.189
2024-11-04 22:57 - INFO - 	 ROC-AUC: 0.793
2024-11-04 22:57 - INFO - 	 PR-AUC: 0.228
2024-11-04 22:57 - INFO - 	 Recall for 0.4 precision: 0.153
2024-11-04 22:57 - INFO - 	 Best Val. Loss: 0.189
2024-11-04 22:57 - INFO - 	 Best ROC-AUC: 0.793
2024-11-04 22:57 - INFO - 	 Best PR-AUC: 0.228
2024-11-04 22:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-04 22:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-04 22:57 - INFO - 	 Best Recall for 0.4 precision: 0.153
2024-11-04 22:57 - INFO - ---------------------------------------------
2024-11-04 22:59 - INFO - ---------------------------------------------
2024-11-04 22:59 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-04 22:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2799
2024-11-04 22:59 - INFO - 	 Train Loss: 0.161
2024-11-04 22:59 - INFO - 	 Val. Loss: 0.177
2024-11-04 22:59 - INFO - 	 ROC-AUC: 0.811
2024-11-04 22:59 - INFO - 	 PR-AUC: 0.280
2024-11-04 22:59 - INFO - 	 Recall for 0.4 precision: 0.239
2024-11-04 22:59 - INFO - 	 Best Val. Loss: 0.177
2024-11-04 22:59 - INFO - 	 Best ROC-AUC: 0.811
2024-11-04 22:59 - INFO - 	 Best PR-AUC: 0.280
2024-11-04 22:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 22:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-04 22:59 - INFO - 	 Best Recall for 0.4 precision: 0.239
2024-11-04 22:59 - INFO - ---------------------------------------------
2024-11-04 23:01 - INFO - ---------------------------------------------
2024-11-04 23:01 - INFO - Epoch: 09 | Time: 1m 55s
2024-11-04 23:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28187
2024-11-04 23:01 - INFO - 	 Train Loss: 0.157
2024-11-04 23:01 - INFO - 	 Val. Loss: 0.171
2024-11-04 23:01 - INFO - 	 ROC-AUC: 0.829
2024-11-04 23:01 - INFO - 	 PR-AUC: 0.282
2024-11-04 23:01 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-04 23:01 - INFO - 	 Best Val. Loss: 0.171
2024-11-04 23:01 - INFO - 	 Best ROC-AUC: 0.829
2024-11-04 23:01 - INFO - 	 Best PR-AUC: 0.282
2024-11-04 23:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-04 23:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 23:01 - INFO - 	 Best Recall for 0.4 precision: 0.239
2024-11-04 23:01 - INFO - ---------------------------------------------
2024-11-04 23:03 - INFO - ---------------------------------------------
2024-11-04 23:03 - INFO - Epoch: 10 | Time: 1m 55s
2024-11-04 23:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38332
2024-11-04 23:03 - INFO - 	 Train Loss: 0.147
2024-11-04 23:03 - INFO - 	 Val. Loss: 0.141
2024-11-04 23:03 - INFO - 	 ROC-AUC: 0.932
2024-11-04 23:03 - INFO - 	 PR-AUC: 0.383
2024-11-04 23:03 - INFO - 	 Recall for 0.4 precision: 0.459
2024-11-04 23:03 - INFO - 	 Best Val. Loss: 0.141
2024-11-04 23:03 - INFO - 	 Best ROC-AUC: 0.932
2024-11-04 23:03 - INFO - 	 Best PR-AUC: 0.383
2024-11-04 23:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.894
2024-11-04 23:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.248
2024-11-04 23:03 - INFO - 	 Best Recall for 0.4 precision: 0.459
2024-11-04 23:03 - INFO - ---------------------------------------------
2024-11-04 23:06 - INFO - Fit the preprocessing pipeline
2024-11-04 23:06 - INFO - Training using device: mps
2024-11-04 23:06 - INFO - Creating generators
2024-11-04 23:06 - INFO - The model has 651,257 trainable parameters
2024-11-04 23:06 - INFO - * Model:
2024-11-04 23:06 - INFO - * -----------
2024-11-04 23:06 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 23:06 - INFO - * -----------
2024-11-04 23:06 - INFO - Evaluating model based on: aucpr
2024-11-04 23:06 - INFO - Training..

2024-11-04 23:07 - INFO - ---------------------------------------------
2024-11-04 23:07 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 23:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05747
2024-11-04 23:07 - INFO - 	 Train Loss: 0.263
2024-11-04 23:07 - INFO - 	 Val. Loss: 0.324
2024-11-04 23:07 - INFO - 	 ROC-AUC: 0.553
2024-11-04 23:07 - INFO - 	 PR-AUC: 0.057
2024-11-04 23:07 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-04 23:07 - INFO - 	 Best Val. Loss: 0.324
2024-11-04 23:07 - INFO - 	 Best ROC-AUC: 0.553
2024-11-04 23:07 - INFO - 	 Best PR-AUC: 0.057
2024-11-04 23:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.558
2024-11-04 23:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.058
2024-11-04 23:07 - INFO - 	 Best Recall for 0.4 precision: 0.010
2024-11-04 23:07 - INFO - ---------------------------------------------
2024-11-04 23:09 - INFO - ---------------------------------------------
2024-11-04 23:09 - INFO - Epoch: 02 | Time: 1m 50s
2024-11-04 23:09 - INFO - 	 Train Loss: 0.215
2024-11-04 23:09 - INFO - 	 Val. Loss: 0.264
2024-11-04 23:09 - INFO - 	 ROC-AUC: 0.544
2024-11-04 23:09 - INFO - 	 PR-AUC: 0.056
2024-11-04 23:09 - INFO - 	 Recall for 0.4 precision: 0.034
2024-11-04 23:09 - INFO - 	 Best Val. Loss: 0.264
2024-11-04 23:09 - INFO - 	 Best ROC-AUC: 0.553
2024-11-04 23:09 - INFO - 	 Best PR-AUC: 0.057
2024-11-04 23:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.558
2024-11-04 23:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.058
2024-11-04 23:09 - INFO - 	 Best Recall for 0.4 precision: 0.034
2024-11-04 23:09 - INFO - ---------------------------------------------
2024-11-04 23:11 - INFO - ---------------------------------------------
2024-11-04 23:11 - INFO - Epoch: 03 | Time: 1m 52s
2024-11-04 23:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06641
2024-11-04 23:11 - INFO - 	 Train Loss: 0.200
2024-11-04 23:11 - INFO - 	 Val. Loss: 0.270
2024-11-04 23:11 - INFO - 	 ROC-AUC: 0.556
2024-11-04 23:11 - INFO - 	 PR-AUC: 0.066
2024-11-04 23:11 - INFO - 	 Recall for 0.4 precision: 0.015
2024-11-04 23:11 - INFO - 	 Best Val. Loss: 0.264
2024-11-04 23:11 - INFO - 	 Best ROC-AUC: 0.556
2024-11-04 23:11 - INFO - 	 Best PR-AUC: 0.066
2024-11-04 23:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.559
2024-11-04 23:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.064
2024-11-04 23:11 - INFO - 	 Best Recall for 0.4 precision: 0.034
2024-11-04 23:11 - INFO - ---------------------------------------------
2024-11-04 23:13 - INFO - ---------------------------------------------
2024-11-04 23:13 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-04 23:13 - INFO - 	 Train Loss: 0.190
2024-11-04 23:13 - INFO - 	 Val. Loss: 0.240
2024-11-04 23:13 - INFO - 	 ROC-AUC: 0.587
2024-11-04 23:13 - INFO - 	 PR-AUC: 0.060
2024-11-04 23:13 - INFO - 	 Recall for 0.4 precision: 0.011
2024-11-04 23:13 - INFO - 	 Best Val. Loss: 0.240
2024-11-04 23:13 - INFO - 	 Best ROC-AUC: 0.587
2024-11-04 23:13 - INFO - 	 Best PR-AUC: 0.066
2024-11-04 23:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.572
2024-11-04 23:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.064
2024-11-04 23:13 - INFO - 	 Best Recall for 0.4 precision: 0.034
2024-11-04 23:13 - INFO - ---------------------------------------------
2024-11-04 23:15 - INFO - ---------------------------------------------
2024-11-04 23:15 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-04 23:15 - INFO - 	 Train Loss: 0.183
2024-11-04 23:15 - INFO - 	 Val. Loss: 0.226
2024-11-04 23:15 - INFO - 	 ROC-AUC: 0.566
2024-11-04 23:15 - INFO - 	 PR-AUC: 0.060
2024-11-04 23:15 - INFO - 	 Recall for 0.4 precision: 0.050
2024-11-04 23:15 - INFO - 	 Best Val. Loss: 0.226
2024-11-04 23:15 - INFO - 	 Best ROC-AUC: 0.587
2024-11-04 23:15 - INFO - 	 Best PR-AUC: 0.066
2024-11-04 23:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.572
2024-11-04 23:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.064
2024-11-04 23:15 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-04 23:15 - INFO - ---------------------------------------------
2024-11-04 23:17 - INFO - ---------------------------------------------
2024-11-04 23:17 - INFO - Epoch: 06 | Time: 1m 53s
2024-11-04 23:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07373
2024-11-04 23:17 - INFO - 	 Train Loss: 0.181
2024-11-04 23:17 - INFO - 	 Val. Loss: 0.221
2024-11-04 23:17 - INFO - 	 ROC-AUC: 0.610
2024-11-04 23:17 - INFO - 	 PR-AUC: 0.074
2024-11-04 23:17 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 23:17 - INFO - 	 Best Val. Loss: 0.221
2024-11-04 23:17 - INFO - 	 Best ROC-AUC: 0.610
2024-11-04 23:17 - INFO - 	 Best PR-AUC: 0.074
2024-11-04 23:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.624
2024-11-04 23:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.087
2024-11-04 23:17 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-04 23:17 - INFO - ---------------------------------------------
2024-11-04 23:19 - INFO - ---------------------------------------------
2024-11-04 23:19 - INFO - Epoch: 07 | Time: 1m 53s
2024-11-04 23:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08366
2024-11-04 23:19 - INFO - 	 Train Loss: 0.179
2024-11-04 23:19 - INFO - 	 Val. Loss: 0.211
2024-11-04 23:19 - INFO - 	 ROC-AUC: 0.645
2024-11-04 23:19 - INFO - 	 PR-AUC: 0.084
2024-11-04 23:19 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 23:19 - INFO - 	 Best Val. Loss: 0.211
2024-11-04 23:19 - INFO - 	 Best ROC-AUC: 0.645
2024-11-04 23:19 - INFO - 	 Best PR-AUC: 0.084
2024-11-04 23:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.641
2024-11-04 23:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.083
2024-11-04 23:19 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-04 23:19 - INFO - ---------------------------------------------
2024-11-04 23:20 - INFO - ---------------------------------------------
2024-11-04 23:20 - INFO - Epoch: 08 | Time: 1m 53s
2024-11-04 23:20 - INFO - 	 Train Loss: 0.176
2024-11-04 23:20 - INFO - 	 Val. Loss: 0.201
2024-11-04 23:20 - INFO - 	 ROC-AUC: 0.644
2024-11-04 23:20 - INFO - 	 PR-AUC: 0.082
2024-11-04 23:20 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 23:20 - INFO - 	 Best Val. Loss: 0.201
2024-11-04 23:20 - INFO - 	 Best ROC-AUC: 0.645
2024-11-04 23:20 - INFO - 	 Best PR-AUC: 0.084
2024-11-04 23:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.641
2024-11-04 23:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.083
2024-11-04 23:20 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-04 23:20 - INFO - ---------------------------------------------
2024-11-04 23:22 - INFO - ---------------------------------------------
2024-11-04 23:22 - INFO - Epoch: 09 | Time: 1m 54s
2024-11-04 23:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10371
2024-11-04 23:22 - INFO - 	 Train Loss: 0.178
2024-11-04 23:22 - INFO - 	 Val. Loss: 0.213
2024-11-04 23:22 - INFO - 	 ROC-AUC: 0.662
2024-11-04 23:22 - INFO - 	 PR-AUC: 0.104
2024-11-04 23:22 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-04 23:22 - INFO - 	 Best Val. Loss: 0.201
2024-11-04 23:22 - INFO - 	 Best ROC-AUC: 0.662
2024-11-04 23:22 - INFO - 	 Best PR-AUC: 0.104
2024-11-04 23:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.637
2024-11-04 23:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.083
2024-11-04 23:22 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-04 23:22 - INFO - ---------------------------------------------
2024-11-04 23:24 - INFO - ---------------------------------------------
2024-11-04 23:24 - INFO - Epoch: 10 | Time: 1m 53s
2024-11-04 23:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15883
2024-11-04 23:24 - INFO - 	 Train Loss: 0.175
2024-11-04 23:24 - INFO - 	 Val. Loss: 0.193
2024-11-04 23:24 - INFO - 	 ROC-AUC: 0.736
2024-11-04 23:24 - INFO - 	 PR-AUC: 0.159
2024-11-04 23:24 - INFO - 	 Recall for 0.4 precision: 0.046
2024-11-04 23:24 - INFO - 	 Best Val. Loss: 0.193
2024-11-04 23:24 - INFO - 	 Best ROC-AUC: 0.736
2024-11-04 23:24 - INFO - 	 Best PR-AUC: 0.159
2024-11-04 23:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.695
2024-11-04 23:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.120
2024-11-04 23:24 - INFO - 	 Best Recall for 0.4 precision: 0.050
2024-11-04 23:24 - INFO - ---------------------------------------------
2024-11-04 23:27 - INFO - Fit the preprocessing pipeline
2024-11-04 23:27 - INFO - Training using device: mps
2024-11-04 23:27 - INFO - Creating generators
2024-11-04 23:27 - INFO - The model has 651,257 trainable parameters
2024-11-04 23:27 - INFO - * Model:
2024-11-04 23:27 - INFO - * -----------
2024-11-04 23:27 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 23:27 - INFO - * -----------
2024-11-04 23:27 - INFO - Evaluating model based on: aucpr
2024-11-04 23:27 - INFO - Training..

2024-11-04 23:29 - INFO - ---------------------------------------------
2024-11-04 23:29 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 23:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.04986
2024-11-04 23:29 - INFO - 	 Train Loss: 0.251
2024-11-04 23:29 - INFO - 	 Val. Loss: 0.283
2024-11-04 23:29 - INFO - 	 ROC-AUC: 0.538
2024-11-04 23:29 - INFO - 	 PR-AUC: 0.050
2024-11-04 23:29 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-04 23:29 - INFO - 	 Best Val. Loss: 0.283
2024-11-04 23:29 - INFO - 	 Best ROC-AUC: 0.538
2024-11-04 23:29 - INFO - 	 Best PR-AUC: 0.050
2024-11-04 23:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.533
2024-11-04 23:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.053
2024-11-04 23:29 - INFO - 	 Best Recall for 0.4 precision: 0.005
2024-11-04 23:29 - INFO - ---------------------------------------------
2024-11-04 23:30 - INFO - ---------------------------------------------
2024-11-04 23:30 - INFO - Epoch: 02 | Time: 1m 47s
2024-11-04 23:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05064
2024-11-04 23:30 - INFO - 	 Train Loss: 0.212
2024-11-04 23:30 - INFO - 	 Val. Loss: 0.277
2024-11-04 23:30 - INFO - 	 ROC-AUC: 0.538
2024-11-04 23:30 - INFO - 	 PR-AUC: 0.051
2024-11-04 23:30 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 23:30 - INFO - 	 Best Val. Loss: 0.277
2024-11-04 23:30 - INFO - 	 Best ROC-AUC: 0.538
2024-11-04 23:30 - INFO - 	 Best PR-AUC: 0.051
2024-11-04 23:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.533
2024-11-04 23:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.053
2024-11-04 23:30 - INFO - 	 Best Recall for 0.4 precision: 0.005
2024-11-04 23:30 - INFO - ---------------------------------------------
2024-11-04 23:32 - INFO - ---------------------------------------------
2024-11-04 23:32 - INFO - Epoch: 03 | Time: 1m 52s
2024-11-04 23:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.0718
2024-11-04 23:32 - INFO - 	 Train Loss: 0.203
2024-11-04 23:32 - INFO - 	 Val. Loss: 0.248
2024-11-04 23:32 - INFO - 	 ROC-AUC: 0.620
2024-11-04 23:32 - INFO - 	 PR-AUC: 0.072
2024-11-04 23:32 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-04 23:32 - INFO - 	 Best Val. Loss: 0.248
2024-11-04 23:32 - INFO - 	 Best ROC-AUC: 0.620
2024-11-04 23:32 - INFO - 	 Best PR-AUC: 0.072
2024-11-04 23:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.613
2024-11-04 23:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.074
2024-11-04 23:32 - INFO - 	 Best Recall for 0.4 precision: 0.005
2024-11-04 23:32 - INFO - ---------------------------------------------
2024-11-04 23:34 - INFO - ---------------------------------------------
2024-11-04 23:34 - INFO - Epoch: 04 | Time: 1m 51s
2024-11-04 23:34 - INFO - 	 Train Loss: 0.200
2024-11-04 23:34 - INFO - 	 Val. Loss: 0.266
2024-11-04 23:34 - INFO - 	 ROC-AUC: 0.583
2024-11-04 23:34 - INFO - 	 PR-AUC: 0.067
2024-11-04 23:34 - INFO - 	 Recall for 0.4 precision: 0.023
2024-11-04 23:34 - INFO - 	 Best Val. Loss: 0.248
2024-11-04 23:34 - INFO - 	 Best ROC-AUC: 0.620
2024-11-04 23:34 - INFO - 	 Best PR-AUC: 0.072
2024-11-04 23:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.613
2024-11-04 23:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.074
2024-11-04 23:34 - INFO - 	 Best Recall for 0.4 precision: 0.023
2024-11-04 23:34 - INFO - ---------------------------------------------
2024-11-04 23:36 - INFO - ---------------------------------------------
2024-11-04 23:36 - INFO - Epoch: 05 | Time: 1m 52s
2024-11-04 23:36 - INFO - 	 Train Loss: 0.190
2024-11-04 23:36 - INFO - 	 Val. Loss: 0.242
2024-11-04 23:36 - INFO - 	 ROC-AUC: 0.587
2024-11-04 23:36 - INFO - 	 PR-AUC: 0.063
2024-11-04 23:36 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-04 23:36 - INFO - 	 Best Val. Loss: 0.242
2024-11-04 23:36 - INFO - 	 Best ROC-AUC: 0.620
2024-11-04 23:36 - INFO - 	 Best PR-AUC: 0.072
2024-11-04 23:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.613
2024-11-04 23:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.074
2024-11-04 23:36 - INFO - 	 Best Recall for 0.4 precision: 0.023
2024-11-04 23:36 - INFO - ---------------------------------------------
2024-11-04 23:38 - INFO - ---------------------------------------------
2024-11-04 23:38 - INFO - Epoch: 06 | Time: 1m 52s
2024-11-04 23:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07592
2024-11-04 23:38 - INFO - 	 Train Loss: 0.185
2024-11-04 23:38 - INFO - 	 Val. Loss: 0.220
2024-11-04 23:38 - INFO - 	 ROC-AUC: 0.610
2024-11-04 23:38 - INFO - 	 PR-AUC: 0.076
2024-11-04 23:38 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-04 23:38 - INFO - 	 Best Val. Loss: 0.220
2024-11-04 23:38 - INFO - 	 Best ROC-AUC: 0.620
2024-11-04 23:38 - INFO - 	 Best PR-AUC: 0.076
2024-11-04 23:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.613
2024-11-04 23:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.079
2024-11-04 23:38 - INFO - 	 Best Recall for 0.4 precision: 0.023
2024-11-04 23:38 - INFO - ---------------------------------------------
2024-11-04 23:40 - INFO - ---------------------------------------------
2024-11-04 23:40 - INFO - Epoch: 07 | Time: 1m 53s
2024-11-04 23:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08921
2024-11-04 23:40 - INFO - 	 Train Loss: 0.182
2024-11-04 23:40 - INFO - 	 Val. Loss: 0.216
2024-11-04 23:40 - INFO - 	 ROC-AUC: 0.649
2024-11-04 23:40 - INFO - 	 PR-AUC: 0.089
2024-11-04 23:40 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-04 23:40 - INFO - 	 Best Val. Loss: 0.216
2024-11-04 23:40 - INFO - 	 Best ROC-AUC: 0.649
2024-11-04 23:40 - INFO - 	 Best PR-AUC: 0.089
2024-11-04 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.623
2024-11-04 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-04 23:40 - INFO - 	 Best Recall for 0.4 precision: 0.023
2024-11-04 23:40 - INFO - ---------------------------------------------
2024-11-04 23:42 - INFO - ---------------------------------------------
2024-11-04 23:42 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-04 23:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10173
2024-11-04 23:42 - INFO - 	 Train Loss: 0.179
2024-11-04 23:42 - INFO - 	 Val. Loss: 0.226
2024-11-04 23:42 - INFO - 	 ROC-AUC: 0.705
2024-11-04 23:42 - INFO - 	 PR-AUC: 0.102
2024-11-04 23:42 - INFO - 	 Recall for 0.4 precision: 0.120
2024-11-04 23:42 - INFO - 	 Best Val. Loss: 0.216
2024-11-04 23:42 - INFO - 	 Best ROC-AUC: 0.705
2024-11-04 23:42 - INFO - 	 Best PR-AUC: 0.102
2024-11-04 23:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.701
2024-11-04 23:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.104
2024-11-04 23:42 - INFO - 	 Best Recall for 0.4 precision: 0.120
2024-11-04 23:42 - INFO - ---------------------------------------------
2024-11-04 23:44 - INFO - ---------------------------------------------
2024-11-04 23:44 - INFO - Epoch: 09 | Time: 1m 53s
2024-11-04 23:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15106
2024-11-04 23:44 - INFO - 	 Train Loss: 0.175
2024-11-04 23:44 - INFO - 	 Val. Loss: 0.201
2024-11-04 23:44 - INFO - 	 ROC-AUC: 0.700
2024-11-04 23:44 - INFO - 	 PR-AUC: 0.151
2024-11-04 23:44 - INFO - 	 Recall for 0.4 precision: 0.076
2024-11-04 23:44 - INFO - 	 Best Val. Loss: 0.201
2024-11-04 23:44 - INFO - 	 Best ROC-AUC: 0.705
2024-11-04 23:44 - INFO - 	 Best PR-AUC: 0.151
2024-11-04 23:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.701
2024-11-04 23:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.085
2024-11-04 23:44 - INFO - 	 Best Recall for 0.4 precision: 0.120
2024-11-04 23:44 - INFO - ---------------------------------------------
2024-11-04 23:45 - INFO - ---------------------------------------------
2024-11-04 23:45 - INFO - Epoch: 10 | Time: 1m 53s
2024-11-04 23:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16318
2024-11-04 23:45 - INFO - 	 Train Loss: 0.173
2024-11-04 23:45 - INFO - 	 Val. Loss: 0.202
2024-11-04 23:45 - INFO - 	 ROC-AUC: 0.704
2024-11-04 23:45 - INFO - 	 PR-AUC: 0.163
2024-11-04 23:45 - INFO - 	 Recall for 0.4 precision: 0.091
2024-11-04 23:45 - INFO - 	 Best Val. Loss: 0.201
2024-11-04 23:45 - INFO - 	 Best ROC-AUC: 0.705
2024-11-04 23:45 - INFO - 	 Best PR-AUC: 0.163
2024-11-04 23:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.701
2024-11-04 23:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.082
2024-11-04 23:45 - INFO - 	 Best Recall for 0.4 precision: 0.120
2024-11-04 23:45 - INFO - ---------------------------------------------
2024-11-04 23:48 - INFO - Fit the preprocessing pipeline
2024-11-04 23:48 - INFO - Training using device: mps
2024-11-04 23:48 - INFO - Creating generators
2024-11-04 23:48 - INFO - The model has 651,257 trainable parameters
2024-11-04 23:48 - INFO - * Model:
2024-11-04 23:48 - INFO - * -----------
2024-11-04 23:48 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 23:48 - INFO - * -----------
2024-11-04 23:48 - INFO - Evaluating model based on: aucpr
2024-11-04 23:48 - INFO - Training..

2024-11-04 23:50 - INFO - ---------------------------------------------
2024-11-04 23:50 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-04 23:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12313
2024-11-04 23:50 - INFO - 	 Train Loss: 0.269
2024-11-04 23:50 - INFO - 	 Val. Loss: 0.317
2024-11-04 23:50 - INFO - 	 ROC-AUC: 0.684
2024-11-04 23:50 - INFO - 	 PR-AUC: 0.123
2024-11-04 23:50 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-04 23:50 - INFO - 	 Best Val. Loss: 0.317
2024-11-04 23:50 - INFO - 	 Best ROC-AUC: 0.684
2024-11-04 23:50 - INFO - 	 Best PR-AUC: 0.123
2024-11-04 23:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.676
2024-11-04 23:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.101
2024-11-04 23:50 - INFO - 	 Best Recall for 0.4 precision: 0.010
2024-11-04 23:50 - INFO - ---------------------------------------------
2024-11-04 23:52 - INFO - ---------------------------------------------
2024-11-04 23:52 - INFO - Epoch: 02 | Time: 1m 46s
2024-11-04 23:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20026
2024-11-04 23:52 - INFO - 	 Train Loss: 0.215
2024-11-04 23:52 - INFO - 	 Val. Loss: 0.246
2024-11-04 23:52 - INFO - 	 ROC-AUC: 0.764
2024-11-04 23:52 - INFO - 	 PR-AUC: 0.200
2024-11-04 23:52 - INFO - 	 Recall for 0.4 precision: 0.104
2024-11-04 23:52 - INFO - 	 Best Val. Loss: 0.246
2024-11-04 23:52 - INFO - 	 Best ROC-AUC: 0.764
2024-11-04 23:52 - INFO - 	 Best PR-AUC: 0.200
2024-11-04 23:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-11-04 23:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.124
2024-11-04 23:52 - INFO - 	 Best Recall for 0.4 precision: 0.104
2024-11-04 23:52 - INFO - ---------------------------------------------
2024-11-04 23:53 - INFO - ---------------------------------------------
2024-11-04 23:53 - INFO - Epoch: 03 | Time: 1m 50s
2024-11-04 23:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22186
2024-11-04 23:53 - INFO - 	 Train Loss: 0.186
2024-11-04 23:53 - INFO - 	 Val. Loss: 0.226
2024-11-04 23:53 - INFO - 	 ROC-AUC: 0.779
2024-11-04 23:53 - INFO - 	 PR-AUC: 0.222
2024-11-04 23:53 - INFO - 	 Recall for 0.4 precision: 0.146
2024-11-04 23:53 - INFO - 	 Best Val. Loss: 0.226
2024-11-04 23:53 - INFO - 	 Best ROC-AUC: 0.779
2024-11-04 23:53 - INFO - 	 Best PR-AUC: 0.222
2024-11-04 23:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.708
2024-11-04 23:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-04 23:53 - INFO - 	 Best Recall for 0.4 precision: 0.146
2024-11-04 23:53 - INFO - ---------------------------------------------
2024-11-04 23:55 - INFO - ---------------------------------------------
2024-11-04 23:55 - INFO - Epoch: 04 | Time: 1m 50s
2024-11-04 23:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26025
2024-11-04 23:55 - INFO - 	 Train Loss: 0.173
2024-11-04 23:55 - INFO - 	 Val. Loss: 0.201
2024-11-04 23:55 - INFO - 	 ROC-AUC: 0.798
2024-11-04 23:55 - INFO - 	 PR-AUC: 0.260
2024-11-04 23:55 - INFO - 	 Recall for 0.4 precision: 0.241
2024-11-04 23:55 - INFO - 	 Best Val. Loss: 0.201
2024-11-04 23:55 - INFO - 	 Best ROC-AUC: 0.798
2024-11-04 23:55 - INFO - 	 Best PR-AUC: 0.260
2024-11-04 23:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.739
2024-11-04 23:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 23:55 - INFO - 	 Best Recall for 0.4 precision: 0.241
2024-11-04 23:55 - INFO - ---------------------------------------------
2024-11-04 23:57 - INFO - ---------------------------------------------
2024-11-04 23:57 - INFO - Epoch: 05 | Time: 1m 52s
2024-11-04 23:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28048
2024-11-04 23:57 - INFO - 	 Train Loss: 0.165
2024-11-04 23:57 - INFO - 	 Val. Loss: 0.183
2024-11-04 23:57 - INFO - 	 ROC-AUC: 0.807
2024-11-04 23:57 - INFO - 	 PR-AUC: 0.280
2024-11-04 23:57 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-04 23:57 - INFO - 	 Best Val. Loss: 0.183
2024-11-04 23:57 - INFO - 	 Best ROC-AUC: 0.807
2024-11-04 23:57 - INFO - 	 Best PR-AUC: 0.280
2024-11-04 23:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-04 23:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-04 23:57 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 23:57 - INFO - ---------------------------------------------
2024-11-04 23:59 - INFO - ---------------------------------------------
2024-11-04 23:59 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-04 23:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31012
2024-11-04 23:59 - INFO - 	 Train Loss: 0.159
2024-11-04 23:59 - INFO - 	 Val. Loss: 0.174
2024-11-04 23:59 - INFO - 	 ROC-AUC: 0.850
2024-11-04 23:59 - INFO - 	 PR-AUC: 0.310
2024-11-04 23:59 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-04 23:59 - INFO - 	 Best Val. Loss: 0.174
2024-11-04 23:59 - INFO - 	 Best ROC-AUC: 0.850
2024-11-04 23:59 - INFO - 	 Best PR-AUC: 0.310
2024-11-04 23:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.800
2024-11-04 23:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.175
2024-11-04 23:59 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-04 23:59 - INFO - ---------------------------------------------
2024-11-05 00:01 - INFO - ---------------------------------------------
2024-11-05 00:01 - INFO - Epoch: 07 | Time: 1m 52s
2024-11-05 00:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4005
2024-11-05 00:01 - INFO - 	 Train Loss: 0.145
2024-11-05 00:01 - INFO - 	 Val. Loss: 0.146
2024-11-05 00:01 - INFO - 	 ROC-AUC: 0.932
2024-11-05 00:01 - INFO - 	 PR-AUC: 0.400
2024-11-05 00:01 - INFO - 	 Recall for 0.4 precision: 0.533
2024-11-05 00:01 - INFO - 	 Best Val. Loss: 0.146
2024-11-05 00:01 - INFO - 	 Best ROC-AUC: 0.932
2024-11-05 00:01 - INFO - 	 Best PR-AUC: 0.400
2024-11-05 00:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.887
2024-11-05 00:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.247
2024-11-05 00:01 - INFO - 	 Best Recall for 0.4 precision: 0.533
2024-11-05 00:01 - INFO - ---------------------------------------------
2024-11-05 00:03 - INFO - ---------------------------------------------
2024-11-05 00:03 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-05 00:03 - INFO - 	 Train Loss: 0.124
2024-11-05 00:03 - INFO - 	 Val. Loss: 0.152
2024-11-05 00:03 - INFO - 	 ROC-AUC: 0.938
2024-11-05 00:03 - INFO - 	 PR-AUC: 0.384
2024-11-05 00:03 - INFO - 	 Recall for 0.4 precision: 0.634
2024-11-05 00:03 - INFO - 	 Best Val. Loss: 0.146
2024-11-05 00:03 - INFO - 	 Best ROC-AUC: 0.938
2024-11-05 00:03 - INFO - 	 Best PR-AUC: 0.400
2024-11-05 00:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-05 00:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.247
2024-11-05 00:03 - INFO - 	 Best Recall for 0.4 precision: 0.634
2024-11-05 00:03 - INFO - ---------------------------------------------
2024-11-05 00:05 - INFO - ---------------------------------------------
2024-11-05 00:05 - INFO - Epoch: 09 | Time: 1m 52s
2024-11-05 00:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47854
2024-11-05 00:05 - INFO - 	 Train Loss: 0.118
2024-11-05 00:05 - INFO - 	 Val. Loss: 0.227
2024-11-05 00:05 - INFO - 	 ROC-AUC: 0.958
2024-11-05 00:05 - INFO - 	 PR-AUC: 0.479
2024-11-05 00:05 - INFO - 	 Recall for 0.4 precision: 0.776
2024-11-05 00:05 - INFO - 	 Best Val. Loss: 0.146
2024-11-05 00:05 - INFO - 	 Best ROC-AUC: 0.958
2024-11-05 00:05 - INFO - 	 Best PR-AUC: 0.479
2024-11-05 00:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-05 00:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.377
2024-11-05 00:05 - INFO - 	 Best Recall for 0.4 precision: 0.776
2024-11-05 00:05 - INFO - ---------------------------------------------
2024-11-05 00:07 - INFO - ---------------------------------------------
2024-11-05 00:07 - INFO - Epoch: 10 | Time: 1m 52s
2024-11-05 00:07 - INFO - 	 Train Loss: 0.113
2024-11-05 00:07 - INFO - 	 Val. Loss: 0.159
2024-11-05 00:07 - INFO - 	 ROC-AUC: 0.937
2024-11-05 00:07 - INFO - 	 PR-AUC: 0.449
2024-11-05 00:07 - INFO - 	 Recall for 0.4 precision: 0.641
2024-11-05 00:07 - INFO - 	 Best Val. Loss: 0.146
2024-11-05 00:07 - INFO - 	 Best ROC-AUC: 0.958
2024-11-05 00:07 - INFO - 	 Best PR-AUC: 0.479
2024-11-05 00:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-05 00:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.377
2024-11-05 00:07 - INFO - 	 Best Recall for 0.4 precision: 0.776
2024-11-05 00:07 - INFO - ---------------------------------------------
2024-11-05 00:09 - INFO - Fit the preprocessing pipeline
2024-11-05 00:09 - INFO - Training using device: mps
2024-11-05 00:09 - INFO - Creating generators
2024-11-05 00:09 - INFO - The model has 651,257 trainable parameters
2024-11-05 00:09 - INFO - * Model:
2024-11-05 00:09 - INFO - * -----------
2024-11-05 00:09 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 00:09 - INFO - * -----------
2024-11-05 00:09 - INFO - Evaluating model based on: aucpr
2024-11-05 00:09 - INFO - Training..

2024-11-05 00:11 - INFO - ---------------------------------------------
2024-11-05 00:11 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-05 00:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06992
2024-11-05 00:11 - INFO - 	 Train Loss: 0.249
2024-11-05 00:11 - INFO - 	 Val. Loss: 0.281
2024-11-05 00:11 - INFO - 	 ROC-AUC: 0.585
2024-11-05 00:11 - INFO - 	 PR-AUC: 0.070
2024-11-05 00:11 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 00:11 - INFO - 	 Best Val. Loss: 0.281
2024-11-05 00:11 - INFO - 	 Best ROC-AUC: 0.585
2024-11-05 00:11 - INFO - 	 Best PR-AUC: 0.070
2024-11-05 00:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.590
2024-11-05 00:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.074
2024-11-05 00:11 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-05 00:11 - INFO - ---------------------------------------------
2024-11-05 00:13 - INFO - ---------------------------------------------
2024-11-05 00:13 - INFO - Epoch: 02 | Time: 1m 47s
2024-11-05 00:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12831
2024-11-05 00:13 - INFO - 	 Train Loss: 0.205
2024-11-05 00:13 - INFO - 	 Val. Loss: 0.249
2024-11-05 00:13 - INFO - 	 ROC-AUC: 0.695
2024-11-05 00:13 - INFO - 	 PR-AUC: 0.128
2024-11-05 00:13 - INFO - 	 Recall for 0.4 precision: 0.034
2024-11-05 00:13 - INFO - 	 Best Val. Loss: 0.249
2024-11-05 00:13 - INFO - 	 Best ROC-AUC: 0.695
2024-11-05 00:13 - INFO - 	 Best PR-AUC: 0.128
2024-11-05 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.690
2024-11-05 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-05 00:13 - INFO - 	 Best Recall for 0.4 precision: 0.034
2024-11-05 00:13 - INFO - ---------------------------------------------
2024-11-05 00:15 - INFO - ---------------------------------------------
2024-11-05 00:15 - INFO - Epoch: 03 | Time: 1m 51s
2024-11-05 00:15 - INFO - 	 Train Loss: 0.184
2024-11-05 00:15 - INFO - 	 Val. Loss: 0.229
2024-11-05 00:15 - INFO - 	 ROC-AUC: 0.676
2024-11-05 00:15 - INFO - 	 PR-AUC: 0.117
2024-11-05 00:15 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-05 00:15 - INFO - 	 Best Val. Loss: 0.229
2024-11-05 00:15 - INFO - 	 Best ROC-AUC: 0.695
2024-11-05 00:15 - INFO - 	 Best PR-AUC: 0.128
2024-11-05 00:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.690
2024-11-05 00:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-05 00:15 - INFO - 	 Best Recall for 0.4 precision: 0.034
2024-11-05 00:15 - INFO - ---------------------------------------------
2024-11-05 00:16 - INFO - ---------------------------------------------
2024-11-05 00:16 - INFO - Epoch: 04 | Time: 1m 51s
2024-11-05 00:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24931
2024-11-05 00:16 - INFO - 	 Train Loss: 0.173
2024-11-05 00:16 - INFO - 	 Val. Loss: 0.195
2024-11-05 00:16 - INFO - 	 ROC-AUC: 0.784
2024-11-05 00:16 - INFO - 	 PR-AUC: 0.249
2024-11-05 00:16 - INFO - 	 Recall for 0.4 precision: 0.189
2024-11-05 00:16 - INFO - 	 Best Val. Loss: 0.195
2024-11-05 00:16 - INFO - 	 Best ROC-AUC: 0.784
2024-11-05 00:16 - INFO - 	 Best PR-AUC: 0.249
2024-11-05 00:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-11-05 00:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-05 00:16 - INFO - 	 Best Recall for 0.4 precision: 0.189
2024-11-05 00:16 - INFO - ---------------------------------------------
2024-11-05 00:18 - INFO - ---------------------------------------------
2024-11-05 00:18 - INFO - Epoch: 05 | Time: 1m 52s
2024-11-05 00:18 - INFO - 	 Train Loss: 0.161
2024-11-05 00:18 - INFO - 	 Val. Loss: 0.174
2024-11-05 00:18 - INFO - 	 ROC-AUC: 0.837
2024-11-05 00:18 - INFO - 	 PR-AUC: 0.240
2024-11-05 00:18 - INFO - 	 Recall for 0.4 precision: 0.072
2024-11-05 00:18 - INFO - 	 Best Val. Loss: 0.174
2024-11-05 00:18 - INFO - 	 Best ROC-AUC: 0.837
2024-11-05 00:18 - INFO - 	 Best PR-AUC: 0.249
2024-11-05 00:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.799
2024-11-05 00:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-05 00:18 - INFO - 	 Best Recall for 0.4 precision: 0.189
2024-11-05 00:18 - INFO - ---------------------------------------------
2024-11-05 00:20 - INFO - ---------------------------------------------
2024-11-05 00:20 - INFO - Epoch: 06 | Time: 1m 52s
2024-11-05 00:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33616
2024-11-05 00:20 - INFO - 	 Train Loss: 0.139
2024-11-05 00:20 - INFO - 	 Val. Loss: 0.201
2024-11-05 00:20 - INFO - 	 ROC-AUC: 0.892
2024-11-05 00:20 - INFO - 	 PR-AUC: 0.336
2024-11-05 00:20 - INFO - 	 Recall for 0.4 precision: 0.433
2024-11-05 00:20 - INFO - 	 Best Val. Loss: 0.174
2024-11-05 00:20 - INFO - 	 Best ROC-AUC: 0.892
2024-11-05 00:20 - INFO - 	 Best PR-AUC: 0.336
2024-11-05 00:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.881
2024-11-05 00:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.269
2024-11-05 00:20 - INFO - 	 Best Recall for 0.4 precision: 0.433
2024-11-05 00:20 - INFO - ---------------------------------------------
2024-11-05 00:22 - INFO - ---------------------------------------------
2024-11-05 00:22 - INFO - Epoch: 07 | Time: 1m 52s
2024-11-05 00:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41306
2024-11-05 00:22 - INFO - 	 Train Loss: 0.129
2024-11-05 00:22 - INFO - 	 Val. Loss: 0.160
2024-11-05 00:22 - INFO - 	 ROC-AUC: 0.943
2024-11-05 00:22 - INFO - 	 PR-AUC: 0.413
2024-11-05 00:22 - INFO - 	 Recall for 0.4 precision: 0.618
2024-11-05 00:22 - INFO - 	 Best Val. Loss: 0.160
2024-11-05 00:22 - INFO - 	 Best ROC-AUC: 0.943
2024-11-05 00:22 - INFO - 	 Best PR-AUC: 0.413
2024-11-05 00:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-05 00:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.280
2024-11-05 00:22 - INFO - 	 Best Recall for 0.4 precision: 0.618
2024-11-05 00:22 - INFO - ---------------------------------------------
2024-11-05 00:24 - INFO - ---------------------------------------------
2024-11-05 00:24 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-05 00:24 - INFO - 	 Train Loss: 0.120
2024-11-05 00:24 - INFO - 	 Val. Loss: 0.205
2024-11-05 00:24 - INFO - 	 ROC-AUC: 0.810
2024-11-05 00:24 - INFO - 	 PR-AUC: 0.200
2024-11-05 00:24 - INFO - 	 Recall for 0.4 precision: 0.101
2024-11-05 00:24 - INFO - 	 Best Val. Loss: 0.160
2024-11-05 00:24 - INFO - 	 Best ROC-AUC: 0.943
2024-11-05 00:24 - INFO - 	 Best PR-AUC: 0.413
2024-11-05 00:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-05 00:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.280
2024-11-05 00:24 - INFO - 	 Best Recall for 0.4 precision: 0.618
2024-11-05 00:24 - INFO - ---------------------------------------------
2024-11-05 00:26 - INFO - ---------------------------------------------
2024-11-05 00:26 - INFO - Epoch: 09 | Time: 1m 53s
2024-11-05 00:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43522
2024-11-05 00:26 - INFO - 	 Train Loss: 0.117
2024-11-05 00:26 - INFO - 	 Val. Loss: 0.143
2024-11-05 00:26 - INFO - 	 ROC-AUC: 0.939
2024-11-05 00:26 - INFO - 	 PR-AUC: 0.435
2024-11-05 00:26 - INFO - 	 Recall for 0.4 precision: 0.642
2024-11-05 00:26 - INFO - 	 Best Val. Loss: 0.143
2024-11-05 00:26 - INFO - 	 Best ROC-AUC: 0.943
2024-11-05 00:26 - INFO - 	 Best PR-AUC: 0.435
2024-11-05 00:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-05 00:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.305
2024-11-05 00:26 - INFO - 	 Best Recall for 0.4 precision: 0.642
2024-11-05 00:26 - INFO - ---------------------------------------------
2024-11-05 00:28 - INFO - ---------------------------------------------
2024-11-05 00:28 - INFO - Epoch: 10 | Time: 1m 52s
2024-11-05 00:28 - INFO - 	 Train Loss: 0.112
2024-11-05 00:28 - INFO - 	 Val. Loss: 0.200
2024-11-05 00:28 - INFO - 	 ROC-AUC: 0.894
2024-11-05 00:28 - INFO - 	 PR-AUC: 0.327
2024-11-05 00:28 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-05 00:28 - INFO - 	 Best Val. Loss: 0.143
2024-11-05 00:28 - INFO - 	 Best ROC-AUC: 0.943
2024-11-05 00:28 - INFO - 	 Best PR-AUC: 0.435
2024-11-05 00:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-05 00:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.305
2024-11-05 00:28 - INFO - 	 Best Recall for 0.4 precision: 0.642
2024-11-05 00:28 - INFO - ---------------------------------------------
2024-11-05 00:30 - INFO - Fit the preprocessing pipeline
2024-11-05 00:30 - INFO - Training using device: mps
2024-11-05 00:30 - INFO - Creating generators
2024-11-05 00:30 - INFO - The model has 651,257 trainable parameters
2024-11-05 00:30 - INFO - * Model:
2024-11-05 00:30 - INFO - * -----------
2024-11-05 00:30 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 00:30 - INFO - * -----------
2024-11-05 00:30 - INFO - Evaluating model based on: aucpr
2024-11-05 00:30 - INFO - Training..

2024-11-05 00:32 - INFO - ---------------------------------------------
2024-11-05 00:32 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-05 00:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05514
2024-11-05 00:32 - INFO - 	 Train Loss: 0.255
2024-11-05 00:32 - INFO - 	 Val. Loss: 0.300
2024-11-05 00:32 - INFO - 	 ROC-AUC: 0.548
2024-11-05 00:32 - INFO - 	 PR-AUC: 0.055
2024-11-05 00:32 - INFO - 	 Recall for 0.4 precision: 0.028
2024-11-05 00:32 - INFO - 	 Best Val. Loss: 0.300
2024-11-05 00:32 - INFO - 	 Best ROC-AUC: 0.548
2024-11-05 00:32 - INFO - 	 Best PR-AUC: 0.055
2024-11-05 00:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.586
2024-11-05 00:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.061
2024-11-05 00:32 - INFO - 	 Best Recall for 0.4 precision: 0.028
2024-11-05 00:32 - INFO - ---------------------------------------------
2024-11-05 00:34 - INFO - ---------------------------------------------
2024-11-05 00:34 - INFO - Epoch: 02 | Time: 1m 45s
2024-11-05 00:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.0614
2024-11-05 00:34 - INFO - 	 Train Loss: 0.215
2024-11-05 00:34 - INFO - 	 Val. Loss: 0.280
2024-11-05 00:34 - INFO - 	 ROC-AUC: 0.588
2024-11-05 00:34 - INFO - 	 PR-AUC: 0.061
2024-11-05 00:34 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-05 00:34 - INFO - 	 Best Val. Loss: 0.280
2024-11-05 00:34 - INFO - 	 Best ROC-AUC: 0.588
2024-11-05 00:34 - INFO - 	 Best PR-AUC: 0.061
2024-11-05 00:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.588
2024-11-05 00:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.062
2024-11-05 00:34 - INFO - 	 Best Recall for 0.4 precision: 0.028
2024-11-05 00:34 - INFO - ---------------------------------------------
2024-11-05 00:36 - INFO - ---------------------------------------------
2024-11-05 00:36 - INFO - Epoch: 03 | Time: 1m 50s
2024-11-05 00:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06819
2024-11-05 00:36 - INFO - 	 Train Loss: 0.203
2024-11-05 00:36 - INFO - 	 Val. Loss: 0.263
2024-11-05 00:36 - INFO - 	 ROC-AUC: 0.607
2024-11-05 00:36 - INFO - 	 PR-AUC: 0.068
2024-11-05 00:36 - INFO - 	 Recall for 0.4 precision: 0.023
2024-11-05 00:36 - INFO - 	 Best Val. Loss: 0.263
2024-11-05 00:36 - INFO - 	 Best ROC-AUC: 0.607
2024-11-05 00:36 - INFO - 	 Best PR-AUC: 0.068
2024-11-05 00:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.609
2024-11-05 00:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.075
2024-11-05 00:36 - INFO - 	 Best Recall for 0.4 precision: 0.028
2024-11-05 00:36 - INFO - ---------------------------------------------
2024-11-05 00:37 - INFO - ---------------------------------------------
2024-11-05 00:37 - INFO - Epoch: 04 | Time: 1m 50s
2024-11-05 00:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08364
2024-11-05 00:37 - INFO - 	 Train Loss: 0.193
2024-11-05 00:37 - INFO - 	 Val. Loss: 0.254
2024-11-05 00:37 - INFO - 	 ROC-AUC: 0.635
2024-11-05 00:37 - INFO - 	 PR-AUC: 0.084
2024-11-05 00:37 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-05 00:37 - INFO - 	 Best Val. Loss: 0.254
2024-11-05 00:37 - INFO - 	 Best ROC-AUC: 0.635
2024-11-05 00:37 - INFO - 	 Best PR-AUC: 0.084
2024-11-05 00:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.641
2024-11-05 00:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.080
2024-11-05 00:37 - INFO - 	 Best Recall for 0.4 precision: 0.028
2024-11-05 00:37 - INFO - ---------------------------------------------
2024-11-05 00:39 - INFO - ---------------------------------------------
2024-11-05 00:39 - INFO - Epoch: 05 | Time: 1m 50s
2024-11-05 00:39 - INFO - 	 Train Loss: 0.190
2024-11-05 00:39 - INFO - 	 Val. Loss: 0.252
2024-11-05 00:39 - INFO - 	 ROC-AUC: 0.624
2024-11-05 00:39 - INFO - 	 PR-AUC: 0.075
2024-11-05 00:39 - INFO - 	 Recall for 0.4 precision: 0.008
2024-11-05 00:39 - INFO - 	 Best Val. Loss: 0.252
2024-11-05 00:39 - INFO - 	 Best ROC-AUC: 0.635
2024-11-05 00:39 - INFO - 	 Best PR-AUC: 0.084
2024-11-05 00:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.641
2024-11-05 00:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.080
2024-11-05 00:39 - INFO - 	 Best Recall for 0.4 precision: 0.028
2024-11-05 00:39 - INFO - ---------------------------------------------
2024-11-05 00:41 - INFO - ---------------------------------------------
2024-11-05 00:41 - INFO - Epoch: 06 | Time: 1m 52s
2024-11-05 00:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09501
2024-11-05 00:41 - INFO - 	 Train Loss: 0.184
2024-11-05 00:41 - INFO - 	 Val. Loss: 0.227
2024-11-05 00:41 - INFO - 	 ROC-AUC: 0.674
2024-11-05 00:41 - INFO - 	 PR-AUC: 0.095
2024-11-05 00:41 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-05 00:41 - INFO - 	 Best Val. Loss: 0.227
2024-11-05 00:41 - INFO - 	 Best ROC-AUC: 0.674
2024-11-05 00:41 - INFO - 	 Best PR-AUC: 0.095
2024-11-05 00:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.661
2024-11-05 00:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.091
2024-11-05 00:41 - INFO - 	 Best Recall for 0.4 precision: 0.028
2024-11-05 00:41 - INFO - ---------------------------------------------
2024-11-05 00:43 - INFO - ---------------------------------------------
2024-11-05 00:43 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-05 00:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11692
2024-11-05 00:43 - INFO - 	 Train Loss: 0.178
2024-11-05 00:43 - INFO - 	 Val. Loss: 0.210
2024-11-05 00:43 - INFO - 	 ROC-AUC: 0.690
2024-11-05 00:43 - INFO - 	 PR-AUC: 0.117
2024-11-05 00:43 - INFO - 	 Recall for 0.4 precision: 0.024
2024-11-05 00:43 - INFO - 	 Best Val. Loss: 0.210
2024-11-05 00:43 - INFO - 	 Best ROC-AUC: 0.690
2024-11-05 00:43 - INFO - 	 Best PR-AUC: 0.117
2024-11-05 00:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.666
2024-11-05 00:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.104
2024-11-05 00:43 - INFO - 	 Best Recall for 0.4 precision: 0.028
2024-11-05 00:43 - INFO - ---------------------------------------------
2024-11-05 00:45 - INFO - ---------------------------------------------
2024-11-05 00:45 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-05 00:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21647
2024-11-05 00:45 - INFO - 	 Train Loss: 0.174
2024-11-05 00:45 - INFO - 	 Val. Loss: 0.200
2024-11-05 00:45 - INFO - 	 ROC-AUC: 0.766
2024-11-05 00:45 - INFO - 	 PR-AUC: 0.216
2024-11-05 00:45 - INFO - 	 Recall for 0.4 precision: 0.111
2024-11-05 00:45 - INFO - 	 Best Val. Loss: 0.200
2024-11-05 00:45 - INFO - 	 Best ROC-AUC: 0.766
2024-11-05 00:45 - INFO - 	 Best PR-AUC: 0.216
2024-11-05 00:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-05 00:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.128
2024-11-05 00:45 - INFO - 	 Best Recall for 0.4 precision: 0.111
2024-11-05 00:45 - INFO - ---------------------------------------------
2024-11-05 00:47 - INFO - ---------------------------------------------
2024-11-05 00:47 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-05 00:47 - INFO - 	 Train Loss: 0.168
2024-11-05 00:47 - INFO - 	 Val. Loss: 0.206
2024-11-05 00:47 - INFO - 	 ROC-AUC: 0.766
2024-11-05 00:47 - INFO - 	 PR-AUC: 0.215
2024-11-05 00:47 - INFO - 	 Recall for 0.4 precision: 0.137
2024-11-05 00:47 - INFO - 	 Best Val. Loss: 0.200
2024-11-05 00:47 - INFO - 	 Best ROC-AUC: 0.766
2024-11-05 00:47 - INFO - 	 Best PR-AUC: 0.216
2024-11-05 00:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-05 00:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.128
2024-11-05 00:47 - INFO - 	 Best Recall for 0.4 precision: 0.137
2024-11-05 00:47 - INFO - ---------------------------------------------
2024-11-05 00:49 - INFO - ---------------------------------------------
2024-11-05 00:49 - INFO - Epoch: 10 | Time: 1m 51s
2024-11-05 00:49 - INFO - 	 Train Loss: 0.164
2024-11-05 00:49 - INFO - 	 Val. Loss: 0.190
2024-11-05 00:49 - INFO - 	 ROC-AUC: 0.796
2024-11-05 00:49 - INFO - 	 PR-AUC: 0.201
2024-11-05 00:49 - INFO - 	 Recall for 0.4 precision: 0.098
2024-11-05 00:49 - INFO - 	 Best Val. Loss: 0.190
2024-11-05 00:49 - INFO - 	 Best ROC-AUC: 0.796
2024-11-05 00:49 - INFO - 	 Best PR-AUC: 0.216
2024-11-05 00:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-05 00:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.128
2024-11-05 00:49 - INFO - 	 Best Recall for 0.4 precision: 0.137
2024-11-05 00:49 - INFO - ---------------------------------------------
2024-11-05 00:51 - INFO - Fit the preprocessing pipeline
2024-11-05 00:51 - INFO - Training using device: mps
2024-11-05 00:51 - INFO - Creating generators
2024-11-05 00:51 - INFO - The model has 651,257 trainable parameters
2024-11-05 00:51 - INFO - * Model:
2024-11-05 00:51 - INFO - * -----------
2024-11-05 00:51 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 00:51 - INFO - * -----------
2024-11-05 00:51 - INFO - Evaluating model based on: aucpr
2024-11-05 00:51 - INFO - Training..

2024-11-05 00:53 - INFO - ---------------------------------------------
2024-11-05 00:53 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-05 00:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08223
2024-11-05 00:53 - INFO - 	 Train Loss: 0.249
2024-11-05 00:53 - INFO - 	 Val. Loss: 0.289
2024-11-05 00:53 - INFO - 	 ROC-AUC: 0.638
2024-11-05 00:53 - INFO - 	 PR-AUC: 0.082
2024-11-05 00:53 - INFO - 	 Recall for 0.4 precision: 0.067
2024-11-05 00:53 - INFO - 	 Best Val. Loss: 0.289
2024-11-05 00:53 - INFO - 	 Best ROC-AUC: 0.638
2024-11-05 00:53 - INFO - 	 Best PR-AUC: 0.082
2024-11-05 00:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.611
2024-11-05 00:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.077
2024-11-05 00:53 - INFO - 	 Best Recall for 0.4 precision: 0.067
2024-11-05 00:53 - INFO - ---------------------------------------------
2024-11-05 00:55 - INFO - ---------------------------------------------
2024-11-05 00:55 - INFO - Epoch: 02 | Time: 1m 44s
2024-11-05 00:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1544
2024-11-05 00:55 - INFO - 	 Train Loss: 0.212
2024-11-05 00:55 - INFO - 	 Val. Loss: 0.258
2024-11-05 00:55 - INFO - 	 ROC-AUC: 0.690
2024-11-05 00:55 - INFO - 	 PR-AUC: 0.154
2024-11-05 00:55 - INFO - 	 Recall for 0.4 precision: 0.067
2024-11-05 00:55 - INFO - 	 Best Val. Loss: 0.258
2024-11-05 00:55 - INFO - 	 Best ROC-AUC: 0.690
2024-11-05 00:55 - INFO - 	 Best PR-AUC: 0.154
2024-11-05 00:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.636
2024-11-05 00:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.092
2024-11-05 00:55 - INFO - 	 Best Recall for 0.4 precision: 0.067
2024-11-05 00:55 - INFO - ---------------------------------------------
2024-11-05 00:57 - INFO - ---------------------------------------------
2024-11-05 00:57 - INFO - Epoch: 03 | Time: 1m 49s
2024-11-05 00:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20437
2024-11-05 00:57 - INFO - 	 Train Loss: 0.186
2024-11-05 00:57 - INFO - 	 Val. Loss: 0.215
2024-11-05 00:57 - INFO - 	 ROC-AUC: 0.775
2024-11-05 00:57 - INFO - 	 PR-AUC: 0.204
2024-11-05 00:57 - INFO - 	 Recall for 0.4 precision: 0.104
2024-11-05 00:57 - INFO - 	 Best Val. Loss: 0.215
2024-11-05 00:57 - INFO - 	 Best ROC-AUC: 0.775
2024-11-05 00:57 - INFO - 	 Best PR-AUC: 0.204
2024-11-05 00:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-11-05 00:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.116
2024-11-05 00:57 - INFO - 	 Best Recall for 0.4 precision: 0.104
2024-11-05 00:57 - INFO - ---------------------------------------------
2024-11-05 00:58 - INFO - ---------------------------------------------
2024-11-05 00:58 - INFO - Epoch: 04 | Time: 1m 49s
2024-11-05 00:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26806
2024-11-05 00:58 - INFO - 	 Train Loss: 0.171
2024-11-05 00:58 - INFO - 	 Val. Loss: 0.196
2024-11-05 00:58 - INFO - 	 ROC-AUC: 0.790
2024-11-05 00:58 - INFO - 	 PR-AUC: 0.268
2024-11-05 00:58 - INFO - 	 Recall for 0.4 precision: 0.223
2024-11-05 00:58 - INFO - 	 Best Val. Loss: 0.196
2024-11-05 00:58 - INFO - 	 Best ROC-AUC: 0.790
2024-11-05 00:58 - INFO - 	 Best PR-AUC: 0.268
2024-11-05 00:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-11-05 00:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-05 00:58 - INFO - 	 Best Recall for 0.4 precision: 0.223
2024-11-05 00:58 - INFO - ---------------------------------------------
2024-11-05 01:00 - INFO - ---------------------------------------------
2024-11-05 01:00 - INFO - Epoch: 05 | Time: 1m 50s
2024-11-05 01:00 - INFO - 	 Train Loss: 0.174
2024-11-05 01:00 - INFO - 	 Val. Loss: 0.250
2024-11-05 01:00 - INFO - 	 ROC-AUC: 0.788
2024-11-05 01:00 - INFO - 	 PR-AUC: 0.242
2024-11-05 01:00 - INFO - 	 Recall for 0.4 precision: 0.153
2024-11-05 01:00 - INFO - 	 Best Val. Loss: 0.196
2024-11-05 01:00 - INFO - 	 Best ROC-AUC: 0.790
2024-11-05 01:00 - INFO - 	 Best PR-AUC: 0.268
2024-11-05 01:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-11-05 01:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-05 01:00 - INFO - 	 Best Recall for 0.4 precision: 0.223
2024-11-05 01:00 - INFO - ---------------------------------------------
2024-11-05 01:02 - INFO - ---------------------------------------------
2024-11-05 01:02 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-05 01:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28841
2024-11-05 01:02 - INFO - 	 Train Loss: 0.186
2024-11-05 01:02 - INFO - 	 Val. Loss: 0.197
2024-11-05 01:02 - INFO - 	 ROC-AUC: 0.829
2024-11-05 01:02 - INFO - 	 PR-AUC: 0.288
2024-11-05 01:02 - INFO - 	 Recall for 0.4 precision: 0.257
2024-11-05 01:02 - INFO - 	 Best Val. Loss: 0.196
2024-11-05 01:02 - INFO - 	 Best ROC-AUC: 0.829
2024-11-05 01:02 - INFO - 	 Best PR-AUC: 0.288
2024-11-05 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-05 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-05 01:02 - INFO - 	 Best Recall for 0.4 precision: 0.257
2024-11-05 01:02 - INFO - ---------------------------------------------
2024-11-05 01:04 - INFO - ---------------------------------------------
2024-11-05 01:04 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-05 01:04 - INFO - 	 Train Loss: 0.161
2024-11-05 01:04 - INFO - 	 Val. Loss: 0.203
2024-11-05 01:04 - INFO - 	 ROC-AUC: 0.669
2024-11-05 01:04 - INFO - 	 PR-AUC: 0.130
2024-11-05 01:04 - INFO - 	 Recall for 0.4 precision: 0.046
2024-11-05 01:04 - INFO - 	 Best Val. Loss: 0.196
2024-11-05 01:04 - INFO - 	 Best ROC-AUC: 0.829
2024-11-05 01:04 - INFO - 	 Best PR-AUC: 0.288
2024-11-05 01:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-05 01:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-05 01:04 - INFO - 	 Best Recall for 0.4 precision: 0.257
2024-11-05 01:04 - INFO - ---------------------------------------------
2024-11-05 01:06 - INFO - ---------------------------------------------
2024-11-05 01:06 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-05 01:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28849
2024-11-05 01:06 - INFO - 	 Train Loss: 0.157
2024-11-05 01:06 - INFO - 	 Val. Loss: 0.195
2024-11-05 01:06 - INFO - 	 ROC-AUC: 0.871
2024-11-05 01:06 - INFO - 	 PR-AUC: 0.288
2024-11-05 01:06 - INFO - 	 Recall for 0.4 precision: 0.184
2024-11-05 01:06 - INFO - 	 Best Val. Loss: 0.195
2024-11-05 01:06 - INFO - 	 Best ROC-AUC: 0.871
2024-11-05 01:06 - INFO - 	 Best PR-AUC: 0.288
2024-11-05 01:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.813
2024-11-05 01:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-05 01:06 - INFO - 	 Best Recall for 0.4 precision: 0.257
2024-11-05 01:06 - INFO - ---------------------------------------------
2024-11-05 01:08 - INFO - ---------------------------------------------
2024-11-05 01:08 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-05 01:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29963
2024-11-05 01:08 - INFO - 	 Train Loss: 0.144
2024-11-05 01:08 - INFO - 	 Val. Loss: 0.173
2024-11-05 01:08 - INFO - 	 ROC-AUC: 0.890
2024-11-05 01:08 - INFO - 	 PR-AUC: 0.300
2024-11-05 01:08 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-05 01:08 - INFO - 	 Best Val. Loss: 0.173
2024-11-05 01:08 - INFO - 	 Best ROC-AUC: 0.890
2024-11-05 01:08 - INFO - 	 Best PR-AUC: 0.300
2024-11-05 01:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.824
2024-11-05 01:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-05 01:08 - INFO - 	 Best Recall for 0.4 precision: 0.257
2024-11-05 01:08 - INFO - ---------------------------------------------
2024-11-05 01:10 - INFO - ---------------------------------------------
2024-11-05 01:10 - INFO - Epoch: 10 | Time: 1m 52s
2024-11-05 01:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3783
2024-11-05 01:10 - INFO - 	 Train Loss: 0.133
2024-11-05 01:10 - INFO - 	 Val. Loss: 0.166
2024-11-05 01:10 - INFO - 	 ROC-AUC: 0.937
2024-11-05 01:10 - INFO - 	 PR-AUC: 0.378
2024-11-05 01:10 - INFO - 	 Recall for 0.4 precision: 0.426
2024-11-05 01:10 - INFO - 	 Best Val. Loss: 0.166
2024-11-05 01:10 - INFO - 	 Best ROC-AUC: 0.937
2024-11-05 01:10 - INFO - 	 Best PR-AUC: 0.378
2024-11-05 01:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.891
2024-11-05 01:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.228
2024-11-05 01:10 - INFO - 	 Best Recall for 0.4 precision: 0.426
2024-11-05 01:10 - INFO - ---------------------------------------------
2024-11-05 01:12 - INFO - Fit the preprocessing pipeline
2024-11-05 01:12 - INFO - Training using device: mps
2024-11-05 01:12 - INFO - Creating generators
2024-11-05 01:12 - INFO - The model has 651,257 trainable parameters
2024-11-05 01:12 - INFO - * Model:
2024-11-05 01:12 - INFO - * -----------
2024-11-05 01:12 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 01:12 - INFO - * -----------
2024-11-05 01:12 - INFO - Evaluating model based on: aucpr
2024-11-05 01:12 - INFO - Training..

2024-11-05 01:14 - INFO - ---------------------------------------------
2024-11-05 01:14 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-05 01:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09983
2024-11-05 01:14 - INFO - 	 Train Loss: 0.257
2024-11-05 01:14 - INFO - 	 Val. Loss: 0.291
2024-11-05 01:14 - INFO - 	 ROC-AUC: 0.619
2024-11-05 01:14 - INFO - 	 PR-AUC: 0.100
2024-11-05 01:14 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-05 01:14 - INFO - 	 Best Val. Loss: 0.291
2024-11-05 01:14 - INFO - 	 Best ROC-AUC: 0.619
2024-11-05 01:14 - INFO - 	 Best PR-AUC: 0.100
2024-11-05 01:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.623
2024-11-05 01:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.082
2024-11-05 01:14 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-05 01:14 - INFO - ---------------------------------------------
2024-11-05 01:16 - INFO - ---------------------------------------------
2024-11-05 01:16 - INFO - Epoch: 02 | Time: 1m 48s
2024-11-05 01:16 - INFO - 	 Train Loss: 0.207
2024-11-05 01:16 - INFO - 	 Val. Loss: 0.254
2024-11-05 01:16 - INFO - 	 ROC-AUC: 0.623
2024-11-05 01:16 - INFO - 	 PR-AUC: 0.100
2024-11-05 01:16 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-05 01:16 - INFO - 	 Best Val. Loss: 0.254
2024-11-05 01:16 - INFO - 	 Best ROC-AUC: 0.623
2024-11-05 01:16 - INFO - 	 Best PR-AUC: 0.100
2024-11-05 01:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.617
2024-11-05 01:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.082
2024-11-05 01:16 - INFO - 	 Best Recall for 0.4 precision: 0.026
2024-11-05 01:16 - INFO - ---------------------------------------------
2024-11-05 01:18 - INFO - ---------------------------------------------
2024-11-05 01:18 - INFO - Epoch: 03 | Time: 1m 51s
2024-11-05 01:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18503
2024-11-05 01:18 - INFO - 	 Train Loss: 0.188
2024-11-05 01:18 - INFO - 	 Val. Loss: 0.220
2024-11-05 01:18 - INFO - 	 ROC-AUC: 0.752
2024-11-05 01:18 - INFO - 	 PR-AUC: 0.185
2024-11-05 01:18 - INFO - 	 Recall for 0.4 precision: 0.081
2024-11-05 01:18 - INFO - 	 Best Val. Loss: 0.220
2024-11-05 01:18 - INFO - 	 Best ROC-AUC: 0.752
2024-11-05 01:18 - INFO - 	 Best PR-AUC: 0.185
2024-11-05 01:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.690
2024-11-05 01:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-05 01:18 - INFO - 	 Best Recall for 0.4 precision: 0.081
2024-11-05 01:18 - INFO - ---------------------------------------------
2024-11-05 01:19 - INFO - ---------------------------------------------
2024-11-05 01:19 - INFO - Epoch: 04 | Time: 1m 51s
2024-11-05 01:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21701
2024-11-05 01:19 - INFO - 	 Train Loss: 0.175
2024-11-05 01:19 - INFO - 	 Val. Loss: 0.204
2024-11-05 01:19 - INFO - 	 ROC-AUC: 0.766
2024-11-05 01:19 - INFO - 	 PR-AUC: 0.217
2024-11-05 01:19 - INFO - 	 Recall for 0.4 precision: 0.140
2024-11-05 01:19 - INFO - 	 Best Val. Loss: 0.204
2024-11-05 01:19 - INFO - 	 Best ROC-AUC: 0.766
2024-11-05 01:19 - INFO - 	 Best PR-AUC: 0.217
2024-11-05 01:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.702
2024-11-05 01:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-05 01:19 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-05 01:19 - INFO - ---------------------------------------------
2024-11-05 01:21 - INFO - ---------------------------------------------
2024-11-05 01:21 - INFO - Epoch: 05 | Time: 1m 52s
2024-11-05 01:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29006
2024-11-05 01:21 - INFO - 	 Train Loss: 0.166
2024-11-05 01:21 - INFO - 	 Val. Loss: 0.182
2024-11-05 01:21 - INFO - 	 ROC-AUC: 0.848
2024-11-05 01:21 - INFO - 	 PR-AUC: 0.290
2024-11-05 01:21 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-05 01:21 - INFO - 	 Best Val. Loss: 0.182
2024-11-05 01:21 - INFO - 	 Best ROC-AUC: 0.848
2024-11-05 01:21 - INFO - 	 Best PR-AUC: 0.290
2024-11-05 01:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.781
2024-11-05 01:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-05 01:21 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-05 01:21 - INFO - ---------------------------------------------
2024-11-05 01:23 - INFO - ---------------------------------------------
2024-11-05 01:23 - INFO - Epoch: 06 | Time: 1m 52s
2024-11-05 01:23 - INFO - 	 Train Loss: 0.154
2024-11-05 01:23 - INFO - 	 Val. Loss: 0.197
2024-11-05 01:23 - INFO - 	 ROC-AUC: 0.890
2024-11-05 01:23 - INFO - 	 PR-AUC: 0.262
2024-11-05 01:23 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 01:23 - INFO - 	 Best Val. Loss: 0.182
2024-11-05 01:23 - INFO - 	 Best ROC-AUC: 0.890
2024-11-05 01:23 - INFO - 	 Best PR-AUC: 0.290
2024-11-05 01:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.845
2024-11-05 01:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-05 01:23 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-05 01:23 - INFO - ---------------------------------------------
2024-11-05 01:25 - INFO - ---------------------------------------------
2024-11-05 01:25 - INFO - Epoch: 07 | Time: 1m 52s
2024-11-05 01:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40302
2024-11-05 01:25 - INFO - 	 Train Loss: 0.134
2024-11-05 01:25 - INFO - 	 Val. Loss: 0.137
2024-11-05 01:25 - INFO - 	 ROC-AUC: 0.942
2024-11-05 01:25 - INFO - 	 PR-AUC: 0.403
2024-11-05 01:25 - INFO - 	 Recall for 0.4 precision: 0.654
2024-11-05 01:25 - INFO - 	 Best Val. Loss: 0.137
2024-11-05 01:25 - INFO - 	 Best ROC-AUC: 0.942
2024-11-05 01:25 - INFO - 	 Best PR-AUC: 0.403
2024-11-05 01:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-11-05 01:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.263
2024-11-05 01:25 - INFO - 	 Best Recall for 0.4 precision: 0.654
2024-11-05 01:25 - INFO - ---------------------------------------------
2024-11-05 01:27 - INFO - ---------------------------------------------
2024-11-05 01:27 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-05 01:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43775
2024-11-05 01:27 - INFO - 	 Train Loss: 0.123
2024-11-05 01:27 - INFO - 	 Val. Loss: 0.136
2024-11-05 01:27 - INFO - 	 ROC-AUC: 0.942
2024-11-05 01:27 - INFO - 	 PR-AUC: 0.438
2024-11-05 01:27 - INFO - 	 Recall for 0.4 precision: 0.683
2024-11-05 01:27 - INFO - 	 Best Val. Loss: 0.136
2024-11-05 01:27 - INFO - 	 Best ROC-AUC: 0.942
2024-11-05 01:27 - INFO - 	 Best PR-AUC: 0.438
2024-11-05 01:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-11-05 01:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.329
2024-11-05 01:27 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-11-05 01:27 - INFO - ---------------------------------------------
2024-11-05 01:29 - INFO - ---------------------------------------------
2024-11-05 01:29 - INFO - Epoch: 09 | Time: 1m 52s
2024-11-05 01:29 - INFO - 	 Train Loss: 0.116
2024-11-05 01:29 - INFO - 	 Val. Loss: 0.177
2024-11-05 01:29 - INFO - 	 ROC-AUC: 0.916
2024-11-05 01:29 - INFO - 	 PR-AUC: 0.312
2024-11-05 01:29 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-05 01:29 - INFO - 	 Best Val. Loss: 0.136
2024-11-05 01:29 - INFO - 	 Best ROC-AUC: 0.942
2024-11-05 01:29 - INFO - 	 Best PR-AUC: 0.438
2024-11-05 01:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-11-05 01:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.329
2024-11-05 01:29 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-11-05 01:29 - INFO - ---------------------------------------------
2024-11-05 01:31 - INFO - ---------------------------------------------
2024-11-05 01:31 - INFO - Epoch: 10 | Time: 1m 52s
2024-11-05 01:31 - INFO - 	 Train Loss: 0.114
2024-11-05 01:31 - INFO - 	 Val. Loss: 0.167
2024-11-05 01:31 - INFO - 	 ROC-AUC: 0.937
2024-11-05 01:31 - INFO - 	 PR-AUC: 0.373
2024-11-05 01:31 - INFO - 	 Recall for 0.4 precision: 0.589
2024-11-05 01:31 - INFO - 	 Best Val. Loss: 0.136
2024-11-05 01:31 - INFO - 	 Best ROC-AUC: 0.942
2024-11-05 01:31 - INFO - 	 Best PR-AUC: 0.438
2024-11-05 01:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-11-05 01:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.329
2024-11-05 01:31 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-11-05 01:31 - INFO - ---------------------------------------------
2024-11-05 01:33 - INFO - Fit the preprocessing pipeline
2024-11-05 01:33 - INFO - Training using device: mps
2024-11-05 01:33 - INFO - Creating generators
2024-11-05 01:33 - INFO - The model has 651,257 trainable parameters
2024-11-05 01:33 - INFO - * Model:
2024-11-05 01:33 - INFO - * -----------
2024-11-05 01:33 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 01:33 - INFO - * -----------
2024-11-05 01:33 - INFO - Evaluating model based on: aucpr
2024-11-05 01:33 - INFO - Training..

2024-11-05 01:35 - INFO - ---------------------------------------------
2024-11-05 01:35 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-05 01:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06904
2024-11-05 01:35 - INFO - 	 Train Loss: 0.252
2024-11-05 01:35 - INFO - 	 Val. Loss: 0.311
2024-11-05 01:35 - INFO - 	 ROC-AUC: 0.518
2024-11-05 01:35 - INFO - 	 PR-AUC: 0.069
2024-11-05 01:35 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-05 01:35 - INFO - 	 Best Val. Loss: 0.311
2024-11-05 01:35 - INFO - 	 Best ROC-AUC: 0.518
2024-11-05 01:35 - INFO - 	 Best PR-AUC: 0.069
2024-11-05 01:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.483
2024-11-05 01:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.051
2024-11-05 01:35 - INFO - 	 Best Recall for 0.4 precision: 0.026
2024-11-05 01:35 - INFO - ---------------------------------------------
2024-11-05 01:37 - INFO - ---------------------------------------------
2024-11-05 01:37 - INFO - Epoch: 02 | Time: 1m 46s
2024-11-05 01:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09724
2024-11-05 01:37 - INFO - 	 Train Loss: 0.205
2024-11-05 01:37 - INFO - 	 Val. Loss: 0.247
2024-11-05 01:37 - INFO - 	 ROC-AUC: 0.622
2024-11-05 01:37 - INFO - 	 PR-AUC: 0.097
2024-11-05 01:37 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 01:37 - INFO - 	 Best Val. Loss: 0.247
2024-11-05 01:37 - INFO - 	 Best ROC-AUC: 0.622
2024-11-05 01:37 - INFO - 	 Best PR-AUC: 0.097
2024-11-05 01:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.621
2024-11-05 01:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.093
2024-11-05 01:37 - INFO - 	 Best Recall for 0.4 precision: 0.026
2024-11-05 01:37 - INFO - ---------------------------------------------
2024-11-05 01:39 - INFO - ---------------------------------------------
2024-11-05 01:39 - INFO - Epoch: 03 | Time: 1m 51s
2024-11-05 01:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15471
2024-11-05 01:39 - INFO - 	 Train Loss: 0.189
2024-11-05 01:39 - INFO - 	 Val. Loss: 0.243
2024-11-05 01:39 - INFO - 	 ROC-AUC: 0.700
2024-11-05 01:39 - INFO - 	 PR-AUC: 0.155
2024-11-05 01:39 - INFO - 	 Recall for 0.4 precision: 0.101
2024-11-05 01:39 - INFO - 	 Best Val. Loss: 0.243
2024-11-05 01:39 - INFO - 	 Best ROC-AUC: 0.700
2024-11-05 01:39 - INFO - 	 Best PR-AUC: 0.155
2024-11-05 01:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.670
2024-11-05 01:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.118
2024-11-05 01:39 - INFO - 	 Best Recall for 0.4 precision: 0.101
2024-11-05 01:39 - INFO - ---------------------------------------------
2024-11-05 01:41 - INFO - ---------------------------------------------
2024-11-05 01:41 - INFO - Epoch: 04 | Time: 1m 51s
2024-11-05 01:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22496
2024-11-05 01:41 - INFO - 	 Train Loss: 0.176
2024-11-05 01:41 - INFO - 	 Val. Loss: 0.201
2024-11-05 01:41 - INFO - 	 ROC-AUC: 0.756
2024-11-05 01:41 - INFO - 	 PR-AUC: 0.225
2024-11-05 01:41 - INFO - 	 Recall for 0.4 precision: 0.140
2024-11-05 01:41 - INFO - 	 Best Val. Loss: 0.201
2024-11-05 01:41 - INFO - 	 Best ROC-AUC: 0.756
2024-11-05 01:41 - INFO - 	 Best PR-AUC: 0.225
2024-11-05 01:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.685
2024-11-05 01:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-05 01:41 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-05 01:41 - INFO - ---------------------------------------------
2024-11-05 01:42 - INFO - ---------------------------------------------
2024-11-05 01:42 - INFO - Epoch: 05 | Time: 1m 51s
2024-11-05 01:42 - INFO - 	 Train Loss: 0.166
2024-11-05 01:42 - INFO - 	 Val. Loss: 0.200
2024-11-05 01:42 - INFO - 	 ROC-AUC: 0.763
2024-11-05 01:42 - INFO - 	 PR-AUC: 0.203
2024-11-05 01:42 - INFO - 	 Recall for 0.4 precision: 0.098
2024-11-05 01:42 - INFO - 	 Best Val. Loss: 0.200
2024-11-05 01:42 - INFO - 	 Best ROC-AUC: 0.763
2024-11-05 01:42 - INFO - 	 Best PR-AUC: 0.225
2024-11-05 01:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.673
2024-11-05 01:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-05 01:42 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-05 01:42 - INFO - ---------------------------------------------
2024-11-05 01:44 - INFO - ---------------------------------------------
2024-11-05 01:44 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-05 01:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36984
2024-11-05 01:44 - INFO - 	 Train Loss: 0.156
2024-11-05 01:44 - INFO - 	 Val. Loss: 0.156
2024-11-05 01:44 - INFO - 	 ROC-AUC: 0.921
2024-11-05 01:44 - INFO - 	 PR-AUC: 0.370
2024-11-05 01:44 - INFO - 	 Recall for 0.4 precision: 0.449
2024-11-05 01:44 - INFO - 	 Best Val. Loss: 0.156
2024-11-05 01:44 - INFO - 	 Best ROC-AUC: 0.921
2024-11-05 01:44 - INFO - 	 Best PR-AUC: 0.370
2024-11-05 01:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.872
2024-11-05 01:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.212
2024-11-05 01:44 - INFO - 	 Best Recall for 0.4 precision: 0.449
2024-11-05 01:44 - INFO - ---------------------------------------------
2024-11-05 01:46 - INFO - ---------------------------------------------
2024-11-05 01:46 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-05 01:46 - INFO - 	 Train Loss: 0.141
2024-11-05 01:46 - INFO - 	 Val. Loss: 0.157
2024-11-05 01:46 - INFO - 	 ROC-AUC: 0.930
2024-11-05 01:46 - INFO - 	 PR-AUC: 0.336
2024-11-05 01:46 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-05 01:46 - INFO - 	 Best Val. Loss: 0.156
2024-11-05 01:46 - INFO - 	 Best ROC-AUC: 0.930
2024-11-05 01:46 - INFO - 	 Best PR-AUC: 0.370
2024-11-05 01:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-05 01:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.212
2024-11-05 01:46 - INFO - 	 Best Recall for 0.4 precision: 0.449
2024-11-05 01:46 - INFO - ---------------------------------------------
2024-11-05 01:48 - INFO - ---------------------------------------------
2024-11-05 01:48 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-05 01:48 - INFO - 	 Train Loss: 0.127
2024-11-05 01:48 - INFO - 	 Val. Loss: 0.172
2024-11-05 01:48 - INFO - 	 ROC-AUC: 0.879
2024-11-05 01:48 - INFO - 	 PR-AUC: 0.293
2024-11-05 01:48 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-05 01:48 - INFO - 	 Best Val. Loss: 0.156
2024-11-05 01:48 - INFO - 	 Best ROC-AUC: 0.930
2024-11-05 01:48 - INFO - 	 Best PR-AUC: 0.370
2024-11-05 01:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-05 01:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.212
2024-11-05 01:48 - INFO - 	 Best Recall for 0.4 precision: 0.449
2024-11-05 01:48 - INFO - ---------------------------------------------
2024-11-05 01:50 - INFO - ---------------------------------------------
2024-11-05 01:50 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-05 01:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46669
2024-11-05 01:50 - INFO - 	 Train Loss: 0.127
2024-11-05 01:50 - INFO - 	 Val. Loss: 0.157
2024-11-05 01:50 - INFO - 	 ROC-AUC: 0.957
2024-11-05 01:50 - INFO - 	 PR-AUC: 0.467
2024-11-05 01:50 - INFO - 	 Recall for 0.4 precision: 0.763
2024-11-05 01:50 - INFO - 	 Best Val. Loss: 0.156
2024-11-05 01:50 - INFO - 	 Best ROC-AUC: 0.957
2024-11-05 01:50 - INFO - 	 Best PR-AUC: 0.467
2024-11-05 01:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-05 01:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.357
2024-11-05 01:50 - INFO - 	 Best Recall for 0.4 precision: 0.763
2024-11-05 01:50 - INFO - ---------------------------------------------
2024-11-05 01:52 - INFO - ---------------------------------------------
2024-11-05 01:52 - INFO - Epoch: 10 | Time: 1m 52s
2024-11-05 01:52 - INFO - 	 Train Loss: 0.117
2024-11-05 01:52 - INFO - 	 Val. Loss: 0.156
2024-11-05 01:52 - INFO - 	 ROC-AUC: 0.920
2024-11-05 01:52 - INFO - 	 PR-AUC: 0.393
2024-11-05 01:52 - INFO - 	 Recall for 0.4 precision: 0.498
2024-11-05 01:52 - INFO - 	 Best Val. Loss: 0.156
2024-11-05 01:52 - INFO - 	 Best ROC-AUC: 0.957
2024-11-05 01:52 - INFO - 	 Best PR-AUC: 0.467
2024-11-05 01:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-05 01:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.357
2024-11-05 01:52 - INFO - 	 Best Recall for 0.4 precision: 0.763
2024-11-05 01:52 - INFO - ---------------------------------------------
2024-11-05 01:54 - INFO - Fit the preprocessing pipeline
2024-11-05 01:54 - INFO - Training using device: mps
2024-11-05 01:54 - INFO - Creating generators
2024-11-05 01:54 - INFO - The model has 651,257 trainable parameters
2024-11-05 01:54 - INFO - * Model:
2024-11-05 01:54 - INFO - * -----------
2024-11-05 01:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 01:54 - INFO - * -----------
2024-11-05 01:54 - INFO - Evaluating model based on: aucpr
2024-11-05 01:54 - INFO - Training..

2024-11-05 01:56 - INFO - ---------------------------------------------
2024-11-05 01:56 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-05 01:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10471
2024-11-05 01:56 - INFO - 	 Train Loss: 0.254
2024-11-05 01:56 - INFO - 	 Val. Loss: 0.290
2024-11-05 01:56 - INFO - 	 ROC-AUC: 0.566
2024-11-05 01:56 - INFO - 	 PR-AUC: 0.105
2024-11-05 01:56 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-05 01:56 - INFO - 	 Best Val. Loss: 0.290
2024-11-05 01:56 - INFO - 	 Best ROC-AUC: 0.566
2024-11-05 01:56 - INFO - 	 Best PR-AUC: 0.105
2024-11-05 01:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.561
2024-11-05 01:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.077
2024-11-05 01:56 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-05 01:56 - INFO - ---------------------------------------------
2024-11-05 01:58 - INFO - ---------------------------------------------
2024-11-05 01:58 - INFO - Epoch: 02 | Time: 1m 45s
2024-11-05 01:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14377
2024-11-05 01:58 - INFO - 	 Train Loss: 0.202
2024-11-05 01:58 - INFO - 	 Val. Loss: 0.240
2024-11-05 01:58 - INFO - 	 ROC-AUC: 0.712
2024-11-05 01:58 - INFO - 	 PR-AUC: 0.144
2024-11-05 01:58 - INFO - 	 Recall for 0.4 precision: 0.046
2024-11-05 01:58 - INFO - 	 Best Val. Loss: 0.240
2024-11-05 01:58 - INFO - 	 Best ROC-AUC: 0.712
2024-11-05 01:58 - INFO - 	 Best PR-AUC: 0.144
2024-11-05 01:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.690
2024-11-05 01:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.116
2024-11-05 01:58 - INFO - 	 Best Recall for 0.4 precision: 0.046
2024-11-05 01:58 - INFO - ---------------------------------------------
2024-11-05 02:00 - INFO - ---------------------------------------------
2024-11-05 02:00 - INFO - Epoch: 03 | Time: 1m 51s
2024-11-05 02:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21163
2024-11-05 02:00 - INFO - 	 Train Loss: 0.188
2024-11-05 02:00 - INFO - 	 Val. Loss: 0.214
2024-11-05 02:00 - INFO - 	 ROC-AUC: 0.802
2024-11-05 02:00 - INFO - 	 PR-AUC: 0.212
2024-11-05 02:00 - INFO - 	 Recall for 0.4 precision: 0.075
2024-11-05 02:00 - INFO - 	 Best Val. Loss: 0.214
2024-11-05 02:00 - INFO - 	 Best ROC-AUC: 0.802
2024-11-05 02:00 - INFO - 	 Best PR-AUC: 0.212
2024-11-05 02:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-05 02:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-05 02:00 - INFO - 	 Best Recall for 0.4 precision: 0.075
2024-11-05 02:00 - INFO - ---------------------------------------------
2024-11-05 02:02 - INFO - ---------------------------------------------
2024-11-05 02:02 - INFO - Epoch: 04 | Time: 1m 51s
2024-11-05 02:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26439
2024-11-05 02:02 - INFO - 	 Train Loss: 0.170
2024-11-05 02:02 - INFO - 	 Val. Loss: 0.184
2024-11-05 02:02 - INFO - 	 ROC-AUC: 0.851
2024-11-05 02:02 - INFO - 	 PR-AUC: 0.264
2024-11-05 02:02 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-05 02:02 - INFO - 	 Best Val. Loss: 0.184
2024-11-05 02:02 - INFO - 	 Best ROC-AUC: 0.851
2024-11-05 02:02 - INFO - 	 Best PR-AUC: 0.264
2024-11-05 02:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.797
2024-11-05 02:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-05 02:02 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-05 02:02 - INFO - ---------------------------------------------
2024-11-05 02:03 - INFO - ---------------------------------------------
2024-11-05 02:03 - INFO - Epoch: 05 | Time: 1m 51s
2024-11-05 02:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27787
2024-11-05 02:03 - INFO - 	 Train Loss: 0.149
2024-11-05 02:03 - INFO - 	 Val. Loss: 0.222
2024-11-05 02:03 - INFO - 	 ROC-AUC: 0.914
2024-11-05 02:03 - INFO - 	 PR-AUC: 0.278
2024-11-05 02:03 - INFO - 	 Recall for 0.4 precision: 0.023
2024-11-05 02:03 - INFO - 	 Best Val. Loss: 0.184
2024-11-05 02:03 - INFO - 	 Best ROC-AUC: 0.914
2024-11-05 02:03 - INFO - 	 Best PR-AUC: 0.278
2024-11-05 02:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.890
2024-11-05 02:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.234
2024-11-05 02:03 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-05 02:03 - INFO - ---------------------------------------------
2024-11-05 02:05 - INFO - ---------------------------------------------
2024-11-05 02:05 - INFO - Epoch: 06 | Time: 1m 52s
2024-11-05 02:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49031
2024-11-05 02:05 - INFO - 	 Train Loss: 0.131
2024-11-05 02:05 - INFO - 	 Val. Loss: 0.125
2024-11-05 02:05 - INFO - 	 ROC-AUC: 0.962
2024-11-05 02:05 - INFO - 	 PR-AUC: 0.490
2024-11-05 02:05 - INFO - 	 Recall for 0.4 precision: 0.833
2024-11-05 02:05 - INFO - 	 Best Val. Loss: 0.125
2024-11-05 02:05 - INFO - 	 Best ROC-AUC: 0.962
2024-11-05 02:05 - INFO - 	 Best PR-AUC: 0.490
2024-11-05 02:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-05 02:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.352
2024-11-05 02:05 - INFO - 	 Best Recall for 0.4 precision: 0.833
2024-11-05 02:05 - INFO - ---------------------------------------------
2024-11-05 02:07 - INFO - ---------------------------------------------
2024-11-05 02:07 - INFO - Epoch: 07 | Time: 1m 52s
2024-11-05 02:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50385
2024-11-05 02:07 - INFO - 	 Train Loss: 0.122
2024-11-05 02:07 - INFO - 	 Val. Loss: 0.132
2024-11-05 02:07 - INFO - 	 ROC-AUC: 0.961
2024-11-05 02:07 - INFO - 	 PR-AUC: 0.504
2024-11-05 02:07 - INFO - 	 Recall for 0.4 precision: 0.844
2024-11-05 02:07 - INFO - 	 Best Val. Loss: 0.125
2024-11-05 02:07 - INFO - 	 Best ROC-AUC: 0.962
2024-11-05 02:07 - INFO - 	 Best PR-AUC: 0.504
2024-11-05 02:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-05 02:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.332
2024-11-05 02:07 - INFO - 	 Best Recall for 0.4 precision: 0.844
2024-11-05 02:07 - INFO - ---------------------------------------------
2024-11-05 02:09 - INFO - ---------------------------------------------
2024-11-05 02:09 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-05 02:09 - INFO - 	 Train Loss: 0.117
2024-11-05 02:09 - INFO - 	 Val. Loss: 0.129
2024-11-05 02:09 - INFO - 	 ROC-AUC: 0.961
2024-11-05 02:09 - INFO - 	 PR-AUC: 0.501
2024-11-05 02:09 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-05 02:09 - INFO - 	 Best Val. Loss: 0.125
2024-11-05 02:09 - INFO - 	 Best ROC-AUC: 0.962
2024-11-05 02:09 - INFO - 	 Best PR-AUC: 0.504
2024-11-05 02:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-05 02:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.332
2024-11-05 02:09 - INFO - 	 Best Recall for 0.4 precision: 0.844
2024-11-05 02:09 - INFO - ---------------------------------------------
2024-11-05 02:11 - INFO - ---------------------------------------------
2024-11-05 02:11 - INFO - Epoch: 09 | Time: 1m 54s
2024-11-05 02:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52037
2024-11-05 02:11 - INFO - 	 Train Loss: 0.116
2024-11-05 02:11 - INFO - 	 Val. Loss: 0.119
2024-11-05 02:11 - INFO - 	 ROC-AUC: 0.963
2024-11-05 02:11 - INFO - 	 PR-AUC: 0.520
2024-11-05 02:11 - INFO - 	 Recall for 0.4 precision: 0.855
2024-11-05 02:11 - INFO - 	 Best Val. Loss: 0.119
2024-11-05 02:11 - INFO - 	 Best ROC-AUC: 0.963
2024-11-05 02:11 - INFO - 	 Best PR-AUC: 0.520
2024-11-05 02:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-05 02:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.414
2024-11-05 02:11 - INFO - 	 Best Recall for 0.4 precision: 0.855
2024-11-05 02:11 - INFO - ---------------------------------------------
2024-11-05 02:13 - INFO - ---------------------------------------------
2024-11-05 02:13 - INFO - Epoch: 10 | Time: 1m 53s
2024-11-05 02:13 - INFO - 	 Train Loss: 0.111
2024-11-05 02:13 - INFO - 	 Val. Loss: 0.106
2024-11-05 02:13 - INFO - 	 ROC-AUC: 0.967
2024-11-05 02:13 - INFO - 	 PR-AUC: 0.495
2024-11-05 02:13 - INFO - 	 Recall for 0.4 precision: 0.901
2024-11-05 02:13 - INFO - 	 Best Val. Loss: 0.106
2024-11-05 02:13 - INFO - 	 Best ROC-AUC: 0.967
2024-11-05 02:13 - INFO - 	 Best PR-AUC: 0.520
2024-11-05 02:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-05 02:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.414
2024-11-05 02:13 - INFO - 	 Best Recall for 0.4 precision: 0.901
2024-11-05 02:13 - INFO - ---------------------------------------------
2024-11-05 02:16 - INFO - Fit the preprocessing pipeline
2024-11-05 02:16 - INFO - Training using device: mps
2024-11-05 02:16 - INFO - Creating generators
2024-11-05 02:16 - INFO - The model has 651,257 trainable parameters
2024-11-05 02:16 - INFO - * Model:
2024-11-05 02:16 - INFO - * -----------
2024-11-05 02:16 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 02:16 - INFO - * -----------
2024-11-05 02:16 - INFO - Evaluating model based on: aucpr
2024-11-05 02:16 - INFO - Training..

2024-11-05 02:17 - INFO - ---------------------------------------------
2024-11-05 02:17 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-05 02:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09926
2024-11-05 02:17 - INFO - 	 Train Loss: 0.252
2024-11-05 02:17 - INFO - 	 Val. Loss: 0.278
2024-11-05 02:17 - INFO - 	 ROC-AUC: 0.611
2024-11-05 02:17 - INFO - 	 PR-AUC: 0.099
2024-11-05 02:17 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-05 02:17 - INFO - 	 Best Val. Loss: 0.278
2024-11-05 02:17 - INFO - 	 Best ROC-AUC: 0.611
2024-11-05 02:17 - INFO - 	 Best PR-AUC: 0.099
2024-11-05 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.599
2024-11-05 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.077
2024-11-05 02:17 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-05 02:17 - INFO - ---------------------------------------------
2024-11-05 02:19 - INFO - ---------------------------------------------
2024-11-05 02:19 - INFO - Epoch: 02 | Time: 1m 49s
2024-11-05 02:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15848
2024-11-05 02:19 - INFO - 	 Train Loss: 0.205
2024-11-05 02:19 - INFO - 	 Val. Loss: 0.242
2024-11-05 02:19 - INFO - 	 ROC-AUC: 0.721
2024-11-05 02:19 - INFO - 	 PR-AUC: 0.158
2024-11-05 02:19 - INFO - 	 Recall for 0.4 precision: 0.078
2024-11-05 02:19 - INFO - 	 Best Val. Loss: 0.242
2024-11-05 02:19 - INFO - 	 Best ROC-AUC: 0.721
2024-11-05 02:19 - INFO - 	 Best PR-AUC: 0.158
2024-11-05 02:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.680
2024-11-05 02:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.108
2024-11-05 02:19 - INFO - 	 Best Recall for 0.4 precision: 0.078
2024-11-05 02:19 - INFO - ---------------------------------------------
2024-11-05 02:21 - INFO - ---------------------------------------------
2024-11-05 02:21 - INFO - Epoch: 03 | Time: 1m 49s
2024-11-05 02:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20488
2024-11-05 02:21 - INFO - 	 Train Loss: 0.185
2024-11-05 02:21 - INFO - 	 Val. Loss: 0.210
2024-11-05 02:21 - INFO - 	 ROC-AUC: 0.764
2024-11-05 02:21 - INFO - 	 PR-AUC: 0.205
2024-11-05 02:21 - INFO - 	 Recall for 0.4 precision: 0.130
2024-11-05 02:21 - INFO - 	 Best Val. Loss: 0.210
2024-11-05 02:21 - INFO - 	 Best ROC-AUC: 0.764
2024-11-05 02:21 - INFO - 	 Best PR-AUC: 0.205
2024-11-05 02:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-11-05 02:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.130
2024-11-05 02:21 - INFO - 	 Best Recall for 0.4 precision: 0.130
2024-11-05 02:21 - INFO - ---------------------------------------------
2024-11-05 02:23 - INFO - ---------------------------------------------
2024-11-05 02:23 - INFO - Epoch: 04 | Time: 1m 50s
2024-11-05 02:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24072
2024-11-05 02:23 - INFO - 	 Train Loss: 0.173
2024-11-05 02:23 - INFO - 	 Val. Loss: 0.198
2024-11-05 02:23 - INFO - 	 ROC-AUC: 0.757
2024-11-05 02:23 - INFO - 	 PR-AUC: 0.241
2024-11-05 02:23 - INFO - 	 Recall for 0.4 precision: 0.195
2024-11-05 02:23 - INFO - 	 Best Val. Loss: 0.198
2024-11-05 02:23 - INFO - 	 Best ROC-AUC: 0.764
2024-11-05 02:23 - INFO - 	 Best PR-AUC: 0.241
2024-11-05 02:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-11-05 02:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-05 02:23 - INFO - 	 Best Recall for 0.4 precision: 0.195
2024-11-05 02:23 - INFO - ---------------------------------------------
2024-11-05 02:25 - INFO - ---------------------------------------------
2024-11-05 02:25 - INFO - Epoch: 05 | Time: 1m 51s
2024-11-05 02:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30771
2024-11-05 02:25 - INFO - 	 Train Loss: 0.162
2024-11-05 02:25 - INFO - 	 Val. Loss: 0.174
2024-11-05 02:25 - INFO - 	 ROC-AUC: 0.865
2024-11-05 02:25 - INFO - 	 PR-AUC: 0.308
2024-11-05 02:25 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-05 02:25 - INFO - 	 Best Val. Loss: 0.174
2024-11-05 02:25 - INFO - 	 Best ROC-AUC: 0.865
2024-11-05 02:25 - INFO - 	 Best PR-AUC: 0.308
2024-11-05 02:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.846
2024-11-05 02:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.218
2024-11-05 02:25 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-05 02:25 - INFO - ---------------------------------------------
2024-11-05 02:27 - INFO - ---------------------------------------------
2024-11-05 02:27 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-05 02:27 - INFO - 	 Train Loss: 0.150
2024-11-05 02:27 - INFO - 	 Val. Loss: 0.195
2024-11-05 02:27 - INFO - 	 ROC-AUC: 0.860
2024-11-05 02:27 - INFO - 	 PR-AUC: 0.264
2024-11-05 02:27 - INFO - 	 Recall for 0.4 precision: 0.111
2024-11-05 02:27 - INFO - 	 Best Val. Loss: 0.174
2024-11-05 02:27 - INFO - 	 Best ROC-AUC: 0.865
2024-11-05 02:27 - INFO - 	 Best PR-AUC: 0.308
2024-11-05 02:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.846
2024-11-05 02:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.218
2024-11-05 02:27 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-05 02:27 - INFO - ---------------------------------------------
2024-11-05 02:28 - INFO - ---------------------------------------------
2024-11-05 02:28 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-05 02:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39567
2024-11-05 02:28 - INFO - 	 Train Loss: 0.131
2024-11-05 02:28 - INFO - 	 Val. Loss: 0.155
2024-11-05 02:28 - INFO - 	 ROC-AUC: 0.897
2024-11-05 02:28 - INFO - 	 PR-AUC: 0.396
2024-11-05 02:28 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 02:28 - INFO - 	 Best Val. Loss: 0.155
2024-11-05 02:28 - INFO - 	 Best ROC-AUC: 0.897
2024-11-05 02:28 - INFO - 	 Best PR-AUC: 0.396
2024-11-05 02:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-05 02:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.286
2024-11-05 02:28 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-05 02:28 - INFO - ---------------------------------------------
2024-11-05 02:30 - INFO - ---------------------------------------------
2024-11-05 02:30 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-05 02:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42187
2024-11-05 02:30 - INFO - 	 Train Loss: 0.121
2024-11-05 02:30 - INFO - 	 Val. Loss: 0.133
2024-11-05 02:30 - INFO - 	 ROC-AUC: 0.931
2024-11-05 02:30 - INFO - 	 PR-AUC: 0.422
2024-11-05 02:30 - INFO - 	 Recall for 0.4 precision: 0.728
2024-11-05 02:30 - INFO - 	 Best Val. Loss: 0.133
2024-11-05 02:30 - INFO - 	 Best ROC-AUC: 0.931
2024-11-05 02:30 - INFO - 	 Best PR-AUC: 0.422
2024-11-05 02:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.926
2024-11-05 02:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.323
2024-11-05 02:30 - INFO - 	 Best Recall for 0.4 precision: 0.728
2024-11-05 02:30 - INFO - ---------------------------------------------
2024-11-05 02:32 - INFO - ---------------------------------------------
2024-11-05 02:32 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-05 02:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49885
2024-11-05 02:32 - INFO - 	 Train Loss: 0.117
2024-11-05 02:32 - INFO - 	 Val. Loss: 0.129
2024-11-05 02:32 - INFO - 	 ROC-AUC: 0.938
2024-11-05 02:32 - INFO - 	 PR-AUC: 0.499
2024-11-05 02:32 - INFO - 	 Recall for 0.4 precision: 0.777
2024-11-05 02:32 - INFO - 	 Best Val. Loss: 0.129
2024-11-05 02:32 - INFO - 	 Best ROC-AUC: 0.938
2024-11-05 02:32 - INFO - 	 Best PR-AUC: 0.499
2024-11-05 02:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-05 02:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.317
2024-11-05 02:32 - INFO - 	 Best Recall for 0.4 precision: 0.777
2024-11-05 02:32 - INFO - ---------------------------------------------
2024-11-05 02:34 - INFO - ---------------------------------------------
2024-11-05 02:34 - INFO - Epoch: 10 | Time: 1m 51s
2024-11-05 02:34 - INFO - 	 Train Loss: 0.114
2024-11-05 02:34 - INFO - 	 Val. Loss: 0.155
2024-11-05 02:34 - INFO - 	 ROC-AUC: 0.912
2024-11-05 02:34 - INFO - 	 PR-AUC: 0.401
2024-11-05 02:34 - INFO - 	 Recall for 0.4 precision: 0.556
2024-11-05 02:34 - INFO - 	 Best Val. Loss: 0.129
2024-11-05 02:34 - INFO - 	 Best ROC-AUC: 0.938
2024-11-05 02:34 - INFO - 	 Best PR-AUC: 0.499
2024-11-05 02:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-05 02:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.317
2024-11-05 02:34 - INFO - 	 Best Recall for 0.4 precision: 0.777
2024-11-05 02:34 - INFO - ---------------------------------------------
2024-11-05 02:37 - INFO - Fit the preprocessing pipeline
2024-11-05 02:37 - INFO - Training using device: mps
2024-11-05 02:37 - INFO - Creating generators
2024-11-05 02:37 - INFO - The model has 651,257 trainable parameters
2024-11-05 02:37 - INFO - * Model:
2024-11-05 02:37 - INFO - * -----------
2024-11-05 02:37 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-05 02:37 - INFO - * -----------
2024-11-05 02:37 - INFO - Evaluating model based on: aucpr
2024-11-05 02:37 - INFO - Training..

2024-11-05 02:38 - INFO - ---------------------------------------------
2024-11-05 02:38 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-05 02:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.04738
2024-11-05 02:38 - INFO - 	 Train Loss: 0.253
2024-11-05 02:38 - INFO - 	 Val. Loss: 0.308
2024-11-05 02:38 - INFO - 	 ROC-AUC: 0.511
2024-11-05 02:38 - INFO - 	 PR-AUC: 0.047
2024-11-05 02:38 - INFO - 	 Recall for 0.4 precision: 0.015
2024-11-05 02:38 - INFO - 	 Best Val. Loss: 0.308
2024-11-05 02:38 - INFO - 	 Best ROC-AUC: 0.511
2024-11-05 02:38 - INFO - 	 Best PR-AUC: 0.047
2024-11-05 02:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.526
2024-11-05 02:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.055
2024-11-05 02:38 - INFO - 	 Best Recall for 0.4 precision: 0.015
2024-11-05 02:38 - INFO - ---------------------------------------------
2024-11-05 02:40 - INFO - ---------------------------------------------
2024-11-05 02:40 - INFO - Epoch: 02 | Time: 1m 44s
2024-11-05 02:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05614
2024-11-05 02:40 - INFO - 	 Train Loss: 0.212
2024-11-05 02:40 - INFO - 	 Val. Loss: 0.261
2024-11-05 02:40 - INFO - 	 ROC-AUC: 0.574
2024-11-05 02:40 - INFO - 	 PR-AUC: 0.056
2024-11-05 02:40 - INFO - 	 Recall for 0.4 precision: 0.008
2024-11-05 02:40 - INFO - 	 Best Val. Loss: 0.261
2024-11-05 02:40 - INFO - 	 Best ROC-AUC: 0.574
2024-11-05 02:40 - INFO - 	 Best PR-AUC: 0.056
2024-11-05 02:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.584
2024-11-05 02:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.065
2024-11-05 02:40 - INFO - 	 Best Recall for 0.4 precision: 0.015
2024-11-05 02:40 - INFO - ---------------------------------------------
2024-11-05 02:42 - INFO - ---------------------------------------------
2024-11-05 02:42 - INFO - Epoch: 03 | Time: 1m 49s
2024-11-05 02:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06342
2024-11-05 02:42 - INFO - 	 Train Loss: 0.199
2024-11-05 02:42 - INFO - 	 Val. Loss: 0.245
2024-11-05 02:42 - INFO - 	 ROC-AUC: 0.601
2024-11-05 02:42 - INFO - 	 PR-AUC: 0.063
2024-11-05 02:42 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-05 02:42 - INFO - 	 Best Val. Loss: 0.245
2024-11-05 02:42 - INFO - 	 Best ROC-AUC: 0.601
2024-11-05 02:42 - INFO - 	 Best PR-AUC: 0.063
2024-11-05 02:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.591
2024-11-05 02:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.062
2024-11-05 02:42 - INFO - 	 Best Recall for 0.4 precision: 0.015
2024-11-05 02:42 - INFO - ---------------------------------------------
2024-11-05 02:44 - INFO - ---------------------------------------------
2024-11-05 02:44 - INFO - Epoch: 04 | Time: 1m 50s
2024-11-05 02:44 - INFO - 	 Train Loss: 0.191
2024-11-05 02:44 - INFO - 	 Val. Loss: 0.244
2024-11-05 02:44 - INFO - 	 ROC-AUC: 0.589
2024-11-05 02:44 - INFO - 	 PR-AUC: 0.061
2024-11-05 02:44 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-05 02:44 - INFO - 	 Best Val. Loss: 0.244
2024-11-05 02:44 - INFO - 	 Best ROC-AUC: 0.601
2024-11-05 02:44 - INFO - 	 Best PR-AUC: 0.063
2024-11-05 02:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.591
2024-11-05 02:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.062
2024-11-05 02:44 - INFO - 	 Best Recall for 0.4 precision: 0.015
2024-11-05 02:44 - INFO - ---------------------------------------------
2024-11-05 02:46 - INFO - ---------------------------------------------
2024-11-05 02:46 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-05 02:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07351
2024-11-05 02:46 - INFO - 	 Train Loss: 0.187
2024-11-05 02:46 - INFO - 	 Val. Loss: 0.229
2024-11-05 02:46 - INFO - 	 ROC-AUC: 0.622
2024-11-05 02:46 - INFO - 	 PR-AUC: 0.074
2024-11-05 02:46 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-05 02:46 - INFO - 	 Best Val. Loss: 0.229
2024-11-05 02:46 - INFO - 	 Best ROC-AUC: 0.622
2024-11-05 02:46 - INFO - 	 Best PR-AUC: 0.074
2024-11-05 02:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.584
2024-11-05 02:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.072
2024-11-05 02:46 - INFO - 	 Best Recall for 0.4 precision: 0.015
2024-11-05 02:46 - INFO - ---------------------------------------------
2024-11-05 02:48 - INFO - ---------------------------------------------
2024-11-05 02:48 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-05 02:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08951
2024-11-05 02:48 - INFO - 	 Train Loss: 0.183
2024-11-05 02:48 - INFO - 	 Val. Loss: 0.224
2024-11-05 02:48 - INFO - 	 ROC-AUC: 0.630
2024-11-05 02:48 - INFO - 	 PR-AUC: 0.090
2024-11-05 02:48 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-05 02:48 - INFO - 	 Best Val. Loss: 0.224
2024-11-05 02:48 - INFO - 	 Best ROC-AUC: 0.630
2024-11-05 02:48 - INFO - 	 Best PR-AUC: 0.090
2024-11-05 02:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.603
2024-11-05 02:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.079
2024-11-05 02:48 - INFO - 	 Best Recall for 0.4 precision: 0.015
2024-11-05 02:48 - INFO - ---------------------------------------------
2024-11-05 02:49 - INFO - ---------------------------------------------
2024-11-05 02:49 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-05 02:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16471
2024-11-05 02:49 - INFO - 	 Train Loss: 0.180
2024-11-05 02:49 - INFO - 	 Val. Loss: 0.203
2024-11-05 02:49 - INFO - 	 ROC-AUC: 0.713
2024-11-05 02:49 - INFO - 	 PR-AUC: 0.165
2024-11-05 02:49 - INFO - 	 Recall for 0.4 precision: 0.094
2024-11-05 02:49 - INFO - 	 Best Val. Loss: 0.203
2024-11-05 02:49 - INFO - 	 Best ROC-AUC: 0.713
2024-11-05 02:49 - INFO - 	 Best PR-AUC: 0.165
2024-11-05 02:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.668
2024-11-05 02:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-05 02:49 - INFO - 	 Best Recall for 0.4 precision: 0.094
2024-11-05 02:49 - INFO - ---------------------------------------------
2024-11-05 02:51 - INFO - ---------------------------------------------
2024-11-05 02:51 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-05 02:51 - INFO - 	 Train Loss: 0.175
2024-11-05 02:51 - INFO - 	 Val. Loss: 0.202
2024-11-05 02:51 - INFO - 	 ROC-AUC: 0.731
2024-11-05 02:51 - INFO - 	 PR-AUC: 0.163
2024-11-05 02:51 - INFO - 	 Recall for 0.4 precision: 0.068
2024-11-05 02:51 - INFO - 	 Best Val. Loss: 0.202
2024-11-05 02:51 - INFO - 	 Best ROC-AUC: 0.731
2024-11-05 02:51 - INFO - 	 Best PR-AUC: 0.165
2024-11-05 02:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.688
2024-11-05 02:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-05 02:51 - INFO - 	 Best Recall for 0.4 precision: 0.094
2024-11-05 02:51 - INFO - ---------------------------------------------
2024-11-05 02:53 - INFO - ---------------------------------------------
2024-11-05 02:53 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-05 02:53 - INFO - 	 Train Loss: 0.175
2024-11-05 02:53 - INFO - 	 Val. Loss: 0.203
2024-11-05 02:53 - INFO - 	 ROC-AUC: 0.696
2024-11-05 02:53 - INFO - 	 PR-AUC: 0.145
2024-11-05 02:53 - INFO - 	 Recall for 0.4 precision: 0.065
2024-11-05 02:53 - INFO - 	 Best Val. Loss: 0.202
2024-11-05 02:53 - INFO - 	 Best ROC-AUC: 0.731
2024-11-05 02:53 - INFO - 	 Best PR-AUC: 0.165
2024-11-05 02:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.688
2024-11-05 02:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-05 02:53 - INFO - 	 Best Recall for 0.4 precision: 0.094
2024-11-05 02:53 - INFO - ---------------------------------------------
2024-11-05 02:55 - INFO - ---------------------------------------------
2024-11-05 02:55 - INFO - Epoch: 10 | Time: 1m 51s
2024-11-05 02:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18754
2024-11-05 02:55 - INFO - 	 Train Loss: 0.172
2024-11-05 02:55 - INFO - 	 Val. Loss: 0.192
2024-11-05 02:55 - INFO - 	 ROC-AUC: 0.734
2024-11-05 02:55 - INFO - 	 PR-AUC: 0.188
2024-11-05 02:55 - INFO - 	 Recall for 0.4 precision: 0.138
2024-11-05 02:55 - INFO - 	 Best Val. Loss: 0.192
2024-11-05 02:55 - INFO - 	 Best ROC-AUC: 0.734
2024-11-05 02:55 - INFO - 	 Best PR-AUC: 0.188
2024-11-05 02:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.698
2024-11-05 02:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.105
2024-11-05 02:55 - INFO - 	 Best Recall for 0.4 precision: 0.138
2024-11-05 02:55 - INFO - ---------------------------------------------
