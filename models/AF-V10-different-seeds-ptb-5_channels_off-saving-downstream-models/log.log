2024-10-25 14:01 - INFO - Fit the preprocessing pipeline
2024-10-25 14:01 - INFO - Training using device: cuda
2024-10-25 14:01 - INFO - Creating generators
2024-10-25 14:01 - INFO - The model has 651,257 trainable parameters
2024-10-25 14:01 - INFO - * Model:
2024-10-25 14:01 - INFO - * -----------
2024-10-25 14:01 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 14:01 - INFO - * -----------
2024-10-25 14:01 - INFO - Evaluating model based on: rocauc
2024-10-25 14:01 - INFO - Training..

2024-10-25 14:02 - INFO - ---------------------------------------------
2024-10-25 14:02 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 14:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97763
2024-10-25 14:02 - INFO - 	 Train Loss: 0.163
2024-10-25 14:02 - INFO - 	 Val. Loss: 0.084
2024-10-25 14:02 - INFO - 	 ROC-AUC: 0.978
2024-10-25 14:02 - INFO - 	 PR-AUC: 0.793
2024-10-25 14:02 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-25 14:02 - INFO - 	 Best Val. Loss: 0.084
2024-10-25 14:02 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 14:02 - INFO - 	 Best PR-AUC: 0.793
2024-10-25 14:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 14:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.780
2024-10-25 14:02 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-25 14:02 - INFO - ---------------------------------------------
2024-10-25 14:02 - INFO - ---------------------------------------------
2024-10-25 14:02 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 14:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98257
2024-10-25 14:02 - INFO - 	 Train Loss: 0.088
2024-10-25 14:02 - INFO - 	 Val. Loss: 0.074
2024-10-25 14:02 - INFO - 	 ROC-AUC: 0.983
2024-10-25 14:02 - INFO - 	 PR-AUC: 0.833
2024-10-25 14:02 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 14:02 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 14:02 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 14:02 - INFO - 	 Best PR-AUC: 0.833
2024-10-25 14:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 14:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-25 14:02 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 14:02 - INFO - ---------------------------------------------
2024-10-25 14:03 - INFO - ---------------------------------------------
2024-10-25 14:03 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 14:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9858
2024-10-25 14:03 - INFO - 	 Train Loss: 0.077
2024-10-25 14:03 - INFO - 	 Val. Loss: 0.063
2024-10-25 14:03 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:03 - INFO - 	 PR-AUC: 0.876
2024-10-25 14:03 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 14:03 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 14:03 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:03 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 14:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 14:03 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 14:03 - INFO - ---------------------------------------------
2024-10-25 14:03 - INFO - ---------------------------------------------
2024-10-25 14:03 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 14:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98671
2024-10-25 14:03 - INFO - 	 Train Loss: 0.072
2024-10-25 14:03 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:03 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:03 - INFO - 	 PR-AUC: 0.874
2024-10-25 14:03 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:03 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 14:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:03 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 14:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 14:03 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 14:03 - INFO - ---------------------------------------------
2024-10-25 14:04 - INFO - ---------------------------------------------
2024-10-25 14:04 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 14:04 - INFO - 	 Train Loss: 0.069
2024-10-25 14:04 - INFO - 	 Val. Loss: 0.072
2024-10-25 14:04 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:04 - INFO - 	 PR-AUC: 0.879
2024-10-25 14:04 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:04 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 14:04 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:04 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 14:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 14:04 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 14:04 - INFO - ---------------------------------------------
2024-10-25 14:04 - INFO - ---------------------------------------------
2024-10-25 14:04 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 14:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98698
2024-10-25 14:04 - INFO - 	 Train Loss: 0.068
2024-10-25 14:04 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:04 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:04 - INFO - 	 PR-AUC: 0.870
2024-10-25 14:04 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:04 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 14:04 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:04 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 14:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 14:04 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:04 - INFO - ---------------------------------------------
2024-10-25 14:05 - INFO - ---------------------------------------------
2024-10-25 14:05 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 14:05 - INFO - 	 Train Loss: 0.065
2024-10-25 14:05 - INFO - 	 Val. Loss: 0.062
2024-10-25 14:05 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:05 - INFO - 	 PR-AUC: 0.876
2024-10-25 14:05 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:05 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 14:05 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:05 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 14:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 14:05 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:05 - INFO - ---------------------------------------------
2024-10-25 14:05 - INFO - ---------------------------------------------
2024-10-25 14:05 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 14:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9879
2024-10-25 14:05 - INFO - 	 Train Loss: 0.064
2024-10-25 14:05 - INFO - 	 Val. Loss: 0.060
2024-10-25 14:05 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:05 - INFO - 	 PR-AUC: 0.881
2024-10-25 14:05 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:05 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 14:05 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:05 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 14:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 14:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:05 - INFO - ---------------------------------------------
2024-10-25 14:06 - INFO - ---------------------------------------------
2024-10-25 14:06 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 14:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98799
2024-10-25 14:06 - INFO - 	 Train Loss: 0.061
2024-10-25 14:06 - INFO - 	 Val. Loss: 0.059
2024-10-25 14:06 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:06 - INFO - 	 PR-AUC: 0.883
2024-10-25 14:06 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:06 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 14:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:06 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 14:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 14:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-25 14:06 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:06 - INFO - ---------------------------------------------
2024-10-25 14:06 - INFO - ---------------------------------------------
2024-10-25 14:06 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 14:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98923
2024-10-25 14:06 - INFO - 	 Train Loss: 0.059
2024-10-25 14:06 - INFO - 	 Val. Loss: 0.058
2024-10-25 14:06 - INFO - 	 ROC-AUC: 0.989
2024-10-25 14:06 - INFO - 	 PR-AUC: 0.894
2024-10-25 14:06 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 14:06 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 14:06 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 14:06 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 14:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 14:06 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 14:06 - INFO - ---------------------------------------------
2024-10-25 14:08 - INFO - Fit the preprocessing pipeline
2024-10-25 14:08 - INFO - Training using device: cuda
2024-10-25 14:08 - INFO - Creating generators
2024-10-25 14:08 - INFO - The model has 651,257 trainable parameters
2024-10-25 14:08 - INFO - * Model:
2024-10-25 14:08 - INFO - * -----------
2024-10-25 14:08 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 14:08 - INFO - * -----------
2024-10-25 14:08 - INFO - Evaluating model based on: rocauc
2024-10-25 14:08 - INFO - Training..

2024-10-25 14:09 - INFO - ---------------------------------------------
2024-10-25 14:09 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 14:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98109
2024-10-25 14:09 - INFO - 	 Train Loss: 0.153
2024-10-25 14:09 - INFO - 	 Val. Loss: 0.077
2024-10-25 14:09 - INFO - 	 ROC-AUC: 0.981
2024-10-25 14:09 - INFO - 	 PR-AUC: 0.821
2024-10-25 14:09 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:09 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 14:09 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 14:09 - INFO - 	 Best PR-AUC: 0.821
2024-10-25 14:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 14:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.796
2024-10-25 14:09 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 14:09 - INFO - ---------------------------------------------
2024-10-25 14:09 - INFO - ---------------------------------------------
2024-10-25 14:09 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 14:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98433
2024-10-25 14:09 - INFO - 	 Train Loss: 0.085
2024-10-25 14:09 - INFO - 	 Val. Loss: 0.070
2024-10-25 14:09 - INFO - 	 ROC-AUC: 0.984
2024-10-25 14:09 - INFO - 	 PR-AUC: 0.852
2024-10-25 14:09 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 14:09 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 14:09 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 14:09 - INFO - 	 Best PR-AUC: 0.852
2024-10-25 14:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-25 14:09 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 14:09 - INFO - ---------------------------------------------
2024-10-25 14:10 - INFO - ---------------------------------------------
2024-10-25 14:10 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 14:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98642
2024-10-25 14:10 - INFO - 	 Train Loss: 0.076
2024-10-25 14:10 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:10 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:10 - INFO - 	 PR-AUC: 0.865
2024-10-25 14:10 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:10 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 14:10 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:10 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 14:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-25 14:10 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:10 - INFO - ---------------------------------------------
2024-10-25 14:10 - INFO - ---------------------------------------------
2024-10-25 14:10 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 14:10 - INFO - 	 Train Loss: 0.071
2024-10-25 14:10 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:10 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:10 - INFO - 	 PR-AUC: 0.872
2024-10-25 14:10 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:10 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 14:10 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:10 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 14:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 14:10 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:10 - INFO - ---------------------------------------------
2024-10-25 14:11 - INFO - ---------------------------------------------
2024-10-25 14:11 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 14:11 - INFO - 	 Train Loss: 0.068
2024-10-25 14:11 - INFO - 	 Val. Loss: 0.065
2024-10-25 14:11 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:11 - INFO - 	 PR-AUC: 0.868
2024-10-25 14:11 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:11 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 14:11 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:11 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 14:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 14:11 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:11 - INFO - ---------------------------------------------
2024-10-25 14:11 - INFO - ---------------------------------------------
2024-10-25 14:11 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 14:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98724
2024-10-25 14:11 - INFO - 	 Train Loss: 0.065
2024-10-25 14:11 - INFO - 	 Val. Loss: 0.060
2024-10-25 14:11 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:11 - INFO - 	 PR-AUC: 0.879
2024-10-25 14:11 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:11 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 14:11 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:11 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 14:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 14:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 14:11 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:11 - INFO - ---------------------------------------------
2024-10-25 14:12 - INFO - ---------------------------------------------
2024-10-25 14:12 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 14:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98743
2024-10-25 14:12 - INFO - 	 Train Loss: 0.064
2024-10-25 14:12 - INFO - 	 Val. Loss: 0.061
2024-10-25 14:12 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:12 - INFO - 	 PR-AUC: 0.884
2024-10-25 14:12 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:12 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 14:12 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:12 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 14:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-25 14:12 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:12 - INFO - ---------------------------------------------
2024-10-25 14:12 - INFO - ---------------------------------------------
2024-10-25 14:12 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 14:12 - INFO - 	 Train Loss: 0.062
2024-10-25 14:12 - INFO - 	 Val. Loss: 0.059
2024-10-25 14:12 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:12 - INFO - 	 PR-AUC: 0.891
2024-10-25 14:12 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:12 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 14:12 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:12 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 14:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 14:12 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:12 - INFO - ---------------------------------------------
2024-10-25 14:13 - INFO - ---------------------------------------------
2024-10-25 14:13 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 14:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98859
2024-10-25 14:13 - INFO - 	 Train Loss: 0.061
2024-10-25 14:13 - INFO - 	 Val. Loss: 0.056
2024-10-25 14:13 - INFO - 	 ROC-AUC: 0.989
2024-10-25 14:13 - INFO - 	 PR-AUC: 0.903
2024-10-25 14:13 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 14:13 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 14:13 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 14:13 - INFO - 	 Best PR-AUC: 0.903
2024-10-25 14:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 14:13 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 14:13 - INFO - ---------------------------------------------
2024-10-25 14:13 - INFO - ---------------------------------------------
2024-10-25 14:13 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 14:13 - INFO - 	 Train Loss: 0.060
2024-10-25 14:13 - INFO - 	 Val. Loss: 0.059
2024-10-25 14:13 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:13 - INFO - 	 PR-AUC: 0.889
2024-10-25 14:13 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:13 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 14:13 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 14:13 - INFO - 	 Best PR-AUC: 0.903
2024-10-25 14:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 14:13 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 14:13 - INFO - ---------------------------------------------
2024-10-25 14:15 - INFO - Fit the preprocessing pipeline
2024-10-25 14:15 - INFO - Training using device: cuda
2024-10-25 14:15 - INFO - Creating generators
2024-10-25 14:15 - INFO - The model has 651,257 trainable parameters
2024-10-25 14:15 - INFO - * Model:
2024-10-25 14:15 - INFO - * -----------
2024-10-25 14:15 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 14:15 - INFO - * -----------
2024-10-25 14:15 - INFO - Evaluating model based on: rocauc
2024-10-25 14:15 - INFO - Training..

2024-10-25 14:15 - INFO - ---------------------------------------------
2024-10-25 14:15 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 14:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97422
2024-10-25 14:15 - INFO - 	 Train Loss: 0.164
2024-10-25 14:15 - INFO - 	 Val. Loss: 0.104
2024-10-25 14:15 - INFO - 	 ROC-AUC: 0.974
2024-10-25 14:15 - INFO - 	 PR-AUC: 0.756
2024-10-25 14:15 - INFO - 	 Recall for 0.4 precision: 0.956
2024-10-25 14:15 - INFO - 	 Best Val. Loss: 0.104
2024-10-25 14:15 - INFO - 	 Best ROC-AUC: 0.974
2024-10-25 14:15 - INFO - 	 Best PR-AUC: 0.756
2024-10-25 14:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 14:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-25 14:15 - INFO - 	 Best Recall for 0.4 precision: 0.956
2024-10-25 14:15 - INFO - ---------------------------------------------
2024-10-25 14:16 - INFO - ---------------------------------------------
2024-10-25 14:16 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 14:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98506
2024-10-25 14:16 - INFO - 	 Train Loss: 0.086
2024-10-25 14:16 - INFO - 	 Val. Loss: 0.068
2024-10-25 14:16 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:16 - INFO - 	 PR-AUC: 0.850
2024-10-25 14:16 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:16 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 14:16 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 14:16 - INFO - 	 Best PR-AUC: 0.850
2024-10-25 14:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 14:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 14:16 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:16 - INFO - ---------------------------------------------
2024-10-25 14:17 - INFO - ---------------------------------------------
2024-10-25 14:17 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 14:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98541
2024-10-25 14:17 - INFO - 	 Train Loss: 0.074
2024-10-25 14:17 - INFO - 	 Val. Loss: 0.069
2024-10-25 14:17 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:17 - INFO - 	 PR-AUC: 0.862
2024-10-25 14:17 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:17 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 14:17 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 14:17 - INFO - 	 Best PR-AUC: 0.862
2024-10-25 14:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-25 14:17 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:17 - INFO - ---------------------------------------------
2024-10-25 14:17 - INFO - ---------------------------------------------
2024-10-25 14:17 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 14:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98549
2024-10-25 14:17 - INFO - 	 Train Loss: 0.071
2024-10-25 14:17 - INFO - 	 Val. Loss: 0.067
2024-10-25 14:17 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:17 - INFO - 	 PR-AUC: 0.869
2024-10-25 14:17 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:17 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 14:17 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 14:17 - INFO - 	 Best PR-AUC: 0.869
2024-10-25 14:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-25 14:17 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:17 - INFO - ---------------------------------------------
2024-10-25 14:18 - INFO - ---------------------------------------------
2024-10-25 14:18 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 14:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98641
2024-10-25 14:18 - INFO - 	 Train Loss: 0.068
2024-10-25 14:18 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:18 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:18 - INFO - 	 PR-AUC: 0.873
2024-10-25 14:18 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:18 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 14:18 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:18 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 14:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 14:18 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:18 - INFO - ---------------------------------------------
2024-10-25 14:18 - INFO - ---------------------------------------------
2024-10-25 14:18 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 14:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98718
2024-10-25 14:18 - INFO - 	 Train Loss: 0.066
2024-10-25 14:18 - INFO - 	 Val. Loss: 0.062
2024-10-25 14:18 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:18 - INFO - 	 PR-AUC: 0.875
2024-10-25 14:18 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:18 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 14:18 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:18 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 14:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 14:18 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:18 - INFO - ---------------------------------------------
2024-10-25 14:19 - INFO - ---------------------------------------------
2024-10-25 14:19 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 14:19 - INFO - 	 Train Loss: 0.065
2024-10-25 14:19 - INFO - 	 Val. Loss: 0.061
2024-10-25 14:19 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:19 - INFO - 	 PR-AUC: 0.881
2024-10-25 14:19 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:19 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 14:19 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:19 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 14:19 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:19 - INFO - ---------------------------------------------
2024-10-25 14:19 - INFO - ---------------------------------------------
2024-10-25 14:19 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 14:19 - INFO - 	 Train Loss: 0.062
2024-10-25 14:19 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:19 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:19 - INFO - 	 PR-AUC: 0.883
2024-10-25 14:19 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:19 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 14:19 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:19 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 14:19 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:19 - INFO - ---------------------------------------------
2024-10-25 14:20 - INFO - ---------------------------------------------
2024-10-25 14:20 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 14:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98809
2024-10-25 14:20 - INFO - 	 Train Loss: 0.061
2024-10-25 14:20 - INFO - 	 Val. Loss: 0.058
2024-10-25 14:20 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:20 - INFO - 	 PR-AUC: 0.894
2024-10-25 14:20 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:20 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 14:20 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:20 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 14:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 14:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:20 - INFO - ---------------------------------------------
2024-10-25 14:20 - INFO - ---------------------------------------------
2024-10-25 14:20 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 14:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98873
2024-10-25 14:20 - INFO - 	 Train Loss: 0.060
2024-10-25 14:20 - INFO - 	 Val. Loss: 0.059
2024-10-25 14:20 - INFO - 	 ROC-AUC: 0.989
2024-10-25 14:20 - INFO - 	 PR-AUC: 0.897
2024-10-25 14:20 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:20 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 14:20 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 14:20 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 14:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-25 14:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:20 - INFO - ---------------------------------------------
2024-10-25 14:22 - INFO - Fit the preprocessing pipeline
2024-10-25 14:22 - INFO - Training using device: cuda
2024-10-25 14:22 - INFO - Creating generators
2024-10-25 14:22 - INFO - The model has 651,257 trainable parameters
2024-10-25 14:22 - INFO - * Model:
2024-10-25 14:22 - INFO - * -----------
2024-10-25 14:22 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 14:22 - INFO - * -----------
2024-10-25 14:22 - INFO - Evaluating model based on: rocauc
2024-10-25 14:22 - INFO - Training..

2024-10-25 14:22 - INFO - ---------------------------------------------
2024-10-25 14:22 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 14:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97836
2024-10-25 14:22 - INFO - 	 Train Loss: 0.156
2024-10-25 14:22 - INFO - 	 Val. Loss: 0.086
2024-10-25 14:22 - INFO - 	 ROC-AUC: 0.978
2024-10-25 14:22 - INFO - 	 PR-AUC: 0.791
2024-10-25 14:22 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-25 14:22 - INFO - 	 Best Val. Loss: 0.086
2024-10-25 14:22 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 14:22 - INFO - 	 Best PR-AUC: 0.791
2024-10-25 14:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 14:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-25 14:22 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-25 14:22 - INFO - ---------------------------------------------
2024-10-25 14:23 - INFO - ---------------------------------------------
2024-10-25 14:23 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 14:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98384
2024-10-25 14:23 - INFO - 	 Train Loss: 0.085
2024-10-25 14:23 - INFO - 	 Val. Loss: 0.073
2024-10-25 14:23 - INFO - 	 ROC-AUC: 0.984
2024-10-25 14:23 - INFO - 	 PR-AUC: 0.848
2024-10-25 14:23 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:23 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 14:23 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 14:23 - INFO - 	 Best PR-AUC: 0.848
2024-10-25 14:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-25 14:23 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 14:23 - INFO - ---------------------------------------------
2024-10-25 14:23 - INFO - ---------------------------------------------
2024-10-25 14:23 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 14:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98455
2024-10-25 14:23 - INFO - 	 Train Loss: 0.077
2024-10-25 14:23 - INFO - 	 Val. Loss: 0.065
2024-10-25 14:23 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:23 - INFO - 	 PR-AUC: 0.871
2024-10-25 14:23 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 14:23 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 14:23 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 14:23 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 14:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 14:23 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 14:23 - INFO - ---------------------------------------------
2024-10-25 14:24 - INFO - ---------------------------------------------
2024-10-25 14:24 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 14:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98605
2024-10-25 14:24 - INFO - 	 Train Loss: 0.072
2024-10-25 14:24 - INFO - 	 Val. Loss: 0.066
2024-10-25 14:24 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:24 - INFO - 	 PR-AUC: 0.875
2024-10-25 14:24 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:24 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 14:24 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:24 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 14:24 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 14:24 - INFO - ---------------------------------------------
2024-10-25 14:24 - INFO - ---------------------------------------------
2024-10-25 14:24 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 14:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98773
2024-10-25 14:24 - INFO - 	 Train Loss: 0.067
2024-10-25 14:24 - INFO - 	 Val. Loss: 0.061
2024-10-25 14:24 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:24 - INFO - 	 PR-AUC: 0.883
2024-10-25 14:24 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:24 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 14:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:24 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 14:24 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:24 - INFO - ---------------------------------------------
2024-10-25 14:25 - INFO - ---------------------------------------------
2024-10-25 14:25 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 14:25 - INFO - 	 Train Loss: 0.066
2024-10-25 14:25 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:25 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:25 - INFO - 	 PR-AUC: 0.876
2024-10-25 14:25 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 14:25 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 14:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:25 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 14:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 14:25 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 14:25 - INFO - ---------------------------------------------
2024-10-25 14:25 - INFO - ---------------------------------------------
2024-10-25 14:25 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 14:25 - INFO - 	 Train Loss: 0.065
2024-10-25 14:25 - INFO - 	 Val. Loss: 0.063
2024-10-25 14:25 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:25 - INFO - 	 PR-AUC: 0.880
2024-10-25 14:25 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:25 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 14:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:25 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 14:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 14:25 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 14:25 - INFO - ---------------------------------------------
2024-10-25 14:26 - INFO - ---------------------------------------------
2024-10-25 14:26 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 14:26 - INFO - 	 Train Loss: 0.062
2024-10-25 14:26 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:26 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:26 - INFO - 	 PR-AUC: 0.884
2024-10-25 14:26 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:26 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 14:26 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:26 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 14:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 14:26 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 14:26 - INFO - ---------------------------------------------
2024-10-25 14:28 - INFO - Fit the preprocessing pipeline
2024-10-25 14:28 - INFO - Training using device: cuda
2024-10-25 14:28 - INFO - Creating generators
2024-10-25 14:28 - INFO - The model has 651,257 trainable parameters
2024-10-25 14:28 - INFO - * Model:
2024-10-25 14:28 - INFO - * -----------
2024-10-25 14:28 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 14:28 - INFO - * -----------
2024-10-25 14:28 - INFO - Evaluating model based on: rocauc
2024-10-25 14:28 - INFO - Training..

2024-10-25 14:28 - INFO - ---------------------------------------------
2024-10-25 14:28 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 14:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97757
2024-10-25 14:28 - INFO - 	 Train Loss: 0.163
2024-10-25 14:28 - INFO - 	 Val. Loss: 0.091
2024-10-25 14:28 - INFO - 	 ROC-AUC: 0.978
2024-10-25 14:28 - INFO - 	 PR-AUC: 0.804
2024-10-25 14:28 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 14:28 - INFO - 	 Best Val. Loss: 0.091
2024-10-25 14:28 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 14:28 - INFO - 	 Best PR-AUC: 0.804
2024-10-25 14:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-25 14:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.766
2024-10-25 14:28 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 14:28 - INFO - ---------------------------------------------
2024-10-25 14:29 - INFO - ---------------------------------------------
2024-10-25 14:29 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 14:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98342
2024-10-25 14:29 - INFO - 	 Train Loss: 0.086
2024-10-25 14:29 - INFO - 	 Val. Loss: 0.079
2024-10-25 14:29 - INFO - 	 ROC-AUC: 0.983
2024-10-25 14:29 - INFO - 	 PR-AUC: 0.841
2024-10-25 14:29 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:29 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 14:29 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 14:29 - INFO - 	 Best PR-AUC: 0.841
2024-10-25 14:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 14:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-25 14:29 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 14:29 - INFO - ---------------------------------------------
2024-10-25 14:30 - INFO - ---------------------------------------------
2024-10-25 14:30 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 14:30 - INFO - 	 Train Loss: 0.077
2024-10-25 14:30 - INFO - 	 Val. Loss: 0.082
2024-10-25 14:30 - INFO - 	 ROC-AUC: 0.981
2024-10-25 14:30 - INFO - 	 PR-AUC: 0.830
2024-10-25 14:30 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 14:30 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 14:30 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 14:30 - INFO - 	 Best PR-AUC: 0.841
2024-10-25 14:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 14:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-25 14:30 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 14:30 - INFO - ---------------------------------------------
2024-10-25 14:30 - INFO - ---------------------------------------------
2024-10-25 14:30 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 14:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98475
2024-10-25 14:30 - INFO - 	 Train Loss: 0.071
2024-10-25 14:30 - INFO - 	 Val. Loss: 0.068
2024-10-25 14:30 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:30 - INFO - 	 PR-AUC: 0.869
2024-10-25 14:30 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:30 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 14:30 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 14:30 - INFO - 	 Best PR-AUC: 0.869
2024-10-25 14:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 14:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-25 14:30 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 14:30 - INFO - ---------------------------------------------
2024-10-25 14:31 - INFO - ---------------------------------------------
2024-10-25 14:31 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 14:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98645
2024-10-25 14:31 - INFO - 	 Train Loss: 0.068
2024-10-25 14:31 - INFO - 	 Val. Loss: 0.067
2024-10-25 14:31 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:31 - INFO - 	 PR-AUC: 0.877
2024-10-25 14:31 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:31 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 14:31 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:31 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 14:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 14:31 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 14:31 - INFO - ---------------------------------------------
2024-10-25 14:31 - INFO - ---------------------------------------------
2024-10-25 14:31 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 14:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98711
2024-10-25 14:31 - INFO - 	 Train Loss: 0.065
2024-10-25 14:31 - INFO - 	 Val. Loss: 0.065
2024-10-25 14:31 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:31 - INFO - 	 PR-AUC: 0.865
2024-10-25 14:31 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:31 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 14:31 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:31 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 14:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 14:31 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:31 - INFO - ---------------------------------------------
2024-10-25 14:32 - INFO - ---------------------------------------------
2024-10-25 14:32 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 14:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98713
2024-10-25 14:32 - INFO - 	 Train Loss: 0.064
2024-10-25 14:32 - INFO - 	 Val. Loss: 0.062
2024-10-25 14:32 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:32 - INFO - 	 PR-AUC: 0.879
2024-10-25 14:32 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:32 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 14:32 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:32 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 14:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 14:32 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:32 - INFO - ---------------------------------------------
2024-10-25 14:32 - INFO - ---------------------------------------------
2024-10-25 14:32 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 14:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98752
2024-10-25 14:32 - INFO - 	 Train Loss: 0.063
2024-10-25 14:32 - INFO - 	 Val. Loss: 0.067
2024-10-25 14:32 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:32 - INFO - 	 PR-AUC: 0.882
2024-10-25 14:32 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:32 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 14:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:32 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 14:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 14:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:32 - INFO - ---------------------------------------------
2024-10-25 14:33 - INFO - ---------------------------------------------
2024-10-25 14:33 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 14:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98824
2024-10-25 14:33 - INFO - 	 Train Loss: 0.061
2024-10-25 14:33 - INFO - 	 Val. Loss: 0.060
2024-10-25 14:33 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:33 - INFO - 	 PR-AUC: 0.888
2024-10-25 14:33 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:33 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 14:33 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:33 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 14:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 14:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:33 - INFO - ---------------------------------------------
2024-10-25 14:33 - INFO - ---------------------------------------------
2024-10-25 14:33 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 14:33 - INFO - 	 Train Loss: 0.059
2024-10-25 14:33 - INFO - 	 Val. Loss: 0.062
2024-10-25 14:33 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:33 - INFO - 	 PR-AUC: 0.881
2024-10-25 14:33 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:33 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 14:33 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:33 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 14:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 14:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:33 - INFO - ---------------------------------------------
2024-10-25 14:35 - INFO - Fit the preprocessing pipeline
2024-10-25 14:35 - INFO - Training using device: cuda
2024-10-25 14:35 - INFO - Creating generators
2024-10-25 14:35 - INFO - The model has 651,257 trainable parameters
2024-10-25 14:35 - INFO - * Model:
2024-10-25 14:35 - INFO - * -----------
2024-10-25 14:35 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 14:35 - INFO - * -----------
2024-10-25 14:35 - INFO - Evaluating model based on: rocauc
2024-10-25 14:35 - INFO - Training..

2024-10-25 14:35 - INFO - ---------------------------------------------
2024-10-25 14:35 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 14:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97408
2024-10-25 14:35 - INFO - 	 Train Loss: 0.166
2024-10-25 14:35 - INFO - 	 Val. Loss: 0.092
2024-10-25 14:35 - INFO - 	 ROC-AUC: 0.974
2024-10-25 14:35 - INFO - 	 PR-AUC: 0.761
2024-10-25 14:35 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-25 14:35 - INFO - 	 Best Val. Loss: 0.092
2024-10-25 14:35 - INFO - 	 Best ROC-AUC: 0.974
2024-10-25 14:35 - INFO - 	 Best PR-AUC: 0.761
2024-10-25 14:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 14:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-10-25 14:35 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-25 14:35 - INFO - ---------------------------------------------
2024-10-25 14:36 - INFO - ---------------------------------------------
2024-10-25 14:36 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 14:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98533
2024-10-25 14:36 - INFO - 	 Train Loss: 0.086
2024-10-25 14:36 - INFO - 	 Val. Loss: 0.067
2024-10-25 14:36 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:36 - INFO - 	 PR-AUC: 0.871
2024-10-25 14:36 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:36 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 14:36 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 14:36 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 14:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-25 14:36 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 14:36 - INFO - ---------------------------------------------
2024-10-25 14:36 - INFO - ---------------------------------------------
2024-10-25 14:36 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 14:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98623
2024-10-25 14:36 - INFO - 	 Train Loss: 0.076
2024-10-25 14:36 - INFO - 	 Val. Loss: 0.066
2024-10-25 14:36 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:36 - INFO - 	 PR-AUC: 0.873
2024-10-25 14:36 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:36 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 14:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:36 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 14:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 14:36 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:36 - INFO - ---------------------------------------------
2024-10-25 14:37 - INFO - ---------------------------------------------
2024-10-25 14:37 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 14:37 - INFO - 	 Train Loss: 0.072
2024-10-25 14:37 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:37 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:37 - INFO - 	 PR-AUC: 0.883
2024-10-25 14:37 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:37 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 14:37 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:37 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 14:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 14:37 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:37 - INFO - ---------------------------------------------
2024-10-25 14:37 - INFO - ---------------------------------------------
2024-10-25 14:37 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 14:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98727
2024-10-25 14:37 - INFO - 	 Train Loss: 0.067
2024-10-25 14:37 - INFO - 	 Val. Loss: 0.060
2024-10-25 14:37 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:37 - INFO - 	 PR-AUC: 0.881
2024-10-25 14:37 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:37 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 14:37 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:37 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 14:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 14:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:37 - INFO - ---------------------------------------------
2024-10-25 14:38 - INFO - ---------------------------------------------
2024-10-25 14:38 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 14:38 - INFO - 	 Train Loss: 0.065
2024-10-25 14:38 - INFO - 	 Val. Loss: 0.062
2024-10-25 14:38 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:38 - INFO - 	 PR-AUC: 0.876
2024-10-25 14:38 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:38 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 14:38 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:38 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 14:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 14:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:38 - INFO - ---------------------------------------------
2024-10-25 14:39 - INFO - ---------------------------------------------
2024-10-25 14:39 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 14:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98759
2024-10-25 14:39 - INFO - 	 Train Loss: 0.063
2024-10-25 14:39 - INFO - 	 Val. Loss: 0.061
2024-10-25 14:39 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:39 - INFO - 	 PR-AUC: 0.880
2024-10-25 14:39 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 14:39 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 14:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:39 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 14:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 14:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:39 - INFO - ---------------------------------------------
2024-10-25 14:39 - INFO - ---------------------------------------------
2024-10-25 14:39 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 14:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98833
2024-10-25 14:39 - INFO - 	 Train Loss: 0.061
2024-10-25 14:39 - INFO - 	 Val. Loss: 0.057
2024-10-25 14:39 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:39 - INFO - 	 PR-AUC: 0.887
2024-10-25 14:39 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:39 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 14:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:39 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 14:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 14:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:39 - INFO - ---------------------------------------------
2024-10-25 14:40 - INFO - ---------------------------------------------
2024-10-25 14:40 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 14:40 - INFO - 	 Train Loss: 0.060
2024-10-25 14:40 - INFO - 	 Val. Loss: 0.059
2024-10-25 14:40 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:40 - INFO - 	 PR-AUC: 0.891
2024-10-25 14:40 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:40 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 14:40 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:40 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 14:40 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:40 - INFO - ---------------------------------------------
2024-10-25 14:40 - INFO - ---------------------------------------------
2024-10-25 14:40 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 14:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98884
2024-10-25 14:40 - INFO - 	 Train Loss: 0.059
2024-10-25 14:40 - INFO - 	 Val. Loss: 0.057
2024-10-25 14:40 - INFO - 	 ROC-AUC: 0.989
2024-10-25 14:40 - INFO - 	 PR-AUC: 0.896
2024-10-25 14:40 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 14:40 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 14:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 14:40 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 14:40 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 14:40 - INFO - ---------------------------------------------
2024-10-25 14:42 - INFO - Fit the preprocessing pipeline
2024-10-25 14:42 - INFO - Training using device: cuda
2024-10-25 14:42 - INFO - Creating generators
2024-10-25 14:42 - INFO - The model has 651,257 trainable parameters
2024-10-25 14:42 - INFO - * Model:
2024-10-25 14:42 - INFO - * -----------
2024-10-25 14:42 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 14:42 - INFO - * -----------
2024-10-25 14:42 - INFO - Evaluating model based on: rocauc
2024-10-25 14:42 - INFO - Training..

2024-10-25 14:42 - INFO - ---------------------------------------------
2024-10-25 14:42 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 14:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97905
2024-10-25 14:42 - INFO - 	 Train Loss: 0.163
2024-10-25 14:42 - INFO - 	 Val. Loss: 0.083
2024-10-25 14:42 - INFO - 	 ROC-AUC: 0.979
2024-10-25 14:42 - INFO - 	 PR-AUC: 0.809
2024-10-25 14:42 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 14:42 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 14:42 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 14:42 - INFO - 	 Best PR-AUC: 0.809
2024-10-25 14:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 14:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.782
2024-10-25 14:42 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 14:42 - INFO - ---------------------------------------------
2024-10-25 14:43 - INFO - ---------------------------------------------
2024-10-25 14:43 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 14:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98244
2024-10-25 14:43 - INFO - 	 Train Loss: 0.087
2024-10-25 14:43 - INFO - 	 Val. Loss: 0.073
2024-10-25 14:43 - INFO - 	 ROC-AUC: 0.982
2024-10-25 14:43 - INFO - 	 PR-AUC: 0.834
2024-10-25 14:43 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:43 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 14:43 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 14:43 - INFO - 	 Best PR-AUC: 0.834
2024-10-25 14:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 14:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-25 14:43 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:43 - INFO - ---------------------------------------------
2024-10-25 14:43 - INFO - ---------------------------------------------
2024-10-25 14:43 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 14:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98575
2024-10-25 14:43 - INFO - 	 Train Loss: 0.076
2024-10-25 14:43 - INFO - 	 Val. Loss: 0.065
2024-10-25 14:43 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:43 - INFO - 	 PR-AUC: 0.867
2024-10-25 14:43 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:43 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 14:43 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:43 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 14:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-25 14:43 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:43 - INFO - ---------------------------------------------
2024-10-25 14:44 - INFO - ---------------------------------------------
2024-10-25 14:44 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 14:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98648
2024-10-25 14:44 - INFO - 	 Train Loss: 0.071
2024-10-25 14:44 - INFO - 	 Val. Loss: 0.065
2024-10-25 14:44 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:44 - INFO - 	 PR-AUC: 0.876
2024-10-25 14:44 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:44 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 14:44 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:44 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 14:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 14:44 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:44 - INFO - ---------------------------------------------
2024-10-25 14:44 - INFO - ---------------------------------------------
2024-10-25 14:44 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 14:44 - INFO - 	 Train Loss: 0.069
2024-10-25 14:44 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:44 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:44 - INFO - 	 PR-AUC: 0.870
2024-10-25 14:44 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:44 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 14:44 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:44 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 14:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 14:44 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 14:44 - INFO - ---------------------------------------------
2024-10-25 14:45 - INFO - ---------------------------------------------
2024-10-25 14:45 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 14:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98711
2024-10-25 14:45 - INFO - 	 Train Loss: 0.066
2024-10-25 14:45 - INFO - 	 Val. Loss: 0.062
2024-10-25 14:45 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:45 - INFO - 	 PR-AUC: 0.866
2024-10-25 14:45 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:45 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 14:45 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:45 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 14:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 14:45 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:45 - INFO - ---------------------------------------------
2024-10-25 14:45 - INFO - ---------------------------------------------
2024-10-25 14:45 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 14:45 - INFO - 	 Train Loss: 0.064
2024-10-25 14:45 - INFO - 	 Val. Loss: 0.063
2024-10-25 14:45 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:45 - INFO - 	 PR-AUC: 0.875
2024-10-25 14:45 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:45 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 14:45 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:45 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 14:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 14:45 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:45 - INFO - ---------------------------------------------
2024-10-25 14:46 - INFO - ---------------------------------------------
2024-10-25 14:46 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 14:46 - INFO - 	 Train Loss: 0.062
2024-10-25 14:46 - INFO - 	 Val. Loss: 0.061
2024-10-25 14:46 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:46 - INFO - 	 PR-AUC: 0.883
2024-10-25 14:46 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:46 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 14:46 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:46 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 14:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-25 14:46 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:46 - INFO - ---------------------------------------------
2024-10-25 14:47 - INFO - ---------------------------------------------
2024-10-25 14:47 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 14:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98794
2024-10-25 14:47 - INFO - 	 Train Loss: 0.061
2024-10-25 14:47 - INFO - 	 Val. Loss: 0.058
2024-10-25 14:47 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:47 - INFO - 	 PR-AUC: 0.891
2024-10-25 14:47 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:47 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 14:47 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:47 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 14:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-25 14:47 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:47 - INFO - ---------------------------------------------
2024-10-25 14:47 - INFO - ---------------------------------------------
2024-10-25 14:47 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 14:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98822
2024-10-25 14:47 - INFO - 	 Train Loss: 0.060
2024-10-25 14:47 - INFO - 	 Val. Loss: 0.058
2024-10-25 14:47 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:47 - INFO - 	 PR-AUC: 0.895
2024-10-25 14:47 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 14:47 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 14:47 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:47 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 14:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 14:47 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 14:47 - INFO - ---------------------------------------------
2024-10-25 14:49 - INFO - Fit the preprocessing pipeline
2024-10-25 14:49 - INFO - Training using device: cuda
2024-10-25 14:49 - INFO - Creating generators
2024-10-25 14:49 - INFO - The model has 651,257 trainable parameters
2024-10-25 14:49 - INFO - * Model:
2024-10-25 14:49 - INFO - * -----------
2024-10-25 14:49 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 14:49 - INFO - * -----------
2024-10-25 14:49 - INFO - Evaluating model based on: rocauc
2024-10-25 14:49 - INFO - Training..

2024-10-25 14:49 - INFO - ---------------------------------------------
2024-10-25 14:49 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 14:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.977
2024-10-25 14:49 - INFO - 	 Train Loss: 0.166
2024-10-25 14:49 - INFO - 	 Val. Loss: 0.088
2024-10-25 14:49 - INFO - 	 ROC-AUC: 0.977
2024-10-25 14:49 - INFO - 	 PR-AUC: 0.766
2024-10-25 14:49 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 14:49 - INFO - 	 Best Val. Loss: 0.088
2024-10-25 14:49 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 14:49 - INFO - 	 Best PR-AUC: 0.766
2024-10-25 14:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 14:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.765
2024-10-25 14:49 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 14:49 - INFO - ---------------------------------------------
2024-10-25 14:50 - INFO - ---------------------------------------------
2024-10-25 14:50 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 14:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98368
2024-10-25 14:50 - INFO - 	 Train Loss: 0.088
2024-10-25 14:50 - INFO - 	 Val. Loss: 0.071
2024-10-25 14:50 - INFO - 	 ROC-AUC: 0.984
2024-10-25 14:50 - INFO - 	 PR-AUC: 0.858
2024-10-25 14:50 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:50 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 14:50 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 14:50 - INFO - 	 Best PR-AUC: 0.858
2024-10-25 14:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 14:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-25 14:50 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 14:50 - INFO - ---------------------------------------------
2024-10-25 14:50 - INFO - ---------------------------------------------
2024-10-25 14:50 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 14:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98558
2024-10-25 14:50 - INFO - 	 Train Loss: 0.078
2024-10-25 14:50 - INFO - 	 Val. Loss: 0.065
2024-10-25 14:50 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:50 - INFO - 	 PR-AUC: 0.861
2024-10-25 14:50 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:50 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 14:50 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:50 - INFO - 	 Best PR-AUC: 0.861
2024-10-25 14:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 14:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 14:50 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 14:50 - INFO - ---------------------------------------------
2024-10-25 14:51 - INFO - ---------------------------------------------
2024-10-25 14:51 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 14:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9858
2024-10-25 14:51 - INFO - 	 Train Loss: 0.072
2024-10-25 14:51 - INFO - 	 Val. Loss: 0.065
2024-10-25 14:51 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:51 - INFO - 	 PR-AUC: 0.868
2024-10-25 14:51 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:51 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 14:51 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:51 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 14:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-25 14:51 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 14:51 - INFO - ---------------------------------------------
2024-10-25 14:51 - INFO - ---------------------------------------------
2024-10-25 14:51 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 14:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98684
2024-10-25 14:51 - INFO - 	 Train Loss: 0.068
2024-10-25 14:51 - INFO - 	 Val. Loss: 0.064
2024-10-25 14:51 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:51 - INFO - 	 PR-AUC: 0.873
2024-10-25 14:51 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 14:51 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 14:51 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:51 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 14:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 14:51 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:51 - INFO - ---------------------------------------------
2024-10-25 14:52 - INFO - ---------------------------------------------
2024-10-25 14:52 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 14:52 - INFO - 	 Train Loss: 0.067
2024-10-25 14:52 - INFO - 	 Val. Loss: 0.061
2024-10-25 14:52 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:52 - INFO - 	 PR-AUC: 0.881
2024-10-25 14:52 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:52 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 14:52 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:52 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 14:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 14:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 14:52 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:52 - INFO - ---------------------------------------------
2024-10-25 14:52 - INFO - ---------------------------------------------
2024-10-25 14:52 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 14:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98706
2024-10-25 14:52 - INFO - 	 Train Loss: 0.064
2024-10-25 14:52 - INFO - 	 Val. Loss: 0.061
2024-10-25 14:52 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:52 - INFO - 	 PR-AUC: 0.877
2024-10-25 14:52 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 14:52 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 14:52 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:52 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 14:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 14:52 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:52 - INFO - ---------------------------------------------
2024-10-25 14:53 - INFO - ---------------------------------------------
2024-10-25 14:53 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 14:53 - INFO - 	 Train Loss: 0.063
2024-10-25 14:53 - INFO - 	 Val. Loss: 0.060
2024-10-25 14:53 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:53 - INFO - 	 PR-AUC: 0.890
2024-10-25 14:53 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:53 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 14:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:53 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 14:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 14:53 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:53 - INFO - ---------------------------------------------
2024-10-25 14:53 - INFO - ---------------------------------------------
2024-10-25 14:53 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 14:53 - INFO - 	 Train Loss: 0.061
2024-10-25 14:53 - INFO - 	 Val. Loss: 0.059
2024-10-25 14:53 - INFO - 	 ROC-AUC: 0.987
2024-10-25 14:53 - INFO - 	 PR-AUC: 0.893
2024-10-25 14:53 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:53 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 14:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 14:53 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 14:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 14:53 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:53 - INFO - ---------------------------------------------
2024-10-25 14:54 - INFO - ---------------------------------------------
2024-10-25 14:54 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 14:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98781
2024-10-25 14:54 - INFO - 	 Train Loss: 0.060
2024-10-25 14:54 - INFO - 	 Val. Loss: 0.058
2024-10-25 14:54 - INFO - 	 ROC-AUC: 0.988
2024-10-25 14:54 - INFO - 	 PR-AUC: 0.889
2024-10-25 14:54 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:54 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 14:54 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 14:54 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 14:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 14:54 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 14:54 - INFO - ---------------------------------------------
