2024-11-04 16:07 - INFO - Fit the preprocessing pipeline
2024-11-04 16:07 - INFO - Training using device: mps
2024-11-04 16:07 - INFO - Creating generators
2024-11-04 16:07 - INFO - The model has 651,257 trainable parameters
2024-11-04 16:07 - INFO - * Model:
2024-11-04 16:07 - INFO - * -----------
2024-11-04 16:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 16:07 - INFO - * -----------
2024-11-04 16:07 - INFO - Evaluating model based on: aucpr
2024-11-04 16:07 - INFO - Training..

2024-11-04 16:08 - INFO - ---------------------------------------------
2024-11-04 16:08 - INFO - Epoch: 01 | Time: 1m 47s
2024-11-04 16:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09167
2024-11-04 16:08 - INFO - 	 Train Loss: 0.256
2024-11-04 16:08 - INFO - 	 Val. Loss: 0.299
2024-11-04 16:08 - INFO - 	 ROC-AUC: 0.640
2024-11-04 16:08 - INFO - 	 PR-AUC: 0.092
2024-11-04 16:08 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 16:08 - INFO - 	 Best Val. Loss: 0.299
2024-11-04 16:08 - INFO - 	 Best ROC-AUC: 0.640
2024-11-04 16:08 - INFO - 	 Best PR-AUC: 0.092
2024-11-04 16:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.634
2024-11-04 16:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.078
2024-11-04 16:08 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-04 16:08 - INFO - ---------------------------------------------
2024-11-04 16:10 - INFO - ---------------------------------------------
2024-11-04 16:10 - INFO - Epoch: 02 | Time: 1m 53s
2024-11-04 16:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13851
2024-11-04 16:10 - INFO - 	 Train Loss: 0.204
2024-11-04 16:10 - INFO - 	 Val. Loss: 0.249
2024-11-04 16:10 - INFO - 	 ROC-AUC: 0.758
2024-11-04 16:10 - INFO - 	 PR-AUC: 0.139
2024-11-04 16:10 - INFO - 	 Recall for 0.4 precision: 0.011
2024-11-04 16:10 - INFO - 	 Best Val. Loss: 0.249
2024-11-04 16:10 - INFO - 	 Best ROC-AUC: 0.758
2024-11-04 16:10 - INFO - 	 Best PR-AUC: 0.139
2024-11-04 16:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-04 16:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.130
2024-11-04 16:10 - INFO - 	 Best Recall for 0.4 precision: 0.011
2024-11-04 16:10 - INFO - ---------------------------------------------
2024-11-04 16:12 - INFO - ---------------------------------------------
2024-11-04 16:12 - INFO - Epoch: 03 | Time: 1m 56s
2024-11-04 16:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25282
2024-11-04 16:12 - INFO - 	 Train Loss: 0.184
2024-11-04 16:12 - INFO - 	 Val. Loss: 0.202
2024-11-04 16:12 - INFO - 	 ROC-AUC: 0.799
2024-11-04 16:12 - INFO - 	 PR-AUC: 0.253
2024-11-04 16:12 - INFO - 	 Recall for 0.4 precision: 0.166
2024-11-04 16:12 - INFO - 	 Best Val. Loss: 0.202
2024-11-04 16:12 - INFO - 	 Best ROC-AUC: 0.799
2024-11-04 16:12 - INFO - 	 Best PR-AUC: 0.253
2024-11-04 16:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-04 16:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.140
2024-11-04 16:12 - INFO - 	 Best Recall for 0.4 precision: 0.166
2024-11-04 16:12 - INFO - ---------------------------------------------
2024-11-04 16:14 - INFO - ---------------------------------------------
2024-11-04 16:14 - INFO - Epoch: 04 | Time: 1m 57s
2024-11-04 16:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31152
2024-11-04 16:14 - INFO - 	 Train Loss: 0.168
2024-11-04 16:14 - INFO - 	 Val. Loss: 0.185
2024-11-04 16:14 - INFO - 	 ROC-AUC: 0.858
2024-11-04 16:14 - INFO - 	 PR-AUC: 0.312
2024-11-04 16:14 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-04 16:14 - INFO - 	 Best Val. Loss: 0.185
2024-11-04 16:14 - INFO - 	 Best ROC-AUC: 0.858
2024-11-04 16:14 - INFO - 	 Best PR-AUC: 0.312
2024-11-04 16:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.799
2024-11-04 16:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-04 16:14 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-04 16:14 - INFO - ---------------------------------------------
2024-11-04 16:16 - INFO - ---------------------------------------------
2024-11-04 16:16 - INFO - Epoch: 05 | Time: 1m 59s
2024-11-04 16:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34551
2024-11-04 16:16 - INFO - 	 Train Loss: 0.144
2024-11-04 16:16 - INFO - 	 Val. Loss: 0.158
2024-11-04 16:16 - INFO - 	 ROC-AUC: 0.938
2024-11-04 16:16 - INFO - 	 PR-AUC: 0.346
2024-11-04 16:16 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-04 16:16 - INFO - 	 Best Val. Loss: 0.158
2024-11-04 16:16 - INFO - 	 Best ROC-AUC: 0.938
2024-11-04 16:16 - INFO - 	 Best PR-AUC: 0.346
2024-11-04 16:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-04 16:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.301
2024-11-04 16:16 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-04 16:16 - INFO - ---------------------------------------------
2024-11-04 16:18 - INFO - ---------------------------------------------
2024-11-04 16:18 - INFO - Epoch: 06 | Time: 2m 1s
2024-11-04 16:18 - INFO - 	 Train Loss: 0.128
2024-11-04 16:18 - INFO - 	 Val. Loss: 0.229
2024-11-04 16:18 - INFO - 	 ROC-AUC: 0.943
2024-11-04 16:18 - INFO - 	 PR-AUC: 0.341
2024-11-04 16:18 - INFO - 	 Recall for 0.4 precision: 0.091
2024-11-04 16:18 - INFO - 	 Best Val. Loss: 0.158
2024-11-04 16:18 - INFO - 	 Best ROC-AUC: 0.943
2024-11-04 16:18 - INFO - 	 Best PR-AUC: 0.346
2024-11-04 16:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-04 16:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.301
2024-11-04 16:18 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-04 16:18 - INFO - ---------------------------------------------
2024-11-04 16:20 - INFO - ---------------------------------------------
2024-11-04 16:20 - INFO - Epoch: 07 | Time: 2m 1s
2024-11-04 16:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48621
2024-11-04 16:20 - INFO - 	 Train Loss: 0.121
2024-11-04 16:20 - INFO - 	 Val. Loss: 0.150
2024-11-04 16:20 - INFO - 	 ROC-AUC: 0.946
2024-11-04 16:20 - INFO - 	 PR-AUC: 0.486
2024-11-04 16:20 - INFO - 	 Recall for 0.4 precision: 0.860
2024-11-04 16:20 - INFO - 	 Best Val. Loss: 0.150
2024-11-04 16:20 - INFO - 	 Best ROC-AUC: 0.946
2024-11-04 16:20 - INFO - 	 Best PR-AUC: 0.486
2024-11-04 16:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-04 16:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.356
2024-11-04 16:20 - INFO - 	 Best Recall for 0.4 precision: 0.860
2024-11-04 16:20 - INFO - ---------------------------------------------
2024-11-04 16:22 - INFO - ---------------------------------------------
2024-11-04 16:22 - INFO - Epoch: 08 | Time: 2m 0s
2024-11-04 16:22 - INFO - 	 Train Loss: 0.119
2024-11-04 16:22 - INFO - 	 Val. Loss: 0.140
2024-11-04 16:22 - INFO - 	 ROC-AUC: 0.950
2024-11-04 16:22 - INFO - 	 PR-AUC: 0.480
2024-11-04 16:22 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 16:22 - INFO - 	 Best Val. Loss: 0.140
2024-11-04 16:22 - INFO - 	 Best ROC-AUC: 0.950
2024-11-04 16:22 - INFO - 	 Best PR-AUC: 0.486
2024-11-04 16:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-04 16:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.356
2024-11-04 16:22 - INFO - 	 Best Recall for 0.4 precision: 0.860
2024-11-04 16:22 - INFO - ---------------------------------------------
2024-11-04 16:24 - INFO - ---------------------------------------------
2024-11-04 16:24 - INFO - Epoch: 09 | Time: 1m 59s
2024-11-04 16:24 - INFO - 	 Train Loss: 0.114
2024-11-04 16:24 - INFO - 	 Val. Loss: 0.135
2024-11-04 16:24 - INFO - 	 ROC-AUC: 0.944
2024-11-04 16:24 - INFO - 	 PR-AUC: 0.424
2024-11-04 16:24 - INFO - 	 Recall for 0.4 precision: 0.746
2024-11-04 16:24 - INFO - 	 Best Val. Loss: 0.135
2024-11-04 16:24 - INFO - 	 Best ROC-AUC: 0.950
2024-11-04 16:24 - INFO - 	 Best PR-AUC: 0.486
2024-11-04 16:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-04 16:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.356
2024-11-04 16:24 - INFO - 	 Best Recall for 0.4 precision: 0.860
2024-11-04 16:24 - INFO - ---------------------------------------------
2024-11-04 16:26 - INFO - ---------------------------------------------
2024-11-04 16:26 - INFO - Epoch: 10 | Time: 1m 58s
2024-11-04 16:26 - INFO - 	 Train Loss: 0.110
2024-11-04 16:26 - INFO - 	 Val. Loss: 0.182
2024-11-04 16:26 - INFO - 	 ROC-AUC: 0.921
2024-11-04 16:26 - INFO - 	 PR-AUC: 0.406
2024-11-04 16:26 - INFO - 	 Recall for 0.4 precision: 0.589
2024-11-04 16:26 - INFO - 	 Best Val. Loss: 0.135
2024-11-04 16:26 - INFO - 	 Best ROC-AUC: 0.950
2024-11-04 16:26 - INFO - 	 Best PR-AUC: 0.486
2024-11-04 16:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-04 16:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.356
2024-11-04 16:26 - INFO - 	 Best Recall for 0.4 precision: 0.860
2024-11-04 16:26 - INFO - ---------------------------------------------
2024-11-04 16:29 - INFO - Fit the preprocessing pipeline
2024-11-04 16:29 - INFO - Training using device: mps
2024-11-04 16:29 - INFO - Creating generators
2024-11-04 16:29 - INFO - The model has 651,257 trainable parameters
2024-11-04 16:29 - INFO - * Model:
2024-11-04 16:29 - INFO - * -----------
2024-11-04 16:29 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 16:29 - INFO - * -----------
2024-11-04 16:29 - INFO - Evaluating model based on: aucpr
2024-11-04 16:29 - INFO - Training..

2024-11-04 16:31 - INFO - ---------------------------------------------
2024-11-04 16:31 - INFO - Epoch: 01 | Time: 1m 44s
2024-11-04 16:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09245
2024-11-04 16:31 - INFO - 	 Train Loss: 0.256
2024-11-04 16:31 - INFO - 	 Val. Loss: 0.282
2024-11-04 16:31 - INFO - 	 ROC-AUC: 0.604
2024-11-04 16:31 - INFO - 	 PR-AUC: 0.092
2024-11-04 16:31 - INFO - 	 Recall for 0.4 precision: 0.016
2024-11-04 16:31 - INFO - 	 Best Val. Loss: 0.282
2024-11-04 16:31 - INFO - 	 Best ROC-AUC: 0.604
2024-11-04 16:31 - INFO - 	 Best PR-AUC: 0.092
2024-11-04 16:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.599
2024-11-04 16:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.077
2024-11-04 16:31 - INFO - 	 Best Recall for 0.4 precision: 0.016
2024-11-04 16:31 - INFO - ---------------------------------------------
2024-11-04 16:33 - INFO - ---------------------------------------------
2024-11-04 16:33 - INFO - Epoch: 02 | Time: 1m 53s
2024-11-04 16:33 - INFO - 	 Train Loss: 0.206
2024-11-04 16:33 - INFO - 	 Val. Loss: 0.265
2024-11-04 16:33 - INFO - 	 ROC-AUC: 0.636
2024-11-04 16:33 - INFO - 	 PR-AUC: 0.074
2024-11-04 16:33 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 16:33 - INFO - 	 Best Val. Loss: 0.265
2024-11-04 16:33 - INFO - 	 Best ROC-AUC: 0.636
2024-11-04 16:33 - INFO - 	 Best PR-AUC: 0.092
2024-11-04 16:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.646
2024-11-04 16:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.077
2024-11-04 16:33 - INFO - 	 Best Recall for 0.4 precision: 0.016
2024-11-04 16:33 - INFO - ---------------------------------------------
2024-11-04 16:34 - INFO - ---------------------------------------------
2024-11-04 16:34 - INFO - Epoch: 03 | Time: 1m 55s
2024-11-04 16:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16135
2024-11-04 16:34 - INFO - 	 Train Loss: 0.188
2024-11-04 16:34 - INFO - 	 Val. Loss: 0.212
2024-11-04 16:34 - INFO - 	 ROC-AUC: 0.735
2024-11-04 16:34 - INFO - 	 PR-AUC: 0.161
2024-11-04 16:34 - INFO - 	 Recall for 0.4 precision: 0.080
2024-11-04 16:34 - INFO - 	 Best Val. Loss: 0.212
2024-11-04 16:34 - INFO - 	 Best ROC-AUC: 0.735
2024-11-04 16:34 - INFO - 	 Best PR-AUC: 0.161
2024-11-04 16:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.692
2024-11-04 16:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.120
2024-11-04 16:34 - INFO - 	 Best Recall for 0.4 precision: 0.080
2024-11-04 16:34 - INFO - ---------------------------------------------
2024-11-04 16:36 - INFO - ---------------------------------------------
2024-11-04 16:36 - INFO - Epoch: 04 | Time: 1m 56s
2024-11-04 16:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21103
2024-11-04 16:36 - INFO - 	 Train Loss: 0.174
2024-11-04 16:36 - INFO - 	 Val. Loss: 0.192
2024-11-04 16:36 - INFO - 	 ROC-AUC: 0.761
2024-11-04 16:36 - INFO - 	 PR-AUC: 0.211
2024-11-04 16:36 - INFO - 	 Recall for 0.4 precision: 0.177
2024-11-04 16:36 - INFO - 	 Best Val. Loss: 0.192
2024-11-04 16:36 - INFO - 	 Best ROC-AUC: 0.761
2024-11-04 16:36 - INFO - 	 Best PR-AUC: 0.211
2024-11-04 16:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.706
2024-11-04 16:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.118
2024-11-04 16:36 - INFO - 	 Best Recall for 0.4 precision: 0.177
2024-11-04 16:36 - INFO - ---------------------------------------------
2024-11-04 16:38 - INFO - ---------------------------------------------
2024-11-04 16:38 - INFO - Epoch: 05 | Time: 1m 58s
2024-11-04 16:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23356
2024-11-04 16:38 - INFO - 	 Train Loss: 0.166
2024-11-04 16:38 - INFO - 	 Val. Loss: 0.181
2024-11-04 16:38 - INFO - 	 ROC-AUC: 0.783
2024-11-04 16:38 - INFO - 	 PR-AUC: 0.234
2024-11-04 16:38 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-04 16:38 - INFO - 	 Best Val. Loss: 0.181
2024-11-04 16:38 - INFO - 	 Best ROC-AUC: 0.783
2024-11-04 16:38 - INFO - 	 Best PR-AUC: 0.234
2024-11-04 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-04 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 16:38 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-04 16:38 - INFO - ---------------------------------------------
2024-11-04 16:40 - INFO - ---------------------------------------------
2024-11-04 16:40 - INFO - Epoch: 06 | Time: 1m 56s
2024-11-04 16:40 - INFO - 	 Train Loss: 0.159
2024-11-04 16:40 - INFO - 	 Val. Loss: 0.207
2024-11-04 16:40 - INFO - 	 ROC-AUC: 0.761
2024-11-04 16:40 - INFO - 	 PR-AUC: 0.165
2024-11-04 16:40 - INFO - 	 Recall for 0.4 precision: 0.023
2024-11-04 16:40 - INFO - 	 Best Val. Loss: 0.181
2024-11-04 16:40 - INFO - 	 Best ROC-AUC: 0.783
2024-11-04 16:40 - INFO - 	 Best PR-AUC: 0.234
2024-11-04 16:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-04 16:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 16:40 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-04 16:40 - INFO - ---------------------------------------------
2024-11-04 16:42 - INFO - ---------------------------------------------
2024-11-04 16:42 - INFO - Epoch: 07 | Time: 1m 57s
2024-11-04 16:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36276
2024-11-04 16:42 - INFO - 	 Train Loss: 0.151
2024-11-04 16:42 - INFO - 	 Val. Loss: 0.148
2024-11-04 16:42 - INFO - 	 ROC-AUC: 0.916
2024-11-04 16:42 - INFO - 	 PR-AUC: 0.363
2024-11-04 16:42 - INFO - 	 Recall for 0.4 precision: 0.543
2024-11-04 16:42 - INFO - 	 Best Val. Loss: 0.148
2024-11-04 16:42 - INFO - 	 Best ROC-AUC: 0.916
2024-11-04 16:42 - INFO - 	 Best PR-AUC: 0.363
2024-11-04 16:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.872
2024-11-04 16:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.244
2024-11-04 16:42 - INFO - 	 Best Recall for 0.4 precision: 0.543
2024-11-04 16:42 - INFO - ---------------------------------------------
2024-11-04 16:44 - INFO - ---------------------------------------------
2024-11-04 16:44 - INFO - Epoch: 08 | Time: 1m 57s
2024-11-04 16:44 - INFO - 	 Train Loss: 0.132
2024-11-04 16:44 - INFO - 	 Val. Loss: 0.258
2024-11-04 16:44 - INFO - 	 ROC-AUC: 0.746
2024-11-04 16:44 - INFO - 	 PR-AUC: 0.129
2024-11-04 16:44 - INFO - 	 Recall for 0.4 precision: 0.089
2024-11-04 16:44 - INFO - 	 Best Val. Loss: 0.148
2024-11-04 16:44 - INFO - 	 Best ROC-AUC: 0.916
2024-11-04 16:44 - INFO - 	 Best PR-AUC: 0.363
2024-11-04 16:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.872
2024-11-04 16:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.244
2024-11-04 16:44 - INFO - 	 Best Recall for 0.4 precision: 0.543
2024-11-04 16:44 - INFO - ---------------------------------------------
2024-11-04 16:46 - INFO - ---------------------------------------------
2024-11-04 16:46 - INFO - Epoch: 09 | Time: 1m 56s
2024-11-04 16:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48107
2024-11-04 16:46 - INFO - 	 Train Loss: 0.122
2024-11-04 16:46 - INFO - 	 Val. Loss: 0.115
2024-11-04 16:46 - INFO - 	 ROC-AUC: 0.952
2024-11-04 16:46 - INFO - 	 PR-AUC: 0.481
2024-11-04 16:46 - INFO - 	 Recall for 0.4 precision: 0.833
2024-11-04 16:46 - INFO - 	 Best Val. Loss: 0.115
2024-11-04 16:46 - INFO - 	 Best ROC-AUC: 0.952
2024-11-04 16:46 - INFO - 	 Best PR-AUC: 0.481
2024-11-04 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-04 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.326
2024-11-04 16:46 - INFO - 	 Best Recall for 0.4 precision: 0.833
2024-11-04 16:46 - INFO - ---------------------------------------------
2024-11-04 16:48 - INFO - ---------------------------------------------
2024-11-04 16:48 - INFO - Epoch: 10 | Time: 1m 55s
2024-11-04 16:48 - INFO - 	 Train Loss: 0.113
2024-11-04 16:48 - INFO - 	 Val. Loss: 0.117
2024-11-04 16:48 - INFO - 	 ROC-AUC: 0.952
2024-11-04 16:48 - INFO - 	 PR-AUC: 0.469
2024-11-04 16:48 - INFO - 	 Recall for 0.4 precision: 0.691
2024-11-04 16:48 - INFO - 	 Best Val. Loss: 0.115
2024-11-04 16:48 - INFO - 	 Best ROC-AUC: 0.952
2024-11-04 16:48 - INFO - 	 Best PR-AUC: 0.481
2024-11-04 16:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-04 16:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.326
2024-11-04 16:48 - INFO - 	 Best Recall for 0.4 precision: 0.833
2024-11-04 16:48 - INFO - ---------------------------------------------
2024-11-04 16:51 - INFO - Fit the preprocessing pipeline
2024-11-04 16:51 - INFO - Training using device: mps
2024-11-04 16:51 - INFO - Creating generators
2024-11-04 16:51 - INFO - The model has 651,257 trainable parameters
2024-11-04 16:51 - INFO - * Model:
2024-11-04 16:51 - INFO - * -----------
2024-11-04 16:51 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 16:51 - INFO - * -----------
2024-11-04 16:51 - INFO - Evaluating model based on: aucpr
2024-11-04 16:51 - INFO - Training..

2024-11-04 16:53 - INFO - ---------------------------------------------
2024-11-04 16:53 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 16:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06637
2024-11-04 16:53 - INFO - 	 Train Loss: 0.256
2024-11-04 16:53 - INFO - 	 Val. Loss: 0.320
2024-11-04 16:53 - INFO - 	 ROC-AUC: 0.599
2024-11-04 16:53 - INFO - 	 PR-AUC: 0.066
2024-11-04 16:53 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 16:53 - INFO - 	 Best Val. Loss: 0.320
2024-11-04 16:53 - INFO - 	 Best ROC-AUC: 0.599
2024-11-04 16:53 - INFO - 	 Best PR-AUC: 0.066
2024-11-04 16:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.611
2024-11-04 16:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.069
2024-11-04 16:53 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-04 16:53 - INFO - ---------------------------------------------
2024-11-04 16:54 - INFO - ---------------------------------------------
2024-11-04 16:54 - INFO - Epoch: 02 | Time: 1m 51s
2024-11-04 16:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07705
2024-11-04 16:54 - INFO - 	 Train Loss: 0.212
2024-11-04 16:54 - INFO - 	 Val. Loss: 0.298
2024-11-04 16:54 - INFO - 	 ROC-AUC: 0.608
2024-11-04 16:54 - INFO - 	 PR-AUC: 0.077
2024-11-04 16:54 - INFO - 	 Recall for 0.4 precision: 0.016
2024-11-04 16:54 - INFO - 	 Best Val. Loss: 0.298
2024-11-04 16:54 - INFO - 	 Best ROC-AUC: 0.608
2024-11-04 16:54 - INFO - 	 Best PR-AUC: 0.077
2024-11-04 16:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.599
2024-11-04 16:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.074
2024-11-04 16:54 - INFO - 	 Best Recall for 0.4 precision: 0.016
2024-11-04 16:54 - INFO - ---------------------------------------------
2024-11-04 16:56 - INFO - ---------------------------------------------
2024-11-04 16:56 - INFO - Epoch: 03 | Time: 1m 53s
2024-11-04 16:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08849
2024-11-04 16:56 - INFO - 	 Train Loss: 0.206
2024-11-04 16:56 - INFO - 	 Val. Loss: 0.259
2024-11-04 16:56 - INFO - 	 ROC-AUC: 0.642
2024-11-04 16:56 - INFO - 	 PR-AUC: 0.088
2024-11-04 16:56 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 16:56 - INFO - 	 Best Val. Loss: 0.259
2024-11-04 16:56 - INFO - 	 Best ROC-AUC: 0.642
2024-11-04 16:56 - INFO - 	 Best PR-AUC: 0.088
2024-11-04 16:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.601
2024-11-04 16:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.077
2024-11-04 16:56 - INFO - 	 Best Recall for 0.4 precision: 0.016
2024-11-04 16:56 - INFO - ---------------------------------------------
2024-11-04 16:58 - INFO - ---------------------------------------------
2024-11-04 16:58 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-04 16:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16605
2024-11-04 16:58 - INFO - 	 Train Loss: 0.193
2024-11-04 16:58 - INFO - 	 Val. Loss: 0.228
2024-11-04 16:58 - INFO - 	 ROC-AUC: 0.662
2024-11-04 16:58 - INFO - 	 PR-AUC: 0.166
2024-11-04 16:58 - INFO - 	 Recall for 0.4 precision: 0.114
2024-11-04 16:58 - INFO - 	 Best Val. Loss: 0.228
2024-11-04 16:58 - INFO - 	 Best ROC-AUC: 0.662
2024-11-04 16:58 - INFO - 	 Best PR-AUC: 0.166
2024-11-04 16:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.651
2024-11-04 16:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.107
2024-11-04 16:58 - INFO - 	 Best Recall for 0.4 precision: 0.114
2024-11-04 16:58 - INFO - ---------------------------------------------
2024-11-04 17:00 - INFO - ---------------------------------------------
2024-11-04 17:00 - INFO - Epoch: 05 | Time: 1m 52s
2024-11-04 17:00 - INFO - 	 Train Loss: 0.180
2024-11-04 17:00 - INFO - 	 Val. Loss: 0.240
2024-11-04 17:00 - INFO - 	 ROC-AUC: 0.637
2024-11-04 17:00 - INFO - 	 PR-AUC: 0.107
2024-11-04 17:00 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-04 17:00 - INFO - 	 Best Val. Loss: 0.228
2024-11-04 17:00 - INFO - 	 Best ROC-AUC: 0.662
2024-11-04 17:00 - INFO - 	 Best PR-AUC: 0.166
2024-11-04 17:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.651
2024-11-04 17:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.107
2024-11-04 17:00 - INFO - 	 Best Recall for 0.4 precision: 0.114
2024-11-04 17:00 - INFO - ---------------------------------------------
2024-11-04 17:02 - INFO - ---------------------------------------------
2024-11-04 17:02 - INFO - Epoch: 06 | Time: 1m 52s
2024-11-04 17:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21533
2024-11-04 17:02 - INFO - 	 Train Loss: 0.175
2024-11-04 17:02 - INFO - 	 Val. Loss: 0.199
2024-11-04 17:02 - INFO - 	 ROC-AUC: 0.725
2024-11-04 17:02 - INFO - 	 PR-AUC: 0.215
2024-11-04 17:02 - INFO - 	 Recall for 0.4 precision: 0.143
2024-11-04 17:02 - INFO - 	 Best Val. Loss: 0.199
2024-11-04 17:02 - INFO - 	 Best ROC-AUC: 0.725
2024-11-04 17:02 - INFO - 	 Best PR-AUC: 0.215
2024-11-04 17:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.659
2024-11-04 17:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.108
2024-11-04 17:02 - INFO - 	 Best Recall for 0.4 precision: 0.143
2024-11-04 17:02 - INFO - ---------------------------------------------
2024-11-04 17:04 - INFO - ---------------------------------------------
2024-11-04 17:04 - INFO - Epoch: 07 | Time: 1m 52s
2024-11-04 17:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24219
2024-11-04 17:04 - INFO - 	 Train Loss: 0.168
2024-11-04 17:04 - INFO - 	 Val. Loss: 0.191
2024-11-04 17:04 - INFO - 	 ROC-AUC: 0.752
2024-11-04 17:04 - INFO - 	 PR-AUC: 0.242
2024-11-04 17:04 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-04 17:04 - INFO - 	 Best Val. Loss: 0.191
2024-11-04 17:04 - INFO - 	 Best ROC-AUC: 0.752
2024-11-04 17:04 - INFO - 	 Best PR-AUC: 0.242
2024-11-04 17:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.690
2024-11-04 17:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.119
2024-11-04 17:04 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-04 17:04 - INFO - ---------------------------------------------
2024-11-04 17:06 - INFO - ---------------------------------------------
2024-11-04 17:06 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-04 17:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24822
2024-11-04 17:06 - INFO - 	 Train Loss: 0.168
2024-11-04 17:06 - INFO - 	 Val. Loss: 0.185
2024-11-04 17:06 - INFO - 	 ROC-AUC: 0.776
2024-11-04 17:06 - INFO - 	 PR-AUC: 0.248
2024-11-04 17:06 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-04 17:06 - INFO - 	 Best Val. Loss: 0.185
2024-11-04 17:06 - INFO - 	 Best ROC-AUC: 0.776
2024-11-04 17:06 - INFO - 	 Best PR-AUC: 0.248
2024-11-04 17:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-04 17:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.132
2024-11-04 17:06 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-04 17:06 - INFO - ---------------------------------------------
2024-11-04 17:08 - INFO - ---------------------------------------------
2024-11-04 17:08 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-04 17:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26287
2024-11-04 17:08 - INFO - 	 Train Loss: 0.163
2024-11-04 17:08 - INFO - 	 Val. Loss: 0.190
2024-11-04 17:08 - INFO - 	 ROC-AUC: 0.791
2024-11-04 17:08 - INFO - 	 PR-AUC: 0.263
2024-11-04 17:08 - INFO - 	 Recall for 0.4 precision: 0.159
2024-11-04 17:08 - INFO - 	 Best Val. Loss: 0.185
2024-11-04 17:08 - INFO - 	 Best ROC-AUC: 0.791
2024-11-04 17:08 - INFO - 	 Best PR-AUC: 0.263
2024-11-04 17:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-04 17:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 17:08 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-04 17:08 - INFO - ---------------------------------------------
2024-11-04 17:09 - INFO - ---------------------------------------------
2024-11-04 17:09 - INFO - Epoch: 10 | Time: 1m 52s
2024-11-04 17:09 - INFO - 	 Train Loss: 0.161
2024-11-04 17:09 - INFO - 	 Val. Loss: 0.189
2024-11-04 17:09 - INFO - 	 ROC-AUC: 0.788
2024-11-04 17:09 - INFO - 	 PR-AUC: 0.209
2024-11-04 17:09 - INFO - 	 Recall for 0.4 precision: 0.130
2024-11-04 17:09 - INFO - 	 Best Val. Loss: 0.185
2024-11-04 17:09 - INFO - 	 Best ROC-AUC: 0.791
2024-11-04 17:09 - INFO - 	 Best PR-AUC: 0.263
2024-11-04 17:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-04 17:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 17:09 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-04 17:09 - INFO - ---------------------------------------------
2024-11-04 17:12 - INFO - Fit the preprocessing pipeline
2024-11-04 17:12 - INFO - Training using device: mps
2024-11-04 17:12 - INFO - Creating generators
2024-11-04 17:12 - INFO - The model has 651,257 trainable parameters
2024-11-04 17:12 - INFO - * Model:
2024-11-04 17:12 - INFO - * -----------
2024-11-04 17:12 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 17:12 - INFO - * -----------
2024-11-04 17:12 - INFO - Evaluating model based on: aucpr
2024-11-04 17:12 - INFO - Training..

2024-11-04 17:14 - INFO - ---------------------------------------------
2024-11-04 17:14 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 17:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10309
2024-11-04 17:14 - INFO - 	 Train Loss: 0.256
2024-11-04 17:14 - INFO - 	 Val. Loss: 0.303
2024-11-04 17:14 - INFO - 	 ROC-AUC: 0.620
2024-11-04 17:14 - INFO - 	 PR-AUC: 0.103
2024-11-04 17:14 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 17:14 - INFO - 	 Best Val. Loss: 0.303
2024-11-04 17:14 - INFO - 	 Best ROC-AUC: 0.620
2024-11-04 17:14 - INFO - 	 Best PR-AUC: 0.103
2024-11-04 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.636
2024-11-04 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.096
2024-11-04 17:14 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-04 17:14 - INFO - ---------------------------------------------
2024-11-04 17:16 - INFO - ---------------------------------------------
2024-11-04 17:16 - INFO - Epoch: 02 | Time: 1m 44s
2024-11-04 17:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14553
2024-11-04 17:16 - INFO - 	 Train Loss: 0.203
2024-11-04 17:16 - INFO - 	 Val. Loss: 0.245
2024-11-04 17:16 - INFO - 	 ROC-AUC: 0.725
2024-11-04 17:16 - INFO - 	 PR-AUC: 0.146
2024-11-04 17:16 - INFO - 	 Recall for 0.4 precision: 0.068
2024-11-04 17:16 - INFO - 	 Best Val. Loss: 0.245
2024-11-04 17:16 - INFO - 	 Best ROC-AUC: 0.725
2024-11-04 17:16 - INFO - 	 Best PR-AUC: 0.146
2024-11-04 17:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.686
2024-11-04 17:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.111
2024-11-04 17:16 - INFO - 	 Best Recall for 0.4 precision: 0.068
2024-11-04 17:16 - INFO - ---------------------------------------------
2024-11-04 17:17 - INFO - ---------------------------------------------
2024-11-04 17:17 - INFO - Epoch: 03 | Time: 1m 54s
2024-11-04 17:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24629
2024-11-04 17:17 - INFO - 	 Train Loss: 0.187
2024-11-04 17:17 - INFO - 	 Val. Loss: 0.204
2024-11-04 17:17 - INFO - 	 ROC-AUC: 0.798
2024-11-04 17:17 - INFO - 	 PR-AUC: 0.246
2024-11-04 17:17 - INFO - 	 Recall for 0.4 precision: 0.172
2024-11-04 17:17 - INFO - 	 Best Val. Loss: 0.204
2024-11-04 17:17 - INFO - 	 Best ROC-AUC: 0.798
2024-11-04 17:17 - INFO - 	 Best PR-AUC: 0.246
2024-11-04 17:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-04 17:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 17:17 - INFO - 	 Best Recall for 0.4 precision: 0.172
2024-11-04 17:17 - INFO - ---------------------------------------------
2024-11-04 17:19 - INFO - ---------------------------------------------
2024-11-04 17:19 - INFO - Epoch: 04 | Time: 1m 54s
2024-11-04 17:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2596
2024-11-04 17:19 - INFO - 	 Train Loss: 0.174
2024-11-04 17:19 - INFO - 	 Val. Loss: 0.187
2024-11-04 17:19 - INFO - 	 ROC-AUC: 0.811
2024-11-04 17:19 - INFO - 	 PR-AUC: 0.260
2024-11-04 17:19 - INFO - 	 Recall for 0.4 precision: 0.185
2024-11-04 17:19 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 17:19 - INFO - 	 Best ROC-AUC: 0.811
2024-11-04 17:19 - INFO - 	 Best PR-AUC: 0.260
2024-11-04 17:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 17:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 17:19 - INFO - 	 Best Recall for 0.4 precision: 0.185
2024-11-04 17:19 - INFO - ---------------------------------------------
2024-11-04 17:21 - INFO - ---------------------------------------------
2024-11-04 17:21 - INFO - Epoch: 05 | Time: 1m 55s
2024-11-04 17:21 - INFO - 	 Train Loss: 0.165
2024-11-04 17:21 - INFO - 	 Val. Loss: 0.176
2024-11-04 17:21 - INFO - 	 ROC-AUC: 0.828
2024-11-04 17:21 - INFO - 	 PR-AUC: 0.251
2024-11-04 17:21 - INFO - 	 Recall for 0.4 precision: 0.176
2024-11-04 17:21 - INFO - 	 Best Val. Loss: 0.176
2024-11-04 17:21 - INFO - 	 Best ROC-AUC: 0.828
2024-11-04 17:21 - INFO - 	 Best PR-AUC: 0.260
2024-11-04 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-04 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 17:21 - INFO - 	 Best Recall for 0.4 precision: 0.185
2024-11-04 17:21 - INFO - ---------------------------------------------
2024-11-04 17:23 - INFO - ---------------------------------------------
2024-11-04 17:23 - INFO - Epoch: 06 | Time: 1m 55s
2024-11-04 17:23 - INFO - 	 Train Loss: 0.155
2024-11-04 17:23 - INFO - 	 Val. Loss: 0.219
2024-11-04 17:23 - INFO - 	 ROC-AUC: 0.747
2024-11-04 17:23 - INFO - 	 PR-AUC: 0.186
2024-11-04 17:23 - INFO - 	 Recall for 0.4 precision: 0.098
2024-11-04 17:23 - INFO - 	 Best Val. Loss: 0.176
2024-11-04 17:23 - INFO - 	 Best ROC-AUC: 0.828
2024-11-04 17:23 - INFO - 	 Best PR-AUC: 0.260
2024-11-04 17:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-04 17:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 17:23 - INFO - 	 Best Recall for 0.4 precision: 0.185
2024-11-04 17:23 - INFO - ---------------------------------------------
2024-11-04 17:25 - INFO - ---------------------------------------------
2024-11-04 17:25 - INFO - Epoch: 07 | Time: 1m 56s
2024-11-04 17:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39047
2024-11-04 17:25 - INFO - 	 Train Loss: 0.136
2024-11-04 17:25 - INFO - 	 Val. Loss: 0.168
2024-11-04 17:25 - INFO - 	 ROC-AUC: 0.943
2024-11-04 17:25 - INFO - 	 PR-AUC: 0.390
2024-11-04 17:25 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-04 17:25 - INFO - 	 Best Val. Loss: 0.168
2024-11-04 17:25 - INFO - 	 Best ROC-AUC: 0.943
2024-11-04 17:25 - INFO - 	 Best PR-AUC: 0.390
2024-11-04 17:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-04 17:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-04 17:25 - INFO - 	 Best Recall for 0.4 precision: 0.185
2024-11-04 17:25 - INFO - ---------------------------------------------
2024-11-04 17:27 - INFO - ---------------------------------------------
2024-11-04 17:27 - INFO - Epoch: 08 | Time: 1m 56s
2024-11-04 17:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52692
2024-11-04 17:27 - INFO - 	 Train Loss: 0.121
2024-11-04 17:27 - INFO - 	 Val. Loss: 0.122
2024-11-04 17:27 - INFO - 	 ROC-AUC: 0.962
2024-11-04 17:27 - INFO - 	 PR-AUC: 0.527
2024-11-04 17:27 - INFO - 	 Recall for 0.4 precision: 0.876
2024-11-04 17:27 - INFO - 	 Best Val. Loss: 0.122
2024-11-04 17:27 - INFO - 	 Best ROC-AUC: 0.962
2024-11-04 17:27 - INFO - 	 Best PR-AUC: 0.527
2024-11-04 17:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-04 17:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-11-04 17:27 - INFO - 	 Best Recall for 0.4 precision: 0.876
2024-11-04 17:27 - INFO - ---------------------------------------------
2024-11-04 17:29 - INFO - ---------------------------------------------
2024-11-04 17:29 - INFO - Epoch: 09 | Time: 1m 57s
2024-11-04 17:29 - INFO - 	 Train Loss: 0.115
2024-11-04 17:29 - INFO - 	 Val. Loss: 0.149
2024-11-04 17:29 - INFO - 	 ROC-AUC: 0.935
2024-11-04 17:29 - INFO - 	 PR-AUC: 0.387
2024-11-04 17:29 - INFO - 	 Recall for 0.4 precision: 0.566
2024-11-04 17:29 - INFO - 	 Best Val. Loss: 0.122
2024-11-04 17:29 - INFO - 	 Best ROC-AUC: 0.962
2024-11-04 17:29 - INFO - 	 Best PR-AUC: 0.527
2024-11-04 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-04 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-11-04 17:29 - INFO - 	 Best Recall for 0.4 precision: 0.876
2024-11-04 17:29 - INFO - ---------------------------------------------
2024-11-04 17:31 - INFO - ---------------------------------------------
2024-11-04 17:31 - INFO - Epoch: 10 | Time: 1m 58s
2024-11-04 17:31 - INFO - 	 Train Loss: 0.111
2024-11-04 17:31 - INFO - 	 Val. Loss: 0.133
2024-11-04 17:31 - INFO - 	 ROC-AUC: 0.939
2024-11-04 17:31 - INFO - 	 PR-AUC: 0.462
2024-11-04 17:31 - INFO - 	 Recall for 0.4 precision: 0.659
2024-11-04 17:31 - INFO - 	 Best Val. Loss: 0.122
2024-11-04 17:31 - INFO - 	 Best ROC-AUC: 0.962
2024-11-04 17:31 - INFO - 	 Best PR-AUC: 0.527
2024-11-04 17:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-04 17:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-11-04 17:31 - INFO - 	 Best Recall for 0.4 precision: 0.876
2024-11-04 17:31 - INFO - ---------------------------------------------
2024-11-04 17:34 - INFO - Fit the preprocessing pipeline
2024-11-04 17:34 - INFO - Training using device: mps
2024-11-04 17:34 - INFO - Creating generators
2024-11-04 17:34 - INFO - The model has 651,257 trainable parameters
2024-11-04 17:34 - INFO - * Model:
2024-11-04 17:34 - INFO - * -----------
2024-11-04 17:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 17:34 - INFO - * -----------
2024-11-04 17:34 - INFO - Evaluating model based on: aucpr
2024-11-04 17:34 - INFO - Training..

2024-11-04 17:36 - INFO - ---------------------------------------------
2024-11-04 17:36 - INFO - Epoch: 01 | Time: 1m 43s
2024-11-04 17:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12474
2024-11-04 17:36 - INFO - 	 Train Loss: 0.259
2024-11-04 17:36 - INFO - 	 Val. Loss: 0.303
2024-11-04 17:36 - INFO - 	 ROC-AUC: 0.660
2024-11-04 17:36 - INFO - 	 PR-AUC: 0.125
2024-11-04 17:36 - INFO - 	 Recall for 0.4 precision: 0.039
2024-11-04 17:36 - INFO - 	 Best Val. Loss: 0.303
2024-11-04 17:36 - INFO - 	 Best ROC-AUC: 0.660
2024-11-04 17:36 - INFO - 	 Best PR-AUC: 0.125
2024-11-04 17:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.673
2024-11-04 17:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.105
2024-11-04 17:36 - INFO - 	 Best Recall for 0.4 precision: 0.039
2024-11-04 17:36 - INFO - ---------------------------------------------
2024-11-04 17:37 - INFO - ---------------------------------------------
2024-11-04 17:37 - INFO - Epoch: 02 | Time: 1m 55s
2024-11-04 17:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12944
2024-11-04 17:37 - INFO - 	 Train Loss: 0.204
2024-11-04 17:37 - INFO - 	 Val. Loss: 0.237
2024-11-04 17:37 - INFO - 	 ROC-AUC: 0.684
2024-11-04 17:37 - INFO - 	 PR-AUC: 0.129
2024-11-04 17:37 - INFO - 	 Recall for 0.4 precision: 0.055
2024-11-04 17:37 - INFO - 	 Best Val. Loss: 0.237
2024-11-04 17:37 - INFO - 	 Best ROC-AUC: 0.684
2024-11-04 17:37 - INFO - 	 Best PR-AUC: 0.129
2024-11-04 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.691
2024-11-04 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.120
2024-11-04 17:37 - INFO - 	 Best Recall for 0.4 precision: 0.055
2024-11-04 17:37 - INFO - ---------------------------------------------
2024-11-04 17:39 - INFO - ---------------------------------------------
2024-11-04 17:39 - INFO - Epoch: 03 | Time: 1m 56s
2024-11-04 17:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22267
2024-11-04 17:39 - INFO - 	 Train Loss: 0.182
2024-11-04 17:39 - INFO - 	 Val. Loss: 0.213
2024-11-04 17:39 - INFO - 	 ROC-AUC: 0.775
2024-11-04 17:39 - INFO - 	 PR-AUC: 0.223
2024-11-04 17:39 - INFO - 	 Recall for 0.4 precision: 0.174
2024-11-04 17:39 - INFO - 	 Best Val. Loss: 0.213
2024-11-04 17:39 - INFO - 	 Best ROC-AUC: 0.775
2024-11-04 17:39 - INFO - 	 Best PR-AUC: 0.223
2024-11-04 17:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-11-04 17:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.126
2024-11-04 17:39 - INFO - 	 Best Recall for 0.4 precision: 0.174
2024-11-04 17:39 - INFO - ---------------------------------------------
2024-11-04 17:41 - INFO - ---------------------------------------------
2024-11-04 17:41 - INFO - Epoch: 04 | Time: 1m 56s
2024-11-04 17:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22531
2024-11-04 17:41 - INFO - 	 Train Loss: 0.171
2024-11-04 17:41 - INFO - 	 Val. Loss: 0.198
2024-11-04 17:41 - INFO - 	 ROC-AUC: 0.792
2024-11-04 17:41 - INFO - 	 PR-AUC: 0.225
2024-11-04 17:41 - INFO - 	 Recall for 0.4 precision: 0.172
2024-11-04 17:41 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 17:41 - INFO - 	 Best ROC-AUC: 0.792
2024-11-04 17:41 - INFO - 	 Best PR-AUC: 0.225
2024-11-04 17:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.741
2024-11-04 17:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 17:41 - INFO - 	 Best Recall for 0.4 precision: 0.174
2024-11-04 17:41 - INFO - ---------------------------------------------
2024-11-04 17:43 - INFO - ---------------------------------------------
2024-11-04 17:43 - INFO - Epoch: 05 | Time: 1m 57s
2024-11-04 17:43 - INFO - 	 Train Loss: 0.165
2024-11-04 17:43 - INFO - 	 Val. Loss: 0.207
2024-11-04 17:43 - INFO - 	 ROC-AUC: 0.819
2024-11-04 17:43 - INFO - 	 PR-AUC: 0.218
2024-11-04 17:43 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-04 17:43 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 17:43 - INFO - 	 Best ROC-AUC: 0.819
2024-11-04 17:43 - INFO - 	 Best PR-AUC: 0.225
2024-11-04 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-04 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 17:43 - INFO - 	 Best Recall for 0.4 precision: 0.174
2024-11-04 17:43 - INFO - ---------------------------------------------
2024-11-04 17:45 - INFO - ---------------------------------------------
2024-11-04 17:45 - INFO - Epoch: 06 | Time: 1m 56s
2024-11-04 17:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3052
2024-11-04 17:45 - INFO - 	 Train Loss: 0.159
2024-11-04 17:45 - INFO - 	 Val. Loss: 0.188
2024-11-04 17:45 - INFO - 	 ROC-AUC: 0.845
2024-11-04 17:45 - INFO - 	 PR-AUC: 0.305
2024-11-04 17:45 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-04 17:45 - INFO - 	 Best Val. Loss: 0.188
2024-11-04 17:45 - INFO - 	 Best ROC-AUC: 0.845
2024-11-04 17:45 - INFO - 	 Best PR-AUC: 0.305
2024-11-04 17:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.790
2024-11-04 17:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.182
2024-11-04 17:45 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-04 17:45 - INFO - ---------------------------------------------
2024-11-04 17:47 - INFO - ---------------------------------------------
2024-11-04 17:47 - INFO - Epoch: 07 | Time: 1m 57s
2024-11-04 17:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41552
2024-11-04 17:47 - INFO - 	 Train Loss: 0.144
2024-11-04 17:47 - INFO - 	 Val. Loss: 0.162
2024-11-04 17:47 - INFO - 	 ROC-AUC: 0.950
2024-11-04 17:47 - INFO - 	 PR-AUC: 0.416
2024-11-04 17:47 - INFO - 	 Recall for 0.4 precision: 0.686
2024-11-04 17:47 - INFO - 	 Best Val. Loss: 0.162
2024-11-04 17:47 - INFO - 	 Best ROC-AUC: 0.950
2024-11-04 17:47 - INFO - 	 Best PR-AUC: 0.416
2024-11-04 17:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-04 17:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.357
2024-11-04 17:47 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-11-04 17:47 - INFO - ---------------------------------------------
2024-11-04 17:49 - INFO - ---------------------------------------------
2024-11-04 17:49 - INFO - Epoch: 08 | Time: 1m 58s
2024-11-04 17:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53724
2024-11-04 17:49 - INFO - 	 Train Loss: 0.124
2024-11-04 17:49 - INFO - 	 Val. Loss: 0.130
2024-11-04 17:49 - INFO - 	 ROC-AUC: 0.960
2024-11-04 17:49 - INFO - 	 PR-AUC: 0.537
2024-11-04 17:49 - INFO - 	 Recall for 0.4 precision: 0.837
2024-11-04 17:49 - INFO - 	 Best Val. Loss: 0.130
2024-11-04 17:49 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 17:49 - INFO - 	 Best PR-AUC: 0.537
2024-11-04 17:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-04 17:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.384
2024-11-04 17:49 - INFO - 	 Best Recall for 0.4 precision: 0.837
2024-11-04 17:49 - INFO - ---------------------------------------------
2024-11-04 17:51 - INFO - ---------------------------------------------
2024-11-04 17:51 - INFO - Epoch: 09 | Time: 1m 58s
2024-11-04 17:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59827
2024-11-04 17:51 - INFO - 	 Train Loss: 0.117
2024-11-04 17:51 - INFO - 	 Val. Loss: 0.120
2024-11-04 17:51 - INFO - 	 ROC-AUC: 0.955
2024-11-04 17:51 - INFO - 	 PR-AUC: 0.598
2024-11-04 17:51 - INFO - 	 Recall for 0.4 precision: 0.870
2024-11-04 17:51 - INFO - 	 Best Val. Loss: 0.120
2024-11-04 17:51 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 17:51 - INFO - 	 Best PR-AUC: 0.598
2024-11-04 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-04 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.384
2024-11-04 17:51 - INFO - 	 Best Recall for 0.4 precision: 0.870
2024-11-04 17:51 - INFO - ---------------------------------------------
2024-11-04 17:53 - INFO - ---------------------------------------------
2024-11-04 17:53 - INFO - Epoch: 10 | Time: 1m 59s
2024-11-04 17:53 - INFO - 	 Train Loss: 0.110
2024-11-04 17:53 - INFO - 	 Val. Loss: 0.162
2024-11-04 17:53 - INFO - 	 ROC-AUC: 0.895
2024-11-04 17:53 - INFO - 	 PR-AUC: 0.448
2024-11-04 17:53 - INFO - 	 Recall for 0.4 precision: 0.659
2024-11-04 17:53 - INFO - 	 Best Val. Loss: 0.120
2024-11-04 17:53 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 17:53 - INFO - 	 Best PR-AUC: 0.598
2024-11-04 17:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-04 17:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.384
2024-11-04 17:53 - INFO - 	 Best Recall for 0.4 precision: 0.870
2024-11-04 17:53 - INFO - ---------------------------------------------
2024-11-04 17:56 - INFO - Fit the preprocessing pipeline
2024-11-04 17:56 - INFO - Training using device: mps
2024-11-04 17:56 - INFO - Creating generators
2024-11-04 17:56 - INFO - The model has 651,257 trainable parameters
2024-11-04 17:56 - INFO - * Model:
2024-11-04 17:56 - INFO - * -----------
2024-11-04 17:56 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 17:56 - INFO - * -----------
2024-11-04 17:56 - INFO - Evaluating model based on: aucpr
2024-11-04 17:56 - INFO - Training..

2024-11-04 17:58 - INFO - ---------------------------------------------
2024-11-04 17:58 - INFO - Epoch: 01 | Time: 1m 45s
2024-11-04 17:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10459
2024-11-04 17:58 - INFO - 	 Train Loss: 0.255
2024-11-04 17:58 - INFO - 	 Val. Loss: 0.292
2024-11-04 17:58 - INFO - 	 ROC-AUC: 0.645
2024-11-04 17:58 - INFO - 	 PR-AUC: 0.105
2024-11-04 17:58 - INFO - 	 Recall for 0.4 precision: 0.023
2024-11-04 17:58 - INFO - 	 Best Val. Loss: 0.292
2024-11-04 17:58 - INFO - 	 Best ROC-AUC: 0.645
2024-11-04 17:58 - INFO - 	 Best PR-AUC: 0.105
2024-11-04 17:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.670
2024-11-04 17:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.098
2024-11-04 17:58 - INFO - 	 Best Recall for 0.4 precision: 0.023
2024-11-04 17:58 - INFO - ---------------------------------------------
2024-11-04 18:00 - INFO - ---------------------------------------------
2024-11-04 18:00 - INFO - Epoch: 02 | Time: 1m 55s
2024-11-04 18:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12718
2024-11-04 18:00 - INFO - 	 Train Loss: 0.206
2024-11-04 18:00 - INFO - 	 Val. Loss: 0.246
2024-11-04 18:00 - INFO - 	 ROC-AUC: 0.664
2024-11-04 18:00 - INFO - 	 PR-AUC: 0.127
2024-11-04 18:00 - INFO - 	 Recall for 0.4 precision: 0.039
2024-11-04 18:00 - INFO - 	 Best Val. Loss: 0.246
2024-11-04 18:00 - INFO - 	 Best ROC-AUC: 0.664
2024-11-04 18:00 - INFO - 	 Best PR-AUC: 0.127
2024-11-04 18:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.650
2024-11-04 18:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.119
2024-11-04 18:00 - INFO - 	 Best Recall for 0.4 precision: 0.039
2024-11-04 18:00 - INFO - ---------------------------------------------
2024-11-04 18:02 - INFO - ---------------------------------------------
2024-11-04 18:02 - INFO - Epoch: 03 | Time: 1m 58s
2024-11-04 18:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16002
2024-11-04 18:02 - INFO - 	 Train Loss: 0.189
2024-11-04 18:02 - INFO - 	 Val. Loss: 0.219
2024-11-04 18:02 - INFO - 	 ROC-AUC: 0.747
2024-11-04 18:02 - INFO - 	 PR-AUC: 0.160
2024-11-04 18:02 - INFO - 	 Recall for 0.4 precision: 0.029
2024-11-04 18:02 - INFO - 	 Best Val. Loss: 0.219
2024-11-04 18:02 - INFO - 	 Best ROC-AUC: 0.747
2024-11-04 18:02 - INFO - 	 Best PR-AUC: 0.160
2024-11-04 18:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.727
2024-11-04 18:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 18:02 - INFO - 	 Best Recall for 0.4 precision: 0.039
2024-11-04 18:02 - INFO - ---------------------------------------------
2024-11-04 18:04 - INFO - ---------------------------------------------
2024-11-04 18:04 - INFO - Epoch: 04 | Time: 1m 58s
2024-11-04 18:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25054
2024-11-04 18:04 - INFO - 	 Train Loss: 0.179
2024-11-04 18:04 - INFO - 	 Val. Loss: 0.198
2024-11-04 18:04 - INFO - 	 ROC-AUC: 0.795
2024-11-04 18:04 - INFO - 	 PR-AUC: 0.251
2024-11-04 18:04 - INFO - 	 Recall for 0.4 precision: 0.213
2024-11-04 18:04 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 18:04 - INFO - 	 Best ROC-AUC: 0.795
2024-11-04 18:04 - INFO - 	 Best PR-AUC: 0.251
2024-11-04 18:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-04 18:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-04 18:04 - INFO - 	 Best Recall for 0.4 precision: 0.213
2024-11-04 18:04 - INFO - ---------------------------------------------
2024-11-04 18:05 - INFO - ---------------------------------------------
2024-11-04 18:05 - INFO - Epoch: 05 | Time: 1m 58s
2024-11-04 18:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28337
2024-11-04 18:05 - INFO - 	 Train Loss: 0.168
2024-11-04 18:05 - INFO - 	 Val. Loss: 0.187
2024-11-04 18:05 - INFO - 	 ROC-AUC: 0.825
2024-11-04 18:05 - INFO - 	 PR-AUC: 0.283
2024-11-04 18:05 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-04 18:05 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 18:05 - INFO - 	 Best ROC-AUC: 0.825
2024-11-04 18:05 - INFO - 	 Best PR-AUC: 0.283
2024-11-04 18:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.787
2024-11-04 18:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.174
2024-11-04 18:05 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-04 18:05 - INFO - ---------------------------------------------
2024-11-04 18:07 - INFO - ---------------------------------------------
2024-11-04 18:07 - INFO - Epoch: 06 | Time: 1m 56s
2024-11-04 18:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34489
2024-11-04 18:07 - INFO - 	 Train Loss: 0.160
2024-11-04 18:07 - INFO - 	 Val. Loss: 0.176
2024-11-04 18:07 - INFO - 	 ROC-AUC: 0.850
2024-11-04 18:07 - INFO - 	 PR-AUC: 0.345
2024-11-04 18:07 - INFO - 	 Recall for 0.4 precision: 0.359
2024-11-04 18:07 - INFO - 	 Best Val. Loss: 0.176
2024-11-04 18:07 - INFO - 	 Best ROC-AUC: 0.850
2024-11-04 18:07 - INFO - 	 Best PR-AUC: 0.345
2024-11-04 18:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.806
2024-11-04 18:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.189
2024-11-04 18:07 - INFO - 	 Best Recall for 0.4 precision: 0.359
2024-11-04 18:07 - INFO - ---------------------------------------------
2024-11-04 18:09 - INFO - ---------------------------------------------
2024-11-04 18:09 - INFO - Epoch: 07 | Time: 1m 55s
2024-11-04 18:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35687
2024-11-04 18:09 - INFO - 	 Train Loss: 0.153
2024-11-04 18:09 - INFO - 	 Val. Loss: 0.213
2024-11-04 18:09 - INFO - 	 ROC-AUC: 0.913
2024-11-04 18:09 - INFO - 	 PR-AUC: 0.357
2024-11-04 18:09 - INFO - 	 Recall for 0.4 precision: 0.481
2024-11-04 18:09 - INFO - 	 Best Val. Loss: 0.176
2024-11-04 18:09 - INFO - 	 Best ROC-AUC: 0.913
2024-11-04 18:09 - INFO - 	 Best PR-AUC: 0.357
2024-11-04 18:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.873
2024-11-04 18:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.230
2024-11-04 18:09 - INFO - 	 Best Recall for 0.4 precision: 0.481
2024-11-04 18:09 - INFO - ---------------------------------------------
2024-11-04 18:11 - INFO - ---------------------------------------------
2024-11-04 18:11 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-04 18:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51672
2024-11-04 18:11 - INFO - 	 Train Loss: 0.128
2024-11-04 18:11 - INFO - 	 Val. Loss: 0.124
2024-11-04 18:11 - INFO - 	 ROC-AUC: 0.960
2024-11-04 18:11 - INFO - 	 PR-AUC: 0.517
2024-11-04 18:11 - INFO - 	 Recall for 0.4 precision: 0.865
2024-11-04 18:11 - INFO - 	 Best Val. Loss: 0.124
2024-11-04 18:11 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 18:11 - INFO - 	 Best PR-AUC: 0.517
2024-11-04 18:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-04 18:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-11-04 18:11 - INFO - 	 Best Recall for 0.4 precision: 0.865
2024-11-04 18:11 - INFO - ---------------------------------------------
2024-11-04 18:13 - INFO - ---------------------------------------------
2024-11-04 18:13 - INFO - Epoch: 09 | Time: 1m 54s
2024-11-04 18:13 - INFO - 	 Train Loss: 0.116
2024-11-04 18:13 - INFO - 	 Val. Loss: 0.149
2024-11-04 18:13 - INFO - 	 ROC-AUC: 0.916
2024-11-04 18:13 - INFO - 	 PR-AUC: 0.446
2024-11-04 18:13 - INFO - 	 Recall for 0.4 precision: 0.615
2024-11-04 18:13 - INFO - 	 Best Val. Loss: 0.124
2024-11-04 18:13 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 18:13 - INFO - 	 Best PR-AUC: 0.517
2024-11-04 18:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-04 18:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-11-04 18:13 - INFO - 	 Best Recall for 0.4 precision: 0.865
2024-11-04 18:13 - INFO - ---------------------------------------------
2024-11-04 18:15 - INFO - ---------------------------------------------
2024-11-04 18:15 - INFO - Epoch: 10 | Time: 1m 53s
2024-11-04 18:15 - INFO - 	 Train Loss: 0.113
2024-11-04 18:15 - INFO - 	 Val. Loss: 0.146
2024-11-04 18:15 - INFO - 	 ROC-AUC: 0.941
2024-11-04 18:15 - INFO - 	 PR-AUC: 0.419
2024-11-04 18:15 - INFO - 	 Recall for 0.4 precision: 0.693
2024-11-04 18:15 - INFO - 	 Best Val. Loss: 0.124
2024-11-04 18:15 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 18:15 - INFO - 	 Best PR-AUC: 0.517
2024-11-04 18:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-04 18:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-11-04 18:15 - INFO - 	 Best Recall for 0.4 precision: 0.865
2024-11-04 18:15 - INFO - ---------------------------------------------
2024-11-04 18:18 - INFO - Fit the preprocessing pipeline
2024-11-04 18:18 - INFO - Training using device: mps
2024-11-04 18:18 - INFO - Creating generators
2024-11-04 18:18 - INFO - The model has 651,257 trainable parameters
2024-11-04 18:18 - INFO - * Model:
2024-11-04 18:18 - INFO - * -----------
2024-11-04 18:18 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 18:18 - INFO - * -----------
2024-11-04 18:18 - INFO - Evaluating model based on: aucpr
2024-11-04 18:18 - INFO - Training..

2024-11-04 18:19 - INFO - ---------------------------------------------
2024-11-04 18:19 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 18:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11479
2024-11-04 18:19 - INFO - 	 Train Loss: 0.263
2024-11-04 18:19 - INFO - 	 Val. Loss: 0.297
2024-11-04 18:19 - INFO - 	 ROC-AUC: 0.704
2024-11-04 18:19 - INFO - 	 PR-AUC: 0.115
2024-11-04 18:19 - INFO - 	 Recall for 0.4 precision: 0.029
2024-11-04 18:19 - INFO - 	 Best Val. Loss: 0.297
2024-11-04 18:19 - INFO - 	 Best ROC-AUC: 0.704
2024-11-04 18:19 - INFO - 	 Best PR-AUC: 0.115
2024-11-04 18:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.696
2024-11-04 18:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.098
2024-11-04 18:19 - INFO - 	 Best Recall for 0.4 precision: 0.029
2024-11-04 18:19 - INFO - ---------------------------------------------
2024-11-04 18:21 - INFO - ---------------------------------------------
2024-11-04 18:21 - INFO - Epoch: 02 | Time: 1m 44s
2024-11-04 18:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21173
2024-11-04 18:21 - INFO - 	 Train Loss: 0.210
2024-11-04 18:21 - INFO - 	 Val. Loss: 0.254
2024-11-04 18:21 - INFO - 	 ROC-AUC: 0.771
2024-11-04 18:21 - INFO - 	 PR-AUC: 0.212
2024-11-04 18:21 - INFO - 	 Recall for 0.4 precision: 0.127
2024-11-04 18:21 - INFO - 	 Best Val. Loss: 0.254
2024-11-04 18:21 - INFO - 	 Best ROC-AUC: 0.771
2024-11-04 18:21 - INFO - 	 Best PR-AUC: 0.212
2024-11-04 18:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-04 18:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.123
2024-11-04 18:21 - INFO - 	 Best Recall for 0.4 precision: 0.127
2024-11-04 18:21 - INFO - ---------------------------------------------
2024-11-04 18:23 - INFO - ---------------------------------------------
2024-11-04 18:23 - INFO - Epoch: 03 | Time: 1m 49s
2024-11-04 18:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25903
2024-11-04 18:23 - INFO - 	 Train Loss: 0.184
2024-11-04 18:23 - INFO - 	 Val. Loss: 0.220
2024-11-04 18:23 - INFO - 	 ROC-AUC: 0.797
2024-11-04 18:23 - INFO - 	 PR-AUC: 0.259
2024-11-04 18:23 - INFO - 	 Recall for 0.4 precision: 0.172
2024-11-04 18:23 - INFO - 	 Best Val. Loss: 0.220
2024-11-04 18:23 - INFO - 	 Best ROC-AUC: 0.797
2024-11-04 18:23 - INFO - 	 Best PR-AUC: 0.259
2024-11-04 18:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.734
2024-11-04 18:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.129
2024-11-04 18:23 - INFO - 	 Best Recall for 0.4 precision: 0.172
2024-11-04 18:23 - INFO - ---------------------------------------------
2024-11-04 18:25 - INFO - ---------------------------------------------
2024-11-04 18:25 - INFO - Epoch: 04 | Time: 1m 50s
2024-11-04 18:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26839
2024-11-04 18:25 - INFO - 	 Train Loss: 0.182
2024-11-04 18:25 - INFO - 	 Val. Loss: 0.264
2024-11-04 18:25 - INFO - 	 ROC-AUC: 0.826
2024-11-04 18:25 - INFO - 	 PR-AUC: 0.268
2024-11-04 18:25 - INFO - 	 Recall for 0.4 precision: 0.176
2024-11-04 18:25 - INFO - 	 Best Val. Loss: 0.220
2024-11-04 18:25 - INFO - 	 Best ROC-AUC: 0.826
2024-11-04 18:25 - INFO - 	 Best PR-AUC: 0.268
2024-11-04 18:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-04 18:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-04 18:25 - INFO - 	 Best Recall for 0.4 precision: 0.176
2024-11-04 18:25 - INFO - ---------------------------------------------
2024-11-04 18:27 - INFO - ---------------------------------------------
2024-11-04 18:27 - INFO - Epoch: 05 | Time: 1m 51s
2024-11-04 18:27 - INFO - 	 Train Loss: 0.176
2024-11-04 18:27 - INFO - 	 Val. Loss: 0.213
2024-11-04 18:27 - INFO - 	 ROC-AUC: 0.822
2024-11-04 18:27 - INFO - 	 PR-AUC: 0.265
2024-11-04 18:27 - INFO - 	 Recall for 0.4 precision: 0.205
2024-11-04 18:27 - INFO - 	 Best Val. Loss: 0.213
2024-11-04 18:27 - INFO - 	 Best ROC-AUC: 0.826
2024-11-04 18:27 - INFO - 	 Best PR-AUC: 0.268
2024-11-04 18:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-04 18:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-04 18:27 - INFO - 	 Best Recall for 0.4 precision: 0.205
2024-11-04 18:27 - INFO - ---------------------------------------------
2024-11-04 18:29 - INFO - ---------------------------------------------
2024-11-04 18:29 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-04 18:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35848
2024-11-04 18:29 - INFO - 	 Train Loss: 0.163
2024-11-04 18:29 - INFO - 	 Val. Loss: 0.180
2024-11-04 18:29 - INFO - 	 ROC-AUC: 0.889
2024-11-04 18:29 - INFO - 	 PR-AUC: 0.358
2024-11-04 18:29 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-04 18:29 - INFO - 	 Best Val. Loss: 0.180
2024-11-04 18:29 - INFO - 	 Best ROC-AUC: 0.889
2024-11-04 18:29 - INFO - 	 Best PR-AUC: 0.358
2024-11-04 18:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.832
2024-11-04 18:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.186
2024-11-04 18:29 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 18:29 - INFO - ---------------------------------------------
2024-11-04 18:31 - INFO - ---------------------------------------------
2024-11-04 18:31 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-04 18:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45801
2024-11-04 18:31 - INFO - 	 Train Loss: 0.142
2024-11-04 18:31 - INFO - 	 Val. Loss: 0.194
2024-11-04 18:31 - INFO - 	 ROC-AUC: 0.935
2024-11-04 18:31 - INFO - 	 PR-AUC: 0.458
2024-11-04 18:31 - INFO - 	 Recall for 0.4 precision: 0.628
2024-11-04 18:31 - INFO - 	 Best Val. Loss: 0.180
2024-11-04 18:31 - INFO - 	 Best ROC-AUC: 0.935
2024-11-04 18:31 - INFO - 	 Best PR-AUC: 0.458
2024-11-04 18:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.888
2024-11-04 18:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.267
2024-11-04 18:31 - INFO - 	 Best Recall for 0.4 precision: 0.628
2024-11-04 18:31 - INFO - ---------------------------------------------
2024-11-04 18:32 - INFO - ---------------------------------------------
2024-11-04 18:32 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-04 18:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4991
2024-11-04 18:32 - INFO - 	 Train Loss: 0.122
2024-11-04 18:32 - INFO - 	 Val. Loss: 0.131
2024-11-04 18:32 - INFO - 	 ROC-AUC: 0.966
2024-11-04 18:32 - INFO - 	 PR-AUC: 0.499
2024-11-04 18:32 - INFO - 	 Recall for 0.4 precision: 0.852
2024-11-04 18:32 - INFO - 	 Best Val. Loss: 0.131
2024-11-04 18:32 - INFO - 	 Best ROC-AUC: 0.966
2024-11-04 18:32 - INFO - 	 Best PR-AUC: 0.499
2024-11-04 18:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-04 18:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-11-04 18:32 - INFO - 	 Best Recall for 0.4 precision: 0.852
2024-11-04 18:32 - INFO - ---------------------------------------------
2024-11-04 18:34 - INFO - ---------------------------------------------
2024-11-04 18:34 - INFO - Epoch: 09 | Time: 1m 56s
2024-11-04 18:34 - INFO - 	 Train Loss: 0.112
2024-11-04 18:34 - INFO - 	 Val. Loss: 0.133
2024-11-04 18:34 - INFO - 	 ROC-AUC: 0.935
2024-11-04 18:34 - INFO - 	 PR-AUC: 0.442
2024-11-04 18:34 - INFO - 	 Recall for 0.4 precision: 0.696
2024-11-04 18:34 - INFO - 	 Best Val. Loss: 0.131
2024-11-04 18:34 - INFO - 	 Best ROC-AUC: 0.966
2024-11-04 18:34 - INFO - 	 Best PR-AUC: 0.499
2024-11-04 18:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-04 18:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-11-04 18:34 - INFO - 	 Best Recall for 0.4 precision: 0.852
2024-11-04 18:34 - INFO - ---------------------------------------------
2024-11-04 18:36 - INFO - ---------------------------------------------
2024-11-04 18:36 - INFO - Epoch: 10 | Time: 1m 53s
2024-11-04 18:36 - INFO - 	 Train Loss: 0.109
2024-11-04 18:36 - INFO - 	 Val. Loss: 0.157
2024-11-04 18:36 - INFO - 	 ROC-AUC: 0.893
2024-11-04 18:36 - INFO - 	 PR-AUC: 0.310
2024-11-04 18:36 - INFO - 	 Recall for 0.4 precision: 0.299
2024-11-04 18:36 - INFO - 	 Best Val. Loss: 0.131
2024-11-04 18:36 - INFO - 	 Best ROC-AUC: 0.966
2024-11-04 18:36 - INFO - 	 Best PR-AUC: 0.499
2024-11-04 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-04 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-11-04 18:36 - INFO - 	 Best Recall for 0.4 precision: 0.852
2024-11-04 18:36 - INFO - ---------------------------------------------
2024-11-04 18:39 - INFO - Fit the preprocessing pipeline
2024-11-04 18:39 - INFO - Training using device: mps
2024-11-04 18:39 - INFO - Creating generators
2024-11-04 18:39 - INFO - The model has 651,257 trainable parameters
2024-11-04 18:39 - INFO - * Model:
2024-11-04 18:39 - INFO - * -----------
2024-11-04 18:39 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 18:39 - INFO - * -----------
2024-11-04 18:39 - INFO - Evaluating model based on: aucpr
2024-11-04 18:39 - INFO - Training..

2024-11-04 18:41 - INFO - ---------------------------------------------
2024-11-04 18:41 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 18:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08549
2024-11-04 18:41 - INFO - 	 Train Loss: 0.244
2024-11-04 18:41 - INFO - 	 Val. Loss: 0.282
2024-11-04 18:41 - INFO - 	 ROC-AUC: 0.603
2024-11-04 18:41 - INFO - 	 PR-AUC: 0.085
2024-11-04 18:41 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 18:41 - INFO - 	 Best Val. Loss: 0.282
2024-11-04 18:41 - INFO - 	 Best ROC-AUC: 0.603
2024-11-04 18:41 - INFO - 	 Best PR-AUC: 0.085
2024-11-04 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.600
2024-11-04 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.087
2024-11-04 18:41 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-04 18:41 - INFO - ---------------------------------------------
2024-11-04 18:42 - INFO - ---------------------------------------------
2024-11-04 18:42 - INFO - Epoch: 02 | Time: 1m 44s
2024-11-04 18:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11247
2024-11-04 18:42 - INFO - 	 Train Loss: 0.203
2024-11-04 18:42 - INFO - 	 Val. Loss: 0.253
2024-11-04 18:42 - INFO - 	 ROC-AUC: 0.700
2024-11-04 18:42 - INFO - 	 PR-AUC: 0.112
2024-11-04 18:42 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 18:42 - INFO - 	 Best Val. Loss: 0.253
2024-11-04 18:42 - INFO - 	 Best ROC-AUC: 0.700
2024-11-04 18:42 - INFO - 	 Best PR-AUC: 0.112
2024-11-04 18:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.703
2024-11-04 18:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-04 18:42 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-04 18:42 - INFO - ---------------------------------------------
2024-11-04 18:44 - INFO - ---------------------------------------------
2024-11-04 18:44 - INFO - Epoch: 03 | Time: 1m 50s
2024-11-04 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21314
2024-11-04 18:44 - INFO - 	 Train Loss: 0.190
2024-11-04 18:44 - INFO - 	 Val. Loss: 0.219
2024-11-04 18:44 - INFO - 	 ROC-AUC: 0.749
2024-11-04 18:44 - INFO - 	 PR-AUC: 0.213
2024-11-04 18:44 - INFO - 	 Recall for 0.4 precision: 0.117
2024-11-04 18:44 - INFO - 	 Best Val. Loss: 0.219
2024-11-04 18:44 - INFO - 	 Best ROC-AUC: 0.749
2024-11-04 18:44 - INFO - 	 Best PR-AUC: 0.213
2024-11-04 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.708
2024-11-04 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.126
2024-11-04 18:44 - INFO - 	 Best Recall for 0.4 precision: 0.117
2024-11-04 18:44 - INFO - ---------------------------------------------
2024-11-04 18:46 - INFO - ---------------------------------------------
2024-11-04 18:46 - INFO - Epoch: 04 | Time: 1m 49s
2024-11-04 18:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24555
2024-11-04 18:46 - INFO - 	 Train Loss: 0.175
2024-11-04 18:46 - INFO - 	 Val. Loss: 0.192
2024-11-04 18:46 - INFO - 	 ROC-AUC: 0.783
2024-11-04 18:46 - INFO - 	 PR-AUC: 0.246
2024-11-04 18:46 - INFO - 	 Recall for 0.4 precision: 0.180
2024-11-04 18:46 - INFO - 	 Best Val. Loss: 0.192
2024-11-04 18:46 - INFO - 	 Best ROC-AUC: 0.783
2024-11-04 18:46 - INFO - 	 Best PR-AUC: 0.246
2024-11-04 18:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-04 18:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-04 18:46 - INFO - 	 Best Recall for 0.4 precision: 0.180
2024-11-04 18:46 - INFO - ---------------------------------------------
2024-11-04 18:48 - INFO - ---------------------------------------------
2024-11-04 18:48 - INFO - Epoch: 05 | Time: 1m 51s
2024-11-04 18:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2538
2024-11-04 18:48 - INFO - 	 Train Loss: 0.166
2024-11-04 18:48 - INFO - 	 Val. Loss: 0.178
2024-11-04 18:48 - INFO - 	 ROC-AUC: 0.818
2024-11-04 18:48 - INFO - 	 PR-AUC: 0.254
2024-11-04 18:48 - INFO - 	 Recall for 0.4 precision: 0.140
2024-11-04 18:48 - INFO - 	 Best Val. Loss: 0.178
2024-11-04 18:48 - INFO - 	 Best ROC-AUC: 0.818
2024-11-04 18:48 - INFO - 	 Best PR-AUC: 0.254
2024-11-04 18:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-04 18:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-04 18:48 - INFO - 	 Best Recall for 0.4 precision: 0.180
2024-11-04 18:48 - INFO - ---------------------------------------------
2024-11-04 18:50 - INFO - ---------------------------------------------
2024-11-04 18:50 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-04 18:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26412
2024-11-04 18:50 - INFO - 	 Train Loss: 0.153
2024-11-04 18:50 - INFO - 	 Val. Loss: 0.166
2024-11-04 18:50 - INFO - 	 ROC-AUC: 0.863
2024-11-04 18:50 - INFO - 	 PR-AUC: 0.264
2024-11-04 18:50 - INFO - 	 Recall for 0.4 precision: 0.138
2024-11-04 18:50 - INFO - 	 Best Val. Loss: 0.166
2024-11-04 18:50 - INFO - 	 Best ROC-AUC: 0.863
2024-11-04 18:50 - INFO - 	 Best PR-AUC: 0.264
2024-11-04 18:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.841
2024-11-04 18:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.200
2024-11-04 18:50 - INFO - 	 Best Recall for 0.4 precision: 0.180
2024-11-04 18:50 - INFO - ---------------------------------------------
2024-11-04 18:52 - INFO - ---------------------------------------------
2024-11-04 18:52 - INFO - Epoch: 07 | Time: 1m 50s
2024-11-04 18:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34008
2024-11-04 18:52 - INFO - 	 Train Loss: 0.128
2024-11-04 18:52 - INFO - 	 Val. Loss: 0.144
2024-11-04 18:52 - INFO - 	 ROC-AUC: 0.934
2024-11-04 18:52 - INFO - 	 PR-AUC: 0.340
2024-11-04 18:52 - INFO - 	 Recall for 0.4 precision: 0.361
2024-11-04 18:52 - INFO - 	 Best Val. Loss: 0.144
2024-11-04 18:52 - INFO - 	 Best ROC-AUC: 0.934
2024-11-04 18:52 - INFO - 	 Best PR-AUC: 0.340
2024-11-04 18:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-11-04 18:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.276
2024-11-04 18:52 - INFO - 	 Best Recall for 0.4 precision: 0.361
2024-11-04 18:52 - INFO - ---------------------------------------------
2024-11-04 18:53 - INFO - ---------------------------------------------
2024-11-04 18:53 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-04 18:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49898
2024-11-04 18:53 - INFO - 	 Train Loss: 0.121
2024-11-04 18:53 - INFO - 	 Val. Loss: 0.114
2024-11-04 18:53 - INFO - 	 ROC-AUC: 0.960
2024-11-04 18:53 - INFO - 	 PR-AUC: 0.499
2024-11-04 18:53 - INFO - 	 Recall for 0.4 precision: 0.833
2024-11-04 18:53 - INFO - 	 Best Val. Loss: 0.114
2024-11-04 18:53 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 18:53 - INFO - 	 Best PR-AUC: 0.499
2024-11-04 18:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-04 18:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.343
2024-11-04 18:53 - INFO - 	 Best Recall for 0.4 precision: 0.833
2024-11-04 18:53 - INFO - ---------------------------------------------
2024-11-04 18:55 - INFO - ---------------------------------------------
2024-11-04 18:55 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-04 18:55 - INFO - 	 Train Loss: 0.115
2024-11-04 18:55 - INFO - 	 Val. Loss: 0.147
2024-11-04 18:55 - INFO - 	 ROC-AUC: 0.934
2024-11-04 18:55 - INFO - 	 PR-AUC: 0.431
2024-11-04 18:55 - INFO - 	 Recall for 0.4 precision: 0.751
2024-11-04 18:55 - INFO - 	 Best Val. Loss: 0.114
2024-11-04 18:55 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 18:55 - INFO - 	 Best PR-AUC: 0.499
2024-11-04 18:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-04 18:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.343
2024-11-04 18:55 - INFO - 	 Best Recall for 0.4 precision: 0.833
2024-11-04 18:55 - INFO - ---------------------------------------------
2024-11-04 18:57 - INFO - ---------------------------------------------
2024-11-04 18:57 - INFO - Epoch: 10 | Time: 1m 51s
2024-11-04 18:57 - INFO - 	 Train Loss: 0.112
2024-11-04 18:57 - INFO - 	 Val. Loss: 0.161
2024-11-04 18:57 - INFO - 	 ROC-AUC: 0.919
2024-11-04 18:57 - INFO - 	 PR-AUC: 0.404
2024-11-04 18:57 - INFO - 	 Recall for 0.4 precision: 0.533
2024-11-04 18:57 - INFO - 	 Best Val. Loss: 0.114
2024-11-04 18:57 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 18:57 - INFO - 	 Best PR-AUC: 0.499
2024-11-04 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-04 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.343
2024-11-04 18:57 - INFO - 	 Best Recall for 0.4 precision: 0.833
2024-11-04 18:57 - INFO - ---------------------------------------------
2024-11-04 19:00 - INFO - Fit the preprocessing pipeline
2024-11-04 19:00 - INFO - Training using device: mps
2024-11-04 19:00 - INFO - Creating generators
2024-11-04 19:00 - INFO - The model has 651,257 trainable parameters
2024-11-04 19:00 - INFO - * Model:
2024-11-04 19:00 - INFO - * -----------
2024-11-04 19:00 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 19:00 - INFO - * -----------
2024-11-04 19:00 - INFO - Evaluating model based on: aucpr
2024-11-04 19:00 - INFO - Training..

2024-11-04 19:02 - INFO - ---------------------------------------------
2024-11-04 19:02 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-04 19:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10851
2024-11-04 19:02 - INFO - 	 Train Loss: 0.254
2024-11-04 19:02 - INFO - 	 Val. Loss: 0.290
2024-11-04 19:02 - INFO - 	 ROC-AUC: 0.712
2024-11-04 19:02 - INFO - 	 PR-AUC: 0.109
2024-11-04 19:02 - INFO - 	 Recall for 0.4 precision: 0.024
2024-11-04 19:02 - INFO - 	 Best Val. Loss: 0.290
2024-11-04 19:02 - INFO - 	 Best ROC-AUC: 0.712
2024-11-04 19:02 - INFO - 	 Best PR-AUC: 0.109
2024-11-04 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.680
2024-11-04 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.084
2024-11-04 19:02 - INFO - 	 Best Recall for 0.4 precision: 0.024
2024-11-04 19:02 - INFO - ---------------------------------------------
2024-11-04 19:03 - INFO - ---------------------------------------------
2024-11-04 19:03 - INFO - Epoch: 02 | Time: 1m 44s
2024-11-04 19:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21596
2024-11-04 19:03 - INFO - 	 Train Loss: 0.208
2024-11-04 19:03 - INFO - 	 Val. Loss: 0.241
2024-11-04 19:03 - INFO - 	 ROC-AUC: 0.756
2024-11-04 19:03 - INFO - 	 PR-AUC: 0.216
2024-11-04 19:03 - INFO - 	 Recall for 0.4 precision: 0.135
2024-11-04 19:03 - INFO - 	 Best Val. Loss: 0.241
2024-11-04 19:03 - INFO - 	 Best ROC-AUC: 0.756
2024-11-04 19:03 - INFO - 	 Best PR-AUC: 0.216
2024-11-04 19:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.725
2024-11-04 19:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.130
2024-11-04 19:03 - INFO - 	 Best Recall for 0.4 precision: 0.135
2024-11-04 19:03 - INFO - ---------------------------------------------
2024-11-04 19:05 - INFO - ---------------------------------------------
2024-11-04 19:05 - INFO - Epoch: 03 | Time: 1m 48s
2024-11-04 19:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24274
2024-11-04 19:05 - INFO - 	 Train Loss: 0.187
2024-11-04 19:05 - INFO - 	 Val. Loss: 0.208
2024-11-04 19:05 - INFO - 	 ROC-AUC: 0.783
2024-11-04 19:05 - INFO - 	 PR-AUC: 0.243
2024-11-04 19:05 - INFO - 	 Recall for 0.4 precision: 0.159
2024-11-04 19:05 - INFO - 	 Best Val. Loss: 0.208
2024-11-04 19:05 - INFO - 	 Best ROC-AUC: 0.783
2024-11-04 19:05 - INFO - 	 Best PR-AUC: 0.243
2024-11-04 19:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.725
2024-11-04 19:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-04 19:05 - INFO - 	 Best Recall for 0.4 precision: 0.159
2024-11-04 19:05 - INFO - ---------------------------------------------
2024-11-04 19:07 - INFO - ---------------------------------------------
2024-11-04 19:07 - INFO - Epoch: 04 | Time: 1m 50s
2024-11-04 19:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28641
2024-11-04 19:07 - INFO - 	 Train Loss: 0.171
2024-11-04 19:07 - INFO - 	 Val. Loss: 0.190
2024-11-04 19:07 - INFO - 	 ROC-AUC: 0.792
2024-11-04 19:07 - INFO - 	 PR-AUC: 0.286
2024-11-04 19:07 - INFO - 	 Recall for 0.4 precision: 0.234
2024-11-04 19:07 - INFO - 	 Best Val. Loss: 0.190
2024-11-04 19:07 - INFO - 	 Best ROC-AUC: 0.792
2024-11-04 19:07 - INFO - 	 Best PR-AUC: 0.286
2024-11-04 19:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-04 19:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 19:07 - INFO - 	 Best Recall for 0.4 precision: 0.234
2024-11-04 19:07 - INFO - ---------------------------------------------
2024-11-04 19:09 - INFO - ---------------------------------------------
2024-11-04 19:09 - INFO - Epoch: 05 | Time: 1m 51s
2024-11-04 19:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2963
2024-11-04 19:09 - INFO - 	 Train Loss: 0.164
2024-11-04 19:09 - INFO - 	 Val. Loss: 0.178
2024-11-04 19:09 - INFO - 	 ROC-AUC: 0.806
2024-11-04 19:09 - INFO - 	 PR-AUC: 0.296
2024-11-04 19:09 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-04 19:09 - INFO - 	 Best Val. Loss: 0.178
2024-11-04 19:09 - INFO - 	 Best ROC-AUC: 0.806
2024-11-04 19:09 - INFO - 	 Best PR-AUC: 0.296
2024-11-04 19:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-04 19:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.174
2024-11-04 19:09 - INFO - 	 Best Recall for 0.4 precision: 0.244
2024-11-04 19:09 - INFO - ---------------------------------------------
2024-11-04 19:11 - INFO - ---------------------------------------------
2024-11-04 19:11 - INFO - Epoch: 06 | Time: 1m 52s
2024-11-04 19:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39949
2024-11-04 19:11 - INFO - 	 Train Loss: 0.153
2024-11-04 19:11 - INFO - 	 Val. Loss: 0.163
2024-11-04 19:11 - INFO - 	 ROC-AUC: 0.921
2024-11-04 19:11 - INFO - 	 PR-AUC: 0.399
2024-11-04 19:11 - INFO - 	 Recall for 0.4 precision: 0.582
2024-11-04 19:11 - INFO - 	 Best Val. Loss: 0.163
2024-11-04 19:11 - INFO - 	 Best ROC-AUC: 0.921
2024-11-04 19:11 - INFO - 	 Best PR-AUC: 0.399
2024-11-04 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.905
2024-11-04 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.268
2024-11-04 19:11 - INFO - 	 Best Recall for 0.4 precision: 0.582
2024-11-04 19:11 - INFO - ---------------------------------------------
2024-11-04 19:13 - INFO - ---------------------------------------------
2024-11-04 19:13 - INFO - Epoch: 07 | Time: 1m 52s
2024-11-04 19:13 - INFO - 	 Train Loss: 0.130
2024-11-04 19:13 - INFO - 	 Val. Loss: 0.158
2024-11-04 19:13 - INFO - 	 ROC-AUC: 0.929
2024-11-04 19:13 - INFO - 	 PR-AUC: 0.385
2024-11-04 19:13 - INFO - 	 Recall for 0.4 precision: 0.524
2024-11-04 19:13 - INFO - 	 Best Val. Loss: 0.158
2024-11-04 19:13 - INFO - 	 Best ROC-AUC: 0.929
2024-11-04 19:13 - INFO - 	 Best PR-AUC: 0.399
2024-11-04 19:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.914
2024-11-04 19:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.268
2024-11-04 19:13 - INFO - 	 Best Recall for 0.4 precision: 0.582
2024-11-04 19:13 - INFO - ---------------------------------------------
2024-11-04 19:14 - INFO - ---------------------------------------------
2024-11-04 19:14 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-04 19:14 - INFO - 	 Train Loss: 0.118
2024-11-04 19:14 - INFO - 	 Val. Loss: 0.139
2024-11-04 19:14 - INFO - 	 ROC-AUC: 0.906
2024-11-04 19:14 - INFO - 	 PR-AUC: 0.364
2024-11-04 19:14 - INFO - 	 Recall for 0.4 precision: 0.433
2024-11-04 19:14 - INFO - 	 Best Val. Loss: 0.139
2024-11-04 19:14 - INFO - 	 Best ROC-AUC: 0.929
2024-11-04 19:14 - INFO - 	 Best PR-AUC: 0.399
2024-11-04 19:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.914
2024-11-04 19:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.268
2024-11-04 19:14 - INFO - 	 Best Recall for 0.4 precision: 0.582
2024-11-04 19:14 - INFO - ---------------------------------------------
2024-11-04 19:16 - INFO - ---------------------------------------------
2024-11-04 19:16 - INFO - Epoch: 09 | Time: 1m 52s
2024-11-04 19:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45184
2024-11-04 19:16 - INFO - 	 Train Loss: 0.113
2024-11-04 19:16 - INFO - 	 Val. Loss: 0.124
2024-11-04 19:16 - INFO - 	 ROC-AUC: 0.952
2024-11-04 19:16 - INFO - 	 PR-AUC: 0.452
2024-11-04 19:16 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 19:16 - INFO - 	 Best Val. Loss: 0.124
2024-11-04 19:16 - INFO - 	 Best ROC-AUC: 0.952
2024-11-04 19:16 - INFO - 	 Best PR-AUC: 0.452
2024-11-04 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-04 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.346
2024-11-04 19:16 - INFO - 	 Best Recall for 0.4 precision: 0.582
2024-11-04 19:16 - INFO - ---------------------------------------------
2024-11-04 19:18 - INFO - ---------------------------------------------
2024-11-04 19:18 - INFO - Epoch: 10 | Time: 1m 51s
2024-11-04 19:18 - INFO - 	 Train Loss: 0.107
2024-11-04 19:18 - INFO - 	 Val. Loss: 0.127
2024-11-04 19:18 - INFO - 	 ROC-AUC: 0.936
2024-11-04 19:18 - INFO - 	 PR-AUC: 0.420
2024-11-04 19:18 - INFO - 	 Recall for 0.4 precision: 0.621
2024-11-04 19:18 - INFO - 	 Best Val. Loss: 0.124
2024-11-04 19:18 - INFO - 	 Best ROC-AUC: 0.952
2024-11-04 19:18 - INFO - 	 Best PR-AUC: 0.452
2024-11-04 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-04 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.346
2024-11-04 19:18 - INFO - 	 Best Recall for 0.4 precision: 0.621
2024-11-04 19:18 - INFO - ---------------------------------------------
2024-11-04 19:21 - INFO - Fit the preprocessing pipeline
2024-11-04 19:21 - INFO - Training using device: mps
2024-11-04 19:21 - INFO - Creating generators
2024-11-04 19:21 - INFO - The model has 651,257 trainable parameters
2024-11-04 19:21 - INFO - * Model:
2024-11-04 19:21 - INFO - * -----------
2024-11-04 19:21 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 19:21 - INFO - * -----------
2024-11-04 19:21 - INFO - Evaluating model based on: aucpr
2024-11-04 19:21 - INFO - Training..

2024-11-04 19:23 - INFO - ---------------------------------------------
2024-11-04 19:23 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 19:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12253
2024-11-04 19:23 - INFO - 	 Train Loss: 0.257
2024-11-04 19:23 - INFO - 	 Val. Loss: 0.302
2024-11-04 19:23 - INFO - 	 ROC-AUC: 0.647
2024-11-04 19:23 - INFO - 	 PR-AUC: 0.123
2024-11-04 19:23 - INFO - 	 Recall for 0.4 precision: 0.046
2024-11-04 19:23 - INFO - 	 Best Val. Loss: 0.302
2024-11-04 19:23 - INFO - 	 Best ROC-AUC: 0.647
2024-11-04 19:23 - INFO - 	 Best PR-AUC: 0.123
2024-11-04 19:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.642
2024-11-04 19:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.103
2024-11-04 19:23 - INFO - 	 Best Recall for 0.4 precision: 0.046
2024-11-04 19:23 - INFO - ---------------------------------------------
2024-11-04 19:24 - INFO - ---------------------------------------------
2024-11-04 19:24 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 19:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19471
2024-11-04 19:24 - INFO - 	 Train Loss: 0.210
2024-11-04 19:24 - INFO - 	 Val. Loss: 0.260
2024-11-04 19:24 - INFO - 	 ROC-AUC: 0.766
2024-11-04 19:24 - INFO - 	 PR-AUC: 0.195
2024-11-04 19:24 - INFO - 	 Recall for 0.4 precision: 0.086
2024-11-04 19:24 - INFO - 	 Best Val. Loss: 0.260
2024-11-04 19:24 - INFO - 	 Best ROC-AUC: 0.766
2024-11-04 19:24 - INFO - 	 Best PR-AUC: 0.195
2024-11-04 19:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-04 19:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-04 19:24 - INFO - 	 Best Recall for 0.4 precision: 0.086
2024-11-04 19:24 - INFO - ---------------------------------------------
2024-11-04 19:26 - INFO - ---------------------------------------------
2024-11-04 19:26 - INFO - Epoch: 03 | Time: 1m 44s
2024-11-04 19:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23931
2024-11-04 19:26 - INFO - 	 Train Loss: 0.186
2024-11-04 19:26 - INFO - 	 Val. Loss: 0.214
2024-11-04 19:26 - INFO - 	 ROC-AUC: 0.778
2024-11-04 19:26 - INFO - 	 PR-AUC: 0.239
2024-11-04 19:26 - INFO - 	 Recall for 0.4 precision: 0.185
2024-11-04 19:26 - INFO - 	 Best Val. Loss: 0.214
2024-11-04 19:26 - INFO - 	 Best ROC-AUC: 0.778
2024-11-04 19:26 - INFO - 	 Best PR-AUC: 0.239
2024-11-04 19:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-11-04 19:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-04 19:26 - INFO - 	 Best Recall for 0.4 precision: 0.185
2024-11-04 19:26 - INFO - ---------------------------------------------
2024-11-04 19:28 - INFO - ---------------------------------------------
2024-11-04 19:28 - INFO - Epoch: 04 | Time: 1m 50s
2024-11-04 19:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27757
2024-11-04 19:28 - INFO - 	 Train Loss: 0.172
2024-11-04 19:28 - INFO - 	 Val. Loss: 0.188
2024-11-04 19:28 - INFO - 	 ROC-AUC: 0.808
2024-11-04 19:28 - INFO - 	 PR-AUC: 0.278
2024-11-04 19:28 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-04 19:28 - INFO - 	 Best Val. Loss: 0.188
2024-11-04 19:28 - INFO - 	 Best ROC-AUC: 0.808
2024-11-04 19:28 - INFO - 	 Best PR-AUC: 0.278
2024-11-04 19:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-04 19:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-04 19:28 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-04 19:28 - INFO - ---------------------------------------------
2024-11-04 19:30 - INFO - ---------------------------------------------
2024-11-04 19:30 - INFO - Epoch: 05 | Time: 1m 52s
2024-11-04 19:30 - INFO - 	 Train Loss: 0.163
2024-11-04 19:30 - INFO - 	 Val. Loss: 0.186
2024-11-04 19:30 - INFO - 	 ROC-AUC: 0.811
2024-11-04 19:30 - INFO - 	 PR-AUC: 0.272
2024-11-04 19:30 - INFO - 	 Recall for 0.4 precision: 0.198
2024-11-04 19:30 - INFO - 	 Best Val. Loss: 0.186
2024-11-04 19:30 - INFO - 	 Best ROC-AUC: 0.811
2024-11-04 19:30 - INFO - 	 Best PR-AUC: 0.278
2024-11-04 19:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 19:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-04 19:30 - INFO - 	 Best Recall for 0.4 precision: 0.198
2024-11-04 19:30 - INFO - ---------------------------------------------
2024-11-04 19:32 - INFO - ---------------------------------------------
2024-11-04 19:32 - INFO - Epoch: 06 | Time: 1m 55s
2024-11-04 19:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39554
2024-11-04 19:32 - INFO - 	 Train Loss: 0.150
2024-11-04 19:32 - INFO - 	 Val. Loss: 0.143
2024-11-04 19:32 - INFO - 	 ROC-AUC: 0.929
2024-11-04 19:32 - INFO - 	 PR-AUC: 0.396
2024-11-04 19:32 - INFO - 	 Recall for 0.4 precision: 0.488
2024-11-04 19:32 - INFO - 	 Best Val. Loss: 0.143
2024-11-04 19:32 - INFO - 	 Best ROC-AUC: 0.929
2024-11-04 19:32 - INFO - 	 Best PR-AUC: 0.396
2024-11-04 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.898
2024-11-04 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.291
2024-11-04 19:32 - INFO - 	 Best Recall for 0.4 precision: 0.488
2024-11-04 19:32 - INFO - ---------------------------------------------
2024-11-04 19:34 - INFO - ---------------------------------------------
2024-11-04 19:34 - INFO - Epoch: 07 | Time: 1m 54s
2024-11-04 19:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42527
2024-11-04 19:34 - INFO - 	 Train Loss: 0.127
2024-11-04 19:34 - INFO - 	 Val. Loss: 0.138
2024-11-04 19:34 - INFO - 	 ROC-AUC: 0.938
2024-11-04 19:34 - INFO - 	 PR-AUC: 0.425
2024-11-04 19:34 - INFO - 	 Recall for 0.4 precision: 0.665
2024-11-04 19:34 - INFO - 	 Best Val. Loss: 0.138
2024-11-04 19:34 - INFO - 	 Best ROC-AUC: 0.938
2024-11-04 19:34 - INFO - 	 Best PR-AUC: 0.425
2024-11-04 19:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-04 19:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-04 19:34 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-11-04 19:34 - INFO - ---------------------------------------------
2024-11-04 19:36 - INFO - ---------------------------------------------
2024-11-04 19:36 - INFO - Epoch: 08 | Time: 1m 55s
2024-11-04 19:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4527
2024-11-04 19:36 - INFO - 	 Train Loss: 0.116
2024-11-04 19:36 - INFO - 	 Val. Loss: 0.240
2024-11-04 19:36 - INFO - 	 ROC-AUC: 0.955
2024-11-04 19:36 - INFO - 	 PR-AUC: 0.453
2024-11-04 19:36 - INFO - 	 Recall for 0.4 precision: 0.020
2024-11-04 19:36 - INFO - 	 Best Val. Loss: 0.138
2024-11-04 19:36 - INFO - 	 Best ROC-AUC: 0.955
2024-11-04 19:36 - INFO - 	 Best PR-AUC: 0.453
2024-11-04 19:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-04 19:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.421
2024-11-04 19:36 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-11-04 19:36 - INFO - ---------------------------------------------
2024-11-04 19:38 - INFO - ---------------------------------------------
2024-11-04 19:38 - INFO - Epoch: 09 | Time: 1m 55s
2024-11-04 19:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50261
2024-11-04 19:38 - INFO - 	 Train Loss: 0.113
2024-11-04 19:38 - INFO - 	 Val. Loss: 0.124
2024-11-04 19:38 - INFO - 	 ROC-AUC: 0.958
2024-11-04 19:38 - INFO - 	 PR-AUC: 0.503
2024-11-04 19:38 - INFO - 	 Recall for 0.4 precision: 0.805
2024-11-04 19:38 - INFO - 	 Best Val. Loss: 0.124
2024-11-04 19:38 - INFO - 	 Best ROC-AUC: 0.958
2024-11-04 19:38 - INFO - 	 Best PR-AUC: 0.503
2024-11-04 19:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-04 19:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.312
2024-11-04 19:38 - INFO - 	 Best Recall for 0.4 precision: 0.805
2024-11-04 19:38 - INFO - ---------------------------------------------
2024-11-04 19:39 - INFO - ---------------------------------------------
2024-11-04 19:39 - INFO - Epoch: 10 | Time: 1m 55s
2024-11-04 19:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5271
2024-11-04 19:39 - INFO - 	 Train Loss: 0.110
2024-11-04 19:39 - INFO - 	 Val. Loss: 0.118
2024-11-04 19:39 - INFO - 	 ROC-AUC: 0.955
2024-11-04 19:39 - INFO - 	 PR-AUC: 0.527
2024-11-04 19:39 - INFO - 	 Recall for 0.4 precision: 0.842
2024-11-04 19:39 - INFO - 	 Best Val. Loss: 0.118
2024-11-04 19:39 - INFO - 	 Best ROC-AUC: 0.958
2024-11-04 19:39 - INFO - 	 Best PR-AUC: 0.527
2024-11-04 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-04 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.307
2024-11-04 19:39 - INFO - 	 Best Recall for 0.4 precision: 0.842
2024-11-04 19:39 - INFO - ---------------------------------------------
2024-11-04 19:42 - INFO - Fit the preprocessing pipeline
2024-11-04 19:42 - INFO - Training using device: mps
2024-11-04 19:42 - INFO - Creating generators
2024-11-04 19:42 - INFO - The model has 651,257 trainable parameters
2024-11-04 19:42 - INFO - * Model:
2024-11-04 19:42 - INFO - * -----------
2024-11-04 19:42 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 19:42 - INFO - * -----------
2024-11-04 19:42 - INFO - Evaluating model based on: aucpr
2024-11-04 19:42 - INFO - Training..

2024-11-04 19:44 - INFO - ---------------------------------------------
2024-11-04 19:44 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 19:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09902
2024-11-04 19:44 - INFO - 	 Train Loss: 0.258
2024-11-04 19:44 - INFO - 	 Val. Loss: 0.291
2024-11-04 19:44 - INFO - 	 ROC-AUC: 0.657
2024-11-04 19:44 - INFO - 	 PR-AUC: 0.099
2024-11-04 19:44 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 19:44 - INFO - 	 Best Val. Loss: 0.291
2024-11-04 19:44 - INFO - 	 Best ROC-AUC: 0.657
2024-11-04 19:44 - INFO - 	 Best PR-AUC: 0.099
2024-11-04 19:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.668
2024-11-04 19:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.106
2024-11-04 19:44 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-04 19:44 - INFO - ---------------------------------------------
2024-11-04 19:46 - INFO - ---------------------------------------------
2024-11-04 19:46 - INFO - Epoch: 02 | Time: 1m 54s
2024-11-04 19:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20619
2024-11-04 19:46 - INFO - 	 Train Loss: 0.209
2024-11-04 19:46 - INFO - 	 Val. Loss: 0.246
2024-11-04 19:46 - INFO - 	 ROC-AUC: 0.759
2024-11-04 19:46 - INFO - 	 PR-AUC: 0.206
2024-11-04 19:46 - INFO - 	 Recall for 0.4 precision: 0.094
2024-11-04 19:46 - INFO - 	 Best Val. Loss: 0.246
2024-11-04 19:46 - INFO - 	 Best ROC-AUC: 0.759
2024-11-04 19:46 - INFO - 	 Best PR-AUC: 0.206
2024-11-04 19:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-11-04 19:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 19:46 - INFO - 	 Best Recall for 0.4 precision: 0.094
2024-11-04 19:46 - INFO - ---------------------------------------------
2024-11-04 19:48 - INFO - ---------------------------------------------
2024-11-04 19:48 - INFO - Epoch: 03 | Time: 1m 56s
2024-11-04 19:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26423
2024-11-04 19:48 - INFO - 	 Train Loss: 0.193
2024-11-04 19:48 - INFO - 	 Val. Loss: 0.218
2024-11-04 19:48 - INFO - 	 ROC-AUC: 0.776
2024-11-04 19:48 - INFO - 	 PR-AUC: 0.264
2024-11-04 19:48 - INFO - 	 Recall for 0.4 precision: 0.255
2024-11-04 19:48 - INFO - 	 Best Val. Loss: 0.218
2024-11-04 19:48 - INFO - 	 Best ROC-AUC: 0.776
2024-11-04 19:48 - INFO - 	 Best PR-AUC: 0.264
2024-11-04 19:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-04 19:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 19:48 - INFO - 	 Best Recall for 0.4 precision: 0.255
2024-11-04 19:48 - INFO - ---------------------------------------------
2024-11-04 19:50 - INFO - ---------------------------------------------
2024-11-04 19:50 - INFO - Epoch: 04 | Time: 1m 57s
2024-11-04 19:50 - INFO - 	 Train Loss: 0.174
2024-11-04 19:50 - INFO - 	 Val. Loss: 0.192
2024-11-04 19:50 - INFO - 	 ROC-AUC: 0.804
2024-11-04 19:50 - INFO - 	 PR-AUC: 0.263
2024-11-04 19:50 - INFO - 	 Recall for 0.4 precision: 0.205
2024-11-04 19:50 - INFO - 	 Best Val. Loss: 0.192
2024-11-04 19:50 - INFO - 	 Best ROC-AUC: 0.804
2024-11-04 19:50 - INFO - 	 Best PR-AUC: 0.264
2024-11-04 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 19:50 - INFO - 	 Best Recall for 0.4 precision: 0.255
2024-11-04 19:50 - INFO - ---------------------------------------------
2024-11-04 19:52 - INFO - ---------------------------------------------
2024-11-04 19:52 - INFO - Epoch: 05 | Time: 1m 57s
2024-11-04 19:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2818
2024-11-04 19:52 - INFO - 	 Train Loss: 0.167
2024-11-04 19:52 - INFO - 	 Val. Loss: 0.188
2024-11-04 19:52 - INFO - 	 ROC-AUC: 0.804
2024-11-04 19:52 - INFO - 	 PR-AUC: 0.282
2024-11-04 19:52 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-04 19:52 - INFO - 	 Best Val. Loss: 0.188
2024-11-04 19:52 - INFO - 	 Best ROC-AUC: 0.804
2024-11-04 19:52 - INFO - 	 Best PR-AUC: 0.282
2024-11-04 19:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-04 19:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 19:52 - INFO - 	 Best Recall for 0.4 precision: 0.255
2024-11-04 19:52 - INFO - ---------------------------------------------
2024-11-04 19:54 - INFO - ---------------------------------------------
2024-11-04 19:54 - INFO - Epoch: 06 | Time: 1m 57s
2024-11-04 19:54 - INFO - 	 Train Loss: 0.161
2024-11-04 19:54 - INFO - 	 Val. Loss: 0.178
2024-11-04 19:54 - INFO - 	 ROC-AUC: 0.817
2024-11-04 19:54 - INFO - 	 PR-AUC: 0.282
2024-11-04 19:54 - INFO - 	 Recall for 0.4 precision: 0.257
2024-11-04 19:54 - INFO - 	 Best Val. Loss: 0.178
2024-11-04 19:54 - INFO - 	 Best ROC-AUC: 0.817
2024-11-04 19:54 - INFO - 	 Best PR-AUC: 0.282
2024-11-04 19:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-04 19:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 19:54 - INFO - 	 Best Recall for 0.4 precision: 0.257
2024-11-04 19:54 - INFO - ---------------------------------------------
2024-11-04 19:56 - INFO - ---------------------------------------------
2024-11-04 19:56 - INFO - Epoch: 07 | Time: 1m 59s
2024-11-04 19:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31395
2024-11-04 19:56 - INFO - 	 Train Loss: 0.154
2024-11-04 19:56 - INFO - 	 Val. Loss: 0.166
2024-11-04 19:56 - INFO - 	 ROC-AUC: 0.836
2024-11-04 19:56 - INFO - 	 PR-AUC: 0.314
2024-11-04 19:56 - INFO - 	 Recall for 0.4 precision: 0.328
2024-11-04 19:56 - INFO - 	 Best Val. Loss: 0.166
2024-11-04 19:56 - INFO - 	 Best ROC-AUC: 0.836
2024-11-04 19:56 - INFO - 	 Best PR-AUC: 0.314
2024-11-04 19:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.790
2024-11-04 19:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.200
2024-11-04 19:56 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-04 19:56 - INFO - ---------------------------------------------
2024-11-04 19:58 - INFO - ---------------------------------------------
2024-11-04 19:58 - INFO - Epoch: 08 | Time: 1m 58s
2024-11-04 19:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31559
2024-11-04 19:58 - INFO - 	 Train Loss: 0.149
2024-11-04 19:58 - INFO - 	 Val. Loss: 0.163
2024-11-04 19:58 - INFO - 	 ROC-AUC: 0.851
2024-11-04 19:58 - INFO - 	 PR-AUC: 0.316
2024-11-04 19:58 - INFO - 	 Recall for 0.4 precision: 0.345
2024-11-04 19:58 - INFO - 	 Best Val. Loss: 0.163
2024-11-04 19:58 - INFO - 	 Best ROC-AUC: 0.851
2024-11-04 19:58 - INFO - 	 Best PR-AUC: 0.316
2024-11-04 19:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.808
2024-11-04 19:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.220
2024-11-04 19:58 - INFO - 	 Best Recall for 0.4 precision: 0.345
2024-11-04 19:58 - INFO - ---------------------------------------------
2024-11-04 20:00 - INFO - ---------------------------------------------
2024-11-04 20:00 - INFO - Epoch: 09 | Time: 1m 58s
2024-11-04 20:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39858
2024-11-04 20:00 - INFO - 	 Train Loss: 0.142
2024-11-04 20:00 - INFO - 	 Val. Loss: 0.154
2024-11-04 20:00 - INFO - 	 ROC-AUC: 0.919
2024-11-04 20:00 - INFO - 	 PR-AUC: 0.399
2024-11-04 20:00 - INFO - 	 Recall for 0.4 precision: 0.465
2024-11-04 20:00 - INFO - 	 Best Val. Loss: 0.154
2024-11-04 20:00 - INFO - 	 Best ROC-AUC: 0.919
2024-11-04 20:00 - INFO - 	 Best PR-AUC: 0.399
2024-11-04 20:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.885
2024-11-04 20:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.253
2024-11-04 20:00 - INFO - 	 Best Recall for 0.4 precision: 0.465
2024-11-04 20:00 - INFO - ---------------------------------------------
2024-11-04 20:01 - INFO - ---------------------------------------------
2024-11-04 20:01 - INFO - Epoch: 10 | Time: 1m 56s
2024-11-04 20:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46455
2024-11-04 20:01 - INFO - 	 Train Loss: 0.126
2024-11-04 20:01 - INFO - 	 Val. Loss: 0.126
2024-11-04 20:01 - INFO - 	 ROC-AUC: 0.960
2024-11-04 20:01 - INFO - 	 PR-AUC: 0.465
2024-11-04 20:01 - INFO - 	 Recall for 0.4 precision: 0.800
2024-11-04 20:01 - INFO - 	 Best Val. Loss: 0.126
2024-11-04 20:01 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 20:01 - INFO - 	 Best PR-AUC: 0.465
2024-11-04 20:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-04 20:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.340
2024-11-04 20:01 - INFO - 	 Best Recall for 0.4 precision: 0.800
2024-11-04 20:01 - INFO - ---------------------------------------------
2024-11-04 20:04 - INFO - Fit the preprocessing pipeline
2024-11-04 20:04 - INFO - Training using device: mps
2024-11-04 20:04 - INFO - Creating generators
2024-11-04 20:04 - INFO - The model has 651,257 trainable parameters
2024-11-04 20:04 - INFO - * Model:
2024-11-04 20:04 - INFO - * -----------
2024-11-04 20:04 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 20:04 - INFO - * -----------
2024-11-04 20:04 - INFO - Evaluating model based on: aucpr
2024-11-04 20:04 - INFO - Training..

2024-11-04 20:06 - INFO - ---------------------------------------------
2024-11-04 20:06 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 20:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11817
2024-11-04 20:06 - INFO - 	 Train Loss: 0.254
2024-11-04 20:06 - INFO - 	 Val. Loss: 0.285
2024-11-04 20:06 - INFO - 	 ROC-AUC: 0.656
2024-11-04 20:06 - INFO - 	 PR-AUC: 0.118
2024-11-04 20:06 - INFO - 	 Recall for 0.4 precision: 0.008
2024-11-04 20:06 - INFO - 	 Best Val. Loss: 0.285
2024-11-04 20:06 - INFO - 	 Best ROC-AUC: 0.656
2024-11-04 20:06 - INFO - 	 Best PR-AUC: 0.118
2024-11-04 20:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.671
2024-11-04 20:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.113
2024-11-04 20:06 - INFO - 	 Best Recall for 0.4 precision: 0.008
2024-11-04 20:06 - INFO - ---------------------------------------------
2024-11-04 20:08 - INFO - ---------------------------------------------
2024-11-04 20:08 - INFO - Epoch: 02 | Time: 1m 48s
2024-11-04 20:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1753
2024-11-04 20:08 - INFO - 	 Train Loss: 0.204
2024-11-04 20:08 - INFO - 	 Val. Loss: 0.233
2024-11-04 20:08 - INFO - 	 ROC-AUC: 0.747
2024-11-04 20:08 - INFO - 	 PR-AUC: 0.175
2024-11-04 20:08 - INFO - 	 Recall for 0.4 precision: 0.068
2024-11-04 20:08 - INFO - 	 Best Val. Loss: 0.233
2024-11-04 20:08 - INFO - 	 Best ROC-AUC: 0.747
2024-11-04 20:08 - INFO - 	 Best PR-AUC: 0.175
2024-11-04 20:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-04 20:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-04 20:08 - INFO - 	 Best Recall for 0.4 precision: 0.068
2024-11-04 20:08 - INFO - ---------------------------------------------
2024-11-04 20:09 - INFO - ---------------------------------------------
2024-11-04 20:09 - INFO - Epoch: 03 | Time: 1m 50s
2024-11-04 20:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25902
2024-11-04 20:09 - INFO - 	 Train Loss: 0.186
2024-11-04 20:09 - INFO - 	 Val. Loss: 0.210
2024-11-04 20:09 - INFO - 	 ROC-AUC: 0.790
2024-11-04 20:09 - INFO - 	 PR-AUC: 0.259
2024-11-04 20:09 - INFO - 	 Recall for 0.4 precision: 0.172
2024-11-04 20:09 - INFO - 	 Best Val. Loss: 0.210
2024-11-04 20:09 - INFO - 	 Best ROC-AUC: 0.790
2024-11-04 20:09 - INFO - 	 Best PR-AUC: 0.259
2024-11-04 20:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 20:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 20:09 - INFO - 	 Best Recall for 0.4 precision: 0.172
2024-11-04 20:09 - INFO - ---------------------------------------------
2024-11-04 20:11 - INFO - ---------------------------------------------
2024-11-04 20:11 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-04 20:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28015
2024-11-04 20:11 - INFO - 	 Train Loss: 0.171
2024-11-04 20:11 - INFO - 	 Val. Loss: 0.190
2024-11-04 20:11 - INFO - 	 ROC-AUC: 0.808
2024-11-04 20:11 - INFO - 	 PR-AUC: 0.280
2024-11-04 20:11 - INFO - 	 Recall for 0.4 precision: 0.236
2024-11-04 20:11 - INFO - 	 Best Val. Loss: 0.190
2024-11-04 20:11 - INFO - 	 Best ROC-AUC: 0.808
2024-11-04 20:11 - INFO - 	 Best PR-AUC: 0.280
2024-11-04 20:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.745
2024-11-04 20:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-04 20:11 - INFO - 	 Best Recall for 0.4 precision: 0.236
2024-11-04 20:11 - INFO - ---------------------------------------------
2024-11-04 20:13 - INFO - ---------------------------------------------
2024-11-04 20:13 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-04 20:13 - INFO - 	 Train Loss: 0.174
2024-11-04 20:13 - INFO - 	 Val. Loss: 0.259
2024-11-04 20:13 - INFO - 	 ROC-AUC: 0.824
2024-11-04 20:13 - INFO - 	 PR-AUC: 0.272
2024-11-04 20:13 - INFO - 	 Recall for 0.4 precision: 0.224
2024-11-04 20:13 - INFO - 	 Best Val. Loss: 0.190
2024-11-04 20:13 - INFO - 	 Best ROC-AUC: 0.824
2024-11-04 20:13 - INFO - 	 Best PR-AUC: 0.280
2024-11-04 20:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-04 20:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-04 20:13 - INFO - 	 Best Recall for 0.4 precision: 0.236
2024-11-04 20:13 - INFO - ---------------------------------------------
2024-11-04 20:15 - INFO - ---------------------------------------------
2024-11-04 20:15 - INFO - Epoch: 06 | Time: 1m 53s
2024-11-04 20:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3892
2024-11-04 20:15 - INFO - 	 Train Loss: 0.154
2024-11-04 20:15 - INFO - 	 Val. Loss: 0.166
2024-11-04 20:15 - INFO - 	 ROC-AUC: 0.939
2024-11-04 20:15 - INFO - 	 PR-AUC: 0.389
2024-11-04 20:15 - INFO - 	 Recall for 0.4 precision: 0.465
2024-11-04 20:15 - INFO - 	 Best Val. Loss: 0.166
2024-11-04 20:15 - INFO - 	 Best ROC-AUC: 0.939
2024-11-04 20:15 - INFO - 	 Best PR-AUC: 0.389
2024-11-04 20:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.912
2024-11-04 20:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.266
2024-11-04 20:15 - INFO - 	 Best Recall for 0.4 precision: 0.465
2024-11-04 20:15 - INFO - ---------------------------------------------
2024-11-04 20:17 - INFO - ---------------------------------------------
2024-11-04 20:17 - INFO - Epoch: 07 | Time: 1m 57s
2024-11-04 20:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48431
2024-11-04 20:17 - INFO - 	 Train Loss: 0.127
2024-11-04 20:17 - INFO - 	 Val. Loss: 0.134
2024-11-04 20:17 - INFO - 	 ROC-AUC: 0.955
2024-11-04 20:17 - INFO - 	 PR-AUC: 0.484
2024-11-04 20:17 - INFO - 	 Recall for 0.4 precision: 0.860
2024-11-04 20:17 - INFO - 	 Best Val. Loss: 0.134
2024-11-04 20:17 - INFO - 	 Best ROC-AUC: 0.955
2024-11-04 20:17 - INFO - 	 Best PR-AUC: 0.484
2024-11-04 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-04 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.387
2024-11-04 20:17 - INFO - 	 Best Recall for 0.4 precision: 0.860
2024-11-04 20:17 - INFO - ---------------------------------------------
2024-11-04 20:19 - INFO - ---------------------------------------------
2024-11-04 20:19 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-04 20:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59238
2024-11-04 20:19 - INFO - 	 Train Loss: 0.116
2024-11-04 20:19 - INFO - 	 Val. Loss: 0.115
2024-11-04 20:19 - INFO - 	 ROC-AUC: 0.954
2024-11-04 20:19 - INFO - 	 PR-AUC: 0.592
2024-11-04 20:19 - INFO - 	 Recall for 0.4 precision: 0.837
2024-11-04 20:19 - INFO - 	 Best Val. Loss: 0.115
2024-11-04 20:19 - INFO - 	 Best ROC-AUC: 0.955
2024-11-04 20:19 - INFO - 	 Best PR-AUC: 0.592
2024-11-04 20:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-04 20:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.352
2024-11-04 20:19 - INFO - 	 Best Recall for 0.4 precision: 0.860
2024-11-04 20:19 - INFO - ---------------------------------------------
2024-11-04 20:21 - INFO - ---------------------------------------------
2024-11-04 20:21 - INFO - Epoch: 09 | Time: 1m 49s
2024-11-04 20:21 - INFO - 	 Train Loss: 0.111
2024-11-04 20:21 - INFO - 	 Val. Loss: 0.114
2024-11-04 20:21 - INFO - 	 ROC-AUC: 0.962
2024-11-04 20:21 - INFO - 	 PR-AUC: 0.572
2024-11-04 20:21 - INFO - 	 Recall for 0.4 precision: 0.865
2024-11-04 20:21 - INFO - 	 Best Val. Loss: 0.114
2024-11-04 20:21 - INFO - 	 Best ROC-AUC: 0.962
2024-11-04 20:21 - INFO - 	 Best PR-AUC: 0.592
2024-11-04 20:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-04 20:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.352
2024-11-04 20:21 - INFO - 	 Best Recall for 0.4 precision: 0.865
2024-11-04 20:21 - INFO - ---------------------------------------------
2024-11-04 20:23 - INFO - ---------------------------------------------
2024-11-04 20:23 - INFO - Epoch: 10 | Time: 1m 49s
2024-11-04 20:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64186
2024-11-04 20:23 - INFO - 	 Train Loss: 0.109
2024-11-04 20:23 - INFO - 	 Val. Loss: 0.102
2024-11-04 20:23 - INFO - 	 ROC-AUC: 0.968
2024-11-04 20:23 - INFO - 	 PR-AUC: 0.642
2024-11-04 20:23 - INFO - 	 Recall for 0.4 precision: 0.925
2024-11-04 20:23 - INFO - 	 Best Val. Loss: 0.102
2024-11-04 20:23 - INFO - 	 Best ROC-AUC: 0.968
2024-11-04 20:23 - INFO - 	 Best PR-AUC: 0.642
2024-11-04 20:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-04 20:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.398
2024-11-04 20:23 - INFO - 	 Best Recall for 0.4 precision: 0.925
2024-11-04 20:23 - INFO - ---------------------------------------------
2024-11-04 20:26 - INFO - Fit the preprocessing pipeline
2024-11-04 20:26 - INFO - Training using device: mps
2024-11-04 20:26 - INFO - Creating generators
2024-11-04 20:26 - INFO - The model has 651,257 trainable parameters
2024-11-04 20:26 - INFO - * Model:
2024-11-04 20:26 - INFO - * -----------
2024-11-04 20:26 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 20:26 - INFO - * -----------
2024-11-04 20:26 - INFO - Evaluating model based on: aucpr
2024-11-04 20:26 - INFO - Training..

2024-11-04 20:28 - INFO - ---------------------------------------------
2024-11-04 20:28 - INFO - Epoch: 01 | Time: 2m 5s
2024-11-04 20:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09797
2024-11-04 20:28 - INFO - 	 Train Loss: 0.256
2024-11-04 20:28 - INFO - 	 Val. Loss: 0.295
2024-11-04 20:28 - INFO - 	 ROC-AUC: 0.655
2024-11-04 20:28 - INFO - 	 PR-AUC: 0.098
2024-11-04 20:28 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 20:28 - INFO - 	 Best Val. Loss: 0.295
2024-11-04 20:28 - INFO - 	 Best ROC-AUC: 0.655
2024-11-04 20:28 - INFO - 	 Best PR-AUC: 0.098
2024-11-04 20:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.640
2024-11-04 20:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.085
2024-11-04 20:28 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-04 20:28 - INFO - ---------------------------------------------
2024-11-04 20:30 - INFO - ---------------------------------------------
2024-11-04 20:30 - INFO - Epoch: 02 | Time: 2m 6s
2024-11-04 20:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22001
2024-11-04 20:30 - INFO - 	 Train Loss: 0.204
2024-11-04 20:30 - INFO - 	 Val. Loss: 0.227
2024-11-04 20:30 - INFO - 	 ROC-AUC: 0.769
2024-11-04 20:30 - INFO - 	 PR-AUC: 0.220
2024-11-04 20:30 - INFO - 	 Recall for 0.4 precision: 0.130
2024-11-04 20:30 - INFO - 	 Best Val. Loss: 0.227
2024-11-04 20:30 - INFO - 	 Best ROC-AUC: 0.769
2024-11-04 20:30 - INFO - 	 Best PR-AUC: 0.220
2024-11-04 20:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.729
2024-11-04 20:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-04 20:30 - INFO - 	 Best Recall for 0.4 precision: 0.130
2024-11-04 20:30 - INFO - ---------------------------------------------
2024-11-04 20:32 - INFO - ---------------------------------------------
2024-11-04 20:32 - INFO - Epoch: 03 | Time: 2m 6s
2024-11-04 20:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24175
2024-11-04 20:32 - INFO - 	 Train Loss: 0.185
2024-11-04 20:32 - INFO - 	 Val. Loss: 0.213
2024-11-04 20:32 - INFO - 	 ROC-AUC: 0.772
2024-11-04 20:32 - INFO - 	 PR-AUC: 0.242
2024-11-04 20:32 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-04 20:32 - INFO - 	 Best Val. Loss: 0.213
2024-11-04 20:32 - INFO - 	 Best ROC-AUC: 0.772
2024-11-04 20:32 - INFO - 	 Best PR-AUC: 0.242
2024-11-04 20:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.726
2024-11-04 20:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.130
2024-11-04 20:32 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-04 20:32 - INFO - ---------------------------------------------
2024-11-04 20:34 - INFO - ---------------------------------------------
2024-11-04 20:34 - INFO - Epoch: 04 | Time: 1m 51s
2024-11-04 20:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26665
2024-11-04 20:34 - INFO - 	 Train Loss: 0.171
2024-11-04 20:34 - INFO - 	 Val. Loss: 0.196
2024-11-04 20:34 - INFO - 	 ROC-AUC: 0.789
2024-11-04 20:34 - INFO - 	 PR-AUC: 0.267
2024-11-04 20:34 - INFO - 	 Recall for 0.4 precision: 0.237
2024-11-04 20:34 - INFO - 	 Best Val. Loss: 0.196
2024-11-04 20:34 - INFO - 	 Best ROC-AUC: 0.789
2024-11-04 20:34 - INFO - 	 Best PR-AUC: 0.267
2024-11-04 20:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-04 20:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-04 20:34 - INFO - 	 Best Recall for 0.4 precision: 0.237
2024-11-04 20:34 - INFO - ---------------------------------------------
2024-11-04 20:36 - INFO - ---------------------------------------------
2024-11-04 20:36 - INFO - Epoch: 05 | Time: 1m 50s
2024-11-04 20:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29236
2024-11-04 20:36 - INFO - 	 Train Loss: 0.165
2024-11-04 20:36 - INFO - 	 Val. Loss: 0.191
2024-11-04 20:36 - INFO - 	 ROC-AUC: 0.802
2024-11-04 20:36 - INFO - 	 PR-AUC: 0.292
2024-11-04 20:36 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-04 20:36 - INFO - 	 Best Val. Loss: 0.191
2024-11-04 20:36 - INFO - 	 Best ROC-AUC: 0.802
2024-11-04 20:36 - INFO - 	 Best PR-AUC: 0.292
2024-11-04 20:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-04 20:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 20:36 - INFO - 	 Best Recall for 0.4 precision: 0.273
2024-11-04 20:36 - INFO - ---------------------------------------------
2024-11-04 20:37 - INFO - ---------------------------------------------
2024-11-04 20:37 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-04 20:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32089
2024-11-04 20:37 - INFO - 	 Train Loss: 0.160
2024-11-04 20:37 - INFO - 	 Val. Loss: 0.180
2024-11-04 20:37 - INFO - 	 ROC-AUC: 0.829
2024-11-04 20:37 - INFO - 	 PR-AUC: 0.321
2024-11-04 20:37 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-04 20:37 - INFO - 	 Best Val. Loss: 0.180
2024-11-04 20:37 - INFO - 	 Best ROC-AUC: 0.829
2024-11-04 20:37 - INFO - 	 Best PR-AUC: 0.321
2024-11-04 20:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-04 20:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-04 20:37 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 20:37 - INFO - ---------------------------------------------
2024-11-04 20:39 - INFO - ---------------------------------------------
2024-11-04 20:39 - INFO - Epoch: 07 | Time: 1m 53s
2024-11-04 20:39 - INFO - 	 Train Loss: 0.149
2024-11-04 20:39 - INFO - 	 Val. Loss: 0.197
2024-11-04 20:39 - INFO - 	 ROC-AUC: 0.854
2024-11-04 20:39 - INFO - 	 PR-AUC: 0.237
2024-11-04 20:39 - INFO - 	 Recall for 0.4 precision: 0.023
2024-11-04 20:39 - INFO - 	 Best Val. Loss: 0.180
2024-11-04 20:39 - INFO - 	 Best ROC-AUC: 0.854
2024-11-04 20:39 - INFO - 	 Best PR-AUC: 0.321
2024-11-04 20:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.822
2024-11-04 20:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-04 20:39 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 20:39 - INFO - ---------------------------------------------
2024-11-04 20:41 - INFO - ---------------------------------------------
2024-11-04 20:41 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-04 20:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47869
2024-11-04 20:41 - INFO - 	 Train Loss: 0.129
2024-11-04 20:41 - INFO - 	 Val. Loss: 0.131
2024-11-04 20:41 - INFO - 	 ROC-AUC: 0.945
2024-11-04 20:41 - INFO - 	 PR-AUC: 0.479
2024-11-04 20:41 - INFO - 	 Recall for 0.4 precision: 0.767
2024-11-04 20:41 - INFO - 	 Best Val. Loss: 0.131
2024-11-04 20:41 - INFO - 	 Best ROC-AUC: 0.945
2024-11-04 20:41 - INFO - 	 Best PR-AUC: 0.479
2024-11-04 20:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-04 20:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.345
2024-11-04 20:41 - INFO - 	 Best Recall for 0.4 precision: 0.767
2024-11-04 20:41 - INFO - ---------------------------------------------
2024-11-04 20:43 - INFO - ---------------------------------------------
2024-11-04 20:43 - INFO - Epoch: 09 | Time: 1m 50s
2024-11-04 20:43 - INFO - 	 Train Loss: 0.116
2024-11-04 20:43 - INFO - 	 Val. Loss: 0.157
2024-11-04 20:43 - INFO - 	 ROC-AUC: 0.884
2024-11-04 20:43 - INFO - 	 PR-AUC: 0.320
2024-11-04 20:43 - INFO - 	 Recall for 0.4 precision: 0.254
2024-11-04 20:43 - INFO - 	 Best Val. Loss: 0.131
2024-11-04 20:43 - INFO - 	 Best ROC-AUC: 0.945
2024-11-04 20:43 - INFO - 	 Best PR-AUC: 0.479
2024-11-04 20:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-04 20:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.345
2024-11-04 20:43 - INFO - 	 Best Recall for 0.4 precision: 0.767
2024-11-04 20:43 - INFO - ---------------------------------------------
2024-11-04 20:45 - INFO - ---------------------------------------------
2024-11-04 20:45 - INFO - Epoch: 10 | Time: 1m 42s
2024-11-04 20:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54587
2024-11-04 20:45 - INFO - 	 Train Loss: 0.112
2024-11-04 20:45 - INFO - 	 Val. Loss: 0.119
2024-11-04 20:45 - INFO - 	 ROC-AUC: 0.961
2024-11-04 20:45 - INFO - 	 PR-AUC: 0.546
2024-11-04 20:45 - INFO - 	 Recall for 0.4 precision: 0.863
2024-11-04 20:45 - INFO - 	 Best Val. Loss: 0.119
2024-11-04 20:45 - INFO - 	 Best ROC-AUC: 0.961
2024-11-04 20:45 - INFO - 	 Best PR-AUC: 0.546
2024-11-04 20:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-04 20:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.371
2024-11-04 20:45 - INFO - 	 Best Recall for 0.4 precision: 0.863
2024-11-04 20:45 - INFO - ---------------------------------------------
2024-11-04 20:47 - INFO - Fit the preprocessing pipeline
2024-11-04 20:47 - INFO - Training using device: mps
2024-11-04 20:47 - INFO - Creating generators
2024-11-04 20:47 - INFO - The model has 651,257 trainable parameters
2024-11-04 20:47 - INFO - * Model:
2024-11-04 20:47 - INFO - * -----------
2024-11-04 20:47 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 20:47 - INFO - * -----------
2024-11-04 20:47 - INFO - Evaluating model based on: aucpr
2024-11-04 20:47 - INFO - Training..

2024-11-04 20:49 - INFO - ---------------------------------------------
2024-11-04 20:49 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 20:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11104
2024-11-04 20:49 - INFO - 	 Train Loss: 0.257
2024-11-04 20:49 - INFO - 	 Val. Loss: 0.280
2024-11-04 20:49 - INFO - 	 ROC-AUC: 0.721
2024-11-04 20:49 - INFO - 	 PR-AUC: 0.111
2024-11-04 20:49 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 20:49 - INFO - 	 Best Val. Loss: 0.280
2024-11-04 20:49 - INFO - 	 Best ROC-AUC: 0.721
2024-11-04 20:49 - INFO - 	 Best PR-AUC: 0.111
2024-11-04 20:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.670
2024-11-04 20:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.095
2024-11-04 20:49 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-04 20:49 - INFO - ---------------------------------------------
2024-11-04 20:51 - INFO - ---------------------------------------------
2024-11-04 20:51 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 20:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21642
2024-11-04 20:51 - INFO - 	 Train Loss: 0.209
2024-11-04 20:51 - INFO - 	 Val. Loss: 0.240
2024-11-04 20:51 - INFO - 	 ROC-AUC: 0.769
2024-11-04 20:51 - INFO - 	 PR-AUC: 0.216
2024-11-04 20:51 - INFO - 	 Recall for 0.4 precision: 0.133
2024-11-04 20:51 - INFO - 	 Best Val. Loss: 0.240
2024-11-04 20:51 - INFO - 	 Best ROC-AUC: 0.769
2024-11-04 20:51 - INFO - 	 Best PR-AUC: 0.216
2024-11-04 20:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-04 20:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.121
2024-11-04 20:51 - INFO - 	 Best Recall for 0.4 precision: 0.133
2024-11-04 20:51 - INFO - ---------------------------------------------
2024-11-04 20:53 - INFO - ---------------------------------------------
2024-11-04 20:53 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-04 20:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24633
2024-11-04 20:53 - INFO - 	 Train Loss: 0.188
2024-11-04 20:53 - INFO - 	 Val. Loss: 0.212
2024-11-04 20:53 - INFO - 	 ROC-AUC: 0.794
2024-11-04 20:53 - INFO - 	 PR-AUC: 0.246
2024-11-04 20:53 - INFO - 	 Recall for 0.4 precision: 0.137
2024-11-04 20:53 - INFO - 	 Best Val. Loss: 0.212
2024-11-04 20:53 - INFO - 	 Best ROC-AUC: 0.794
2024-11-04 20:53 - INFO - 	 Best PR-AUC: 0.246
2024-11-04 20:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-04 20:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 20:53 - INFO - 	 Best Recall for 0.4 precision: 0.137
2024-11-04 20:53 - INFO - ---------------------------------------------
2024-11-04 20:54 - INFO - ---------------------------------------------
2024-11-04 20:54 - INFO - Epoch: 04 | Time: 1m 45s
2024-11-04 20:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25752
2024-11-04 20:54 - INFO - 	 Train Loss: 0.173
2024-11-04 20:54 - INFO - 	 Val. Loss: 0.200
2024-11-04 20:54 - INFO - 	 ROC-AUC: 0.769
2024-11-04 20:54 - INFO - 	 PR-AUC: 0.258
2024-11-04 20:54 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-04 20:54 - INFO - 	 Best Val. Loss: 0.200
2024-11-04 20:54 - INFO - 	 Best ROC-AUC: 0.794
2024-11-04 20:54 - INFO - 	 Best PR-AUC: 0.258
2024-11-04 20:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-04 20:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 20:54 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 20:54 - INFO - ---------------------------------------------
2024-11-04 20:56 - INFO - ---------------------------------------------
2024-11-04 20:56 - INFO - Epoch: 05 | Time: 1m 45s
2024-11-04 20:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28487
2024-11-04 20:56 - INFO - 	 Train Loss: 0.165
2024-11-04 20:56 - INFO - 	 Val. Loss: 0.183
2024-11-04 20:56 - INFO - 	 ROC-AUC: 0.802
2024-11-04 20:56 - INFO - 	 PR-AUC: 0.285
2024-11-04 20:56 - INFO - 	 Recall for 0.4 precision: 0.254
2024-11-04 20:56 - INFO - 	 Best Val. Loss: 0.183
2024-11-04 20:56 - INFO - 	 Best ROC-AUC: 0.802
2024-11-04 20:56 - INFO - 	 Best PR-AUC: 0.285
2024-11-04 20:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 20:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-04 20:56 - INFO - 	 Best Recall for 0.4 precision: 0.254
2024-11-04 20:56 - INFO - ---------------------------------------------
2024-11-04 20:58 - INFO - ---------------------------------------------
2024-11-04 20:58 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-04 20:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28976
2024-11-04 20:58 - INFO - 	 Train Loss: 0.160
2024-11-04 20:58 - INFO - 	 Val. Loss: 0.175
2024-11-04 20:58 - INFO - 	 ROC-AUC: 0.821
2024-11-04 20:58 - INFO - 	 PR-AUC: 0.290
2024-11-04 20:58 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-04 20:58 - INFO - 	 Best Val. Loss: 0.175
2024-11-04 20:58 - INFO - 	 Best ROC-AUC: 0.821
2024-11-04 20:58 - INFO - 	 Best PR-AUC: 0.290
2024-11-04 20:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-04 20:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-04 20:58 - INFO - 	 Best Recall for 0.4 precision: 0.254
2024-11-04 20:58 - INFO - ---------------------------------------------
2024-11-04 21:00 - INFO - ---------------------------------------------
2024-11-04 21:00 - INFO - Epoch: 07 | Time: 1m 57s
2024-11-04 21:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32883
2024-11-04 21:00 - INFO - 	 Train Loss: 0.155
2024-11-04 21:00 - INFO - 	 Val. Loss: 0.165
2024-11-04 21:00 - INFO - 	 ROC-AUC: 0.843
2024-11-04 21:00 - INFO - 	 PR-AUC: 0.329
2024-11-04 21:00 - INFO - 	 Recall for 0.4 precision: 0.361
2024-11-04 21:00 - INFO - 	 Best Val. Loss: 0.165
2024-11-04 21:00 - INFO - 	 Best ROC-AUC: 0.843
2024-11-04 21:00 - INFO - 	 Best PR-AUC: 0.329
2024-11-04 21:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.793
2024-11-04 21:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.208
2024-11-04 21:00 - INFO - 	 Best Recall for 0.4 precision: 0.361
2024-11-04 21:00 - INFO - ---------------------------------------------
2024-11-04 21:02 - INFO - ---------------------------------------------
2024-11-04 21:02 - INFO - Epoch: 08 | Time: 2m 2s
2024-11-04 21:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38869
2024-11-04 21:02 - INFO - 	 Train Loss: 0.141
2024-11-04 21:02 - INFO - 	 Val. Loss: 0.137
2024-11-04 21:02 - INFO - 	 ROC-AUC: 0.938
2024-11-04 21:02 - INFO - 	 PR-AUC: 0.389
2024-11-04 21:02 - INFO - 	 Recall for 0.4 precision: 0.631
2024-11-04 21:02 - INFO - 	 Best Val. Loss: 0.137
2024-11-04 21:02 - INFO - 	 Best ROC-AUC: 0.938
2024-11-04 21:02 - INFO - 	 Best PR-AUC: 0.389
2024-11-04 21:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.918
2024-11-04 21:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.315
2024-11-04 21:02 - INFO - 	 Best Recall for 0.4 precision: 0.631
2024-11-04 21:02 - INFO - ---------------------------------------------
2024-11-04 21:04 - INFO - ---------------------------------------------
2024-11-04 21:04 - INFO - Epoch: 09 | Time: 2m 7s
2024-11-04 21:04 - INFO - 	 Train Loss: 0.124
2024-11-04 21:04 - INFO - 	 Val. Loss: 0.133
2024-11-04 21:04 - INFO - 	 ROC-AUC: 0.933
2024-11-04 21:04 - INFO - 	 PR-AUC: 0.353
2024-11-04 21:04 - INFO - 	 Recall for 0.4 precision: 0.390
2024-11-04 21:04 - INFO - 	 Best Val. Loss: 0.133
2024-11-04 21:04 - INFO - 	 Best ROC-AUC: 0.938
2024-11-04 21:04 - INFO - 	 Best PR-AUC: 0.389
2024-11-04 21:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.918
2024-11-04 21:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.315
2024-11-04 21:04 - INFO - 	 Best Recall for 0.4 precision: 0.631
2024-11-04 21:04 - INFO - ---------------------------------------------
2024-11-04 21:06 - INFO - ---------------------------------------------
2024-11-04 21:06 - INFO - Epoch: 10 | Time: 2m 7s
2024-11-04 21:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43091
2024-11-04 21:06 - INFO - 	 Train Loss: 0.117
2024-11-04 21:06 - INFO - 	 Val. Loss: 0.117
2024-11-04 21:06 - INFO - 	 ROC-AUC: 0.960
2024-11-04 21:06 - INFO - 	 PR-AUC: 0.431
2024-11-04 21:06 - INFO - 	 Recall for 0.4 precision: 0.761
2024-11-04 21:06 - INFO - 	 Best Val. Loss: 0.117
2024-11-04 21:06 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 21:06 - INFO - 	 Best PR-AUC: 0.431
2024-11-04 21:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-04 21:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.385
2024-11-04 21:06 - INFO - 	 Best Recall for 0.4 precision: 0.761
2024-11-04 21:06 - INFO - ---------------------------------------------
2024-11-04 21:09 - INFO - Fit the preprocessing pipeline
2024-11-04 21:09 - INFO - Training using device: mps
2024-11-04 21:09 - INFO - Creating generators
2024-11-04 21:09 - INFO - The model has 651,257 trainable parameters
2024-11-04 21:09 - INFO - * Model:
2024-11-04 21:09 - INFO - * -----------
2024-11-04 21:09 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 21:09 - INFO - * -----------
2024-11-04 21:09 - INFO - Evaluating model based on: aucpr
2024-11-04 21:09 - INFO - Training..

2024-11-04 21:11 - INFO - ---------------------------------------------
2024-11-04 21:11 - INFO - Epoch: 01 | Time: 2m 7s
2024-11-04 21:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05435
2024-11-04 21:11 - INFO - 	 Train Loss: 0.254
2024-11-04 21:11 - INFO - 	 Val. Loss: 0.320
2024-11-04 21:11 - INFO - 	 ROC-AUC: 0.534
2024-11-04 21:11 - INFO - 	 PR-AUC: 0.054
2024-11-04 21:11 - INFO - 	 Recall for 0.4 precision: 0.020
2024-11-04 21:11 - INFO - 	 Best Val. Loss: 0.320
2024-11-04 21:11 - INFO - 	 Best ROC-AUC: 0.534
2024-11-04 21:11 - INFO - 	 Best PR-AUC: 0.054
2024-11-04 21:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.528
2024-11-04 21:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.057
2024-11-04 21:11 - INFO - 	 Best Recall for 0.4 precision: 0.020
2024-11-04 21:11 - INFO - ---------------------------------------------
2024-11-04 21:14 - INFO - ---------------------------------------------
2024-11-04 21:14 - INFO - Epoch: 02 | Time: 2m 17s
2024-11-04 21:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05798
2024-11-04 21:14 - INFO - 	 Train Loss: 0.210
2024-11-04 21:14 - INFO - 	 Val. Loss: 0.260
2024-11-04 21:14 - INFO - 	 ROC-AUC: 0.580
2024-11-04 21:14 - INFO - 	 PR-AUC: 0.058
2024-11-04 21:14 - INFO - 	 Recall for 0.4 precision: 0.125
2024-11-04 21:14 - INFO - 	 Best Val. Loss: 0.260
2024-11-04 21:14 - INFO - 	 Best ROC-AUC: 0.580
2024-11-04 21:14 - INFO - 	 Best PR-AUC: 0.058
2024-11-04 21:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.564
2024-11-04 21:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.061
2024-11-04 21:14 - INFO - 	 Best Recall for 0.4 precision: 0.125
2024-11-04 21:14 - INFO - ---------------------------------------------
2024-11-04 21:16 - INFO - ---------------------------------------------
2024-11-04 21:16 - INFO - Epoch: 03 | Time: 2m 12s
2024-11-04 21:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10361
2024-11-04 21:16 - INFO - 	 Train Loss: 0.193
2024-11-04 21:16 - INFO - 	 Val. Loss: 0.238
2024-11-04 21:16 - INFO - 	 ROC-AUC: 0.678
2024-11-04 21:16 - INFO - 	 PR-AUC: 0.104
2024-11-04 21:16 - INFO - 	 Recall for 0.4 precision: 0.140
2024-11-04 21:16 - INFO - 	 Best Val. Loss: 0.238
2024-11-04 21:16 - INFO - 	 Best ROC-AUC: 0.678
2024-11-04 21:16 - INFO - 	 Best PR-AUC: 0.104
2024-11-04 21:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.693
2024-11-04 21:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.121
2024-11-04 21:16 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-04 21:16 - INFO - ---------------------------------------------
2024-11-04 21:18 - INFO - ---------------------------------------------
2024-11-04 21:18 - INFO - Epoch: 04 | Time: 2m 10s
2024-11-04 21:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17761
2024-11-04 21:18 - INFO - 	 Train Loss: 0.181
2024-11-04 21:18 - INFO - 	 Val. Loss: 0.210
2024-11-04 21:18 - INFO - 	 ROC-AUC: 0.777
2024-11-04 21:18 - INFO - 	 PR-AUC: 0.178
2024-11-04 21:18 - INFO - 	 Recall for 0.4 precision: 0.078
2024-11-04 21:18 - INFO - 	 Best Val. Loss: 0.210
2024-11-04 21:18 - INFO - 	 Best ROC-AUC: 0.777
2024-11-04 21:18 - INFO - 	 Best PR-AUC: 0.178
2024-11-04 21:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.725
2024-11-04 21:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-04 21:18 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-04 21:18 - INFO - ---------------------------------------------
2024-11-04 21:20 - INFO - ---------------------------------------------
2024-11-04 21:20 - INFO - Epoch: 05 | Time: 2m 11s
2024-11-04 21:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23519
2024-11-04 21:20 - INFO - 	 Train Loss: 0.173
2024-11-04 21:20 - INFO - 	 Val. Loss: 0.197
2024-11-04 21:20 - INFO - 	 ROC-AUC: 0.797
2024-11-04 21:20 - INFO - 	 PR-AUC: 0.235
2024-11-04 21:20 - INFO - 	 Recall for 0.4 precision: 0.159
2024-11-04 21:20 - INFO - 	 Best Val. Loss: 0.197
2024-11-04 21:20 - INFO - 	 Best ROC-AUC: 0.797
2024-11-04 21:20 - INFO - 	 Best PR-AUC: 0.235
2024-11-04 21:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-04 21:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 21:20 - INFO - 	 Best Recall for 0.4 precision: 0.159
2024-11-04 21:20 - INFO - ---------------------------------------------
2024-11-04 21:22 - INFO - ---------------------------------------------
2024-11-04 21:22 - INFO - Epoch: 06 | Time: 2m 11s
2024-11-04 21:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24576
2024-11-04 21:22 - INFO - 	 Train Loss: 0.164
2024-11-04 21:22 - INFO - 	 Val. Loss: 0.191
2024-11-04 21:22 - INFO - 	 ROC-AUC: 0.813
2024-11-04 21:22 - INFO - 	 PR-AUC: 0.246
2024-11-04 21:22 - INFO - 	 Recall for 0.4 precision: 0.140
2024-11-04 21:22 - INFO - 	 Best Val. Loss: 0.191
2024-11-04 21:22 - INFO - 	 Best ROC-AUC: 0.813
2024-11-04 21:22 - INFO - 	 Best PR-AUC: 0.246
2024-11-04 21:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.773
2024-11-04 21:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 21:22 - INFO - 	 Best Recall for 0.4 precision: 0.159
2024-11-04 21:22 - INFO - ---------------------------------------------
2024-11-04 21:25 - INFO - ---------------------------------------------
2024-11-04 21:25 - INFO - Epoch: 07 | Time: 2m 13s
2024-11-04 21:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29923
2024-11-04 21:25 - INFO - 	 Train Loss: 0.157
2024-11-04 21:25 - INFO - 	 Val. Loss: 0.165
2024-11-04 21:25 - INFO - 	 ROC-AUC: 0.891
2024-11-04 21:25 - INFO - 	 PR-AUC: 0.299
2024-11-04 21:25 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-04 21:25 - INFO - 	 Best Val. Loss: 0.165
2024-11-04 21:25 - INFO - 	 Best ROC-AUC: 0.891
2024-11-04 21:25 - INFO - 	 Best PR-AUC: 0.299
2024-11-04 21:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.849
2024-11-04 21:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.178
2024-11-04 21:25 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-04 21:25 - INFO - ---------------------------------------------
2024-11-04 21:27 - INFO - ---------------------------------------------
2024-11-04 21:27 - INFO - Epoch: 08 | Time: 2m 8s
2024-11-04 21:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38064
2024-11-04 21:27 - INFO - 	 Train Loss: 0.142
2024-11-04 21:27 - INFO - 	 Val. Loss: 0.145
2024-11-04 21:27 - INFO - 	 ROC-AUC: 0.936
2024-11-04 21:27 - INFO - 	 PR-AUC: 0.381
2024-11-04 21:27 - INFO - 	 Recall for 0.4 precision: 0.380
2024-11-04 21:27 - INFO - 	 Best Val. Loss: 0.145
2024-11-04 21:27 - INFO - 	 Best ROC-AUC: 0.936
2024-11-04 21:27 - INFO - 	 Best PR-AUC: 0.381
2024-11-04 21:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-04 21:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.261
2024-11-04 21:27 - INFO - 	 Best Recall for 0.4 precision: 0.380
2024-11-04 21:27 - INFO - ---------------------------------------------
2024-11-04 21:29 - INFO - ---------------------------------------------
2024-11-04 21:29 - INFO - Epoch: 09 | Time: 2m 8s
2024-11-04 21:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4147
2024-11-04 21:29 - INFO - 	 Train Loss: 0.126
2024-11-04 21:29 - INFO - 	 Val. Loss: 0.117
2024-11-04 21:29 - INFO - 	 ROC-AUC: 0.941
2024-11-04 21:29 - INFO - 	 PR-AUC: 0.415
2024-11-04 21:29 - INFO - 	 Recall for 0.4 precision: 0.689
2024-11-04 21:29 - INFO - 	 Best Val. Loss: 0.117
2024-11-04 21:29 - INFO - 	 Best ROC-AUC: 0.941
2024-11-04 21:29 - INFO - 	 Best PR-AUC: 0.415
2024-11-04 21:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-04 21:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.333
2024-11-04 21:29 - INFO - 	 Best Recall for 0.4 precision: 0.689
2024-11-04 21:29 - INFO - ---------------------------------------------
2024-11-04 21:31 - INFO - ---------------------------------------------
2024-11-04 21:31 - INFO - Epoch: 10 | Time: 2m 15s
2024-11-04 21:31 - INFO - 	 Train Loss: 0.117
2024-11-04 21:31 - INFO - 	 Val. Loss: 0.140
2024-11-04 21:31 - INFO - 	 ROC-AUC: 0.917
2024-11-04 21:31 - INFO - 	 PR-AUC: 0.386
2024-11-04 21:31 - INFO - 	 Recall for 0.4 precision: 0.550
2024-11-04 21:31 - INFO - 	 Best Val. Loss: 0.117
2024-11-04 21:31 - INFO - 	 Best ROC-AUC: 0.941
2024-11-04 21:31 - INFO - 	 Best PR-AUC: 0.415
2024-11-04 21:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-04 21:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.333
2024-11-04 21:31 - INFO - 	 Best Recall for 0.4 precision: 0.689
2024-11-04 21:31 - INFO - ---------------------------------------------
