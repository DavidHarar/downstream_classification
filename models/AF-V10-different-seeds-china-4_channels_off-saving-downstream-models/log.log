2024-11-03 18:33 - INFO - Fit the preprocessing pipeline
2024-11-03 18:33 - INFO - Training using device: mps
2024-11-03 18:33 - INFO - Creating generators
2024-11-03 18:33 - INFO - The model has 651,257 trainable parameters
2024-11-03 18:33 - INFO - * Model:
2024-11-03 18:33 - INFO - * -----------
2024-11-03 18:33 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 18:33 - INFO - * -----------
2024-11-03 18:33 - INFO - Evaluating model based on: aucpr
2024-11-03 18:33 - INFO - Training..

2024-11-03 18:35 - INFO - ---------------------------------------------
2024-11-03 18:35 - INFO - Epoch: 01 | Time: 1m 56s
2024-11-03 18:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16935
2024-11-03 18:35 - INFO - 	 Train Loss: 0.255
2024-11-03 18:35 - INFO - 	 Val. Loss: 0.279
2024-11-03 18:35 - INFO - 	 ROC-AUC: 0.727
2024-11-03 18:35 - INFO - 	 PR-AUC: 0.169
2024-11-03 18:35 - INFO - 	 Recall for 0.4 precision: 0.098
2024-11-03 18:35 - INFO - 	 Best Val. Loss: 0.279
2024-11-03 18:35 - INFO - 	 Best ROC-AUC: 0.727
2024-11-03 18:35 - INFO - 	 Best PR-AUC: 0.169
2024-11-03 18:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.703
2024-11-03 18:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.094
2024-11-03 18:35 - INFO - 	 Best Recall for 0.4 precision: 0.098
2024-11-03 18:35 - INFO - ---------------------------------------------
2024-11-03 18:37 - INFO - ---------------------------------------------
2024-11-03 18:37 - INFO - Epoch: 02 | Time: 2m 8s
2024-11-03 18:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22941
2024-11-03 18:37 - INFO - 	 Train Loss: 0.208
2024-11-03 18:37 - INFO - 	 Val. Loss: 0.257
2024-11-03 18:37 - INFO - 	 ROC-AUC: 0.739
2024-11-03 18:37 - INFO - 	 PR-AUC: 0.229
2024-11-03 18:37 - INFO - 	 Recall for 0.4 precision: 0.171
2024-11-03 18:37 - INFO - 	 Best Val. Loss: 0.257
2024-11-03 18:37 - INFO - 	 Best ROC-AUC: 0.739
2024-11-03 18:37 - INFO - 	 Best PR-AUC: 0.229
2024-11-03 18:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.726
2024-11-03 18:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.117
2024-11-03 18:37 - INFO - 	 Best Recall for 0.4 precision: 0.171
2024-11-03 18:37 - INFO - ---------------------------------------------
2024-11-03 18:39 - INFO - ---------------------------------------------
2024-11-03 18:39 - INFO - Epoch: 03 | Time: 2m 14s
2024-11-03 18:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25194
2024-11-03 18:39 - INFO - 	 Train Loss: 0.183
2024-11-03 18:39 - INFO - 	 Val. Loss: 0.208
2024-11-03 18:39 - INFO - 	 ROC-AUC: 0.785
2024-11-03 18:39 - INFO - 	 PR-AUC: 0.252
2024-11-03 18:39 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-03 18:39 - INFO - 	 Best Val. Loss: 0.208
2024-11-03 18:39 - INFO - 	 Best ROC-AUC: 0.785
2024-11-03 18:39 - INFO - 	 Best PR-AUC: 0.252
2024-11-03 18:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 18:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-03 18:39 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 18:39 - INFO - ---------------------------------------------
2024-11-03 18:41 - INFO - ---------------------------------------------
2024-11-03 18:41 - INFO - Epoch: 04 | Time: 2m 15s
2024-11-03 18:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26808
2024-11-03 18:41 - INFO - 	 Train Loss: 0.168
2024-11-03 18:41 - INFO - 	 Val. Loss: 0.197
2024-11-03 18:41 - INFO - 	 ROC-AUC: 0.801
2024-11-03 18:41 - INFO - 	 PR-AUC: 0.268
2024-11-03 18:41 - INFO - 	 Recall for 0.4 precision: 0.172
2024-11-03 18:41 - INFO - 	 Best Val. Loss: 0.197
2024-11-03 18:41 - INFO - 	 Best ROC-AUC: 0.801
2024-11-03 18:41 - INFO - 	 Best PR-AUC: 0.268
2024-11-03 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-03 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-03 18:41 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 18:41 - INFO - ---------------------------------------------
2024-11-03 18:44 - INFO - ---------------------------------------------
2024-11-03 18:44 - INFO - Epoch: 05 | Time: 2m 15s
2024-11-03 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28083
2024-11-03 18:44 - INFO - 	 Train Loss: 0.162
2024-11-03 18:44 - INFO - 	 Val. Loss: 0.185
2024-11-03 18:44 - INFO - 	 ROC-AUC: 0.785
2024-11-03 18:44 - INFO - 	 PR-AUC: 0.281
2024-11-03 18:44 - INFO - 	 Recall for 0.4 precision: 0.205
2024-11-03 18:44 - INFO - 	 Best Val. Loss: 0.185
2024-11-03 18:44 - INFO - 	 Best ROC-AUC: 0.801
2024-11-03 18:44 - INFO - 	 Best PR-AUC: 0.281
2024-11-03 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-03 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-03 18:44 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 18:44 - INFO - ---------------------------------------------
2024-11-03 18:46 - INFO - ---------------------------------------------
2024-11-03 18:46 - INFO - Epoch: 06 | Time: 2m 13s
2024-11-03 18:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29471
2024-11-03 18:46 - INFO - 	 Train Loss: 0.158
2024-11-03 18:46 - INFO - 	 Val. Loss: 0.177
2024-11-03 18:46 - INFO - 	 ROC-AUC: 0.807
2024-11-03 18:46 - INFO - 	 PR-AUC: 0.295
2024-11-03 18:46 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-03 18:46 - INFO - 	 Best Val. Loss: 0.177
2024-11-03 18:46 - INFO - 	 Best ROC-AUC: 0.807
2024-11-03 18:46 - INFO - 	 Best PR-AUC: 0.295
2024-11-03 18:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 18:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 18:46 - INFO - 	 Best Recall for 0.4 precision: 0.273
2024-11-03 18:46 - INFO - ---------------------------------------------
2024-11-03 18:48 - INFO - ---------------------------------------------
2024-11-03 18:48 - INFO - Epoch: 07 | Time: 2m 14s
2024-11-03 18:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29914
2024-11-03 18:48 - INFO - 	 Train Loss: 0.154
2024-11-03 18:48 - INFO - 	 Val. Loss: 0.177
2024-11-03 18:48 - INFO - 	 ROC-AUC: 0.804
2024-11-03 18:48 - INFO - 	 PR-AUC: 0.299
2024-11-03 18:48 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-03 18:48 - INFO - 	 Best Val. Loss: 0.177
2024-11-03 18:48 - INFO - 	 Best ROC-AUC: 0.807
2024-11-03 18:48 - INFO - 	 Best PR-AUC: 0.299
2024-11-03 18:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 18:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 18:48 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-03 18:48 - INFO - ---------------------------------------------
2024-11-03 18:50 - INFO - ---------------------------------------------
2024-11-03 18:50 - INFO - Epoch: 08 | Time: 2m 14s
2024-11-03 18:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37757
2024-11-03 18:50 - INFO - 	 Train Loss: 0.145
2024-11-03 18:50 - INFO - 	 Val. Loss: 0.164
2024-11-03 18:50 - INFO - 	 ROC-AUC: 0.907
2024-11-03 18:50 - INFO - 	 PR-AUC: 0.378
2024-11-03 18:50 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-03 18:50 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 18:50 - INFO - 	 Best ROC-AUC: 0.907
2024-11-03 18:50 - INFO - 	 Best PR-AUC: 0.378
2024-11-03 18:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.899
2024-11-03 18:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.273
2024-11-03 18:50 - INFO - 	 Best Recall for 0.4 precision: 0.341
2024-11-03 18:50 - INFO - ---------------------------------------------
2024-11-03 18:53 - INFO - ---------------------------------------------
2024-11-03 18:53 - INFO - Epoch: 09 | Time: 2m 14s
2024-11-03 18:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46195
2024-11-03 18:53 - INFO - 	 Train Loss: 0.121
2024-11-03 18:53 - INFO - 	 Val. Loss: 0.164
2024-11-03 18:53 - INFO - 	 ROC-AUC: 0.957
2024-11-03 18:53 - INFO - 	 PR-AUC: 0.462
2024-11-03 18:53 - INFO - 	 Recall for 0.4 precision: 0.787
2024-11-03 18:53 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 18:53 - INFO - 	 Best ROC-AUC: 0.957
2024-11-03 18:53 - INFO - 	 Best PR-AUC: 0.462
2024-11-03 18:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-03 18:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.384
2024-11-03 18:53 - INFO - 	 Best Recall for 0.4 precision: 0.787
2024-11-03 18:53 - INFO - ---------------------------------------------
2024-11-03 18:55 - INFO - ---------------------------------------------
2024-11-03 18:55 - INFO - Epoch: 10 | Time: 2m 15s
2024-11-03 18:55 - INFO - 	 Train Loss: 0.107
2024-11-03 18:55 - INFO - 	 Val. Loss: 0.180
2024-11-03 18:55 - INFO - 	 ROC-AUC: 0.942
2024-11-03 18:55 - INFO - 	 PR-AUC: 0.439
2024-11-03 18:55 - INFO - 	 Recall for 0.4 precision: 0.631
2024-11-03 18:55 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 18:55 - INFO - 	 Best ROC-AUC: 0.957
2024-11-03 18:55 - INFO - 	 Best PR-AUC: 0.462
2024-11-03 18:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-03 18:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.384
2024-11-03 18:55 - INFO - 	 Best Recall for 0.4 precision: 0.787
2024-11-03 18:55 - INFO - ---------------------------------------------
2024-11-03 18:58 - INFO - Fit the preprocessing pipeline
2024-11-03 18:58 - INFO - Training using device: mps
2024-11-03 18:58 - INFO - Creating generators
2024-11-03 18:58 - INFO - The model has 651,257 trainable parameters
2024-11-03 18:58 - INFO - * Model:
2024-11-03 18:58 - INFO - * -----------
2024-11-03 18:58 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 18:58 - INFO - * -----------
2024-11-03 18:58 - INFO - Evaluating model based on: aucpr
2024-11-03 18:58 - INFO - Training..

2024-11-03 19:00 - INFO - ---------------------------------------------
2024-11-03 19:00 - INFO - Epoch: 01 | Time: 2m 3s
2024-11-03 19:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18016
2024-11-03 19:00 - INFO - 	 Train Loss: 0.252
2024-11-03 19:00 - INFO - 	 Val. Loss: 0.288
2024-11-03 19:00 - INFO - 	 ROC-AUC: 0.747
2024-11-03 19:00 - INFO - 	 PR-AUC: 0.180
2024-11-03 19:00 - INFO - 	 Recall for 0.4 precision: 0.062
2024-11-03 19:00 - INFO - 	 Best Val. Loss: 0.288
2024-11-03 19:00 - INFO - 	 Best ROC-AUC: 0.747
2024-11-03 19:00 - INFO - 	 Best PR-AUC: 0.180
2024-11-03 19:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-11-03 19:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.117
2024-11-03 19:00 - INFO - 	 Best Recall for 0.4 precision: 0.062
2024-11-03 19:00 - INFO - ---------------------------------------------
2024-11-03 19:02 - INFO - ---------------------------------------------
2024-11-03 19:02 - INFO - Epoch: 02 | Time: 2m 12s
2024-11-03 19:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21787
2024-11-03 19:02 - INFO - 	 Train Loss: 0.208
2024-11-03 19:02 - INFO - 	 Val. Loss: 0.231
2024-11-03 19:02 - INFO - 	 ROC-AUC: 0.775
2024-11-03 19:02 - INFO - 	 PR-AUC: 0.218
2024-11-03 19:02 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-03 19:02 - INFO - 	 Best Val. Loss: 0.231
2024-11-03 19:02 - INFO - 	 Best ROC-AUC: 0.775
2024-11-03 19:02 - INFO - 	 Best PR-AUC: 0.218
2024-11-03 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.726
2024-11-03 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.112
2024-11-03 19:02 - INFO - 	 Best Recall for 0.4 precision: 0.163
2024-11-03 19:02 - INFO - ---------------------------------------------
2024-11-03 19:04 - INFO - ---------------------------------------------
2024-11-03 19:04 - INFO - Epoch: 03 | Time: 2m 11s
2024-11-03 19:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23614
2024-11-03 19:04 - INFO - 	 Train Loss: 0.188
2024-11-03 19:04 - INFO - 	 Val. Loss: 0.226
2024-11-03 19:04 - INFO - 	 ROC-AUC: 0.798
2024-11-03 19:04 - INFO - 	 PR-AUC: 0.236
2024-11-03 19:04 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-03 19:04 - INFO - 	 Best Val. Loss: 0.226
2024-11-03 19:04 - INFO - 	 Best ROC-AUC: 0.798
2024-11-03 19:04 - INFO - 	 Best PR-AUC: 0.236
2024-11-03 19:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-03 19:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 19:04 - INFO - 	 Best Recall for 0.4 precision: 0.163
2024-11-03 19:04 - INFO - ---------------------------------------------
2024-11-03 19:06 - INFO - ---------------------------------------------
2024-11-03 19:06 - INFO - Epoch: 04 | Time: 2m 12s
2024-11-03 19:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25568
2024-11-03 19:06 - INFO - 	 Train Loss: 0.172
2024-11-03 19:06 - INFO - 	 Val. Loss: 0.193
2024-11-03 19:06 - INFO - 	 ROC-AUC: 0.794
2024-11-03 19:06 - INFO - 	 PR-AUC: 0.256
2024-11-03 19:06 - INFO - 	 Recall for 0.4 precision: 0.185
2024-11-03 19:06 - INFO - 	 Best Val. Loss: 0.193
2024-11-03 19:06 - INFO - 	 Best ROC-AUC: 0.798
2024-11-03 19:06 - INFO - 	 Best PR-AUC: 0.256
2024-11-03 19:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-03 19:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.176
2024-11-03 19:06 - INFO - 	 Best Recall for 0.4 precision: 0.185
2024-11-03 19:06 - INFO - ---------------------------------------------
2024-11-03 19:09 - INFO - ---------------------------------------------
2024-11-03 19:09 - INFO - Epoch: 05 | Time: 2m 13s
2024-11-03 19:09 - INFO - 	 Train Loss: 0.167
2024-11-03 19:09 - INFO - 	 Val. Loss: 0.177
2024-11-03 19:09 - INFO - 	 ROC-AUC: 0.835
2024-11-03 19:09 - INFO - 	 PR-AUC: 0.214
2024-11-03 19:09 - INFO - 	 Recall for 0.4 precision: 0.171
2024-11-03 19:09 - INFO - 	 Best Val. Loss: 0.177
2024-11-03 19:09 - INFO - 	 Best ROC-AUC: 0.835
2024-11-03 19:09 - INFO - 	 Best PR-AUC: 0.256
2024-11-03 19:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-03 19:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.176
2024-11-03 19:09 - INFO - 	 Best Recall for 0.4 precision: 0.185
2024-11-03 19:09 - INFO - ---------------------------------------------
2024-11-03 19:11 - INFO - ---------------------------------------------
2024-11-03 19:11 - INFO - Epoch: 06 | Time: 2m 18s
2024-11-03 19:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30934
2024-11-03 19:11 - INFO - 	 Train Loss: 0.157
2024-11-03 19:11 - INFO - 	 Val. Loss: 0.161
2024-11-03 19:11 - INFO - 	 ROC-AUC: 0.830
2024-11-03 19:11 - INFO - 	 PR-AUC: 0.309
2024-11-03 19:11 - INFO - 	 Recall for 0.4 precision: 0.309
2024-11-03 19:11 - INFO - 	 Best Val. Loss: 0.161
2024-11-03 19:11 - INFO - 	 Best ROC-AUC: 0.835
2024-11-03 19:11 - INFO - 	 Best PR-AUC: 0.309
2024-11-03 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-03 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.203
2024-11-03 19:11 - INFO - 	 Best Recall for 0.4 precision: 0.309
2024-11-03 19:11 - INFO - ---------------------------------------------
2024-11-03 19:13 - INFO - ---------------------------------------------
2024-11-03 19:13 - INFO - Epoch: 07 | Time: 2m 18s
2024-11-03 19:13 - INFO - 	 Train Loss: 0.140
2024-11-03 19:13 - INFO - 	 Val. Loss: 0.257
2024-11-03 19:13 - INFO - 	 ROC-AUC: 0.650
2024-11-03 19:13 - INFO - 	 PR-AUC: 0.083
2024-11-03 19:13 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 19:13 - INFO - 	 Best Val. Loss: 0.161
2024-11-03 19:13 - INFO - 	 Best ROC-AUC: 0.835
2024-11-03 19:13 - INFO - 	 Best PR-AUC: 0.309
2024-11-03 19:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-03 19:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.203
2024-11-03 19:13 - INFO - 	 Best Recall for 0.4 precision: 0.309
2024-11-03 19:13 - INFO - ---------------------------------------------
2024-11-03 19:16 - INFO - ---------------------------------------------
2024-11-03 19:16 - INFO - Epoch: 08 | Time: 2m 17s
2024-11-03 19:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57795
2024-11-03 19:16 - INFO - 	 Train Loss: 0.126
2024-11-03 19:16 - INFO - 	 Val. Loss: 0.109
2024-11-03 19:16 - INFO - 	 ROC-AUC: 0.957
2024-11-03 19:16 - INFO - 	 PR-AUC: 0.578
2024-11-03 19:16 - INFO - 	 Recall for 0.4 precision: 0.865
2024-11-03 19:16 - INFO - 	 Best Val. Loss: 0.109
2024-11-03 19:16 - INFO - 	 Best ROC-AUC: 0.957
2024-11-03 19:16 - INFO - 	 Best PR-AUC: 0.578
2024-11-03 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-03 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.391
2024-11-03 19:16 - INFO - 	 Best Recall for 0.4 precision: 0.865
2024-11-03 19:16 - INFO - ---------------------------------------------
2024-11-03 19:18 - INFO - ---------------------------------------------
2024-11-03 19:18 - INFO - Epoch: 09 | Time: 2m 17s
2024-11-03 19:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62413
2024-11-03 19:18 - INFO - 	 Train Loss: 0.113
2024-11-03 19:18 - INFO - 	 Val. Loss: 0.098
2024-11-03 19:18 - INFO - 	 ROC-AUC: 0.962
2024-11-03 19:18 - INFO - 	 PR-AUC: 0.624
2024-11-03 19:18 - INFO - 	 Recall for 0.4 precision: 0.904
2024-11-03 19:18 - INFO - 	 Best Val. Loss: 0.098
2024-11-03 19:18 - INFO - 	 Best ROC-AUC: 0.962
2024-11-03 19:18 - INFO - 	 Best PR-AUC: 0.624
2024-11-03 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-03 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-11-03 19:18 - INFO - 	 Best Recall for 0.4 precision: 0.904
2024-11-03 19:18 - INFO - ---------------------------------------------
2024-11-03 19:20 - INFO - ---------------------------------------------
2024-11-03 19:20 - INFO - Epoch: 10 | Time: 2m 16s
2024-11-03 19:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63712
2024-11-03 19:20 - INFO - 	 Train Loss: 0.106
2024-11-03 19:20 - INFO - 	 Val. Loss: 0.084
2024-11-03 19:20 - INFO - 	 ROC-AUC: 0.970
2024-11-03 19:20 - INFO - 	 PR-AUC: 0.637
2024-11-03 19:20 - INFO - 	 Recall for 0.4 precision: 0.919
2024-11-03 19:20 - INFO - 	 Best Val. Loss: 0.084
2024-11-03 19:20 - INFO - 	 Best ROC-AUC: 0.970
2024-11-03 19:20 - INFO - 	 Best PR-AUC: 0.637
2024-11-03 19:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-03 19:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.424
2024-11-03 19:20 - INFO - 	 Best Recall for 0.4 precision: 0.919
2024-11-03 19:20 - INFO - ---------------------------------------------
2024-11-03 19:23 - INFO - Fit the preprocessing pipeline
2024-11-03 19:23 - INFO - Training using device: mps
2024-11-03 19:23 - INFO - Creating generators
2024-11-03 19:23 - INFO - The model has 651,257 trainable parameters
2024-11-03 19:23 - INFO - * Model:
2024-11-03 19:23 - INFO - * -----------
2024-11-03 19:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 19:23 - INFO - * -----------
2024-11-03 19:23 - INFO - Evaluating model based on: aucpr
2024-11-03 19:23 - INFO - Training..

2024-11-03 19:25 - INFO - ---------------------------------------------
2024-11-03 19:25 - INFO - Epoch: 01 | Time: 1m 58s
2024-11-03 19:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19546
2024-11-03 19:25 - INFO - 	 Train Loss: 0.254
2024-11-03 19:25 - INFO - 	 Val. Loss: 0.308
2024-11-03 19:25 - INFO - 	 ROC-AUC: 0.739
2024-11-03 19:25 - INFO - 	 PR-AUC: 0.195
2024-11-03 19:25 - INFO - 	 Recall for 0.4 precision: 0.127
2024-11-03 19:25 - INFO - 	 Best Val. Loss: 0.308
2024-11-03 19:25 - INFO - 	 Best ROC-AUC: 0.739
2024-11-03 19:25 - INFO - 	 Best PR-AUC: 0.195
2024-11-03 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.728
2024-11-03 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.128
2024-11-03 19:25 - INFO - 	 Best Recall for 0.4 precision: 0.127
2024-11-03 19:25 - INFO - ---------------------------------------------
2024-11-03 19:27 - INFO - ---------------------------------------------
2024-11-03 19:27 - INFO - Epoch: 02 | Time: 2m 3s
2024-11-03 19:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21007
2024-11-03 19:27 - INFO - 	 Train Loss: 0.203
2024-11-03 19:27 - INFO - 	 Val. Loss: 0.241
2024-11-03 19:27 - INFO - 	 ROC-AUC: 0.763
2024-11-03 19:27 - INFO - 	 PR-AUC: 0.210
2024-11-03 19:27 - INFO - 	 Recall for 0.4 precision: 0.159
2024-11-03 19:27 - INFO - 	 Best Val. Loss: 0.241
2024-11-03 19:27 - INFO - 	 Best ROC-AUC: 0.763
2024-11-03 19:27 - INFO - 	 Best PR-AUC: 0.210
2024-11-03 19:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-03 19:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-03 19:27 - INFO - 	 Best Recall for 0.4 precision: 0.159
2024-11-03 19:27 - INFO - ---------------------------------------------
2024-11-03 19:29 - INFO - ---------------------------------------------
2024-11-03 19:29 - INFO - Epoch: 03 | Time: 2m 2s
2024-11-03 19:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23224
2024-11-03 19:29 - INFO - 	 Train Loss: 0.183
2024-11-03 19:29 - INFO - 	 Val. Loss: 0.205
2024-11-03 19:29 - INFO - 	 ROC-AUC: 0.782
2024-11-03 19:29 - INFO - 	 PR-AUC: 0.232
2024-11-03 19:29 - INFO - 	 Recall for 0.4 precision: 0.195
2024-11-03 19:29 - INFO - 	 Best Val. Loss: 0.205
2024-11-03 19:29 - INFO - 	 Best ROC-AUC: 0.782
2024-11-03 19:29 - INFO - 	 Best PR-AUC: 0.232
2024-11-03 19:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-03 19:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 19:29 - INFO - 	 Best Recall for 0.4 precision: 0.195
2024-11-03 19:29 - INFO - ---------------------------------------------
2024-11-03 19:31 - INFO - ---------------------------------------------
2024-11-03 19:31 - INFO - Epoch: 04 | Time: 2m 3s
2024-11-03 19:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27207
2024-11-03 19:31 - INFO - 	 Train Loss: 0.170
2024-11-03 19:31 - INFO - 	 Val. Loss: 0.197
2024-11-03 19:31 - INFO - 	 ROC-AUC: 0.803
2024-11-03 19:31 - INFO - 	 PR-AUC: 0.272
2024-11-03 19:31 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-03 19:31 - INFO - 	 Best Val. Loss: 0.197
2024-11-03 19:31 - INFO - 	 Best ROC-AUC: 0.803
2024-11-03 19:31 - INFO - 	 Best PR-AUC: 0.272
2024-11-03 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 19:31 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 19:31 - INFO - ---------------------------------------------
2024-11-03 19:33 - INFO - ---------------------------------------------
2024-11-03 19:33 - INFO - Epoch: 05 | Time: 2m 3s
2024-11-03 19:33 - INFO - 	 Train Loss: 0.165
2024-11-03 19:33 - INFO - 	 Val. Loss: 0.208
2024-11-03 19:33 - INFO - 	 ROC-AUC: 0.804
2024-11-03 19:33 - INFO - 	 PR-AUC: 0.204
2024-11-03 19:33 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-03 19:33 - INFO - 	 Best Val. Loss: 0.197
2024-11-03 19:33 - INFO - 	 Best ROC-AUC: 0.804
2024-11-03 19:33 - INFO - 	 Best PR-AUC: 0.272
2024-11-03 19:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.771
2024-11-03 19:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 19:33 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 19:33 - INFO - ---------------------------------------------
2024-11-03 19:35 - INFO - ---------------------------------------------
2024-11-03 19:35 - INFO - Epoch: 06 | Time: 2m 4s
2024-11-03 19:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29451
2024-11-03 19:35 - INFO - 	 Train Loss: 0.164
2024-11-03 19:35 - INFO - 	 Val. Loss: 0.180
2024-11-03 19:35 - INFO - 	 ROC-AUC: 0.815
2024-11-03 19:35 - INFO - 	 PR-AUC: 0.295
2024-11-03 19:35 - INFO - 	 Recall for 0.4 precision: 0.311
2024-11-03 19:35 - INFO - 	 Best Val. Loss: 0.180
2024-11-03 19:35 - INFO - 	 Best ROC-AUC: 0.815
2024-11-03 19:35 - INFO - 	 Best PR-AUC: 0.295
2024-11-03 19:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-03 19:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 19:35 - INFO - 	 Best Recall for 0.4 precision: 0.311
2024-11-03 19:35 - INFO - ---------------------------------------------
2024-11-03 19:37 - INFO - ---------------------------------------------
2024-11-03 19:37 - INFO - Epoch: 07 | Time: 2m 3s
2024-11-03 19:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31875
2024-11-03 19:37 - INFO - 	 Train Loss: 0.155
2024-11-03 19:37 - INFO - 	 Val. Loss: 0.169
2024-11-03 19:37 - INFO - 	 ROC-AUC: 0.828
2024-11-03 19:37 - INFO - 	 PR-AUC: 0.319
2024-11-03 19:37 - INFO - 	 Recall for 0.4 precision: 0.364
2024-11-03 19:37 - INFO - 	 Best Val. Loss: 0.169
2024-11-03 19:37 - INFO - 	 Best ROC-AUC: 0.828
2024-11-03 19:37 - INFO - 	 Best PR-AUC: 0.319
2024-11-03 19:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 19:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 19:37 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 19:37 - INFO - ---------------------------------------------
2024-11-03 19:39 - INFO - ---------------------------------------------
2024-11-03 19:39 - INFO - Epoch: 08 | Time: 2m 3s
2024-11-03 19:39 - INFO - 	 Train Loss: 0.152
2024-11-03 19:39 - INFO - 	 Val. Loss: 0.161
2024-11-03 19:39 - INFO - 	 ROC-AUC: 0.845
2024-11-03 19:39 - INFO - 	 PR-AUC: 0.317
2024-11-03 19:39 - INFO - 	 Recall for 0.4 precision: 0.319
2024-11-03 19:39 - INFO - 	 Best Val. Loss: 0.161
2024-11-03 19:39 - INFO - 	 Best ROC-AUC: 0.845
2024-11-03 19:39 - INFO - 	 Best PR-AUC: 0.319
2024-11-03 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 19:39 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 19:39 - INFO - ---------------------------------------------
2024-11-03 19:41 - INFO - ---------------------------------------------
2024-11-03 19:41 - INFO - Epoch: 09 | Time: 2m 4s
2024-11-03 19:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32033
2024-11-03 19:41 - INFO - 	 Train Loss: 0.149
2024-11-03 19:41 - INFO - 	 Val. Loss: 0.164
2024-11-03 19:41 - INFO - 	 ROC-AUC: 0.833
2024-11-03 19:41 - INFO - 	 PR-AUC: 0.320
2024-11-03 19:41 - INFO - 	 Recall for 0.4 precision: 0.345
2024-11-03 19:41 - INFO - 	 Best Val. Loss: 0.161
2024-11-03 19:41 - INFO - 	 Best ROC-AUC: 0.845
2024-11-03 19:41 - INFO - 	 Best PR-AUC: 0.320
2024-11-03 19:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 19:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 19:41 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 19:41 - INFO - ---------------------------------------------
2024-11-03 19:43 - INFO - ---------------------------------------------
2024-11-03 19:43 - INFO - Epoch: 10 | Time: 2m 7s
2024-11-03 19:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32971
2024-11-03 19:43 - INFO - 	 Train Loss: 0.148
2024-11-03 19:43 - INFO - 	 Val. Loss: 0.153
2024-11-03 19:43 - INFO - 	 ROC-AUC: 0.856
2024-11-03 19:43 - INFO - 	 PR-AUC: 0.330
2024-11-03 19:43 - INFO - 	 Recall for 0.4 precision: 0.337
2024-11-03 19:43 - INFO - 	 Best Val. Loss: 0.153
2024-11-03 19:43 - INFO - 	 Best ROC-AUC: 0.856
2024-11-03 19:43 - INFO - 	 Best PR-AUC: 0.330
2024-11-03 19:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.793
2024-11-03 19:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-03 19:43 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 19:43 - INFO - ---------------------------------------------
2024-11-03 19:46 - INFO - Fit the preprocessing pipeline
2024-11-03 19:46 - INFO - Training using device: mps
2024-11-03 19:46 - INFO - Creating generators
2024-11-03 19:46 - INFO - The model has 651,257 trainable parameters
2024-11-03 19:46 - INFO - * Model:
2024-11-03 19:46 - INFO - * -----------
2024-11-03 19:46 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 19:46 - INFO - * -----------
2024-11-03 19:46 - INFO - Evaluating model based on: aucpr
2024-11-03 19:46 - INFO - Training..

2024-11-03 19:48 - INFO - ---------------------------------------------
2024-11-03 19:48 - INFO - Epoch: 01 | Time: 1m 55s
2024-11-03 19:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1551
2024-11-03 19:48 - INFO - 	 Train Loss: 0.253
2024-11-03 19:48 - INFO - 	 Val. Loss: 0.329
2024-11-03 19:48 - INFO - 	 ROC-AUC: 0.697
2024-11-03 19:48 - INFO - 	 PR-AUC: 0.155
2024-11-03 19:48 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-03 19:48 - INFO - 	 Best Val. Loss: 0.329
2024-11-03 19:48 - INFO - 	 Best ROC-AUC: 0.697
2024-11-03 19:48 - INFO - 	 Best PR-AUC: 0.155
2024-11-03 19:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.665
2024-11-03 19:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.097
2024-11-03 19:48 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-03 19:48 - INFO - ---------------------------------------------
2024-11-03 19:50 - INFO - ---------------------------------------------
2024-11-03 19:50 - INFO - Epoch: 02 | Time: 2m 4s
2024-11-03 19:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25265
2024-11-03 19:50 - INFO - 	 Train Loss: 0.207
2024-11-03 19:50 - INFO - 	 Val. Loss: 0.243
2024-11-03 19:50 - INFO - 	 ROC-AUC: 0.764
2024-11-03 19:50 - INFO - 	 PR-AUC: 0.253
2024-11-03 19:50 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-03 19:50 - INFO - 	 Best Val. Loss: 0.243
2024-11-03 19:50 - INFO - 	 Best ROC-AUC: 0.764
2024-11-03 19:50 - INFO - 	 Best PR-AUC: 0.253
2024-11-03 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-03 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-03 19:50 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-03 19:50 - INFO - ---------------------------------------------
2024-11-03 19:52 - INFO - ---------------------------------------------
2024-11-03 19:52 - INFO - Epoch: 03 | Time: 2m 5s
2024-11-03 19:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26391
2024-11-03 19:52 - INFO - 	 Train Loss: 0.186
2024-11-03 19:52 - INFO - 	 Val. Loss: 0.219
2024-11-03 19:52 - INFO - 	 ROC-AUC: 0.774
2024-11-03 19:52 - INFO - 	 PR-AUC: 0.264
2024-11-03 19:52 - INFO - 	 Recall for 0.4 precision: 0.265
2024-11-03 19:52 - INFO - 	 Best Val. Loss: 0.219
2024-11-03 19:52 - INFO - 	 Best ROC-AUC: 0.774
2024-11-03 19:52 - INFO - 	 Best PR-AUC: 0.264
2024-11-03 19:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.733
2024-11-03 19:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-03 19:52 - INFO - 	 Best Recall for 0.4 precision: 0.265
2024-11-03 19:52 - INFO - ---------------------------------------------
2024-11-03 19:54 - INFO - ---------------------------------------------
2024-11-03 19:54 - INFO - Epoch: 04 | Time: 2m 4s
2024-11-03 19:54 - INFO - 	 Train Loss: 0.172
2024-11-03 19:54 - INFO - 	 Val. Loss: 0.210
2024-11-03 19:54 - INFO - 	 ROC-AUC: 0.778
2024-11-03 19:54 - INFO - 	 PR-AUC: 0.259
2024-11-03 19:54 - INFO - 	 Recall for 0.4 precision: 0.280
2024-11-03 19:54 - INFO - 	 Best Val. Loss: 0.210
2024-11-03 19:54 - INFO - 	 Best ROC-AUC: 0.778
2024-11-03 19:54 - INFO - 	 Best PR-AUC: 0.264
2024-11-03 19:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-03 19:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-03 19:54 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 19:54 - INFO - ---------------------------------------------
2024-11-03 19:56 - INFO - ---------------------------------------------
2024-11-03 19:56 - INFO - Epoch: 05 | Time: 2m 5s
2024-11-03 19:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2773
2024-11-03 19:56 - INFO - 	 Train Loss: 0.164
2024-11-03 19:56 - INFO - 	 Val. Loss: 0.189
2024-11-03 19:56 - INFO - 	 ROC-AUC: 0.806
2024-11-03 19:56 - INFO - 	 PR-AUC: 0.277
2024-11-03 19:56 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-03 19:56 - INFO - 	 Best Val. Loss: 0.189
2024-11-03 19:56 - INFO - 	 Best ROC-AUC: 0.806
2024-11-03 19:56 - INFO - 	 Best PR-AUC: 0.277
2024-11-03 19:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-03 19:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-03 19:56 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-03 19:56 - INFO - ---------------------------------------------
2024-11-03 19:59 - INFO - ---------------------------------------------
2024-11-03 19:59 - INFO - Epoch: 06 | Time: 2m 5s
2024-11-03 19:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28653
2024-11-03 19:59 - INFO - 	 Train Loss: 0.158
2024-11-03 19:59 - INFO - 	 Val. Loss: 0.182
2024-11-03 19:59 - INFO - 	 ROC-AUC: 0.806
2024-11-03 19:59 - INFO - 	 PR-AUC: 0.287
2024-11-03 19:59 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-03 19:59 - INFO - 	 Best Val. Loss: 0.182
2024-11-03 19:59 - INFO - 	 Best ROC-AUC: 0.806
2024-11-03 19:59 - INFO - 	 Best PR-AUC: 0.287
2024-11-03 19:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-03 19:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 19:59 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-03 19:59 - INFO - ---------------------------------------------
2024-11-03 20:01 - INFO - ---------------------------------------------
2024-11-03 20:01 - INFO - Epoch: 07 | Time: 2m 5s
2024-11-03 20:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30485
2024-11-03 20:01 - INFO - 	 Train Loss: 0.154
2024-11-03 20:01 - INFO - 	 Val. Loss: 0.178
2024-11-03 20:01 - INFO - 	 ROC-AUC: 0.832
2024-11-03 20:01 - INFO - 	 PR-AUC: 0.305
2024-11-03 20:01 - INFO - 	 Recall for 0.4 precision: 0.268
2024-11-03 20:01 - INFO - 	 Best Val. Loss: 0.178
2024-11-03 20:01 - INFO - 	 Best ROC-AUC: 0.832
2024-11-03 20:01 - INFO - 	 Best PR-AUC: 0.305
2024-11-03 20:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.773
2024-11-03 20:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-03 20:01 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-03 20:01 - INFO - ---------------------------------------------
2024-11-03 20:03 - INFO - ---------------------------------------------
2024-11-03 20:03 - INFO - Epoch: 08 | Time: 2m 5s
2024-11-03 20:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32383
2024-11-03 20:03 - INFO - 	 Train Loss: 0.154
2024-11-03 20:03 - INFO - 	 Val. Loss: 0.158
2024-11-03 20:03 - INFO - 	 ROC-AUC: 0.854
2024-11-03 20:03 - INFO - 	 PR-AUC: 0.324
2024-11-03 20:03 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-03 20:03 - INFO - 	 Best Val. Loss: 0.158
2024-11-03 20:03 - INFO - 	 Best ROC-AUC: 0.854
2024-11-03 20:03 - INFO - 	 Best PR-AUC: 0.324
2024-11-03 20:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.800
2024-11-03 20:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.174
2024-11-03 20:03 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-03 20:03 - INFO - ---------------------------------------------
2024-11-03 20:05 - INFO - ---------------------------------------------
2024-11-03 20:05 - INFO - Epoch: 09 | Time: 2m 5s
2024-11-03 20:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36846
2024-11-03 20:05 - INFO - 	 Train Loss: 0.147
2024-11-03 20:05 - INFO - 	 Val. Loss: 0.136
2024-11-03 20:05 - INFO - 	 ROC-AUC: 0.912
2024-11-03 20:05 - INFO - 	 PR-AUC: 0.368
2024-11-03 20:05 - INFO - 	 Recall for 0.4 precision: 0.449
2024-11-03 20:05 - INFO - 	 Best Val. Loss: 0.136
2024-11-03 20:05 - INFO - 	 Best ROC-AUC: 0.912
2024-11-03 20:05 - INFO - 	 Best PR-AUC: 0.368
2024-11-03 20:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.873
2024-11-03 20:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.243
2024-11-03 20:05 - INFO - 	 Best Recall for 0.4 precision: 0.449
2024-11-03 20:05 - INFO - ---------------------------------------------
2024-11-03 20:07 - INFO - ---------------------------------------------
2024-11-03 20:07 - INFO - Epoch: 10 | Time: 2m 4s
2024-11-03 20:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46923
2024-11-03 20:07 - INFO - 	 Train Loss: 0.130
2024-11-03 20:07 - INFO - 	 Val. Loss: 0.118
2024-11-03 20:07 - INFO - 	 ROC-AUC: 0.938
2024-11-03 20:07 - INFO - 	 PR-AUC: 0.469
2024-11-03 20:07 - INFO - 	 Recall for 0.4 precision: 0.753
2024-11-03 20:07 - INFO - 	 Best Val. Loss: 0.118
2024-11-03 20:07 - INFO - 	 Best ROC-AUC: 0.938
2024-11-03 20:07 - INFO - 	 Best PR-AUC: 0.469
2024-11-03 20:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-03 20:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.348
2024-11-03 20:07 - INFO - 	 Best Recall for 0.4 precision: 0.753
2024-11-03 20:07 - INFO - ---------------------------------------------
2024-11-03 20:10 - INFO - Fit the preprocessing pipeline
2024-11-03 20:10 - INFO - Training using device: mps
2024-11-03 20:10 - INFO - Creating generators
2024-11-03 20:10 - INFO - The model has 651,257 trainable parameters
2024-11-03 20:10 - INFO - * Model:
2024-11-03 20:10 - INFO - * -----------
2024-11-03 20:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 20:10 - INFO - * -----------
2024-11-03 20:10 - INFO - Evaluating model based on: aucpr
2024-11-03 20:10 - INFO - Training..

2024-11-03 20:12 - INFO - ---------------------------------------------
2024-11-03 20:12 - INFO - Epoch: 01 | Time: 1m 57s
2024-11-03 20:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16414
2024-11-03 20:12 - INFO - 	 Train Loss: 0.247
2024-11-03 20:12 - INFO - 	 Val. Loss: 0.286
2024-11-03 20:12 - INFO - 	 ROC-AUC: 0.763
2024-11-03 20:12 - INFO - 	 PR-AUC: 0.164
2024-11-03 20:12 - INFO - 	 Recall for 0.4 precision: 0.044
2024-11-03 20:12 - INFO - 	 Best Val. Loss: 0.286
2024-11-03 20:12 - INFO - 	 Best ROC-AUC: 0.763
2024-11-03 20:12 - INFO - 	 Best PR-AUC: 0.164
2024-11-03 20:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-11-03 20:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.095
2024-11-03 20:12 - INFO - 	 Best Recall for 0.4 precision: 0.044
2024-11-03 20:12 - INFO - ---------------------------------------------
2024-11-03 20:14 - INFO - ---------------------------------------------
2024-11-03 20:14 - INFO - Epoch: 02 | Time: 2m 11s
2024-11-03 20:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24795
2024-11-03 20:14 - INFO - 	 Train Loss: 0.204
2024-11-03 20:14 - INFO - 	 Val. Loss: 0.237
2024-11-03 20:14 - INFO - 	 ROC-AUC: 0.764
2024-11-03 20:14 - INFO - 	 PR-AUC: 0.248
2024-11-03 20:14 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-03 20:14 - INFO - 	 Best Val. Loss: 0.237
2024-11-03 20:14 - INFO - 	 Best ROC-AUC: 0.764
2024-11-03 20:14 - INFO - 	 Best PR-AUC: 0.248
2024-11-03 20:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.727
2024-11-03 20:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 20:14 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 20:14 - INFO - ---------------------------------------------
2024-11-03 20:16 - INFO - ---------------------------------------------
2024-11-03 20:16 - INFO - Epoch: 03 | Time: 2m 13s
2024-11-03 20:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27667
2024-11-03 20:16 - INFO - 	 Train Loss: 0.185
2024-11-03 20:16 - INFO - 	 Val. Loss: 0.202
2024-11-03 20:16 - INFO - 	 ROC-AUC: 0.774
2024-11-03 20:16 - INFO - 	 PR-AUC: 0.277
2024-11-03 20:16 - INFO - 	 Recall for 0.4 precision: 0.270
2024-11-03 20:16 - INFO - 	 Best Val. Loss: 0.202
2024-11-03 20:16 - INFO - 	 Best ROC-AUC: 0.774
2024-11-03 20:16 - INFO - 	 Best PR-AUC: 0.277
2024-11-03 20:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-03 20:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 20:16 - INFO - 	 Best Recall for 0.4 precision: 0.270
2024-11-03 20:16 - INFO - ---------------------------------------------
2024-11-03 20:18 - INFO - ---------------------------------------------
2024-11-03 20:18 - INFO - Epoch: 04 | Time: 2m 14s
2024-11-03 20:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28012
2024-11-03 20:18 - INFO - 	 Train Loss: 0.171
2024-11-03 20:18 - INFO - 	 Val. Loss: 0.195
2024-11-03 20:18 - INFO - 	 ROC-AUC: 0.794
2024-11-03 20:18 - INFO - 	 PR-AUC: 0.280
2024-11-03 20:18 - INFO - 	 Recall for 0.4 precision: 0.281
2024-11-03 20:18 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 20:18 - INFO - 	 Best ROC-AUC: 0.794
2024-11-03 20:18 - INFO - 	 Best PR-AUC: 0.280
2024-11-03 20:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-03 20:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 20:18 - INFO - 	 Best Recall for 0.4 precision: 0.281
2024-11-03 20:18 - INFO - ---------------------------------------------
2024-11-03 20:21 - INFO - ---------------------------------------------
2024-11-03 20:21 - INFO - Epoch: 05 | Time: 2m 14s
2024-11-03 20:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3036
2024-11-03 20:21 - INFO - 	 Train Loss: 0.164
2024-11-03 20:21 - INFO - 	 Val. Loss: 0.176
2024-11-03 20:21 - INFO - 	 ROC-AUC: 0.814
2024-11-03 20:21 - INFO - 	 PR-AUC: 0.304
2024-11-03 20:21 - INFO - 	 Recall for 0.4 precision: 0.309
2024-11-03 20:21 - INFO - 	 Best Val. Loss: 0.176
2024-11-03 20:21 - INFO - 	 Best ROC-AUC: 0.814
2024-11-03 20:21 - INFO - 	 Best PR-AUC: 0.304
2024-11-03 20:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.766
2024-11-03 20:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-03 20:21 - INFO - 	 Best Recall for 0.4 precision: 0.309
2024-11-03 20:21 - INFO - ---------------------------------------------
2024-11-03 20:23 - INFO - ---------------------------------------------
2024-11-03 20:23 - INFO - Epoch: 06 | Time: 2m 15s
2024-11-03 20:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32516
2024-11-03 20:23 - INFO - 	 Train Loss: 0.158
2024-11-03 20:23 - INFO - 	 Val. Loss: 0.148
2024-11-03 20:23 - INFO - 	 ROC-AUC: 0.850
2024-11-03 20:23 - INFO - 	 PR-AUC: 0.325
2024-11-03 20:23 - INFO - 	 Recall for 0.4 precision: 0.333
2024-11-03 20:23 - INFO - 	 Best Val. Loss: 0.148
2024-11-03 20:23 - INFO - 	 Best ROC-AUC: 0.850
2024-11-03 20:23 - INFO - 	 Best PR-AUC: 0.325
2024-11-03 20:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.796
2024-11-03 20:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 20:23 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-03 20:23 - INFO - ---------------------------------------------
2024-11-03 20:25 - INFO - ---------------------------------------------
2024-11-03 20:25 - INFO - Epoch: 07 | Time: 2m 15s
2024-11-03 20:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33186
2024-11-03 20:25 - INFO - 	 Train Loss: 0.155
2024-11-03 20:25 - INFO - 	 Val. Loss: 0.163
2024-11-03 20:25 - INFO - 	 ROC-AUC: 0.824
2024-11-03 20:25 - INFO - 	 PR-AUC: 0.332
2024-11-03 20:25 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-03 20:25 - INFO - 	 Best Val. Loss: 0.148
2024-11-03 20:25 - INFO - 	 Best ROC-AUC: 0.850
2024-11-03 20:25 - INFO - 	 Best PR-AUC: 0.332
2024-11-03 20:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.796
2024-11-03 20:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 20:25 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-03 20:25 - INFO - ---------------------------------------------
2024-11-03 20:27 - INFO - ---------------------------------------------
2024-11-03 20:27 - INFO - Epoch: 08 | Time: 2m 16s
2024-11-03 20:27 - INFO - 	 Train Loss: 0.150
2024-11-03 20:27 - INFO - 	 Val. Loss: 0.153
2024-11-03 20:27 - INFO - 	 ROC-AUC: 0.806
2024-11-03 20:27 - INFO - 	 PR-AUC: 0.270
2024-11-03 20:27 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-03 20:27 - INFO - 	 Best Val. Loss: 0.148
2024-11-03 20:27 - INFO - 	 Best ROC-AUC: 0.850
2024-11-03 20:27 - INFO - 	 Best PR-AUC: 0.332
2024-11-03 20:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.796
2024-11-03 20:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 20:27 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-03 20:27 - INFO - ---------------------------------------------
2024-11-03 20:30 - INFO - ---------------------------------------------
2024-11-03 20:30 - INFO - Epoch: 09 | Time: 2m 18s
2024-11-03 20:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41603
2024-11-03 20:30 - INFO - 	 Train Loss: 0.137
2024-11-03 20:30 - INFO - 	 Val. Loss: 0.135
2024-11-03 20:30 - INFO - 	 ROC-AUC: 0.945
2024-11-03 20:30 - INFO - 	 PR-AUC: 0.416
2024-11-03 20:30 - INFO - 	 Recall for 0.4 precision: 0.644
2024-11-03 20:30 - INFO - 	 Best Val. Loss: 0.135
2024-11-03 20:30 - INFO - 	 Best ROC-AUC: 0.945
2024-11-03 20:30 - INFO - 	 Best PR-AUC: 0.416
2024-11-03 20:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.905
2024-11-03 20:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.248
2024-11-03 20:30 - INFO - 	 Best Recall for 0.4 precision: 0.644
2024-11-03 20:30 - INFO - ---------------------------------------------
2024-11-03 20:32 - INFO - ---------------------------------------------
2024-11-03 20:32 - INFO - Epoch: 10 | Time: 2m 21s
2024-11-03 20:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50078
2024-11-03 20:32 - INFO - 	 Train Loss: 0.119
2024-11-03 20:32 - INFO - 	 Val. Loss: 0.116
2024-11-03 20:32 - INFO - 	 ROC-AUC: 0.970
2024-11-03 20:32 - INFO - 	 PR-AUC: 0.501
2024-11-03 20:32 - INFO - 	 Recall for 0.4 precision: 0.886
2024-11-03 20:32 - INFO - 	 Best Val. Loss: 0.116
2024-11-03 20:32 - INFO - 	 Best ROC-AUC: 0.970
2024-11-03 20:32 - INFO - 	 Best PR-AUC: 0.501
2024-11-03 20:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-03 20:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.350
2024-11-03 20:32 - INFO - 	 Best Recall for 0.4 precision: 0.886
2024-11-03 20:32 - INFO - ---------------------------------------------
2024-11-03 20:35 - INFO - Fit the preprocessing pipeline
2024-11-03 20:35 - INFO - Training using device: mps
2024-11-03 20:35 - INFO - Creating generators
2024-11-03 20:35 - INFO - The model has 651,257 trainable parameters
2024-11-03 20:35 - INFO - * Model:
2024-11-03 20:35 - INFO - * -----------
2024-11-03 20:35 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 20:35 - INFO - * -----------
2024-11-03 20:35 - INFO - Evaluating model based on: aucpr
2024-11-03 20:35 - INFO - Training..

2024-11-03 20:36 - INFO - ---------------------------------------------
2024-11-03 20:36 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-03 20:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19949
2024-11-03 20:36 - INFO - 	 Train Loss: 0.251
2024-11-03 20:36 - INFO - 	 Val. Loss: 0.295
2024-11-03 20:36 - INFO - 	 ROC-AUC: 0.730
2024-11-03 20:36 - INFO - 	 PR-AUC: 0.199
2024-11-03 20:36 - INFO - 	 Recall for 0.4 precision: 0.124
2024-11-03 20:36 - INFO - 	 Best Val. Loss: 0.295
2024-11-03 20:36 - INFO - 	 Best ROC-AUC: 0.730
2024-11-03 20:36 - INFO - 	 Best PR-AUC: 0.199
2024-11-03 20:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-11-03 20:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-03 20:36 - INFO - 	 Best Recall for 0.4 precision: 0.124
2024-11-03 20:36 - INFO - ---------------------------------------------
2024-11-03 20:38 - INFO - ---------------------------------------------
2024-11-03 20:38 - INFO - Epoch: 02 | Time: 1m 49s
2024-11-03 20:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21087
2024-11-03 20:38 - INFO - 	 Train Loss: 0.205
2024-11-03 20:38 - INFO - 	 Val. Loss: 0.246
2024-11-03 20:38 - INFO - 	 ROC-AUC: 0.762
2024-11-03 20:38 - INFO - 	 PR-AUC: 0.211
2024-11-03 20:38 - INFO - 	 Recall for 0.4 precision: 0.146
2024-11-03 20:38 - INFO - 	 Best Val. Loss: 0.246
2024-11-03 20:38 - INFO - 	 Best ROC-AUC: 0.762
2024-11-03 20:38 - INFO - 	 Best PR-AUC: 0.211
2024-11-03 20:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-03 20:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-03 20:38 - INFO - 	 Best Recall for 0.4 precision: 0.146
2024-11-03 20:38 - INFO - ---------------------------------------------
2024-11-03 20:40 - INFO - ---------------------------------------------
2024-11-03 20:40 - INFO - Epoch: 03 | Time: 1m 51s
2024-11-03 20:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26625
2024-11-03 20:40 - INFO - 	 Train Loss: 0.184
2024-11-03 20:40 - INFO - 	 Val. Loss: 0.205
2024-11-03 20:40 - INFO - 	 ROC-AUC: 0.790
2024-11-03 20:40 - INFO - 	 PR-AUC: 0.266
2024-11-03 20:40 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-03 20:40 - INFO - 	 Best Val. Loss: 0.205
2024-11-03 20:40 - INFO - 	 Best ROC-AUC: 0.790
2024-11-03 20:40 - INFO - 	 Best PR-AUC: 0.266
2024-11-03 20:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-03 20:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 20:40 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-03 20:40 - INFO - ---------------------------------------------
2024-11-03 20:42 - INFO - ---------------------------------------------
2024-11-03 20:42 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-03 20:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27237
2024-11-03 20:42 - INFO - 	 Train Loss: 0.171
2024-11-03 20:42 - INFO - 	 Val. Loss: 0.206
2024-11-03 20:42 - INFO - 	 ROC-AUC: 0.788
2024-11-03 20:42 - INFO - 	 PR-AUC: 0.272
2024-11-03 20:42 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-03 20:42 - INFO - 	 Best Val. Loss: 0.205
2024-11-03 20:42 - INFO - 	 Best ROC-AUC: 0.790
2024-11-03 20:42 - INFO - 	 Best PR-AUC: 0.272
2024-11-03 20:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-03 20:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-03 20:42 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-03 20:42 - INFO - ---------------------------------------------
2024-11-03 20:44 - INFO - ---------------------------------------------
2024-11-03 20:44 - INFO - Epoch: 05 | Time: 1m 52s
2024-11-03 20:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30452
2024-11-03 20:44 - INFO - 	 Train Loss: 0.162
2024-11-03 20:44 - INFO - 	 Val. Loss: 0.183
2024-11-03 20:44 - INFO - 	 ROC-AUC: 0.809
2024-11-03 20:44 - INFO - 	 PR-AUC: 0.305
2024-11-03 20:44 - INFO - 	 Recall for 0.4 precision: 0.332
2024-11-03 20:44 - INFO - 	 Best Val. Loss: 0.183
2024-11-03 20:44 - INFO - 	 Best ROC-AUC: 0.809
2024-11-03 20:44 - INFO - 	 Best PR-AUC: 0.305
2024-11-03 20:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-03 20:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 20:44 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 20:44 - INFO - ---------------------------------------------
2024-11-03 20:46 - INFO - ---------------------------------------------
2024-11-03 20:46 - INFO - Epoch: 06 | Time: 1m 52s
2024-11-03 20:46 - INFO - 	 Train Loss: 0.157
2024-11-03 20:46 - INFO - 	 Val. Loss: 0.177
2024-11-03 20:46 - INFO - 	 ROC-AUC: 0.820
2024-11-03 20:46 - INFO - 	 PR-AUC: 0.303
2024-11-03 20:46 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-03 20:46 - INFO - 	 Best Val. Loss: 0.177
2024-11-03 20:46 - INFO - 	 Best ROC-AUC: 0.820
2024-11-03 20:46 - INFO - 	 Best PR-AUC: 0.305
2024-11-03 20:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.766
2024-11-03 20:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 20:46 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 20:46 - INFO - ---------------------------------------------
2024-11-03 20:48 - INFO - ---------------------------------------------
2024-11-03 20:48 - INFO - Epoch: 07 | Time: 1m 53s
2024-11-03 20:48 - INFO - 	 Train Loss: 0.153
2024-11-03 20:48 - INFO - 	 Val. Loss: 0.169
2024-11-03 20:48 - INFO - 	 ROC-AUC: 0.854
2024-11-03 20:48 - INFO - 	 PR-AUC: 0.290
2024-11-03 20:48 - INFO - 	 Recall for 0.4 precision: 0.293
2024-11-03 20:48 - INFO - 	 Best Val. Loss: 0.169
2024-11-03 20:48 - INFO - 	 Best ROC-AUC: 0.854
2024-11-03 20:48 - INFO - 	 Best PR-AUC: 0.305
2024-11-03 20:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.800
2024-11-03 20:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 20:48 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 20:48 - INFO - ---------------------------------------------
2024-11-03 20:49 - INFO - ---------------------------------------------
2024-11-03 20:49 - INFO - Epoch: 08 | Time: 1m 53s
2024-11-03 20:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31378
2024-11-03 20:49 - INFO - 	 Train Loss: 0.151
2024-11-03 20:49 - INFO - 	 Val. Loss: 0.150
2024-11-03 20:49 - INFO - 	 ROC-AUC: 0.879
2024-11-03 20:49 - INFO - 	 PR-AUC: 0.314
2024-11-03 20:49 - INFO - 	 Recall for 0.4 precision: 0.364
2024-11-03 20:49 - INFO - 	 Best Val. Loss: 0.150
2024-11-03 20:49 - INFO - 	 Best ROC-AUC: 0.879
2024-11-03 20:49 - INFO - 	 Best PR-AUC: 0.314
2024-11-03 20:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.833
2024-11-03 20:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.193
2024-11-03 20:49 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 20:49 - INFO - ---------------------------------------------
2024-11-03 20:51 - INFO - ---------------------------------------------
2024-11-03 20:51 - INFO - Epoch: 09 | Time: 1m 53s
2024-11-03 20:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3606
2024-11-03 20:51 - INFO - 	 Train Loss: 0.138
2024-11-03 20:51 - INFO - 	 Val. Loss: 0.133
2024-11-03 20:51 - INFO - 	 ROC-AUC: 0.918
2024-11-03 20:51 - INFO - 	 PR-AUC: 0.361
2024-11-03 20:51 - INFO - 	 Recall for 0.4 precision: 0.504
2024-11-03 20:51 - INFO - 	 Best Val. Loss: 0.133
2024-11-03 20:51 - INFO - 	 Best ROC-AUC: 0.918
2024-11-03 20:51 - INFO - 	 Best PR-AUC: 0.361
2024-11-03 20:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-03 20:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.276
2024-11-03 20:51 - INFO - 	 Best Recall for 0.4 precision: 0.504
2024-11-03 20:51 - INFO - ---------------------------------------------
2024-11-03 20:53 - INFO - ---------------------------------------------
2024-11-03 20:53 - INFO - Epoch: 10 | Time: 1m 54s
2024-11-03 20:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40445
2024-11-03 20:53 - INFO - 	 Train Loss: 0.127
2024-11-03 20:53 - INFO - 	 Val. Loss: 0.210
2024-11-03 20:53 - INFO - 	 ROC-AUC: 0.914
2024-11-03 20:53 - INFO - 	 PR-AUC: 0.404
2024-11-03 20:53 - INFO - 	 Recall for 0.4 precision: 0.566
2024-11-03 20:53 - INFO - 	 Best Val. Loss: 0.133
2024-11-03 20:53 - INFO - 	 Best ROC-AUC: 0.918
2024-11-03 20:53 - INFO - 	 Best PR-AUC: 0.404
2024-11-03 20:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-03 20:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.232
2024-11-03 20:53 - INFO - 	 Best Recall for 0.4 precision: 0.566
2024-11-03 20:53 - INFO - ---------------------------------------------
2024-11-03 20:56 - INFO - Fit the preprocessing pipeline
2024-11-03 20:56 - INFO - Training using device: mps
2024-11-03 20:56 - INFO - Creating generators
2024-11-03 20:56 - INFO - The model has 651,257 trainable parameters
2024-11-03 20:56 - INFO - * Model:
2024-11-03 20:56 - INFO - * -----------
2024-11-03 20:56 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 20:56 - INFO - * -----------
2024-11-03 20:56 - INFO - Evaluating model based on: aucpr
2024-11-03 20:56 - INFO - Training..

2024-11-03 20:58 - INFO - ---------------------------------------------
2024-11-03 20:58 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-03 20:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16864
2024-11-03 20:58 - INFO - 	 Train Loss: 0.259
2024-11-03 20:58 - INFO - 	 Val. Loss: 0.315
2024-11-03 20:58 - INFO - 	 ROC-AUC: 0.700
2024-11-03 20:58 - INFO - 	 PR-AUC: 0.169
2024-11-03 20:58 - INFO - 	 Recall for 0.4 precision: 0.098
2024-11-03 20:58 - INFO - 	 Best Val. Loss: 0.315
2024-11-03 20:58 - INFO - 	 Best ROC-AUC: 0.700
2024-11-03 20:58 - INFO - 	 Best PR-AUC: 0.169
2024-11-03 20:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.701
2024-11-03 20:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.114
2024-11-03 20:58 - INFO - 	 Best Recall for 0.4 precision: 0.098
2024-11-03 20:58 - INFO - ---------------------------------------------
2024-11-03 20:59 - INFO - ---------------------------------------------
2024-11-03 20:59 - INFO - Epoch: 02 | Time: 1m 50s
2024-11-03 20:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22148
2024-11-03 20:59 - INFO - 	 Train Loss: 0.208
2024-11-03 20:59 - INFO - 	 Val. Loss: 0.244
2024-11-03 20:59 - INFO - 	 ROC-AUC: 0.767
2024-11-03 20:59 - INFO - 	 PR-AUC: 0.221
2024-11-03 20:59 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-03 20:59 - INFO - 	 Best Val. Loss: 0.244
2024-11-03 20:59 - INFO - 	 Best ROC-AUC: 0.767
2024-11-03 20:59 - INFO - 	 Best PR-AUC: 0.221
2024-11-03 20:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.734
2024-11-03 20:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.124
2024-11-03 20:59 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-03 20:59 - INFO - ---------------------------------------------
2024-11-03 21:01 - INFO - ---------------------------------------------
2024-11-03 21:01 - INFO - Epoch: 03 | Time: 1m 52s
2024-11-03 21:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24014
2024-11-03 21:01 - INFO - 	 Train Loss: 0.183
2024-11-03 21:01 - INFO - 	 Val. Loss: 0.200
2024-11-03 21:01 - INFO - 	 ROC-AUC: 0.779
2024-11-03 21:01 - INFO - 	 PR-AUC: 0.240
2024-11-03 21:01 - INFO - 	 Recall for 0.4 precision: 0.176
2024-11-03 21:01 - INFO - 	 Best Val. Loss: 0.200
2024-11-03 21:01 - INFO - 	 Best ROC-AUC: 0.779
2024-11-03 21:01 - INFO - 	 Best PR-AUC: 0.240
2024-11-03 21:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.731
2024-11-03 21:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-03 21:01 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-03 21:01 - INFO - ---------------------------------------------
2024-11-03 21:03 - INFO - ---------------------------------------------
2024-11-03 21:03 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-03 21:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29354
2024-11-03 21:03 - INFO - 	 Train Loss: 0.170
2024-11-03 21:03 - INFO - 	 Val. Loss: 0.185
2024-11-03 21:03 - INFO - 	 ROC-AUC: 0.809
2024-11-03 21:03 - INFO - 	 PR-AUC: 0.294
2024-11-03 21:03 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-03 21:03 - INFO - 	 Best Val. Loss: 0.185
2024-11-03 21:03 - INFO - 	 Best ROC-AUC: 0.809
2024-11-03 21:03 - INFO - 	 Best PR-AUC: 0.294
2024-11-03 21:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 21:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 21:03 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-03 21:03 - INFO - ---------------------------------------------
2024-11-03 21:05 - INFO - ---------------------------------------------
2024-11-03 21:05 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-03 21:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31695
2024-11-03 21:05 - INFO - 	 Train Loss: 0.163
2024-11-03 21:05 - INFO - 	 Val. Loss: 0.182
2024-11-03 21:05 - INFO - 	 ROC-AUC: 0.810
2024-11-03 21:05 - INFO - 	 PR-AUC: 0.317
2024-11-03 21:05 - INFO - 	 Recall for 0.4 precision: 0.338
2024-11-03 21:05 - INFO - 	 Best Val. Loss: 0.182
2024-11-03 21:05 - INFO - 	 Best ROC-AUC: 0.810
2024-11-03 21:05 - INFO - 	 Best PR-AUC: 0.317
2024-11-03 21:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 21:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 21:05 - INFO - 	 Best Recall for 0.4 precision: 0.338
2024-11-03 21:05 - INFO - ---------------------------------------------
2024-11-03 21:07 - INFO - ---------------------------------------------
2024-11-03 21:07 - INFO - Epoch: 06 | Time: 1m 53s
2024-11-03 21:07 - INFO - 	 Train Loss: 0.156
2024-11-03 21:07 - INFO - 	 Val. Loss: 0.171
2024-11-03 21:07 - INFO - 	 ROC-AUC: 0.820
2024-11-03 21:07 - INFO - 	 PR-AUC: 0.315
2024-11-03 21:07 - INFO - 	 Recall for 0.4 precision: 0.361
2024-11-03 21:07 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 21:07 - INFO - 	 Best ROC-AUC: 0.820
2024-11-03 21:07 - INFO - 	 Best PR-AUC: 0.317
2024-11-03 21:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 21:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 21:07 - INFO - 	 Best Recall for 0.4 precision: 0.361
2024-11-03 21:07 - INFO - ---------------------------------------------
2024-11-03 21:09 - INFO - ---------------------------------------------
2024-11-03 21:09 - INFO - Epoch: 07 | Time: 1m 53s
2024-11-03 21:09 - INFO - 	 Train Loss: 0.153
2024-11-03 21:09 - INFO - 	 Val. Loss: 0.170
2024-11-03 21:09 - INFO - 	 ROC-AUC: 0.813
2024-11-03 21:09 - INFO - 	 PR-AUC: 0.315
2024-11-03 21:09 - INFO - 	 Recall for 0.4 precision: 0.328
2024-11-03 21:09 - INFO - 	 Best Val. Loss: 0.170
2024-11-03 21:09 - INFO - 	 Best ROC-AUC: 0.820
2024-11-03 21:09 - INFO - 	 Best PR-AUC: 0.317
2024-11-03 21:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 21:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 21:09 - INFO - 	 Best Recall for 0.4 precision: 0.361
2024-11-03 21:09 - INFO - ---------------------------------------------
2024-11-03 21:11 - INFO - ---------------------------------------------
2024-11-03 21:11 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-03 21:11 - INFO - 	 Train Loss: 0.151
2024-11-03 21:11 - INFO - 	 Val. Loss: 0.161
2024-11-03 21:11 - INFO - 	 ROC-AUC: 0.829
2024-11-03 21:11 - INFO - 	 PR-AUC: 0.302
2024-11-03 21:11 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-03 21:11 - INFO - 	 Best Val. Loss: 0.161
2024-11-03 21:11 - INFO - 	 Best ROC-AUC: 0.829
2024-11-03 21:11 - INFO - 	 Best PR-AUC: 0.317
2024-11-03 21:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-03 21:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 21:11 - INFO - 	 Best Recall for 0.4 precision: 0.361
2024-11-03 21:11 - INFO - ---------------------------------------------
2024-11-03 21:15 - INFO - Fit the preprocessing pipeline
2024-11-03 21:15 - INFO - Training using device: mps
2024-11-03 21:15 - INFO - Creating generators
2024-11-03 21:15 - INFO - The model has 651,257 trainable parameters
2024-11-03 21:15 - INFO - * Model:
2024-11-03 21:15 - INFO - * -----------
2024-11-03 21:15 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 21:15 - INFO - * -----------
2024-11-03 21:15 - INFO - Evaluating model based on: aucpr
2024-11-03 21:15 - INFO - Training..

2024-11-03 21:17 - INFO - ---------------------------------------------
2024-11-03 21:17 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-03 21:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15118
2024-11-03 21:17 - INFO - 	 Train Loss: 0.253
2024-11-03 21:17 - INFO - 	 Val. Loss: 0.292
2024-11-03 21:17 - INFO - 	 ROC-AUC: 0.722
2024-11-03 21:17 - INFO - 	 PR-AUC: 0.151
2024-11-03 21:17 - INFO - 	 Recall for 0.4 precision: 0.046
2024-11-03 21:17 - INFO - 	 Best Val. Loss: 0.292
2024-11-03 21:17 - INFO - 	 Best ROC-AUC: 0.722
2024-11-03 21:17 - INFO - 	 Best PR-AUC: 0.151
2024-11-03 21:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.699
2024-11-03 21:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-03 21:17 - INFO - 	 Best Recall for 0.4 precision: 0.046
2024-11-03 21:17 - INFO - ---------------------------------------------
2024-11-03 21:19 - INFO - ---------------------------------------------
2024-11-03 21:19 - INFO - Epoch: 02 | Time: 1m 49s
2024-11-03 21:19 - INFO - 	 Train Loss: 0.216
2024-11-03 21:19 - INFO - 	 Val. Loss: 0.254
2024-11-03 21:19 - INFO - 	 ROC-AUC: 0.741
2024-11-03 21:19 - INFO - 	 PR-AUC: 0.138
2024-11-03 21:19 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 21:19 - INFO - 	 Best Val. Loss: 0.254
2024-11-03 21:19 - INFO - 	 Best ROC-AUC: 0.741
2024-11-03 21:19 - INFO - 	 Best PR-AUC: 0.151
2024-11-03 21:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.700
2024-11-03 21:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-03 21:19 - INFO - 	 Best Recall for 0.4 precision: 0.046
2024-11-03 21:19 - INFO - ---------------------------------------------
2024-11-03 21:21 - INFO - ---------------------------------------------
2024-11-03 21:21 - INFO - Epoch: 03 | Time: 1m 51s
2024-11-03 21:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24616
2024-11-03 21:21 - INFO - 	 Train Loss: 0.189
2024-11-03 21:21 - INFO - 	 Val. Loss: 0.205
2024-11-03 21:21 - INFO - 	 ROC-AUC: 0.768
2024-11-03 21:21 - INFO - 	 PR-AUC: 0.246
2024-11-03 21:21 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-03 21:21 - INFO - 	 Best Val. Loss: 0.205
2024-11-03 21:21 - INFO - 	 Best ROC-AUC: 0.768
2024-11-03 21:21 - INFO - 	 Best PR-AUC: 0.246
2024-11-03 21:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.733
2024-11-03 21:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-03 21:21 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-03 21:21 - INFO - ---------------------------------------------
2024-11-03 21:23 - INFO - ---------------------------------------------
2024-11-03 21:23 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-03 21:23 - INFO - 	 Train Loss: 0.171
2024-11-03 21:23 - INFO - 	 Val. Loss: 0.195
2024-11-03 21:23 - INFO - 	 ROC-AUC: 0.787
2024-11-03 21:23 - INFO - 	 PR-AUC: 0.243
2024-11-03 21:23 - INFO - 	 Recall for 0.4 precision: 0.257
2024-11-03 21:23 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 21:23 - INFO - 	 Best ROC-AUC: 0.787
2024-11-03 21:23 - INFO - 	 Best PR-AUC: 0.246
2024-11-03 21:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.740
2024-11-03 21:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-03 21:23 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-03 21:23 - INFO - ---------------------------------------------
2024-11-03 21:25 - INFO - ---------------------------------------------
2024-11-03 21:25 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-03 21:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25123
2024-11-03 21:25 - INFO - 	 Train Loss: 0.164
2024-11-03 21:25 - INFO - 	 Val. Loss: 0.184
2024-11-03 21:25 - INFO - 	 ROC-AUC: 0.788
2024-11-03 21:25 - INFO - 	 PR-AUC: 0.251
2024-11-03 21:25 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-03 21:25 - INFO - 	 Best Val. Loss: 0.184
2024-11-03 21:25 - INFO - 	 Best ROC-AUC: 0.788
2024-11-03 21:25 - INFO - 	 Best PR-AUC: 0.251
2024-11-03 21:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-03 21:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-03 21:25 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-03 21:25 - INFO - ---------------------------------------------
2024-11-03 21:27 - INFO - ---------------------------------------------
2024-11-03 21:27 - INFO - Epoch: 06 | Time: 1m 54s
2024-11-03 21:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2978
2024-11-03 21:27 - INFO - 	 Train Loss: 0.158
2024-11-03 21:27 - INFO - 	 Val. Loss: 0.176
2024-11-03 21:27 - INFO - 	 ROC-AUC: 0.801
2024-11-03 21:27 - INFO - 	 PR-AUC: 0.298
2024-11-03 21:27 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-03 21:27 - INFO - 	 Best Val. Loss: 0.176
2024-11-03 21:27 - INFO - 	 Best ROC-AUC: 0.801
2024-11-03 21:27 - INFO - 	 Best PR-AUC: 0.298
2024-11-03 21:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-03 21:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-03 21:27 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-03 21:27 - INFO - ---------------------------------------------
2024-11-03 21:28 - INFO - ---------------------------------------------
2024-11-03 21:28 - INFO - Epoch: 07 | Time: 1m 54s
2024-11-03 21:28 - INFO - 	 Train Loss: 0.155
2024-11-03 21:28 - INFO - 	 Val. Loss: 0.165
2024-11-03 21:28 - INFO - 	 ROC-AUC: 0.823
2024-11-03 21:28 - INFO - 	 PR-AUC: 0.295
2024-11-03 21:28 - INFO - 	 Recall for 0.4 precision: 0.348
2024-11-03 21:28 - INFO - 	 Best Val. Loss: 0.165
2024-11-03 21:28 - INFO - 	 Best ROC-AUC: 0.823
2024-11-03 21:28 - INFO - 	 Best PR-AUC: 0.298
2024-11-03 21:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-03 21:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-03 21:28 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-03 21:28 - INFO - ---------------------------------------------
2024-11-03 21:30 - INFO - ---------------------------------------------
2024-11-03 21:30 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-03 21:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30651
2024-11-03 21:30 - INFO - 	 Train Loss: 0.152
2024-11-03 21:30 - INFO - 	 Val. Loss: 0.163
2024-11-03 21:30 - INFO - 	 ROC-AUC: 0.814
2024-11-03 21:30 - INFO - 	 PR-AUC: 0.307
2024-11-03 21:30 - INFO - 	 Recall for 0.4 precision: 0.345
2024-11-03 21:30 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 21:30 - INFO - 	 Best ROC-AUC: 0.823
2024-11-03 21:30 - INFO - 	 Best PR-AUC: 0.307
2024-11-03 21:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-03 21:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 21:30 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-03 21:30 - INFO - ---------------------------------------------
2024-11-03 21:32 - INFO - ---------------------------------------------
2024-11-03 21:32 - INFO - Epoch: 09 | Time: 1m 54s
2024-11-03 21:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3306
2024-11-03 21:32 - INFO - 	 Train Loss: 0.150
2024-11-03 21:32 - INFO - 	 Val. Loss: 0.160
2024-11-03 21:32 - INFO - 	 ROC-AUC: 0.834
2024-11-03 21:32 - INFO - 	 PR-AUC: 0.331
2024-11-03 21:32 - INFO - 	 Recall for 0.4 precision: 0.364
2024-11-03 21:32 - INFO - 	 Best Val. Loss: 0.160
2024-11-03 21:32 - INFO - 	 Best ROC-AUC: 0.834
2024-11-03 21:32 - INFO - 	 Best PR-AUC: 0.331
2024-11-03 21:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.766
2024-11-03 21:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-03 21:32 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 21:32 - INFO - ---------------------------------------------
2024-11-03 21:34 - INFO - ---------------------------------------------
2024-11-03 21:34 - INFO - Epoch: 10 | Time: 1m 54s
2024-11-03 21:34 - INFO - 	 Train Loss: 0.149
2024-11-03 21:34 - INFO - 	 Val. Loss: 0.158
2024-11-03 21:34 - INFO - 	 ROC-AUC: 0.842
2024-11-03 21:34 - INFO - 	 PR-AUC: 0.326
2024-11-03 21:34 - INFO - 	 Recall for 0.4 precision: 0.363
2024-11-03 21:34 - INFO - 	 Best Val. Loss: 0.158
2024-11-03 21:34 - INFO - 	 Best ROC-AUC: 0.842
2024-11-03 21:34 - INFO - 	 Best PR-AUC: 0.331
2024-11-03 21:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 21:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-03 21:34 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 21:34 - INFO - ---------------------------------------------
2024-11-03 21:37 - INFO - Fit the preprocessing pipeline
2024-11-03 21:37 - INFO - Training using device: mps
2024-11-03 21:37 - INFO - Creating generators
2024-11-03 21:37 - INFO - The model has 651,257 trainable parameters
2024-11-03 21:37 - INFO - * Model:
2024-11-03 21:37 - INFO - * -----------
2024-11-03 21:37 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 21:37 - INFO - * -----------
2024-11-03 21:37 - INFO - Evaluating model based on: aucpr
2024-11-03 21:37 - INFO - Training..

2024-11-03 21:39 - INFO - ---------------------------------------------
2024-11-03 21:39 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-03 21:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14141
2024-11-03 21:39 - INFO - 	 Train Loss: 0.254
2024-11-03 21:39 - INFO - 	 Val. Loss: 0.284
2024-11-03 21:39 - INFO - 	 ROC-AUC: 0.717
2024-11-03 21:39 - INFO - 	 PR-AUC: 0.141
2024-11-03 21:39 - INFO - 	 Recall for 0.4 precision: 0.046
2024-11-03 21:39 - INFO - 	 Best Val. Loss: 0.284
2024-11-03 21:39 - INFO - 	 Best ROC-AUC: 0.717
2024-11-03 21:39 - INFO - 	 Best PR-AUC: 0.141
2024-11-03 21:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-11-03 21:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-03 21:39 - INFO - 	 Best Recall for 0.4 precision: 0.046
2024-11-03 21:39 - INFO - ---------------------------------------------
2024-11-03 21:40 - INFO - ---------------------------------------------
2024-11-03 21:40 - INFO - Epoch: 02 | Time: 1m 48s
2024-11-03 21:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23153
2024-11-03 21:40 - INFO - 	 Train Loss: 0.208
2024-11-03 21:40 - INFO - 	 Val. Loss: 0.241
2024-11-03 21:40 - INFO - 	 ROC-AUC: 0.741
2024-11-03 21:40 - INFO - 	 PR-AUC: 0.232
2024-11-03 21:40 - INFO - 	 Recall for 0.4 precision: 0.150
2024-11-03 21:40 - INFO - 	 Best Val. Loss: 0.241
2024-11-03 21:40 - INFO - 	 Best ROC-AUC: 0.741
2024-11-03 21:40 - INFO - 	 Best PR-AUC: 0.232
2024-11-03 21:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.733
2024-11-03 21:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-03 21:40 - INFO - 	 Best Recall for 0.4 precision: 0.150
2024-11-03 21:40 - INFO - ---------------------------------------------
2024-11-03 21:42 - INFO - ---------------------------------------------
2024-11-03 21:42 - INFO - Epoch: 03 | Time: 1m 50s
2024-11-03 21:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23692
2024-11-03 21:42 - INFO - 	 Train Loss: 0.186
2024-11-03 21:42 - INFO - 	 Val. Loss: 0.210
2024-11-03 21:42 - INFO - 	 ROC-AUC: 0.763
2024-11-03 21:42 - INFO - 	 PR-AUC: 0.237
2024-11-03 21:42 - INFO - 	 Recall for 0.4 precision: 0.176
2024-11-03 21:42 - INFO - 	 Best Val. Loss: 0.210
2024-11-03 21:42 - INFO - 	 Best ROC-AUC: 0.763
2024-11-03 21:42 - INFO - 	 Best PR-AUC: 0.237
2024-11-03 21:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-03 21:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-03 21:42 - INFO - 	 Best Recall for 0.4 precision: 0.176
2024-11-03 21:42 - INFO - ---------------------------------------------
2024-11-03 21:44 - INFO - ---------------------------------------------
2024-11-03 21:44 - INFO - Epoch: 04 | Time: 1m 50s
2024-11-03 21:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26643
2024-11-03 21:44 - INFO - 	 Train Loss: 0.170
2024-11-03 21:44 - INFO - 	 Val. Loss: 0.196
2024-11-03 21:44 - INFO - 	 ROC-AUC: 0.777
2024-11-03 21:44 - INFO - 	 PR-AUC: 0.266
2024-11-03 21:44 - INFO - 	 Recall for 0.4 precision: 0.215
2024-11-03 21:44 - INFO - 	 Best Val. Loss: 0.196
2024-11-03 21:44 - INFO - 	 Best ROC-AUC: 0.777
2024-11-03 21:44 - INFO - 	 Best PR-AUC: 0.266
2024-11-03 21:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-03 21:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 21:44 - INFO - 	 Best Recall for 0.4 precision: 0.215
2024-11-03 21:44 - INFO - ---------------------------------------------
2024-11-03 21:46 - INFO - ---------------------------------------------
2024-11-03 21:46 - INFO - Epoch: 05 | Time: 1m 55s
2024-11-03 21:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26949
2024-11-03 21:46 - INFO - 	 Train Loss: 0.162
2024-11-03 21:46 - INFO - 	 Val. Loss: 0.175
2024-11-03 21:46 - INFO - 	 ROC-AUC: 0.798
2024-11-03 21:46 - INFO - 	 PR-AUC: 0.269
2024-11-03 21:46 - INFO - 	 Recall for 0.4 precision: 0.208
2024-11-03 21:46 - INFO - 	 Best Val. Loss: 0.175
2024-11-03 21:46 - INFO - 	 Best ROC-AUC: 0.798
2024-11-03 21:46 - INFO - 	 Best PR-AUC: 0.269
2024-11-03 21:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-03 21:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.166
2024-11-03 21:46 - INFO - 	 Best Recall for 0.4 precision: 0.215
2024-11-03 21:46 - INFO - ---------------------------------------------
2024-11-03 21:48 - INFO - ---------------------------------------------
2024-11-03 21:48 - INFO - Epoch: 06 | Time: 1m 54s
2024-11-03 21:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29695
2024-11-03 21:48 - INFO - 	 Train Loss: 0.157
2024-11-03 21:48 - INFO - 	 Val. Loss: 0.176
2024-11-03 21:48 - INFO - 	 ROC-AUC: 0.802
2024-11-03 21:48 - INFO - 	 PR-AUC: 0.297
2024-11-03 21:48 - INFO - 	 Recall for 0.4 precision: 0.226
2024-11-03 21:48 - INFO - 	 Best Val. Loss: 0.175
2024-11-03 21:48 - INFO - 	 Best ROC-AUC: 0.802
2024-11-03 21:48 - INFO - 	 Best PR-AUC: 0.297
2024-11-03 21:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-03 21:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 21:48 - INFO - 	 Best Recall for 0.4 precision: 0.226
2024-11-03 21:48 - INFO - ---------------------------------------------
2024-11-03 21:50 - INFO - ---------------------------------------------
2024-11-03 21:50 - INFO - Epoch: 07 | Time: 1m 54s
2024-11-03 21:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3115
2024-11-03 21:50 - INFO - 	 Train Loss: 0.153
2024-11-03 21:50 - INFO - 	 Val. Loss: 0.166
2024-11-03 21:50 - INFO - 	 ROC-AUC: 0.826
2024-11-03 21:50 - INFO - 	 PR-AUC: 0.311
2024-11-03 21:50 - INFO - 	 Recall for 0.4 precision: 0.237
2024-11-03 21:50 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 21:50 - INFO - 	 Best ROC-AUC: 0.826
2024-11-03 21:50 - INFO - 	 Best PR-AUC: 0.311
2024-11-03 21:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.781
2024-11-03 21:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-03 21:50 - INFO - 	 Best Recall for 0.4 precision: 0.237
2024-11-03 21:50 - INFO - ---------------------------------------------
2024-11-03 21:52 - INFO - ---------------------------------------------
2024-11-03 21:52 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-03 21:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34119
2024-11-03 21:52 - INFO - 	 Train Loss: 0.149
2024-11-03 21:52 - INFO - 	 Val. Loss: 0.161
2024-11-03 21:52 - INFO - 	 ROC-AUC: 0.851
2024-11-03 21:52 - INFO - 	 PR-AUC: 0.341
2024-11-03 21:52 - INFO - 	 Recall for 0.4 precision: 0.335
2024-11-03 21:52 - INFO - 	 Best Val. Loss: 0.161
2024-11-03 21:52 - INFO - 	 Best ROC-AUC: 0.851
2024-11-03 21:52 - INFO - 	 Best PR-AUC: 0.341
2024-11-03 21:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.805
2024-11-03 21:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.185
2024-11-03 21:52 - INFO - 	 Best Recall for 0.4 precision: 0.335
2024-11-03 21:52 - INFO - ---------------------------------------------
2024-11-03 21:54 - INFO - ---------------------------------------------
2024-11-03 21:54 - INFO - Epoch: 09 | Time: 1m 54s
2024-11-03 21:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42385
2024-11-03 21:54 - INFO - 	 Train Loss: 0.141
2024-11-03 21:54 - INFO - 	 Val. Loss: 0.152
2024-11-03 21:54 - INFO - 	 ROC-AUC: 0.935
2024-11-03 21:54 - INFO - 	 PR-AUC: 0.424
2024-11-03 21:54 - INFO - 	 Recall for 0.4 precision: 0.511
2024-11-03 21:54 - INFO - 	 Best Val. Loss: 0.152
2024-11-03 21:54 - INFO - 	 Best ROC-AUC: 0.935
2024-11-03 21:54 - INFO - 	 Best PR-AUC: 0.424
2024-11-03 21:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-11-03 21:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.308
2024-11-03 21:54 - INFO - 	 Best Recall for 0.4 precision: 0.511
2024-11-03 21:54 - INFO - ---------------------------------------------
2024-11-03 21:56 - INFO - ---------------------------------------------
2024-11-03 21:56 - INFO - Epoch: 10 | Time: 1m 53s
2024-11-03 21:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55567
2024-11-03 21:56 - INFO - 	 Train Loss: 0.121
2024-11-03 21:56 - INFO - 	 Val. Loss: 0.134
2024-11-03 21:56 - INFO - 	 ROC-AUC: 0.961
2024-11-03 21:56 - INFO - 	 PR-AUC: 0.556
2024-11-03 21:56 - INFO - 	 Recall for 0.4 precision: 0.842
2024-11-03 21:56 - INFO - 	 Best Val. Loss: 0.134
2024-11-03 21:56 - INFO - 	 Best ROC-AUC: 0.961
2024-11-03 21:56 - INFO - 	 Best PR-AUC: 0.556
2024-11-03 21:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-03 21:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.376
2024-11-03 21:56 - INFO - 	 Best Recall for 0.4 precision: 0.842
2024-11-03 21:56 - INFO - ---------------------------------------------
2024-11-03 21:58 - INFO - Fit the preprocessing pipeline
2024-11-03 21:58 - INFO - Training using device: mps
2024-11-03 21:58 - INFO - Creating generators
2024-11-03 21:58 - INFO - The model has 651,257 trainable parameters
2024-11-03 21:58 - INFO - * Model:
2024-11-03 21:58 - INFO - * -----------
2024-11-03 21:58 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 21:58 - INFO - * -----------
2024-11-03 21:58 - INFO - Evaluating model based on: aucpr
2024-11-03 21:58 - INFO - Training..

2024-11-03 22:00 - INFO - ---------------------------------------------
2024-11-03 22:00 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-03 22:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16717
2024-11-03 22:00 - INFO - 	 Train Loss: 0.254
2024-11-03 22:00 - INFO - 	 Val. Loss: 0.293
2024-11-03 22:00 - INFO - 	 ROC-AUC: 0.741
2024-11-03 22:00 - INFO - 	 PR-AUC: 0.167
2024-11-03 22:00 - INFO - 	 Recall for 0.4 precision: 0.052
2024-11-03 22:00 - INFO - 	 Best Val. Loss: 0.293
2024-11-03 22:00 - INFO - 	 Best ROC-AUC: 0.741
2024-11-03 22:00 - INFO - 	 Best PR-AUC: 0.167
2024-11-03 22:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.697
2024-11-03 22:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.103
2024-11-03 22:00 - INFO - 	 Best Recall for 0.4 precision: 0.052
2024-11-03 22:00 - INFO - ---------------------------------------------
2024-11-03 22:02 - INFO - ---------------------------------------------
2024-11-03 22:02 - INFO - Epoch: 02 | Time: 1m 43s
2024-11-03 22:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20675
2024-11-03 22:02 - INFO - 	 Train Loss: 0.205
2024-11-03 22:02 - INFO - 	 Val. Loss: 0.215
2024-11-03 22:02 - INFO - 	 ROC-AUC: 0.767
2024-11-03 22:02 - INFO - 	 PR-AUC: 0.207
2024-11-03 22:02 - INFO - 	 Recall for 0.4 precision: 0.166
2024-11-03 22:02 - INFO - 	 Best Val. Loss: 0.215
2024-11-03 22:02 - INFO - 	 Best ROC-AUC: 0.767
2024-11-03 22:02 - INFO - 	 Best PR-AUC: 0.207
2024-11-03 22:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.740
2024-11-03 22:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-03 22:02 - INFO - 	 Best Recall for 0.4 precision: 0.166
2024-11-03 22:02 - INFO - ---------------------------------------------
2024-11-03 22:04 - INFO - ---------------------------------------------
2024-11-03 22:04 - INFO - Epoch: 03 | Time: 1m 50s
2024-11-03 22:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21278
2024-11-03 22:04 - INFO - 	 Train Loss: 0.184
2024-11-03 22:04 - INFO - 	 Val. Loss: 0.205
2024-11-03 22:04 - INFO - 	 ROC-AUC: 0.794
2024-11-03 22:04 - INFO - 	 PR-AUC: 0.213
2024-11-03 22:04 - INFO - 	 Recall for 0.4 precision: 0.114
2024-11-03 22:04 - INFO - 	 Best Val. Loss: 0.205
2024-11-03 22:04 - INFO - 	 Best ROC-AUC: 0.794
2024-11-03 22:04 - INFO - 	 Best PR-AUC: 0.213
2024-11-03 22:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 22:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-03 22:04 - INFO - 	 Best Recall for 0.4 precision: 0.166
2024-11-03 22:04 - INFO - ---------------------------------------------
2024-11-03 22:05 - INFO - ---------------------------------------------
2024-11-03 22:05 - INFO - Epoch: 04 | Time: 1m 51s
2024-11-03 22:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25999
2024-11-03 22:05 - INFO - 	 Train Loss: 0.172
2024-11-03 22:05 - INFO - 	 Val. Loss: 0.186
2024-11-03 22:05 - INFO - 	 ROC-AUC: 0.794
2024-11-03 22:05 - INFO - 	 PR-AUC: 0.260
2024-11-03 22:05 - INFO - 	 Recall for 0.4 precision: 0.237
2024-11-03 22:05 - INFO - 	 Best Val. Loss: 0.186
2024-11-03 22:05 - INFO - 	 Best ROC-AUC: 0.794
2024-11-03 22:05 - INFO - 	 Best PR-AUC: 0.260
2024-11-03 22:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-03 22:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.172
2024-11-03 22:05 - INFO - 	 Best Recall for 0.4 precision: 0.237
2024-11-03 22:05 - INFO - ---------------------------------------------
2024-11-03 22:07 - INFO - ---------------------------------------------
2024-11-03 22:07 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-03 22:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2731
2024-11-03 22:07 - INFO - 	 Train Loss: 0.163
2024-11-03 22:07 - INFO - 	 Val. Loss: 0.190
2024-11-03 22:07 - INFO - 	 ROC-AUC: 0.813
2024-11-03 22:07 - INFO - 	 PR-AUC: 0.273
2024-11-03 22:07 - INFO - 	 Recall for 0.4 precision: 0.241
2024-11-03 22:07 - INFO - 	 Best Val. Loss: 0.186
2024-11-03 22:07 - INFO - 	 Best ROC-AUC: 0.813
2024-11-03 22:07 - INFO - 	 Best PR-AUC: 0.273
2024-11-03 22:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 22:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 22:07 - INFO - 	 Best Recall for 0.4 precision: 0.241
2024-11-03 22:07 - INFO - ---------------------------------------------
2024-11-03 22:09 - INFO - ---------------------------------------------
2024-11-03 22:09 - INFO - Epoch: 06 | Time: 1m 54s
2024-11-03 22:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29881
2024-11-03 22:09 - INFO - 	 Train Loss: 0.158
2024-11-03 22:09 - INFO - 	 Val. Loss: 0.175
2024-11-03 22:09 - INFO - 	 ROC-AUC: 0.825
2024-11-03 22:09 - INFO - 	 PR-AUC: 0.299
2024-11-03 22:09 - INFO - 	 Recall for 0.4 precision: 0.250
2024-11-03 22:09 - INFO - 	 Best Val. Loss: 0.175
2024-11-03 22:09 - INFO - 	 Best ROC-AUC: 0.825
2024-11-03 22:09 - INFO - 	 Best PR-AUC: 0.299
2024-11-03 22:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.778
2024-11-03 22:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-03 22:09 - INFO - 	 Best Recall for 0.4 precision: 0.250
2024-11-03 22:09 - INFO - ---------------------------------------------
2024-11-03 22:11 - INFO - ---------------------------------------------
2024-11-03 22:11 - INFO - Epoch: 07 | Time: 1m 55s
2024-11-03 22:11 - INFO - 	 Train Loss: 0.152
2024-11-03 22:11 - INFO - 	 Val. Loss: 0.173
2024-11-03 22:11 - INFO - 	 ROC-AUC: 0.823
2024-11-03 22:11 - INFO - 	 PR-AUC: 0.297
2024-11-03 22:11 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-03 22:11 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 22:11 - INFO - 	 Best ROC-AUC: 0.825
2024-11-03 22:11 - INFO - 	 Best PR-AUC: 0.299
2024-11-03 22:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.778
2024-11-03 22:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-03 22:11 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-03 22:11 - INFO - ---------------------------------------------
2024-11-03 22:13 - INFO - ---------------------------------------------
2024-11-03 22:13 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-03 22:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39269
2024-11-03 22:13 - INFO - 	 Train Loss: 0.142
2024-11-03 22:13 - INFO - 	 Val. Loss: 0.137
2024-11-03 22:13 - INFO - 	 ROC-AUC: 0.912
2024-11-03 22:13 - INFO - 	 PR-AUC: 0.393
2024-11-03 22:13 - INFO - 	 Recall for 0.4 precision: 0.605
2024-11-03 22:13 - INFO - 	 Best Val. Loss: 0.137
2024-11-03 22:13 - INFO - 	 Best ROC-AUC: 0.912
2024-11-03 22:13 - INFO - 	 Best PR-AUC: 0.393
2024-11-03 22:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.899
2024-11-03 22:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.288
2024-11-03 22:13 - INFO - 	 Best Recall for 0.4 precision: 0.605
2024-11-03 22:13 - INFO - ---------------------------------------------
2024-11-03 22:15 - INFO - ---------------------------------------------
2024-11-03 22:15 - INFO - Epoch: 09 | Time: 2m 7s
2024-11-03 22:15 - INFO - 	 Train Loss: 0.124
2024-11-03 22:15 - INFO - 	 Val. Loss: 0.135
2024-11-03 22:15 - INFO - 	 ROC-AUC: 0.884
2024-11-03 22:15 - INFO - 	 PR-AUC: 0.327
2024-11-03 22:15 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-03 22:15 - INFO - 	 Best Val. Loss: 0.135
2024-11-03 22:15 - INFO - 	 Best ROC-AUC: 0.912
2024-11-03 22:15 - INFO - 	 Best PR-AUC: 0.393
2024-11-03 22:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.899
2024-11-03 22:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.288
2024-11-03 22:15 - INFO - 	 Best Recall for 0.4 precision: 0.605
2024-11-03 22:15 - INFO - ---------------------------------------------
2024-11-03 22:17 - INFO - ---------------------------------------------
2024-11-03 22:17 - INFO - Epoch: 10 | Time: 2m 8s
2024-11-03 22:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41381
2024-11-03 22:17 - INFO - 	 Train Loss: 0.113
2024-11-03 22:17 - INFO - 	 Val. Loss: 0.119
2024-11-03 22:17 - INFO - 	 ROC-AUC: 0.935
2024-11-03 22:17 - INFO - 	 PR-AUC: 0.414
2024-11-03 22:17 - INFO - 	 Recall for 0.4 precision: 0.709
2024-11-03 22:17 - INFO - 	 Best Val. Loss: 0.119
2024-11-03 22:17 - INFO - 	 Best ROC-AUC: 0.935
2024-11-03 22:17 - INFO - 	 Best PR-AUC: 0.414
2024-11-03 22:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.902
2024-11-03 22:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.250
2024-11-03 22:17 - INFO - 	 Best Recall for 0.4 precision: 0.709
2024-11-03 22:17 - INFO - ---------------------------------------------
2024-11-03 22:20 - INFO - Fit the preprocessing pipeline
2024-11-03 22:20 - INFO - Training using device: mps
2024-11-03 22:20 - INFO - Creating generators
2024-11-03 22:20 - INFO - The model has 651,257 trainable parameters
2024-11-03 22:20 - INFO - * Model:
2024-11-03 22:20 - INFO - * -----------
2024-11-03 22:20 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 22:20 - INFO - * -----------
2024-11-03 22:20 - INFO - Evaluating model based on: aucpr
2024-11-03 22:20 - INFO - Training..

2024-11-03 22:22 - INFO - ---------------------------------------------
2024-11-03 22:22 - INFO - Epoch: 01 | Time: 1m 58s
2024-11-03 22:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15961
2024-11-03 22:22 - INFO - 	 Train Loss: 0.258
2024-11-03 22:22 - INFO - 	 Val. Loss: 0.292
2024-11-03 22:22 - INFO - 	 ROC-AUC: 0.748
2024-11-03 22:22 - INFO - 	 PR-AUC: 0.160
2024-11-03 22:22 - INFO - 	 Recall for 0.4 precision: 0.055
2024-11-03 22:22 - INFO - 	 Best Val. Loss: 0.292
2024-11-03 22:22 - INFO - 	 Best ROC-AUC: 0.748
2024-11-03 22:22 - INFO - 	 Best PR-AUC: 0.160
2024-11-03 22:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.700
2024-11-03 22:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.100
2024-11-03 22:22 - INFO - 	 Best Recall for 0.4 precision: 0.055
2024-11-03 22:22 - INFO - ---------------------------------------------
2024-11-03 22:24 - INFO - ---------------------------------------------
2024-11-03 22:24 - INFO - Epoch: 02 | Time: 2m 9s
2024-11-03 22:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17159
2024-11-03 22:24 - INFO - 	 Train Loss: 0.217
2024-11-03 22:24 - INFO - 	 Val. Loss: 0.246
2024-11-03 22:24 - INFO - 	 ROC-AUC: 0.733
2024-11-03 22:24 - INFO - 	 PR-AUC: 0.172
2024-11-03 22:24 - INFO - 	 Recall for 0.4 precision: 0.085
2024-11-03 22:24 - INFO - 	 Best Val. Loss: 0.246
2024-11-03 22:24 - INFO - 	 Best ROC-AUC: 0.748
2024-11-03 22:24 - INFO - 	 Best PR-AUC: 0.172
2024-11-03 22:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.700
2024-11-03 22:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.103
2024-11-03 22:24 - INFO - 	 Best Recall for 0.4 precision: 0.085
2024-11-03 22:24 - INFO - ---------------------------------------------
2024-11-03 22:27 - INFO - ---------------------------------------------
2024-11-03 22:27 - INFO - Epoch: 03 | Time: 2m 9s
2024-11-03 22:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24859
2024-11-03 22:27 - INFO - 	 Train Loss: 0.189
2024-11-03 22:27 - INFO - 	 Val. Loss: 0.210
2024-11-03 22:27 - INFO - 	 ROC-AUC: 0.775
2024-11-03 22:27 - INFO - 	 PR-AUC: 0.249
2024-11-03 22:27 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-03 22:27 - INFO - 	 Best Val. Loss: 0.210
2024-11-03 22:27 - INFO - 	 Best ROC-AUC: 0.775
2024-11-03 22:27 - INFO - 	 Best PR-AUC: 0.249
2024-11-03 22:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-11-03 22:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.128
2024-11-03 22:27 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-03 22:27 - INFO - ---------------------------------------------
2024-11-03 22:29 - INFO - ---------------------------------------------
2024-11-03 22:29 - INFO - Epoch: 04 | Time: 2m 9s
2024-11-03 22:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26286
2024-11-03 22:29 - INFO - 	 Train Loss: 0.173
2024-11-03 22:29 - INFO - 	 Val. Loss: 0.195
2024-11-03 22:29 - INFO - 	 ROC-AUC: 0.796
2024-11-03 22:29 - INFO - 	 PR-AUC: 0.263
2024-11-03 22:29 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-03 22:29 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 22:29 - INFO - 	 Best ROC-AUC: 0.796
2024-11-03 22:29 - INFO - 	 Best PR-AUC: 0.263
2024-11-03 22:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-03 22:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 22:29 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-03 22:29 - INFO - ---------------------------------------------
2024-11-03 22:31 - INFO - ---------------------------------------------
2024-11-03 22:31 - INFO - Epoch: 05 | Time: 2m 6s
2024-11-03 22:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30062
2024-11-03 22:31 - INFO - 	 Train Loss: 0.163
2024-11-03 22:31 - INFO - 	 Val. Loss: 0.184
2024-11-03 22:31 - INFO - 	 ROC-AUC: 0.818
2024-11-03 22:31 - INFO - 	 PR-AUC: 0.301
2024-11-03 22:31 - INFO - 	 Recall for 0.4 precision: 0.293
2024-11-03 22:31 - INFO - 	 Best Val. Loss: 0.184
2024-11-03 22:31 - INFO - 	 Best ROC-AUC: 0.818
2024-11-03 22:31 - INFO - 	 Best PR-AUC: 0.301
2024-11-03 22:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-03 22:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 22:31 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-03 22:31 - INFO - ---------------------------------------------
2024-11-03 22:33 - INFO - ---------------------------------------------
2024-11-03 22:33 - INFO - Epoch: 06 | Time: 2m 2s
2024-11-03 22:33 - INFO - 	 Train Loss: 0.158
2024-11-03 22:33 - INFO - 	 Val. Loss: 0.176
2024-11-03 22:33 - INFO - 	 ROC-AUC: 0.815
2024-11-03 22:33 - INFO - 	 PR-AUC: 0.293
2024-11-03 22:33 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-03 22:33 - INFO - 	 Best Val. Loss: 0.176
2024-11-03 22:33 - INFO - 	 Best ROC-AUC: 0.818
2024-11-03 22:33 - INFO - 	 Best PR-AUC: 0.301
2024-11-03 22:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-03 22:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 22:33 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-03 22:33 - INFO - ---------------------------------------------
2024-11-03 22:35 - INFO - ---------------------------------------------
2024-11-03 22:35 - INFO - Epoch: 07 | Time: 2m 3s
2024-11-03 22:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30116
2024-11-03 22:35 - INFO - 	 Train Loss: 0.153
2024-11-03 22:35 - INFO - 	 Val. Loss: 0.173
2024-11-03 22:35 - INFO - 	 ROC-AUC: 0.819
2024-11-03 22:35 - INFO - 	 PR-AUC: 0.301
2024-11-03 22:35 - INFO - 	 Recall for 0.4 precision: 0.301
2024-11-03 22:35 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 22:35 - INFO - 	 Best ROC-AUC: 0.819
2024-11-03 22:35 - INFO - 	 Best PR-AUC: 0.301
2024-11-03 22:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-03 22:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 22:35 - INFO - 	 Best Recall for 0.4 precision: 0.301
2024-11-03 22:35 - INFO - ---------------------------------------------
2024-11-03 22:37 - INFO - ---------------------------------------------
2024-11-03 22:37 - INFO - Epoch: 08 | Time: 2m 6s
2024-11-03 22:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31077
2024-11-03 22:37 - INFO - 	 Train Loss: 0.152
2024-11-03 22:37 - INFO - 	 Val. Loss: 0.168
2024-11-03 22:37 - INFO - 	 ROC-AUC: 0.830
2024-11-03 22:37 - INFO - 	 PR-AUC: 0.311
2024-11-03 22:37 - INFO - 	 Recall for 0.4 precision: 0.309
2024-11-03 22:37 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 22:37 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 22:37 - INFO - 	 Best PR-AUC: 0.311
2024-11-03 22:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-03 22:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 22:37 - INFO - 	 Best Recall for 0.4 precision: 0.309
2024-11-03 22:37 - INFO - ---------------------------------------------
2024-11-03 22:39 - INFO - ---------------------------------------------
2024-11-03 22:39 - INFO - Epoch: 09 | Time: 2m 5s
2024-11-03 22:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31674
2024-11-03 22:39 - INFO - 	 Train Loss: 0.149
2024-11-03 22:39 - INFO - 	 Val. Loss: 0.155
2024-11-03 22:39 - INFO - 	 ROC-AUC: 0.858
2024-11-03 22:39 - INFO - 	 PR-AUC: 0.317
2024-11-03 22:39 - INFO - 	 Recall for 0.4 precision: 0.325
2024-11-03 22:39 - INFO - 	 Best Val. Loss: 0.155
2024-11-03 22:39 - INFO - 	 Best ROC-AUC: 0.858
2024-11-03 22:39 - INFO - 	 Best PR-AUC: 0.317
2024-11-03 22:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.784
2024-11-03 22:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-03 22:39 - INFO - 	 Best Recall for 0.4 precision: 0.325
2024-11-03 22:39 - INFO - ---------------------------------------------
2024-11-03 22:41 - INFO - ---------------------------------------------
2024-11-03 22:41 - INFO - Epoch: 10 | Time: 2m 7s
2024-11-03 22:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34831
2024-11-03 22:41 - INFO - 	 Train Loss: 0.142
2024-11-03 22:41 - INFO - 	 Val. Loss: 0.164
2024-11-03 22:41 - INFO - 	 ROC-AUC: 0.886
2024-11-03 22:41 - INFO - 	 PR-AUC: 0.348
2024-11-03 22:41 - INFO - 	 Recall for 0.4 precision: 0.332
2024-11-03 22:41 - INFO - 	 Best Val. Loss: 0.155
2024-11-03 22:41 - INFO - 	 Best ROC-AUC: 0.886
2024-11-03 22:41 - INFO - 	 Best PR-AUC: 0.348
2024-11-03 22:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.836
2024-11-03 22:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.174
2024-11-03 22:41 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 22:41 - INFO - ---------------------------------------------
2024-11-03 22:44 - INFO - Fit the preprocessing pipeline
2024-11-03 22:44 - INFO - Training using device: mps
2024-11-03 22:44 - INFO - Creating generators
2024-11-03 22:44 - INFO - The model has 651,257 trainable parameters
2024-11-03 22:44 - INFO - * Model:
2024-11-03 22:44 - INFO - * -----------
2024-11-03 22:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 22:44 - INFO - * -----------
2024-11-03 22:44 - INFO - Evaluating model based on: aucpr
2024-11-03 22:44 - INFO - Training..

2024-11-03 22:46 - INFO - ---------------------------------------------
2024-11-03 22:46 - INFO - Epoch: 01 | Time: 2m 0s
2024-11-03 22:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15435
2024-11-03 22:46 - INFO - 	 Train Loss: 0.253
2024-11-03 22:46 - INFO - 	 Val. Loss: 0.296
2024-11-03 22:46 - INFO - 	 ROC-AUC: 0.749
2024-11-03 22:46 - INFO - 	 PR-AUC: 0.154
2024-11-03 22:46 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-03 22:46 - INFO - 	 Best Val. Loss: 0.296
2024-11-03 22:46 - INFO - 	 Best ROC-AUC: 0.749
2024-11-03 22:46 - INFO - 	 Best PR-AUC: 0.154
2024-11-03 22:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-11-03 22:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.112
2024-11-03 22:46 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-03 22:46 - INFO - ---------------------------------------------
2024-11-03 22:48 - INFO - ---------------------------------------------
2024-11-03 22:48 - INFO - Epoch: 02 | Time: 2m 9s
2024-11-03 22:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2203
2024-11-03 22:48 - INFO - 	 Train Loss: 0.204
2024-11-03 22:48 - INFO - 	 Val. Loss: 0.248
2024-11-03 22:48 - INFO - 	 ROC-AUC: 0.757
2024-11-03 22:48 - INFO - 	 PR-AUC: 0.220
2024-11-03 22:48 - INFO - 	 Recall for 0.4 precision: 0.156
2024-11-03 22:48 - INFO - 	 Best Val. Loss: 0.248
2024-11-03 22:48 - INFO - 	 Best ROC-AUC: 0.757
2024-11-03 22:48 - INFO - 	 Best PR-AUC: 0.220
2024-11-03 22:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-03 22:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.132
2024-11-03 22:48 - INFO - 	 Best Recall for 0.4 precision: 0.156
2024-11-03 22:48 - INFO - ---------------------------------------------
2024-11-03 22:50 - INFO - ---------------------------------------------
2024-11-03 22:50 - INFO - Epoch: 03 | Time: 2m 5s
2024-11-03 22:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2694
2024-11-03 22:50 - INFO - 	 Train Loss: 0.183
2024-11-03 22:50 - INFO - 	 Val. Loss: 0.208
2024-11-03 22:50 - INFO - 	 ROC-AUC: 0.796
2024-11-03 22:50 - INFO - 	 PR-AUC: 0.269
2024-11-03 22:50 - INFO - 	 Recall for 0.4 precision: 0.281
2024-11-03 22:50 - INFO - 	 Best Val. Loss: 0.208
2024-11-03 22:50 - INFO - 	 Best ROC-AUC: 0.796
2024-11-03 22:50 - INFO - 	 Best PR-AUC: 0.269
2024-11-03 22:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-03 22:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 22:50 - INFO - 	 Best Recall for 0.4 precision: 0.281
2024-11-03 22:50 - INFO - ---------------------------------------------
2024-11-03 22:53 - INFO - ---------------------------------------------
2024-11-03 22:53 - INFO - Epoch: 04 | Time: 2m 2s
2024-11-03 22:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29116
2024-11-03 22:53 - INFO - 	 Train Loss: 0.169
2024-11-03 22:53 - INFO - 	 Val. Loss: 0.194
2024-11-03 22:53 - INFO - 	 ROC-AUC: 0.800
2024-11-03 22:53 - INFO - 	 PR-AUC: 0.291
2024-11-03 22:53 - INFO - 	 Recall for 0.4 precision: 0.319
2024-11-03 22:53 - INFO - 	 Best Val. Loss: 0.194
2024-11-03 22:53 - INFO - 	 Best ROC-AUC: 0.800
2024-11-03 22:53 - INFO - 	 Best PR-AUC: 0.291
2024-11-03 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-03 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 22:53 - INFO - 	 Best Recall for 0.4 precision: 0.319
2024-11-03 22:53 - INFO - ---------------------------------------------
2024-11-03 22:55 - INFO - ---------------------------------------------
2024-11-03 22:55 - INFO - Epoch: 05 | Time: 2m 1s
2024-11-03 22:55 - INFO - 	 Train Loss: 0.162
2024-11-03 22:55 - INFO - 	 Val. Loss: 0.188
2024-11-03 22:55 - INFO - 	 ROC-AUC: 0.800
2024-11-03 22:55 - INFO - 	 PR-AUC: 0.278
2024-11-03 22:55 - INFO - 	 Recall for 0.4 precision: 0.299
2024-11-03 22:55 - INFO - 	 Best Val. Loss: 0.188
2024-11-03 22:55 - INFO - 	 Best ROC-AUC: 0.800
2024-11-03 22:55 - INFO - 	 Best PR-AUC: 0.291
2024-11-03 22:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-03 22:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 22:55 - INFO - 	 Best Recall for 0.4 precision: 0.319
2024-11-03 22:55 - INFO - ---------------------------------------------
2024-11-03 22:57 - INFO - ---------------------------------------------
2024-11-03 22:57 - INFO - Epoch: 06 | Time: 2m 1s
2024-11-03 22:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31822
2024-11-03 22:57 - INFO - 	 Train Loss: 0.158
2024-11-03 22:57 - INFO - 	 Val. Loss: 0.177
2024-11-03 22:57 - INFO - 	 ROC-AUC: 0.805
2024-11-03 22:57 - INFO - 	 PR-AUC: 0.318
2024-11-03 22:57 - INFO - 	 Recall for 0.4 precision: 0.320
2024-11-03 22:57 - INFO - 	 Best Val. Loss: 0.177
2024-11-03 22:57 - INFO - 	 Best ROC-AUC: 0.805
2024-11-03 22:57 - INFO - 	 Best PR-AUC: 0.318
2024-11-03 22:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-03 22:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 22:57 - INFO - 	 Best Recall for 0.4 precision: 0.320
2024-11-03 22:57 - INFO - ---------------------------------------------
2024-11-03 22:59 - INFO - ---------------------------------------------
2024-11-03 22:59 - INFO - Epoch: 07 | Time: 1m 58s
2024-11-03 22:59 - INFO - 	 Train Loss: 0.154
2024-11-03 22:59 - INFO - 	 Val. Loss: 0.166
2024-11-03 22:59 - INFO - 	 ROC-AUC: 0.819
2024-11-03 22:59 - INFO - 	 PR-AUC: 0.306
2024-11-03 22:59 - INFO - 	 Recall for 0.4 precision: 0.299
2024-11-03 22:59 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 22:59 - INFO - 	 Best ROC-AUC: 0.819
2024-11-03 22:59 - INFO - 	 Best PR-AUC: 0.318
2024-11-03 22:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 22:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 22:59 - INFO - 	 Best Recall for 0.4 precision: 0.320
2024-11-03 22:59 - INFO - ---------------------------------------------
2024-11-03 23:00 - INFO - ---------------------------------------------
2024-11-03 23:00 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-03 23:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32833
2024-11-03 23:00 - INFO - 	 Train Loss: 0.152
2024-11-03 23:00 - INFO - 	 Val. Loss: 0.167
2024-11-03 23:00 - INFO - 	 ROC-AUC: 0.814
2024-11-03 23:00 - INFO - 	 PR-AUC: 0.328
2024-11-03 23:00 - INFO - 	 Recall for 0.4 precision: 0.354
2024-11-03 23:00 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 23:00 - INFO - 	 Best ROC-AUC: 0.819
2024-11-03 23:00 - INFO - 	 Best PR-AUC: 0.328
2024-11-03 23:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 23:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 23:00 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-03 23:00 - INFO - ---------------------------------------------
2024-11-03 23:02 - INFO - ---------------------------------------------
2024-11-03 23:02 - INFO - Epoch: 09 | Time: 1m 50s
2024-11-03 23:02 - INFO - 	 Train Loss: 0.150
2024-11-03 23:02 - INFO - 	 Val. Loss: 0.164
2024-11-03 23:02 - INFO - 	 ROC-AUC: 0.821
2024-11-03 23:02 - INFO - 	 PR-AUC: 0.327
2024-11-03 23:02 - INFO - 	 Recall for 0.4 precision: 0.372
2024-11-03 23:02 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 23:02 - INFO - 	 Best ROC-AUC: 0.821
2024-11-03 23:02 - INFO - 	 Best PR-AUC: 0.328
2024-11-03 23:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.779
2024-11-03 23:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 23:02 - INFO - 	 Best Recall for 0.4 precision: 0.372
2024-11-03 23:02 - INFO - ---------------------------------------------
2024-11-03 23:04 - INFO - ---------------------------------------------
2024-11-03 23:04 - INFO - Epoch: 10 | Time: 1m 51s
2024-11-03 23:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33315
2024-11-03 23:04 - INFO - 	 Train Loss: 0.148
2024-11-03 23:04 - INFO - 	 Val. Loss: 0.156
2024-11-03 23:04 - INFO - 	 ROC-AUC: 0.841
2024-11-03 23:04 - INFO - 	 PR-AUC: 0.333
2024-11-03 23:04 - INFO - 	 Recall for 0.4 precision: 0.377
2024-11-03 23:04 - INFO - 	 Best Val. Loss: 0.156
2024-11-03 23:04 - INFO - 	 Best ROC-AUC: 0.841
2024-11-03 23:04 - INFO - 	 Best PR-AUC: 0.333
2024-11-03 23:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.786
2024-11-03 23:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 23:04 - INFO - 	 Best Recall for 0.4 precision: 0.377
2024-11-03 23:04 - INFO - ---------------------------------------------
2024-11-03 23:07 - INFO - Fit the preprocessing pipeline
2024-11-03 23:07 - INFO - Training using device: mps
2024-11-03 23:07 - INFO - Creating generators
2024-11-03 23:07 - INFO - The model has 651,257 trainable parameters
2024-11-03 23:07 - INFO - * Model:
2024-11-03 23:07 - INFO - * -----------
2024-11-03 23:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 23:07 - INFO - * -----------
2024-11-03 23:07 - INFO - Evaluating model based on: aucpr
2024-11-03 23:07 - INFO - Training..

2024-11-03 23:08 - INFO - ---------------------------------------------
2024-11-03 23:08 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-03 23:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13126
2024-11-03 23:08 - INFO - 	 Train Loss: 0.253
2024-11-03 23:08 - INFO - 	 Val. Loss: 0.282
2024-11-03 23:08 - INFO - 	 ROC-AUC: 0.727
2024-11-03 23:08 - INFO - 	 PR-AUC: 0.131
2024-11-03 23:08 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-03 23:08 - INFO - 	 Best Val. Loss: 0.282
2024-11-03 23:08 - INFO - 	 Best ROC-AUC: 0.727
2024-11-03 23:08 - INFO - 	 Best PR-AUC: 0.131
2024-11-03 23:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.689
2024-11-03 23:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.092
2024-11-03 23:08 - INFO - 	 Best Recall for 0.4 precision: 0.010
2024-11-03 23:08 - INFO - ---------------------------------------------
2024-11-03 23:10 - INFO - ---------------------------------------------
2024-11-03 23:10 - INFO - Epoch: 02 | Time: 1m 42s
2024-11-03 23:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23274
2024-11-03 23:10 - INFO - 	 Train Loss: 0.205
2024-11-03 23:10 - INFO - 	 Val. Loss: 0.231
2024-11-03 23:10 - INFO - 	 ROC-AUC: 0.766
2024-11-03 23:10 - INFO - 	 PR-AUC: 0.233
2024-11-03 23:10 - INFO - 	 Recall for 0.4 precision: 0.198
2024-11-03 23:10 - INFO - 	 Best Val. Loss: 0.231
2024-11-03 23:10 - INFO - 	 Best ROC-AUC: 0.766
2024-11-03 23:10 - INFO - 	 Best PR-AUC: 0.233
2024-11-03 23:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 23:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-03 23:10 - INFO - 	 Best Recall for 0.4 precision: 0.198
2024-11-03 23:10 - INFO - ---------------------------------------------
2024-11-03 23:12 - INFO - ---------------------------------------------
2024-11-03 23:12 - INFO - Epoch: 03 | Time: 1m 48s
2024-11-03 23:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23877
2024-11-03 23:12 - INFO - 	 Train Loss: 0.185
2024-11-03 23:12 - INFO - 	 Val. Loss: 0.216
2024-11-03 23:12 - INFO - 	 ROC-AUC: 0.764
2024-11-03 23:12 - INFO - 	 PR-AUC: 0.239
2024-11-03 23:12 - INFO - 	 Recall for 0.4 precision: 0.202
2024-11-03 23:12 - INFO - 	 Best Val. Loss: 0.216
2024-11-03 23:12 - INFO - 	 Best ROC-AUC: 0.766
2024-11-03 23:12 - INFO - 	 Best PR-AUC: 0.239
2024-11-03 23:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 23:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 23:12 - INFO - 	 Best Recall for 0.4 precision: 0.202
2024-11-03 23:12 - INFO - ---------------------------------------------
2024-11-03 23:14 - INFO - ---------------------------------------------
2024-11-03 23:14 - INFO - Epoch: 04 | Time: 1m 49s
2024-11-03 23:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28199
2024-11-03 23:14 - INFO - 	 Train Loss: 0.170
2024-11-03 23:14 - INFO - 	 Val. Loss: 0.185
2024-11-03 23:14 - INFO - 	 ROC-AUC: 0.803
2024-11-03 23:14 - INFO - 	 PR-AUC: 0.282
2024-11-03 23:14 - INFO - 	 Recall for 0.4 precision: 0.270
2024-11-03 23:14 - INFO - 	 Best Val. Loss: 0.185
2024-11-03 23:14 - INFO - 	 Best ROC-AUC: 0.803
2024-11-03 23:14 - INFO - 	 Best PR-AUC: 0.282
2024-11-03 23:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 23:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 23:14 - INFO - 	 Best Recall for 0.4 precision: 0.270
2024-11-03 23:14 - INFO - ---------------------------------------------
2024-11-03 23:16 - INFO - ---------------------------------------------
2024-11-03 23:16 - INFO - Epoch: 05 | Time: 1m 50s
2024-11-03 23:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29836
2024-11-03 23:16 - INFO - 	 Train Loss: 0.163
2024-11-03 23:16 - INFO - 	 Val. Loss: 0.183
2024-11-03 23:16 - INFO - 	 ROC-AUC: 0.801
2024-11-03 23:16 - INFO - 	 PR-AUC: 0.298
2024-11-03 23:16 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-03 23:16 - INFO - 	 Best Val. Loss: 0.183
2024-11-03 23:16 - INFO - 	 Best ROC-AUC: 0.803
2024-11-03 23:16 - INFO - 	 Best PR-AUC: 0.298
2024-11-03 23:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 23:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 23:16 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-03 23:16 - INFO - ---------------------------------------------
2024-11-03 23:18 - INFO - ---------------------------------------------
2024-11-03 23:18 - INFO - Epoch: 06 | Time: 1m 50s
2024-11-03 23:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31939
2024-11-03 23:18 - INFO - 	 Train Loss: 0.158
2024-11-03 23:18 - INFO - 	 Val. Loss: 0.173
2024-11-03 23:18 - INFO - 	 ROC-AUC: 0.813
2024-11-03 23:18 - INFO - 	 PR-AUC: 0.319
2024-11-03 23:18 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-03 23:18 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 23:18 - INFO - 	 Best ROC-AUC: 0.813
2024-11-03 23:18 - INFO - 	 Best PR-AUC: 0.319
2024-11-03 23:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-03 23:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-03 23:18 - INFO - 	 Best Recall for 0.4 precision: 0.341
2024-11-03 23:18 - INFO - ---------------------------------------------
2024-11-03 23:19 - INFO - ---------------------------------------------
2024-11-03 23:19 - INFO - Epoch: 07 | Time: 1m 50s
2024-11-03 23:19 - INFO - 	 Train Loss: 0.153
2024-11-03 23:19 - INFO - 	 Val. Loss: 0.168
2024-11-03 23:19 - INFO - 	 ROC-AUC: 0.827
2024-11-03 23:19 - INFO - 	 PR-AUC: 0.312
2024-11-03 23:19 - INFO - 	 Recall for 0.4 precision: 0.382
2024-11-03 23:19 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 23:19 - INFO - 	 Best ROC-AUC: 0.827
2024-11-03 23:19 - INFO - 	 Best PR-AUC: 0.319
2024-11-03 23:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 23:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-03 23:19 - INFO - 	 Best Recall for 0.4 precision: 0.382
2024-11-03 23:19 - INFO - ---------------------------------------------
2024-11-03 23:21 - INFO - ---------------------------------------------
2024-11-03 23:21 - INFO - Epoch: 08 | Time: 1m 50s
2024-11-03 23:21 - INFO - 	 Train Loss: 0.151
2024-11-03 23:21 - INFO - 	 Val. Loss: 0.167
2024-11-03 23:21 - INFO - 	 ROC-AUC: 0.826
2024-11-03 23:21 - INFO - 	 PR-AUC: 0.315
2024-11-03 23:21 - INFO - 	 Recall for 0.4 precision: 0.299
2024-11-03 23:21 - INFO - 	 Best Val. Loss: 0.167
2024-11-03 23:21 - INFO - 	 Best ROC-AUC: 0.827
2024-11-03 23:21 - INFO - 	 Best PR-AUC: 0.319
2024-11-03 23:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 23:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-03 23:21 - INFO - 	 Best Recall for 0.4 precision: 0.382
2024-11-03 23:21 - INFO - ---------------------------------------------
2024-11-03 23:23 - INFO - ---------------------------------------------
2024-11-03 23:23 - INFO - Epoch: 09 | Time: 1m 50s
2024-11-03 23:23 - INFO - 	 Train Loss: 0.148
2024-11-03 23:23 - INFO - 	 Val. Loss: 0.164
2024-11-03 23:23 - INFO - 	 ROC-AUC: 0.828
2024-11-03 23:23 - INFO - 	 PR-AUC: 0.314
2024-11-03 23:23 - INFO - 	 Recall for 0.4 precision: 0.309
2024-11-03 23:23 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 23:23 - INFO - 	 Best ROC-AUC: 0.828
2024-11-03 23:23 - INFO - 	 Best PR-AUC: 0.319
2024-11-03 23:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 23:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-03 23:23 - INFO - 	 Best Recall for 0.4 precision: 0.382
2024-11-03 23:23 - INFO - ---------------------------------------------
2024-11-03 23:28 - INFO - Fit the preprocessing pipeline
2024-11-03 23:28 - INFO - Training using device: mps
2024-11-03 23:28 - INFO - Creating generators
2024-11-03 23:28 - INFO - The model has 651,257 trainable parameters
2024-11-03 23:28 - INFO - * Model:
2024-11-03 23:28 - INFO - * -----------
2024-11-03 23:28 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 23:28 - INFO - * -----------
2024-11-03 23:28 - INFO - Evaluating model based on: aucpr
2024-11-03 23:28 - INFO - Training..

2024-11-03 23:29 - INFO - ---------------------------------------------
2024-11-03 23:29 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-03 23:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18341
2024-11-03 23:29 - INFO - 	 Train Loss: 0.253
2024-11-03 23:29 - INFO - 	 Val. Loss: 0.309
2024-11-03 23:29 - INFO - 	 ROC-AUC: 0.728
2024-11-03 23:29 - INFO - 	 PR-AUC: 0.183
2024-11-03 23:29 - INFO - 	 Recall for 0.4 precision: 0.111
2024-11-03 23:29 - INFO - 	 Best Val. Loss: 0.309
2024-11-03 23:29 - INFO - 	 Best ROC-AUC: 0.728
2024-11-03 23:29 - INFO - 	 Best PR-AUC: 0.183
2024-11-03 23:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.701
2024-11-03 23:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-03 23:29 - INFO - 	 Best Recall for 0.4 precision: 0.111
2024-11-03 23:29 - INFO - ---------------------------------------------
2024-11-03 23:31 - INFO - ---------------------------------------------
2024-11-03 23:31 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-03 23:31 - INFO - 	 Train Loss: 0.206
2024-11-03 23:31 - INFO - 	 Val. Loss: 0.239
2024-11-03 23:31 - INFO - 	 ROC-AUC: 0.722
2024-11-03 23:31 - INFO - 	 PR-AUC: 0.125
2024-11-03 23:31 - INFO - 	 Recall for 0.4 precision: 0.011
2024-11-03 23:31 - INFO - 	 Best Val. Loss: 0.239
2024-11-03 23:31 - INFO - 	 Best ROC-AUC: 0.728
2024-11-03 23:31 - INFO - 	 Best PR-AUC: 0.183
2024-11-03 23:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.701
2024-11-03 23:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-03 23:31 - INFO - 	 Best Recall for 0.4 precision: 0.111
2024-11-03 23:31 - INFO - ---------------------------------------------
2024-11-03 23:33 - INFO - ---------------------------------------------
2024-11-03 23:33 - INFO - Epoch: 03 | Time: 1m 44s
2024-11-03 23:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2272
2024-11-03 23:33 - INFO - 	 Train Loss: 0.188
2024-11-03 23:33 - INFO - 	 Val. Loss: 0.211
2024-11-03 23:33 - INFO - 	 ROC-AUC: 0.781
2024-11-03 23:33 - INFO - 	 PR-AUC: 0.227
2024-11-03 23:33 - INFO - 	 Recall for 0.4 precision: 0.130
2024-11-03 23:33 - INFO - 	 Best Val. Loss: 0.211
2024-11-03 23:33 - INFO - 	 Best ROC-AUC: 0.781
2024-11-03 23:33 - INFO - 	 Best PR-AUC: 0.227
2024-11-03 23:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-11-03 23:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.130
2024-11-03 23:33 - INFO - 	 Best Recall for 0.4 precision: 0.130
2024-11-03 23:33 - INFO - ---------------------------------------------
2024-11-03 23:35 - INFO - ---------------------------------------------
2024-11-03 23:35 - INFO - Epoch: 04 | Time: 1m 49s
2024-11-03 23:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24833
2024-11-03 23:35 - INFO - 	 Train Loss: 0.172
2024-11-03 23:35 - INFO - 	 Val. Loss: 0.197
2024-11-03 23:35 - INFO - 	 ROC-AUC: 0.786
2024-11-03 23:35 - INFO - 	 PR-AUC: 0.248
2024-11-03 23:35 - INFO - 	 Recall for 0.4 precision: 0.205
2024-11-03 23:35 - INFO - 	 Best Val. Loss: 0.197
2024-11-03 23:35 - INFO - 	 Best ROC-AUC: 0.786
2024-11-03 23:35 - INFO - 	 Best PR-AUC: 0.248
2024-11-03 23:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-03 23:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 23:35 - INFO - 	 Best Recall for 0.4 precision: 0.205
2024-11-03 23:35 - INFO - ---------------------------------------------
2024-11-03 23:36 - INFO - ---------------------------------------------
2024-11-03 23:36 - INFO - Epoch: 05 | Time: 1m 50s
2024-11-03 23:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28991
2024-11-03 23:36 - INFO - 	 Train Loss: 0.166
2024-11-03 23:36 - INFO - 	 Val. Loss: 0.183
2024-11-03 23:36 - INFO - 	 ROC-AUC: 0.793
2024-11-03 23:36 - INFO - 	 PR-AUC: 0.290
2024-11-03 23:36 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-03 23:36 - INFO - 	 Best Val. Loss: 0.183
2024-11-03 23:36 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 23:36 - INFO - 	 Best PR-AUC: 0.290
2024-11-03 23:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-03 23:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 23:36 - INFO - 	 Best Recall for 0.4 precision: 0.306
2024-11-03 23:36 - INFO - ---------------------------------------------
2024-11-03 23:38 - INFO - ---------------------------------------------
2024-11-03 23:38 - INFO - Epoch: 06 | Time: 1m 50s
2024-11-03 23:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30586
2024-11-03 23:38 - INFO - 	 Train Loss: 0.160
2024-11-03 23:38 - INFO - 	 Val. Loss: 0.184
2024-11-03 23:38 - INFO - 	 ROC-AUC: 0.806
2024-11-03 23:38 - INFO - 	 PR-AUC: 0.306
2024-11-03 23:38 - INFO - 	 Recall for 0.4 precision: 0.315
2024-11-03 23:38 - INFO - 	 Best Val. Loss: 0.183
2024-11-03 23:38 - INFO - 	 Best ROC-AUC: 0.806
2024-11-03 23:38 - INFO - 	 Best PR-AUC: 0.306
2024-11-03 23:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-03 23:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-03 23:38 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-03 23:38 - INFO - ---------------------------------------------
2024-11-03 23:40 - INFO - ---------------------------------------------
2024-11-03 23:40 - INFO - Epoch: 07 | Time: 1m 50s
2024-11-03 23:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32756
2024-11-03 23:40 - INFO - 	 Train Loss: 0.155
2024-11-03 23:40 - INFO - 	 Val. Loss: 0.170
2024-11-03 23:40 - INFO - 	 ROC-AUC: 0.828
2024-11-03 23:40 - INFO - 	 PR-AUC: 0.328
2024-11-03 23:40 - INFO - 	 Recall for 0.4 precision: 0.364
2024-11-03 23:40 - INFO - 	 Best Val. Loss: 0.170
2024-11-03 23:40 - INFO - 	 Best ROC-AUC: 0.828
2024-11-03 23:40 - INFO - 	 Best PR-AUC: 0.328
2024-11-03 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.781
2024-11-03 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-03 23:40 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 23:40 - INFO - ---------------------------------------------
2024-11-03 23:42 - INFO - ---------------------------------------------
2024-11-03 23:42 - INFO - Epoch: 08 | Time: 1m 50s
2024-11-03 23:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3448
2024-11-03 23:42 - INFO - 	 Train Loss: 0.151
2024-11-03 23:42 - INFO - 	 Val. Loss: 0.163
2024-11-03 23:42 - INFO - 	 ROC-AUC: 0.843
2024-11-03 23:42 - INFO - 	 PR-AUC: 0.345
2024-11-03 23:42 - INFO - 	 Recall for 0.4 precision: 0.397
2024-11-03 23:42 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 23:42 - INFO - 	 Best ROC-AUC: 0.843
2024-11-03 23:42 - INFO - 	 Best PR-AUC: 0.345
2024-11-03 23:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.784
2024-11-03 23:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 23:42 - INFO - 	 Best Recall for 0.4 precision: 0.397
2024-11-03 23:42 - INFO - ---------------------------------------------
2024-11-03 23:44 - INFO - ---------------------------------------------
2024-11-03 23:44 - INFO - Epoch: 09 | Time: 1m 50s
2024-11-03 23:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35562
2024-11-03 23:44 - INFO - 	 Train Loss: 0.150
2024-11-03 23:44 - INFO - 	 Val. Loss: 0.162
2024-11-03 23:44 - INFO - 	 ROC-AUC: 0.843
2024-11-03 23:44 - INFO - 	 PR-AUC: 0.356
2024-11-03 23:44 - INFO - 	 Recall for 0.4 precision: 0.380
2024-11-03 23:44 - INFO - 	 Best Val. Loss: 0.162
2024-11-03 23:44 - INFO - 	 Best ROC-AUC: 0.843
2024-11-03 23:44 - INFO - 	 Best PR-AUC: 0.356
2024-11-03 23:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-03 23:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 23:44 - INFO - 	 Best Recall for 0.4 precision: 0.397
2024-11-03 23:44 - INFO - ---------------------------------------------
2024-11-03 23:46 - INFO - ---------------------------------------------
2024-11-03 23:46 - INFO - Epoch: 10 | Time: 1m 50s
2024-11-03 23:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36205
2024-11-03 23:46 - INFO - 	 Train Loss: 0.147
2024-11-03 23:46 - INFO - 	 Val. Loss: 0.161
2024-11-03 23:46 - INFO - 	 ROC-AUC: 0.855
2024-11-03 23:46 - INFO - 	 PR-AUC: 0.362
2024-11-03 23:46 - INFO - 	 Recall for 0.4 precision: 0.431
2024-11-03 23:46 - INFO - 	 Best Val. Loss: 0.161
2024-11-03 23:46 - INFO - 	 Best ROC-AUC: 0.855
2024-11-03 23:46 - INFO - 	 Best PR-AUC: 0.362
2024-11-03 23:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.786
2024-11-03 23:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 23:46 - INFO - 	 Best Recall for 0.4 precision: 0.431
2024-11-03 23:46 - INFO - ---------------------------------------------
2024-11-03 23:48 - INFO - Fit the preprocessing pipeline
2024-11-03 23:48 - INFO - Training using device: mps
2024-11-03 23:48 - INFO - Creating generators
2024-11-03 23:48 - INFO - The model has 651,257 trainable parameters
2024-11-03 23:48 - INFO - * Model:
2024-11-03 23:48 - INFO - * -----------
2024-11-03 23:48 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 23:48 - INFO - * -----------
2024-11-03 23:48 - INFO - Evaluating model based on: aucpr
2024-11-03 23:48 - INFO - Training..

2024-11-03 23:50 - INFO - ---------------------------------------------
2024-11-03 23:50 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-03 23:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15736
2024-11-03 23:50 - INFO - 	 Train Loss: 0.259
2024-11-03 23:50 - INFO - 	 Val. Loss: 0.289
2024-11-03 23:50 - INFO - 	 ROC-AUC: 0.722
2024-11-03 23:50 - INFO - 	 PR-AUC: 0.157
2024-11-03 23:50 - INFO - 	 Recall for 0.4 precision: 0.036
2024-11-03 23:50 - INFO - 	 Best Val. Loss: 0.289
2024-11-03 23:50 - INFO - 	 Best ROC-AUC: 0.722
2024-11-03 23:50 - INFO - 	 Best PR-AUC: 0.157
2024-11-03 23:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.739
2024-11-03 23:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-03 23:50 - INFO - 	 Best Recall for 0.4 precision: 0.036
2024-11-03 23:50 - INFO - ---------------------------------------------
2024-11-03 23:52 - INFO - ---------------------------------------------
2024-11-03 23:52 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-03 23:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2461
2024-11-03 23:52 - INFO - 	 Train Loss: 0.204
2024-11-03 23:52 - INFO - 	 Val. Loss: 0.241
2024-11-03 23:52 - INFO - 	 ROC-AUC: 0.765
2024-11-03 23:52 - INFO - 	 PR-AUC: 0.246
2024-11-03 23:52 - INFO - 	 Recall for 0.4 precision: 0.216
2024-11-03 23:52 - INFO - 	 Best Val. Loss: 0.241
2024-11-03 23:52 - INFO - 	 Best ROC-AUC: 0.765
2024-11-03 23:52 - INFO - 	 Best PR-AUC: 0.246
2024-11-03 23:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.729
2024-11-03 23:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.117
2024-11-03 23:52 - INFO - 	 Best Recall for 0.4 precision: 0.216
2024-11-03 23:52 - INFO - ---------------------------------------------
2024-11-03 23:53 - INFO - ---------------------------------------------
2024-11-03 23:53 - INFO - Epoch: 03 | Time: 1m 43s
2024-11-03 23:53 - INFO - 	 Train Loss: 0.184
2024-11-03 23:53 - INFO - 	 Val. Loss: 0.201
2024-11-03 23:53 - INFO - 	 ROC-AUC: 0.766
2024-11-03 23:53 - INFO - 	 PR-AUC: 0.246
2024-11-03 23:53 - INFO - 	 Recall for 0.4 precision: 0.216
2024-11-03 23:53 - INFO - 	 Best Val. Loss: 0.201
2024-11-03 23:53 - INFO - 	 Best ROC-AUC: 0.766
2024-11-03 23:53 - INFO - 	 Best PR-AUC: 0.246
2024-11-03 23:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-11-03 23:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.117
2024-11-03 23:53 - INFO - 	 Best Recall for 0.4 precision: 0.216
2024-11-03 23:53 - INFO - ---------------------------------------------
2024-11-03 23:55 - INFO - ---------------------------------------------
2024-11-03 23:55 - INFO - Epoch: 04 | Time: 1m 47s
2024-11-03 23:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26327
2024-11-03 23:55 - INFO - 	 Train Loss: 0.172
2024-11-03 23:55 - INFO - 	 Val. Loss: 0.196
2024-11-03 23:55 - INFO - 	 ROC-AUC: 0.783
2024-11-03 23:55 - INFO - 	 PR-AUC: 0.263
2024-11-03 23:55 - INFO - 	 Recall for 0.4 precision: 0.234
2024-11-03 23:55 - INFO - 	 Best Val. Loss: 0.196
2024-11-03 23:55 - INFO - 	 Best ROC-AUC: 0.783
2024-11-03 23:55 - INFO - 	 Best PR-AUC: 0.263
2024-11-03 23:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-03 23:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 23:55 - INFO - 	 Best Recall for 0.4 precision: 0.234
2024-11-03 23:55 - INFO - ---------------------------------------------
2024-11-03 23:57 - INFO - ---------------------------------------------
2024-11-03 23:57 - INFO - Epoch: 05 | Time: 1m 48s
2024-11-03 23:57 - INFO - 	 Train Loss: 0.166
2024-11-03 23:57 - INFO - 	 Val. Loss: 0.205
2024-11-03 23:57 - INFO - 	 ROC-AUC: 0.753
2024-11-03 23:57 - INFO - 	 PR-AUC: 0.134
2024-11-03 23:57 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 23:57 - INFO - 	 Best Val. Loss: 0.196
2024-11-03 23:57 - INFO - 	 Best ROC-AUC: 0.783
2024-11-03 23:57 - INFO - 	 Best PR-AUC: 0.263
2024-11-03 23:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-03 23:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 23:57 - INFO - 	 Best Recall for 0.4 precision: 0.234
2024-11-03 23:57 - INFO - ---------------------------------------------
2024-11-03 23:59 - INFO - ---------------------------------------------
2024-11-03 23:59 - INFO - Epoch: 06 | Time: 1m 48s
2024-11-03 23:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30029
2024-11-03 23:59 - INFO - 	 Train Loss: 0.164
2024-11-03 23:59 - INFO - 	 Val. Loss: 0.173
2024-11-03 23:59 - INFO - 	 ROC-AUC: 0.816
2024-11-03 23:59 - INFO - 	 PR-AUC: 0.300
2024-11-03 23:59 - INFO - 	 Recall for 0.4 precision: 0.293
2024-11-03 23:59 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 23:59 - INFO - 	 Best ROC-AUC: 0.816
2024-11-03 23:59 - INFO - 	 Best PR-AUC: 0.300
2024-11-03 23:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-03 23:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-03 23:59 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-03 23:59 - INFO - ---------------------------------------------
2024-11-04 00:01 - INFO - ---------------------------------------------
2024-11-04 00:01 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-04 00:01 - INFO - 	 Train Loss: 0.156
2024-11-04 00:01 - INFO - 	 Val. Loss: 0.171
2024-11-04 00:01 - INFO - 	 ROC-AUC: 0.807
2024-11-04 00:01 - INFO - 	 PR-AUC: 0.289
2024-11-04 00:01 - INFO - 	 Recall for 0.4 precision: 0.254
2024-11-04 00:01 - INFO - 	 Best Val. Loss: 0.171
2024-11-04 00:01 - INFO - 	 Best ROC-AUC: 0.816
2024-11-04 00:01 - INFO - 	 Best PR-AUC: 0.300
2024-11-04 00:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-04 00:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-04 00:01 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-04 00:01 - INFO - ---------------------------------------------
2024-11-04 00:03 - INFO - ---------------------------------------------
2024-11-04 00:03 - INFO - Epoch: 08 | Time: 1m 50s
2024-11-04 00:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3096
2024-11-04 00:03 - INFO - 	 Train Loss: 0.152
2024-11-04 00:03 - INFO - 	 Val. Loss: 0.163
2024-11-04 00:03 - INFO - 	 ROC-AUC: 0.815
2024-11-04 00:03 - INFO - 	 PR-AUC: 0.310
2024-11-04 00:03 - INFO - 	 Recall for 0.4 precision: 0.319
2024-11-04 00:03 - INFO - 	 Best Val. Loss: 0.163
2024-11-04 00:03 - INFO - 	 Best ROC-AUC: 0.816
2024-11-04 00:03 - INFO - 	 Best PR-AUC: 0.310
2024-11-04 00:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-04 00:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-04 00:03 - INFO - 	 Best Recall for 0.4 precision: 0.319
2024-11-04 00:03 - INFO - ---------------------------------------------
2024-11-04 00:04 - INFO - ---------------------------------------------
2024-11-04 00:04 - INFO - Epoch: 09 | Time: 1m 50s
2024-11-04 00:04 - INFO - 	 Train Loss: 0.150
2024-11-04 00:04 - INFO - 	 Val. Loss: 0.180
2024-11-04 00:04 - INFO - 	 ROC-AUC: 0.802
2024-11-04 00:04 - INFO - 	 PR-AUC: 0.282
2024-11-04 00:04 - INFO - 	 Recall for 0.4 precision: 0.302
2024-11-04 00:04 - INFO - 	 Best Val. Loss: 0.163
2024-11-04 00:04 - INFO - 	 Best ROC-AUC: 0.816
2024-11-04 00:04 - INFO - 	 Best PR-AUC: 0.310
2024-11-04 00:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-04 00:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-04 00:04 - INFO - 	 Best Recall for 0.4 precision: 0.319
2024-11-04 00:04 - INFO - ---------------------------------------------
2024-11-04 00:06 - INFO - ---------------------------------------------
2024-11-04 00:06 - INFO - Epoch: 10 | Time: 1m 49s
2024-11-04 00:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33436
2024-11-04 00:06 - INFO - 	 Train Loss: 0.148
2024-11-04 00:06 - INFO - 	 Val. Loss: 0.164
2024-11-04 00:06 - INFO - 	 ROC-AUC: 0.845
2024-11-04 00:06 - INFO - 	 PR-AUC: 0.334
2024-11-04 00:06 - INFO - 	 Recall for 0.4 precision: 0.346
2024-11-04 00:06 - INFO - 	 Best Val. Loss: 0.163
2024-11-04 00:06 - INFO - 	 Best ROC-AUC: 0.845
2024-11-04 00:06 - INFO - 	 Best PR-AUC: 0.334
2024-11-04 00:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.788
2024-11-04 00:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-04 00:06 - INFO - 	 Best Recall for 0.4 precision: 0.346
2024-11-04 00:06 - INFO - ---------------------------------------------
