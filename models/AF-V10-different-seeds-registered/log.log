2024-05-13 19:52 - INFO - Fit the preprocessing pipeline
2024-05-13 19:52 - INFO - Training using device: cuda
2024-05-13 19:52 - INFO - Creating generators
2024-05-13 19:52 - INFO - The model has 651,257 trainable parameters
2024-05-13 19:52 - INFO - * Model:
2024-05-13 19:52 - INFO - * -----------
2024-05-13 19:52 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-13 19:52 - INFO - * -----------
2024-05-13 19:52 - INFO - Evaluating model based on: rocauc
2024-05-13 19:52 - INFO - Training..

2024-05-13 19:59 - INFO - ---------------------------------------------
2024-05-13 19:59 - INFO - Epoch: 01 | Time: 6m 40s
2024-05-13 19:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71016
2024-05-13 19:59 - INFO - 	 Train Loss: 0.542
2024-05-13 19:59 - INFO - 	 Val. Loss: 0.508
2024-05-13 19:59 - INFO - 	 ROC-AUC: 0.710
2024-05-13 19:59 - INFO - 	 PR-AUC: 0.422
2024-05-13 19:59 - INFO - 	 Recall for 0.4 precision: 0.565
2024-05-13 19:59 - INFO - 	 Best Val. Loss: 0.508
2024-05-13 19:59 - INFO - 	 Best ROC-AUC: 0.710
2024-05-13 19:59 - INFO - 	 Best PR-AUC: 0.422
2024-05-13 19:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.688
2024-05-13 19:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-05-13 19:59 - INFO - 	 Best Recall for 0.4 precision: 0.565
2024-05-13 19:59 - INFO - ---------------------------------------------
2024-05-13 20:06 - INFO - ---------------------------------------------
2024-05-13 20:06 - INFO - Epoch: 02 | Time: 6m 46s
2024-05-13 20:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.727
2024-05-13 20:06 - INFO - 	 Train Loss: 0.498
2024-05-13 20:06 - INFO - 	 Val. Loss: 0.500
2024-05-13 20:06 - INFO - 	 ROC-AUC: 0.727
2024-05-13 20:06 - INFO - 	 PR-AUC: 0.434
2024-05-13 20:06 - INFO - 	 Recall for 0.4 precision: 0.648
2024-05-13 20:06 - INFO - 	 Best Val. Loss: 0.500
2024-05-13 20:06 - INFO - 	 Best ROC-AUC: 0.727
2024-05-13 20:06 - INFO - 	 Best PR-AUC: 0.434
2024-05-13 20:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-05-13 20:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.421
2024-05-13 20:06 - INFO - 	 Best Recall for 0.4 precision: 0.648
2024-05-13 20:06 - INFO - ---------------------------------------------
2024-05-13 20:13 - INFO - ---------------------------------------------
2024-05-13 20:13 - INFO - Epoch: 03 | Time: 6m 53s
2024-05-13 20:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72987
2024-05-13 20:13 - INFO - 	 Train Loss: 0.489
2024-05-13 20:13 - INFO - 	 Val. Loss: 0.495
2024-05-13 20:13 - INFO - 	 ROC-AUC: 0.730
2024-05-13 20:13 - INFO - 	 PR-AUC: 0.437
2024-05-13 20:13 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-13 20:13 - INFO - 	 Best Val. Loss: 0.495
2024-05-13 20:13 - INFO - 	 Best ROC-AUC: 0.730
2024-05-13 20:13 - INFO - 	 Best PR-AUC: 0.437
2024-05-13 20:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-13 20:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-13 20:13 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-13 20:13 - INFO - ---------------------------------------------
2024-05-13 20:19 - INFO - ---------------------------------------------
2024-05-13 20:19 - INFO - Epoch: 04 | Time: 6m 41s
2024-05-13 20:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73245
2024-05-13 20:19 - INFO - 	 Train Loss: 0.485
2024-05-13 20:19 - INFO - 	 Val. Loss: 0.499
2024-05-13 20:19 - INFO - 	 ROC-AUC: 0.732
2024-05-13 20:19 - INFO - 	 PR-AUC: 0.442
2024-05-13 20:19 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-13 20:19 - INFO - 	 Best Val. Loss: 0.495
2024-05-13 20:19 - INFO - 	 Best ROC-AUC: 0.732
2024-05-13 20:19 - INFO - 	 Best PR-AUC: 0.442
2024-05-13 20:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-13 20:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-05-13 20:19 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-13 20:19 - INFO - ---------------------------------------------
2024-05-13 20:26 - INFO - ---------------------------------------------
2024-05-13 20:26 - INFO - Epoch: 05 | Time: 6m 42s
2024-05-13 20:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73363
2024-05-13 20:26 - INFO - 	 Train Loss: 0.481
2024-05-13 20:26 - INFO - 	 Val. Loss: 0.499
2024-05-13 20:26 - INFO - 	 ROC-AUC: 0.734
2024-05-13 20:26 - INFO - 	 PR-AUC: 0.444
2024-05-13 20:26 - INFO - 	 Recall for 0.4 precision: 0.676
2024-05-13 20:26 - INFO - 	 Best Val. Loss: 0.495
2024-05-13 20:26 - INFO - 	 Best ROC-AUC: 0.734
2024-05-13 20:26 - INFO - 	 Best PR-AUC: 0.444
2024-05-13 20:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-13 20:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-13 20:26 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-13 20:26 - INFO - ---------------------------------------------
2024-05-13 20:33 - INFO - ---------------------------------------------
2024-05-13 20:33 - INFO - Epoch: 06 | Time: 6m 48s
2024-05-13 20:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7354
2024-05-13 20:33 - INFO - 	 Train Loss: 0.479
2024-05-13 20:33 - INFO - 	 Val. Loss: 0.493
2024-05-13 20:33 - INFO - 	 ROC-AUC: 0.735
2024-05-13 20:33 - INFO - 	 PR-AUC: 0.447
2024-05-13 20:33 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-13 20:33 - INFO - 	 Best Val. Loss: 0.493
2024-05-13 20:33 - INFO - 	 Best ROC-AUC: 0.735
2024-05-13 20:33 - INFO - 	 Best PR-AUC: 0.447
2024-05-13 20:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-13 20:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-13 20:33 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-13 20:33 - INFO - ---------------------------------------------
2024-05-13 20:40 - INFO - ---------------------------------------------
2024-05-13 20:40 - INFO - Epoch: 07 | Time: 6m 42s
2024-05-13 20:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73847
2024-05-13 20:40 - INFO - 	 Train Loss: 0.477
2024-05-13 20:40 - INFO - 	 Val. Loss: 0.492
2024-05-13 20:40 - INFO - 	 ROC-AUC: 0.738
2024-05-13 20:40 - INFO - 	 PR-AUC: 0.451
2024-05-13 20:40 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-13 20:40 - INFO - 	 Best Val. Loss: 0.492
2024-05-13 20:40 - INFO - 	 Best ROC-AUC: 0.738
2024-05-13 20:40 - INFO - 	 Best PR-AUC: 0.451
2024-05-13 20:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-13 20:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-13 20:40 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-13 20:40 - INFO - ---------------------------------------------
2024-05-13 20:46 - INFO - ---------------------------------------------
2024-05-13 20:46 - INFO - Epoch: 08 | Time: 6m 46s
2024-05-13 20:46 - INFO - 	 Train Loss: 0.476
2024-05-13 20:46 - INFO - 	 Val. Loss: 0.496
2024-05-13 20:46 - INFO - 	 ROC-AUC: 0.736
2024-05-13 20:46 - INFO - 	 PR-AUC: 0.447
2024-05-13 20:46 - INFO - 	 Recall for 0.4 precision: 0.690
2024-05-13 20:46 - INFO - 	 Best Val. Loss: 0.492
2024-05-13 20:46 - INFO - 	 Best ROC-AUC: 0.738
2024-05-13 20:46 - INFO - 	 Best PR-AUC: 0.451
2024-05-13 20:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-13 20:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-13 20:46 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-13 20:46 - INFO - ---------------------------------------------
2024-05-13 20:53 - INFO - ---------------------------------------------
2024-05-13 20:53 - INFO - Epoch: 09 | Time: 6m 42s
2024-05-13 20:53 - INFO - 	 Train Loss: 0.474
2024-05-13 20:53 - INFO - 	 Val. Loss: 0.494
2024-05-13 20:53 - INFO - 	 ROC-AUC: 0.734
2024-05-13 20:53 - INFO - 	 PR-AUC: 0.445
2024-05-13 20:53 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-13 20:53 - INFO - 	 Best Val. Loss: 0.492
2024-05-13 20:53 - INFO - 	 Best ROC-AUC: 0.738
2024-05-13 20:53 - INFO - 	 Best PR-AUC: 0.451
2024-05-13 20:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-13 20:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-13 20:53 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-13 20:53 - INFO - ---------------------------------------------
2024-05-13 21:00 - INFO - ---------------------------------------------
2024-05-13 21:00 - INFO - Epoch: 10 | Time: 6m 43s
2024-05-13 21:00 - INFO - 	 Train Loss: 0.474
2024-05-13 21:00 - INFO - 	 Val. Loss: 0.492
2024-05-13 21:00 - INFO - 	 ROC-AUC: 0.738
2024-05-13 21:00 - INFO - 	 PR-AUC: 0.454
2024-05-13 21:00 - INFO - 	 Recall for 0.4 precision: 0.685
2024-05-13 21:00 - INFO - 	 Best Val. Loss: 0.492
2024-05-13 21:00 - INFO - 	 Best ROC-AUC: 0.738
2024-05-13 21:00 - INFO - 	 Best PR-AUC: 0.454
2024-05-13 21:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-13 21:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-13 21:00 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-13 21:00 - INFO - ---------------------------------------------
2024-05-13 21:04 - INFO - Fit the preprocessing pipeline
2024-05-13 21:04 - INFO - Training using device: cuda
2024-05-13 21:04 - INFO - Creating generators
2024-05-13 21:04 - INFO - The model has 651,257 trainable parameters
2024-05-13 21:04 - INFO - * Model:
2024-05-13 21:04 - INFO - * -----------
2024-05-13 21:04 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-13 21:04 - INFO - * -----------
2024-05-13 21:04 - INFO - Evaluating model based on: rocauc
2024-05-13 21:04 - INFO - Training..

2024-05-13 21:11 - INFO - ---------------------------------------------
2024-05-13 21:11 - INFO - Epoch: 01 | Time: 6m 44s
2024-05-13 21:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71307
2024-05-13 21:11 - INFO - 	 Train Loss: 0.540
2024-05-13 21:11 - INFO - 	 Val. Loss: 0.508
2024-05-13 21:11 - INFO - 	 ROC-AUC: 0.713
2024-05-13 21:11 - INFO - 	 PR-AUC: 0.431
2024-05-13 21:11 - INFO - 	 Recall for 0.4 precision: 0.596
2024-05-13 21:11 - INFO - 	 Best Val. Loss: 0.508
2024-05-13 21:11 - INFO - 	 Best ROC-AUC: 0.713
2024-05-13 21:11 - INFO - 	 Best PR-AUC: 0.431
2024-05-13 21:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.690
2024-05-13 21:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.402
2024-05-13 21:11 - INFO - 	 Best Recall for 0.4 precision: 0.596
2024-05-13 21:11 - INFO - ---------------------------------------------
2024-05-13 21:18 - INFO - ---------------------------------------------
2024-05-13 21:18 - INFO - Epoch: 02 | Time: 6m 44s
2024-05-13 21:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72633
2024-05-13 21:18 - INFO - 	 Train Loss: 0.500
2024-05-13 21:18 - INFO - 	 Val. Loss: 0.496
2024-05-13 21:18 - INFO - 	 ROC-AUC: 0.726
2024-05-13 21:18 - INFO - 	 PR-AUC: 0.441
2024-05-13 21:18 - INFO - 	 Recall for 0.4 precision: 0.647
2024-05-13 21:18 - INFO - 	 Best Val. Loss: 0.496
2024-05-13 21:18 - INFO - 	 Best ROC-AUC: 0.726
2024-05-13 21:18 - INFO - 	 Best PR-AUC: 0.441
2024-05-13 21:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-13 21:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-13 21:18 - INFO - 	 Best Recall for 0.4 precision: 0.647
2024-05-13 21:18 - INFO - ---------------------------------------------
2024-05-13 21:24 - INFO - ---------------------------------------------
2024-05-13 21:24 - INFO - Epoch: 03 | Time: 6m 44s
2024-05-13 21:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72783
2024-05-13 21:24 - INFO - 	 Train Loss: 0.491
2024-05-13 21:24 - INFO - 	 Val. Loss: 0.499
2024-05-13 21:24 - INFO - 	 ROC-AUC: 0.728
2024-05-13 21:24 - INFO - 	 PR-AUC: 0.440
2024-05-13 21:24 - INFO - 	 Recall for 0.4 precision: 0.656
2024-05-13 21:24 - INFO - 	 Best Val. Loss: 0.496
2024-05-13 21:24 - INFO - 	 Best ROC-AUC: 0.728
2024-05-13 21:24 - INFO - 	 Best PR-AUC: 0.441
2024-05-13 21:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-13 21:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-13 21:24 - INFO - 	 Best Recall for 0.4 precision: 0.656
2024-05-13 21:24 - INFO - ---------------------------------------------
2024-05-13 21:31 - INFO - ---------------------------------------------
2024-05-13 21:31 - INFO - Epoch: 04 | Time: 6m 47s
2024-05-13 21:31 - INFO - 	 Train Loss: 0.486
2024-05-13 21:31 - INFO - 	 Val. Loss: 0.502
2024-05-13 21:31 - INFO - 	 ROC-AUC: 0.725
2024-05-13 21:31 - INFO - 	 PR-AUC: 0.435
2024-05-13 21:31 - INFO - 	 Recall for 0.4 precision: 0.635
2024-05-13 21:31 - INFO - 	 Best Val. Loss: 0.496
2024-05-13 21:31 - INFO - 	 Best ROC-AUC: 0.728
2024-05-13 21:31 - INFO - 	 Best PR-AUC: 0.441
2024-05-13 21:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-13 21:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-13 21:31 - INFO - 	 Best Recall for 0.4 precision: 0.656
2024-05-13 21:31 - INFO - ---------------------------------------------
2024-05-13 21:38 - INFO - ---------------------------------------------
2024-05-13 21:38 - INFO - Epoch: 05 | Time: 6m 41s
2024-05-13 21:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73124
2024-05-13 21:38 - INFO - 	 Train Loss: 0.483
2024-05-13 21:38 - INFO - 	 Val. Loss: 0.494
2024-05-13 21:38 - INFO - 	 ROC-AUC: 0.731
2024-05-13 21:38 - INFO - 	 PR-AUC: 0.442
2024-05-13 21:38 - INFO - 	 Recall for 0.4 precision: 0.663
2024-05-13 21:38 - INFO - 	 Best Val. Loss: 0.494
2024-05-13 21:38 - INFO - 	 Best ROC-AUC: 0.731
2024-05-13 21:38 - INFO - 	 Best PR-AUC: 0.442
2024-05-13 21:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-13 21:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-13 21:38 - INFO - 	 Best Recall for 0.4 precision: 0.663
2024-05-13 21:38 - INFO - ---------------------------------------------
2024-05-13 21:45 - INFO - ---------------------------------------------
2024-05-13 21:45 - INFO - Epoch: 06 | Time: 7m 0s
2024-05-13 21:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73302
2024-05-13 21:45 - INFO - 	 Train Loss: 0.481
2024-05-13 21:45 - INFO - 	 Val. Loss: 0.494
2024-05-13 21:45 - INFO - 	 ROC-AUC: 0.733
2024-05-13 21:45 - INFO - 	 PR-AUC: 0.441
2024-05-13 21:45 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-13 21:45 - INFO - 	 Best Val. Loss: 0.494
2024-05-13 21:45 - INFO - 	 Best ROC-AUC: 0.733
2024-05-13 21:45 - INFO - 	 Best PR-AUC: 0.442
2024-05-13 21:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-13 21:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-13 21:45 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-13 21:45 - INFO - ---------------------------------------------
2024-05-13 21:52 - INFO - ---------------------------------------------
2024-05-13 21:52 - INFO - Epoch: 07 | Time: 6m 41s
2024-05-13 21:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73434
2024-05-13 21:52 - INFO - 	 Train Loss: 0.479
2024-05-13 21:52 - INFO - 	 Val. Loss: 0.493
2024-05-13 21:52 - INFO - 	 ROC-AUC: 0.734
2024-05-13 21:52 - INFO - 	 PR-AUC: 0.444
2024-05-13 21:52 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-13 21:52 - INFO - 	 Best Val. Loss: 0.493
2024-05-13 21:52 - INFO - 	 Best ROC-AUC: 0.734
2024-05-13 21:52 - INFO - 	 Best PR-AUC: 0.444
2024-05-13 21:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-13 21:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-13 21:52 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-13 21:52 - INFO - ---------------------------------------------
2024-05-13 21:58 - INFO - ---------------------------------------------
2024-05-13 21:58 - INFO - Epoch: 08 | Time: 6m 55s
2024-05-13 21:58 - INFO - 	 Train Loss: 0.477
2024-05-13 21:58 - INFO - 	 Val. Loss: 0.496
2024-05-13 21:58 - INFO - 	 ROC-AUC: 0.731
2024-05-13 21:58 - INFO - 	 PR-AUC: 0.441
2024-05-13 21:58 - INFO - 	 Recall for 0.4 precision: 0.659
2024-05-13 21:58 - INFO - 	 Best Val. Loss: 0.493
2024-05-13 21:58 - INFO - 	 Best ROC-AUC: 0.734
2024-05-13 21:58 - INFO - 	 Best PR-AUC: 0.444
2024-05-13 21:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-13 21:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-13 21:58 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-13 21:58 - INFO - ---------------------------------------------
2024-05-13 22:05 - INFO - ---------------------------------------------
2024-05-13 22:05 - INFO - Epoch: 09 | Time: 6m 56s
2024-05-13 22:05 - INFO - 	 Train Loss: 0.476
2024-05-13 22:05 - INFO - 	 Val. Loss: 0.495
2024-05-13 22:05 - INFO - 	 ROC-AUC: 0.734
2024-05-13 22:05 - INFO - 	 PR-AUC: 0.446
2024-05-13 22:05 - INFO - 	 Recall for 0.4 precision: 0.676
2024-05-13 22:05 - INFO - 	 Best Val. Loss: 0.493
2024-05-13 22:05 - INFO - 	 Best ROC-AUC: 0.734
2024-05-13 22:05 - INFO - 	 Best PR-AUC: 0.446
2024-05-13 22:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-13 22:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-13 22:05 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-13 22:05 - INFO - ---------------------------------------------
2024-05-13 22:12 - INFO - ---------------------------------------------
2024-05-13 22:12 - INFO - Epoch: 10 | Time: 7m 0s
2024-05-13 22:12 - INFO - 	 Train Loss: 0.475
2024-05-13 22:12 - INFO - 	 Val. Loss: 0.497
2024-05-13 22:12 - INFO - 	 ROC-AUC: 0.733
2024-05-13 22:12 - INFO - 	 PR-AUC: 0.443
2024-05-13 22:12 - INFO - 	 Recall for 0.4 precision: 0.668
2024-05-13 22:12 - INFO - 	 Best Val. Loss: 0.493
2024-05-13 22:12 - INFO - 	 Best ROC-AUC: 0.734
2024-05-13 22:12 - INFO - 	 Best PR-AUC: 0.446
2024-05-13 22:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-13 22:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-13 22:12 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-13 22:12 - INFO - ---------------------------------------------
2024-05-13 22:17 - INFO - Fit the preprocessing pipeline
2024-05-13 22:17 - INFO - Training using device: cuda
2024-05-13 22:17 - INFO - Creating generators
2024-05-13 22:17 - INFO - The model has 651,257 trainable parameters
2024-05-13 22:17 - INFO - * Model:
2024-05-13 22:17 - INFO - * -----------
2024-05-13 22:17 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-13 22:17 - INFO - * -----------
2024-05-13 22:17 - INFO - Evaluating model based on: rocauc
2024-05-13 22:17 - INFO - Training..

2024-05-13 22:25 - INFO - ---------------------------------------------
2024-05-13 22:25 - INFO - Epoch: 01 | Time: 7m 52s
2024-05-13 22:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70922
2024-05-13 22:25 - INFO - 	 Train Loss: 0.541
2024-05-13 22:25 - INFO - 	 Val. Loss: 0.511
2024-05-13 22:25 - INFO - 	 ROC-AUC: 0.709
2024-05-13 22:25 - INFO - 	 PR-AUC: 0.424
2024-05-13 22:25 - INFO - 	 Recall for 0.4 precision: 0.566
2024-05-13 22:25 - INFO - 	 Best Val. Loss: 0.511
2024-05-13 22:25 - INFO - 	 Best ROC-AUC: 0.709
2024-05-13 22:25 - INFO - 	 Best PR-AUC: 0.424
2024-05-13 22:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.688
2024-05-13 22:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-05-13 22:25 - INFO - 	 Best Recall for 0.4 precision: 0.566
2024-05-13 22:25 - INFO - ---------------------------------------------
2024-05-13 22:32 - INFO - ---------------------------------------------
2024-05-13 22:32 - INFO - Epoch: 02 | Time: 6m 53s
2024-05-13 22:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72587
2024-05-13 22:32 - INFO - 	 Train Loss: 0.500
2024-05-13 22:32 - INFO - 	 Val. Loss: 0.500
2024-05-13 22:32 - INFO - 	 ROC-AUC: 0.726
2024-05-13 22:32 - INFO - 	 PR-AUC: 0.439
2024-05-13 22:32 - INFO - 	 Recall for 0.4 precision: 0.640
2024-05-13 22:32 - INFO - 	 Best Val. Loss: 0.500
2024-05-13 22:32 - INFO - 	 Best ROC-AUC: 0.726
2024-05-13 22:32 - INFO - 	 Best PR-AUC: 0.439
2024-05-13 22:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-13 22:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-13 22:32 - INFO - 	 Best Recall for 0.4 precision: 0.640
2024-05-13 22:32 - INFO - ---------------------------------------------
2024-05-13 22:39 - INFO - ---------------------------------------------
2024-05-13 22:39 - INFO - Epoch: 03 | Time: 7m 0s
2024-05-13 22:39 - INFO - 	 Train Loss: 0.490
2024-05-13 22:39 - INFO - 	 Val. Loss: 0.496
2024-05-13 22:39 - INFO - 	 ROC-AUC: 0.726
2024-05-13 22:39 - INFO - 	 PR-AUC: 0.436
2024-05-13 22:39 - INFO - 	 Recall for 0.4 precision: 0.646
2024-05-13 22:39 - INFO - 	 Best Val. Loss: 0.496
2024-05-13 22:39 - INFO - 	 Best ROC-AUC: 0.726
2024-05-13 22:39 - INFO - 	 Best PR-AUC: 0.439
2024-05-13 22:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-13 22:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-13 22:39 - INFO - 	 Best Recall for 0.4 precision: 0.646
2024-05-13 22:39 - INFO - ---------------------------------------------
2024-05-13 22:46 - INFO - ---------------------------------------------
2024-05-13 22:46 - INFO - Epoch: 04 | Time: 7m 20s
2024-05-13 22:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72978
2024-05-13 22:46 - INFO - 	 Train Loss: 0.486
2024-05-13 22:46 - INFO - 	 Val. Loss: 0.495
2024-05-13 22:46 - INFO - 	 ROC-AUC: 0.730
2024-05-13 22:46 - INFO - 	 PR-AUC: 0.439
2024-05-13 22:46 - INFO - 	 Recall for 0.4 precision: 0.654
2024-05-13 22:46 - INFO - 	 Best Val. Loss: 0.495
2024-05-13 22:46 - INFO - 	 Best ROC-AUC: 0.730
2024-05-13 22:46 - INFO - 	 Best PR-AUC: 0.439
2024-05-13 22:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-13 22:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-13 22:46 - INFO - 	 Best Recall for 0.4 precision: 0.654
2024-05-13 22:46 - INFO - ---------------------------------------------
2024-05-13 22:53 - INFO - ---------------------------------------------
2024-05-13 22:53 - INFO - Epoch: 05 | Time: 6m 57s
2024-05-13 22:53 - INFO - 	 Train Loss: 0.483
2024-05-13 22:53 - INFO - 	 Val. Loss: 0.496
2024-05-13 22:53 - INFO - 	 ROC-AUC: 0.728
2024-05-13 22:53 - INFO - 	 PR-AUC: 0.436
2024-05-13 22:53 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-13 22:53 - INFO - 	 Best Val. Loss: 0.495
2024-05-13 22:53 - INFO - 	 Best ROC-AUC: 0.730
2024-05-13 22:53 - INFO - 	 Best PR-AUC: 0.439
2024-05-13 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-13 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-13 22:53 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-13 22:53 - INFO - ---------------------------------------------
2024-05-13 23:00 - INFO - ---------------------------------------------
2024-05-13 23:00 - INFO - Epoch: 06 | Time: 7m 11s
2024-05-13 23:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73107
2024-05-13 23:00 - INFO - 	 Train Loss: 0.480
2024-05-13 23:00 - INFO - 	 Val. Loss: 0.495
2024-05-13 23:00 - INFO - 	 ROC-AUC: 0.731
2024-05-13 23:00 - INFO - 	 PR-AUC: 0.444
2024-05-13 23:00 - INFO - 	 Recall for 0.4 precision: 0.666
2024-05-13 23:00 - INFO - 	 Best Val. Loss: 0.495
2024-05-13 23:00 - INFO - 	 Best ROC-AUC: 0.731
2024-05-13 23:00 - INFO - 	 Best PR-AUC: 0.444
2024-05-13 23:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-13 23:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-13 23:00 - INFO - 	 Best Recall for 0.4 precision: 0.666
2024-05-13 23:00 - INFO - ---------------------------------------------
2024-05-13 23:07 - INFO - ---------------------------------------------
2024-05-13 23:07 - INFO - Epoch: 07 | Time: 6m 59s
2024-05-13 23:07 - INFO - 	 Train Loss: 0.478
2024-05-13 23:07 - INFO - 	 Val. Loss: 0.497
2024-05-13 23:07 - INFO - 	 ROC-AUC: 0.730
2024-05-13 23:07 - INFO - 	 PR-AUC: 0.438
2024-05-13 23:07 - INFO - 	 Recall for 0.4 precision: 0.656
2024-05-13 23:07 - INFO - 	 Best Val. Loss: 0.495
2024-05-13 23:07 - INFO - 	 Best ROC-AUC: 0.731
2024-05-13 23:07 - INFO - 	 Best PR-AUC: 0.444
2024-05-13 23:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-13 23:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-13 23:07 - INFO - 	 Best Recall for 0.4 precision: 0.666
2024-05-13 23:07 - INFO - ---------------------------------------------
2024-05-13 23:15 - INFO - ---------------------------------------------
2024-05-13 23:15 - INFO - Epoch: 08 | Time: 7m 12s
2024-05-13 23:15 - INFO - 	 Train Loss: 0.477
2024-05-13 23:15 - INFO - 	 Val. Loss: 0.498
2024-05-13 23:15 - INFO - 	 ROC-AUC: 0.727
2024-05-13 23:15 - INFO - 	 PR-AUC: 0.432
2024-05-13 23:15 - INFO - 	 Recall for 0.4 precision: 0.659
2024-05-13 23:15 - INFO - 	 Best Val. Loss: 0.495
2024-05-13 23:15 - INFO - 	 Best ROC-AUC: 0.731
2024-05-13 23:15 - INFO - 	 Best PR-AUC: 0.444
2024-05-13 23:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-13 23:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-13 23:15 - INFO - 	 Best Recall for 0.4 precision: 0.666
2024-05-13 23:15 - INFO - ---------------------------------------------
2024-05-13 23:21 - INFO - ---------------------------------------------
2024-05-13 23:21 - INFO - Epoch: 09 | Time: 6m 45s
2024-05-13 23:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73264
2024-05-13 23:21 - INFO - 	 Train Loss: 0.476
2024-05-13 23:21 - INFO - 	 Val. Loss: 0.493
2024-05-13 23:21 - INFO - 	 ROC-AUC: 0.733
2024-05-13 23:21 - INFO - 	 PR-AUC: 0.443
2024-05-13 23:21 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-13 23:21 - INFO - 	 Best Val. Loss: 0.493
2024-05-13 23:21 - INFO - 	 Best ROC-AUC: 0.733
2024-05-13 23:21 - INFO - 	 Best PR-AUC: 0.444
2024-05-13 23:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-13 23:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-13 23:21 - INFO - 	 Best Recall for 0.4 precision: 0.666
2024-05-13 23:21 - INFO - ---------------------------------------------
2024-05-13 23:28 - INFO - ---------------------------------------------
2024-05-13 23:28 - INFO - Epoch: 10 | Time: 6m 44s
2024-05-13 23:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73576
2024-05-13 23:28 - INFO - 	 Train Loss: 0.475
2024-05-13 23:28 - INFO - 	 Val. Loss: 0.492
2024-05-13 23:28 - INFO - 	 ROC-AUC: 0.736
2024-05-13 23:28 - INFO - 	 PR-AUC: 0.447
2024-05-13 23:28 - INFO - 	 Recall for 0.4 precision: 0.002
2024-05-13 23:28 - INFO - 	 Best Val. Loss: 0.492
2024-05-13 23:28 - INFO - 	 Best ROC-AUC: 0.736
2024-05-13 23:28 - INFO - 	 Best PR-AUC: 0.447
2024-05-13 23:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-13 23:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-13 23:28 - INFO - 	 Best Recall for 0.4 precision: 0.666
2024-05-13 23:28 - INFO - ---------------------------------------------
2024-05-13 23:32 - INFO - Fit the preprocessing pipeline
2024-05-13 23:32 - INFO - Training using device: cuda
2024-05-13 23:32 - INFO - Creating generators
2024-05-13 23:32 - INFO - The model has 651,257 trainable parameters
2024-05-13 23:32 - INFO - * Model:
2024-05-13 23:32 - INFO - * -----------
2024-05-13 23:32 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-13 23:32 - INFO - * -----------
2024-05-13 23:32 - INFO - Evaluating model based on: rocauc
2024-05-13 23:32 - INFO - Training..

2024-05-13 23:39 - INFO - ---------------------------------------------
2024-05-13 23:39 - INFO - Epoch: 01 | Time: 6m 54s
2024-05-13 23:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70246
2024-05-13 23:39 - INFO - 	 Train Loss: 0.542
2024-05-13 23:39 - INFO - 	 Val. Loss: 0.511
2024-05-13 23:39 - INFO - 	 ROC-AUC: 0.702
2024-05-13 23:39 - INFO - 	 PR-AUC: 0.411
2024-05-13 23:39 - INFO - 	 Recall for 0.4 precision: 0.530
2024-05-13 23:39 - INFO - 	 Best Val. Loss: 0.511
2024-05-13 23:39 - INFO - 	 Best ROC-AUC: 0.702
2024-05-13 23:39 - INFO - 	 Best PR-AUC: 0.411
2024-05-13 23:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.674
2024-05-13 23:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-05-13 23:39 - INFO - 	 Best Recall for 0.4 precision: 0.530
2024-05-13 23:39 - INFO - ---------------------------------------------
2024-05-13 23:46 - INFO - ---------------------------------------------
2024-05-13 23:46 - INFO - Epoch: 02 | Time: 6m 45s
2024-05-13 23:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72683
2024-05-13 23:46 - INFO - 	 Train Loss: 0.500
2024-05-13 23:46 - INFO - 	 Val. Loss: 0.496
2024-05-13 23:46 - INFO - 	 ROC-AUC: 0.727
2024-05-13 23:46 - INFO - 	 PR-AUC: 0.439
2024-05-13 23:46 - INFO - 	 Recall for 0.4 precision: 0.641
2024-05-13 23:46 - INFO - 	 Best Val. Loss: 0.496
2024-05-13 23:46 - INFO - 	 Best ROC-AUC: 0.727
2024-05-13 23:46 - INFO - 	 Best PR-AUC: 0.439
2024-05-13 23:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.706
2024-05-13 23:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-05-13 23:46 - INFO - 	 Best Recall for 0.4 precision: 0.641
2024-05-13 23:46 - INFO - ---------------------------------------------
2024-05-13 23:53 - INFO - ---------------------------------------------
2024-05-13 23:53 - INFO - Epoch: 03 | Time: 6m 41s
2024-05-13 23:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73265
2024-05-13 23:53 - INFO - 	 Train Loss: 0.490
2024-05-13 23:53 - INFO - 	 Val. Loss: 0.492
2024-05-13 23:53 - INFO - 	 ROC-AUC: 0.733
2024-05-13 23:53 - INFO - 	 PR-AUC: 0.444
2024-05-13 23:53 - INFO - 	 Recall for 0.4 precision: 0.664
2024-05-13 23:53 - INFO - 	 Best Val. Loss: 0.492
2024-05-13 23:53 - INFO - 	 Best ROC-AUC: 0.733
2024-05-13 23:53 - INFO - 	 Best PR-AUC: 0.444
2024-05-13 23:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-13 23:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-13 23:53 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-13 23:53 - INFO - ---------------------------------------------
2024-05-14 00:00 - INFO - ---------------------------------------------
2024-05-14 00:00 - INFO - Epoch: 04 | Time: 6m 46s
2024-05-14 00:00 - INFO - 	 Train Loss: 0.485
2024-05-14 00:00 - INFO - 	 Val. Loss: 0.494
2024-05-14 00:00 - INFO - 	 ROC-AUC: 0.731
2024-05-14 00:00 - INFO - 	 PR-AUC: 0.442
2024-05-14 00:00 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-14 00:00 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 00:00 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 00:00 - INFO - 	 Best PR-AUC: 0.444
2024-05-14 00:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-14 00:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 00:00 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-14 00:00 - INFO - ---------------------------------------------
2024-05-14 00:06 - INFO - ---------------------------------------------
2024-05-14 00:06 - INFO - Epoch: 05 | Time: 6m 41s
2024-05-14 00:06 - INFO - 	 Train Loss: 0.482
2024-05-14 00:06 - INFO - 	 Val. Loss: 0.493
2024-05-14 00:06 - INFO - 	 ROC-AUC: 0.732
2024-05-14 00:06 - INFO - 	 PR-AUC: 0.442
2024-05-14 00:06 - INFO - 	 Recall for 0.4 precision: 0.662
2024-05-14 00:06 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 00:06 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 00:06 - INFO - 	 Best PR-AUC: 0.444
2024-05-14 00:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-14 00:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 00:06 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-14 00:06 - INFO - ---------------------------------------------
2024-05-14 00:13 - INFO - ---------------------------------------------
2024-05-14 00:13 - INFO - Epoch: 06 | Time: 6m 59s
2024-05-14 00:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73438
2024-05-14 00:13 - INFO - 	 Train Loss: 0.480
2024-05-14 00:13 - INFO - 	 Val. Loss: 0.493
2024-05-14 00:13 - INFO - 	 ROC-AUC: 0.734
2024-05-14 00:13 - INFO - 	 PR-AUC: 0.445
2024-05-14 00:13 - INFO - 	 Recall for 0.4 precision: 0.679
2024-05-14 00:13 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 00:13 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 00:13 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-14 00:13 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-14 00:13 - INFO - ---------------------------------------------
2024-05-14 00:20 - INFO - ---------------------------------------------
2024-05-14 00:20 - INFO - Epoch: 07 | Time: 7m 10s
2024-05-14 00:20 - INFO - 	 Train Loss: 0.479
2024-05-14 00:20 - INFO - 	 Val. Loss: 0.495
2024-05-14 00:20 - INFO - 	 ROC-AUC: 0.734
2024-05-14 00:20 - INFO - 	 PR-AUC: 0.443
2024-05-14 00:20 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-14 00:20 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 00:20 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 00:20 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 00:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 00:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-14 00:20 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-14 00:20 - INFO - ---------------------------------------------
2024-05-14 00:27 - INFO - ---------------------------------------------
2024-05-14 00:27 - INFO - Epoch: 08 | Time: 6m 40s
2024-05-14 00:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73605
2024-05-14 00:27 - INFO - 	 Train Loss: 0.477
2024-05-14 00:27 - INFO - 	 Val. Loss: 0.493
2024-05-14 00:27 - INFO - 	 ROC-AUC: 0.736
2024-05-14 00:27 - INFO - 	 PR-AUC: 0.448
2024-05-14 00:27 - INFO - 	 Recall for 0.4 precision: 0.681
2024-05-14 00:27 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 00:27 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 00:27 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 00:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 00:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 00:27 - INFO - 	 Best Recall for 0.4 precision: 0.681
2024-05-14 00:27 - INFO - ---------------------------------------------
2024-05-14 00:34 - INFO - ---------------------------------------------
2024-05-14 00:34 - INFO - Epoch: 09 | Time: 7m 3s
2024-05-14 00:34 - INFO - 	 Train Loss: 0.476
2024-05-14 00:34 - INFO - 	 Val. Loss: 0.495
2024-05-14 00:34 - INFO - 	 ROC-AUC: 0.736
2024-05-14 00:34 - INFO - 	 PR-AUC: 0.449
2024-05-14 00:34 - INFO - 	 Recall for 0.4 precision: 0.685
2024-05-14 00:34 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 00:34 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 00:34 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 00:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 00:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 00:34 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-14 00:34 - INFO - ---------------------------------------------
2024-05-14 00:41 - INFO - ---------------------------------------------
2024-05-14 00:41 - INFO - Epoch: 10 | Time: 6m 59s
2024-05-14 00:41 - INFO - 	 Train Loss: 0.475
2024-05-14 00:41 - INFO - 	 Val. Loss: 0.494
2024-05-14 00:41 - INFO - 	 ROC-AUC: 0.733
2024-05-14 00:41 - INFO - 	 PR-AUC: 0.444
2024-05-14 00:41 - INFO - 	 Recall for 0.4 precision: 0.002
2024-05-14 00:41 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 00:41 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 00:41 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 00:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 00:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 00:41 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-14 00:41 - INFO - ---------------------------------------------
2024-05-14 00:45 - INFO - Fit the preprocessing pipeline
2024-05-14 00:45 - INFO - Training using device: cuda
2024-05-14 00:45 - INFO - Creating generators
2024-05-14 00:45 - INFO - The model has 651,257 trainable parameters
2024-05-14 00:45 - INFO - * Model:
2024-05-14 00:45 - INFO - * -----------
2024-05-14 00:45 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 00:45 - INFO - * -----------
2024-05-14 00:45 - INFO - Evaluating model based on: rocauc
2024-05-14 00:45 - INFO - Training..

2024-05-14 00:53 - INFO - ---------------------------------------------
2024-05-14 00:53 - INFO - Epoch: 01 | Time: 7m 11s
2024-05-14 00:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.704
2024-05-14 00:53 - INFO - 	 Train Loss: 0.541
2024-05-14 00:53 - INFO - 	 Val. Loss: 0.521
2024-05-14 00:53 - INFO - 	 ROC-AUC: 0.704
2024-05-14 00:53 - INFO - 	 PR-AUC: 0.414
2024-05-14 00:53 - INFO - 	 Recall for 0.4 precision: 0.538
2024-05-14 00:53 - INFO - 	 Best Val. Loss: 0.521
2024-05-14 00:53 - INFO - 	 Best ROC-AUC: 0.704
2024-05-14 00:53 - INFO - 	 Best PR-AUC: 0.414
2024-05-14 00:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.679
2024-05-14 00:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.393
2024-05-14 00:53 - INFO - 	 Best Recall for 0.4 precision: 0.538
2024-05-14 00:53 - INFO - ---------------------------------------------
2024-05-14 01:00 - INFO - ---------------------------------------------
2024-05-14 01:00 - INFO - Epoch: 02 | Time: 7m 39s
2024-05-14 01:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72074
2024-05-14 01:00 - INFO - 	 Train Loss: 0.499
2024-05-14 01:00 - INFO - 	 Val. Loss: 0.499
2024-05-14 01:00 - INFO - 	 ROC-AUC: 0.721
2024-05-14 01:00 - INFO - 	 PR-AUC: 0.434
2024-05-14 01:00 - INFO - 	 Recall for 0.4 precision: 0.611
2024-05-14 01:00 - INFO - 	 Best Val. Loss: 0.499
2024-05-14 01:00 - INFO - 	 Best ROC-AUC: 0.721
2024-05-14 01:00 - INFO - 	 Best PR-AUC: 0.434
2024-05-14 01:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.703
2024-05-14 01:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.422
2024-05-14 01:00 - INFO - 	 Best Recall for 0.4 precision: 0.611
2024-05-14 01:00 - INFO - ---------------------------------------------
2024-05-14 01:07 - INFO - ---------------------------------------------
2024-05-14 01:07 - INFO - Epoch: 03 | Time: 6m 59s
2024-05-14 01:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72947
2024-05-14 01:07 - INFO - 	 Train Loss: 0.490
2024-05-14 01:07 - INFO - 	 Val. Loss: 0.495
2024-05-14 01:07 - INFO - 	 ROC-AUC: 0.729
2024-05-14 01:07 - INFO - 	 PR-AUC: 0.441
2024-05-14 01:07 - INFO - 	 Recall for 0.4 precision: 0.651
2024-05-14 01:07 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 01:07 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 01:07 - INFO - 	 Best PR-AUC: 0.441
2024-05-14 01:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-05-14 01:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 01:07 - INFO - 	 Best Recall for 0.4 precision: 0.651
2024-05-14 01:07 - INFO - ---------------------------------------------
2024-05-14 01:14 - INFO - ---------------------------------------------
2024-05-14 01:14 - INFO - Epoch: 04 | Time: 7m 11s
2024-05-14 01:14 - INFO - 	 Train Loss: 0.485
2024-05-14 01:14 - INFO - 	 Val. Loss: 0.498
2024-05-14 01:14 - INFO - 	 ROC-AUC: 0.728
2024-05-14 01:14 - INFO - 	 PR-AUC: 0.438
2024-05-14 01:14 - INFO - 	 Recall for 0.4 precision: 0.657
2024-05-14 01:14 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 01:14 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 01:14 - INFO - 	 Best PR-AUC: 0.441
2024-05-14 01:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-05-14 01:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 01:14 - INFO - 	 Best Recall for 0.4 precision: 0.657
2024-05-14 01:14 - INFO - ---------------------------------------------
2024-05-14 01:22 - INFO - ---------------------------------------------
2024-05-14 01:22 - INFO - Epoch: 05 | Time: 7m 11s
2024-05-14 01:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73109
2024-05-14 01:22 - INFO - 	 Train Loss: 0.482
2024-05-14 01:22 - INFO - 	 Val. Loss: 0.495
2024-05-14 01:22 - INFO - 	 ROC-AUC: 0.731
2024-05-14 01:22 - INFO - 	 PR-AUC: 0.441
2024-05-14 01:22 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-14 01:22 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 01:22 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 01:22 - INFO - 	 Best PR-AUC: 0.441
2024-05-14 01:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 01:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 01:22 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-14 01:22 - INFO - ---------------------------------------------
2024-05-14 01:29 - INFO - ---------------------------------------------
2024-05-14 01:29 - INFO - Epoch: 06 | Time: 6m 57s
2024-05-14 01:29 - INFO - 	 Train Loss: 0.480
2024-05-14 01:29 - INFO - 	 Val. Loss: 0.495
2024-05-14 01:29 - INFO - 	 ROC-AUC: 0.731
2024-05-14 01:29 - INFO - 	 PR-AUC: 0.439
2024-05-14 01:29 - INFO - 	 Recall for 0.4 precision: 0.675
2024-05-14 01:29 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 01:29 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 01:29 - INFO - 	 Best PR-AUC: 0.441
2024-05-14 01:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 01:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 01:29 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-14 01:29 - INFO - ---------------------------------------------
2024-05-14 01:35 - INFO - ---------------------------------------------
2024-05-14 01:35 - INFO - Epoch: 07 | Time: 6m 43s
2024-05-14 01:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7336
2024-05-14 01:35 - INFO - 	 Train Loss: 0.478
2024-05-14 01:35 - INFO - 	 Val. Loss: 0.494
2024-05-14 01:35 - INFO - 	 ROC-AUC: 0.734
2024-05-14 01:35 - INFO - 	 PR-AUC: 0.440
2024-05-14 01:35 - INFO - 	 Recall for 0.4 precision: 0.008
2024-05-14 01:35 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 01:35 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 01:35 - INFO - 	 Best PR-AUC: 0.441
2024-05-14 01:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 01:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 01:35 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-14 01:35 - INFO - ---------------------------------------------
2024-05-14 01:43 - INFO - ---------------------------------------------
2024-05-14 01:43 - INFO - Epoch: 08 | Time: 7m 12s
2024-05-14 01:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73496
2024-05-14 01:43 - INFO - 	 Train Loss: 0.477
2024-05-14 01:43 - INFO - 	 Val. Loss: 0.493
2024-05-14 01:43 - INFO - 	 ROC-AUC: 0.735
2024-05-14 01:43 - INFO - 	 PR-AUC: 0.444
2024-05-14 01:43 - INFO - 	 Recall for 0.4 precision: 0.680
2024-05-14 01:43 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 01:43 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 01:43 - INFO - 	 Best PR-AUC: 0.444
2024-05-14 01:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-14 01:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-14 01:43 - INFO - 	 Best Recall for 0.4 precision: 0.680
2024-05-14 01:43 - INFO - ---------------------------------------------
2024-05-14 01:49 - INFO - ---------------------------------------------
2024-05-14 01:49 - INFO - Epoch: 09 | Time: 6m 43s
2024-05-14 01:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73555
2024-05-14 01:49 - INFO - 	 Train Loss: 0.475
2024-05-14 01:49 - INFO - 	 Val. Loss: 0.492
2024-05-14 01:49 - INFO - 	 ROC-AUC: 0.736
2024-05-14 01:49 - INFO - 	 PR-AUC: 0.448
2024-05-14 01:49 - INFO - 	 Recall for 0.4 precision: 0.689
2024-05-14 01:49 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 01:49 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 01:49 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 01:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 01:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 01:49 - INFO - 	 Best Recall for 0.4 precision: 0.689
2024-05-14 01:49 - INFO - ---------------------------------------------
2024-05-14 01:57 - INFO - ---------------------------------------------
2024-05-14 01:57 - INFO - Epoch: 10 | Time: 7m 13s
2024-05-14 01:57 - INFO - 	 Train Loss: 0.475
2024-05-14 01:57 - INFO - 	 Val. Loss: 0.497
2024-05-14 01:57 - INFO - 	 ROC-AUC: 0.732
2024-05-14 01:57 - INFO - 	 PR-AUC: 0.439
2024-05-14 01:57 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-14 01:57 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 01:57 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 01:57 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 01:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 01:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 01:57 - INFO - 	 Best Recall for 0.4 precision: 0.689
2024-05-14 01:57 - INFO - ---------------------------------------------
2024-05-14 02:01 - INFO - Fit the preprocessing pipeline
2024-05-14 02:01 - INFO - Training using device: cuda
2024-05-14 02:01 - INFO - Creating generators
2024-05-14 02:01 - INFO - The model has 651,257 trainable parameters
2024-05-14 02:01 - INFO - * Model:
2024-05-14 02:01 - INFO - * -----------
2024-05-14 02:01 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 02:01 - INFO - * -----------
2024-05-14 02:01 - INFO - Evaluating model based on: rocauc
2024-05-14 02:01 - INFO - Training..

2024-05-14 02:07 - INFO - ---------------------------------------------
2024-05-14 02:07 - INFO - Epoch: 01 | Time: 6m 41s
2024-05-14 02:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70082
2024-05-14 02:07 - INFO - 	 Train Loss: 0.543
2024-05-14 02:07 - INFO - 	 Val. Loss: 0.512
2024-05-14 02:07 - INFO - 	 ROC-AUC: 0.701
2024-05-14 02:07 - INFO - 	 PR-AUC: 0.414
2024-05-14 02:07 - INFO - 	 Recall for 0.4 precision: 0.535
2024-05-14 02:07 - INFO - 	 Best Val. Loss: 0.512
2024-05-14 02:07 - INFO - 	 Best ROC-AUC: 0.701
2024-05-14 02:07 - INFO - 	 Best PR-AUC: 0.414
2024-05-14 02:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.683
2024-05-14 02:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.394
2024-05-14 02:07 - INFO - 	 Best Recall for 0.4 precision: 0.535
2024-05-14 02:07 - INFO - ---------------------------------------------
2024-05-14 02:15 - INFO - ---------------------------------------------
2024-05-14 02:15 - INFO - Epoch: 02 | Time: 7m 28s
2024-05-14 02:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72598
2024-05-14 02:15 - INFO - 	 Train Loss: 0.500
2024-05-14 02:15 - INFO - 	 Val. Loss: 0.498
2024-05-14 02:15 - INFO - 	 ROC-AUC: 0.726
2024-05-14 02:15 - INFO - 	 PR-AUC: 0.437
2024-05-14 02:15 - INFO - 	 Recall for 0.4 precision: 0.640
2024-05-14 02:15 - INFO - 	 Best Val. Loss: 0.498
2024-05-14 02:15 - INFO - 	 Best ROC-AUC: 0.726
2024-05-14 02:15 - INFO - 	 Best PR-AUC: 0.437
2024-05-14 02:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 02:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-14 02:15 - INFO - 	 Best Recall for 0.4 precision: 0.640
2024-05-14 02:15 - INFO - ---------------------------------------------
2024-05-14 02:23 - INFO - ---------------------------------------------
2024-05-14 02:23 - INFO - Epoch: 03 | Time: 7m 38s
2024-05-14 02:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72926
2024-05-14 02:23 - INFO - 	 Train Loss: 0.489
2024-05-14 02:23 - INFO - 	 Val. Loss: 0.494
2024-05-14 02:23 - INFO - 	 ROC-AUC: 0.729
2024-05-14 02:23 - INFO - 	 PR-AUC: 0.440
2024-05-14 02:23 - INFO - 	 Recall for 0.4 precision: 0.663
2024-05-14 02:23 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 02:23 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 02:23 - INFO - 	 Best PR-AUC: 0.440
2024-05-14 02:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-14 02:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-14 02:23 - INFO - 	 Best Recall for 0.4 precision: 0.663
2024-05-14 02:23 - INFO - ---------------------------------------------
2024-05-14 02:29 - INFO - ---------------------------------------------
2024-05-14 02:29 - INFO - Epoch: 04 | Time: 6m 41s
2024-05-14 02:29 - INFO - 	 Train Loss: 0.485
2024-05-14 02:29 - INFO - 	 Val. Loss: 0.499
2024-05-14 02:29 - INFO - 	 ROC-AUC: 0.726
2024-05-14 02:29 - INFO - 	 PR-AUC: 0.435
2024-05-14 02:29 - INFO - 	 Recall for 0.4 precision: 0.643
2024-05-14 02:29 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 02:29 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 02:29 - INFO - 	 Best PR-AUC: 0.440
2024-05-14 02:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-14 02:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-14 02:29 - INFO - 	 Best Recall for 0.4 precision: 0.663
2024-05-14 02:29 - INFO - ---------------------------------------------
2024-05-14 02:36 - INFO - ---------------------------------------------
2024-05-14 02:36 - INFO - Epoch: 05 | Time: 7m 11s
2024-05-14 02:36 - INFO - 	 Train Loss: 0.482
2024-05-14 02:36 - INFO - 	 Val. Loss: 0.497
2024-05-14 02:36 - INFO - 	 ROC-AUC: 0.728
2024-05-14 02:36 - INFO - 	 PR-AUC: 0.434
2024-05-14 02:36 - INFO - 	 Recall for 0.4 precision: 0.651
2024-05-14 02:36 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 02:36 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 02:36 - INFO - 	 Best PR-AUC: 0.440
2024-05-14 02:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-14 02:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-14 02:36 - INFO - 	 Best Recall for 0.4 precision: 0.663
2024-05-14 02:36 - INFO - ---------------------------------------------
2024-05-14 02:43 - INFO - ---------------------------------------------
2024-05-14 02:43 - INFO - Epoch: 06 | Time: 6m 56s
2024-05-14 02:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73301
2024-05-14 02:43 - INFO - 	 Train Loss: 0.480
2024-05-14 02:43 - INFO - 	 Val. Loss: 0.494
2024-05-14 02:43 - INFO - 	 ROC-AUC: 0.733
2024-05-14 02:43 - INFO - 	 PR-AUC: 0.447
2024-05-14 02:43 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-14 02:43 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 02:43 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 02:43 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 02:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 02:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 02:43 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 02:43 - INFO - ---------------------------------------------
2024-05-14 02:51 - INFO - ---------------------------------------------
2024-05-14 02:51 - INFO - Epoch: 07 | Time: 7m 8s
2024-05-14 02:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73348
2024-05-14 02:51 - INFO - 	 Train Loss: 0.478
2024-05-14 02:51 - INFO - 	 Val. Loss: 0.495
2024-05-14 02:51 - INFO - 	 ROC-AUC: 0.733
2024-05-14 02:51 - INFO - 	 PR-AUC: 0.442
2024-05-14 02:51 - INFO - 	 Recall for 0.4 precision: 0.679
2024-05-14 02:51 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 02:51 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 02:51 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 02:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 02:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 02:51 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-14 02:51 - INFO - ---------------------------------------------
2024-05-14 02:58 - INFO - ---------------------------------------------
2024-05-14 02:58 - INFO - Epoch: 08 | Time: 7m 56s
2024-05-14 02:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73411
2024-05-14 02:58 - INFO - 	 Train Loss: 0.477
2024-05-14 02:58 - INFO - 	 Val. Loss: 0.496
2024-05-14 02:58 - INFO - 	 ROC-AUC: 0.734
2024-05-14 02:58 - INFO - 	 PR-AUC: 0.445
2024-05-14 02:58 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-14 02:58 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 02:58 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 02:58 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 02:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.725
2024-05-14 02:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 02:58 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-14 02:58 - INFO - ---------------------------------------------
2024-05-14 03:06 - INFO - ---------------------------------------------
2024-05-14 03:06 - INFO - Epoch: 09 | Time: 7m 0s
2024-05-14 03:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73512
2024-05-14 03:06 - INFO - 	 Train Loss: 0.475
2024-05-14 03:06 - INFO - 	 Val. Loss: 0.497
2024-05-14 03:06 - INFO - 	 ROC-AUC: 0.735
2024-05-14 03:06 - INFO - 	 PR-AUC: 0.447
2024-05-14 03:06 - INFO - 	 Recall for 0.4 precision: 0.675
2024-05-14 03:06 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 03:06 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 03:06 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 03:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 03:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-14 03:06 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-14 03:06 - INFO - ---------------------------------------------
2024-05-14 03:12 - INFO - ---------------------------------------------
2024-05-14 03:12 - INFO - Epoch: 10 | Time: 6m 57s
2024-05-14 03:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73575
2024-05-14 03:12 - INFO - 	 Train Loss: 0.474
2024-05-14 03:12 - INFO - 	 Val. Loss: 0.496
2024-05-14 03:12 - INFO - 	 ROC-AUC: 0.736
2024-05-14 03:12 - INFO - 	 PR-AUC: 0.450
2024-05-14 03:12 - INFO - 	 Recall for 0.4 precision: 0.684
2024-05-14 03:12 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 03:12 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 03:12 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 03:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-14 03:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-14 03:12 - INFO - 	 Best Recall for 0.4 precision: 0.684
2024-05-14 03:12 - INFO - ---------------------------------------------
2024-05-14 03:16 - INFO - Fit the preprocessing pipeline
2024-05-14 03:16 - INFO - Training using device: cuda
2024-05-14 03:16 - INFO - Creating generators
2024-05-14 03:16 - INFO - The model has 651,257 trainable parameters
2024-05-14 03:16 - INFO - * Model:
2024-05-14 03:16 - INFO - * -----------
2024-05-14 03:16 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 03:16 - INFO - * -----------
2024-05-14 03:16 - INFO - Evaluating model based on: rocauc
2024-05-14 03:16 - INFO - Training..

2024-05-14 03:23 - INFO - ---------------------------------------------
2024-05-14 03:23 - INFO - Epoch: 01 | Time: 6m 47s
2024-05-14 03:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70813
2024-05-14 03:23 - INFO - 	 Train Loss: 0.539
2024-05-14 03:23 - INFO - 	 Val. Loss: 0.511
2024-05-14 03:23 - INFO - 	 ROC-AUC: 0.708
2024-05-14 03:23 - INFO - 	 PR-AUC: 0.426
2024-05-14 03:23 - INFO - 	 Recall for 0.4 precision: 0.558
2024-05-14 03:23 - INFO - 	 Best Val. Loss: 0.511
2024-05-14 03:23 - INFO - 	 Best ROC-AUC: 0.708
2024-05-14 03:23 - INFO - 	 Best PR-AUC: 0.426
2024-05-14 03:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.697
2024-05-14 03:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.410
2024-05-14 03:23 - INFO - 	 Best Recall for 0.4 precision: 0.558
2024-05-14 03:23 - INFO - ---------------------------------------------
2024-05-14 03:29 - INFO - ---------------------------------------------
2024-05-14 03:29 - INFO - Epoch: 02 | Time: 6m 27s
2024-05-14 03:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72248
2024-05-14 03:29 - INFO - 	 Train Loss: 0.499
2024-05-14 03:29 - INFO - 	 Val. Loss: 0.505
2024-05-14 03:29 - INFO - 	 ROC-AUC: 0.722
2024-05-14 03:29 - INFO - 	 PR-AUC: 0.435
2024-05-14 03:29 - INFO - 	 Recall for 0.4 precision: 0.622
2024-05-14 03:29 - INFO - 	 Best Val. Loss: 0.505
2024-05-14 03:29 - INFO - 	 Best ROC-AUC: 0.722
2024-05-14 03:29 - INFO - 	 Best PR-AUC: 0.435
2024-05-14 03:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-14 03:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-05-14 03:29 - INFO - 	 Best Recall for 0.4 precision: 0.622
2024-05-14 03:29 - INFO - ---------------------------------------------
2024-05-14 03:36 - INFO - ---------------------------------------------
2024-05-14 03:36 - INFO - Epoch: 03 | Time: 6m 14s
2024-05-14 03:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73337
2024-05-14 03:36 - INFO - 	 Train Loss: 0.490
2024-05-14 03:36 - INFO - 	 Val. Loss: 0.497
2024-05-14 03:36 - INFO - 	 ROC-AUC: 0.733
2024-05-14 03:36 - INFO - 	 PR-AUC: 0.445
2024-05-14 03:36 - INFO - 	 Recall for 0.4 precision: 0.676
2024-05-14 03:36 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 03:36 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 03:36 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 03:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 03:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-14 03:36 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-14 03:36 - INFO - ---------------------------------------------
2024-05-14 03:43 - INFO - ---------------------------------------------
2024-05-14 03:43 - INFO - Epoch: 04 | Time: 6m 55s
2024-05-14 03:43 - INFO - 	 Train Loss: 0.485
2024-05-14 03:43 - INFO - 	 Val. Loss: 0.499
2024-05-14 03:43 - INFO - 	 ROC-AUC: 0.730
2024-05-14 03:43 - INFO - 	 PR-AUC: 0.440
2024-05-14 03:43 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-14 03:43 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 03:43 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 03:43 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 03:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 03:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-14 03:43 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-14 03:43 - INFO - ---------------------------------------------
2024-05-14 03:49 - INFO - ---------------------------------------------
2024-05-14 03:49 - INFO - Epoch: 05 | Time: 6m 9s
2024-05-14 03:49 - INFO - 	 Train Loss: 0.482
2024-05-14 03:49 - INFO - 	 Val. Loss: 0.495
2024-05-14 03:49 - INFO - 	 ROC-AUC: 0.731
2024-05-14 03:49 - INFO - 	 PR-AUC: 0.440
2024-05-14 03:49 - INFO - 	 Recall for 0.4 precision: 0.666
2024-05-14 03:49 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 03:49 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 03:49 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 03:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 03:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-14 03:49 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-14 03:49 - INFO - ---------------------------------------------
2024-05-14 03:55 - INFO - ---------------------------------------------
2024-05-14 03:55 - INFO - Epoch: 06 | Time: 6m 33s
2024-05-14 03:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.735
2024-05-14 03:55 - INFO - 	 Train Loss: 0.479
2024-05-14 03:55 - INFO - 	 Val. Loss: 0.495
2024-05-14 03:55 - INFO - 	 ROC-AUC: 0.735
2024-05-14 03:55 - INFO - 	 PR-AUC: 0.447
2024-05-14 03:55 - INFO - 	 Recall for 0.4 precision: 0.680
2024-05-14 03:55 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 03:55 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 03:55 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 03:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 03:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-14 03:55 - INFO - 	 Best Recall for 0.4 precision: 0.680
2024-05-14 03:55 - INFO - ---------------------------------------------
2024-05-14 04:01 - INFO - ---------------------------------------------
2024-05-14 04:01 - INFO - Epoch: 07 | Time: 6m 3s
2024-05-14 04:01 - INFO - 	 Train Loss: 0.478
2024-05-14 04:01 - INFO - 	 Val. Loss: 0.494
2024-05-14 04:01 - INFO - 	 ROC-AUC: 0.735
2024-05-14 04:01 - INFO - 	 PR-AUC: 0.450
2024-05-14 04:01 - INFO - 	 Recall for 0.4 precision: 0.679
2024-05-14 04:01 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 04:01 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 04:01 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 04:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 04:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 04:01 - INFO - 	 Best Recall for 0.4 precision: 0.680
2024-05-14 04:01 - INFO - ---------------------------------------------
2024-05-14 04:08 - INFO - ---------------------------------------------
2024-05-14 04:08 - INFO - Epoch: 08 | Time: 6m 30s
2024-05-14 04:08 - INFO - 	 Train Loss: 0.477
2024-05-14 04:08 - INFO - 	 Val. Loss: 0.493
2024-05-14 04:08 - INFO - 	 ROC-AUC: 0.735
2024-05-14 04:08 - INFO - 	 PR-AUC: 0.444
2024-05-14 04:08 - INFO - 	 Recall for 0.4 precision: 0.682
2024-05-14 04:08 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 04:08 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 04:08 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 04:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 04:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 04:08 - INFO - 	 Best Recall for 0.4 precision: 0.682
2024-05-14 04:08 - INFO - ---------------------------------------------
2024-05-14 04:14 - INFO - ---------------------------------------------
2024-05-14 04:14 - INFO - Epoch: 09 | Time: 6m 4s
2024-05-14 04:14 - INFO - 	 Train Loss: 0.476
2024-05-14 04:14 - INFO - 	 Val. Loss: 0.494
2024-05-14 04:14 - INFO - 	 ROC-AUC: 0.732
2024-05-14 04:14 - INFO - 	 PR-AUC: 0.441
2024-05-14 04:14 - INFO - 	 Recall for 0.4 precision: 0.674
2024-05-14 04:14 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 04:14 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 04:14 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 04:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 04:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 04:14 - INFO - 	 Best Recall for 0.4 precision: 0.682
2024-05-14 04:14 - INFO - ---------------------------------------------
2024-05-14 04:24 - INFO - Fit the preprocessing pipeline
2024-05-14 04:24 - INFO - Training using device: cuda
2024-05-14 04:24 - INFO - Creating generators
2024-05-14 04:24 - INFO - The model has 651,257 trainable parameters
2024-05-14 04:24 - INFO - * Model:
2024-05-14 04:24 - INFO - * -----------
2024-05-14 04:24 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 04:24 - INFO - * -----------
2024-05-14 04:24 - INFO - Evaluating model based on: rocauc
2024-05-14 04:24 - INFO - Training..

2024-05-14 04:30 - INFO - ---------------------------------------------
2024-05-14 04:30 - INFO - Epoch: 01 | Time: 6m 28s
2024-05-14 04:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70101
2024-05-14 04:30 - INFO - 	 Train Loss: 0.543
2024-05-14 04:30 - INFO - 	 Val. Loss: 0.517
2024-05-14 04:30 - INFO - 	 ROC-AUC: 0.701
2024-05-14 04:30 - INFO - 	 PR-AUC: 0.418
2024-05-14 04:30 - INFO - 	 Recall for 0.4 precision: 0.519
2024-05-14 04:30 - INFO - 	 Best Val. Loss: 0.517
2024-05-14 04:30 - INFO - 	 Best ROC-AUC: 0.701
2024-05-14 04:30 - INFO - 	 Best PR-AUC: 0.418
2024-05-14 04:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.676
2024-05-14 04:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.391
2024-05-14 04:30 - INFO - 	 Best Recall for 0.4 precision: 0.519
2024-05-14 04:30 - INFO - ---------------------------------------------
2024-05-14 04:36 - INFO - ---------------------------------------------
2024-05-14 04:36 - INFO - Epoch: 02 | Time: 6m 12s
2024-05-14 04:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72138
2024-05-14 04:36 - INFO - 	 Train Loss: 0.502
2024-05-14 04:36 - INFO - 	 Val. Loss: 0.499
2024-05-14 04:36 - INFO - 	 ROC-AUC: 0.721
2024-05-14 04:36 - INFO - 	 PR-AUC: 0.438
2024-05-14 04:36 - INFO - 	 Recall for 0.4 precision: 0.619
2024-05-14 04:36 - INFO - 	 Best Val. Loss: 0.499
2024-05-14 04:36 - INFO - 	 Best ROC-AUC: 0.721
2024-05-14 04:36 - INFO - 	 Best PR-AUC: 0.438
2024-05-14 04:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-05-14 04:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-05-14 04:36 - INFO - 	 Best Recall for 0.4 precision: 0.619
2024-05-14 04:36 - INFO - ---------------------------------------------
2024-05-14 04:43 - INFO - ---------------------------------------------
2024-05-14 04:43 - INFO - Epoch: 03 | Time: 6m 58s
2024-05-14 04:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73204
2024-05-14 04:43 - INFO - 	 Train Loss: 0.491
2024-05-14 04:43 - INFO - 	 Val. Loss: 0.493
2024-05-14 04:43 - INFO - 	 ROC-AUC: 0.732
2024-05-14 04:43 - INFO - 	 PR-AUC: 0.447
2024-05-14 04:43 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-14 04:43 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 04:43 - INFO - 	 Best ROC-AUC: 0.732
2024-05-14 04:43 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 04:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 04:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-14 04:43 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-05-14 04:43 - INFO - ---------------------------------------------
2024-05-14 04:49 - INFO - ---------------------------------------------
2024-05-14 04:49 - INFO - Epoch: 04 | Time: 6m 14s
2024-05-14 04:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73476
2024-05-14 04:49 - INFO - 	 Train Loss: 0.486
2024-05-14 04:49 - INFO - 	 Val. Loss: 0.492
2024-05-14 04:49 - INFO - 	 ROC-AUC: 0.735
2024-05-14 04:49 - INFO - 	 PR-AUC: 0.446
2024-05-14 04:49 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-14 04:49 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 04:49 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 04:49 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 04:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 04:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-14 04:49 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-05-14 04:49 - INFO - ---------------------------------------------
2024-05-14 04:56 - INFO - ---------------------------------------------
2024-05-14 04:56 - INFO - Epoch: 05 | Time: 6m 56s
2024-05-14 04:56 - INFO - 	 Train Loss: 0.483
2024-05-14 04:56 - INFO - 	 Val. Loss: 0.493
2024-05-14 04:56 - INFO - 	 ROC-AUC: 0.733
2024-05-14 04:56 - INFO - 	 PR-AUC: 0.443
2024-05-14 04:56 - INFO - 	 Recall for 0.4 precision: 0.674
2024-05-14 04:56 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 04:56 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 04:56 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 04:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 04:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-14 04:56 - INFO - 	 Best Recall for 0.4 precision: 0.674
2024-05-14 04:56 - INFO - ---------------------------------------------
2024-05-14 05:03 - INFO - ---------------------------------------------
2024-05-14 05:03 - INFO - Epoch: 06 | Time: 6m 30s
2024-05-14 05:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73792
2024-05-14 05:03 - INFO - 	 Train Loss: 0.480
2024-05-14 05:03 - INFO - 	 Val. Loss: 0.490
2024-05-14 05:03 - INFO - 	 ROC-AUC: 0.738
2024-05-14 05:03 - INFO - 	 PR-AUC: 0.450
2024-05-14 05:03 - INFO - 	 Recall for 0.4 precision: 0.688
2024-05-14 05:03 - INFO - 	 Best Val. Loss: 0.490
2024-05-14 05:03 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 05:03 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 05:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 05:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.447
2024-05-14 05:03 - INFO - 	 Best Recall for 0.4 precision: 0.688
2024-05-14 05:03 - INFO - ---------------------------------------------
2024-05-14 05:09 - INFO - ---------------------------------------------
2024-05-14 05:09 - INFO - Epoch: 07 | Time: 6m 28s
2024-05-14 05:09 - INFO - 	 Train Loss: 0.478
2024-05-14 05:09 - INFO - 	 Val. Loss: 0.492
2024-05-14 05:09 - INFO - 	 ROC-AUC: 0.737
2024-05-14 05:09 - INFO - 	 PR-AUC: 0.446
2024-05-14 05:09 - INFO - 	 Recall for 0.4 precision: 0.690
2024-05-14 05:09 - INFO - 	 Best Val. Loss: 0.490
2024-05-14 05:09 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 05:09 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 05:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 05:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.447
2024-05-14 05:09 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-14 05:09 - INFO - ---------------------------------------------
2024-05-14 05:16 - INFO - ---------------------------------------------
2024-05-14 05:16 - INFO - Epoch: 08 | Time: 6m 27s
2024-05-14 05:16 - INFO - 	 Train Loss: 0.477
2024-05-14 05:16 - INFO - 	 Val. Loss: 0.493
2024-05-14 05:16 - INFO - 	 ROC-AUC: 0.735
2024-05-14 05:16 - INFO - 	 PR-AUC: 0.442
2024-05-14 05:16 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-14 05:16 - INFO - 	 Best Val. Loss: 0.490
2024-05-14 05:16 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 05:16 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 05:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 05:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.447
2024-05-14 05:16 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-14 05:16 - INFO - ---------------------------------------------
2024-05-14 05:22 - INFO - ---------------------------------------------
2024-05-14 05:22 - INFO - Epoch: 09 | Time: 6m 1s
2024-05-14 05:22 - INFO - 	 Train Loss: 0.476
2024-05-14 05:22 - INFO - 	 Val. Loss: 0.494
2024-05-14 05:22 - INFO - 	 ROC-AUC: 0.735
2024-05-14 05:22 - INFO - 	 PR-AUC: 0.446
2024-05-14 05:22 - INFO - 	 Recall for 0.4 precision: 0.679
2024-05-14 05:22 - INFO - 	 Best Val. Loss: 0.490
2024-05-14 05:22 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 05:22 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 05:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 05:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.447
2024-05-14 05:22 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-14 05:22 - INFO - ---------------------------------------------
2024-05-14 05:30 - INFO - ---------------------------------------------
2024-05-14 05:30 - INFO - Epoch: 10 | Time: 8m 13s
2024-05-14 05:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73892
2024-05-14 05:30 - INFO - 	 Train Loss: 0.475
2024-05-14 05:30 - INFO - 	 Val. Loss: 0.491
2024-05-14 05:30 - INFO - 	 ROC-AUC: 0.739
2024-05-14 05:30 - INFO - 	 PR-AUC: 0.452
2024-05-14 05:30 - INFO - 	 Recall for 0.4 precision: 0.001
2024-05-14 05:30 - INFO - 	 Best Val. Loss: 0.490
2024-05-14 05:30 - INFO - 	 Best ROC-AUC: 0.739
2024-05-14 05:30 - INFO - 	 Best PR-AUC: 0.452
2024-05-14 05:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 05:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-14 05:30 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-14 05:30 - INFO - ---------------------------------------------
2024-05-14 05:34 - INFO - Fit the preprocessing pipeline
2024-05-14 05:34 - INFO - Training using device: cuda
2024-05-14 05:34 - INFO - Creating generators
2024-05-14 05:34 - INFO - The model has 651,257 trainable parameters
2024-05-14 05:34 - INFO - * Model:
2024-05-14 05:34 - INFO - * -----------
2024-05-14 05:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 05:34 - INFO - * -----------
2024-05-14 05:34 - INFO - Evaluating model based on: rocauc
2024-05-14 05:34 - INFO - Training..

2024-05-14 05:40 - INFO - ---------------------------------------------
2024-05-14 05:40 - INFO - Epoch: 01 | Time: 5m 59s
2024-05-14 05:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71123
2024-05-14 05:40 - INFO - 	 Train Loss: 0.540
2024-05-14 05:40 - INFO - 	 Val. Loss: 0.517
2024-05-14 05:40 - INFO - 	 ROC-AUC: 0.711
2024-05-14 05:40 - INFO - 	 PR-AUC: 0.428
2024-05-14 05:40 - INFO - 	 Recall for 0.4 precision: 0.572
2024-05-14 05:40 - INFO - 	 Best Val. Loss: 0.517
2024-05-14 05:40 - INFO - 	 Best ROC-AUC: 0.711
2024-05-14 05:40 - INFO - 	 Best PR-AUC: 0.428
2024-05-14 05:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.693
2024-05-14 05:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.405
2024-05-14 05:40 - INFO - 	 Best Recall for 0.4 precision: 0.572
2024-05-14 05:40 - INFO - ---------------------------------------------
2024-05-14 05:46 - INFO - ---------------------------------------------
2024-05-14 05:46 - INFO - Epoch: 02 | Time: 5m 56s
2024-05-14 05:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72308
2024-05-14 05:46 - INFO - 	 Train Loss: 0.498
2024-05-14 05:46 - INFO - 	 Val. Loss: 0.498
2024-05-14 05:46 - INFO - 	 ROC-AUC: 0.723
2024-05-14 05:46 - INFO - 	 PR-AUC: 0.433
2024-05-14 05:46 - INFO - 	 Recall for 0.4 precision: 0.628
2024-05-14 05:46 - INFO - 	 Best Val. Loss: 0.498
2024-05-14 05:46 - INFO - 	 Best ROC-AUC: 0.723
2024-05-14 05:46 - INFO - 	 Best PR-AUC: 0.433
2024-05-14 05:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-05-14 05:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.424
2024-05-14 05:46 - INFO - 	 Best Recall for 0.4 precision: 0.628
2024-05-14 05:46 - INFO - ---------------------------------------------
2024-05-14 05:53 - INFO - ---------------------------------------------
2024-05-14 05:53 - INFO - Epoch: 03 | Time: 7m 0s
2024-05-14 05:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72971
2024-05-14 05:53 - INFO - 	 Train Loss: 0.489
2024-05-14 05:53 - INFO - 	 Val. Loss: 0.494
2024-05-14 05:53 - INFO - 	 ROC-AUC: 0.730
2024-05-14 05:53 - INFO - 	 PR-AUC: 0.441
2024-05-14 05:53 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-14 05:53 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 05:53 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 05:53 - INFO - 	 Best PR-AUC: 0.441
2024-05-14 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 05:53 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-14 05:53 - INFO - ---------------------------------------------
2024-05-14 05:59 - INFO - ---------------------------------------------
2024-05-14 05:59 - INFO - Epoch: 04 | Time: 6m 1s
2024-05-14 05:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72991
2024-05-14 05:59 - INFO - 	 Train Loss: 0.485
2024-05-14 05:59 - INFO - 	 Val. Loss: 0.495
2024-05-14 05:59 - INFO - 	 ROC-AUC: 0.730
2024-05-14 05:59 - INFO - 	 PR-AUC: 0.442
2024-05-14 05:59 - INFO - 	 Recall for 0.4 precision: 0.656
2024-05-14 05:59 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 05:59 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 05:59 - INFO - 	 Best PR-AUC: 0.442
2024-05-14 05:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 05:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-05-14 05:59 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-14 05:59 - INFO - ---------------------------------------------
2024-05-14 06:05 - INFO - ---------------------------------------------
2024-05-14 06:05 - INFO - Epoch: 05 | Time: 5m 57s
2024-05-14 06:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73011
2024-05-14 06:05 - INFO - 	 Train Loss: 0.482
2024-05-14 06:05 - INFO - 	 Val. Loss: 0.494
2024-05-14 06:05 - INFO - 	 ROC-AUC: 0.730
2024-05-14 06:05 - INFO - 	 PR-AUC: 0.438
2024-05-14 06:05 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-14 06:05 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 06:05 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 06:05 - INFO - 	 Best PR-AUC: 0.442
2024-05-14 06:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 06:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-05-14 06:05 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-14 06:05 - INFO - ---------------------------------------------
2024-05-14 06:11 - INFO - ---------------------------------------------
2024-05-14 06:11 - INFO - Epoch: 06 | Time: 6m 41s
2024-05-14 06:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73102
2024-05-14 06:11 - INFO - 	 Train Loss: 0.480
2024-05-14 06:11 - INFO - 	 Val. Loss: 0.495
2024-05-14 06:11 - INFO - 	 ROC-AUC: 0.731
2024-05-14 06:11 - INFO - 	 PR-AUC: 0.444
2024-05-14 06:11 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-14 06:11 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 06:11 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 06:11 - INFO - 	 Best PR-AUC: 0.444
2024-05-14 06:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 06:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-14 06:11 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-14 06:11 - INFO - ---------------------------------------------
2024-05-14 06:17 - INFO - ---------------------------------------------
2024-05-14 06:17 - INFO - Epoch: 07 | Time: 5m 58s
2024-05-14 06:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73509
2024-05-14 06:17 - INFO - 	 Train Loss: 0.478
2024-05-14 06:17 - INFO - 	 Val. Loss: 0.493
2024-05-14 06:17 - INFO - 	 ROC-AUC: 0.735
2024-05-14 06:17 - INFO - 	 PR-AUC: 0.446
2024-05-14 06:17 - INFO - 	 Recall for 0.4 precision: 0.672
2024-05-14 06:17 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 06:17 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 06:17 - INFO - 	 Best PR-AUC: 0.446
2024-05-14 06:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 06:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-14 06:17 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-14 06:17 - INFO - ---------------------------------------------
2024-05-14 06:24 - INFO - ---------------------------------------------
2024-05-14 06:24 - INFO - Epoch: 08 | Time: 6m 31s
2024-05-14 06:24 - INFO - 	 Train Loss: 0.477
2024-05-14 06:24 - INFO - 	 Val. Loss: 0.497
2024-05-14 06:24 - INFO - 	 ROC-AUC: 0.729
2024-05-14 06:24 - INFO - 	 PR-AUC: 0.441
2024-05-14 06:24 - INFO - 	 Recall for 0.4 precision: 0.647
2024-05-14 06:24 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 06:24 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 06:24 - INFO - 	 Best PR-AUC: 0.446
2024-05-14 06:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 06:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-14 06:24 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-14 06:24 - INFO - ---------------------------------------------
2024-05-14 06:30 - INFO - ---------------------------------------------
2024-05-14 06:30 - INFO - Epoch: 09 | Time: 6m 1s
2024-05-14 06:30 - INFO - 	 Train Loss: 0.476
2024-05-14 06:30 - INFO - 	 Val. Loss: 0.494
2024-05-14 06:30 - INFO - 	 ROC-AUC: 0.734
2024-05-14 06:30 - INFO - 	 PR-AUC: 0.447
2024-05-14 06:30 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-14 06:30 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 06:30 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 06:30 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 06:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 06:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-14 06:30 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-14 06:30 - INFO - ---------------------------------------------
2024-05-14 06:36 - INFO - ---------------------------------------------
2024-05-14 06:36 - INFO - Epoch: 10 | Time: 6m 23s
2024-05-14 06:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7359
2024-05-14 06:36 - INFO - 	 Train Loss: 0.475
2024-05-14 06:36 - INFO - 	 Val. Loss: 0.491
2024-05-14 06:36 - INFO - 	 ROC-AUC: 0.736
2024-05-14 06:36 - INFO - 	 PR-AUC: 0.449
2024-05-14 06:36 - INFO - 	 Recall for 0.4 precision: 0.678
2024-05-14 06:36 - INFO - 	 Best Val. Loss: 0.491
2024-05-14 06:36 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 06:36 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 06:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 06:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-14 06:36 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-14 06:36 - INFO - ---------------------------------------------
2024-05-14 06:40 - INFO - Fit the preprocessing pipeline
2024-05-14 06:40 - INFO - Training using device: cuda
2024-05-14 06:40 - INFO - Creating generators
2024-05-14 06:40 - INFO - The model has 651,257 trainable parameters
2024-05-14 06:40 - INFO - * Model:
2024-05-14 06:40 - INFO - * -----------
2024-05-14 06:40 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 06:40 - INFO - * -----------
2024-05-14 06:40 - INFO - Evaluating model based on: rocauc
2024-05-14 06:40 - INFO - Training..

2024-05-14 06:46 - INFO - ---------------------------------------------
2024-05-14 06:46 - INFO - Epoch: 01 | Time: 6m 1s
2024-05-14 06:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70837
2024-05-14 06:46 - INFO - 	 Train Loss: 0.544
2024-05-14 06:46 - INFO - 	 Val. Loss: 0.510
2024-05-14 06:46 - INFO - 	 ROC-AUC: 0.708
2024-05-14 06:46 - INFO - 	 PR-AUC: 0.423
2024-05-14 06:46 - INFO - 	 Recall for 0.4 precision: 0.571
2024-05-14 06:46 - INFO - 	 Best Val. Loss: 0.510
2024-05-14 06:46 - INFO - 	 Best ROC-AUC: 0.708
2024-05-14 06:46 - INFO - 	 Best PR-AUC: 0.423
2024-05-14 06:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.678
2024-05-14 06:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.394
2024-05-14 06:46 - INFO - 	 Best Recall for 0.4 precision: 0.571
2024-05-14 06:46 - INFO - ---------------------------------------------
2024-05-14 06:52 - INFO - ---------------------------------------------
2024-05-14 06:52 - INFO - Epoch: 02 | Time: 6m 13s
2024-05-14 06:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7234
2024-05-14 06:52 - INFO - 	 Train Loss: 0.501
2024-05-14 06:52 - INFO - 	 Val. Loss: 0.500
2024-05-14 06:52 - INFO - 	 ROC-AUC: 0.723
2024-05-14 06:52 - INFO - 	 PR-AUC: 0.434
2024-05-14 06:52 - INFO - 	 Recall for 0.4 precision: 0.630
2024-05-14 06:52 - INFO - 	 Best Val. Loss: 0.500
2024-05-14 06:52 - INFO - 	 Best ROC-AUC: 0.723
2024-05-14 06:52 - INFO - 	 Best PR-AUC: 0.434
2024-05-14 06:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.700
2024-05-14 06:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.418
2024-05-14 06:52 - INFO - 	 Best Recall for 0.4 precision: 0.630
2024-05-14 06:52 - INFO - ---------------------------------------------
2024-05-14 06:58 - INFO - ---------------------------------------------
2024-05-14 06:58 - INFO - Epoch: 03 | Time: 6m 10s
2024-05-14 06:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7301
2024-05-14 06:58 - INFO - 	 Train Loss: 0.490
2024-05-14 06:58 - INFO - 	 Val. Loss: 0.494
2024-05-14 06:58 - INFO - 	 ROC-AUC: 0.730
2024-05-14 06:58 - INFO - 	 PR-AUC: 0.443
2024-05-14 06:58 - INFO - 	 Recall for 0.4 precision: 0.659
2024-05-14 06:58 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 06:58 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 06:58 - INFO - 	 Best PR-AUC: 0.443
2024-05-14 06:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-14 06:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-14 06:58 - INFO - 	 Best Recall for 0.4 precision: 0.659
2024-05-14 06:58 - INFO - ---------------------------------------------
2024-05-14 07:05 - INFO - ---------------------------------------------
2024-05-14 07:05 - INFO - Epoch: 04 | Time: 6m 16s
2024-05-14 07:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7303
2024-05-14 07:05 - INFO - 	 Train Loss: 0.485
2024-05-14 07:05 - INFO - 	 Val. Loss: 0.498
2024-05-14 07:05 - INFO - 	 ROC-AUC: 0.730
2024-05-14 07:05 - INFO - 	 PR-AUC: 0.440
2024-05-14 07:05 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-14 07:05 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 07:05 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 07:05 - INFO - 	 Best PR-AUC: 0.443
2024-05-14 07:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-14 07:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-14 07:05 - INFO - 	 Best Recall for 0.4 precision: 0.659
2024-05-14 07:05 - INFO - ---------------------------------------------
2024-05-14 07:11 - INFO - ---------------------------------------------
2024-05-14 07:11 - INFO - Epoch: 05 | Time: 5m 59s
2024-05-14 07:11 - INFO - 	 Train Loss: 0.482
2024-05-14 07:11 - INFO - 	 Val. Loss: 0.499
2024-05-14 07:11 - INFO - 	 ROC-AUC: 0.730
2024-05-14 07:11 - INFO - 	 PR-AUC: 0.443
2024-05-14 07:11 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-14 07:11 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 07:11 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 07:11 - INFO - 	 Best PR-AUC: 0.443
2024-05-14 07:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-14 07:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-14 07:11 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-14 07:11 - INFO - ---------------------------------------------
2024-05-14 07:17 - INFO - ---------------------------------------------
2024-05-14 07:17 - INFO - Epoch: 06 | Time: 6m 21s
2024-05-14 07:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73293
2024-05-14 07:17 - INFO - 	 Train Loss: 0.480
2024-05-14 07:17 - INFO - 	 Val. Loss: 0.499
2024-05-14 07:17 - INFO - 	 ROC-AUC: 0.733
2024-05-14 07:17 - INFO - 	 PR-AUC: 0.447
2024-05-14 07:17 - INFO - 	 Recall for 0.4 precision: 0.676
2024-05-14 07:17 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 07:17 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 07:17 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 07:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 07:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 07:17 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-14 07:17 - INFO - ---------------------------------------------
2024-05-14 07:24 - INFO - ---------------------------------------------
2024-05-14 07:24 - INFO - Epoch: 07 | Time: 6m 43s
2024-05-14 07:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73373
2024-05-14 07:24 - INFO - 	 Train Loss: 0.478
2024-05-14 07:24 - INFO - 	 Val. Loss: 0.493
2024-05-14 07:24 - INFO - 	 ROC-AUC: 0.734
2024-05-14 07:24 - INFO - 	 PR-AUC: 0.446
2024-05-14 07:24 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-14 07:24 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 07:24 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 07:24 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 07:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 07:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 07:24 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-14 07:24 - INFO - ---------------------------------------------
2024-05-14 07:30 - INFO - ---------------------------------------------
2024-05-14 07:30 - INFO - Epoch: 08 | Time: 6m 38s
2024-05-14 07:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73551
2024-05-14 07:30 - INFO - 	 Train Loss: 0.477
2024-05-14 07:30 - INFO - 	 Val. Loss: 0.496
2024-05-14 07:30 - INFO - 	 ROC-AUC: 0.736
2024-05-14 07:30 - INFO - 	 PR-AUC: 0.447
2024-05-14 07:30 - INFO - 	 Recall for 0.4 precision: 0.679
2024-05-14 07:30 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 07:30 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 07:30 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 07:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 07:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-14 07:30 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-14 07:30 - INFO - ---------------------------------------------
2024-05-14 07:37 - INFO - ---------------------------------------------
2024-05-14 07:37 - INFO - Epoch: 09 | Time: 6m 30s
2024-05-14 07:37 - INFO - 	 Train Loss: 0.476
2024-05-14 07:37 - INFO - 	 Val. Loss: 0.495
2024-05-14 07:37 - INFO - 	 ROC-AUC: 0.732
2024-05-14 07:37 - INFO - 	 PR-AUC: 0.447
2024-05-14 07:37 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-14 07:37 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 07:37 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 07:37 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 07:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 07:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-14 07:37 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-14 07:37 - INFO - ---------------------------------------------
2024-05-14 07:43 - INFO - ---------------------------------------------
2024-05-14 07:43 - INFO - Epoch: 10 | Time: 6m 0s
2024-05-14 07:43 - INFO - 	 Train Loss: 0.475
2024-05-14 07:43 - INFO - 	 Val. Loss: 0.496
2024-05-14 07:43 - INFO - 	 ROC-AUC: 0.735
2024-05-14 07:43 - INFO - 	 PR-AUC: 0.448
2024-05-14 07:43 - INFO - 	 Recall for 0.4 precision: 0.000
2024-05-14 07:43 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 07:43 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 07:43 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 07:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 07:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-14 07:43 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-14 07:43 - INFO - ---------------------------------------------
2024-05-14 07:46 - INFO - Fit the preprocessing pipeline
2024-05-14 07:46 - INFO - Training using device: cuda
2024-05-14 07:46 - INFO - Creating generators
2024-05-14 07:47 - INFO - The model has 651,257 trainable parameters
2024-05-14 07:47 - INFO - * Model:
2024-05-14 07:47 - INFO - * -----------
2024-05-14 07:47 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 07:47 - INFO - * -----------
2024-05-14 07:47 - INFO - Evaluating model based on: rocauc
2024-05-14 07:47 - INFO - Training..

2024-05-14 07:53 - INFO - ---------------------------------------------
2024-05-14 07:53 - INFO - Epoch: 01 | Time: 6m 53s
2024-05-14 07:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71298
2024-05-14 07:53 - INFO - 	 Train Loss: 0.541
2024-05-14 07:53 - INFO - 	 Val. Loss: 0.509
2024-05-14 07:53 - INFO - 	 ROC-AUC: 0.713
2024-05-14 07:53 - INFO - 	 PR-AUC: 0.429
2024-05-14 07:53 - INFO - 	 Recall for 0.4 precision: 0.590
2024-05-14 07:53 - INFO - 	 Best Val. Loss: 0.509
2024-05-14 07:53 - INFO - 	 Best ROC-AUC: 0.713
2024-05-14 07:53 - INFO - 	 Best PR-AUC: 0.429
2024-05-14 07:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.694
2024-05-14 07:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.405
2024-05-14 07:53 - INFO - 	 Best Recall for 0.4 precision: 0.590
2024-05-14 07:53 - INFO - ---------------------------------------------
2024-05-14 08:00 - INFO - ---------------------------------------------
2024-05-14 08:00 - INFO - Epoch: 02 | Time: 6m 4s
2024-05-14 08:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7253
2024-05-14 08:00 - INFO - 	 Train Loss: 0.499
2024-05-14 08:00 - INFO - 	 Val. Loss: 0.496
2024-05-14 08:00 - INFO - 	 ROC-AUC: 0.725
2024-05-14 08:00 - INFO - 	 PR-AUC: 0.434
2024-05-14 08:00 - INFO - 	 Recall for 0.4 precision: 0.640
2024-05-14 08:00 - INFO - 	 Best Val. Loss: 0.496
2024-05-14 08:00 - INFO - 	 Best ROC-AUC: 0.725
2024-05-14 08:00 - INFO - 	 Best PR-AUC: 0.434
2024-05-14 08:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-05-14 08:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-05-14 08:00 - INFO - 	 Best Recall for 0.4 precision: 0.640
2024-05-14 08:00 - INFO - ---------------------------------------------
2024-05-14 08:06 - INFO - ---------------------------------------------
2024-05-14 08:06 - INFO - Epoch: 03 | Time: 6m 28s
2024-05-14 08:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73146
2024-05-14 08:06 - INFO - 	 Train Loss: 0.489
2024-05-14 08:06 - INFO - 	 Val. Loss: 0.496
2024-05-14 08:06 - INFO - 	 ROC-AUC: 0.731
2024-05-14 08:06 - INFO - 	 PR-AUC: 0.440
2024-05-14 08:06 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-14 08:06 - INFO - 	 Best Val. Loss: 0.496
2024-05-14 08:06 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 08:06 - INFO - 	 Best PR-AUC: 0.440
2024-05-14 08:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-14 08:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 08:06 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 08:06 - INFO - ---------------------------------------------
2024-05-14 08:12 - INFO - ---------------------------------------------
2024-05-14 08:12 - INFO - Epoch: 04 | Time: 6m 4s
2024-05-14 08:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73336
2024-05-14 08:12 - INFO - 	 Train Loss: 0.485
2024-05-14 08:12 - INFO - 	 Val. Loss: 0.493
2024-05-14 08:12 - INFO - 	 ROC-AUC: 0.733
2024-05-14 08:12 - INFO - 	 PR-AUC: 0.448
2024-05-14 08:12 - INFO - 	 Recall for 0.4 precision: 0.666
2024-05-14 08:12 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 08:12 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 08:12 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 08:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 08:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 08:12 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 08:12 - INFO - ---------------------------------------------
2024-05-14 08:19 - INFO - ---------------------------------------------
2024-05-14 08:19 - INFO - Epoch: 05 | Time: 6m 28s
2024-05-14 08:19 - INFO - 	 Train Loss: 0.481
2024-05-14 08:19 - INFO - 	 Val. Loss: 0.494
2024-05-14 08:19 - INFO - 	 ROC-AUC: 0.733
2024-05-14 08:19 - INFO - 	 PR-AUC: 0.446
2024-05-14 08:19 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-14 08:19 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 08:19 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 08:19 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 08:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 08:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 08:19 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 08:19 - INFO - ---------------------------------------------
2024-05-14 08:25 - INFO - ---------------------------------------------
2024-05-14 08:25 - INFO - Epoch: 06 | Time: 6m 29s
2024-05-14 08:25 - INFO - 	 Train Loss: 0.479
2024-05-14 08:25 - INFO - 	 Val. Loss: 0.495
2024-05-14 08:25 - INFO - 	 ROC-AUC: 0.731
2024-05-14 08:25 - INFO - 	 PR-AUC: 0.442
2024-05-14 08:25 - INFO - 	 Recall for 0.4 precision: 0.666
2024-05-14 08:25 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 08:25 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 08:25 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 08:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 08:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 08:25 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 08:25 - INFO - ---------------------------------------------
2024-05-14 08:32 - INFO - ---------------------------------------------
2024-05-14 08:32 - INFO - Epoch: 07 | Time: 6m 30s
2024-05-14 08:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73424
2024-05-14 08:32 - INFO - 	 Train Loss: 0.477
2024-05-14 08:32 - INFO - 	 Val. Loss: 0.494
2024-05-14 08:32 - INFO - 	 ROC-AUC: 0.734
2024-05-14 08:32 - INFO - 	 PR-AUC: 0.450
2024-05-14 08:32 - INFO - 	 Recall for 0.4 precision: 0.666
2024-05-14 08:32 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 08:32 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 08:32 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 08:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 08:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 08:32 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 08:32 - INFO - ---------------------------------------------
2024-05-14 08:38 - INFO - ---------------------------------------------
2024-05-14 08:38 - INFO - Epoch: 08 | Time: 6m 12s
2024-05-14 08:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73603
2024-05-14 08:38 - INFO - 	 Train Loss: 0.476
2024-05-14 08:38 - INFO - 	 Val. Loss: 0.493
2024-05-14 08:38 - INFO - 	 ROC-AUC: 0.736
2024-05-14 08:38 - INFO - 	 PR-AUC: 0.445
2024-05-14 08:38 - INFO - 	 Recall for 0.4 precision: 0.677
2024-05-14 08:38 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 08:38 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 08:38 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 08:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-14 08:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 08:38 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-14 08:38 - INFO - ---------------------------------------------
2024-05-14 08:44 - INFO - ---------------------------------------------
2024-05-14 08:44 - INFO - Epoch: 09 | Time: 6m 31s
2024-05-14 08:44 - INFO - 	 Train Loss: 0.475
2024-05-14 08:44 - INFO - 	 Val. Loss: 0.497
2024-05-14 08:44 - INFO - 	 ROC-AUC: 0.730
2024-05-14 08:44 - INFO - 	 PR-AUC: 0.441
2024-05-14 08:44 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-14 08:44 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 08:44 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 08:44 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 08:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-14 08:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 08:44 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-14 08:44 - INFO - ---------------------------------------------
2024-05-14 08:51 - INFO - ---------------------------------------------
2024-05-14 08:51 - INFO - Epoch: 10 | Time: 6m 28s
2024-05-14 08:51 - INFO - 	 Train Loss: 0.474
2024-05-14 08:51 - INFO - 	 Val. Loss: 0.493
2024-05-14 08:51 - INFO - 	 ROC-AUC: 0.735
2024-05-14 08:51 - INFO - 	 PR-AUC: 0.450
2024-05-14 08:51 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-14 08:51 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 08:51 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 08:51 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 08:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-14 08:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 08:51 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-14 08:51 - INFO - ---------------------------------------------
2024-05-14 08:54 - INFO - Fit the preprocessing pipeline
2024-05-14 08:54 - INFO - Training using device: cuda
2024-05-14 08:54 - INFO - Creating generators
2024-05-14 08:54 - INFO - The model has 651,257 trainable parameters
2024-05-14 08:54 - INFO - * Model:
2024-05-14 08:54 - INFO - * -----------
2024-05-14 08:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 08:54 - INFO - * -----------
2024-05-14 08:54 - INFO - Evaluating model based on: rocauc
2024-05-14 08:54 - INFO - Training..

2024-05-14 09:01 - INFO - ---------------------------------------------
2024-05-14 09:01 - INFO - Epoch: 01 | Time: 6m 26s
2024-05-14 09:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70809
2024-05-14 09:01 - INFO - 	 Train Loss: 0.541
2024-05-14 09:01 - INFO - 	 Val. Loss: 0.511
2024-05-14 09:01 - INFO - 	 ROC-AUC: 0.708
2024-05-14 09:01 - INFO - 	 PR-AUC: 0.420
2024-05-14 09:01 - INFO - 	 Recall for 0.4 precision: 0.572
2024-05-14 09:01 - INFO - 	 Best Val. Loss: 0.511
2024-05-14 09:01 - INFO - 	 Best ROC-AUC: 0.708
2024-05-14 09:01 - INFO - 	 Best PR-AUC: 0.420
2024-05-14 09:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.688
2024-05-14 09:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.397
2024-05-14 09:01 - INFO - 	 Best Recall for 0.4 precision: 0.572
2024-05-14 09:01 - INFO - ---------------------------------------------
2024-05-14 09:08 - INFO - ---------------------------------------------
2024-05-14 09:08 - INFO - Epoch: 02 | Time: 6m 52s
2024-05-14 09:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72224
2024-05-14 09:08 - INFO - 	 Train Loss: 0.501
2024-05-14 09:08 - INFO - 	 Val. Loss: 0.497
2024-05-14 09:08 - INFO - 	 ROC-AUC: 0.722
2024-05-14 09:08 - INFO - 	 PR-AUC: 0.431
2024-05-14 09:08 - INFO - 	 Recall for 0.4 precision: 0.620
2024-05-14 09:08 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 09:08 - INFO - 	 Best ROC-AUC: 0.722
2024-05-14 09:08 - INFO - 	 Best PR-AUC: 0.431
2024-05-14 09:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-05-14 09:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.422
2024-05-14 09:08 - INFO - 	 Best Recall for 0.4 precision: 0.620
2024-05-14 09:08 - INFO - ---------------------------------------------
2024-05-14 09:14 - INFO - ---------------------------------------------
2024-05-14 09:14 - INFO - Epoch: 03 | Time: 6m 0s
2024-05-14 09:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73066
2024-05-14 09:14 - INFO - 	 Train Loss: 0.490
2024-05-14 09:14 - INFO - 	 Val. Loss: 0.501
2024-05-14 09:14 - INFO - 	 ROC-AUC: 0.731
2024-05-14 09:14 - INFO - 	 PR-AUC: 0.443
2024-05-14 09:14 - INFO - 	 Recall for 0.4 precision: 0.675
2024-05-14 09:14 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 09:14 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 09:14 - INFO - 	 Best PR-AUC: 0.443
2024-05-14 09:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 09:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-14 09:14 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-14 09:14 - INFO - ---------------------------------------------
2024-05-14 09:20 - INFO - ---------------------------------------------
2024-05-14 09:20 - INFO - Epoch: 04 | Time: 6m 31s
2024-05-14 09:20 - INFO - 	 Train Loss: 0.486
2024-05-14 09:20 - INFO - 	 Val. Loss: 0.498
2024-05-14 09:20 - INFO - 	 ROC-AUC: 0.728
2024-05-14 09:20 - INFO - 	 PR-AUC: 0.441
2024-05-14 09:20 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-14 09:20 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 09:20 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 09:20 - INFO - 	 Best PR-AUC: 0.443
2024-05-14 09:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 09:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-14 09:20 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-14 09:20 - INFO - ---------------------------------------------
2024-05-14 09:26 - INFO - ---------------------------------------------
2024-05-14 09:26 - INFO - Epoch: 05 | Time: 6m 0s
2024-05-14 09:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73412
2024-05-14 09:26 - INFO - 	 Train Loss: 0.482
2024-05-14 09:26 - INFO - 	 Val. Loss: 0.505
2024-05-14 09:26 - INFO - 	 ROC-AUC: 0.734
2024-05-14 09:26 - INFO - 	 PR-AUC: 0.450
2024-05-14 09:26 - INFO - 	 Recall for 0.4 precision: 0.669
2024-05-14 09:26 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 09:26 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 09:26 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 09:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-14 09:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 09:26 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-14 09:26 - INFO - ---------------------------------------------
2024-05-14 09:33 - INFO - ---------------------------------------------
2024-05-14 09:33 - INFO - Epoch: 06 | Time: 6m 25s
2024-05-14 09:33 - INFO - 	 Train Loss: 0.480
2024-05-14 09:33 - INFO - 	 Val. Loss: 0.499
2024-05-14 09:33 - INFO - 	 ROC-AUC: 0.731
2024-05-14 09:33 - INFO - 	 PR-AUC: 0.448
2024-05-14 09:33 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-14 09:33 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 09:33 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 09:33 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 09:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-14 09:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 09:33 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-14 09:33 - INFO - ---------------------------------------------
2024-05-14 09:40 - INFO - ---------------------------------------------
2024-05-14 09:40 - INFO - Epoch: 07 | Time: 6m 54s
2024-05-14 09:40 - INFO - 	 Train Loss: 0.478
2024-05-14 09:40 - INFO - 	 Val. Loss: 0.496
2024-05-14 09:40 - INFO - 	 ROC-AUC: 0.733
2024-05-14 09:40 - INFO - 	 PR-AUC: 0.446
2024-05-14 09:40 - INFO - 	 Recall for 0.4 precision: 0.668
2024-05-14 09:40 - INFO - 	 Best Val. Loss: 0.496
2024-05-14 09:40 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 09:40 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 09:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-14 09:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 09:40 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-14 09:40 - INFO - ---------------------------------------------
2024-05-14 09:47 - INFO - ---------------------------------------------
2024-05-14 09:47 - INFO - Epoch: 08 | Time: 6m 58s
2024-05-14 09:47 - INFO - 	 Train Loss: 0.476
2024-05-14 09:47 - INFO - 	 Val. Loss: 0.497
2024-05-14 09:47 - INFO - 	 ROC-AUC: 0.729
2024-05-14 09:47 - INFO - 	 PR-AUC: 0.443
2024-05-14 09:47 - INFO - 	 Recall for 0.4 precision: 0.659
2024-05-14 09:47 - INFO - 	 Best Val. Loss: 0.496
2024-05-14 09:47 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 09:47 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-14 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 09:47 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-14 09:47 - INFO - ---------------------------------------------
2024-05-14 09:56 - INFO - Fit the preprocessing pipeline
2024-05-14 09:56 - INFO - Training using device: cuda
2024-05-14 09:56 - INFO - Creating generators
2024-05-14 09:56 - INFO - The model has 651,257 trainable parameters
2024-05-14 09:56 - INFO - * Model:
2024-05-14 09:56 - INFO - * -----------
2024-05-14 09:56 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 09:56 - INFO - * -----------
2024-05-14 09:56 - INFO - Evaluating model based on: rocauc
2024-05-14 09:56 - INFO - Training..

2024-05-14 10:03 - INFO - ---------------------------------------------
2024-05-14 10:03 - INFO - Epoch: 01 | Time: 6m 13s
2024-05-14 10:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70082
2024-05-14 10:03 - INFO - 	 Train Loss: 0.542
2024-05-14 10:03 - INFO - 	 Val. Loss: 0.517
2024-05-14 10:03 - INFO - 	 ROC-AUC: 0.701
2024-05-14 10:03 - INFO - 	 PR-AUC: 0.416
2024-05-14 10:03 - INFO - 	 Recall for 0.4 precision: 0.518
2024-05-14 10:03 - INFO - 	 Best Val. Loss: 0.517
2024-05-14 10:03 - INFO - 	 Best ROC-AUC: 0.701
2024-05-14 10:03 - INFO - 	 Best PR-AUC: 0.416
2024-05-14 10:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.678
2024-05-14 10:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.394
2024-05-14 10:03 - INFO - 	 Best Recall for 0.4 precision: 0.518
2024-05-14 10:03 - INFO - ---------------------------------------------
2024-05-14 10:09 - INFO - ---------------------------------------------
2024-05-14 10:09 - INFO - Epoch: 02 | Time: 6m 33s
2024-05-14 10:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72204
2024-05-14 10:09 - INFO - 	 Train Loss: 0.501
2024-05-14 10:09 - INFO - 	 Val. Loss: 0.503
2024-05-14 10:09 - INFO - 	 ROC-AUC: 0.722
2024-05-14 10:09 - INFO - 	 PR-AUC: 0.436
2024-05-14 10:09 - INFO - 	 Recall for 0.4 precision: 0.625
2024-05-14 10:09 - INFO - 	 Best Val. Loss: 0.503
2024-05-14 10:09 - INFO - 	 Best ROC-AUC: 0.722
2024-05-14 10:09 - INFO - 	 Best PR-AUC: 0.436
2024-05-14 10:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-14 10:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 10:09 - INFO - 	 Best Recall for 0.4 precision: 0.625
2024-05-14 10:09 - INFO - ---------------------------------------------
2024-05-14 10:16 - INFO - ---------------------------------------------
2024-05-14 10:16 - INFO - Epoch: 03 | Time: 7m 2s
2024-05-14 10:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73267
2024-05-14 10:16 - INFO - 	 Train Loss: 0.490
2024-05-14 10:16 - INFO - 	 Val. Loss: 0.494
2024-05-14 10:16 - INFO - 	 ROC-AUC: 0.733
2024-05-14 10:16 - INFO - 	 PR-AUC: 0.449
2024-05-14 10:16 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-14 10:16 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 10:16 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 10:16 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 10:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 10:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-05-14 10:16 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-14 10:16 - INFO - ---------------------------------------------
2024-05-14 10:23 - INFO - ---------------------------------------------
2024-05-14 10:23 - INFO - Epoch: 04 | Time: 6m 32s
2024-05-14 10:23 - INFO - 	 Train Loss: 0.486
2024-05-14 10:23 - INFO - 	 Val. Loss: 0.496
2024-05-14 10:23 - INFO - 	 ROC-AUC: 0.732
2024-05-14 10:23 - INFO - 	 PR-AUC: 0.448
2024-05-14 10:23 - INFO - 	 Recall for 0.4 precision: 0.001
2024-05-14 10:23 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 10:23 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 10:23 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 10:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 10:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-05-14 10:23 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-14 10:23 - INFO - ---------------------------------------------
2024-05-14 10:29 - INFO - ---------------------------------------------
2024-05-14 10:29 - INFO - Epoch: 05 | Time: 6m 34s
2024-05-14 10:29 - INFO - 	 Train Loss: 0.482
2024-05-14 10:29 - INFO - 	 Val. Loss: 0.498
2024-05-14 10:29 - INFO - 	 ROC-AUC: 0.732
2024-05-14 10:29 - INFO - 	 PR-AUC: 0.448
2024-05-14 10:29 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-14 10:29 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 10:29 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 10:29 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 10:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 10:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-05-14 10:29 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-14 10:29 - INFO - ---------------------------------------------
2024-05-14 10:37 - INFO - ---------------------------------------------
2024-05-14 10:37 - INFO - Epoch: 06 | Time: 7m 29s
2024-05-14 10:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73695
2024-05-14 10:37 - INFO - 	 Train Loss: 0.480
2024-05-14 10:37 - INFO - 	 Val. Loss: 0.492
2024-05-14 10:37 - INFO - 	 ROC-AUC: 0.737
2024-05-14 10:37 - INFO - 	 PR-AUC: 0.452
2024-05-14 10:37 - INFO - 	 Recall for 0.4 precision: 0.687
2024-05-14 10:37 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 10:37 - INFO - 	 Best ROC-AUC: 0.737
2024-05-14 10:37 - INFO - 	 Best PR-AUC: 0.452
2024-05-14 10:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 10:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 10:37 - INFO - 	 Best Recall for 0.4 precision: 0.687
2024-05-14 10:37 - INFO - ---------------------------------------------
2024-05-14 10:44 - INFO - ---------------------------------------------
2024-05-14 10:44 - INFO - Epoch: 07 | Time: 6m 47s
2024-05-14 10:44 - INFO - 	 Train Loss: 0.478
2024-05-14 10:44 - INFO - 	 Val. Loss: 0.492
2024-05-14 10:44 - INFO - 	 ROC-AUC: 0.736
2024-05-14 10:44 - INFO - 	 PR-AUC: 0.447
2024-05-14 10:44 - INFO - 	 Recall for 0.4 precision: 0.688
2024-05-14 10:44 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 10:44 - INFO - 	 Best ROC-AUC: 0.737
2024-05-14 10:44 - INFO - 	 Best PR-AUC: 0.452
2024-05-14 10:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 10:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 10:44 - INFO - 	 Best Recall for 0.4 precision: 0.688
2024-05-14 10:44 - INFO - ---------------------------------------------
2024-05-14 10:51 - INFO - ---------------------------------------------
2024-05-14 10:51 - INFO - Epoch: 08 | Time: 7m 22s
2024-05-14 10:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73784
2024-05-14 10:51 - INFO - 	 Train Loss: 0.476
2024-05-14 10:51 - INFO - 	 Val. Loss: 0.490
2024-05-14 10:51 - INFO - 	 ROC-AUC: 0.738
2024-05-14 10:51 - INFO - 	 PR-AUC: 0.451
2024-05-14 10:51 - INFO - 	 Recall for 0.4 precision: 0.687
2024-05-14 10:51 - INFO - 	 Best Val. Loss: 0.490
2024-05-14 10:51 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 10:51 - INFO - 	 Best PR-AUC: 0.452
2024-05-14 10:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-14 10:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 10:51 - INFO - 	 Best Recall for 0.4 precision: 0.688
2024-05-14 10:51 - INFO - ---------------------------------------------
2024-05-14 10:59 - INFO - ---------------------------------------------
2024-05-14 10:59 - INFO - Epoch: 09 | Time: 7m 35s
2024-05-14 10:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73944
2024-05-14 10:59 - INFO - 	 Train Loss: 0.475
2024-05-14 10:59 - INFO - 	 Val. Loss: 0.490
2024-05-14 10:59 - INFO - 	 ROC-AUC: 0.739
2024-05-14 10:59 - INFO - 	 PR-AUC: 0.455
2024-05-14 10:59 - INFO - 	 Recall for 0.4 precision: 0.694
2024-05-14 10:59 - INFO - 	 Best Val. Loss: 0.490
2024-05-14 10:59 - INFO - 	 Best ROC-AUC: 0.739
2024-05-14 10:59 - INFO - 	 Best PR-AUC: 0.455
2024-05-14 10:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 10:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-14 10:59 - INFO - 	 Best Recall for 0.4 precision: 0.694
2024-05-14 10:59 - INFO - ---------------------------------------------
2024-05-14 11:06 - INFO - ---------------------------------------------
2024-05-14 11:06 - INFO - Epoch: 10 | Time: 7m 8s
2024-05-14 11:06 - INFO - 	 Train Loss: 0.474
2024-05-14 11:06 - INFO - 	 Val. Loss: 0.493
2024-05-14 11:06 - INFO - 	 ROC-AUC: 0.736
2024-05-14 11:06 - INFO - 	 PR-AUC: 0.450
2024-05-14 11:06 - INFO - 	 Recall for 0.4 precision: 0.680
2024-05-14 11:06 - INFO - 	 Best Val. Loss: 0.490
2024-05-14 11:06 - INFO - 	 Best ROC-AUC: 0.739
2024-05-14 11:06 - INFO - 	 Best PR-AUC: 0.455
2024-05-14 11:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 11:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-14 11:06 - INFO - 	 Best Recall for 0.4 precision: 0.694
2024-05-14 11:06 - INFO - ---------------------------------------------
2024-05-14 11:12 - INFO - Fit the preprocessing pipeline
2024-05-14 11:12 - INFO - Training using device: cuda
2024-05-14 11:12 - INFO - Creating generators
2024-05-14 11:12 - INFO - The model has 651,257 trainable parameters
2024-05-14 11:12 - INFO - * Model:
2024-05-14 11:12 - INFO - * -----------
2024-05-14 11:12 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 11:12 - INFO - * -----------
2024-05-14 11:12 - INFO - Evaluating model based on: rocauc
2024-05-14 11:12 - INFO - Training..

2024-05-14 11:19 - INFO - ---------------------------------------------
2024-05-14 11:19 - INFO - Epoch: 01 | Time: 6m 58s
2024-05-14 11:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70697
2024-05-14 11:19 - INFO - 	 Train Loss: 0.540
2024-05-14 11:19 - INFO - 	 Val. Loss: 0.516
2024-05-14 11:19 - INFO - 	 ROC-AUC: 0.707
2024-05-14 11:19 - INFO - 	 PR-AUC: 0.422
2024-05-14 11:19 - INFO - 	 Recall for 0.4 precision: 0.551
2024-05-14 11:19 - INFO - 	 Best Val. Loss: 0.516
2024-05-14 11:19 - INFO - 	 Best ROC-AUC: 0.707
2024-05-14 11:19 - INFO - 	 Best PR-AUC: 0.422
2024-05-14 11:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-05-14 11:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-05-14 11:19 - INFO - 	 Best Recall for 0.4 precision: 0.551
2024-05-14 11:19 - INFO - ---------------------------------------------
2024-05-14 11:26 - INFO - ---------------------------------------------
2024-05-14 11:26 - INFO - Epoch: 02 | Time: 7m 20s
2024-05-14 11:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71249
2024-05-14 11:26 - INFO - 	 Train Loss: 0.500
2024-05-14 11:26 - INFO - 	 Val. Loss: 0.520
2024-05-14 11:26 - INFO - 	 ROC-AUC: 0.712
2024-05-14 11:26 - INFO - 	 PR-AUC: 0.419
2024-05-14 11:26 - INFO - 	 Recall for 0.4 precision: 0.001
2024-05-14 11:26 - INFO - 	 Best Val. Loss: 0.516
2024-05-14 11:26 - INFO - 	 Best ROC-AUC: 0.712
2024-05-14 11:26 - INFO - 	 Best PR-AUC: 0.422
2024-05-14 11:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.703
2024-05-14 11:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-05-14 11:26 - INFO - 	 Best Recall for 0.4 precision: 0.551
2024-05-14 11:26 - INFO - ---------------------------------------------
2024-05-14 11:33 - INFO - ---------------------------------------------
2024-05-14 11:33 - INFO - Epoch: 03 | Time: 6m 50s
2024-05-14 11:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72411
2024-05-14 11:33 - INFO - 	 Train Loss: 0.490
2024-05-14 11:33 - INFO - 	 Val. Loss: 0.498
2024-05-14 11:33 - INFO - 	 ROC-AUC: 0.724
2024-05-14 11:33 - INFO - 	 PR-AUC: 0.432
2024-05-14 11:33 - INFO - 	 Recall for 0.4 precision: 0.638
2024-05-14 11:33 - INFO - 	 Best Val. Loss: 0.498
2024-05-14 11:33 - INFO - 	 Best ROC-AUC: 0.724
2024-05-14 11:33 - INFO - 	 Best PR-AUC: 0.432
2024-05-14 11:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-14 11:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-05-14 11:33 - INFO - 	 Best Recall for 0.4 precision: 0.638
2024-05-14 11:33 - INFO - ---------------------------------------------
2024-05-14 11:40 - INFO - ---------------------------------------------
2024-05-14 11:40 - INFO - Epoch: 04 | Time: 7m 24s
2024-05-14 11:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72989
2024-05-14 11:40 - INFO - 	 Train Loss: 0.485
2024-05-14 11:40 - INFO - 	 Val. Loss: 0.496
2024-05-14 11:40 - INFO - 	 ROC-AUC: 0.730
2024-05-14 11:40 - INFO - 	 PR-AUC: 0.441
2024-05-14 11:40 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-14 11:40 - INFO - 	 Best Val. Loss: 0.496
2024-05-14 11:40 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 11:40 - INFO - 	 Best PR-AUC: 0.441
2024-05-14 11:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 11:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 11:40 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-14 11:40 - INFO - ---------------------------------------------
2024-05-14 11:48 - INFO - ---------------------------------------------
2024-05-14 11:48 - INFO - Epoch: 05 | Time: 7m 26s
2024-05-14 11:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73164
2024-05-14 11:48 - INFO - 	 Train Loss: 0.482
2024-05-14 11:48 - INFO - 	 Val. Loss: 0.495
2024-05-14 11:48 - INFO - 	 ROC-AUC: 0.732
2024-05-14 11:48 - INFO - 	 PR-AUC: 0.446
2024-05-14 11:48 - INFO - 	 Recall for 0.4 precision: 0.662
2024-05-14 11:48 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 11:48 - INFO - 	 Best ROC-AUC: 0.732
2024-05-14 11:48 - INFO - 	 Best PR-AUC: 0.446
2024-05-14 11:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 11:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 11:48 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-14 11:48 - INFO - ---------------------------------------------
2024-05-14 11:55 - INFO - ---------------------------------------------
2024-05-14 11:55 - INFO - Epoch: 06 | Time: 7m 7s
2024-05-14 11:55 - INFO - 	 Train Loss: 0.480
2024-05-14 11:55 - INFO - 	 Val. Loss: 0.497
2024-05-14 11:55 - INFO - 	 ROC-AUC: 0.726
2024-05-14 11:55 - INFO - 	 PR-AUC: 0.435
2024-05-14 11:55 - INFO - 	 Recall for 0.4 precision: 0.640
2024-05-14 11:55 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 11:55 - INFO - 	 Best ROC-AUC: 0.732
2024-05-14 11:55 - INFO - 	 Best PR-AUC: 0.446
2024-05-14 11:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 11:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 11:55 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-14 11:55 - INFO - ---------------------------------------------
2024-05-14 12:02 - INFO - ---------------------------------------------
2024-05-14 12:02 - INFO - Epoch: 07 | Time: 7m 4s
2024-05-14 12:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73269
2024-05-14 12:02 - INFO - 	 Train Loss: 0.479
2024-05-14 12:02 - INFO - 	 Val. Loss: 0.494
2024-05-14 12:02 - INFO - 	 ROC-AUC: 0.733
2024-05-14 12:02 - INFO - 	 PR-AUC: 0.447
2024-05-14 12:02 - INFO - 	 Recall for 0.4 precision: 0.002
2024-05-14 12:02 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 12:02 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 12:02 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 12:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 12:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 12:02 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-14 12:02 - INFO - ---------------------------------------------
2024-05-14 12:09 - INFO - ---------------------------------------------
2024-05-14 12:09 - INFO - Epoch: 08 | Time: 7m 6s
2024-05-14 12:09 - INFO - 	 Train Loss: 0.477
2024-05-14 12:09 - INFO - 	 Val. Loss: 0.493
2024-05-14 12:09 - INFO - 	 ROC-AUC: 0.732
2024-05-14 12:09 - INFO - 	 PR-AUC: 0.447
2024-05-14 12:09 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-14 12:09 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 12:09 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 12:09 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 12:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 12:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 12:09 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-14 12:09 - INFO - ---------------------------------------------
2024-05-14 12:17 - INFO - ---------------------------------------------
2024-05-14 12:17 - INFO - Epoch: 09 | Time: 8m 5s
2024-05-14 12:17 - INFO - 	 Train Loss: 0.476
2024-05-14 12:17 - INFO - 	 Val. Loss: 0.495
2024-05-14 12:17 - INFO - 	 ROC-AUC: 0.731
2024-05-14 12:17 - INFO - 	 PR-AUC: 0.443
2024-05-14 12:17 - INFO - 	 Recall for 0.4 precision: 0.664
2024-05-14 12:17 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 12:17 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 12:17 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 12:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 12:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 12:17 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-14 12:17 - INFO - ---------------------------------------------
2024-05-14 12:25 - INFO - ---------------------------------------------
2024-05-14 12:25 - INFO - Epoch: 10 | Time: 7m 12s
2024-05-14 12:25 - INFO - 	 Train Loss: 0.476
2024-05-14 12:25 - INFO - 	 Val. Loss: 0.495
2024-05-14 12:25 - INFO - 	 ROC-AUC: 0.731
2024-05-14 12:25 - INFO - 	 PR-AUC: 0.443
2024-05-14 12:25 - INFO - 	 Recall for 0.4 precision: 0.663
2024-05-14 12:25 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 12:25 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 12:25 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 12:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 12:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 12:25 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-14 12:25 - INFO - ---------------------------------------------
2024-05-14 12:31 - INFO - Fit the preprocessing pipeline
2024-05-14 12:31 - INFO - Training using device: cuda
2024-05-14 12:31 - INFO - Creating generators
2024-05-14 12:31 - INFO - The model has 651,257 trainable parameters
2024-05-14 12:31 - INFO - * Model:
2024-05-14 12:31 - INFO - * -----------
2024-05-14 12:31 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 12:31 - INFO - * -----------
2024-05-14 12:31 - INFO - Evaluating model based on: rocauc
2024-05-14 12:31 - INFO - Training..

2024-05-14 12:38 - INFO - ---------------------------------------------
2024-05-14 12:38 - INFO - Epoch: 01 | Time: 6m 56s
2024-05-14 12:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70433
2024-05-14 12:38 - INFO - 	 Train Loss: 0.541
2024-05-14 12:38 - INFO - 	 Val. Loss: 0.515
2024-05-14 12:38 - INFO - 	 ROC-AUC: 0.704
2024-05-14 12:38 - INFO - 	 PR-AUC: 0.416
2024-05-14 12:38 - INFO - 	 Recall for 0.4 precision: 0.001
2024-05-14 12:38 - INFO - 	 Best Val. Loss: 0.515
2024-05-14 12:38 - INFO - 	 Best ROC-AUC: 0.704
2024-05-14 12:38 - INFO - 	 Best PR-AUC: 0.416
2024-05-14 12:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-05-14 12:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.397
2024-05-14 12:38 - INFO - 	 Best Recall for 0.4 precision: 0.001
2024-05-14 12:38 - INFO - ---------------------------------------------
2024-05-14 12:46 - INFO - ---------------------------------------------
2024-05-14 12:46 - INFO - Epoch: 02 | Time: 7m 43s
2024-05-14 12:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71988
2024-05-14 12:46 - INFO - 	 Train Loss: 0.499
2024-05-14 12:46 - INFO - 	 Val. Loss: 0.499
2024-05-14 12:46 - INFO - 	 ROC-AUC: 0.720
2024-05-14 12:46 - INFO - 	 PR-AUC: 0.429
2024-05-14 12:46 - INFO - 	 Recall for 0.4 precision: 0.611
2024-05-14 12:46 - INFO - 	 Best Val. Loss: 0.499
2024-05-14 12:46 - INFO - 	 Best ROC-AUC: 0.720
2024-05-14 12:46 - INFO - 	 Best PR-AUC: 0.429
2024-05-14 12:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.704
2024-05-14 12:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.418
2024-05-14 12:46 - INFO - 	 Best Recall for 0.4 precision: 0.611
2024-05-14 12:46 - INFO - ---------------------------------------------
2024-05-14 12:53 - INFO - ---------------------------------------------
2024-05-14 12:53 - INFO - Epoch: 03 | Time: 7m 15s
2024-05-14 12:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72982
2024-05-14 12:53 - INFO - 	 Train Loss: 0.490
2024-05-14 12:53 - INFO - 	 Val. Loss: 0.495
2024-05-14 12:53 - INFO - 	 ROC-AUC: 0.730
2024-05-14 12:53 - INFO - 	 PR-AUC: 0.440
2024-05-14 12:53 - INFO - 	 Recall for 0.4 precision: 0.659
2024-05-14 12:53 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 12:53 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 12:53 - INFO - 	 Best PR-AUC: 0.440
2024-05-14 12:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 12:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-14 12:53 - INFO - 	 Best Recall for 0.4 precision: 0.659
2024-05-14 12:53 - INFO - ---------------------------------------------
2024-05-14 13:00 - INFO - ---------------------------------------------
2024-05-14 13:00 - INFO - Epoch: 04 | Time: 6m 43s
2024-05-14 13:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73087
2024-05-14 13:00 - INFO - 	 Train Loss: 0.485
2024-05-14 13:00 - INFO - 	 Val. Loss: 0.495
2024-05-14 13:00 - INFO - 	 ROC-AUC: 0.731
2024-05-14 13:00 - INFO - 	 PR-AUC: 0.438
2024-05-14 13:00 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-14 13:00 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 13:00 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 13:00 - INFO - 	 Best PR-AUC: 0.440
2024-05-14 13:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 13:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-14 13:00 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 13:00 - INFO - ---------------------------------------------
2024-05-14 13:07 - INFO - ---------------------------------------------
2024-05-14 13:07 - INFO - Epoch: 05 | Time: 6m 46s
2024-05-14 13:07 - INFO - 	 Train Loss: 0.482
2024-05-14 13:07 - INFO - 	 Val. Loss: 0.497
2024-05-14 13:07 - INFO - 	 ROC-AUC: 0.730
2024-05-14 13:07 - INFO - 	 PR-AUC: 0.439
2024-05-14 13:07 - INFO - 	 Recall for 0.4 precision: 0.658
2024-05-14 13:07 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 13:07 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 13:07 - INFO - 	 Best PR-AUC: 0.440
2024-05-14 13:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 13:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-14 13:07 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 13:07 - INFO - ---------------------------------------------
2024-05-14 13:14 - INFO - ---------------------------------------------
2024-05-14 13:14 - INFO - Epoch: 06 | Time: 7m 47s
2024-05-14 13:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73241
2024-05-14 13:14 - INFO - 	 Train Loss: 0.479
2024-05-14 13:14 - INFO - 	 Val. Loss: 0.495
2024-05-14 13:14 - INFO - 	 ROC-AUC: 0.732
2024-05-14 13:14 - INFO - 	 PR-AUC: 0.442
2024-05-14 13:14 - INFO - 	 Recall for 0.4 precision: 0.668
2024-05-14 13:14 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 13:14 - INFO - 	 Best ROC-AUC: 0.732
2024-05-14 13:14 - INFO - 	 Best PR-AUC: 0.442
2024-05-14 13:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 13:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 13:14 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 13:14 - INFO - ---------------------------------------------
2024-05-14 13:22 - INFO - ---------------------------------------------
2024-05-14 13:22 - INFO - Epoch: 07 | Time: 7m 10s
2024-05-14 13:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73495
2024-05-14 13:22 - INFO - 	 Train Loss: 0.478
2024-05-14 13:22 - INFO - 	 Val. Loss: 0.494
2024-05-14 13:22 - INFO - 	 ROC-AUC: 0.735
2024-05-14 13:22 - INFO - 	 PR-AUC: 0.445
2024-05-14 13:22 - INFO - 	 Recall for 0.4 precision: 0.679
2024-05-14 13:22 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 13:22 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 13:22 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 13:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 13:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-14 13:22 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-14 13:22 - INFO - ---------------------------------------------
2024-05-14 13:28 - INFO - ---------------------------------------------
2024-05-14 13:28 - INFO - Epoch: 08 | Time: 6m 47s
2024-05-14 13:28 - INFO - 	 Train Loss: 0.476
2024-05-14 13:28 - INFO - 	 Val. Loss: 0.496
2024-05-14 13:28 - INFO - 	 ROC-AUC: 0.731
2024-05-14 13:28 - INFO - 	 PR-AUC: 0.445
2024-05-14 13:28 - INFO - 	 Recall for 0.4 precision: 0.002
2024-05-14 13:28 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 13:28 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 13:28 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 13:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 13:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-14 13:28 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-14 13:28 - INFO - ---------------------------------------------
2024-05-14 13:36 - INFO - ---------------------------------------------
2024-05-14 13:36 - INFO - Epoch: 09 | Time: 7m 15s
2024-05-14 13:36 - INFO - 	 Train Loss: 0.474
2024-05-14 13:36 - INFO - 	 Val. Loss: 0.496
2024-05-14 13:36 - INFO - 	 ROC-AUC: 0.731
2024-05-14 13:36 - INFO - 	 PR-AUC: 0.440
2024-05-14 13:36 - INFO - 	 Recall for 0.4 precision: 0.684
2024-05-14 13:36 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 13:36 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 13:36 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 13:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 13:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-14 13:36 - INFO - 	 Best Recall for 0.4 precision: 0.684
2024-05-14 13:36 - INFO - ---------------------------------------------
2024-05-14 13:42 - INFO - ---------------------------------------------
2024-05-14 13:42 - INFO - Epoch: 10 | Time: 6m 47s
2024-05-14 13:42 - INFO - 	 Train Loss: 0.474
2024-05-14 13:42 - INFO - 	 Val. Loss: 0.498
2024-05-14 13:42 - INFO - 	 ROC-AUC: 0.731
2024-05-14 13:42 - INFO - 	 PR-AUC: 0.446
2024-05-14 13:42 - INFO - 	 Recall for 0.4 precision: 0.675
2024-05-14 13:42 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 13:42 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 13:42 - INFO - 	 Best PR-AUC: 0.446
2024-05-14 13:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 13:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-14 13:42 - INFO - 	 Best Recall for 0.4 precision: 0.684
2024-05-14 13:42 - INFO - ---------------------------------------------
2024-05-14 13:49 - INFO - Fit the preprocessing pipeline
2024-05-14 13:49 - INFO - Training using device: cuda
2024-05-14 13:49 - INFO - Creating generators
2024-05-14 13:49 - INFO - The model has 651,257 trainable parameters
2024-05-14 13:49 - INFO - * Model:
2024-05-14 13:49 - INFO - * -----------
2024-05-14 13:49 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 13:49 - INFO - * -----------
2024-05-14 13:49 - INFO - Evaluating model based on: rocauc
2024-05-14 13:49 - INFO - Training..

2024-05-14 13:56 - INFO - ---------------------------------------------
2024-05-14 13:56 - INFO - Epoch: 01 | Time: 7m 16s
2024-05-14 13:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70937
2024-05-14 13:56 - INFO - 	 Train Loss: 0.540
2024-05-14 13:56 - INFO - 	 Val. Loss: 0.505
2024-05-14 13:56 - INFO - 	 ROC-AUC: 0.709
2024-05-14 13:56 - INFO - 	 PR-AUC: 0.424
2024-05-14 13:56 - INFO - 	 Recall for 0.4 precision: 0.585
2024-05-14 13:56 - INFO - 	 Best Val. Loss: 0.505
2024-05-14 13:56 - INFO - 	 Best ROC-AUC: 0.709
2024-05-14 13:56 - INFO - 	 Best PR-AUC: 0.424
2024-05-14 13:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-05-14 13:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.396
2024-05-14 13:56 - INFO - 	 Best Recall for 0.4 precision: 0.585
2024-05-14 13:56 - INFO - ---------------------------------------------
2024-05-14 14:03 - INFO - ---------------------------------------------
2024-05-14 14:03 - INFO - Epoch: 02 | Time: 7m 27s
2024-05-14 14:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72532
2024-05-14 14:03 - INFO - 	 Train Loss: 0.500
2024-05-14 14:03 - INFO - 	 Val. Loss: 0.496
2024-05-14 14:03 - INFO - 	 ROC-AUC: 0.725
2024-05-14 14:03 - INFO - 	 PR-AUC: 0.437
2024-05-14 14:03 - INFO - 	 Recall for 0.4 precision: 0.633
2024-05-14 14:03 - INFO - 	 Best Val. Loss: 0.496
2024-05-14 14:03 - INFO - 	 Best ROC-AUC: 0.725
2024-05-14 14:03 - INFO - 	 Best PR-AUC: 0.437
2024-05-14 14:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.706
2024-05-14 14:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.424
2024-05-14 14:03 - INFO - 	 Best Recall for 0.4 precision: 0.633
2024-05-14 14:03 - INFO - ---------------------------------------------
2024-05-14 14:11 - INFO - ---------------------------------------------
2024-05-14 14:11 - INFO - Epoch: 03 | Time: 7m 11s
2024-05-14 14:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72922
2024-05-14 14:11 - INFO - 	 Train Loss: 0.491
2024-05-14 14:11 - INFO - 	 Val. Loss: 0.496
2024-05-14 14:11 - INFO - 	 ROC-AUC: 0.729
2024-05-14 14:11 - INFO - 	 PR-AUC: 0.440
2024-05-14 14:11 - INFO - 	 Recall for 0.4 precision: 0.658
2024-05-14 14:11 - INFO - 	 Best Val. Loss: 0.496
2024-05-14 14:11 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 14:11 - INFO - 	 Best PR-AUC: 0.440
2024-05-14 14:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-14 14:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-05-14 14:11 - INFO - 	 Best Recall for 0.4 precision: 0.658
2024-05-14 14:11 - INFO - ---------------------------------------------
2024-05-14 14:17 - INFO - ---------------------------------------------
2024-05-14 14:17 - INFO - Epoch: 04 | Time: 6m 46s
2024-05-14 14:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73187
2024-05-14 14:17 - INFO - 	 Train Loss: 0.485
2024-05-14 14:17 - INFO - 	 Val. Loss: 0.493
2024-05-14 14:17 - INFO - 	 ROC-AUC: 0.732
2024-05-14 14:17 - INFO - 	 PR-AUC: 0.442
2024-05-14 14:17 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-14 14:17 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 14:17 - INFO - 	 Best ROC-AUC: 0.732
2024-05-14 14:17 - INFO - 	 Best PR-AUC: 0.442
2024-05-14 14:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 14:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-14 14:17 - INFO - 	 Best Recall for 0.4 precision: 0.658
2024-05-14 14:17 - INFO - ---------------------------------------------
2024-05-14 14:24 - INFO - ---------------------------------------------
2024-05-14 14:24 - INFO - Epoch: 05 | Time: 6m 58s
2024-05-14 14:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73386
2024-05-14 14:24 - INFO - 	 Train Loss: 0.482
2024-05-14 14:24 - INFO - 	 Val. Loss: 0.494
2024-05-14 14:24 - INFO - 	 ROC-AUC: 0.734
2024-05-14 14:24 - INFO - 	 PR-AUC: 0.448
2024-05-14 14:24 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-14 14:24 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 14:24 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 14:24 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-14 14:24 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-14 14:24 - INFO - ---------------------------------------------
2024-05-14 14:31 - INFO - ---------------------------------------------
2024-05-14 14:31 - INFO - Epoch: 06 | Time: 6m 49s
2024-05-14 14:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73782
2024-05-14 14:31 - INFO - 	 Train Loss: 0.480
2024-05-14 14:31 - INFO - 	 Val. Loss: 0.498
2024-05-14 14:31 - INFO - 	 ROC-AUC: 0.738
2024-05-14 14:31 - INFO - 	 PR-AUC: 0.449
2024-05-14 14:31 - INFO - 	 Recall for 0.4 precision: 0.691
2024-05-14 14:31 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 14:31 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 14:31 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 14:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 14:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 14:31 - INFO - 	 Best Recall for 0.4 precision: 0.691
2024-05-14 14:31 - INFO - ---------------------------------------------
2024-05-14 14:38 - INFO - ---------------------------------------------
2024-05-14 14:38 - INFO - Epoch: 07 | Time: 6m 51s
2024-05-14 14:38 - INFO - 	 Train Loss: 0.478
2024-05-14 14:38 - INFO - 	 Val. Loss: 0.492
2024-05-14 14:38 - INFO - 	 ROC-AUC: 0.738
2024-05-14 14:38 - INFO - 	 PR-AUC: 0.444
2024-05-14 14:38 - INFO - 	 Recall for 0.4 precision: 0.691
2024-05-14 14:38 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 14:38 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 14:38 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 14:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 14:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 14:38 - INFO - 	 Best Recall for 0.4 precision: 0.691
2024-05-14 14:38 - INFO - ---------------------------------------------
2024-05-14 14:46 - INFO - ---------------------------------------------
2024-05-14 14:46 - INFO - Epoch: 08 | Time: 7m 40s
2024-05-14 14:46 - INFO - 	 Train Loss: 0.477
2024-05-14 14:46 - INFO - 	 Val. Loss: 0.497
2024-05-14 14:46 - INFO - 	 ROC-AUC: 0.730
2024-05-14 14:46 - INFO - 	 PR-AUC: 0.436
2024-05-14 14:46 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-14 14:46 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 14:46 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 14:46 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 14:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 14:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 14:46 - INFO - 	 Best Recall for 0.4 precision: 0.691
2024-05-14 14:46 - INFO - ---------------------------------------------
2024-05-14 14:53 - INFO - ---------------------------------------------
2024-05-14 14:53 - INFO - Epoch: 09 | Time: 7m 8s
2024-05-14 14:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73931
2024-05-14 14:53 - INFO - 	 Train Loss: 0.476
2024-05-14 14:53 - INFO - 	 Val. Loss: 0.497
2024-05-14 14:53 - INFO - 	 ROC-AUC: 0.739
2024-05-14 14:53 - INFO - 	 PR-AUC: 0.451
2024-05-14 14:53 - INFO - 	 Recall for 0.4 precision: 0.690
2024-05-14 14:53 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 14:53 - INFO - 	 Best ROC-AUC: 0.739
2024-05-14 14:53 - INFO - 	 Best PR-AUC: 0.451
2024-05-14 14:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-14 14:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.448
2024-05-14 14:53 - INFO - 	 Best Recall for 0.4 precision: 0.691
2024-05-14 14:53 - INFO - ---------------------------------------------
2024-05-14 15:00 - INFO - ---------------------------------------------
2024-05-14 15:00 - INFO - Epoch: 10 | Time: 7m 12s
2024-05-14 15:00 - INFO - 	 Train Loss: 0.475
2024-05-14 15:00 - INFO - 	 Val. Loss: 0.493
2024-05-14 15:00 - INFO - 	 ROC-AUC: 0.738
2024-05-14 15:00 - INFO - 	 PR-AUC: 0.451
2024-05-14 15:00 - INFO - 	 Recall for 0.4 precision: 0.687
2024-05-14 15:00 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 15:00 - INFO - 	 Best ROC-AUC: 0.739
2024-05-14 15:00 - INFO - 	 Best PR-AUC: 0.451
2024-05-14 15:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-14 15:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-14 15:00 - INFO - 	 Best Recall for 0.4 precision: 0.691
2024-05-14 15:00 - INFO - ---------------------------------------------
2024-05-14 15:07 - INFO - Fit the preprocessing pipeline
2024-05-14 15:07 - INFO - Training using device: cuda
2024-05-14 15:07 - INFO - Creating generators
2024-05-14 15:07 - INFO - The model has 651,257 trainable parameters
2024-05-14 15:07 - INFO - * Model:
2024-05-14 15:07 - INFO - * -----------
2024-05-14 15:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 15:07 - INFO - * -----------
2024-05-14 15:07 - INFO - Evaluating model based on: rocauc
2024-05-14 15:07 - INFO - Training..

2024-05-14 15:13 - INFO - ---------------------------------------------
2024-05-14 15:13 - INFO - Epoch: 01 | Time: 6m 46s
2024-05-14 15:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70721
2024-05-14 15:13 - INFO - 	 Train Loss: 0.541
2024-05-14 15:13 - INFO - 	 Val. Loss: 0.522
2024-05-14 15:13 - INFO - 	 ROC-AUC: 0.707
2024-05-14 15:13 - INFO - 	 PR-AUC: 0.419
2024-05-14 15:13 - INFO - 	 Recall for 0.4 precision: 0.583
2024-05-14 15:13 - INFO - 	 Best Val. Loss: 0.522
2024-05-14 15:13 - INFO - 	 Best ROC-AUC: 0.707
2024-05-14 15:13 - INFO - 	 Best PR-AUC: 0.419
2024-05-14 15:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-05-14 15:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.394
2024-05-14 15:13 - INFO - 	 Best Recall for 0.4 precision: 0.583
2024-05-14 15:13 - INFO - ---------------------------------------------
2024-05-14 15:21 - INFO - ---------------------------------------------
2024-05-14 15:21 - INFO - Epoch: 02 | Time: 7m 38s
2024-05-14 15:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7164
2024-05-14 15:21 - INFO - 	 Train Loss: 0.501
2024-05-14 15:21 - INFO - 	 Val. Loss: 0.505
2024-05-14 15:21 - INFO - 	 ROC-AUC: 0.716
2024-05-14 15:21 - INFO - 	 PR-AUC: 0.424
2024-05-14 15:21 - INFO - 	 Recall for 0.4 precision: 0.606
2024-05-14 15:21 - INFO - 	 Best Val. Loss: 0.505
2024-05-14 15:21 - INFO - 	 Best ROC-AUC: 0.716
2024-05-14 15:21 - INFO - 	 Best PR-AUC: 0.424
2024-05-14 15:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.703
2024-05-14 15:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.417
2024-05-14 15:21 - INFO - 	 Best Recall for 0.4 precision: 0.606
2024-05-14 15:21 - INFO - ---------------------------------------------
2024-05-14 15:28 - INFO - ---------------------------------------------
2024-05-14 15:28 - INFO - Epoch: 03 | Time: 7m 16s
2024-05-14 15:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72445
2024-05-14 15:28 - INFO - 	 Train Loss: 0.491
2024-05-14 15:28 - INFO - 	 Val. Loss: 0.501
2024-05-14 15:28 - INFO - 	 ROC-AUC: 0.724
2024-05-14 15:28 - INFO - 	 PR-AUC: 0.432
2024-05-14 15:28 - INFO - 	 Recall for 0.4 precision: 0.640
2024-05-14 15:28 - INFO - 	 Best Val. Loss: 0.501
2024-05-14 15:28 - INFO - 	 Best ROC-AUC: 0.724
2024-05-14 15:28 - INFO - 	 Best PR-AUC: 0.432
2024-05-14 15:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.708
2024-05-14 15:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-05-14 15:28 - INFO - 	 Best Recall for 0.4 precision: 0.640
2024-05-14 15:28 - INFO - ---------------------------------------------
2024-05-14 15:36 - INFO - ---------------------------------------------
2024-05-14 15:36 - INFO - Epoch: 04 | Time: 7m 17s
2024-05-14 15:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72755
2024-05-14 15:36 - INFO - 	 Train Loss: 0.485
2024-05-14 15:36 - INFO - 	 Val. Loss: 0.498
2024-05-14 15:36 - INFO - 	 ROC-AUC: 0.728
2024-05-14 15:36 - INFO - 	 PR-AUC: 0.437
2024-05-14 15:36 - INFO - 	 Recall for 0.4 precision: 0.655
2024-05-14 15:36 - INFO - 	 Best Val. Loss: 0.498
2024-05-14 15:36 - INFO - 	 Best ROC-AUC: 0.728
2024-05-14 15:36 - INFO - 	 Best PR-AUC: 0.437
2024-05-14 15:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-14 15:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 15:36 - INFO - 	 Best Recall for 0.4 precision: 0.655
2024-05-14 15:36 - INFO - ---------------------------------------------
2024-05-14 15:42 - INFO - ---------------------------------------------
2024-05-14 15:42 - INFO - Epoch: 05 | Time: 6m 47s
2024-05-14 15:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72884
2024-05-14 15:42 - INFO - 	 Train Loss: 0.482
2024-05-14 15:42 - INFO - 	 Val. Loss: 0.497
2024-05-14 15:42 - INFO - 	 ROC-AUC: 0.729
2024-05-14 15:42 - INFO - 	 PR-AUC: 0.444
2024-05-14 15:42 - INFO - 	 Recall for 0.4 precision: 0.655
2024-05-14 15:42 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 15:42 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 15:42 - INFO - 	 Best PR-AUC: 0.444
2024-05-14 15:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-14 15:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 15:42 - INFO - 	 Best Recall for 0.4 precision: 0.655
2024-05-14 15:42 - INFO - ---------------------------------------------
2024-05-14 15:50 - INFO - ---------------------------------------------
2024-05-14 15:50 - INFO - Epoch: 06 | Time: 7m 7s
2024-05-14 15:50 - INFO - 	 Train Loss: 0.480
2024-05-14 15:50 - INFO - 	 Val. Loss: 0.501
2024-05-14 15:50 - INFO - 	 ROC-AUC: 0.726
2024-05-14 15:50 - INFO - 	 PR-AUC: 0.436
2024-05-14 15:50 - INFO - 	 Recall for 0.4 precision: 0.650
2024-05-14 15:50 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 15:50 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 15:50 - INFO - 	 Best PR-AUC: 0.444
2024-05-14 15:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-14 15:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 15:50 - INFO - 	 Best Recall for 0.4 precision: 0.655
2024-05-14 15:50 - INFO - ---------------------------------------------
2024-05-14 15:56 - INFO - ---------------------------------------------
2024-05-14 15:56 - INFO - Epoch: 07 | Time: 6m 45s
2024-05-14 15:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72911
2024-05-14 15:56 - INFO - 	 Train Loss: 0.478
2024-05-14 15:56 - INFO - 	 Val. Loss: 0.496
2024-05-14 15:56 - INFO - 	 ROC-AUC: 0.729
2024-05-14 15:56 - INFO - 	 PR-AUC: 0.438
2024-05-14 15:56 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-14 15:56 - INFO - 	 Best Val. Loss: 0.496
2024-05-14 15:56 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 15:56 - INFO - 	 Best PR-AUC: 0.444
2024-05-14 15:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-14 15:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 15:56 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-14 15:56 - INFO - ---------------------------------------------
2024-05-14 16:03 - INFO - ---------------------------------------------
2024-05-14 16:03 - INFO - Epoch: 08 | Time: 6m 48s
2024-05-14 16:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72982
2024-05-14 16:03 - INFO - 	 Train Loss: 0.476
2024-05-14 16:03 - INFO - 	 Val. Loss: 0.496
2024-05-14 16:03 - INFO - 	 ROC-AUC: 0.730
2024-05-14 16:03 - INFO - 	 PR-AUC: 0.440
2024-05-14 16:03 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-14 16:03 - INFO - 	 Best Val. Loss: 0.496
2024-05-14 16:03 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 16:03 - INFO - 	 Best PR-AUC: 0.444
2024-05-14 16:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-14 16:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 16:03 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-14 16:03 - INFO - ---------------------------------------------
2024-05-14 16:10 - INFO - ---------------------------------------------
2024-05-14 16:10 - INFO - Epoch: 09 | Time: 6m 47s
2024-05-14 16:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73357
2024-05-14 16:10 - INFO - 	 Train Loss: 0.475
2024-05-14 16:10 - INFO - 	 Val. Loss: 0.496
2024-05-14 16:10 - INFO - 	 ROC-AUC: 0.734
2024-05-14 16:10 - INFO - 	 PR-AUC: 0.444
2024-05-14 16:10 - INFO - 	 Recall for 0.4 precision: 0.688
2024-05-14 16:10 - INFO - 	 Best Val. Loss: 0.496
2024-05-14 16:10 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 16:10 - INFO - 	 Best PR-AUC: 0.444
2024-05-14 16:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 16:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 16:10 - INFO - 	 Best Recall for 0.4 precision: 0.688
2024-05-14 16:10 - INFO - ---------------------------------------------
2024-05-14 16:17 - INFO - ---------------------------------------------
2024-05-14 16:17 - INFO - Epoch: 10 | Time: 7m 12s
2024-05-14 16:17 - INFO - 	 Train Loss: 0.474
2024-05-14 16:17 - INFO - 	 Val. Loss: 0.494
2024-05-14 16:17 - INFO - 	 ROC-AUC: 0.733
2024-05-14 16:17 - INFO - 	 PR-AUC: 0.444
2024-05-14 16:17 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-14 16:17 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 16:17 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 16:17 - INFO - 	 Best PR-AUC: 0.444
2024-05-14 16:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 16:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-14 16:17 - INFO - 	 Best Recall for 0.4 precision: 0.688
2024-05-14 16:17 - INFO - ---------------------------------------------
2024-05-14 16:23 - INFO - Fit the preprocessing pipeline
2024-05-14 16:23 - INFO - Training using device: cuda
2024-05-14 16:23 - INFO - Creating generators
2024-05-14 16:23 - INFO - The model has 651,257 trainable parameters
2024-05-14 16:23 - INFO - * Model:
2024-05-14 16:23 - INFO - * -----------
2024-05-14 16:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 16:23 - INFO - * -----------
2024-05-14 16:23 - INFO - Evaluating model based on: rocauc
2024-05-14 16:23 - INFO - Training..

2024-05-14 16:31 - INFO - ---------------------------------------------
2024-05-14 16:31 - INFO - Epoch: 01 | Time: 7m 15s
2024-05-14 16:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70231
2024-05-14 16:31 - INFO - 	 Train Loss: 0.541
2024-05-14 16:31 - INFO - 	 Val. Loss: 0.523
2024-05-14 16:31 - INFO - 	 ROC-AUC: 0.702
2024-05-14 16:31 - INFO - 	 PR-AUC: 0.415
2024-05-14 16:31 - INFO - 	 Recall for 0.4 precision: 0.536
2024-05-14 16:31 - INFO - 	 Best Val. Loss: 0.523
2024-05-14 16:31 - INFO - 	 Best ROC-AUC: 0.702
2024-05-14 16:31 - INFO - 	 Best PR-AUC: 0.415
2024-05-14 16:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.674
2024-05-14 16:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.387
2024-05-14 16:31 - INFO - 	 Best Recall for 0.4 precision: 0.536
2024-05-14 16:31 - INFO - ---------------------------------------------
2024-05-14 16:38 - INFO - ---------------------------------------------
2024-05-14 16:38 - INFO - Epoch: 02 | Time: 7m 38s
2024-05-14 16:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72494
2024-05-14 16:38 - INFO - 	 Train Loss: 0.498
2024-05-14 16:38 - INFO - 	 Val. Loss: 0.502
2024-05-14 16:38 - INFO - 	 ROC-AUC: 0.725
2024-05-14 16:38 - INFO - 	 PR-AUC: 0.434
2024-05-14 16:38 - INFO - 	 Recall for 0.4 precision: 0.641
2024-05-14 16:38 - INFO - 	 Best Val. Loss: 0.502
2024-05-14 16:38 - INFO - 	 Best ROC-AUC: 0.725
2024-05-14 16:38 - INFO - 	 Best PR-AUC: 0.434
2024-05-14 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.706
2024-05-14 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 16:38 - INFO - 	 Best Recall for 0.4 precision: 0.641
2024-05-14 16:38 - INFO - ---------------------------------------------
2024-05-14 16:45 - INFO - ---------------------------------------------
2024-05-14 16:45 - INFO - Epoch: 03 | Time: 7m 10s
2024-05-14 16:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72954
2024-05-14 16:45 - INFO - 	 Train Loss: 0.488
2024-05-14 16:45 - INFO - 	 Val. Loss: 0.500
2024-05-14 16:45 - INFO - 	 ROC-AUC: 0.730
2024-05-14 16:45 - INFO - 	 PR-AUC: 0.438
2024-05-14 16:45 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-14 16:45 - INFO - 	 Best Val. Loss: 0.500
2024-05-14 16:45 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 16:45 - INFO - 	 Best PR-AUC: 0.438
2024-05-14 16:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-14 16:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-14 16:45 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-14 16:45 - INFO - ---------------------------------------------
2024-05-14 16:52 - INFO - ---------------------------------------------
2024-05-14 16:52 - INFO - Epoch: 04 | Time: 6m 44s
2024-05-14 16:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73541
2024-05-14 16:52 - INFO - 	 Train Loss: 0.484
2024-05-14 16:52 - INFO - 	 Val. Loss: 0.491
2024-05-14 16:52 - INFO - 	 ROC-AUC: 0.735
2024-05-14 16:52 - INFO - 	 PR-AUC: 0.447
2024-05-14 16:52 - INFO - 	 Recall for 0.4 precision: 0.684
2024-05-14 16:52 - INFO - 	 Best Val. Loss: 0.491
2024-05-14 16:52 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 16:52 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 16:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-14 16:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-14 16:52 - INFO - 	 Best Recall for 0.4 precision: 0.684
2024-05-14 16:52 - INFO - ---------------------------------------------
2024-05-14 17:00 - INFO - ---------------------------------------------
2024-05-14 17:00 - INFO - Epoch: 05 | Time: 7m 19s
2024-05-14 17:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73586
2024-05-14 17:00 - INFO - 	 Train Loss: 0.481
2024-05-14 17:00 - INFO - 	 Val. Loss: 0.492
2024-05-14 17:00 - INFO - 	 ROC-AUC: 0.736
2024-05-14 17:00 - INFO - 	 PR-AUC: 0.445
2024-05-14 17:00 - INFO - 	 Recall for 0.4 precision: 0.687
2024-05-14 17:00 - INFO - 	 Best Val. Loss: 0.491
2024-05-14 17:00 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 17:00 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 17:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-14 17:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-14 17:00 - INFO - 	 Best Recall for 0.4 precision: 0.687
2024-05-14 17:00 - INFO - ---------------------------------------------
2024-05-14 17:07 - INFO - ---------------------------------------------
2024-05-14 17:07 - INFO - Epoch: 06 | Time: 7m 15s
2024-05-14 17:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7376
2024-05-14 17:07 - INFO - 	 Train Loss: 0.479
2024-05-14 17:07 - INFO - 	 Val. Loss: 0.491
2024-05-14 17:07 - INFO - 	 ROC-AUC: 0.738
2024-05-14 17:07 - INFO - 	 PR-AUC: 0.450
2024-05-14 17:07 - INFO - 	 Recall for 0.4 precision: 0.690
2024-05-14 17:07 - INFO - 	 Best Val. Loss: 0.491
2024-05-14 17:07 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 17:07 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 17:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 17:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-14 17:07 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-14 17:07 - INFO - ---------------------------------------------
2024-05-14 17:14 - INFO - ---------------------------------------------
2024-05-14 17:14 - INFO - Epoch: 07 | Time: 7m 15s
2024-05-14 17:14 - INFO - 	 Train Loss: 0.477
2024-05-14 17:14 - INFO - 	 Val. Loss: 0.493
2024-05-14 17:14 - INFO - 	 ROC-AUC: 0.735
2024-05-14 17:14 - INFO - 	 PR-AUC: 0.446
2024-05-14 17:14 - INFO - 	 Recall for 0.4 precision: 0.684
2024-05-14 17:14 - INFO - 	 Best Val. Loss: 0.491
2024-05-14 17:14 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 17:14 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-14 17:14 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-14 17:14 - INFO - ---------------------------------------------
2024-05-14 17:21 - INFO - ---------------------------------------------
2024-05-14 17:21 - INFO - Epoch: 08 | Time: 7m 10s
2024-05-14 17:21 - INFO - 	 Train Loss: 0.475
2024-05-14 17:21 - INFO - 	 Val. Loss: 0.493
2024-05-14 17:21 - INFO - 	 ROC-AUC: 0.737
2024-05-14 17:21 - INFO - 	 PR-AUC: 0.450
2024-05-14 17:21 - INFO - 	 Recall for 0.4 precision: 0.007
2024-05-14 17:21 - INFO - 	 Best Val. Loss: 0.491
2024-05-14 17:21 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 17:21 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-14 17:21 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-14 17:21 - INFO - ---------------------------------------------
2024-05-14 17:29 - INFO - ---------------------------------------------
2024-05-14 17:29 - INFO - Epoch: 09 | Time: 8m 7s
2024-05-14 17:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73765
2024-05-14 17:29 - INFO - 	 Train Loss: 0.474
2024-05-14 17:29 - INFO - 	 Val. Loss: 0.495
2024-05-14 17:29 - INFO - 	 ROC-AUC: 0.738
2024-05-14 17:29 - INFO - 	 PR-AUC: 0.448
2024-05-14 17:29 - INFO - 	 Recall for 0.4 precision: 0.008
2024-05-14 17:29 - INFO - 	 Best Val. Loss: 0.491
2024-05-14 17:29 - INFO - 	 Best ROC-AUC: 0.738
2024-05-14 17:29 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-14 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-14 17:29 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-14 17:29 - INFO - ---------------------------------------------
2024-05-14 17:37 - INFO - ---------------------------------------------
2024-05-14 17:37 - INFO - Epoch: 10 | Time: 7m 11s
2024-05-14 17:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73958
2024-05-14 17:37 - INFO - 	 Train Loss: 0.473
2024-05-14 17:37 - INFO - 	 Val. Loss: 0.493
2024-05-14 17:37 - INFO - 	 ROC-AUC: 0.740
2024-05-14 17:37 - INFO - 	 PR-AUC: 0.454
2024-05-14 17:37 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-14 17:37 - INFO - 	 Best Val. Loss: 0.491
2024-05-14 17:37 - INFO - 	 Best ROC-AUC: 0.740
2024-05-14 17:37 - INFO - 	 Best PR-AUC: 0.454
2024-05-14 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-14 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-14 17:37 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-14 17:37 - INFO - ---------------------------------------------
2024-05-14 17:43 - INFO - Fit the preprocessing pipeline
2024-05-14 17:43 - INFO - Training using device: cuda
2024-05-14 17:43 - INFO - Creating generators
2024-05-14 17:43 - INFO - The model has 651,257 trainable parameters
2024-05-14 17:43 - INFO - * Model:
2024-05-14 17:43 - INFO - * -----------
2024-05-14 17:43 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 17:43 - INFO - * -----------
2024-05-14 17:43 - INFO - Evaluating model based on: rocauc
2024-05-14 17:43 - INFO - Training..

2024-05-14 17:50 - INFO - ---------------------------------------------
2024-05-14 17:50 - INFO - Epoch: 01 | Time: 6m 52s
2024-05-14 17:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70046
2024-05-14 17:50 - INFO - 	 Train Loss: 0.541
2024-05-14 17:50 - INFO - 	 Val. Loss: 0.525
2024-05-14 17:50 - INFO - 	 ROC-AUC: 0.700
2024-05-14 17:50 - INFO - 	 PR-AUC: 0.419
2024-05-14 17:50 - INFO - 	 Recall for 0.4 precision: 0.525
2024-05-14 17:50 - INFO - 	 Best Val. Loss: 0.525
2024-05-14 17:50 - INFO - 	 Best ROC-AUC: 0.700
2024-05-14 17:50 - INFO - 	 Best PR-AUC: 0.419
2024-05-14 17:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.689
2024-05-14 17:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-05-14 17:50 - INFO - 	 Best Recall for 0.4 precision: 0.525
2024-05-14 17:50 - INFO - ---------------------------------------------
2024-05-14 17:58 - INFO - ---------------------------------------------
2024-05-14 17:58 - INFO - Epoch: 02 | Time: 7m 40s
2024-05-14 17:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72033
2024-05-14 17:58 - INFO - 	 Train Loss: 0.500
2024-05-14 17:58 - INFO - 	 Val. Loss: 0.501
2024-05-14 17:58 - INFO - 	 ROC-AUC: 0.720
2024-05-14 17:58 - INFO - 	 PR-AUC: 0.434
2024-05-14 17:58 - INFO - 	 Recall for 0.4 precision: 0.619
2024-05-14 17:58 - INFO - 	 Best Val. Loss: 0.501
2024-05-14 17:58 - INFO - 	 Best ROC-AUC: 0.720
2024-05-14 17:58 - INFO - 	 Best PR-AUC: 0.434
2024-05-14 17:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-05-14 17:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.424
2024-05-14 17:58 - INFO - 	 Best Recall for 0.4 precision: 0.619
2024-05-14 17:58 - INFO - ---------------------------------------------
2024-05-14 18:04 - INFO - ---------------------------------------------
2024-05-14 18:04 - INFO - Epoch: 03 | Time: 6m 44s
2024-05-14 18:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72404
2024-05-14 18:04 - INFO - 	 Train Loss: 0.491
2024-05-14 18:04 - INFO - 	 Val. Loss: 0.505
2024-05-14 18:04 - INFO - 	 ROC-AUC: 0.724
2024-05-14 18:04 - INFO - 	 PR-AUC: 0.440
2024-05-14 18:04 - INFO - 	 Recall for 0.4 precision: 0.636
2024-05-14 18:04 - INFO - 	 Best Val. Loss: 0.501
2024-05-14 18:04 - INFO - 	 Best ROC-AUC: 0.724
2024-05-14 18:04 - INFO - 	 Best PR-AUC: 0.440
2024-05-14 18:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-14 18:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-14 18:04 - INFO - 	 Best Recall for 0.4 precision: 0.636
2024-05-14 18:04 - INFO - ---------------------------------------------
2024-05-14 18:12 - INFO - ---------------------------------------------
2024-05-14 18:12 - INFO - Epoch: 04 | Time: 7m 42s
2024-05-14 18:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73001
2024-05-14 18:12 - INFO - 	 Train Loss: 0.486
2024-05-14 18:12 - INFO - 	 Val. Loss: 0.497
2024-05-14 18:12 - INFO - 	 ROC-AUC: 0.730
2024-05-14 18:12 - INFO - 	 PR-AUC: 0.445
2024-05-14 18:12 - INFO - 	 Recall for 0.4 precision: 0.664
2024-05-14 18:12 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 18:12 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 18:12 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 18:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 18:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 18:12 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-14 18:12 - INFO - ---------------------------------------------
2024-05-14 18:19 - INFO - ---------------------------------------------
2024-05-14 18:19 - INFO - Epoch: 05 | Time: 7m 8s
2024-05-14 18:19 - INFO - 	 Train Loss: 0.483
2024-05-14 18:19 - INFO - 	 Val. Loss: 0.497
2024-05-14 18:19 - INFO - 	 ROC-AUC: 0.730
2024-05-14 18:19 - INFO - 	 PR-AUC: 0.443
2024-05-14 18:19 - INFO - 	 Recall for 0.4 precision: 0.659
2024-05-14 18:19 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 18:19 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 18:19 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 18:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-14 18:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 18:19 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-14 18:19 - INFO - ---------------------------------------------
2024-05-14 18:27 - INFO - ---------------------------------------------
2024-05-14 18:27 - INFO - Epoch: 06 | Time: 7m 35s
2024-05-14 18:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73469
2024-05-14 18:27 - INFO - 	 Train Loss: 0.480
2024-05-14 18:27 - INFO - 	 Val. Loss: 0.493
2024-05-14 18:27 - INFO - 	 ROC-AUC: 0.735
2024-05-14 18:27 - INFO - 	 PR-AUC: 0.444
2024-05-14 18:27 - INFO - 	 Recall for 0.4 precision: 0.683
2024-05-14 18:27 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 18:27 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 18:27 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 18:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 18:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 18:27 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-14 18:27 - INFO - ---------------------------------------------
2024-05-14 18:34 - INFO - ---------------------------------------------
2024-05-14 18:34 - INFO - Epoch: 07 | Time: 6m 48s
2024-05-14 18:34 - INFO - 	 Train Loss: 0.479
2024-05-14 18:34 - INFO - 	 Val. Loss: 0.495
2024-05-14 18:34 - INFO - 	 ROC-AUC: 0.733
2024-05-14 18:34 - INFO - 	 PR-AUC: 0.443
2024-05-14 18:34 - INFO - 	 Recall for 0.4 precision: 0.678
2024-05-14 18:34 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 18:34 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 18:34 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 18:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 18:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 18:34 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-14 18:34 - INFO - ---------------------------------------------
2024-05-14 18:41 - INFO - ---------------------------------------------
2024-05-14 18:41 - INFO - Epoch: 08 | Time: 6m 57s
2024-05-14 18:41 - INFO - 	 Train Loss: 0.477
2024-05-14 18:41 - INFO - 	 Val. Loss: 0.503
2024-05-14 18:41 - INFO - 	 ROC-AUC: 0.727
2024-05-14 18:41 - INFO - 	 PR-AUC: 0.438
2024-05-14 18:41 - INFO - 	 Recall for 0.4 precision: 0.643
2024-05-14 18:41 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 18:41 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 18:41 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 18:41 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-14 18:41 - INFO - ---------------------------------------------
2024-05-14 18:48 - INFO - ---------------------------------------------
2024-05-14 18:48 - INFO - Epoch: 09 | Time: 6m 57s
2024-05-14 18:48 - INFO - 	 Train Loss: 0.476
2024-05-14 18:48 - INFO - 	 Val. Loss: 0.497
2024-05-14 18:48 - INFO - 	 ROC-AUC: 0.732
2024-05-14 18:48 - INFO - 	 PR-AUC: 0.441
2024-05-14 18:48 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-14 18:48 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 18:48 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 18:48 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 18:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-14 18:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 18:48 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-14 18:48 - INFO - ---------------------------------------------
2024-05-14 19:01 - INFO - Fit the preprocessing pipeline
2024-05-14 19:01 - INFO - Training using device: cuda
2024-05-14 19:01 - INFO - Creating generators
2024-05-14 19:01 - INFO - The model has 651,257 trainable parameters
2024-05-14 19:01 - INFO - * Model:
2024-05-14 19:01 - INFO - * -----------
2024-05-14 19:01 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 19:01 - INFO - * -----------
2024-05-14 19:01 - INFO - Evaluating model based on: rocauc
2024-05-14 19:01 - INFO - Training..

2024-05-14 19:07 - INFO - ---------------------------------------------
2024-05-14 19:07 - INFO - Epoch: 01 | Time: 6m 48s
2024-05-14 19:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70556
2024-05-14 19:07 - INFO - 	 Train Loss: 0.543
2024-05-14 19:07 - INFO - 	 Val. Loss: 0.516
2024-05-14 19:07 - INFO - 	 ROC-AUC: 0.706
2024-05-14 19:07 - INFO - 	 PR-AUC: 0.420
2024-05-14 19:07 - INFO - 	 Recall for 0.4 precision: 0.543
2024-05-14 19:07 - INFO - 	 Best Val. Loss: 0.516
2024-05-14 19:07 - INFO - 	 Best ROC-AUC: 0.706
2024-05-14 19:07 - INFO - 	 Best PR-AUC: 0.420
2024-05-14 19:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.680
2024-05-14 19:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.394
2024-05-14 19:07 - INFO - 	 Best Recall for 0.4 precision: 0.543
2024-05-14 19:07 - INFO - ---------------------------------------------
2024-05-14 19:14 - INFO - ---------------------------------------------
2024-05-14 19:14 - INFO - Epoch: 02 | Time: 6m 50s
2024-05-14 19:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72589
2024-05-14 19:14 - INFO - 	 Train Loss: 0.500
2024-05-14 19:14 - INFO - 	 Val. Loss: 0.500
2024-05-14 19:14 - INFO - 	 ROC-AUC: 0.726
2024-05-14 19:14 - INFO - 	 PR-AUC: 0.436
2024-05-14 19:14 - INFO - 	 Recall for 0.4 precision: 0.649
2024-05-14 19:14 - INFO - 	 Best Val. Loss: 0.500
2024-05-14 19:14 - INFO - 	 Best ROC-AUC: 0.726
2024-05-14 19:14 - INFO - 	 Best PR-AUC: 0.436
2024-05-14 19:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-05-14 19:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 19:14 - INFO - 	 Best Recall for 0.4 precision: 0.649
2024-05-14 19:14 - INFO - ---------------------------------------------
2024-05-14 19:21 - INFO - ---------------------------------------------
2024-05-14 19:21 - INFO - Epoch: 03 | Time: 7m 4s
2024-05-14 19:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73213
2024-05-14 19:21 - INFO - 	 Train Loss: 0.489
2024-05-14 19:21 - INFO - 	 Val. Loss: 0.497
2024-05-14 19:21 - INFO - 	 ROC-AUC: 0.732
2024-05-14 19:21 - INFO - 	 PR-AUC: 0.447
2024-05-14 19:21 - INFO - 	 Recall for 0.4 precision: 0.003
2024-05-14 19:21 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 19:21 - INFO - 	 Best ROC-AUC: 0.732
2024-05-14 19:21 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 19:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-14 19:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 19:21 - INFO - 	 Best Recall for 0.4 precision: 0.649
2024-05-14 19:21 - INFO - ---------------------------------------------
2024-05-14 19:28 - INFO - ---------------------------------------------
2024-05-14 19:28 - INFO - Epoch: 04 | Time: 6m 56s
2024-05-14 19:28 - INFO - 	 Train Loss: 0.485
2024-05-14 19:28 - INFO - 	 Val. Loss: 0.494
2024-05-14 19:28 - INFO - 	 ROC-AUC: 0.731
2024-05-14 19:28 - INFO - 	 PR-AUC: 0.442
2024-05-14 19:28 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-14 19:28 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 19:28 - INFO - 	 Best ROC-AUC: 0.732
2024-05-14 19:28 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 19:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-14 19:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 19:28 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-14 19:28 - INFO - ---------------------------------------------
2024-05-14 19:36 - INFO - ---------------------------------------------
2024-05-14 19:36 - INFO - Epoch: 05 | Time: 7m 12s
2024-05-14 19:36 - INFO - 	 Train Loss: 0.481
2024-05-14 19:36 - INFO - 	 Val. Loss: 0.497
2024-05-14 19:36 - INFO - 	 ROC-AUC: 0.732
2024-05-14 19:36 - INFO - 	 PR-AUC: 0.443
2024-05-14 19:36 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-14 19:36 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 19:36 - INFO - 	 Best ROC-AUC: 0.732
2024-05-14 19:36 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 19:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-14 19:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 19:36 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-14 19:36 - INFO - ---------------------------------------------
2024-05-14 19:42 - INFO - ---------------------------------------------
2024-05-14 19:42 - INFO - Epoch: 06 | Time: 6m 43s
2024-05-14 19:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73221
2024-05-14 19:42 - INFO - 	 Train Loss: 0.479
2024-05-14 19:42 - INFO - 	 Val. Loss: 0.513
2024-05-14 19:42 - INFO - 	 ROC-AUC: 0.732
2024-05-14 19:42 - INFO - 	 PR-AUC: 0.446
2024-05-14 19:42 - INFO - 	 Recall for 0.4 precision: 0.672
2024-05-14 19:42 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 19:42 - INFO - 	 Best ROC-AUC: 0.732
2024-05-14 19:42 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 19:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 19:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-14 19:42 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-14 19:42 - INFO - ---------------------------------------------
2024-05-14 19:50 - INFO - ---------------------------------------------
2024-05-14 19:50 - INFO - Epoch: 07 | Time: 7m 41s
2024-05-14 19:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73366
2024-05-14 19:50 - INFO - 	 Train Loss: 0.477
2024-05-14 19:50 - INFO - 	 Val. Loss: 0.499
2024-05-14 19:50 - INFO - 	 ROC-AUC: 0.734
2024-05-14 19:50 - INFO - 	 PR-AUC: 0.447
2024-05-14 19:50 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-14 19:50 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 19:50 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 19:50 - INFO - 	 Best PR-AUC: 0.447
2024-05-14 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-14 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-14 19:50 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-14 19:50 - INFO - ---------------------------------------------
2024-05-14 19:57 - INFO - ---------------------------------------------
2024-05-14 19:57 - INFO - Epoch: 08 | Time: 7m 10s
2024-05-14 19:57 - INFO - 	 Train Loss: 0.476
2024-05-14 19:57 - INFO - 	 Val. Loss: 0.497
2024-05-14 19:57 - INFO - 	 ROC-AUC: 0.732
2024-05-14 19:57 - INFO - 	 PR-AUC: 0.448
2024-05-14 19:57 - INFO - 	 Recall for 0.4 precision: 0.678
2024-05-14 19:57 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 19:57 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 19:57 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 19:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-14 19:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-14 19:57 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-14 19:57 - INFO - ---------------------------------------------
2024-05-14 20:05 - INFO - ---------------------------------------------
2024-05-14 20:05 - INFO - Epoch: 09 | Time: 7m 44s
2024-05-14 20:05 - INFO - 	 Train Loss: 0.475
2024-05-14 20:05 - INFO - 	 Val. Loss: 0.498
2024-05-14 20:05 - INFO - 	 ROC-AUC: 0.730
2024-05-14 20:05 - INFO - 	 PR-AUC: 0.445
2024-05-14 20:05 - INFO - 	 Recall for 0.4 precision: 0.662
2024-05-14 20:05 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 20:05 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 20:05 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 20:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-14 20:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-14 20:05 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-14 20:05 - INFO - ---------------------------------------------
2024-05-14 20:12 - INFO - ---------------------------------------------
2024-05-14 20:12 - INFO - Epoch: 10 | Time: 6m 40s
2024-05-14 20:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73599
2024-05-14 20:12 - INFO - 	 Train Loss: 0.474
2024-05-14 20:12 - INFO - 	 Val. Loss: 0.493
2024-05-14 20:12 - INFO - 	 ROC-AUC: 0.736
2024-05-14 20:12 - INFO - 	 PR-AUC: 0.450
2024-05-14 20:12 - INFO - 	 Recall for 0.4 precision: 0.692
2024-05-14 20:12 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 20:12 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 20:12 - INFO - 	 Best PR-AUC: 0.450
2024-05-14 20:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-14 20:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 20:12 - INFO - 	 Best Recall for 0.4 precision: 0.692
2024-05-14 20:12 - INFO - ---------------------------------------------
2024-05-14 20:18 - INFO - Fit the preprocessing pipeline
2024-05-14 20:18 - INFO - Training using device: cuda
2024-05-14 20:18 - INFO - Creating generators
2024-05-14 20:18 - INFO - The model has 651,257 trainable parameters
2024-05-14 20:18 - INFO - * Model:
2024-05-14 20:18 - INFO - * -----------
2024-05-14 20:18 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 20:18 - INFO - * -----------
2024-05-14 20:18 - INFO - Evaluating model based on: rocauc
2024-05-14 20:18 - INFO - Training..

2024-05-14 20:25 - INFO - ---------------------------------------------
2024-05-14 20:25 - INFO - Epoch: 01 | Time: 7m 11s
2024-05-14 20:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70077
2024-05-14 20:25 - INFO - 	 Train Loss: 0.543
2024-05-14 20:25 - INFO - 	 Val. Loss: 0.515
2024-05-14 20:25 - INFO - 	 ROC-AUC: 0.701
2024-05-14 20:25 - INFO - 	 PR-AUC: 0.412
2024-05-14 20:25 - INFO - 	 Recall for 0.4 precision: 0.522
2024-05-14 20:25 - INFO - 	 Best Val. Loss: 0.515
2024-05-14 20:25 - INFO - 	 Best ROC-AUC: 0.701
2024-05-14 20:25 - INFO - 	 Best PR-AUC: 0.412
2024-05-14 20:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-05-14 20:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.397
2024-05-14 20:25 - INFO - 	 Best Recall for 0.4 precision: 0.522
2024-05-14 20:25 - INFO - ---------------------------------------------
2024-05-14 20:32 - INFO - ---------------------------------------------
2024-05-14 20:32 - INFO - Epoch: 02 | Time: 6m 40s
2024-05-14 20:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7276
2024-05-14 20:32 - INFO - 	 Train Loss: 0.499
2024-05-14 20:32 - INFO - 	 Val. Loss: 0.504
2024-05-14 20:32 - INFO - 	 ROC-AUC: 0.728
2024-05-14 20:32 - INFO - 	 PR-AUC: 0.441
2024-05-14 20:32 - INFO - 	 Recall for 0.4 precision: 0.651
2024-05-14 20:32 - INFO - 	 Best Val. Loss: 0.504
2024-05-14 20:32 - INFO - 	 Best ROC-AUC: 0.728
2024-05-14 20:32 - INFO - 	 Best PR-AUC: 0.441
2024-05-14 20:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 20:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-14 20:32 - INFO - 	 Best Recall for 0.4 precision: 0.651
2024-05-14 20:32 - INFO - ---------------------------------------------
2024-05-14 20:39 - INFO - ---------------------------------------------
2024-05-14 20:39 - INFO - Epoch: 03 | Time: 7m 17s
2024-05-14 20:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73093
2024-05-14 20:39 - INFO - 	 Train Loss: 0.490
2024-05-14 20:39 - INFO - 	 Val. Loss: 0.494
2024-05-14 20:39 - INFO - 	 ROC-AUC: 0.731
2024-05-14 20:39 - INFO - 	 PR-AUC: 0.445
2024-05-14 20:39 - INFO - 	 Recall for 0.4 precision: 0.666
2024-05-14 20:39 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 20:39 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 20:39 - INFO - 	 Best PR-AUC: 0.445
2024-05-14 20:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-14 20:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-14 20:39 - INFO - 	 Best Recall for 0.4 precision: 0.666
2024-05-14 20:39 - INFO - ---------------------------------------------
2024-05-14 20:46 - INFO - ---------------------------------------------
2024-05-14 20:46 - INFO - Epoch: 04 | Time: 6m 52s
2024-05-14 20:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73294
2024-05-14 20:46 - INFO - 	 Train Loss: 0.485
2024-05-14 20:46 - INFO - 	 Val. Loss: 0.497
2024-05-14 20:46 - INFO - 	 ROC-AUC: 0.733
2024-05-14 20:46 - INFO - 	 PR-AUC: 0.448
2024-05-14 20:46 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-14 20:46 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 20:46 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 20:46 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 20:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 20:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-14 20:46 - INFO - 	 Best Recall for 0.4 precision: 0.666
2024-05-14 20:46 - INFO - ---------------------------------------------
2024-05-14 20:52 - INFO - ---------------------------------------------
2024-05-14 20:52 - INFO - Epoch: 05 | Time: 6m 34s
2024-05-14 20:52 - INFO - 	 Train Loss: 0.482
2024-05-14 20:52 - INFO - 	 Val. Loss: 0.494
2024-05-14 20:52 - INFO - 	 ROC-AUC: 0.732
2024-05-14 20:52 - INFO - 	 PR-AUC: 0.444
2024-05-14 20:52 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-14 20:52 - INFO - 	 Best Val. Loss: 0.494
2024-05-14 20:52 - INFO - 	 Best ROC-AUC: 0.733
2024-05-14 20:52 - INFO - 	 Best PR-AUC: 0.448
2024-05-14 20:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 20:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-14 20:52 - INFO - 	 Best Recall for 0.4 precision: 0.666
2024-05-14 20:52 - INFO - ---------------------------------------------
2024-05-14 20:59 - INFO - ---------------------------------------------
2024-05-14 20:59 - INFO - Epoch: 06 | Time: 6m 33s
2024-05-14 20:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73599
2024-05-14 20:59 - INFO - 	 Train Loss: 0.480
2024-05-14 20:59 - INFO - 	 Val. Loss: 0.492
2024-05-14 20:59 - INFO - 	 ROC-AUC: 0.736
2024-05-14 20:59 - INFO - 	 PR-AUC: 0.449
2024-05-14 20:59 - INFO - 	 Recall for 0.4 precision: 0.677
2024-05-14 20:59 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 20:59 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 20:59 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 20:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 20:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-14 20:59 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-14 20:59 - INFO - ---------------------------------------------
2024-05-14 21:05 - INFO - ---------------------------------------------
2024-05-14 21:05 - INFO - Epoch: 07 | Time: 6m 23s
2024-05-14 21:05 - INFO - 	 Train Loss: 0.478
2024-05-14 21:05 - INFO - 	 Val. Loss: 0.496
2024-05-14 21:05 - INFO - 	 ROC-AUC: 0.733
2024-05-14 21:05 - INFO - 	 PR-AUC: 0.447
2024-05-14 21:05 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-14 21:05 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 21:05 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 21:05 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 21:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 21:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-14 21:05 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-14 21:05 - INFO - ---------------------------------------------
2024-05-14 21:13 - INFO - ---------------------------------------------
2024-05-14 21:13 - INFO - Epoch: 08 | Time: 7m 44s
2024-05-14 21:13 - INFO - 	 Train Loss: 0.477
2024-05-14 21:13 - INFO - 	 Val. Loss: 0.495
2024-05-14 21:13 - INFO - 	 ROC-AUC: 0.732
2024-05-14 21:13 - INFO - 	 PR-AUC: 0.443
2024-05-14 21:13 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-14 21:13 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 21:13 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 21:13 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 21:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 21:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-14 21:13 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-14 21:13 - INFO - ---------------------------------------------
2024-05-14 21:20 - INFO - ---------------------------------------------
2024-05-14 21:20 - INFO - Epoch: 09 | Time: 6m 55s
2024-05-14 21:20 - INFO - 	 Train Loss: 0.476
2024-05-14 21:20 - INFO - 	 Val. Loss: 0.493
2024-05-14 21:20 - INFO - 	 ROC-AUC: 0.734
2024-05-14 21:20 - INFO - 	 PR-AUC: 0.447
2024-05-14 21:20 - INFO - 	 Recall for 0.4 precision: 0.674
2024-05-14 21:20 - INFO - 	 Best Val. Loss: 0.492
2024-05-14 21:20 - INFO - 	 Best ROC-AUC: 0.736
2024-05-14 21:20 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 21:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 21:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-14 21:20 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-14 21:20 - INFO - ---------------------------------------------
2024-05-14 21:33 - INFO - Fit the preprocessing pipeline
2024-05-14 21:33 - INFO - Training using device: cuda
2024-05-14 21:33 - INFO - Creating generators
2024-05-14 21:33 - INFO - The model has 651,257 trainable parameters
2024-05-14 21:33 - INFO - * Model:
2024-05-14 21:33 - INFO - * -----------
2024-05-14 21:33 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 21:33 - INFO - * -----------
2024-05-14 21:33 - INFO - Evaluating model based on: rocauc
2024-05-14 21:33 - INFO - Training..

2024-05-14 21:40 - INFO - ---------------------------------------------
2024-05-14 21:40 - INFO - Epoch: 01 | Time: 6m 16s
2024-05-14 21:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70093
2024-05-14 21:40 - INFO - 	 Train Loss: 0.541
2024-05-14 21:40 - INFO - 	 Val. Loss: 0.514
2024-05-14 21:40 - INFO - 	 ROC-AUC: 0.701
2024-05-14 21:40 - INFO - 	 PR-AUC: 0.415
2024-05-14 21:40 - INFO - 	 Recall for 0.4 precision: 0.515
2024-05-14 21:40 - INFO - 	 Best Val. Loss: 0.514
2024-05-14 21:40 - INFO - 	 Best ROC-AUC: 0.701
2024-05-14 21:40 - INFO - 	 Best PR-AUC: 0.415
2024-05-14 21:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.677
2024-05-14 21:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.391
2024-05-14 21:40 - INFO - 	 Best Recall for 0.4 precision: 0.515
2024-05-14 21:40 - INFO - ---------------------------------------------
2024-05-14 21:46 - INFO - ---------------------------------------------
2024-05-14 21:46 - INFO - Epoch: 02 | Time: 6m 17s
2024-05-14 21:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72317
2024-05-14 21:46 - INFO - 	 Train Loss: 0.500
2024-05-14 21:46 - INFO - 	 Val. Loss: 0.506
2024-05-14 21:46 - INFO - 	 ROC-AUC: 0.723
2024-05-14 21:46 - INFO - 	 PR-AUC: 0.430
2024-05-14 21:46 - INFO - 	 Recall for 0.4 precision: 0.626
2024-05-14 21:46 - INFO - 	 Best Val. Loss: 0.506
2024-05-14 21:46 - INFO - 	 Best ROC-AUC: 0.723
2024-05-14 21:46 - INFO - 	 Best PR-AUC: 0.430
2024-05-14 21:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.706
2024-05-14 21:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-05-14 21:46 - INFO - 	 Best Recall for 0.4 precision: 0.626
2024-05-14 21:46 - INFO - ---------------------------------------------
2024-05-14 21:52 - INFO - ---------------------------------------------
2024-05-14 21:52 - INFO - Epoch: 03 | Time: 6m 2s
2024-05-14 21:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72812
2024-05-14 21:52 - INFO - 	 Train Loss: 0.490
2024-05-14 21:52 - INFO - 	 Val. Loss: 0.497
2024-05-14 21:52 - INFO - 	 ROC-AUC: 0.728
2024-05-14 21:52 - INFO - 	 PR-AUC: 0.436
2024-05-14 21:52 - INFO - 	 Recall for 0.4 precision: 0.645
2024-05-14 21:52 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 21:52 - INFO - 	 Best ROC-AUC: 0.728
2024-05-14 21:52 - INFO - 	 Best PR-AUC: 0.436
2024-05-14 21:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-14 21:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-05-14 21:52 - INFO - 	 Best Recall for 0.4 precision: 0.645
2024-05-14 21:52 - INFO - ---------------------------------------------
2024-05-14 21:58 - INFO - ---------------------------------------------
2024-05-14 21:58 - INFO - Epoch: 04 | Time: 6m 3s
2024-05-14 21:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73148
2024-05-14 21:58 - INFO - 	 Train Loss: 0.486
2024-05-14 21:58 - INFO - 	 Val. Loss: 0.498
2024-05-14 21:58 - INFO - 	 ROC-AUC: 0.731
2024-05-14 21:58 - INFO - 	 PR-AUC: 0.442
2024-05-14 21:58 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-14 21:58 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 21:58 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 21:58 - INFO - 	 Best PR-AUC: 0.442
2024-05-14 21:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-14 21:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 21:58 - INFO - 	 Best Recall for 0.4 precision: 0.645
2024-05-14 21:58 - INFO - ---------------------------------------------
2024-05-14 22:04 - INFO - ---------------------------------------------
2024-05-14 22:04 - INFO - Epoch: 05 | Time: 6m 25s
2024-05-14 22:04 - INFO - 	 Train Loss: 0.482
2024-05-14 22:04 - INFO - 	 Val. Loss: 0.498
2024-05-14 22:04 - INFO - 	 ROC-AUC: 0.728
2024-05-14 22:04 - INFO - 	 PR-AUC: 0.433
2024-05-14 22:04 - INFO - 	 Recall for 0.4 precision: 0.652
2024-05-14 22:04 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 22:04 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 22:04 - INFO - 	 Best PR-AUC: 0.442
2024-05-14 22:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-14 22:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 22:04 - INFO - 	 Best Recall for 0.4 precision: 0.652
2024-05-14 22:04 - INFO - ---------------------------------------------
2024-05-14 22:10 - INFO - ---------------------------------------------
2024-05-14 22:10 - INFO - Epoch: 06 | Time: 5m 53s
2024-05-14 22:10 - INFO - 	 Train Loss: 0.480
2024-05-14 22:10 - INFO - 	 Val. Loss: 0.497
2024-05-14 22:10 - INFO - 	 ROC-AUC: 0.730
2024-05-14 22:10 - INFO - 	 PR-AUC: 0.437
2024-05-14 22:10 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-14 22:10 - INFO - 	 Best Val. Loss: 0.497
2024-05-14 22:10 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 22:10 - INFO - 	 Best PR-AUC: 0.442
2024-05-14 22:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-14 22:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 22:10 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-14 22:10 - INFO - ---------------------------------------------
2024-05-14 22:17 - INFO - ---------------------------------------------
2024-05-14 22:17 - INFO - Epoch: 07 | Time: 6m 45s
2024-05-14 22:17 - INFO - 	 Train Loss: 0.479
2024-05-14 22:17 - INFO - 	 Val. Loss: 0.495
2024-05-14 22:17 - INFO - 	 ROC-AUC: 0.731
2024-05-14 22:17 - INFO - 	 PR-AUC: 0.439
2024-05-14 22:17 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-14 22:17 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 22:17 - INFO - 	 Best ROC-AUC: 0.731
2024-05-14 22:17 - INFO - 	 Best PR-AUC: 0.442
2024-05-14 22:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-14 22:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-14 22:17 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-14 22:17 - INFO - ---------------------------------------------
2024-05-14 22:29 - INFO - Fit the preprocessing pipeline
2024-05-14 22:29 - INFO - Training using device: cuda
2024-05-14 22:29 - INFO - Creating generators
2024-05-14 22:29 - INFO - The model has 651,257 trainable parameters
2024-05-14 22:29 - INFO - * Model:
2024-05-14 22:29 - INFO - * -----------
2024-05-14 22:29 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 22:29 - INFO - * -----------
2024-05-14 22:29 - INFO - Evaluating model based on: rocauc
2024-05-14 22:29 - INFO - Training..

2024-05-14 22:35 - INFO - ---------------------------------------------
2024-05-14 22:35 - INFO - Epoch: 01 | Time: 6m 18s
2024-05-14 22:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70249
2024-05-14 22:35 - INFO - 	 Train Loss: 0.541
2024-05-14 22:35 - INFO - 	 Val. Loss: 0.522
2024-05-14 22:35 - INFO - 	 ROC-AUC: 0.702
2024-05-14 22:35 - INFO - 	 PR-AUC: 0.413
2024-05-14 22:35 - INFO - 	 Recall for 0.4 precision: 0.530
2024-05-14 22:35 - INFO - 	 Best Val. Loss: 0.522
2024-05-14 22:35 - INFO - 	 Best ROC-AUC: 0.702
2024-05-14 22:35 - INFO - 	 Best PR-AUC: 0.413
2024-05-14 22:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.675
2024-05-14 22:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.386
2024-05-14 22:35 - INFO - 	 Best Recall for 0.4 precision: 0.530
2024-05-14 22:35 - INFO - ---------------------------------------------
2024-05-14 22:41 - INFO - ---------------------------------------------
2024-05-14 22:41 - INFO - Epoch: 02 | Time: 5m 41s
2024-05-14 22:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72744
2024-05-14 22:41 - INFO - 	 Train Loss: 0.500
2024-05-14 22:41 - INFO - 	 Val. Loss: 0.499
2024-05-14 22:41 - INFO - 	 ROC-AUC: 0.727
2024-05-14 22:41 - INFO - 	 PR-AUC: 0.438
2024-05-14 22:41 - INFO - 	 Recall for 0.4 precision: 0.652
2024-05-14 22:41 - INFO - 	 Best Val. Loss: 0.499
2024-05-14 22:41 - INFO - 	 Best ROC-AUC: 0.727
2024-05-14 22:41 - INFO - 	 Best PR-AUC: 0.438
2024-05-14 22:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-14 22:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 22:41 - INFO - 	 Best Recall for 0.4 precision: 0.652
2024-05-14 22:41 - INFO - ---------------------------------------------
2024-05-14 22:47 - INFO - ---------------------------------------------
2024-05-14 22:47 - INFO - Epoch: 03 | Time: 5m 38s
2024-05-14 22:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72947
2024-05-14 22:47 - INFO - 	 Train Loss: 0.490
2024-05-14 22:47 - INFO - 	 Val. Loss: 0.495
2024-05-14 22:47 - INFO - 	 ROC-AUC: 0.729
2024-05-14 22:47 - INFO - 	 PR-AUC: 0.438
2024-05-14 22:47 - INFO - 	 Recall for 0.4 precision: 0.661
2024-05-14 22:47 - INFO - 	 Best Val. Loss: 0.495
2024-05-14 22:47 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 22:47 - INFO - 	 Best PR-AUC: 0.438
2024-05-14 22:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.708
2024-05-14 22:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 22:47 - INFO - 	 Best Recall for 0.4 precision: 0.661
2024-05-14 22:47 - INFO - ---------------------------------------------
2024-05-14 22:53 - INFO - ---------------------------------------------
2024-05-14 22:53 - INFO - Epoch: 04 | Time: 6m 20s
2024-05-14 22:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73355
2024-05-14 22:53 - INFO - 	 Train Loss: 0.485
2024-05-14 22:53 - INFO - 	 Val. Loss: 0.493
2024-05-14 22:53 - INFO - 	 ROC-AUC: 0.734
2024-05-14 22:53 - INFO - 	 PR-AUC: 0.446
2024-05-14 22:53 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-14 22:53 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 22:53 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 22:53 - INFO - 	 Best PR-AUC: 0.446
2024-05-14 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-14 22:53 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 22:53 - INFO - ---------------------------------------------
2024-05-14 22:59 - INFO - ---------------------------------------------
2024-05-14 22:59 - INFO - Epoch: 05 | Time: 5m 59s
2024-05-14 22:59 - INFO - 	 Train Loss: 0.482
2024-05-14 22:59 - INFO - 	 Val. Loss: 0.494
2024-05-14 22:59 - INFO - 	 ROC-AUC: 0.732
2024-05-14 22:59 - INFO - 	 PR-AUC: 0.444
2024-05-14 22:59 - INFO - 	 Recall for 0.4 precision: 0.661
2024-05-14 22:59 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 22:59 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 22:59 - INFO - 	 Best PR-AUC: 0.446
2024-05-14 22:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 22:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-14 22:59 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 22:59 - INFO - ---------------------------------------------
2024-05-14 23:05 - INFO - ---------------------------------------------
2024-05-14 23:05 - INFO - Epoch: 06 | Time: 6m 20s
2024-05-14 23:05 - INFO - 	 Train Loss: 0.479
2024-05-14 23:05 - INFO - 	 Val. Loss: 0.494
2024-05-14 23:05 - INFO - 	 ROC-AUC: 0.731
2024-05-14 23:05 - INFO - 	 PR-AUC: 0.444
2024-05-14 23:05 - INFO - 	 Recall for 0.4 precision: 0.659
2024-05-14 23:05 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 23:05 - INFO - 	 Best ROC-AUC: 0.734
2024-05-14 23:05 - INFO - 	 Best PR-AUC: 0.446
2024-05-14 23:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 23:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-14 23:05 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-14 23:05 - INFO - ---------------------------------------------
2024-05-14 23:11 - INFO - ---------------------------------------------
2024-05-14 23:11 - INFO - Epoch: 07 | Time: 5m 36s
2024-05-14 23:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73513
2024-05-14 23:11 - INFO - 	 Train Loss: 0.477
2024-05-14 23:11 - INFO - 	 Val. Loss: 0.493
2024-05-14 23:11 - INFO - 	 ROC-AUC: 0.735
2024-05-14 23:11 - INFO - 	 PR-AUC: 0.449
2024-05-14 23:11 - INFO - 	 Recall for 0.4 precision: 0.677
2024-05-14 23:11 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 23:11 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 23:11 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 23:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 23:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-14 23:11 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-14 23:11 - INFO - ---------------------------------------------
2024-05-14 23:17 - INFO - ---------------------------------------------
2024-05-14 23:17 - INFO - Epoch: 08 | Time: 6m 6s
2024-05-14 23:17 - INFO - 	 Train Loss: 0.476
2024-05-14 23:17 - INFO - 	 Val. Loss: 0.493
2024-05-14 23:17 - INFO - 	 ROC-AUC: 0.733
2024-05-14 23:17 - INFO - 	 PR-AUC: 0.444
2024-05-14 23:17 - INFO - 	 Recall for 0.4 precision: 0.678
2024-05-14 23:17 - INFO - 	 Best Val. Loss: 0.493
2024-05-14 23:17 - INFO - 	 Best ROC-AUC: 0.735
2024-05-14 23:17 - INFO - 	 Best PR-AUC: 0.449
2024-05-14 23:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-14 23:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-14 23:17 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-14 23:17 - INFO - ---------------------------------------------
2024-05-14 23:23 - INFO - ---------------------------------------------
2024-05-14 23:23 - INFO - Epoch: 09 | Time: 5m 41s
2024-05-14 23:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73706
2024-05-14 23:23 - INFO - 	 Train Loss: 0.474
2024-05-14 23:23 - INFO - 	 Val. Loss: 0.491
2024-05-14 23:23 - INFO - 	 ROC-AUC: 0.737
2024-05-14 23:23 - INFO - 	 PR-AUC: 0.452
2024-05-14 23:23 - INFO - 	 Recall for 0.4 precision: 0.684
2024-05-14 23:23 - INFO - 	 Best Val. Loss: 0.491
2024-05-14 23:23 - INFO - 	 Best ROC-AUC: 0.737
2024-05-14 23:23 - INFO - 	 Best PR-AUC: 0.452
2024-05-14 23:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 23:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 23:23 - INFO - 	 Best Recall for 0.4 precision: 0.684
2024-05-14 23:23 - INFO - ---------------------------------------------
2024-05-14 23:28 - INFO - ---------------------------------------------
2024-05-14 23:28 - INFO - Epoch: 10 | Time: 5m 34s
2024-05-14 23:28 - INFO - 	 Train Loss: 0.473
2024-05-14 23:28 - INFO - 	 Val. Loss: 0.491
2024-05-14 23:28 - INFO - 	 ROC-AUC: 0.736
2024-05-14 23:28 - INFO - 	 PR-AUC: 0.449
2024-05-14 23:28 - INFO - 	 Recall for 0.4 precision: 0.685
2024-05-14 23:28 - INFO - 	 Best Val. Loss: 0.491
2024-05-14 23:28 - INFO - 	 Best ROC-AUC: 0.737
2024-05-14 23:28 - INFO - 	 Best PR-AUC: 0.452
2024-05-14 23:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-14 23:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-14 23:28 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-14 23:28 - INFO - ---------------------------------------------
2024-05-14 23:34 - INFO - Fit the preprocessing pipeline
2024-05-14 23:34 - INFO - Training using device: cuda
2024-05-14 23:34 - INFO - Creating generators
2024-05-14 23:34 - INFO - The model has 651,257 trainable parameters
2024-05-14 23:34 - INFO - * Model:
2024-05-14 23:34 - INFO - * -----------
2024-05-14 23:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-14 23:34 - INFO - * -----------
2024-05-14 23:34 - INFO - Evaluating model based on: rocauc
2024-05-14 23:34 - INFO - Training..

2024-05-14 23:40 - INFO - ---------------------------------------------
2024-05-14 23:40 - INFO - Epoch: 01 | Time: 5m 32s
2024-05-14 23:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70128
2024-05-14 23:40 - INFO - 	 Train Loss: 0.541
2024-05-14 23:40 - INFO - 	 Val. Loss: 0.525
2024-05-14 23:40 - INFO - 	 ROC-AUC: 0.701
2024-05-14 23:40 - INFO - 	 PR-AUC: 0.409
2024-05-14 23:40 - INFO - 	 Recall for 0.4 precision: 0.519
2024-05-14 23:40 - INFO - 	 Best Val. Loss: 0.525
2024-05-14 23:40 - INFO - 	 Best ROC-AUC: 0.701
2024-05-14 23:40 - INFO - 	 Best PR-AUC: 0.409
2024-05-14 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.673
2024-05-14 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.383
2024-05-14 23:40 - INFO - 	 Best Recall for 0.4 precision: 0.519
2024-05-14 23:40 - INFO - ---------------------------------------------
2024-05-14 23:45 - INFO - ---------------------------------------------
2024-05-14 23:45 - INFO - Epoch: 02 | Time: 5m 29s
2024-05-14 23:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7213
2024-05-14 23:45 - INFO - 	 Train Loss: 0.499
2024-05-14 23:45 - INFO - 	 Val. Loss: 0.501
2024-05-14 23:45 - INFO - 	 ROC-AUC: 0.721
2024-05-14 23:45 - INFO - 	 PR-AUC: 0.429
2024-05-14 23:45 - INFO - 	 Recall for 0.4 precision: 0.630
2024-05-14 23:45 - INFO - 	 Best Val. Loss: 0.501
2024-05-14 23:45 - INFO - 	 Best ROC-AUC: 0.721
2024-05-14 23:45 - INFO - 	 Best PR-AUC: 0.429
2024-05-14 23:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.706
2024-05-14 23:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.421
2024-05-14 23:45 - INFO - 	 Best Recall for 0.4 precision: 0.630
2024-05-14 23:45 - INFO - ---------------------------------------------
2024-05-14 23:52 - INFO - ---------------------------------------------
2024-05-14 23:52 - INFO - Epoch: 03 | Time: 6m 17s
2024-05-14 23:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72878
2024-05-14 23:52 - INFO - 	 Train Loss: 0.490
2024-05-14 23:52 - INFO - 	 Val. Loss: 0.498
2024-05-14 23:52 - INFO - 	 ROC-AUC: 0.729
2024-05-14 23:52 - INFO - 	 PR-AUC: 0.438
2024-05-14 23:52 - INFO - 	 Recall for 0.4 precision: 0.656
2024-05-14 23:52 - INFO - 	 Best Val. Loss: 0.498
2024-05-14 23:52 - INFO - 	 Best ROC-AUC: 0.729
2024-05-14 23:52 - INFO - 	 Best PR-AUC: 0.438
2024-05-14 23:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-14 23:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-14 23:52 - INFO - 	 Best Recall for 0.4 precision: 0.656
2024-05-14 23:52 - INFO - ---------------------------------------------
2024-05-14 23:58 - INFO - ---------------------------------------------
2024-05-14 23:58 - INFO - Epoch: 04 | Time: 5m 58s
2024-05-14 23:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7299
2024-05-14 23:58 - INFO - 	 Train Loss: 0.486
2024-05-14 23:58 - INFO - 	 Val. Loss: 0.500
2024-05-14 23:58 - INFO - 	 ROC-AUC: 0.730
2024-05-14 23:58 - INFO - 	 PR-AUC: 0.440
2024-05-14 23:58 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-14 23:58 - INFO - 	 Best Val. Loss: 0.498
2024-05-14 23:58 - INFO - 	 Best ROC-AUC: 0.730
2024-05-14 23:58 - INFO - 	 Best PR-AUC: 0.440
2024-05-14 23:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-05-14 23:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-05-14 23:58 - INFO - 	 Best Recall for 0.4 precision: 0.656
2024-05-14 23:58 - INFO - ---------------------------------------------
2024-05-15 00:04 - INFO - ---------------------------------------------
2024-05-15 00:04 - INFO - Epoch: 05 | Time: 5m 50s
2024-05-15 00:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73484
2024-05-15 00:04 - INFO - 	 Train Loss: 0.482
2024-05-15 00:04 - INFO - 	 Val. Loss: 0.496
2024-05-15 00:04 - INFO - 	 ROC-AUC: 0.735
2024-05-15 00:04 - INFO - 	 PR-AUC: 0.445
2024-05-15 00:04 - INFO - 	 Recall for 0.4 precision: 0.686
2024-05-15 00:04 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 00:04 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 00:04 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 00:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-15 00:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-15 00:04 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 00:04 - INFO - ---------------------------------------------
2024-05-15 00:10 - INFO - ---------------------------------------------
2024-05-15 00:10 - INFO - Epoch: 06 | Time: 6m 10s
2024-05-15 00:10 - INFO - 	 Train Loss: 0.480
2024-05-15 00:10 - INFO - 	 Val. Loss: 0.508
2024-05-15 00:10 - INFO - 	 ROC-AUC: 0.729
2024-05-15 00:10 - INFO - 	 PR-AUC: 0.438
2024-05-15 00:10 - INFO - 	 Recall for 0.4 precision: 0.653
2024-05-15 00:10 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 00:10 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 00:10 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 00:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-15 00:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-15 00:10 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 00:10 - INFO - ---------------------------------------------
2024-05-15 00:15 - INFO - ---------------------------------------------
2024-05-15 00:15 - INFO - Epoch: 07 | Time: 5m 34s
2024-05-15 00:15 - INFO - 	 Train Loss: 0.478
2024-05-15 00:15 - INFO - 	 Val. Loss: 0.495
2024-05-15 00:15 - INFO - 	 ROC-AUC: 0.734
2024-05-15 00:15 - INFO - 	 PR-AUC: 0.444
2024-05-15 00:15 - INFO - 	 Recall for 0.4 precision: 0.677
2024-05-15 00:15 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 00:15 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 00:15 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 00:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-15 00:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-15 00:15 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 00:15 - INFO - ---------------------------------------------
2024-05-15 00:21 - INFO - ---------------------------------------------
2024-05-15 00:21 - INFO - Epoch: 08 | Time: 5m 59s
2024-05-15 00:21 - INFO - 	 Train Loss: 0.477
2024-05-15 00:21 - INFO - 	 Val. Loss: 0.497
2024-05-15 00:21 - INFO - 	 ROC-AUC: 0.733
2024-05-15 00:21 - INFO - 	 PR-AUC: 0.447
2024-05-15 00:21 - INFO - 	 Recall for 0.4 precision: 0.669
2024-05-15 00:21 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 00:21 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 00:21 - INFO - 	 Best PR-AUC: 0.447
2024-05-15 00:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-15 00:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 00:21 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 00:21 - INFO - ---------------------------------------------
2024-05-15 00:27 - INFO - ---------------------------------------------
2024-05-15 00:27 - INFO - Epoch: 09 | Time: 5m 30s
2024-05-15 00:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73711
2024-05-15 00:27 - INFO - 	 Train Loss: 0.476
2024-05-15 00:27 - INFO - 	 Val. Loss: 0.491
2024-05-15 00:27 - INFO - 	 ROC-AUC: 0.737
2024-05-15 00:27 - INFO - 	 PR-AUC: 0.448
2024-05-15 00:27 - INFO - 	 Recall for 0.4 precision: 0.680
2024-05-15 00:27 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 00:27 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 00:27 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 00:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-15 00:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.447
2024-05-15 00:27 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 00:27 - INFO - ---------------------------------------------
2024-05-15 00:33 - INFO - ---------------------------------------------
2024-05-15 00:33 - INFO - Epoch: 10 | Time: 6m 1s
2024-05-15 00:33 - INFO - 	 Train Loss: 0.475
2024-05-15 00:33 - INFO - 	 Val. Loss: 0.496
2024-05-15 00:33 - INFO - 	 ROC-AUC: 0.731
2024-05-15 00:33 - INFO - 	 PR-AUC: 0.443
2024-05-15 00:33 - INFO - 	 Recall for 0.4 precision: 0.666
2024-05-15 00:33 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 00:33 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 00:33 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 00:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-15 00:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.447
2024-05-15 00:33 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 00:33 - INFO - ---------------------------------------------
2024-05-15 00:39 - INFO - Fit the preprocessing pipeline
2024-05-15 00:39 - INFO - Training using device: cuda
2024-05-15 00:39 - INFO - Creating generators
2024-05-15 00:39 - INFO - The model has 651,257 trainable parameters
2024-05-15 00:39 - INFO - * Model:
2024-05-15 00:39 - INFO - * -----------
2024-05-15 00:39 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 00:39 - INFO - * -----------
2024-05-15 00:39 - INFO - Evaluating model based on: rocauc
2024-05-15 00:39 - INFO - Training..

2024-05-15 00:45 - INFO - ---------------------------------------------
2024-05-15 00:45 - INFO - Epoch: 01 | Time: 5m 59s
2024-05-15 00:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70964
2024-05-15 00:45 - INFO - 	 Train Loss: 0.541
2024-05-15 00:45 - INFO - 	 Val. Loss: 0.516
2024-05-15 00:45 - INFO - 	 ROC-AUC: 0.710
2024-05-15 00:45 - INFO - 	 PR-AUC: 0.425
2024-05-15 00:45 - INFO - 	 Recall for 0.4 precision: 0.568
2024-05-15 00:45 - INFO - 	 Best Val. Loss: 0.516
2024-05-15 00:45 - INFO - 	 Best ROC-AUC: 0.710
2024-05-15 00:45 - INFO - 	 Best PR-AUC: 0.425
2024-05-15 00:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.687
2024-05-15 00:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.402
2024-05-15 00:45 - INFO - 	 Best Recall for 0.4 precision: 0.568
2024-05-15 00:45 - INFO - ---------------------------------------------
2024-05-15 00:51 - INFO - ---------------------------------------------
2024-05-15 00:51 - INFO - Epoch: 02 | Time: 5m 58s
2024-05-15 00:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7256
2024-05-15 00:51 - INFO - 	 Train Loss: 0.500
2024-05-15 00:51 - INFO - 	 Val. Loss: 0.501
2024-05-15 00:51 - INFO - 	 ROC-AUC: 0.726
2024-05-15 00:51 - INFO - 	 PR-AUC: 0.433
2024-05-15 00:51 - INFO - 	 Recall for 0.4 precision: 0.654
2024-05-15 00:51 - INFO - 	 Best Val. Loss: 0.501
2024-05-15 00:51 - INFO - 	 Best ROC-AUC: 0.726
2024-05-15 00:51 - INFO - 	 Best PR-AUC: 0.433
2024-05-15 00:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.708
2024-05-15 00:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.425
2024-05-15 00:51 - INFO - 	 Best Recall for 0.4 precision: 0.654
2024-05-15 00:51 - INFO - ---------------------------------------------
2024-05-15 00:57 - INFO - ---------------------------------------------
2024-05-15 00:57 - INFO - Epoch: 03 | Time: 6m 27s
2024-05-15 00:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72755
2024-05-15 00:57 - INFO - 	 Train Loss: 0.490
2024-05-15 00:57 - INFO - 	 Val. Loss: 0.497
2024-05-15 00:57 - INFO - 	 ROC-AUC: 0.728
2024-05-15 00:57 - INFO - 	 PR-AUC: 0.438
2024-05-15 00:57 - INFO - 	 Recall for 0.4 precision: 0.655
2024-05-15 00:57 - INFO - 	 Best Val. Loss: 0.497
2024-05-15 00:57 - INFO - 	 Best ROC-AUC: 0.728
2024-05-15 00:57 - INFO - 	 Best PR-AUC: 0.438
2024-05-15 00:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-15 00:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-15 00:57 - INFO - 	 Best Recall for 0.4 precision: 0.655
2024-05-15 00:57 - INFO - ---------------------------------------------
2024-05-15 01:03 - INFO - ---------------------------------------------
2024-05-15 01:03 - INFO - Epoch: 04 | Time: 5m 55s
2024-05-15 01:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73111
2024-05-15 01:03 - INFO - 	 Train Loss: 0.485
2024-05-15 01:03 - INFO - 	 Val. Loss: 0.497
2024-05-15 01:03 - INFO - 	 ROC-AUC: 0.731
2024-05-15 01:03 - INFO - 	 PR-AUC: 0.441
2024-05-15 01:03 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-15 01:03 - INFO - 	 Best Val. Loss: 0.497
2024-05-15 01:03 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 01:03 - INFO - 	 Best PR-AUC: 0.441
2024-05-15 01:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-15 01:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-15 01:03 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-15 01:03 - INFO - ---------------------------------------------
2024-05-15 01:09 - INFO - ---------------------------------------------
2024-05-15 01:09 - INFO - Epoch: 05 | Time: 5m 28s
2024-05-15 01:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73225
2024-05-15 01:09 - INFO - 	 Train Loss: 0.482
2024-05-15 01:09 - INFO - 	 Val. Loss: 0.496
2024-05-15 01:09 - INFO - 	 ROC-AUC: 0.732
2024-05-15 01:09 - INFO - 	 PR-AUC: 0.442
2024-05-15 01:09 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-15 01:09 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 01:09 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 01:09 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 01:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 01:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 01:09 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-15 01:09 - INFO - ---------------------------------------------
2024-05-15 01:15 - INFO - ---------------------------------------------
2024-05-15 01:15 - INFO - Epoch: 06 | Time: 5m 54s
2024-05-15 01:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73242
2024-05-15 01:15 - INFO - 	 Train Loss: 0.480
2024-05-15 01:15 - INFO - 	 Val. Loss: 0.495
2024-05-15 01:15 - INFO - 	 ROC-AUC: 0.732
2024-05-15 01:15 - INFO - 	 PR-AUC: 0.446
2024-05-15 01:15 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-15 01:15 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 01:15 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 01:15 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 01:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 01:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-15 01:15 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-15 01:15 - INFO - ---------------------------------------------
2024-05-15 01:21 - INFO - ---------------------------------------------
2024-05-15 01:21 - INFO - Epoch: 07 | Time: 5m 51s
2024-05-15 01:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73463
2024-05-15 01:21 - INFO - 	 Train Loss: 0.478
2024-05-15 01:21 - INFO - 	 Val. Loss: 0.495
2024-05-15 01:21 - INFO - 	 ROC-AUC: 0.735
2024-05-15 01:21 - INFO - 	 PR-AUC: 0.448
2024-05-15 01:21 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-15 01:21 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 01:21 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 01:21 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 01:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-15 01:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 01:21 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-15 01:21 - INFO - ---------------------------------------------
2024-05-15 01:27 - INFO - ---------------------------------------------
2024-05-15 01:27 - INFO - Epoch: 08 | Time: 5m 56s
2024-05-15 01:27 - INFO - 	 Train Loss: 0.477
2024-05-15 01:27 - INFO - 	 Val. Loss: 0.495
2024-05-15 01:27 - INFO - 	 ROC-AUC: 0.732
2024-05-15 01:27 - INFO - 	 PR-AUC: 0.444
2024-05-15 01:27 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 01:27 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 01:27 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 01:27 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 01:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-15 01:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 01:27 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-15 01:27 - INFO - ---------------------------------------------
2024-05-15 01:33 - INFO - ---------------------------------------------
2024-05-15 01:33 - INFO - Epoch: 09 | Time: 6m 1s
2024-05-15 01:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73483
2024-05-15 01:33 - INFO - 	 Train Loss: 0.476
2024-05-15 01:33 - INFO - 	 Val. Loss: 0.495
2024-05-15 01:33 - INFO - 	 ROC-AUC: 0.735
2024-05-15 01:33 - INFO - 	 PR-AUC: 0.446
2024-05-15 01:33 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-15 01:33 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 01:33 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 01:33 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 01:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 01:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 01:33 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-15 01:33 - INFO - ---------------------------------------------
2024-05-15 01:39 - INFO - ---------------------------------------------
2024-05-15 01:39 - INFO - Epoch: 10 | Time: 5m 57s
2024-05-15 01:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7404
2024-05-15 01:39 - INFO - 	 Train Loss: 0.475
2024-05-15 01:39 - INFO - 	 Val. Loss: 0.491
2024-05-15 01:39 - INFO - 	 ROC-AUC: 0.740
2024-05-15 01:39 - INFO - 	 PR-AUC: 0.456
2024-05-15 01:39 - INFO - 	 Recall for 0.4 precision: 0.695
2024-05-15 01:39 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 01:39 - INFO - 	 Best ROC-AUC: 0.740
2024-05-15 01:39 - INFO - 	 Best PR-AUC: 0.456
2024-05-15 01:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 01:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-15 01:39 - INFO - 	 Best Recall for 0.4 precision: 0.695
2024-05-15 01:39 - INFO - ---------------------------------------------
2024-05-15 01:45 - INFO - Fit the preprocessing pipeline
2024-05-15 01:45 - INFO - Training using device: cuda
2024-05-15 01:45 - INFO - Creating generators
2024-05-15 01:45 - INFO - The model has 651,257 trainable parameters
2024-05-15 01:45 - INFO - * Model:
2024-05-15 01:45 - INFO - * -----------
2024-05-15 01:45 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 01:45 - INFO - * -----------
2024-05-15 01:45 - INFO - Evaluating model based on: rocauc
2024-05-15 01:45 - INFO - Training..

2024-05-15 01:50 - INFO - ---------------------------------------------
2024-05-15 01:50 - INFO - Epoch: 01 | Time: 5m 28s
2024-05-15 01:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70646
2024-05-15 01:50 - INFO - 	 Train Loss: 0.541
2024-05-15 01:50 - INFO - 	 Val. Loss: 0.515
2024-05-15 01:50 - INFO - 	 ROC-AUC: 0.706
2024-05-15 01:50 - INFO - 	 PR-AUC: 0.422
2024-05-15 01:50 - INFO - 	 Recall for 0.4 precision: 0.556
2024-05-15 01:50 - INFO - 	 Best Val. Loss: 0.515
2024-05-15 01:50 - INFO - 	 Best ROC-AUC: 0.706
2024-05-15 01:50 - INFO - 	 Best PR-AUC: 0.422
2024-05-15 01:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.682
2024-05-15 01:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.393
2024-05-15 01:50 - INFO - 	 Best Recall for 0.4 precision: 0.556
2024-05-15 01:50 - INFO - ---------------------------------------------
2024-05-15 01:57 - INFO - ---------------------------------------------
2024-05-15 01:57 - INFO - Epoch: 02 | Time: 6m 51s
2024-05-15 01:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72035
2024-05-15 01:57 - INFO - 	 Train Loss: 0.500
2024-05-15 01:57 - INFO - 	 Val. Loss: 0.499
2024-05-15 01:57 - INFO - 	 ROC-AUC: 0.720
2024-05-15 01:57 - INFO - 	 PR-AUC: 0.434
2024-05-15 01:57 - INFO - 	 Recall for 0.4 precision: 0.614
2024-05-15 01:57 - INFO - 	 Best Val. Loss: 0.499
2024-05-15 01:57 - INFO - 	 Best ROC-AUC: 0.720
2024-05-15 01:57 - INFO - 	 Best PR-AUC: 0.434
2024-05-15 01:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-15 01:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-15 01:57 - INFO - 	 Best Recall for 0.4 precision: 0.614
2024-05-15 01:57 - INFO - ---------------------------------------------
2024-05-15 02:03 - INFO - ---------------------------------------------
2024-05-15 02:03 - INFO - Epoch: 03 | Time: 5m 51s
2024-05-15 02:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72357
2024-05-15 02:03 - INFO - 	 Train Loss: 0.491
2024-05-15 02:03 - INFO - 	 Val. Loss: 0.498
2024-05-15 02:03 - INFO - 	 ROC-AUC: 0.724
2024-05-15 02:03 - INFO - 	 PR-AUC: 0.433
2024-05-15 02:03 - INFO - 	 Recall for 0.4 precision: 0.633
2024-05-15 02:03 - INFO - 	 Best Val. Loss: 0.498
2024-05-15 02:03 - INFO - 	 Best ROC-AUC: 0.724
2024-05-15 02:03 - INFO - 	 Best PR-AUC: 0.434
2024-05-15 02:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 02:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-15 02:03 - INFO - 	 Best Recall for 0.4 precision: 0.633
2024-05-15 02:03 - INFO - ---------------------------------------------
2024-05-15 02:08 - INFO - ---------------------------------------------
2024-05-15 02:08 - INFO - Epoch: 04 | Time: 5m 22s
2024-05-15 02:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72592
2024-05-15 02:08 - INFO - 	 Train Loss: 0.487
2024-05-15 02:08 - INFO - 	 Val. Loss: 0.497
2024-05-15 02:08 - INFO - 	 ROC-AUC: 0.726
2024-05-15 02:08 - INFO - 	 PR-AUC: 0.435
2024-05-15 02:08 - INFO - 	 Recall for 0.4 precision: 0.647
2024-05-15 02:08 - INFO - 	 Best Val. Loss: 0.497
2024-05-15 02:08 - INFO - 	 Best ROC-AUC: 0.726
2024-05-15 02:08 - INFO - 	 Best PR-AUC: 0.435
2024-05-15 02:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-15 02:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-05-15 02:08 - INFO - 	 Best Recall for 0.4 precision: 0.647
2024-05-15 02:08 - INFO - ---------------------------------------------
2024-05-15 02:13 - INFO - ---------------------------------------------
2024-05-15 02:13 - INFO - Epoch: 05 | Time: 5m 14s
2024-05-15 02:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72786
2024-05-15 02:13 - INFO - 	 Train Loss: 0.484
2024-05-15 02:13 - INFO - 	 Val. Loss: 0.499
2024-05-15 02:13 - INFO - 	 ROC-AUC: 0.728
2024-05-15 02:13 - INFO - 	 PR-AUC: 0.438
2024-05-15 02:13 - INFO - 	 Recall for 0.4 precision: 0.657
2024-05-15 02:13 - INFO - 	 Best Val. Loss: 0.497
2024-05-15 02:13 - INFO - 	 Best ROC-AUC: 0.728
2024-05-15 02:13 - INFO - 	 Best PR-AUC: 0.438
2024-05-15 02:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 02:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 02:13 - INFO - 	 Best Recall for 0.4 precision: 0.657
2024-05-15 02:13 - INFO - ---------------------------------------------
2024-05-15 02:20 - INFO - ---------------------------------------------
2024-05-15 02:20 - INFO - Epoch: 06 | Time: 6m 14s
2024-05-15 02:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72959
2024-05-15 02:20 - INFO - 	 Train Loss: 0.481
2024-05-15 02:20 - INFO - 	 Val. Loss: 0.495
2024-05-15 02:20 - INFO - 	 ROC-AUC: 0.730
2024-05-15 02:20 - INFO - 	 PR-AUC: 0.441
2024-05-15 02:20 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-15 02:20 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 02:20 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 02:20 - INFO - 	 Best PR-AUC: 0.441
2024-05-15 02:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-15 02:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 02:20 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-15 02:20 - INFO - ---------------------------------------------
2024-05-15 02:26 - INFO - ---------------------------------------------
2024-05-15 02:26 - INFO - Epoch: 07 | Time: 6m 27s
2024-05-15 02:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73283
2024-05-15 02:26 - INFO - 	 Train Loss: 0.479
2024-05-15 02:26 - INFO - 	 Val. Loss: 0.493
2024-05-15 02:26 - INFO - 	 ROC-AUC: 0.733
2024-05-15 02:26 - INFO - 	 PR-AUC: 0.445
2024-05-15 02:26 - INFO - 	 Recall for 0.4 precision: 0.675
2024-05-15 02:26 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 02:26 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 02:26 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 02:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 02:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 02:26 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-15 02:26 - INFO - ---------------------------------------------
2024-05-15 02:32 - INFO - ---------------------------------------------
2024-05-15 02:32 - INFO - Epoch: 08 | Time: 6m 16s
2024-05-15 02:32 - INFO - 	 Train Loss: 0.477
2024-05-15 02:32 - INFO - 	 Val. Loss: 0.497
2024-05-15 02:32 - INFO - 	 ROC-AUC: 0.732
2024-05-15 02:32 - INFO - 	 PR-AUC: 0.442
2024-05-15 02:32 - INFO - 	 Recall for 0.4 precision: 0.002
2024-05-15 02:32 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 02:32 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 02:32 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 02:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 02:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 02:32 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-15 02:32 - INFO - ---------------------------------------------
2024-05-15 02:38 - INFO - ---------------------------------------------
2024-05-15 02:38 - INFO - Epoch: 09 | Time: 5m 44s
2024-05-15 02:38 - INFO - 	 Train Loss: 0.476
2024-05-15 02:38 - INFO - 	 Val. Loss: 0.496
2024-05-15 02:38 - INFO - 	 ROC-AUC: 0.732
2024-05-15 02:38 - INFO - 	 PR-AUC: 0.441
2024-05-15 02:38 - INFO - 	 Recall for 0.4 precision: 0.661
2024-05-15 02:38 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 02:38 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 02:38 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 02:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 02:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 02:38 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-15 02:38 - INFO - ---------------------------------------------
2024-05-15 02:44 - INFO - ---------------------------------------------
2024-05-15 02:44 - INFO - Epoch: 10 | Time: 6m 2s
2024-05-15 02:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7344
2024-05-15 02:44 - INFO - 	 Train Loss: 0.476
2024-05-15 02:44 - INFO - 	 Val. Loss: 0.498
2024-05-15 02:44 - INFO - 	 ROC-AUC: 0.734
2024-05-15 02:44 - INFO - 	 PR-AUC: 0.445
2024-05-15 02:44 - INFO - 	 Recall for 0.4 precision: 0.684
2024-05-15 02:44 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 02:44 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 02:44 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 02:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 02:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 02:44 - INFO - 	 Best Recall for 0.4 precision: 0.684
2024-05-15 02:44 - INFO - ---------------------------------------------
2024-05-15 02:50 - INFO - Fit the preprocessing pipeline
2024-05-15 02:50 - INFO - Training using device: cuda
2024-05-15 02:50 - INFO - Creating generators
2024-05-15 02:50 - INFO - The model has 651,257 trainable parameters
2024-05-15 02:50 - INFO - * Model:
2024-05-15 02:50 - INFO - * -----------
2024-05-15 02:50 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 02:50 - INFO - * -----------
2024-05-15 02:50 - INFO - Evaluating model based on: rocauc
2024-05-15 02:50 - INFO - Training..

2024-05-15 02:56 - INFO - ---------------------------------------------
2024-05-15 02:56 - INFO - Epoch: 01 | Time: 5m 20s
2024-05-15 02:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71422
2024-05-15 02:56 - INFO - 	 Train Loss: 0.540
2024-05-15 02:56 - INFO - 	 Val. Loss: 0.512
2024-05-15 02:56 - INFO - 	 ROC-AUC: 0.714
2024-05-15 02:56 - INFO - 	 PR-AUC: 0.426
2024-05-15 02:56 - INFO - 	 Recall for 0.4 precision: 0.599
2024-05-15 02:56 - INFO - 	 Best Val. Loss: 0.512
2024-05-15 02:56 - INFO - 	 Best ROC-AUC: 0.714
2024-05-15 02:56 - INFO - 	 Best PR-AUC: 0.426
2024-05-15 02:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.687
2024-05-15 02:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.396
2024-05-15 02:56 - INFO - 	 Best Recall for 0.4 precision: 0.599
2024-05-15 02:56 - INFO - ---------------------------------------------
2024-05-15 03:01 - INFO - ---------------------------------------------
2024-05-15 03:01 - INFO - Epoch: 02 | Time: 4m 58s
2024-05-15 03:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72548
2024-05-15 03:01 - INFO - 	 Train Loss: 0.498
2024-05-15 03:01 - INFO - 	 Val. Loss: 0.502
2024-05-15 03:01 - INFO - 	 ROC-AUC: 0.725
2024-05-15 03:01 - INFO - 	 PR-AUC: 0.436
2024-05-15 03:01 - INFO - 	 Recall for 0.4 precision: 0.637
2024-05-15 03:01 - INFO - 	 Best Val. Loss: 0.502
2024-05-15 03:01 - INFO - 	 Best ROC-AUC: 0.725
2024-05-15 03:01 - INFO - 	 Best PR-AUC: 0.436
2024-05-15 03:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.699
2024-05-15 03:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.417
2024-05-15 03:01 - INFO - 	 Best Recall for 0.4 precision: 0.637
2024-05-15 03:01 - INFO - ---------------------------------------------
2024-05-15 03:06 - INFO - ---------------------------------------------
2024-05-15 03:06 - INFO - Epoch: 03 | Time: 5m 11s
2024-05-15 03:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72733
2024-05-15 03:06 - INFO - 	 Train Loss: 0.489
2024-05-15 03:06 - INFO - 	 Val. Loss: 0.502
2024-05-15 03:06 - INFO - 	 ROC-AUC: 0.727
2024-05-15 03:06 - INFO - 	 PR-AUC: 0.441
2024-05-15 03:06 - INFO - 	 Recall for 0.4 precision: 0.652
2024-05-15 03:06 - INFO - 	 Best Val. Loss: 0.502
2024-05-15 03:06 - INFO - 	 Best ROC-AUC: 0.727
2024-05-15 03:06 - INFO - 	 Best PR-AUC: 0.441
2024-05-15 03:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-05-15 03:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-15 03:06 - INFO - 	 Best Recall for 0.4 precision: 0.652
2024-05-15 03:06 - INFO - ---------------------------------------------
2024-05-15 03:10 - INFO - ---------------------------------------------
2024-05-15 03:10 - INFO - Epoch: 04 | Time: 4m 36s
2024-05-15 03:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73111
2024-05-15 03:10 - INFO - 	 Train Loss: 0.484
2024-05-15 03:10 - INFO - 	 Val. Loss: 0.495
2024-05-15 03:10 - INFO - 	 ROC-AUC: 0.731
2024-05-15 03:10 - INFO - 	 PR-AUC: 0.441
2024-05-15 03:10 - INFO - 	 Recall for 0.4 precision: 0.663
2024-05-15 03:10 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 03:10 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 03:10 - INFO - 	 Best PR-AUC: 0.441
2024-05-15 03:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 03:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 03:10 - INFO - 	 Best Recall for 0.4 precision: 0.663
2024-05-15 03:10 - INFO - ---------------------------------------------
2024-05-15 03:15 - INFO - ---------------------------------------------
2024-05-15 03:15 - INFO - Epoch: 05 | Time: 5m 4s
2024-05-15 03:15 - INFO - 	 Train Loss: 0.482
2024-05-15 03:15 - INFO - 	 Val. Loss: 0.500
2024-05-15 03:15 - INFO - 	 ROC-AUC: 0.729
2024-05-15 03:15 - INFO - 	 PR-AUC: 0.438
2024-05-15 03:15 - INFO - 	 Recall for 0.4 precision: 0.663
2024-05-15 03:15 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 03:15 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 03:15 - INFO - 	 Best PR-AUC: 0.441
2024-05-15 03:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 03:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 03:15 - INFO - 	 Best Recall for 0.4 precision: 0.663
2024-05-15 03:15 - INFO - ---------------------------------------------
2024-05-15 03:20 - INFO - ---------------------------------------------
2024-05-15 03:20 - INFO - Epoch: 06 | Time: 4m 29s
2024-05-15 03:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73434
2024-05-15 03:20 - INFO - 	 Train Loss: 0.479
2024-05-15 03:20 - INFO - 	 Val. Loss: 0.499
2024-05-15 03:20 - INFO - 	 ROC-AUC: 0.734
2024-05-15 03:20 - INFO - 	 PR-AUC: 0.448
2024-05-15 03:20 - INFO - 	 Recall for 0.4 precision: 0.676
2024-05-15 03:20 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 03:20 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 03:20 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 03:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 03:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-15 03:20 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-15 03:20 - INFO - ---------------------------------------------
2024-05-15 03:25 - INFO - ---------------------------------------------
2024-05-15 03:25 - INFO - Epoch: 07 | Time: 4m 52s
2024-05-15 03:25 - INFO - 	 Train Loss: 0.478
2024-05-15 03:25 - INFO - 	 Val. Loss: 0.496
2024-05-15 03:25 - INFO - 	 ROC-AUC: 0.732
2024-05-15 03:25 - INFO - 	 PR-AUC: 0.444
2024-05-15 03:25 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-15 03:25 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 03:25 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 03:25 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 03:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 03:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-15 03:25 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-15 03:25 - INFO - ---------------------------------------------
2024-05-15 03:29 - INFO - ---------------------------------------------
2024-05-15 03:29 - INFO - Epoch: 08 | Time: 4m 17s
2024-05-15 03:29 - INFO - 	 Train Loss: 0.477
2024-05-15 03:29 - INFO - 	 Val. Loss: 0.500
2024-05-15 03:29 - INFO - 	 ROC-AUC: 0.732
2024-05-15 03:29 - INFO - 	 PR-AUC: 0.447
2024-05-15 03:29 - INFO - 	 Recall for 0.4 precision: 0.669
2024-05-15 03:29 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 03:29 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 03:29 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 03:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 03:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-15 03:29 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-15 03:29 - INFO - ---------------------------------------------
2024-05-15 03:33 - INFO - ---------------------------------------------
2024-05-15 03:33 - INFO - Epoch: 09 | Time: 4m 18s
2024-05-15 03:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73613
2024-05-15 03:33 - INFO - 	 Train Loss: 0.476
2024-05-15 03:33 - INFO - 	 Val. Loss: 0.496
2024-05-15 03:33 - INFO - 	 ROC-AUC: 0.736
2024-05-15 03:33 - INFO - 	 PR-AUC: 0.444
2024-05-15 03:33 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-15 03:33 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 03:33 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 03:33 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 03:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-15 03:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-15 03:33 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-15 03:33 - INFO - ---------------------------------------------
2024-05-15 03:38 - INFO - ---------------------------------------------
2024-05-15 03:38 - INFO - Epoch: 10 | Time: 4m 9s
2024-05-15 03:38 - INFO - 	 Train Loss: 0.475
2024-05-15 03:38 - INFO - 	 Val. Loss: 0.495
2024-05-15 03:38 - INFO - 	 ROC-AUC: 0.734
2024-05-15 03:38 - INFO - 	 PR-AUC: 0.446
2024-05-15 03:38 - INFO - 	 Recall for 0.4 precision: 0.680
2024-05-15 03:38 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 03:38 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 03:38 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 03:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-15 03:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-15 03:38 - INFO - 	 Best Recall for 0.4 precision: 0.680
2024-05-15 03:38 - INFO - ---------------------------------------------
2024-05-15 03:44 - INFO - Fit the preprocessing pipeline
2024-05-15 03:44 - INFO - Training using device: cuda
2024-05-15 03:44 - INFO - Creating generators
2024-05-15 03:44 - INFO - The model has 651,257 trainable parameters
2024-05-15 03:44 - INFO - * Model:
2024-05-15 03:44 - INFO - * -----------
2024-05-15 03:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 03:44 - INFO - * -----------
2024-05-15 03:44 - INFO - Evaluating model based on: rocauc
2024-05-15 03:44 - INFO - Training..

2024-05-15 03:48 - INFO - ---------------------------------------------
2024-05-15 03:48 - INFO - Epoch: 01 | Time: 4m 21s
2024-05-15 03:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70277
2024-05-15 03:48 - INFO - 	 Train Loss: 0.541
2024-05-15 03:48 - INFO - 	 Val. Loss: 0.509
2024-05-15 03:48 - INFO - 	 ROC-AUC: 0.703
2024-05-15 03:48 - INFO - 	 PR-AUC: 0.417
2024-05-15 03:48 - INFO - 	 Recall for 0.4 precision: 0.536
2024-05-15 03:48 - INFO - 	 Best Val. Loss: 0.509
2024-05-15 03:48 - INFO - 	 Best ROC-AUC: 0.703
2024-05-15 03:48 - INFO - 	 Best PR-AUC: 0.417
2024-05-15 03:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.682
2024-05-15 03:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.398
2024-05-15 03:48 - INFO - 	 Best Recall for 0.4 precision: 0.536
2024-05-15 03:48 - INFO - ---------------------------------------------
2024-05-15 03:53 - INFO - ---------------------------------------------
2024-05-15 03:53 - INFO - Epoch: 02 | Time: 5m 10s
2024-05-15 03:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7283
2024-05-15 03:53 - INFO - 	 Train Loss: 0.500
2024-05-15 03:53 - INFO - 	 Val. Loss: 0.502
2024-05-15 03:53 - INFO - 	 ROC-AUC: 0.728
2024-05-15 03:53 - INFO - 	 PR-AUC: 0.444
2024-05-15 03:53 - INFO - 	 Recall for 0.4 precision: 0.649
2024-05-15 03:53 - INFO - 	 Best Val. Loss: 0.502
2024-05-15 03:53 - INFO - 	 Best ROC-AUC: 0.728
2024-05-15 03:53 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 03:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-15 03:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-15 03:53 - INFO - 	 Best Recall for 0.4 precision: 0.649
2024-05-15 03:53 - INFO - ---------------------------------------------
2024-05-15 03:57 - INFO - ---------------------------------------------
2024-05-15 03:57 - INFO - Epoch: 03 | Time: 4m 16s
2024-05-15 03:57 - INFO - 	 Train Loss: 0.490
2024-05-15 03:57 - INFO - 	 Val. Loss: 0.507
2024-05-15 03:57 - INFO - 	 ROC-AUC: 0.727
2024-05-15 03:57 - INFO - 	 PR-AUC: 0.438
2024-05-15 03:57 - INFO - 	 Recall for 0.4 precision: 0.640
2024-05-15 03:57 - INFO - 	 Best Val. Loss: 0.502
2024-05-15 03:57 - INFO - 	 Best ROC-AUC: 0.728
2024-05-15 03:57 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 03:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-15 03:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-15 03:57 - INFO - 	 Best Recall for 0.4 precision: 0.649
2024-05-15 03:57 - INFO - ---------------------------------------------
2024-05-15 04:02 - INFO - ---------------------------------------------
2024-05-15 04:02 - INFO - Epoch: 04 | Time: 4m 12s
2024-05-15 04:02 - INFO - 	 Train Loss: 0.485
2024-05-15 04:02 - INFO - 	 Val. Loss: 0.497
2024-05-15 04:02 - INFO - 	 ROC-AUC: 0.727
2024-05-15 04:02 - INFO - 	 PR-AUC: 0.440
2024-05-15 04:02 - INFO - 	 Recall for 0.4 precision: 0.645
2024-05-15 04:02 - INFO - 	 Best Val. Loss: 0.497
2024-05-15 04:02 - INFO - 	 Best ROC-AUC: 0.728
2024-05-15 04:02 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 04:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-15 04:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-15 04:02 - INFO - 	 Best Recall for 0.4 precision: 0.649
2024-05-15 04:02 - INFO - ---------------------------------------------
2024-05-15 04:06 - INFO - ---------------------------------------------
2024-05-15 04:06 - INFO - Epoch: 05 | Time: 4m 12s
2024-05-15 04:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73203
2024-05-15 04:06 - INFO - 	 Train Loss: 0.481
2024-05-15 04:06 - INFO - 	 Val. Loss: 0.505
2024-05-15 04:06 - INFO - 	 ROC-AUC: 0.732
2024-05-15 04:06 - INFO - 	 PR-AUC: 0.445
2024-05-15 04:06 - INFO - 	 Recall for 0.4 precision: 0.668
2024-05-15 04:06 - INFO - 	 Best Val. Loss: 0.497
2024-05-15 04:06 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 04:06 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 04:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 04:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-05-15 04:06 - INFO - 	 Best Recall for 0.4 precision: 0.668
2024-05-15 04:06 - INFO - ---------------------------------------------
2024-05-15 04:10 - INFO - ---------------------------------------------
2024-05-15 04:10 - INFO - Epoch: 06 | Time: 4m 23s
2024-05-15 04:10 - INFO - 	 Train Loss: 0.479
2024-05-15 04:10 - INFO - 	 Val. Loss: 0.501
2024-05-15 04:10 - INFO - 	 ROC-AUC: 0.732
2024-05-15 04:10 - INFO - 	 PR-AUC: 0.448
2024-05-15 04:10 - INFO - 	 Recall for 0.4 precision: 0.674
2024-05-15 04:10 - INFO - 	 Best Val. Loss: 0.497
2024-05-15 04:10 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 04:10 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 04:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 04:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-15 04:10 - INFO - 	 Best Recall for 0.4 precision: 0.674
2024-05-15 04:10 - INFO - ---------------------------------------------
2024-05-15 04:14 - INFO - ---------------------------------------------
2024-05-15 04:14 - INFO - Epoch: 07 | Time: 4m 8s
2024-05-15 04:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73421
2024-05-15 04:14 - INFO - 	 Train Loss: 0.477
2024-05-15 04:14 - INFO - 	 Val. Loss: 0.495
2024-05-15 04:14 - INFO - 	 ROC-AUC: 0.734
2024-05-15 04:14 - INFO - 	 PR-AUC: 0.446
2024-05-15 04:14 - INFO - 	 Recall for 0.4 precision: 0.675
2024-05-15 04:14 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 04:14 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 04:14 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 04:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 04:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-15 04:14 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-15 04:14 - INFO - ---------------------------------------------
2024-05-15 04:18 - INFO - ---------------------------------------------
2024-05-15 04:18 - INFO - Epoch: 08 | Time: 4m 3s
2024-05-15 04:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73452
2024-05-15 04:18 - INFO - 	 Train Loss: 0.475
2024-05-15 04:18 - INFO - 	 Val. Loss: 0.501
2024-05-15 04:18 - INFO - 	 ROC-AUC: 0.735
2024-05-15 04:18 - INFO - 	 PR-AUC: 0.449
2024-05-15 04:18 - INFO - 	 Recall for 0.4 precision: 0.677
2024-05-15 04:18 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 04:18 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 04:18 - INFO - 	 Best PR-AUC: 0.449
2024-05-15 04:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 04:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-15 04:18 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-15 04:18 - INFO - ---------------------------------------------
2024-05-15 04:22 - INFO - ---------------------------------------------
2024-05-15 04:22 - INFO - Epoch: 09 | Time: 3m 59s
2024-05-15 04:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7352
2024-05-15 04:22 - INFO - 	 Train Loss: 0.474
2024-05-15 04:22 - INFO - 	 Val. Loss: 0.497
2024-05-15 04:22 - INFO - 	 ROC-AUC: 0.735
2024-05-15 04:22 - INFO - 	 PR-AUC: 0.443
2024-05-15 04:22 - INFO - 	 Recall for 0.4 precision: 0.002
2024-05-15 04:22 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 04:22 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 04:22 - INFO - 	 Best PR-AUC: 0.449
2024-05-15 04:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 04:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-15 04:22 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-15 04:22 - INFO - ---------------------------------------------
2024-05-15 04:27 - INFO - ---------------------------------------------
2024-05-15 04:27 - INFO - Epoch: 10 | Time: 4m 5s
2024-05-15 04:27 - INFO - 	 Train Loss: 0.473
2024-05-15 04:27 - INFO - 	 Val. Loss: 0.497
2024-05-15 04:27 - INFO - 	 ROC-AUC: 0.733
2024-05-15 04:27 - INFO - 	 PR-AUC: 0.442
2024-05-15 04:27 - INFO - 	 Recall for 0.4 precision: 0.675
2024-05-15 04:27 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 04:27 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 04:27 - INFO - 	 Best PR-AUC: 0.449
2024-05-15 04:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 04:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-15 04:27 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-15 04:27 - INFO - ---------------------------------------------
2024-05-15 04:33 - INFO - Fit the preprocessing pipeline
2024-05-15 04:33 - INFO - Training using device: cuda
2024-05-15 04:33 - INFO - Creating generators
2024-05-15 04:33 - INFO - The model has 651,257 trainable parameters
2024-05-15 04:33 - INFO - * Model:
2024-05-15 04:33 - INFO - * -----------
2024-05-15 04:33 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 04:33 - INFO - * -----------
2024-05-15 04:33 - INFO - Evaluating model based on: rocauc
2024-05-15 04:33 - INFO - Training..

2024-05-15 04:37 - INFO - ---------------------------------------------
2024-05-15 04:37 - INFO - Epoch: 01 | Time: 4m 7s
2024-05-15 04:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70593
2024-05-15 04:37 - INFO - 	 Train Loss: 0.543
2024-05-15 04:37 - INFO - 	 Val. Loss: 0.509
2024-05-15 04:37 - INFO - 	 ROC-AUC: 0.706
2024-05-15 04:37 - INFO - 	 PR-AUC: 0.423
2024-05-15 04:37 - INFO - 	 Recall for 0.4 precision: 0.000
2024-05-15 04:37 - INFO - 	 Best Val. Loss: 0.509
2024-05-15 04:37 - INFO - 	 Best ROC-AUC: 0.706
2024-05-15 04:37 - INFO - 	 Best PR-AUC: 0.423
2024-05-15 04:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.679
2024-05-15 04:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.394
2024-05-15 04:37 - INFO - 	 Best Recall for 0.4 precision: 0.000
2024-05-15 04:37 - INFO - ---------------------------------------------
2024-05-15 04:41 - INFO - ---------------------------------------------
2024-05-15 04:41 - INFO - Epoch: 02 | Time: 4m 4s
2024-05-15 04:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72471
2024-05-15 04:41 - INFO - 	 Train Loss: 0.501
2024-05-15 04:41 - INFO - 	 Val. Loss: 0.498
2024-05-15 04:41 - INFO - 	 ROC-AUC: 0.725
2024-05-15 04:41 - INFO - 	 PR-AUC: 0.436
2024-05-15 04:41 - INFO - 	 Recall for 0.4 precision: 0.642
2024-05-15 04:41 - INFO - 	 Best Val. Loss: 0.498
2024-05-15 04:41 - INFO - 	 Best ROC-AUC: 0.725
2024-05-15 04:41 - INFO - 	 Best PR-AUC: 0.436
2024-05-15 04:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-05-15 04:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.424
2024-05-15 04:41 - INFO - 	 Best Recall for 0.4 precision: 0.642
2024-05-15 04:41 - INFO - ---------------------------------------------
2024-05-15 04:45 - INFO - ---------------------------------------------
2024-05-15 04:45 - INFO - Epoch: 03 | Time: 4m 1s
2024-05-15 04:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72905
2024-05-15 04:45 - INFO - 	 Train Loss: 0.490
2024-05-15 04:45 - INFO - 	 Val. Loss: 0.495
2024-05-15 04:45 - INFO - 	 ROC-AUC: 0.729
2024-05-15 04:45 - INFO - 	 PR-AUC: 0.441
2024-05-15 04:45 - INFO - 	 Recall for 0.4 precision: 0.659
2024-05-15 04:45 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 04:45 - INFO - 	 Best ROC-AUC: 0.729
2024-05-15 04:45 - INFO - 	 Best PR-AUC: 0.441
2024-05-15 04:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 04:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-05-15 04:45 - INFO - 	 Best Recall for 0.4 precision: 0.659
2024-05-15 04:45 - INFO - ---------------------------------------------
2024-05-15 04:49 - INFO - ---------------------------------------------
2024-05-15 04:49 - INFO - Epoch: 04 | Time: 4m 0s
2024-05-15 04:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73356
2024-05-15 04:49 - INFO - 	 Train Loss: 0.485
2024-05-15 04:49 - INFO - 	 Val. Loss: 0.493
2024-05-15 04:49 - INFO - 	 ROC-AUC: 0.734
2024-05-15 04:49 - INFO - 	 PR-AUC: 0.445
2024-05-15 04:49 - INFO - 	 Recall for 0.4 precision: 0.676
2024-05-15 04:49 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 04:49 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 04:49 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 04:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 04:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-15 04:49 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-15 04:49 - INFO - ---------------------------------------------
2024-05-15 04:54 - INFO - ---------------------------------------------
2024-05-15 04:54 - INFO - Epoch: 05 | Time: 4m 59s
2024-05-15 04:54 - INFO - 	 Train Loss: 0.482
2024-05-15 04:54 - INFO - 	 Val. Loss: 0.495
2024-05-15 04:54 - INFO - 	 ROC-AUC: 0.733
2024-05-15 04:54 - INFO - 	 PR-AUC: 0.445
2024-05-15 04:54 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-15 04:54 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 04:54 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 04:54 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 04:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 04:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 04:54 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-15 04:54 - INFO - ---------------------------------------------
2024-05-15 04:58 - INFO - ---------------------------------------------
2024-05-15 04:58 - INFO - Epoch: 06 | Time: 4m 0s
2024-05-15 04:58 - INFO - 	 Train Loss: 0.479
2024-05-15 04:58 - INFO - 	 Val. Loss: 0.495
2024-05-15 04:58 - INFO - 	 ROC-AUC: 0.732
2024-05-15 04:58 - INFO - 	 PR-AUC: 0.441
2024-05-15 04:58 - INFO - 	 Recall for 0.4 precision: 0.669
2024-05-15 04:58 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 04:58 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 04:58 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 04:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 04:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 04:58 - INFO - 	 Best Recall for 0.4 precision: 0.676
2024-05-15 04:58 - INFO - ---------------------------------------------
2024-05-15 05:02 - INFO - ---------------------------------------------
2024-05-15 05:02 - INFO - Epoch: 07 | Time: 3m 59s
2024-05-15 05:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73763
2024-05-15 05:02 - INFO - 	 Train Loss: 0.477
2024-05-15 05:02 - INFO - 	 Val. Loss: 0.492
2024-05-15 05:02 - INFO - 	 ROC-AUC: 0.738
2024-05-15 05:02 - INFO - 	 PR-AUC: 0.450
2024-05-15 05:02 - INFO - 	 Recall for 0.4 precision: 0.686
2024-05-15 05:02 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 05:02 - INFO - 	 Best ROC-AUC: 0.738
2024-05-15 05:02 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 05:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 05:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 05:02 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 05:02 - INFO - ---------------------------------------------
2024-05-15 05:06 - INFO - ---------------------------------------------
2024-05-15 05:06 - INFO - Epoch: 08 | Time: 4m 25s
2024-05-15 05:06 - INFO - 	 Train Loss: 0.476
2024-05-15 05:06 - INFO - 	 Val. Loss: 0.492
2024-05-15 05:06 - INFO - 	 ROC-AUC: 0.737
2024-05-15 05:06 - INFO - 	 PR-AUC: 0.448
2024-05-15 05:06 - INFO - 	 Recall for 0.4 precision: 0.689
2024-05-15 05:06 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 05:06 - INFO - 	 Best ROC-AUC: 0.738
2024-05-15 05:06 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 05:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 05:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 05:06 - INFO - 	 Best Recall for 0.4 precision: 0.689
2024-05-15 05:06 - INFO - ---------------------------------------------
2024-05-15 05:10 - INFO - ---------------------------------------------
2024-05-15 05:10 - INFO - Epoch: 09 | Time: 3m 53s
2024-05-15 05:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74121
2024-05-15 05:10 - INFO - 	 Train Loss: 0.475
2024-05-15 05:10 - INFO - 	 Val. Loss: 0.491
2024-05-15 05:10 - INFO - 	 ROC-AUC: 0.741
2024-05-15 05:10 - INFO - 	 PR-AUC: 0.453
2024-05-15 05:10 - INFO - 	 Recall for 0.4 precision: 0.003
2024-05-15 05:10 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 05:10 - INFO - 	 Best ROC-AUC: 0.741
2024-05-15 05:10 - INFO - 	 Best PR-AUC: 0.453
2024-05-15 05:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-05-15 05:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.448
2024-05-15 05:10 - INFO - 	 Best Recall for 0.4 precision: 0.689
2024-05-15 05:10 - INFO - ---------------------------------------------
2024-05-15 05:15 - INFO - ---------------------------------------------
2024-05-15 05:15 - INFO - Epoch: 10 | Time: 4m 22s
2024-05-15 05:15 - INFO - 	 Train Loss: 0.473
2024-05-15 05:15 - INFO - 	 Val. Loss: 0.493
2024-05-15 05:15 - INFO - 	 ROC-AUC: 0.736
2024-05-15 05:15 - INFO - 	 PR-AUC: 0.450
2024-05-15 05:15 - INFO - 	 Recall for 0.4 precision: 0.679
2024-05-15 05:15 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 05:15 - INFO - 	 Best ROC-AUC: 0.741
2024-05-15 05:15 - INFO - 	 Best PR-AUC: 0.453
2024-05-15 05:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-05-15 05:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.448
2024-05-15 05:15 - INFO - 	 Best Recall for 0.4 precision: 0.689
2024-05-15 05:15 - INFO - ---------------------------------------------
2024-05-15 05:21 - INFO - Fit the preprocessing pipeline
2024-05-15 05:21 - INFO - Training using device: cuda
2024-05-15 05:21 - INFO - Creating generators
2024-05-15 05:21 - INFO - The model has 651,257 trainable parameters
2024-05-15 05:21 - INFO - * Model:
2024-05-15 05:21 - INFO - * -----------
2024-05-15 05:21 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 05:21 - INFO - * -----------
2024-05-15 05:21 - INFO - Evaluating model based on: rocauc
2024-05-15 05:21 - INFO - Training..

2024-05-15 05:25 - INFO - ---------------------------------------------
2024-05-15 05:25 - INFO - Epoch: 01 | Time: 4m 31s
2024-05-15 05:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71005
2024-05-15 05:25 - INFO - 	 Train Loss: 0.540
2024-05-15 05:25 - INFO - 	 Val. Loss: 0.513
2024-05-15 05:25 - INFO - 	 ROC-AUC: 0.710
2024-05-15 05:25 - INFO - 	 PR-AUC: 0.423
2024-05-15 05:25 - INFO - 	 Recall for 0.4 precision: 0.000
2024-05-15 05:25 - INFO - 	 Best Val. Loss: 0.513
2024-05-15 05:25 - INFO - 	 Best ROC-AUC: 0.710
2024-05-15 05:25 - INFO - 	 Best PR-AUC: 0.423
2024-05-15 05:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.689
2024-05-15 05:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.402
2024-05-15 05:25 - INFO - 	 Best Recall for 0.4 precision: 0.000
2024-05-15 05:25 - INFO - ---------------------------------------------
2024-05-15 05:31 - INFO - ---------------------------------------------
2024-05-15 05:31 - INFO - Epoch: 02 | Time: 6m 11s
2024-05-15 05:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73065
2024-05-15 05:31 - INFO - 	 Train Loss: 0.499
2024-05-15 05:31 - INFO - 	 Val. Loss: 0.493
2024-05-15 05:31 - INFO - 	 ROC-AUC: 0.731
2024-05-15 05:31 - INFO - 	 PR-AUC: 0.439
2024-05-15 05:31 - INFO - 	 Recall for 0.4 precision: 0.646
2024-05-15 05:31 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 05:31 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 05:31 - INFO - 	 Best PR-AUC: 0.439
2024-05-15 05:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 05:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 05:31 - INFO - 	 Best Recall for 0.4 precision: 0.646
2024-05-15 05:31 - INFO - ---------------------------------------------
2024-05-15 05:38 - INFO - ---------------------------------------------
2024-05-15 05:38 - INFO - Epoch: 03 | Time: 6m 13s
2024-05-15 05:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73264
2024-05-15 05:38 - INFO - 	 Train Loss: 0.489
2024-05-15 05:38 - INFO - 	 Val. Loss: 0.493
2024-05-15 05:38 - INFO - 	 ROC-AUC: 0.733
2024-05-15 05:38 - INFO - 	 PR-AUC: 0.445
2024-05-15 05:38 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 05:38 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 05:38 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 05:38 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 05:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 05:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 05:38 - INFO - 	 Best Recall for 0.4 precision: 0.646
2024-05-15 05:38 - INFO - ---------------------------------------------
2024-05-15 05:43 - INFO - ---------------------------------------------
2024-05-15 05:43 - INFO - Epoch: 04 | Time: 5m 18s
2024-05-15 05:43 - INFO - 	 Train Loss: 0.485
2024-05-15 05:43 - INFO - 	 Val. Loss: 0.495
2024-05-15 05:43 - INFO - 	 ROC-AUC: 0.731
2024-05-15 05:43 - INFO - 	 PR-AUC: 0.440
2024-05-15 05:43 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-15 05:43 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 05:43 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 05:43 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 05:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 05:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 05:43 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-15 05:43 - INFO - ---------------------------------------------
2024-05-15 05:49 - INFO - ---------------------------------------------
2024-05-15 05:49 - INFO - Epoch: 05 | Time: 5m 32s
2024-05-15 05:49 - INFO - 	 Train Loss: 0.482
2024-05-15 05:49 - INFO - 	 Val. Loss: 0.494
2024-05-15 05:49 - INFO - 	 ROC-AUC: 0.732
2024-05-15 05:49 - INFO - 	 PR-AUC: 0.436
2024-05-15 05:49 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 05:49 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 05:49 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 05:49 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 05:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 05:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 05:49 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-15 05:49 - INFO - ---------------------------------------------
2024-05-15 05:54 - INFO - ---------------------------------------------
2024-05-15 05:54 - INFO - Epoch: 06 | Time: 5m 25s
2024-05-15 05:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73337
2024-05-15 05:54 - INFO - 	 Train Loss: 0.480
2024-05-15 05:54 - INFO - 	 Val. Loss: 0.493
2024-05-15 05:54 - INFO - 	 ROC-AUC: 0.733
2024-05-15 05:54 - INFO - 	 PR-AUC: 0.444
2024-05-15 05:54 - INFO - 	 Recall for 0.4 precision: 0.672
2024-05-15 05:54 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 05:54 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 05:54 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 05:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 05:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 05:54 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-15 05:54 - INFO - ---------------------------------------------
2024-05-15 06:00 - INFO - ---------------------------------------------
2024-05-15 06:00 - INFO - Epoch: 07 | Time: 5m 48s
2024-05-15 06:00 - INFO - 	 Train Loss: 0.478
2024-05-15 06:00 - INFO - 	 Val. Loss: 0.502
2024-05-15 06:00 - INFO - 	 ROC-AUC: 0.727
2024-05-15 06:00 - INFO - 	 PR-AUC: 0.430
2024-05-15 06:00 - INFO - 	 Recall for 0.4 precision: 0.651
2024-05-15 06:00 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 06:00 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 06:00 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 06:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 06:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 06:00 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-15 06:00 - INFO - ---------------------------------------------
2024-05-15 06:04 - INFO - ---------------------------------------------
2024-05-15 06:04 - INFO - Epoch: 08 | Time: 4m 31s
2024-05-15 06:04 - INFO - 	 Train Loss: 0.476
2024-05-15 06:04 - INFO - 	 Val. Loss: 0.500
2024-05-15 06:04 - INFO - 	 ROC-AUC: 0.732
2024-05-15 06:04 - INFO - 	 PR-AUC: 0.440
2024-05-15 06:04 - INFO - 	 Recall for 0.4 precision: 0.658
2024-05-15 06:04 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 06:04 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 06:04 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 06:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 06:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 06:04 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-15 06:04 - INFO - ---------------------------------------------
2024-05-15 06:09 - INFO - ---------------------------------------------
2024-05-15 06:09 - INFO - Epoch: 09 | Time: 5m 5s
2024-05-15 06:09 - INFO - 	 Train Loss: 0.475
2024-05-15 06:09 - INFO - 	 Val. Loss: 0.497
2024-05-15 06:09 - INFO - 	 ROC-AUC: 0.731
2024-05-15 06:09 - INFO - 	 PR-AUC: 0.439
2024-05-15 06:09 - INFO - 	 Recall for 0.4 precision: 0.669
2024-05-15 06:09 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 06:09 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 06:09 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 06:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 06:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 06:09 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-15 06:09 - INFO - ---------------------------------------------
2024-05-15 06:21 - INFO - Fit the preprocessing pipeline
2024-05-15 06:21 - INFO - Training using device: cuda
2024-05-15 06:21 - INFO - Creating generators
2024-05-15 06:21 - INFO - The model has 651,257 trainable parameters
2024-05-15 06:21 - INFO - * Model:
2024-05-15 06:21 - INFO - * -----------
2024-05-15 06:21 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 06:21 - INFO - * -----------
2024-05-15 06:21 - INFO - Evaluating model based on: rocauc
2024-05-15 06:21 - INFO - Training..

2024-05-15 06:26 - INFO - ---------------------------------------------
2024-05-15 06:26 - INFO - Epoch: 01 | Time: 5m 17s
2024-05-15 06:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7074
2024-05-15 06:26 - INFO - 	 Train Loss: 0.541
2024-05-15 06:26 - INFO - 	 Val. Loss: 0.513
2024-05-15 06:26 - INFO - 	 ROC-AUC: 0.707
2024-05-15 06:26 - INFO - 	 PR-AUC: 0.423
2024-05-15 06:26 - INFO - 	 Recall for 0.4 precision: 0.568
2024-05-15 06:26 - INFO - 	 Best Val. Loss: 0.513
2024-05-15 06:26 - INFO - 	 Best ROC-AUC: 0.707
2024-05-15 06:26 - INFO - 	 Best PR-AUC: 0.423
2024-05-15 06:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.681
2024-05-15 06:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.390
2024-05-15 06:26 - INFO - 	 Best Recall for 0.4 precision: 0.568
2024-05-15 06:26 - INFO - ---------------------------------------------
2024-05-15 06:31 - INFO - ---------------------------------------------
2024-05-15 06:31 - INFO - Epoch: 02 | Time: 4m 54s
2024-05-15 06:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72192
2024-05-15 06:31 - INFO - 	 Train Loss: 0.500
2024-05-15 06:31 - INFO - 	 Val. Loss: 0.498
2024-05-15 06:31 - INFO - 	 ROC-AUC: 0.722
2024-05-15 06:31 - INFO - 	 PR-AUC: 0.435
2024-05-15 06:31 - INFO - 	 Recall for 0.4 precision: 0.622
2024-05-15 06:31 - INFO - 	 Best Val. Loss: 0.498
2024-05-15 06:31 - INFO - 	 Best ROC-AUC: 0.722
2024-05-15 06:31 - INFO - 	 Best PR-AUC: 0.435
2024-05-15 06:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-05-15 06:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.421
2024-05-15 06:31 - INFO - 	 Best Recall for 0.4 precision: 0.622
2024-05-15 06:31 - INFO - ---------------------------------------------
2024-05-15 06:36 - INFO - ---------------------------------------------
2024-05-15 06:36 - INFO - Epoch: 03 | Time: 4m 23s
2024-05-15 06:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72984
2024-05-15 06:36 - INFO - 	 Train Loss: 0.490
2024-05-15 06:36 - INFO - 	 Val. Loss: 0.496
2024-05-15 06:36 - INFO - 	 ROC-AUC: 0.730
2024-05-15 06:36 - INFO - 	 PR-AUC: 0.440
2024-05-15 06:36 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-15 06:36 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 06:36 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 06:36 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 06:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 06:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-05-15 06:36 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 06:36 - INFO - ---------------------------------------------
2024-05-15 06:40 - INFO - ---------------------------------------------
2024-05-15 06:40 - INFO - Epoch: 04 | Time: 4m 20s
2024-05-15 06:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73265
2024-05-15 06:40 - INFO - 	 Train Loss: 0.485
2024-05-15 06:40 - INFO - 	 Val. Loss: 0.492
2024-05-15 06:40 - INFO - 	 ROC-AUC: 0.733
2024-05-15 06:40 - INFO - 	 PR-AUC: 0.444
2024-05-15 06:40 - INFO - 	 Recall for 0.4 precision: 0.664
2024-05-15 06:40 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 06:40 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 06:40 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 06:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 06:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-05-15 06:40 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-15 06:40 - INFO - ---------------------------------------------
2024-05-15 06:44 - INFO - ---------------------------------------------
2024-05-15 06:44 - INFO - Epoch: 05 | Time: 4m 13s
2024-05-15 06:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73732
2024-05-15 06:44 - INFO - 	 Train Loss: 0.482
2024-05-15 06:44 - INFO - 	 Val. Loss: 0.494
2024-05-15 06:44 - INFO - 	 ROC-AUC: 0.737
2024-05-15 06:44 - INFO - 	 PR-AUC: 0.452
2024-05-15 06:44 - INFO - 	 Recall for 0.4 precision: 0.690
2024-05-15 06:44 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 06:44 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 06:44 - INFO - 	 Best PR-AUC: 0.452
2024-05-15 06:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 06:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 06:44 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-15 06:44 - INFO - ---------------------------------------------
2024-05-15 06:49 - INFO - ---------------------------------------------
2024-05-15 06:49 - INFO - Epoch: 06 | Time: 5m 3s
2024-05-15 06:49 - INFO - 	 Train Loss: 0.479
2024-05-15 06:49 - INFO - 	 Val. Loss: 0.493
2024-05-15 06:49 - INFO - 	 ROC-AUC: 0.734
2024-05-15 06:49 - INFO - 	 PR-AUC: 0.450
2024-05-15 06:49 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-15 06:49 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 06:49 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 06:49 - INFO - 	 Best PR-AUC: 0.452
2024-05-15 06:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 06:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 06:49 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-15 06:49 - INFO - ---------------------------------------------
2024-05-15 06:54 - INFO - ---------------------------------------------
2024-05-15 06:54 - INFO - Epoch: 07 | Time: 4m 38s
2024-05-15 06:54 - INFO - 	 Train Loss: 0.477
2024-05-15 06:54 - INFO - 	 Val. Loss: 0.491
2024-05-15 06:54 - INFO - 	 ROC-AUC: 0.737
2024-05-15 06:54 - INFO - 	 PR-AUC: 0.450
2024-05-15 06:54 - INFO - 	 Recall for 0.4 precision: 0.690
2024-05-15 06:54 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 06:54 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 06:54 - INFO - 	 Best PR-AUC: 0.452
2024-05-15 06:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 06:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 06:54 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-15 06:54 - INFO - ---------------------------------------------
2024-05-15 06:58 - INFO - ---------------------------------------------
2024-05-15 06:58 - INFO - Epoch: 08 | Time: 4m 12s
2024-05-15 06:58 - INFO - 	 Train Loss: 0.476
2024-05-15 06:58 - INFO - 	 Val. Loss: 0.492
2024-05-15 06:58 - INFO - 	 ROC-AUC: 0.736
2024-05-15 06:58 - INFO - 	 PR-AUC: 0.451
2024-05-15 06:58 - INFO - 	 Recall for 0.4 precision: 0.684
2024-05-15 06:58 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 06:58 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 06:58 - INFO - 	 Best PR-AUC: 0.452
2024-05-15 06:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 06:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 06:58 - INFO - 	 Best Recall for 0.4 precision: 0.690
2024-05-15 06:58 - INFO - ---------------------------------------------
2024-05-15 07:02 - INFO - ---------------------------------------------
2024-05-15 07:02 - INFO - Epoch: 09 | Time: 4m 10s
2024-05-15 07:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73903
2024-05-15 07:02 - INFO - 	 Train Loss: 0.475
2024-05-15 07:02 - INFO - 	 Val. Loss: 0.491
2024-05-15 07:02 - INFO - 	 ROC-AUC: 0.739
2024-05-15 07:02 - INFO - 	 PR-AUC: 0.451
2024-05-15 07:02 - INFO - 	 Recall for 0.4 precision: 0.691
2024-05-15 07:02 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 07:02 - INFO - 	 Best ROC-AUC: 0.739
2024-05-15 07:02 - INFO - 	 Best PR-AUC: 0.452
2024-05-15 07:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 07:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 07:02 - INFO - 	 Best Recall for 0.4 precision: 0.691
2024-05-15 07:02 - INFO - ---------------------------------------------
2024-05-15 07:07 - INFO - ---------------------------------------------
2024-05-15 07:07 - INFO - Epoch: 10 | Time: 4m 37s
2024-05-15 07:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74121
2024-05-15 07:07 - INFO - 	 Train Loss: 0.474
2024-05-15 07:07 - INFO - 	 Val. Loss: 0.489
2024-05-15 07:07 - INFO - 	 ROC-AUC: 0.741
2024-05-15 07:07 - INFO - 	 PR-AUC: 0.455
2024-05-15 07:07 - INFO - 	 Recall for 0.4 precision: 0.699
2024-05-15 07:07 - INFO - 	 Best Val. Loss: 0.489
2024-05-15 07:07 - INFO - 	 Best ROC-AUC: 0.741
2024-05-15 07:07 - INFO - 	 Best PR-AUC: 0.455
2024-05-15 07:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 07:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.452
2024-05-15 07:07 - INFO - 	 Best Recall for 0.4 precision: 0.699
2024-05-15 07:07 - INFO - ---------------------------------------------
2024-05-15 07:12 - INFO - Fit the preprocessing pipeline
2024-05-15 07:12 - INFO - Training using device: cuda
2024-05-15 07:12 - INFO - Creating generators
2024-05-15 07:13 - INFO - The model has 651,257 trainable parameters
2024-05-15 07:13 - INFO - * Model:
2024-05-15 07:13 - INFO - * -----------
2024-05-15 07:13 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 07:13 - INFO - * -----------
2024-05-15 07:13 - INFO - Evaluating model based on: rocauc
2024-05-15 07:13 - INFO - Training..

2024-05-15 07:16 - INFO - ---------------------------------------------
2024-05-15 07:16 - INFO - Epoch: 01 | Time: 3m 38s
2024-05-15 07:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71005
2024-05-15 07:16 - INFO - 	 Train Loss: 0.541
2024-05-15 07:16 - INFO - 	 Val. Loss: 0.513
2024-05-15 07:16 - INFO - 	 ROC-AUC: 0.710
2024-05-15 07:16 - INFO - 	 PR-AUC: 0.424
2024-05-15 07:16 - INFO - 	 Recall for 0.4 precision: 0.566
2024-05-15 07:16 - INFO - 	 Best Val. Loss: 0.513
2024-05-15 07:16 - INFO - 	 Best ROC-AUC: 0.710
2024-05-15 07:16 - INFO - 	 Best PR-AUC: 0.424
2024-05-15 07:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.687
2024-05-15 07:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.398
2024-05-15 07:16 - INFO - 	 Best Recall for 0.4 precision: 0.566
2024-05-15 07:16 - INFO - ---------------------------------------------
2024-05-15 07:20 - INFO - ---------------------------------------------
2024-05-15 07:20 - INFO - Epoch: 02 | Time: 3m 48s
2024-05-15 07:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72421
2024-05-15 07:20 - INFO - 	 Train Loss: 0.498
2024-05-15 07:20 - INFO - 	 Val. Loss: 0.497
2024-05-15 07:20 - INFO - 	 ROC-AUC: 0.724
2024-05-15 07:20 - INFO - 	 PR-AUC: 0.432
2024-05-15 07:20 - INFO - 	 Recall for 0.4 precision: 0.637
2024-05-15 07:20 - INFO - 	 Best Val. Loss: 0.497
2024-05-15 07:20 - INFO - 	 Best ROC-AUC: 0.724
2024-05-15 07:20 - INFO - 	 Best PR-AUC: 0.432
2024-05-15 07:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-05-15 07:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-15 07:20 - INFO - 	 Best Recall for 0.4 precision: 0.637
2024-05-15 07:20 - INFO - ---------------------------------------------
2024-05-15 07:24 - INFO - ---------------------------------------------
2024-05-15 07:24 - INFO - Epoch: 03 | Time: 4m 1s
2024-05-15 07:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7313
2024-05-15 07:24 - INFO - 	 Train Loss: 0.489
2024-05-15 07:24 - INFO - 	 Val. Loss: 0.494
2024-05-15 07:24 - INFO - 	 ROC-AUC: 0.731
2024-05-15 07:24 - INFO - 	 PR-AUC: 0.440
2024-05-15 07:24 - INFO - 	 Recall for 0.4 precision: 0.668
2024-05-15 07:24 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 07:24 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 07:24 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 07:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 07:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 07:24 - INFO - 	 Best Recall for 0.4 precision: 0.668
2024-05-15 07:24 - INFO - ---------------------------------------------
2024-05-15 07:29 - INFO - ---------------------------------------------
2024-05-15 07:29 - INFO - Epoch: 04 | Time: 4m 32s
2024-05-15 07:29 - INFO - 	 Train Loss: 0.485
2024-05-15 07:29 - INFO - 	 Val. Loss: 0.496
2024-05-15 07:29 - INFO - 	 ROC-AUC: 0.729
2024-05-15 07:29 - INFO - 	 PR-AUC: 0.437
2024-05-15 07:29 - INFO - 	 Recall for 0.4 precision: 0.657
2024-05-15 07:29 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 07:29 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 07:29 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 07:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 07:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 07:29 - INFO - 	 Best Recall for 0.4 precision: 0.668
2024-05-15 07:29 - INFO - ---------------------------------------------
2024-05-15 07:33 - INFO - ---------------------------------------------
2024-05-15 07:33 - INFO - Epoch: 05 | Time: 4m 1s
2024-05-15 07:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7324
2024-05-15 07:33 - INFO - 	 Train Loss: 0.482
2024-05-15 07:33 - INFO - 	 Val. Loss: 0.495
2024-05-15 07:33 - INFO - 	 ROC-AUC: 0.732
2024-05-15 07:33 - INFO - 	 PR-AUC: 0.445
2024-05-15 07:33 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 07:33 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 07:33 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 07:33 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 07:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 07:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 07:33 - INFO - 	 Best Recall for 0.4 precision: 0.668
2024-05-15 07:33 - INFO - ---------------------------------------------
2024-05-15 07:37 - INFO - ---------------------------------------------
2024-05-15 07:37 - INFO - Epoch: 06 | Time: 4m 3s
2024-05-15 07:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73309
2024-05-15 07:37 - INFO - 	 Train Loss: 0.479
2024-05-15 07:37 - INFO - 	 Val. Loss: 0.496
2024-05-15 07:37 - INFO - 	 ROC-AUC: 0.733
2024-05-15 07:37 - INFO - 	 PR-AUC: 0.444
2024-05-15 07:37 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-15 07:37 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 07:37 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 07:37 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 07:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 07:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 07:37 - INFO - 	 Best Recall for 0.4 precision: 0.668
2024-05-15 07:37 - INFO - ---------------------------------------------
2024-05-15 07:41 - INFO - ---------------------------------------------
2024-05-15 07:41 - INFO - Epoch: 07 | Time: 3m 59s
2024-05-15 07:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73329
2024-05-15 07:41 - INFO - 	 Train Loss: 0.477
2024-05-15 07:41 - INFO - 	 Val. Loss: 0.494
2024-05-15 07:41 - INFO - 	 ROC-AUC: 0.733
2024-05-15 07:41 - INFO - 	 PR-AUC: 0.440
2024-05-15 07:41 - INFO - 	 Recall for 0.4 precision: 0.677
2024-05-15 07:41 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 07:41 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 07:41 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 07:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 07:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 07:41 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-15 07:41 - INFO - ---------------------------------------------
2024-05-15 07:45 - INFO - ---------------------------------------------
2024-05-15 07:45 - INFO - Epoch: 08 | Time: 4m 1s
2024-05-15 07:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7359
2024-05-15 07:45 - INFO - 	 Train Loss: 0.476
2024-05-15 07:45 - INFO - 	 Val. Loss: 0.494
2024-05-15 07:45 - INFO - 	 ROC-AUC: 0.736
2024-05-15 07:45 - INFO - 	 PR-AUC: 0.446
2024-05-15 07:45 - INFO - 	 Recall for 0.4 precision: 0.682
2024-05-15 07:45 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 07:45 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 07:45 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 07:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 07:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-15 07:45 - INFO - 	 Best Recall for 0.4 precision: 0.682
2024-05-15 07:45 - INFO - ---------------------------------------------
2024-05-15 07:49 - INFO - ---------------------------------------------
2024-05-15 07:49 - INFO - Epoch: 09 | Time: 4m 11s
2024-05-15 07:49 - INFO - 	 Train Loss: 0.475
2024-05-15 07:49 - INFO - 	 Val. Loss: 0.500
2024-05-15 07:49 - INFO - 	 ROC-AUC: 0.729
2024-05-15 07:49 - INFO - 	 PR-AUC: 0.439
2024-05-15 07:49 - INFO - 	 Recall for 0.4 precision: 0.658
2024-05-15 07:49 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 07:49 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 07:49 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 07:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 07:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-15 07:49 - INFO - 	 Best Recall for 0.4 precision: 0.682
2024-05-15 07:49 - INFO - ---------------------------------------------
2024-05-15 07:53 - INFO - ---------------------------------------------
2024-05-15 07:53 - INFO - Epoch: 10 | Time: 4m 0s
2024-05-15 07:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73622
2024-05-15 07:53 - INFO - 	 Train Loss: 0.475
2024-05-15 07:53 - INFO - 	 Val. Loss: 0.498
2024-05-15 07:53 - INFO - 	 ROC-AUC: 0.736
2024-05-15 07:53 - INFO - 	 PR-AUC: 0.446
2024-05-15 07:53 - INFO - 	 Recall for 0.4 precision: 0.686
2024-05-15 07:53 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 07:53 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 07:53 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 07:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 07:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 07:53 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 07:53 - INFO - ---------------------------------------------
2024-05-15 07:59 - INFO - Fit the preprocessing pipeline
2024-05-15 07:59 - INFO - Training using device: cuda
2024-05-15 07:59 - INFO - Creating generators
2024-05-15 07:59 - INFO - The model has 651,257 trainable parameters
2024-05-15 07:59 - INFO - * Model:
2024-05-15 07:59 - INFO - * -----------
2024-05-15 07:59 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 07:59 - INFO - * -----------
2024-05-15 07:59 - INFO - Evaluating model based on: rocauc
2024-05-15 07:59 - INFO - Training..

2024-05-15 08:03 - INFO - ---------------------------------------------
2024-05-15 08:03 - INFO - Epoch: 01 | Time: 4m 4s
2024-05-15 08:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71333
2024-05-15 08:03 - INFO - 	 Train Loss: 0.540
2024-05-15 08:03 - INFO - 	 Val. Loss: 0.515
2024-05-15 08:03 - INFO - 	 ROC-AUC: 0.713
2024-05-15 08:03 - INFO - 	 PR-AUC: 0.428
2024-05-15 08:03 - INFO - 	 Recall for 0.4 precision: 0.599
2024-05-15 08:03 - INFO - 	 Best Val. Loss: 0.515
2024-05-15 08:03 - INFO - 	 Best ROC-AUC: 0.713
2024-05-15 08:03 - INFO - 	 Best PR-AUC: 0.428
2024-05-15 08:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.695
2024-05-15 08:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.406
2024-05-15 08:03 - INFO - 	 Best Recall for 0.4 precision: 0.599
2024-05-15 08:03 - INFO - ---------------------------------------------
2024-05-15 08:07 - INFO - ---------------------------------------------
2024-05-15 08:07 - INFO - Epoch: 02 | Time: 3m 55s
2024-05-15 08:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72607
2024-05-15 08:07 - INFO - 	 Train Loss: 0.499
2024-05-15 08:07 - INFO - 	 Val. Loss: 0.501
2024-05-15 08:07 - INFO - 	 ROC-AUC: 0.726
2024-05-15 08:07 - INFO - 	 PR-AUC: 0.438
2024-05-15 08:07 - INFO - 	 Recall for 0.4 precision: 0.643
2024-05-15 08:07 - INFO - 	 Best Val. Loss: 0.501
2024-05-15 08:07 - INFO - 	 Best ROC-AUC: 0.726
2024-05-15 08:07 - INFO - 	 Best PR-AUC: 0.438
2024-05-15 08:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-15 08:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-05-15 08:07 - INFO - 	 Best Recall for 0.4 precision: 0.643
2024-05-15 08:07 - INFO - ---------------------------------------------
2024-05-15 08:11 - INFO - ---------------------------------------------
2024-05-15 08:11 - INFO - Epoch: 03 | Time: 4m 12s
2024-05-15 08:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72924
2024-05-15 08:11 - INFO - 	 Train Loss: 0.489
2024-05-15 08:11 - INFO - 	 Val. Loss: 0.497
2024-05-15 08:11 - INFO - 	 ROC-AUC: 0.729
2024-05-15 08:11 - INFO - 	 PR-AUC: 0.443
2024-05-15 08:11 - INFO - 	 Recall for 0.4 precision: 0.000
2024-05-15 08:11 - INFO - 	 Best Val. Loss: 0.497
2024-05-15 08:11 - INFO - 	 Best ROC-AUC: 0.729
2024-05-15 08:11 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 08:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 08:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 08:11 - INFO - 	 Best Recall for 0.4 precision: 0.643
2024-05-15 08:11 - INFO - ---------------------------------------------
2024-05-15 08:18 - INFO - ---------------------------------------------
2024-05-15 08:18 - INFO - Epoch: 04 | Time: 6m 44s
2024-05-15 08:18 - INFO - 	 Train Loss: 0.485
2024-05-15 08:18 - INFO - 	 Val. Loss: 0.496
2024-05-15 08:18 - INFO - 	 ROC-AUC: 0.727
2024-05-15 08:18 - INFO - 	 PR-AUC: 0.438
2024-05-15 08:18 - INFO - 	 Recall for 0.4 precision: 0.645
2024-05-15 08:18 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 08:18 - INFO - 	 Best ROC-AUC: 0.729
2024-05-15 08:18 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 08:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 08:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 08:18 - INFO - 	 Best Recall for 0.4 precision: 0.645
2024-05-15 08:18 - INFO - ---------------------------------------------
2024-05-15 08:25 - INFO - ---------------------------------------------
2024-05-15 08:25 - INFO - Epoch: 05 | Time: 6m 49s
2024-05-15 08:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72936
2024-05-15 08:25 - INFO - 	 Train Loss: 0.481
2024-05-15 08:25 - INFO - 	 Val. Loss: 0.497
2024-05-15 08:25 - INFO - 	 ROC-AUC: 0.729
2024-05-15 08:25 - INFO - 	 PR-AUC: 0.436
2024-05-15 08:25 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-15 08:25 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 08:25 - INFO - 	 Best ROC-AUC: 0.729
2024-05-15 08:25 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 08:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 08:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 08:25 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 08:25 - INFO - ---------------------------------------------
2024-05-15 08:32 - INFO - ---------------------------------------------
2024-05-15 08:32 - INFO - Epoch: 06 | Time: 6m 45s
2024-05-15 08:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73118
2024-05-15 08:32 - INFO - 	 Train Loss: 0.480
2024-05-15 08:32 - INFO - 	 Val. Loss: 0.495
2024-05-15 08:32 - INFO - 	 ROC-AUC: 0.731
2024-05-15 08:32 - INFO - 	 PR-AUC: 0.445
2024-05-15 08:32 - INFO - 	 Recall for 0.4 precision: 0.664
2024-05-15 08:32 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 08:32 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 08:32 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 08:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 08:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 08:32 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-15 08:32 - INFO - ---------------------------------------------
2024-05-15 08:38 - INFO - ---------------------------------------------
2024-05-15 08:38 - INFO - Epoch: 07 | Time: 6m 27s
2024-05-15 08:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73309
2024-05-15 08:38 - INFO - 	 Train Loss: 0.478
2024-05-15 08:38 - INFO - 	 Val. Loss: 0.494
2024-05-15 08:38 - INFO - 	 ROC-AUC: 0.733
2024-05-15 08:38 - INFO - 	 PR-AUC: 0.444
2024-05-15 08:38 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 08:38 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 08:38 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 08:38 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 08:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-05-15 08:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 08:38 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-15 08:38 - INFO - ---------------------------------------------
2024-05-15 08:45 - INFO - ---------------------------------------------
2024-05-15 08:45 - INFO - Epoch: 08 | Time: 6m 26s
2024-05-15 08:45 - INFO - 	 Train Loss: 0.476
2024-05-15 08:45 - INFO - 	 Val. Loss: 0.497
2024-05-15 08:45 - INFO - 	 ROC-AUC: 0.729
2024-05-15 08:45 - INFO - 	 PR-AUC: 0.439
2024-05-15 08:45 - INFO - 	 Recall for 0.4 precision: 0.659
2024-05-15 08:45 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 08:45 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 08:45 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 08:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-05-15 08:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 08:45 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-15 08:45 - INFO - ---------------------------------------------
2024-05-15 08:51 - INFO - ---------------------------------------------
2024-05-15 08:51 - INFO - Epoch: 09 | Time: 5m 56s
2024-05-15 08:51 - INFO - 	 Train Loss: 0.475
2024-05-15 08:51 - INFO - 	 Val. Loss: 0.498
2024-05-15 08:51 - INFO - 	 ROC-AUC: 0.729
2024-05-15 08:51 - INFO - 	 PR-AUC: 0.436
2024-05-15 08:51 - INFO - 	 Recall for 0.4 precision: 0.657
2024-05-15 08:51 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 08:51 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 08:51 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 08:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-05-15 08:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 08:51 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-15 08:51 - INFO - ---------------------------------------------
2024-05-15 08:56 - INFO - ---------------------------------------------
2024-05-15 08:56 - INFO - Epoch: 10 | Time: 5m 24s
2024-05-15 08:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73814
2024-05-15 08:56 - INFO - 	 Train Loss: 0.475
2024-05-15 08:56 - INFO - 	 Val. Loss: 0.491
2024-05-15 08:56 - INFO - 	 ROC-AUC: 0.738
2024-05-15 08:56 - INFO - 	 PR-AUC: 0.447
2024-05-15 08:56 - INFO - 	 Recall for 0.4 precision: 0.695
2024-05-15 08:56 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 08:56 - INFO - 	 Best ROC-AUC: 0.738
2024-05-15 08:56 - INFO - 	 Best PR-AUC: 0.447
2024-05-15 08:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 08:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-15 08:56 - INFO - 	 Best Recall for 0.4 precision: 0.695
2024-05-15 08:56 - INFO - ---------------------------------------------
2024-05-15 09:02 - INFO - Fit the preprocessing pipeline
2024-05-15 09:02 - INFO - Training using device: cuda
2024-05-15 09:02 - INFO - Creating generators
2024-05-15 09:02 - INFO - The model has 651,257 trainable parameters
2024-05-15 09:02 - INFO - * Model:
2024-05-15 09:02 - INFO - * -----------
2024-05-15 09:02 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 09:02 - INFO - * -----------
2024-05-15 09:02 - INFO - Evaluating model based on: rocauc
2024-05-15 09:02 - INFO - Training..

2024-05-15 09:08 - INFO - ---------------------------------------------
2024-05-15 09:08 - INFO - Epoch: 01 | Time: 5m 13s
2024-05-15 09:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70087
2024-05-15 09:08 - INFO - 	 Train Loss: 0.541
2024-05-15 09:08 - INFO - 	 Val. Loss: 0.511
2024-05-15 09:08 - INFO - 	 ROC-AUC: 0.701
2024-05-15 09:08 - INFO - 	 PR-AUC: 0.414
2024-05-15 09:08 - INFO - 	 Recall for 0.4 precision: 0.515
2024-05-15 09:08 - INFO - 	 Best Val. Loss: 0.511
2024-05-15 09:08 - INFO - 	 Best ROC-AUC: 0.701
2024-05-15 09:08 - INFO - 	 Best PR-AUC: 0.414
2024-05-15 09:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.680
2024-05-15 09:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.392
2024-05-15 09:08 - INFO - 	 Best Recall for 0.4 precision: 0.515
2024-05-15 09:08 - INFO - ---------------------------------------------
2024-05-15 09:12 - INFO - ---------------------------------------------
2024-05-15 09:12 - INFO - Epoch: 02 | Time: 4m 44s
2024-05-15 09:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72066
2024-05-15 09:12 - INFO - 	 Train Loss: 0.500
2024-05-15 09:12 - INFO - 	 Val. Loss: 0.499
2024-05-15 09:12 - INFO - 	 ROC-AUC: 0.721
2024-05-15 09:12 - INFO - 	 PR-AUC: 0.427
2024-05-15 09:12 - INFO - 	 Recall for 0.4 precision: 0.002
2024-05-15 09:12 - INFO - 	 Best Val. Loss: 0.499
2024-05-15 09:12 - INFO - 	 Best ROC-AUC: 0.721
2024-05-15 09:12 - INFO - 	 Best PR-AUC: 0.427
2024-05-15 09:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-15 09:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.425
2024-05-15 09:12 - INFO - 	 Best Recall for 0.4 precision: 0.515
2024-05-15 09:12 - INFO - ---------------------------------------------
2024-05-15 09:19 - INFO - ---------------------------------------------
2024-05-15 09:19 - INFO - Epoch: 03 | Time: 6m 27s
2024-05-15 09:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73043
2024-05-15 09:19 - INFO - 	 Train Loss: 0.490
2024-05-15 09:19 - INFO - 	 Val. Loss: 0.495
2024-05-15 09:19 - INFO - 	 ROC-AUC: 0.730
2024-05-15 09:19 - INFO - 	 PR-AUC: 0.439
2024-05-15 09:19 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-15 09:19 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 09:19 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 09:19 - INFO - 	 Best PR-AUC: 0.439
2024-05-15 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-15 09:19 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 09:19 - INFO - ---------------------------------------------
2024-05-15 09:24 - INFO - ---------------------------------------------
2024-05-15 09:24 - INFO - Epoch: 04 | Time: 5m 42s
2024-05-15 09:24 - INFO - 	 Train Loss: 0.486
2024-05-15 09:24 - INFO - 	 Val. Loss: 0.498
2024-05-15 09:24 - INFO - 	 ROC-AUC: 0.727
2024-05-15 09:24 - INFO - 	 PR-AUC: 0.435
2024-05-15 09:24 - INFO - 	 Recall for 0.4 precision: 0.640
2024-05-15 09:24 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 09:24 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 09:24 - INFO - 	 Best PR-AUC: 0.439
2024-05-15 09:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 09:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-15 09:24 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 09:24 - INFO - ---------------------------------------------
2024-05-15 09:30 - INFO - ---------------------------------------------
2024-05-15 09:30 - INFO - Epoch: 05 | Time: 5m 28s
2024-05-15 09:30 - INFO - 	 Train Loss: 0.483
2024-05-15 09:30 - INFO - 	 Val. Loss: 0.504
2024-05-15 09:30 - INFO - 	 ROC-AUC: 0.725
2024-05-15 09:30 - INFO - 	 PR-AUC: 0.431
2024-05-15 09:30 - INFO - 	 Recall for 0.4 precision: 0.639
2024-05-15 09:30 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 09:30 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 09:30 - INFO - 	 Best PR-AUC: 0.439
2024-05-15 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-15 09:30 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 09:30 - INFO - ---------------------------------------------
2024-05-15 09:35 - INFO - ---------------------------------------------
2024-05-15 09:35 - INFO - Epoch: 06 | Time: 4m 53s
2024-05-15 09:35 - INFO - 	 Train Loss: 0.481
2024-05-15 09:35 - INFO - 	 Val. Loss: 0.496
2024-05-15 09:35 - INFO - 	 ROC-AUC: 0.730
2024-05-15 09:35 - INFO - 	 PR-AUC: 0.442
2024-05-15 09:35 - INFO - 	 Recall for 0.4 precision: 0.003
2024-05-15 09:35 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 09:35 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 09:35 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 09:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 09:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 09:35 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 09:35 - INFO - ---------------------------------------------
2024-05-15 09:40 - INFO - ---------------------------------------------
2024-05-15 09:40 - INFO - Epoch: 07 | Time: 5m 0s
2024-05-15 09:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73449
2024-05-15 09:40 - INFO - 	 Train Loss: 0.479
2024-05-15 09:40 - INFO - 	 Val. Loss: 0.494
2024-05-15 09:40 - INFO - 	 ROC-AUC: 0.734
2024-05-15 09:40 - INFO - 	 PR-AUC: 0.446
2024-05-15 09:40 - INFO - 	 Recall for 0.4 precision: 0.672
2024-05-15 09:40 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 09:40 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 09:40 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 09:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 09:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 09:40 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-15 09:40 - INFO - ---------------------------------------------
2024-05-15 09:45 - INFO - ---------------------------------------------
2024-05-15 09:45 - INFO - Epoch: 08 | Time: 4m 44s
2024-05-15 09:45 - INFO - 	 Train Loss: 0.477
2024-05-15 09:45 - INFO - 	 Val. Loss: 0.497
2024-05-15 09:45 - INFO - 	 ROC-AUC: 0.730
2024-05-15 09:45 - INFO - 	 PR-AUC: 0.438
2024-05-15 09:45 - INFO - 	 Recall for 0.4 precision: 0.654
2024-05-15 09:45 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 09:45 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 09:45 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 09:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 09:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 09:45 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-15 09:45 - INFO - ---------------------------------------------
2024-05-15 09:50 - INFO - ---------------------------------------------
2024-05-15 09:50 - INFO - Epoch: 09 | Time: 5m 6s
2024-05-15 09:50 - INFO - 	 Train Loss: 0.476
2024-05-15 09:50 - INFO - 	 Val. Loss: 0.496
2024-05-15 09:50 - INFO - 	 ROC-AUC: 0.730
2024-05-15 09:50 - INFO - 	 PR-AUC: 0.438
2024-05-15 09:50 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-15 09:50 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 09:50 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 09:50 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 09:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 09:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 09:50 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-15 09:50 - INFO - ---------------------------------------------
2024-05-15 09:54 - INFO - ---------------------------------------------
2024-05-15 09:54 - INFO - Epoch: 10 | Time: 4m 39s
2024-05-15 09:54 - INFO - 	 Train Loss: 0.475
2024-05-15 09:54 - INFO - 	 Val. Loss: 0.495
2024-05-15 09:54 - INFO - 	 ROC-AUC: 0.733
2024-05-15 09:54 - INFO - 	 PR-AUC: 0.444
2024-05-15 09:54 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-15 09:54 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 09:54 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 09:54 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 09:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 09:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 09:54 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-05-15 09:54 - INFO - ---------------------------------------------
2024-05-15 10:01 - INFO - Fit the preprocessing pipeline
2024-05-15 10:01 - INFO - Training using device: cuda
2024-05-15 10:01 - INFO - Creating generators
2024-05-15 10:01 - INFO - The model has 651,257 trainable parameters
2024-05-15 10:01 - INFO - * Model:
2024-05-15 10:01 - INFO - * -----------
2024-05-15 10:01 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 10:01 - INFO - * -----------
2024-05-15 10:01 - INFO - Evaluating model based on: rocauc
2024-05-15 10:01 - INFO - Training..

2024-05-15 10:05 - INFO - ---------------------------------------------
2024-05-15 10:05 - INFO - Epoch: 01 | Time: 4m 31s
2024-05-15 10:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70533
2024-05-15 10:05 - INFO - 	 Train Loss: 0.540
2024-05-15 10:05 - INFO - 	 Val. Loss: 0.508
2024-05-15 10:05 - INFO - 	 ROC-AUC: 0.705
2024-05-15 10:05 - INFO - 	 PR-AUC: 0.419
2024-05-15 10:05 - INFO - 	 Recall for 0.4 precision: 0.550
2024-05-15 10:05 - INFO - 	 Best Val. Loss: 0.508
2024-05-15 10:05 - INFO - 	 Best ROC-AUC: 0.705
2024-05-15 10:05 - INFO - 	 Best PR-AUC: 0.419
2024-05-15 10:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.689
2024-05-15 10:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.402
2024-05-15 10:05 - INFO - 	 Best Recall for 0.4 precision: 0.550
2024-05-15 10:05 - INFO - ---------------------------------------------
2024-05-15 10:10 - INFO - ---------------------------------------------
2024-05-15 10:10 - INFO - Epoch: 02 | Time: 4m 55s
2024-05-15 10:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72124
2024-05-15 10:10 - INFO - 	 Train Loss: 0.499
2024-05-15 10:10 - INFO - 	 Val. Loss: 0.500
2024-05-15 10:10 - INFO - 	 ROC-AUC: 0.721
2024-05-15 10:10 - INFO - 	 PR-AUC: 0.431
2024-05-15 10:10 - INFO - 	 Recall for 0.4 precision: 0.617
2024-05-15 10:10 - INFO - 	 Best Val. Loss: 0.500
2024-05-15 10:10 - INFO - 	 Best ROC-AUC: 0.721
2024-05-15 10:10 - INFO - 	 Best PR-AUC: 0.431
2024-05-15 10:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 10:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-15 10:10 - INFO - 	 Best Recall for 0.4 precision: 0.617
2024-05-15 10:10 - INFO - ---------------------------------------------
2024-05-15 10:15 - INFO - ---------------------------------------------
2024-05-15 10:15 - INFO - Epoch: 03 | Time: 4m 56s
2024-05-15 10:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72703
2024-05-15 10:15 - INFO - 	 Train Loss: 0.490
2024-05-15 10:15 - INFO - 	 Val. Loss: 0.496
2024-05-15 10:15 - INFO - 	 ROC-AUC: 0.727
2024-05-15 10:15 - INFO - 	 PR-AUC: 0.435
2024-05-15 10:15 - INFO - 	 Recall for 0.4 precision: 0.647
2024-05-15 10:15 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 10:15 - INFO - 	 Best ROC-AUC: 0.727
2024-05-15 10:15 - INFO - 	 Best PR-AUC: 0.435
2024-05-15 10:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 10:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-15 10:15 - INFO - 	 Best Recall for 0.4 precision: 0.647
2024-05-15 10:15 - INFO - ---------------------------------------------
2024-05-15 10:20 - INFO - ---------------------------------------------
2024-05-15 10:20 - INFO - Epoch: 04 | Time: 4m 26s
2024-05-15 10:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73179
2024-05-15 10:20 - INFO - 	 Train Loss: 0.486
2024-05-15 10:20 - INFO - 	 Val. Loss: 0.494
2024-05-15 10:20 - INFO - 	 ROC-AUC: 0.732
2024-05-15 10:20 - INFO - 	 PR-AUC: 0.440
2024-05-15 10:20 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-15 10:20 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 10:20 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 10:20 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 10:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 10:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-05-15 10:20 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-15 10:20 - INFO - ---------------------------------------------
2024-05-15 10:24 - INFO - ---------------------------------------------
2024-05-15 10:24 - INFO - Epoch: 05 | Time: 4m 20s
2024-05-15 10:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73392
2024-05-15 10:24 - INFO - 	 Train Loss: 0.483
2024-05-15 10:24 - INFO - 	 Val. Loss: 0.495
2024-05-15 10:24 - INFO - 	 ROC-AUC: 0.734
2024-05-15 10:24 - INFO - 	 PR-AUC: 0.443
2024-05-15 10:24 - INFO - 	 Recall for 0.4 precision: 0.679
2024-05-15 10:24 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 10:24 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 10:24 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 10:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 10:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 10:24 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-15 10:24 - INFO - ---------------------------------------------
2024-05-15 10:28 - INFO - ---------------------------------------------
2024-05-15 10:28 - INFO - Epoch: 06 | Time: 4m 21s
2024-05-15 10:28 - INFO - 	 Train Loss: 0.481
2024-05-15 10:28 - INFO - 	 Val. Loss: 0.494
2024-05-15 10:28 - INFO - 	 ROC-AUC: 0.733
2024-05-15 10:28 - INFO - 	 PR-AUC: 0.444
2024-05-15 10:28 - INFO - 	 Recall for 0.4 precision: 0.674
2024-05-15 10:28 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 10:28 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 10:28 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 10:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 10:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 10:28 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-15 10:28 - INFO - ---------------------------------------------
2024-05-15 10:32 - INFO - ---------------------------------------------
2024-05-15 10:32 - INFO - Epoch: 07 | Time: 4m 12s
2024-05-15 10:32 - INFO - 	 Train Loss: 0.478
2024-05-15 10:32 - INFO - 	 Val. Loss: 0.496
2024-05-15 10:32 - INFO - 	 ROC-AUC: 0.729
2024-05-15 10:32 - INFO - 	 PR-AUC: 0.440
2024-05-15 10:32 - INFO - 	 Recall for 0.4 precision: 0.661
2024-05-15 10:32 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 10:32 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 10:32 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 10:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 10:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 10:32 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-15 10:32 - INFO - ---------------------------------------------
2024-05-15 10:37 - INFO - ---------------------------------------------
2024-05-15 10:37 - INFO - Epoch: 08 | Time: 4m 13s
2024-05-15 10:37 - INFO - 	 Train Loss: 0.477
2024-05-15 10:37 - INFO - 	 Val. Loss: 0.495
2024-05-15 10:37 - INFO - 	 ROC-AUC: 0.733
2024-05-15 10:37 - INFO - 	 PR-AUC: 0.439
2024-05-15 10:37 - INFO - 	 Recall for 0.4 precision: 0.679
2024-05-15 10:37 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 10:37 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 10:37 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 10:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 10:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 10:37 - INFO - 	 Best Recall for 0.4 precision: 0.679
2024-05-15 10:37 - INFO - ---------------------------------------------
2024-05-15 10:47 - INFO - Fit the preprocessing pipeline
2024-05-15 10:47 - INFO - Training using device: cuda
2024-05-15 10:47 - INFO - Creating generators
2024-05-15 10:47 - INFO - The model has 651,257 trainable parameters
2024-05-15 10:47 - INFO - * Model:
2024-05-15 10:47 - INFO - * -----------
2024-05-15 10:47 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 10:47 - INFO - * -----------
2024-05-15 10:47 - INFO - Evaluating model based on: rocauc
2024-05-15 10:47 - INFO - Training..

2024-05-15 10:52 - INFO - ---------------------------------------------
2024-05-15 10:52 - INFO - Epoch: 01 | Time: 4m 21s
2024-05-15 10:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71137
2024-05-15 10:52 - INFO - 	 Train Loss: 0.540
2024-05-15 10:52 - INFO - 	 Val. Loss: 0.508
2024-05-15 10:52 - INFO - 	 ROC-AUC: 0.711
2024-05-15 10:52 - INFO - 	 PR-AUC: 0.423
2024-05-15 10:52 - INFO - 	 Recall for 0.4 precision: 0.574
2024-05-15 10:52 - INFO - 	 Best Val. Loss: 0.508
2024-05-15 10:52 - INFO - 	 Best ROC-AUC: 0.711
2024-05-15 10:52 - INFO - 	 Best PR-AUC: 0.423
2024-05-15 10:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.689
2024-05-15 10:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.400
2024-05-15 10:52 - INFO - 	 Best Recall for 0.4 precision: 0.574
2024-05-15 10:52 - INFO - ---------------------------------------------
2024-05-15 10:57 - INFO - ---------------------------------------------
2024-05-15 10:57 - INFO - Epoch: 02 | Time: 5m 16s
2024-05-15 10:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72728
2024-05-15 10:57 - INFO - 	 Train Loss: 0.499
2024-05-15 10:57 - INFO - 	 Val. Loss: 0.495
2024-05-15 10:57 - INFO - 	 ROC-AUC: 0.727
2024-05-15 10:57 - INFO - 	 PR-AUC: 0.440
2024-05-15 10:57 - INFO - 	 Recall for 0.4 precision: 0.645
2024-05-15 10:57 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 10:57 - INFO - 	 Best ROC-AUC: 0.727
2024-05-15 10:57 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 10:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-05-15 10:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.419
2024-05-15 10:57 - INFO - 	 Best Recall for 0.4 precision: 0.645
2024-05-15 10:57 - INFO - ---------------------------------------------
2024-05-15 11:01 - INFO - ---------------------------------------------
2024-05-15 11:01 - INFO - Epoch: 03 | Time: 4m 19s
2024-05-15 11:01 - INFO - 	 Train Loss: 0.490
2024-05-15 11:01 - INFO - 	 Val. Loss: 0.496
2024-05-15 11:01 - INFO - 	 ROC-AUC: 0.726
2024-05-15 11:01 - INFO - 	 PR-AUC: 0.434
2024-05-15 11:01 - INFO - 	 Recall for 0.4 precision: 0.649
2024-05-15 11:01 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 11:01 - INFO - 	 Best ROC-AUC: 0.727
2024-05-15 11:01 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 11:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-05-15 11:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.419
2024-05-15 11:01 - INFO - 	 Best Recall for 0.4 precision: 0.649
2024-05-15 11:01 - INFO - ---------------------------------------------
2024-05-15 11:05 - INFO - ---------------------------------------------
2024-05-15 11:05 - INFO - Epoch: 04 | Time: 4m 15s
2024-05-15 11:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72999
2024-05-15 11:05 - INFO - 	 Train Loss: 0.485
2024-05-15 11:05 - INFO - 	 Val. Loss: 0.503
2024-05-15 11:05 - INFO - 	 ROC-AUC: 0.730
2024-05-15 11:05 - INFO - 	 PR-AUC: 0.439
2024-05-15 11:05 - INFO - 	 Recall for 0.4 precision: 0.664
2024-05-15 11:05 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 11:05 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 11:05 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 11:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-15 11:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.419
2024-05-15 11:05 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-15 11:05 - INFO - ---------------------------------------------
2024-05-15 11:10 - INFO - ---------------------------------------------
2024-05-15 11:10 - INFO - Epoch: 05 | Time: 4m 17s
2024-05-15 11:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73069
2024-05-15 11:10 - INFO - 	 Train Loss: 0.482
2024-05-15 11:10 - INFO - 	 Val. Loss: 0.496
2024-05-15 11:10 - INFO - 	 ROC-AUC: 0.731
2024-05-15 11:10 - INFO - 	 PR-AUC: 0.443
2024-05-15 11:10 - INFO - 	 Recall for 0.4 precision: 0.664
2024-05-15 11:10 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 11:10 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 11:10 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 11:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 11:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 11:10 - INFO - 	 Best Recall for 0.4 precision: 0.664
2024-05-15 11:10 - INFO - ---------------------------------------------
2024-05-15 11:15 - INFO - ---------------------------------------------
2024-05-15 11:15 - INFO - Epoch: 06 | Time: 4m 42s
2024-05-15 11:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73566
2024-05-15 11:15 - INFO - 	 Train Loss: 0.480
2024-05-15 11:15 - INFO - 	 Val. Loss: 0.493
2024-05-15 11:15 - INFO - 	 ROC-AUC: 0.736
2024-05-15 11:15 - INFO - 	 PR-AUC: 0.446
2024-05-15 11:15 - INFO - 	 Recall for 0.4 precision: 0.685
2024-05-15 11:15 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 11:15 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 11:15 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 11:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 11:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 11:15 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-15 11:15 - INFO - ---------------------------------------------
2024-05-15 11:19 - INFO - ---------------------------------------------
2024-05-15 11:19 - INFO - Epoch: 07 | Time: 4m 15s
2024-05-15 11:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73582
2024-05-15 11:19 - INFO - 	 Train Loss: 0.477
2024-05-15 11:19 - INFO - 	 Val. Loss: 0.491
2024-05-15 11:19 - INFO - 	 ROC-AUC: 0.736
2024-05-15 11:19 - INFO - 	 PR-AUC: 0.447
2024-05-15 11:19 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-15 11:19 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 11:19 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 11:19 - INFO - 	 Best PR-AUC: 0.447
2024-05-15 11:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 11:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 11:19 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-15 11:19 - INFO - ---------------------------------------------
2024-05-15 11:23 - INFO - ---------------------------------------------
2024-05-15 11:23 - INFO - Epoch: 08 | Time: 4m 8s
2024-05-15 11:23 - INFO - 	 Train Loss: 0.476
2024-05-15 11:23 - INFO - 	 Val. Loss: 0.501
2024-05-15 11:23 - INFO - 	 ROC-AUC: 0.731
2024-05-15 11:23 - INFO - 	 PR-AUC: 0.440
2024-05-15 11:23 - INFO - 	 Recall for 0.4 precision: 0.669
2024-05-15 11:23 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 11:23 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 11:23 - INFO - 	 Best PR-AUC: 0.447
2024-05-15 11:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 11:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 11:23 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-15 11:23 - INFO - ---------------------------------------------
2024-05-15 11:27 - INFO - ---------------------------------------------
2024-05-15 11:27 - INFO - Epoch: 09 | Time: 4m 6s
2024-05-15 11:27 - INFO - 	 Train Loss: 0.475
2024-05-15 11:27 - INFO - 	 Val. Loss: 0.495
2024-05-15 11:27 - INFO - 	 ROC-AUC: 0.732
2024-05-15 11:27 - INFO - 	 PR-AUC: 0.445
2024-05-15 11:27 - INFO - 	 Recall for 0.4 precision: 0.666
2024-05-15 11:27 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 11:27 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 11:27 - INFO - 	 Best PR-AUC: 0.447
2024-05-15 11:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 11:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 11:27 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-15 11:27 - INFO - ---------------------------------------------
2024-05-15 11:31 - INFO - ---------------------------------------------
2024-05-15 11:31 - INFO - Epoch: 10 | Time: 4m 10s
2024-05-15 11:31 - INFO - 	 Train Loss: 0.474
2024-05-15 11:31 - INFO - 	 Val. Loss: 0.493
2024-05-15 11:31 - INFO - 	 ROC-AUC: 0.734
2024-05-15 11:31 - INFO - 	 PR-AUC: 0.446
2024-05-15 11:31 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-15 11:31 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 11:31 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 11:31 - INFO - 	 Best PR-AUC: 0.447
2024-05-15 11:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 11:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 11:31 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-15 11:31 - INFO - ---------------------------------------------
2024-05-15 11:37 - INFO - Fit the preprocessing pipeline
2024-05-15 11:37 - INFO - Training using device: cuda
2024-05-15 11:37 - INFO - Creating generators
2024-05-15 11:38 - INFO - The model has 651,257 trainable parameters
2024-05-15 11:38 - INFO - * Model:
2024-05-15 11:38 - INFO - * -----------
2024-05-15 11:38 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 11:38 - INFO - * -----------
2024-05-15 11:38 - INFO - Evaluating model based on: rocauc
2024-05-15 11:38 - INFO - Training..

2024-05-15 11:43 - INFO - ---------------------------------------------
2024-05-15 11:43 - INFO - Epoch: 01 | Time: 5m 8s
2024-05-15 11:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70383
2024-05-15 11:43 - INFO - 	 Train Loss: 0.541
2024-05-15 11:43 - INFO - 	 Val. Loss: 0.515
2024-05-15 11:43 - INFO - 	 ROC-AUC: 0.704
2024-05-15 11:43 - INFO - 	 PR-AUC: 0.419
2024-05-15 11:43 - INFO - 	 Recall for 0.4 precision: 0.550
2024-05-15 11:43 - INFO - 	 Best Val. Loss: 0.515
2024-05-15 11:43 - INFO - 	 Best ROC-AUC: 0.704
2024-05-15 11:43 - INFO - 	 Best PR-AUC: 0.419
2024-05-15 11:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.682
2024-05-15 11:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.392
2024-05-15 11:43 - INFO - 	 Best Recall for 0.4 precision: 0.550
2024-05-15 11:43 - INFO - ---------------------------------------------
2024-05-15 11:48 - INFO - ---------------------------------------------
2024-05-15 11:48 - INFO - Epoch: 02 | Time: 5m 43s
2024-05-15 11:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72962
2024-05-15 11:48 - INFO - 	 Train Loss: 0.500
2024-05-15 11:48 - INFO - 	 Val. Loss: 0.495
2024-05-15 11:48 - INFO - 	 ROC-AUC: 0.730
2024-05-15 11:48 - INFO - 	 PR-AUC: 0.439
2024-05-15 11:48 - INFO - 	 Recall for 0.4 precision: 0.655
2024-05-15 11:48 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 11:48 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 11:48 - INFO - 	 Best PR-AUC: 0.439
2024-05-15 11:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-15 11:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-05-15 11:48 - INFO - 	 Best Recall for 0.4 precision: 0.655
2024-05-15 11:48 - INFO - ---------------------------------------------
2024-05-15 11:53 - INFO - ---------------------------------------------
2024-05-15 11:53 - INFO - Epoch: 03 | Time: 5m 4s
2024-05-15 11:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7331
2024-05-15 11:53 - INFO - 	 Train Loss: 0.490
2024-05-15 11:53 - INFO - 	 Val. Loss: 0.493
2024-05-15 11:53 - INFO - 	 ROC-AUC: 0.733
2024-05-15 11:53 - INFO - 	 PR-AUC: 0.443
2024-05-15 11:53 - INFO - 	 Recall for 0.4 precision: 0.674
2024-05-15 11:53 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 11:53 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 11:53 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 11:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 11:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-05-15 11:53 - INFO - 	 Best Recall for 0.4 precision: 0.674
2024-05-15 11:53 - INFO - ---------------------------------------------
2024-05-15 11:59 - INFO - ---------------------------------------------
2024-05-15 11:59 - INFO - Epoch: 04 | Time: 5m 12s
2024-05-15 11:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73393
2024-05-15 11:59 - INFO - 	 Train Loss: 0.485
2024-05-15 11:59 - INFO - 	 Val. Loss: 0.492
2024-05-15 11:59 - INFO - 	 ROC-AUC: 0.734
2024-05-15 11:59 - INFO - 	 PR-AUC: 0.447
2024-05-15 11:59 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-15 11:59 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 11:59 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 11:59 - INFO - 	 Best PR-AUC: 0.447
2024-05-15 11:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 11:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 11:59 - INFO - 	 Best Recall for 0.4 precision: 0.674
2024-05-15 11:59 - INFO - ---------------------------------------------
2024-05-15 12:03 - INFO - ---------------------------------------------
2024-05-15 12:03 - INFO - Epoch: 05 | Time: 4m 30s
2024-05-15 12:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73576
2024-05-15 12:03 - INFO - 	 Train Loss: 0.482
2024-05-15 12:03 - INFO - 	 Val. Loss: 0.492
2024-05-15 12:03 - INFO - 	 ROC-AUC: 0.736
2024-05-15 12:03 - INFO - 	 PR-AUC: 0.448
2024-05-15 12:03 - INFO - 	 Recall for 0.4 precision: 0.686
2024-05-15 12:03 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 12:03 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 12:03 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 12:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 12:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-05-15 12:03 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 12:03 - INFO - ---------------------------------------------
2024-05-15 12:08 - INFO - ---------------------------------------------
2024-05-15 12:08 - INFO - Epoch: 06 | Time: 4m 31s
2024-05-15 12:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73659
2024-05-15 12:08 - INFO - 	 Train Loss: 0.480
2024-05-15 12:08 - INFO - 	 Val. Loss: 0.491
2024-05-15 12:08 - INFO - 	 ROC-AUC: 0.737
2024-05-15 12:08 - INFO - 	 PR-AUC: 0.450
2024-05-15 12:08 - INFO - 	 Recall for 0.4 precision: 0.683
2024-05-15 12:08 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 12:08 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 12:08 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 12:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 12:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 12:08 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 12:08 - INFO - ---------------------------------------------
2024-05-15 12:13 - INFO - ---------------------------------------------
2024-05-15 12:13 - INFO - Epoch: 07 | Time: 4m 46s
2024-05-15 12:13 - INFO - 	 Train Loss: 0.478
2024-05-15 12:13 - INFO - 	 Val. Loss: 0.494
2024-05-15 12:13 - INFO - 	 ROC-AUC: 0.732
2024-05-15 12:13 - INFO - 	 PR-AUC: 0.443
2024-05-15 12:13 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-15 12:13 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 12:13 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 12:13 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 12:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 12:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 12:13 - INFO - 	 Best Recall for 0.4 precision: 0.686
2024-05-15 12:13 - INFO - ---------------------------------------------
2024-05-15 12:17 - INFO - ---------------------------------------------
2024-05-15 12:17 - INFO - Epoch: 08 | Time: 4m 11s
2024-05-15 12:17 - INFO - 	 Train Loss: 0.477
2024-05-15 12:17 - INFO - 	 Val. Loss: 0.492
2024-05-15 12:17 - INFO - 	 ROC-AUC: 0.737
2024-05-15 12:17 - INFO - 	 PR-AUC: 0.445
2024-05-15 12:17 - INFO - 	 Recall for 0.4 precision: 0.688
2024-05-15 12:17 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 12:17 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 12:17 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 12:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 12:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 12:17 - INFO - 	 Best Recall for 0.4 precision: 0.688
2024-05-15 12:17 - INFO - ---------------------------------------------
2024-05-15 12:21 - INFO - ---------------------------------------------
2024-05-15 12:21 - INFO - Epoch: 09 | Time: 4m 29s
2024-05-15 12:21 - INFO - 	 Train Loss: 0.476
2024-05-15 12:21 - INFO - 	 Val. Loss: 0.494
2024-05-15 12:21 - INFO - 	 ROC-AUC: 0.732
2024-05-15 12:21 - INFO - 	 PR-AUC: 0.443
2024-05-15 12:21 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-15 12:21 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 12:21 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 12:21 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 12:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 12:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 12:21 - INFO - 	 Best Recall for 0.4 precision: 0.688
2024-05-15 12:21 - INFO - ---------------------------------------------
2024-05-15 12:33 - INFO - Fit the preprocessing pipeline
2024-05-15 12:33 - INFO - Training using device: cuda
2024-05-15 12:33 - INFO - Creating generators
2024-05-15 12:33 - INFO - The model has 651,257 trainable parameters
2024-05-15 12:33 - INFO - * Model:
2024-05-15 12:33 - INFO - * -----------
2024-05-15 12:33 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 12:33 - INFO - * -----------
2024-05-15 12:33 - INFO - Evaluating model based on: rocauc
2024-05-15 12:33 - INFO - Training..

2024-05-15 12:37 - INFO - ---------------------------------------------
2024-05-15 12:37 - INFO - Epoch: 01 | Time: 4m 24s
2024-05-15 12:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71256
2024-05-15 12:37 - INFO - 	 Train Loss: 0.539
2024-05-15 12:37 - INFO - 	 Val. Loss: 0.503
2024-05-15 12:37 - INFO - 	 ROC-AUC: 0.713
2024-05-15 12:37 - INFO - 	 PR-AUC: 0.430
2024-05-15 12:37 - INFO - 	 Recall for 0.4 precision: 0.582
2024-05-15 12:37 - INFO - 	 Best Val. Loss: 0.503
2024-05-15 12:37 - INFO - 	 Best ROC-AUC: 0.713
2024-05-15 12:37 - INFO - 	 Best PR-AUC: 0.430
2024-05-15 12:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.691
2024-05-15 12:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.403
2024-05-15 12:37 - INFO - 	 Best Recall for 0.4 precision: 0.582
2024-05-15 12:37 - INFO - ---------------------------------------------
2024-05-15 12:41 - INFO - ---------------------------------------------
2024-05-15 12:41 - INFO - Epoch: 02 | Time: 4m 22s
2024-05-15 12:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72371
2024-05-15 12:41 - INFO - 	 Train Loss: 0.499
2024-05-15 12:41 - INFO - 	 Val. Loss: 0.501
2024-05-15 12:41 - INFO - 	 ROC-AUC: 0.724
2024-05-15 12:41 - INFO - 	 PR-AUC: 0.437
2024-05-15 12:41 - INFO - 	 Recall for 0.4 precision: 0.633
2024-05-15 12:41 - INFO - 	 Best Val. Loss: 0.501
2024-05-15 12:41 - INFO - 	 Best ROC-AUC: 0.724
2024-05-15 12:41 - INFO - 	 Best PR-AUC: 0.437
2024-05-15 12:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.702
2024-05-15 12:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.417
2024-05-15 12:41 - INFO - 	 Best Recall for 0.4 precision: 0.633
2024-05-15 12:41 - INFO - ---------------------------------------------
2024-05-15 12:46 - INFO - ---------------------------------------------
2024-05-15 12:46 - INFO - Epoch: 03 | Time: 4m 19s
2024-05-15 12:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73004
2024-05-15 12:46 - INFO - 	 Train Loss: 0.490
2024-05-15 12:46 - INFO - 	 Val. Loss: 0.494
2024-05-15 12:46 - INFO - 	 ROC-AUC: 0.730
2024-05-15 12:46 - INFO - 	 PR-AUC: 0.441
2024-05-15 12:46 - INFO - 	 Recall for 0.4 precision: 0.654
2024-05-15 12:46 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 12:46 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 12:46 - INFO - 	 Best PR-AUC: 0.441
2024-05-15 12:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 12:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-05-15 12:46 - INFO - 	 Best Recall for 0.4 precision: 0.654
2024-05-15 12:46 - INFO - ---------------------------------------------
2024-05-15 12:51 - INFO - ---------------------------------------------
2024-05-15 12:51 - INFO - Epoch: 04 | Time: 5m 13s
2024-05-15 12:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73055
2024-05-15 12:51 - INFO - 	 Train Loss: 0.485
2024-05-15 12:51 - INFO - 	 Val. Loss: 0.494
2024-05-15 12:51 - INFO - 	 ROC-AUC: 0.731
2024-05-15 12:51 - INFO - 	 PR-AUC: 0.443
2024-05-15 12:51 - INFO - 	 Recall for 0.4 precision: 0.661
2024-05-15 12:51 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 12:51 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 12:51 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 12:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-15 12:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 12:51 - INFO - 	 Best Recall for 0.4 precision: 0.661
2024-05-15 12:51 - INFO - ---------------------------------------------
2024-05-15 12:56 - INFO - ---------------------------------------------
2024-05-15 12:56 - INFO - Epoch: 05 | Time: 4m 42s
2024-05-15 12:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73209
2024-05-15 12:56 - INFO - 	 Train Loss: 0.482
2024-05-15 12:56 - INFO - 	 Val. Loss: 0.494
2024-05-15 12:56 - INFO - 	 ROC-AUC: 0.732
2024-05-15 12:56 - INFO - 	 PR-AUC: 0.444
2024-05-15 12:56 - INFO - 	 Recall for 0.4 precision: 0.669
2024-05-15 12:56 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 12:56 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 12:56 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 12:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-15 12:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 12:56 - INFO - 	 Best Recall for 0.4 precision: 0.669
2024-05-15 12:56 - INFO - ---------------------------------------------
2024-05-15 13:00 - INFO - ---------------------------------------------
2024-05-15 13:00 - INFO - Epoch: 06 | Time: 4m 41s
2024-05-15 13:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73281
2024-05-15 13:00 - INFO - 	 Train Loss: 0.480
2024-05-15 13:00 - INFO - 	 Val. Loss: 0.493
2024-05-15 13:00 - INFO - 	 ROC-AUC: 0.733
2024-05-15 13:00 - INFO - 	 PR-AUC: 0.446
2024-05-15 13:00 - INFO - 	 Recall for 0.4 precision: 0.672
2024-05-15 13:00 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:00 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 13:00 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 13:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 13:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 13:00 - INFO - 	 Best Recall for 0.4 precision: 0.672
2024-05-15 13:00 - INFO - ---------------------------------------------
2024-05-15 13:04 - INFO - ---------------------------------------------
2024-05-15 13:04 - INFO - Epoch: 07 | Time: 4m 0s
2024-05-15 13:04 - INFO - 	 Train Loss: 0.478
2024-05-15 13:04 - INFO - 	 Val. Loss: 0.496
2024-05-15 13:04 - INFO - 	 ROC-AUC: 0.732
2024-05-15 13:04 - INFO - 	 PR-AUC: 0.441
2024-05-15 13:04 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-15 13:04 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:04 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 13:04 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 13:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 13:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 13:04 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-05-15 13:04 - INFO - ---------------------------------------------
2024-05-15 13:08 - INFO - ---------------------------------------------
2024-05-15 13:08 - INFO - Epoch: 08 | Time: 4m 1s
2024-05-15 13:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73307
2024-05-15 13:08 - INFO - 	 Train Loss: 0.477
2024-05-15 13:08 - INFO - 	 Val. Loss: 0.495
2024-05-15 13:08 - INFO - 	 ROC-AUC: 0.733
2024-05-15 13:08 - INFO - 	 PR-AUC: 0.443
2024-05-15 13:08 - INFO - 	 Recall for 0.4 precision: 0.672
2024-05-15 13:08 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:08 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 13:08 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 13:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-15 13:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 13:08 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-05-15 13:08 - INFO - ---------------------------------------------
2024-05-15 13:12 - INFO - ---------------------------------------------
2024-05-15 13:12 - INFO - Epoch: 09 | Time: 3m 56s
2024-05-15 13:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73533
2024-05-15 13:12 - INFO - 	 Train Loss: 0.476
2024-05-15 13:12 - INFO - 	 Val. Loss: 0.495
2024-05-15 13:12 - INFO - 	 ROC-AUC: 0.735
2024-05-15 13:12 - INFO - 	 PR-AUC: 0.442
2024-05-15 13:12 - INFO - 	 Recall for 0.4 precision: 0.685
2024-05-15 13:12 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:12 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 13:12 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 13:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.726
2024-05-15 13:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 13:12 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-15 13:12 - INFO - ---------------------------------------------
2024-05-15 13:17 - INFO - ---------------------------------------------
2024-05-15 13:17 - INFO - Epoch: 10 | Time: 4m 17s
2024-05-15 13:17 - INFO - 	 Train Loss: 0.475
2024-05-15 13:17 - INFO - 	 Val. Loss: 0.495
2024-05-15 13:17 - INFO - 	 ROC-AUC: 0.731
2024-05-15 13:17 - INFO - 	 PR-AUC: 0.440
2024-05-15 13:17 - INFO - 	 Recall for 0.4 precision: 0.676
2024-05-15 13:17 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:17 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 13:17 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 13:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.726
2024-05-15 13:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-05-15 13:17 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-15 13:17 - INFO - ---------------------------------------------
2024-05-15 13:23 - INFO - Fit the preprocessing pipeline
2024-05-15 13:23 - INFO - Training using device: cuda
2024-05-15 13:23 - INFO - Creating generators
2024-05-15 13:23 - INFO - The model has 651,257 trainable parameters
2024-05-15 13:23 - INFO - * Model:
2024-05-15 13:23 - INFO - * -----------
2024-05-15 13:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 13:23 - INFO - * -----------
2024-05-15 13:23 - INFO - Evaluating model based on: rocauc
2024-05-15 13:23 - INFO - Training..

2024-05-15 13:28 - INFO - ---------------------------------------------
2024-05-15 13:28 - INFO - Epoch: 01 | Time: 4m 44s
2024-05-15 13:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70875
2024-05-15 13:28 - INFO - 	 Train Loss: 0.540
2024-05-15 13:28 - INFO - 	 Val. Loss: 0.509
2024-05-15 13:28 - INFO - 	 ROC-AUC: 0.709
2024-05-15 13:28 - INFO - 	 PR-AUC: 0.421
2024-05-15 13:28 - INFO - 	 Recall for 0.4 precision: 0.548
2024-05-15 13:28 - INFO - 	 Best Val. Loss: 0.509
2024-05-15 13:28 - INFO - 	 Best ROC-AUC: 0.709
2024-05-15 13:28 - INFO - 	 Best PR-AUC: 0.421
2024-05-15 13:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.682
2024-05-15 13:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.396
2024-05-15 13:28 - INFO - 	 Best Recall for 0.4 precision: 0.548
2024-05-15 13:28 - INFO - ---------------------------------------------
2024-05-15 13:32 - INFO - ---------------------------------------------
2024-05-15 13:32 - INFO - Epoch: 02 | Time: 4m 22s
2024-05-15 13:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.728
2024-05-15 13:32 - INFO - 	 Train Loss: 0.498
2024-05-15 13:32 - INFO - 	 Val. Loss: 0.495
2024-05-15 13:32 - INFO - 	 ROC-AUC: 0.728
2024-05-15 13:32 - INFO - 	 PR-AUC: 0.438
2024-05-15 13:32 - INFO - 	 Recall for 0.4 precision: 0.001
2024-05-15 13:32 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 13:32 - INFO - 	 Best ROC-AUC: 0.728
2024-05-15 13:32 - INFO - 	 Best PR-AUC: 0.438
2024-05-15 13:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.704
2024-05-15 13:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.420
2024-05-15 13:32 - INFO - 	 Best Recall for 0.4 precision: 0.548
2024-05-15 13:32 - INFO - ---------------------------------------------
2024-05-15 13:37 - INFO - ---------------------------------------------
2024-05-15 13:37 - INFO - Epoch: 03 | Time: 4m 25s
2024-05-15 13:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73329
2024-05-15 13:37 - INFO - 	 Train Loss: 0.489
2024-05-15 13:37 - INFO - 	 Val. Loss: 0.493
2024-05-15 13:37 - INFO - 	 ROC-AUC: 0.733
2024-05-15 13:37 - INFO - 	 PR-AUC: 0.443
2024-05-15 13:37 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-15 13:37 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:37 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 13:37 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 13:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 13:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 13:37 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-05-15 13:37 - INFO - ---------------------------------------------
2024-05-15 13:41 - INFO - ---------------------------------------------
2024-05-15 13:41 - INFO - Epoch: 04 | Time: 4m 16s
2024-05-15 13:41 - INFO - 	 Train Loss: 0.485
2024-05-15 13:41 - INFO - 	 Val. Loss: 0.500
2024-05-15 13:41 - INFO - 	 ROC-AUC: 0.728
2024-05-15 13:41 - INFO - 	 PR-AUC: 0.433
2024-05-15 13:41 - INFO - 	 Recall for 0.4 precision: 0.662
2024-05-15 13:41 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:41 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 13:41 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 13:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 13:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 13:41 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-05-15 13:41 - INFO - ---------------------------------------------
2024-05-15 13:45 - INFO - ---------------------------------------------
2024-05-15 13:45 - INFO - Epoch: 05 | Time: 4m 14s
2024-05-15 13:45 - INFO - 	 Train Loss: 0.482
2024-05-15 13:45 - INFO - 	 Val. Loss: 0.497
2024-05-15 13:45 - INFO - 	 ROC-AUC: 0.730
2024-05-15 13:45 - INFO - 	 PR-AUC: 0.436
2024-05-15 13:45 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-15 13:45 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:45 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 13:45 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 13:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 13:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 13:45 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-05-15 13:45 - INFO - ---------------------------------------------
2024-05-15 13:50 - INFO - ---------------------------------------------
2024-05-15 13:50 - INFO - Epoch: 06 | Time: 4m 40s
2024-05-15 13:50 - INFO - 	 Train Loss: 0.480
2024-05-15 13:50 - INFO - 	 Val. Loss: 0.495
2024-05-15 13:50 - INFO - 	 ROC-AUC: 0.731
2024-05-15 13:50 - INFO - 	 PR-AUC: 0.437
2024-05-15 13:50 - INFO - 	 Recall for 0.4 precision: 0.007
2024-05-15 13:50 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:50 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 13:50 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 13:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 13:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 13:50 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-05-15 13:50 - INFO - ---------------------------------------------
2024-05-15 13:54 - INFO - ---------------------------------------------
2024-05-15 13:54 - INFO - Epoch: 07 | Time: 4m 11s
2024-05-15 13:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73413
2024-05-15 13:54 - INFO - 	 Train Loss: 0.478
2024-05-15 13:54 - INFO - 	 Val. Loss: 0.496
2024-05-15 13:54 - INFO - 	 ROC-AUC: 0.734
2024-05-15 13:54 - INFO - 	 PR-AUC: 0.441
2024-05-15 13:54 - INFO - 	 Recall for 0.4 precision: 0.677
2024-05-15 13:54 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:54 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 13:54 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 13:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 13:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 13:54 - INFO - 	 Best Recall for 0.4 precision: 0.677
2024-05-15 13:54 - INFO - ---------------------------------------------
2024-05-15 13:59 - INFO - ---------------------------------------------
2024-05-15 13:59 - INFO - Epoch: 08 | Time: 4m 41s
2024-05-15 13:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73486
2024-05-15 13:59 - INFO - 	 Train Loss: 0.476
2024-05-15 13:59 - INFO - 	 Val. Loss: 0.494
2024-05-15 13:59 - INFO - 	 ROC-AUC: 0.735
2024-05-15 13:59 - INFO - 	 PR-AUC: 0.440
2024-05-15 13:59 - INFO - 	 Recall for 0.4 precision: 0.683
2024-05-15 13:59 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 13:59 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 13:59 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 13:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 13:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 13:59 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-15 13:59 - INFO - ---------------------------------------------
2024-05-15 14:03 - INFO - ---------------------------------------------
2024-05-15 14:03 - INFO - Epoch: 09 | Time: 4m 3s
2024-05-15 14:03 - INFO - 	 Train Loss: 0.475
2024-05-15 14:03 - INFO - 	 Val. Loss: 0.497
2024-05-15 14:03 - INFO - 	 ROC-AUC: 0.731
2024-05-15 14:03 - INFO - 	 PR-AUC: 0.438
2024-05-15 14:03 - INFO - 	 Recall for 0.4 precision: 0.662
2024-05-15 14:03 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 14:03 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 14:03 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 14:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 14:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 14:03 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-15 14:03 - INFO - ---------------------------------------------
2024-05-15 14:07 - INFO - ---------------------------------------------
2024-05-15 14:07 - INFO - Epoch: 10 | Time: 4m 43s
2024-05-15 14:07 - INFO - 	 Train Loss: 0.475
2024-05-15 14:07 - INFO - 	 Val. Loss: 0.493
2024-05-15 14:07 - INFO - 	 ROC-AUC: 0.735
2024-05-15 14:07 - INFO - 	 PR-AUC: 0.444
2024-05-15 14:07 - INFO - 	 Recall for 0.4 precision: 0.682
2024-05-15 14:07 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 14:07 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 14:07 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 14:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 14:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 14:07 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-15 14:07 - INFO - ---------------------------------------------
2024-05-15 14:14 - INFO - Fit the preprocessing pipeline
2024-05-15 14:14 - INFO - Training using device: cuda
2024-05-15 14:14 - INFO - Creating generators
2024-05-15 14:14 - INFO - The model has 651,257 trainable parameters
2024-05-15 14:14 - INFO - * Model:
2024-05-15 14:14 - INFO - * -----------
2024-05-15 14:14 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 14:14 - INFO - * -----------
2024-05-15 14:14 - INFO - Evaluating model based on: rocauc
2024-05-15 14:14 - INFO - Training..

2024-05-15 14:19 - INFO - ---------------------------------------------
2024-05-15 14:19 - INFO - Epoch: 01 | Time: 4m 48s
2024-05-15 14:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70574
2024-05-15 14:19 - INFO - 	 Train Loss: 0.540
2024-05-15 14:19 - INFO - 	 Val. Loss: 0.518
2024-05-15 14:19 - INFO - 	 ROC-AUC: 0.706
2024-05-15 14:19 - INFO - 	 PR-AUC: 0.418
2024-05-15 14:19 - INFO - 	 Recall for 0.4 precision: 0.536
2024-05-15 14:19 - INFO - 	 Best Val. Loss: 0.518
2024-05-15 14:19 - INFO - 	 Best ROC-AUC: 0.706
2024-05-15 14:19 - INFO - 	 Best PR-AUC: 0.418
2024-05-15 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.680
2024-05-15 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-05-15 14:19 - INFO - 	 Best Recall for 0.4 precision: 0.536
2024-05-15 14:19 - INFO - ---------------------------------------------
2024-05-15 14:24 - INFO - ---------------------------------------------
2024-05-15 14:24 - INFO - Epoch: 02 | Time: 5m 37s
2024-05-15 14:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72292
2024-05-15 14:24 - INFO - 	 Train Loss: 0.501
2024-05-15 14:24 - INFO - 	 Val. Loss: 0.499
2024-05-15 14:24 - INFO - 	 ROC-AUC: 0.723
2024-05-15 14:24 - INFO - 	 PR-AUC: 0.432
2024-05-15 14:24 - INFO - 	 Recall for 0.4 precision: 0.000
2024-05-15 14:24 - INFO - 	 Best Val. Loss: 0.499
2024-05-15 14:24 - INFO - 	 Best ROC-AUC: 0.723
2024-05-15 14:24 - INFO - 	 Best PR-AUC: 0.432
2024-05-15 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-05-15 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.418
2024-05-15 14:24 - INFO - 	 Best Recall for 0.4 precision: 0.536
2024-05-15 14:24 - INFO - ---------------------------------------------
2024-05-15 14:29 - INFO - ---------------------------------------------
2024-05-15 14:29 - INFO - Epoch: 03 | Time: 5m 10s
2024-05-15 14:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.731
2024-05-15 14:29 - INFO - 	 Train Loss: 0.491
2024-05-15 14:29 - INFO - 	 Val. Loss: 0.494
2024-05-15 14:29 - INFO - 	 ROC-AUC: 0.731
2024-05-15 14:29 - INFO - 	 PR-AUC: 0.440
2024-05-15 14:29 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-15 14:29 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 14:29 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 14:29 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 14:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 14:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 14:29 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 14:29 - INFO - ---------------------------------------------
2024-05-15 14:35 - INFO - ---------------------------------------------
2024-05-15 14:35 - INFO - Epoch: 04 | Time: 5m 15s
2024-05-15 14:35 - INFO - 	 Train Loss: 0.486
2024-05-15 14:35 - INFO - 	 Val. Loss: 0.496
2024-05-15 14:35 - INFO - 	 ROC-AUC: 0.729
2024-05-15 14:35 - INFO - 	 PR-AUC: 0.435
2024-05-15 14:35 - INFO - 	 Recall for 0.4 precision: 0.659
2024-05-15 14:35 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 14:35 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 14:35 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 14:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 14:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 14:35 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 14:35 - INFO - ---------------------------------------------
2024-05-15 14:40 - INFO - ---------------------------------------------
2024-05-15 14:40 - INFO - Epoch: 05 | Time: 5m 2s
2024-05-15 14:40 - INFO - 	 Train Loss: 0.482
2024-05-15 14:40 - INFO - 	 Val. Loss: 0.496
2024-05-15 14:40 - INFO - 	 ROC-AUC: 0.730
2024-05-15 14:40 - INFO - 	 PR-AUC: 0.435
2024-05-15 14:40 - INFO - 	 Recall for 0.4 precision: 0.658
2024-05-15 14:40 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 14:40 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 14:40 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 14:40 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 14:40 - INFO - ---------------------------------------------
2024-05-15 14:45 - INFO - ---------------------------------------------
2024-05-15 14:45 - INFO - Epoch: 06 | Time: 4m 55s
2024-05-15 14:45 - INFO - 	 Train Loss: 0.480
2024-05-15 14:45 - INFO - 	 Val. Loss: 0.497
2024-05-15 14:45 - INFO - 	 ROC-AUC: 0.729
2024-05-15 14:45 - INFO - 	 PR-AUC: 0.435
2024-05-15 14:45 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-15 14:45 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 14:45 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 14:45 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 14:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 14:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 14:45 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 14:45 - INFO - ---------------------------------------------
2024-05-15 14:50 - INFO - ---------------------------------------------
2024-05-15 14:50 - INFO - Epoch: 07 | Time: 5m 16s
2024-05-15 14:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73442
2024-05-15 14:50 - INFO - 	 Train Loss: 0.478
2024-05-15 14:50 - INFO - 	 Val. Loss: 0.493
2024-05-15 14:50 - INFO - 	 ROC-AUC: 0.734
2024-05-15 14:50 - INFO - 	 PR-AUC: 0.442
2024-05-15 14:50 - INFO - 	 Recall for 0.4 precision: 0.006
2024-05-15 14:50 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 14:50 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 14:50 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 14:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 14:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-05-15 14:50 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 14:50 - INFO - ---------------------------------------------
2024-05-15 14:54 - INFO - ---------------------------------------------
2024-05-15 14:54 - INFO - Epoch: 08 | Time: 4m 14s
2024-05-15 14:54 - INFO - 	 Train Loss: 0.476
2024-05-15 14:54 - INFO - 	 Val. Loss: 0.501
2024-05-15 14:54 - INFO - 	 ROC-AUC: 0.729
2024-05-15 14:54 - INFO - 	 PR-AUC: 0.436
2024-05-15 14:54 - INFO - 	 Recall for 0.4 precision: 0.655
2024-05-15 14:54 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 14:54 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 14:54 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 14:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 14:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-05-15 14:54 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 14:54 - INFO - ---------------------------------------------
2024-05-15 14:59 - INFO - ---------------------------------------------
2024-05-15 14:59 - INFO - Epoch: 09 | Time: 4m 32s
2024-05-15 14:59 - INFO - 	 Train Loss: 0.475
2024-05-15 14:59 - INFO - 	 Val. Loss: 0.495
2024-05-15 14:59 - INFO - 	 ROC-AUC: 0.731
2024-05-15 14:59 - INFO - 	 PR-AUC: 0.440
2024-05-15 14:59 - INFO - 	 Recall for 0.4 precision: 0.002
2024-05-15 14:59 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 14:59 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 14:59 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 14:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 14:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-05-15 14:59 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 14:59 - INFO - ---------------------------------------------
2024-05-15 15:03 - INFO - ---------------------------------------------
2024-05-15 15:03 - INFO - Epoch: 10 | Time: 4m 29s
2024-05-15 15:03 - INFO - 	 Train Loss: 0.475
2024-05-15 15:03 - INFO - 	 Val. Loss: 0.497
2024-05-15 15:03 - INFO - 	 ROC-AUC: 0.731
2024-05-15 15:03 - INFO - 	 PR-AUC: 0.441
2024-05-15 15:03 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-15 15:03 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 15:03 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 15:03 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 15:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 15:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-05-15 15:03 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-15 15:03 - INFO - ---------------------------------------------
2024-05-15 15:10 - INFO - Fit the preprocessing pipeline
2024-05-15 15:10 - INFO - Training using device: cuda
2024-05-15 15:10 - INFO - Creating generators
2024-05-15 15:10 - INFO - The model has 651,257 trainable parameters
2024-05-15 15:10 - INFO - * Model:
2024-05-15 15:10 - INFO - * -----------
2024-05-15 15:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 15:10 - INFO - * -----------
2024-05-15 15:10 - INFO - Evaluating model based on: rocauc
2024-05-15 15:10 - INFO - Training..

2024-05-15 15:15 - INFO - ---------------------------------------------
2024-05-15 15:15 - INFO - Epoch: 01 | Time: 4m 53s
2024-05-15 15:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7039
2024-05-15 15:15 - INFO - 	 Train Loss: 0.540
2024-05-15 15:15 - INFO - 	 Val. Loss: 0.518
2024-05-15 15:15 - INFO - 	 ROC-AUC: 0.704
2024-05-15 15:15 - INFO - 	 PR-AUC: 0.414
2024-05-15 15:15 - INFO - 	 Recall for 0.4 precision: 0.543
2024-05-15 15:15 - INFO - 	 Best Val. Loss: 0.518
2024-05-15 15:15 - INFO - 	 Best ROC-AUC: 0.704
2024-05-15 15:15 - INFO - 	 Best PR-AUC: 0.414
2024-05-15 15:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-05-15 15:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.394
2024-05-15 15:15 - INFO - 	 Best Recall for 0.4 precision: 0.543
2024-05-15 15:15 - INFO - ---------------------------------------------
2024-05-15 15:19 - INFO - ---------------------------------------------
2024-05-15 15:19 - INFO - Epoch: 02 | Time: 4m 29s
2024-05-15 15:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72162
2024-05-15 15:19 - INFO - 	 Train Loss: 0.499
2024-05-15 15:19 - INFO - 	 Val. Loss: 0.511
2024-05-15 15:19 - INFO - 	 ROC-AUC: 0.722
2024-05-15 15:19 - INFO - 	 PR-AUC: 0.428
2024-05-15 15:19 - INFO - 	 Recall for 0.4 precision: 0.628
2024-05-15 15:19 - INFO - 	 Best Val. Loss: 0.511
2024-05-15 15:19 - INFO - 	 Best ROC-AUC: 0.722
2024-05-15 15:19 - INFO - 	 Best PR-AUC: 0.428
2024-05-15 15:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-05-15 15:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.420
2024-05-15 15:19 - INFO - 	 Best Recall for 0.4 precision: 0.628
2024-05-15 15:19 - INFO - ---------------------------------------------
2024-05-15 15:24 - INFO - ---------------------------------------------
2024-05-15 15:24 - INFO - Epoch: 03 | Time: 4m 50s
2024-05-15 15:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72201
2024-05-15 15:24 - INFO - 	 Train Loss: 0.490
2024-05-15 15:24 - INFO - 	 Val. Loss: 0.503
2024-05-15 15:24 - INFO - 	 ROC-AUC: 0.722
2024-05-15 15:24 - INFO - 	 PR-AUC: 0.432
2024-05-15 15:24 - INFO - 	 Recall for 0.4 precision: 0.624
2024-05-15 15:24 - INFO - 	 Best Val. Loss: 0.503
2024-05-15 15:24 - INFO - 	 Best ROC-AUC: 0.722
2024-05-15 15:24 - INFO - 	 Best PR-AUC: 0.432
2024-05-15 15:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 15:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-05-15 15:24 - INFO - 	 Best Recall for 0.4 precision: 0.628
2024-05-15 15:24 - INFO - ---------------------------------------------
2024-05-15 15:29 - INFO - ---------------------------------------------
2024-05-15 15:29 - INFO - Epoch: 04 | Time: 4m 49s
2024-05-15 15:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72658
2024-05-15 15:29 - INFO - 	 Train Loss: 0.485
2024-05-15 15:29 - INFO - 	 Val. Loss: 0.501
2024-05-15 15:29 - INFO - 	 ROC-AUC: 0.727
2024-05-15 15:29 - INFO - 	 PR-AUC: 0.434
2024-05-15 15:29 - INFO - 	 Recall for 0.4 precision: 0.643
2024-05-15 15:29 - INFO - 	 Best Val. Loss: 0.501
2024-05-15 15:29 - INFO - 	 Best ROC-AUC: 0.727
2024-05-15 15:29 - INFO - 	 Best PR-AUC: 0.434
2024-05-15 15:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 15:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-15 15:29 - INFO - 	 Best Recall for 0.4 precision: 0.643
2024-05-15 15:29 - INFO - ---------------------------------------------
2024-05-15 15:33 - INFO - ---------------------------------------------
2024-05-15 15:33 - INFO - Epoch: 05 | Time: 4m 46s
2024-05-15 15:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73264
2024-05-15 15:33 - INFO - 	 Train Loss: 0.483
2024-05-15 15:33 - INFO - 	 Val. Loss: 0.494
2024-05-15 15:33 - INFO - 	 ROC-AUC: 0.733
2024-05-15 15:33 - INFO - 	 PR-AUC: 0.439
2024-05-15 15:33 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-15 15:33 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 15:33 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 15:33 - INFO - 	 Best PR-AUC: 0.439
2024-05-15 15:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 15:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-05-15 15:33 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 15:33 - INFO - ---------------------------------------------
2024-05-15 15:38 - INFO - ---------------------------------------------
2024-05-15 15:38 - INFO - Epoch: 06 | Time: 4m 18s
2024-05-15 15:38 - INFO - 	 Train Loss: 0.480
2024-05-15 15:38 - INFO - 	 Val. Loss: 0.499
2024-05-15 15:38 - INFO - 	 ROC-AUC: 0.729
2024-05-15 15:38 - INFO - 	 PR-AUC: 0.437
2024-05-15 15:38 - INFO - 	 Recall for 0.4 precision: 0.652
2024-05-15 15:38 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 15:38 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 15:38 - INFO - 	 Best PR-AUC: 0.439
2024-05-15 15:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 15:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-05-15 15:38 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 15:38 - INFO - ---------------------------------------------
2024-05-15 15:42 - INFO - ---------------------------------------------
2024-05-15 15:42 - INFO - Epoch: 07 | Time: 4m 10s
2024-05-15 15:42 - INFO - 	 Train Loss: 0.479
2024-05-15 15:42 - INFO - 	 Val. Loss: 0.502
2024-05-15 15:42 - INFO - 	 ROC-AUC: 0.732
2024-05-15 15:42 - INFO - 	 PR-AUC: 0.441
2024-05-15 15:42 - INFO - 	 Recall for 0.4 precision: 0.662
2024-05-15 15:42 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 15:42 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 15:42 - INFO - 	 Best PR-AUC: 0.441
2024-05-15 15:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 15:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 15:42 - INFO - 	 Best Recall for 0.4 precision: 0.662
2024-05-15 15:42 - INFO - ---------------------------------------------
2024-05-15 15:46 - INFO - ---------------------------------------------
2024-05-15 15:46 - INFO - Epoch: 08 | Time: 4m 8s
2024-05-15 15:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73317
2024-05-15 15:46 - INFO - 	 Train Loss: 0.478
2024-05-15 15:46 - INFO - 	 Val. Loss: 0.500
2024-05-15 15:46 - INFO - 	 ROC-AUC: 0.733
2024-05-15 15:46 - INFO - 	 PR-AUC: 0.438
2024-05-15 15:46 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-15 15:46 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 15:46 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 15:46 - INFO - 	 Best PR-AUC: 0.441
2024-05-15 15:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 15:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 15:46 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-15 15:46 - INFO - ---------------------------------------------
2024-05-15 15:51 - INFO - ---------------------------------------------
2024-05-15 15:51 - INFO - Epoch: 09 | Time: 4m 26s
2024-05-15 15:51 - INFO - 	 Train Loss: 0.476
2024-05-15 15:51 - INFO - 	 Val. Loss: 0.495
2024-05-15 15:51 - INFO - 	 ROC-AUC: 0.733
2024-05-15 15:51 - INFO - 	 PR-AUC: 0.439
2024-05-15 15:51 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-15 15:51 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 15:51 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 15:51 - INFO - 	 Best PR-AUC: 0.441
2024-05-15 15:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 15:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 15:51 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-15 15:51 - INFO - ---------------------------------------------
2024-05-15 15:55 - INFO - ---------------------------------------------
2024-05-15 15:55 - INFO - Epoch: 10 | Time: 4m 21s
2024-05-15 15:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73647
2024-05-15 15:55 - INFO - 	 Train Loss: 0.475
2024-05-15 15:55 - INFO - 	 Val. Loss: 0.498
2024-05-15 15:55 - INFO - 	 ROC-AUC: 0.736
2024-05-15 15:55 - INFO - 	 PR-AUC: 0.446
2024-05-15 15:55 - INFO - 	 Recall for 0.4 precision: 0.685
2024-05-15 15:55 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 15:55 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 15:55 - INFO - 	 Best PR-AUC: 0.446
2024-05-15 15:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 15:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-15 15:55 - INFO - 	 Best Recall for 0.4 precision: 0.685
2024-05-15 15:55 - INFO - ---------------------------------------------
2024-05-15 16:01 - INFO - Fit the preprocessing pipeline
2024-05-15 16:01 - INFO - Training using device: cuda
2024-05-15 16:01 - INFO - Creating generators
2024-05-15 16:01 - INFO - The model has 651,257 trainable parameters
2024-05-15 16:01 - INFO - * Model:
2024-05-15 16:01 - INFO - * -----------
2024-05-15 16:01 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 16:01 - INFO - * -----------
2024-05-15 16:01 - INFO - Evaluating model based on: rocauc
2024-05-15 16:01 - INFO - Training..

2024-05-15 16:06 - INFO - ---------------------------------------------
2024-05-15 16:06 - INFO - Epoch: 01 | Time: 4m 33s
2024-05-15 16:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7001
2024-05-15 16:06 - INFO - 	 Train Loss: 0.543
2024-05-15 16:06 - INFO - 	 Val. Loss: 0.511
2024-05-15 16:06 - INFO - 	 ROC-AUC: 0.700
2024-05-15 16:06 - INFO - 	 PR-AUC: 0.414
2024-05-15 16:06 - INFO - 	 Recall for 0.4 precision: 0.523
2024-05-15 16:06 - INFO - 	 Best Val. Loss: 0.511
2024-05-15 16:06 - INFO - 	 Best ROC-AUC: 0.700
2024-05-15 16:06 - INFO - 	 Best PR-AUC: 0.414
2024-05-15 16:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.672
2024-05-15 16:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.385
2024-05-15 16:06 - INFO - 	 Best Recall for 0.4 precision: 0.523
2024-05-15 16:06 - INFO - ---------------------------------------------
2024-05-15 16:11 - INFO - ---------------------------------------------
2024-05-15 16:11 - INFO - Epoch: 02 | Time: 4m 53s
2024-05-15 16:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72516
2024-05-15 16:11 - INFO - 	 Train Loss: 0.501
2024-05-15 16:11 - INFO - 	 Val. Loss: 0.496
2024-05-15 16:11 - INFO - 	 ROC-AUC: 0.725
2024-05-15 16:11 - INFO - 	 PR-AUC: 0.440
2024-05-15 16:11 - INFO - 	 Recall for 0.4 precision: 0.636
2024-05-15 16:11 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 16:11 - INFO - 	 Best ROC-AUC: 0.725
2024-05-15 16:11 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 16:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-15 16:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-15 16:11 - INFO - 	 Best Recall for 0.4 precision: 0.636
2024-05-15 16:11 - INFO - ---------------------------------------------
2024-05-15 16:15 - INFO - ---------------------------------------------
2024-05-15 16:15 - INFO - Epoch: 03 | Time: 4m 27s
2024-05-15 16:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72615
2024-05-15 16:15 - INFO - 	 Train Loss: 0.491
2024-05-15 16:15 - INFO - 	 Val. Loss: 0.499
2024-05-15 16:15 - INFO - 	 ROC-AUC: 0.726
2024-05-15 16:15 - INFO - 	 PR-AUC: 0.436
2024-05-15 16:15 - INFO - 	 Recall for 0.4 precision: 0.654
2024-05-15 16:15 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 16:15 - INFO - 	 Best ROC-AUC: 0.726
2024-05-15 16:15 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 16:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-15 16:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-15 16:15 - INFO - 	 Best Recall for 0.4 precision: 0.654
2024-05-15 16:15 - INFO - ---------------------------------------------
2024-05-15 16:20 - INFO - ---------------------------------------------
2024-05-15 16:20 - INFO - Epoch: 04 | Time: 4m 19s
2024-05-15 16:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7306
2024-05-15 16:20 - INFO - 	 Train Loss: 0.486
2024-05-15 16:20 - INFO - 	 Val. Loss: 0.497
2024-05-15 16:20 - INFO - 	 ROC-AUC: 0.731
2024-05-15 16:20 - INFO - 	 PR-AUC: 0.444
2024-05-15 16:20 - INFO - 	 Recall for 0.4 precision: 0.003
2024-05-15 16:20 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 16:20 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 16:20 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 16:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 16:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 16:20 - INFO - 	 Best Recall for 0.4 precision: 0.654
2024-05-15 16:20 - INFO - ---------------------------------------------
2024-05-15 16:24 - INFO - ---------------------------------------------
2024-05-15 16:24 - INFO - Epoch: 05 | Time: 4m 45s
2024-05-15 16:24 - INFO - 	 Train Loss: 0.482
2024-05-15 16:24 - INFO - 	 Val. Loss: 0.496
2024-05-15 16:24 - INFO - 	 ROC-AUC: 0.730
2024-05-15 16:24 - INFO - 	 PR-AUC: 0.442
2024-05-15 16:24 - INFO - 	 Recall for 0.4 precision: 0.663
2024-05-15 16:24 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 16:24 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 16:24 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 16:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 16:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 16:24 - INFO - 	 Best Recall for 0.4 precision: 0.663
2024-05-15 16:24 - INFO - ---------------------------------------------
2024-05-15 16:29 - INFO - ---------------------------------------------
2024-05-15 16:29 - INFO - Epoch: 06 | Time: 4m 15s
2024-05-15 16:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73259
2024-05-15 16:29 - INFO - 	 Train Loss: 0.481
2024-05-15 16:29 - INFO - 	 Val. Loss: 0.494
2024-05-15 16:29 - INFO - 	 ROC-AUC: 0.733
2024-05-15 16:29 - INFO - 	 PR-AUC: 0.445
2024-05-15 16:29 - INFO - 	 Recall for 0.4 precision: 0.000
2024-05-15 16:29 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 16:29 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 16:29 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 16:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 16:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 16:29 - INFO - 	 Best Recall for 0.4 precision: 0.663
2024-05-15 16:29 - INFO - ---------------------------------------------
2024-05-15 16:33 - INFO - ---------------------------------------------
2024-05-15 16:33 - INFO - Epoch: 07 | Time: 4m 7s
2024-05-15 16:33 - INFO - 	 Train Loss: 0.479
2024-05-15 16:33 - INFO - 	 Val. Loss: 0.497
2024-05-15 16:33 - INFO - 	 ROC-AUC: 0.730
2024-05-15 16:33 - INFO - 	 PR-AUC: 0.439
2024-05-15 16:33 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-15 16:33 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 16:33 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 16:33 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 16:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 16:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 16:33 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-15 16:33 - INFO - ---------------------------------------------
2024-05-15 16:37 - INFO - ---------------------------------------------
2024-05-15 16:37 - INFO - Epoch: 08 | Time: 4m 26s
2024-05-15 16:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73268
2024-05-15 16:37 - INFO - 	 Train Loss: 0.477
2024-05-15 16:37 - INFO - 	 Val. Loss: 0.493
2024-05-15 16:37 - INFO - 	 ROC-AUC: 0.733
2024-05-15 16:37 - INFO - 	 PR-AUC: 0.444
2024-05-15 16:37 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-15 16:37 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 16:37 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 16:37 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 16:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 16:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-05-15 16:37 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-15 16:37 - INFO - ---------------------------------------------
2024-05-15 16:42 - INFO - ---------------------------------------------
2024-05-15 16:42 - INFO - Epoch: 09 | Time: 4m 58s
2024-05-15 16:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73496
2024-05-15 16:42 - INFO - 	 Train Loss: 0.476
2024-05-15 16:42 - INFO - 	 Val. Loss: 0.494
2024-05-15 16:42 - INFO - 	 ROC-AUC: 0.735
2024-05-15 16:42 - INFO - 	 PR-AUC: 0.449
2024-05-15 16:42 - INFO - 	 Recall for 0.4 precision: 0.002
2024-05-15 16:42 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 16:42 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 16:42 - INFO - 	 Best PR-AUC: 0.449
2024-05-15 16:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 16:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-05-15 16:42 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-15 16:42 - INFO - ---------------------------------------------
2024-05-15 16:46 - INFO - ---------------------------------------------
2024-05-15 16:46 - INFO - Epoch: 10 | Time: 4m 20s
2024-05-15 16:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73774
2024-05-15 16:46 - INFO - 	 Train Loss: 0.475
2024-05-15 16:46 - INFO - 	 Val. Loss: 0.493
2024-05-15 16:46 - INFO - 	 ROC-AUC: 0.738
2024-05-15 16:46 - INFO - 	 PR-AUC: 0.450
2024-05-15 16:46 - INFO - 	 Recall for 0.4 precision: 0.687
2024-05-15 16:46 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 16:46 - INFO - 	 Best ROC-AUC: 0.738
2024-05-15 16:46 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-05-15 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.448
2024-05-15 16:46 - INFO - 	 Best Recall for 0.4 precision: 0.687
2024-05-15 16:46 - INFO - ---------------------------------------------
2024-05-15 16:53 - INFO - Fit the preprocessing pipeline
2024-05-15 16:53 - INFO - Training using device: cuda
2024-05-15 16:53 - INFO - Creating generators
2024-05-15 16:53 - INFO - The model has 651,257 trainable parameters
2024-05-15 16:53 - INFO - * Model:
2024-05-15 16:53 - INFO - * -----------
2024-05-15 16:53 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 16:53 - INFO - * -----------
2024-05-15 16:53 - INFO - Evaluating model based on: rocauc
2024-05-15 16:53 - INFO - Training..

2024-05-15 16:57 - INFO - ---------------------------------------------
2024-05-15 16:57 - INFO - Epoch: 01 | Time: 4m 34s
2024-05-15 16:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71012
2024-05-15 16:57 - INFO - 	 Train Loss: 0.543
2024-05-15 16:57 - INFO - 	 Val. Loss: 0.520
2024-05-15 16:57 - INFO - 	 ROC-AUC: 0.710
2024-05-15 16:57 - INFO - 	 PR-AUC: 0.426
2024-05-15 16:57 - INFO - 	 Recall for 0.4 precision: 0.588
2024-05-15 16:57 - INFO - 	 Best Val. Loss: 0.520
2024-05-15 16:57 - INFO - 	 Best ROC-AUC: 0.710
2024-05-15 16:57 - INFO - 	 Best PR-AUC: 0.426
2024-05-15 16:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.689
2024-05-15 16:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.403
2024-05-15 16:57 - INFO - 	 Best Recall for 0.4 precision: 0.588
2024-05-15 16:57 - INFO - ---------------------------------------------
2024-05-15 17:02 - INFO - ---------------------------------------------
2024-05-15 17:02 - INFO - Epoch: 02 | Time: 4m 33s
2024-05-15 17:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72192
2024-05-15 17:02 - INFO - 	 Train Loss: 0.501
2024-05-15 17:02 - INFO - 	 Val. Loss: 0.501
2024-05-15 17:02 - INFO - 	 ROC-AUC: 0.722
2024-05-15 17:02 - INFO - 	 PR-AUC: 0.431
2024-05-15 17:02 - INFO - 	 Recall for 0.4 precision: 0.628
2024-05-15 17:02 - INFO - 	 Best Val. Loss: 0.501
2024-05-15 17:02 - INFO - 	 Best ROC-AUC: 0.722
2024-05-15 17:02 - INFO - 	 Best PR-AUC: 0.431
2024-05-15 17:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.697
2024-05-15 17:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.411
2024-05-15 17:02 - INFO - 	 Best Recall for 0.4 precision: 0.628
2024-05-15 17:02 - INFO - ---------------------------------------------
2024-05-15 17:06 - INFO - ---------------------------------------------
2024-05-15 17:06 - INFO - Epoch: 03 | Time: 4m 28s
2024-05-15 17:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7292
2024-05-15 17:06 - INFO - 	 Train Loss: 0.491
2024-05-15 17:06 - INFO - 	 Val. Loss: 0.495
2024-05-15 17:06 - INFO - 	 ROC-AUC: 0.729
2024-05-15 17:06 - INFO - 	 PR-AUC: 0.438
2024-05-15 17:06 - INFO - 	 Recall for 0.4 precision: 0.647
2024-05-15 17:06 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 17:06 - INFO - 	 Best ROC-AUC: 0.729
2024-05-15 17:06 - INFO - 	 Best PR-AUC: 0.438
2024-05-15 17:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-05-15 17:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-05-15 17:06 - INFO - 	 Best Recall for 0.4 precision: 0.647
2024-05-15 17:06 - INFO - ---------------------------------------------
2024-05-15 17:11 - INFO - ---------------------------------------------
2024-05-15 17:11 - INFO - Epoch: 04 | Time: 4m 22s
2024-05-15 17:11 - INFO - 	 Train Loss: 0.486
2024-05-15 17:11 - INFO - 	 Val. Loss: 0.497
2024-05-15 17:11 - INFO - 	 ROC-AUC: 0.727
2024-05-15 17:11 - INFO - 	 PR-AUC: 0.436
2024-05-15 17:11 - INFO - 	 Recall for 0.4 precision: 0.654
2024-05-15 17:11 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 17:11 - INFO - 	 Best ROC-AUC: 0.729
2024-05-15 17:11 - INFO - 	 Best PR-AUC: 0.438
2024-05-15 17:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-05-15 17:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-05-15 17:11 - INFO - 	 Best Recall for 0.4 precision: 0.654
2024-05-15 17:11 - INFO - ---------------------------------------------
2024-05-15 17:15 - INFO - ---------------------------------------------
2024-05-15 17:15 - INFO - Epoch: 05 | Time: 4m 16s
2024-05-15 17:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73069
2024-05-15 17:15 - INFO - 	 Train Loss: 0.483
2024-05-15 17:15 - INFO - 	 Val. Loss: 0.494
2024-05-15 17:15 - INFO - 	 ROC-AUC: 0.731
2024-05-15 17:15 - INFO - 	 PR-AUC: 0.438
2024-05-15 17:15 - INFO - 	 Recall for 0.4 precision: 0.662
2024-05-15 17:15 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 17:15 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 17:15 - INFO - 	 Best PR-AUC: 0.438
2024-05-15 17:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 17:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-05-15 17:15 - INFO - 	 Best Recall for 0.4 precision: 0.662
2024-05-15 17:15 - INFO - ---------------------------------------------
2024-05-15 17:19 - INFO - ---------------------------------------------
2024-05-15 17:19 - INFO - Epoch: 06 | Time: 4m 16s
2024-05-15 17:19 - INFO - 	 Train Loss: 0.480
2024-05-15 17:19 - INFO - 	 Val. Loss: 0.504
2024-05-15 17:19 - INFO - 	 ROC-AUC: 0.728
2024-05-15 17:19 - INFO - 	 PR-AUC: 0.436
2024-05-15 17:19 - INFO - 	 Recall for 0.4 precision: 0.658
2024-05-15 17:19 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 17:19 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 17:19 - INFO - 	 Best PR-AUC: 0.438
2024-05-15 17:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 17:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-05-15 17:19 - INFO - 	 Best Recall for 0.4 precision: 0.662
2024-05-15 17:19 - INFO - ---------------------------------------------
2024-05-15 17:23 - INFO - ---------------------------------------------
2024-05-15 17:23 - INFO - Epoch: 07 | Time: 4m 6s
2024-05-15 17:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73571
2024-05-15 17:23 - INFO - 	 Train Loss: 0.478
2024-05-15 17:23 - INFO - 	 Val. Loss: 0.494
2024-05-15 17:23 - INFO - 	 ROC-AUC: 0.736
2024-05-15 17:23 - INFO - 	 PR-AUC: 0.450
2024-05-15 17:23 - INFO - 	 Recall for 0.4 precision: 0.682
2024-05-15 17:23 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 17:23 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 17:23 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 17:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 17:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-15 17:23 - INFO - 	 Best Recall for 0.4 precision: 0.682
2024-05-15 17:23 - INFO - ---------------------------------------------
2024-05-15 17:28 - INFO - ---------------------------------------------
2024-05-15 17:28 - INFO - Epoch: 08 | Time: 4m 20s
2024-05-15 17:28 - INFO - 	 Train Loss: 0.477
2024-05-15 17:28 - INFO - 	 Val. Loss: 0.498
2024-05-15 17:28 - INFO - 	 ROC-AUC: 0.731
2024-05-15 17:28 - INFO - 	 PR-AUC: 0.440
2024-05-15 17:28 - INFO - 	 Recall for 0.4 precision: 0.662
2024-05-15 17:28 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 17:28 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 17:28 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 17:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 17:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-15 17:28 - INFO - 	 Best Recall for 0.4 precision: 0.682
2024-05-15 17:28 - INFO - ---------------------------------------------
2024-05-15 17:32 - INFO - ---------------------------------------------
2024-05-15 17:32 - INFO - Epoch: 09 | Time: 4m 20s
2024-05-15 17:32 - INFO - 	 Train Loss: 0.475
2024-05-15 17:32 - INFO - 	 Val. Loss: 0.496
2024-05-15 17:32 - INFO - 	 ROC-AUC: 0.731
2024-05-15 17:32 - INFO - 	 PR-AUC: 0.440
2024-05-15 17:32 - INFO - 	 Recall for 0.4 precision: 0.664
2024-05-15 17:32 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 17:32 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 17:32 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 17:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 17:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-15 17:32 - INFO - 	 Best Recall for 0.4 precision: 0.682
2024-05-15 17:32 - INFO - ---------------------------------------------
2024-05-15 17:37 - INFO - ---------------------------------------------
2024-05-15 17:37 - INFO - Epoch: 10 | Time: 4m 22s
2024-05-15 17:37 - INFO - 	 Train Loss: 0.474
2024-05-15 17:37 - INFO - 	 Val. Loss: 0.496
2024-05-15 17:37 - INFO - 	 ROC-AUC: 0.731
2024-05-15 17:37 - INFO - 	 PR-AUC: 0.436
2024-05-15 17:37 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-15 17:37 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 17:37 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 17:37 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-05-15 17:37 - INFO - 	 Best Recall for 0.4 precision: 0.682
2024-05-15 17:37 - INFO - ---------------------------------------------
2024-05-15 17:43 - INFO - Fit the preprocessing pipeline
2024-05-15 17:43 - INFO - Training using device: cuda
2024-05-15 17:43 - INFO - Creating generators
2024-05-15 17:43 - INFO - The model has 651,257 trainable parameters
2024-05-15 17:43 - INFO - * Model:
2024-05-15 17:43 - INFO - * -----------
2024-05-15 17:43 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 17:43 - INFO - * -----------
2024-05-15 17:43 - INFO - Evaluating model based on: rocauc
2024-05-15 17:43 - INFO - Training..

2024-05-15 17:47 - INFO - ---------------------------------------------
2024-05-15 17:47 - INFO - Epoch: 01 | Time: 4m 20s
2024-05-15 17:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70502
2024-05-15 17:47 - INFO - 	 Train Loss: 0.541
2024-05-15 17:47 - INFO - 	 Val. Loss: 0.514
2024-05-15 17:47 - INFO - 	 ROC-AUC: 0.705
2024-05-15 17:47 - INFO - 	 PR-AUC: 0.422
2024-05-15 17:47 - INFO - 	 Recall for 0.4 precision: 0.536
2024-05-15 17:47 - INFO - 	 Best Val. Loss: 0.514
2024-05-15 17:47 - INFO - 	 Best ROC-AUC: 0.705
2024-05-15 17:47 - INFO - 	 Best PR-AUC: 0.422
2024-05-15 17:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-05-15 17:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.396
2024-05-15 17:47 - INFO - 	 Best Recall for 0.4 precision: 0.536
2024-05-15 17:47 - INFO - ---------------------------------------------
2024-05-15 17:52 - INFO - ---------------------------------------------
2024-05-15 17:52 - INFO - Epoch: 02 | Time: 4m 29s
2024-05-15 17:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7286
2024-05-15 17:52 - INFO - 	 Train Loss: 0.500
2024-05-15 17:52 - INFO - 	 Val. Loss: 0.499
2024-05-15 17:52 - INFO - 	 ROC-AUC: 0.729
2024-05-15 17:52 - INFO - 	 PR-AUC: 0.440
2024-05-15 17:52 - INFO - 	 Recall for 0.4 precision: 0.653
2024-05-15 17:52 - INFO - 	 Best Val. Loss: 0.499
2024-05-15 17:52 - INFO - 	 Best ROC-AUC: 0.729
2024-05-15 17:52 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 17:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-05-15 17:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-05-15 17:52 - INFO - 	 Best Recall for 0.4 precision: 0.653
2024-05-15 17:52 - INFO - ---------------------------------------------
2024-05-15 17:56 - INFO - ---------------------------------------------
2024-05-15 17:56 - INFO - Epoch: 03 | Time: 4m 45s
2024-05-15 17:56 - INFO - 	 Train Loss: 0.489
2024-05-15 17:56 - INFO - 	 Val. Loss: 0.496
2024-05-15 17:56 - INFO - 	 ROC-AUC: 0.728
2024-05-15 17:56 - INFO - 	 PR-AUC: 0.440
2024-05-15 17:56 - INFO - 	 Recall for 0.4 precision: 0.653
2024-05-15 17:56 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 17:56 - INFO - 	 Best ROC-AUC: 0.729
2024-05-15 17:56 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 17:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-05-15 17:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-05-15 17:56 - INFO - 	 Best Recall for 0.4 precision: 0.653
2024-05-15 17:56 - INFO - ---------------------------------------------
2024-05-15 18:01 - INFO - ---------------------------------------------
2024-05-15 18:01 - INFO - Epoch: 04 | Time: 4m 12s
2024-05-15 18:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7332
2024-05-15 18:01 - INFO - 	 Train Loss: 0.485
2024-05-15 18:01 - INFO - 	 Val. Loss: 0.498
2024-05-15 18:01 - INFO - 	 ROC-AUC: 0.733
2024-05-15 18:01 - INFO - 	 PR-AUC: 0.445
2024-05-15 18:01 - INFO - 	 Recall for 0.4 precision: 0.667
2024-05-15 18:01 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 18:01 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 18:01 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 18:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 18:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 18:01 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-15 18:01 - INFO - ---------------------------------------------
2024-05-15 18:05 - INFO - ---------------------------------------------
2024-05-15 18:05 - INFO - Epoch: 05 | Time: 4m 11s
2024-05-15 18:05 - INFO - 	 Train Loss: 0.482
2024-05-15 18:05 - INFO - 	 Val. Loss: 0.504
2024-05-15 18:05 - INFO - 	 ROC-AUC: 0.732
2024-05-15 18:05 - INFO - 	 PR-AUC: 0.443
2024-05-15 18:05 - INFO - 	 Recall for 0.4 precision: 0.662
2024-05-15 18:05 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 18:05 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 18:05 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 18:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 18:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 18:05 - INFO - 	 Best Recall for 0.4 precision: 0.667
2024-05-15 18:05 - INFO - ---------------------------------------------
2024-05-15 18:10 - INFO - ---------------------------------------------
2024-05-15 18:10 - INFO - Epoch: 06 | Time: 4m 38s
2024-05-15 18:10 - INFO - 	 Train Loss: 0.480
2024-05-15 18:10 - INFO - 	 Val. Loss: 0.494
2024-05-15 18:10 - INFO - 	 ROC-AUC: 0.733
2024-05-15 18:10 - INFO - 	 PR-AUC: 0.442
2024-05-15 18:10 - INFO - 	 Recall for 0.4 precision: 0.678
2024-05-15 18:10 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 18:10 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 18:10 - INFO - 	 Best PR-AUC: 0.445
2024-05-15 18:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-05-15 18:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 18:10 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-15 18:10 - INFO - ---------------------------------------------
2024-05-15 18:14 - INFO - ---------------------------------------------
2024-05-15 18:14 - INFO - Epoch: 07 | Time: 4m 27s
2024-05-15 18:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73813
2024-05-15 18:14 - INFO - 	 Train Loss: 0.478
2024-05-15 18:14 - INFO - 	 Val. Loss: 0.494
2024-05-15 18:14 - INFO - 	 ROC-AUC: 0.738
2024-05-15 18:14 - INFO - 	 PR-AUC: 0.452
2024-05-15 18:14 - INFO - 	 Recall for 0.4 precision: 0.696
2024-05-15 18:14 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 18:14 - INFO - 	 Best ROC-AUC: 0.738
2024-05-15 18:14 - INFO - 	 Best PR-AUC: 0.452
2024-05-15 18:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 18:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 18:14 - INFO - 	 Best Recall for 0.4 precision: 0.696
2024-05-15 18:14 - INFO - ---------------------------------------------
2024-05-15 18:18 - INFO - ---------------------------------------------
2024-05-15 18:18 - INFO - Epoch: 08 | Time: 4m 15s
2024-05-15 18:18 - INFO - 	 Train Loss: 0.476
2024-05-15 18:18 - INFO - 	 Val. Loss: 0.499
2024-05-15 18:18 - INFO - 	 ROC-AUC: 0.736
2024-05-15 18:18 - INFO - 	 PR-AUC: 0.445
2024-05-15 18:18 - INFO - 	 Recall for 0.4 precision: 0.000
2024-05-15 18:18 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 18:18 - INFO - 	 Best ROC-AUC: 0.738
2024-05-15 18:18 - INFO - 	 Best PR-AUC: 0.452
2024-05-15 18:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 18:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 18:18 - INFO - 	 Best Recall for 0.4 precision: 0.696
2024-05-15 18:18 - INFO - ---------------------------------------------
2024-05-15 18:24 - INFO - ---------------------------------------------
2024-05-15 18:24 - INFO - Epoch: 09 | Time: 6m 2s
2024-05-15 18:24 - INFO - 	 Train Loss: 0.475
2024-05-15 18:24 - INFO - 	 Val. Loss: 0.492
2024-05-15 18:24 - INFO - 	 ROC-AUC: 0.737
2024-05-15 18:24 - INFO - 	 PR-AUC: 0.446
2024-05-15 18:24 - INFO - 	 Recall for 0.4 precision: 0.696
2024-05-15 18:24 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 18:24 - INFO - 	 Best ROC-AUC: 0.738
2024-05-15 18:24 - INFO - 	 Best PR-AUC: 0.452
2024-05-15 18:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 18:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 18:24 - INFO - 	 Best Recall for 0.4 precision: 0.696
2024-05-15 18:24 - INFO - ---------------------------------------------
2024-05-15 18:29 - INFO - ---------------------------------------------
2024-05-15 18:29 - INFO - Epoch: 10 | Time: 4m 20s
2024-05-15 18:29 - INFO - 	 Train Loss: 0.475
2024-05-15 18:29 - INFO - 	 Val. Loss: 0.493
2024-05-15 18:29 - INFO - 	 ROC-AUC: 0.736
2024-05-15 18:29 - INFO - 	 PR-AUC: 0.450
2024-05-15 18:29 - INFO - 	 Recall for 0.4 precision: 0.683
2024-05-15 18:29 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 18:29 - INFO - 	 Best ROC-AUC: 0.738
2024-05-15 18:29 - INFO - 	 Best PR-AUC: 0.452
2024-05-15 18:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 18:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 18:29 - INFO - 	 Best Recall for 0.4 precision: 0.696
2024-05-15 18:29 - INFO - ---------------------------------------------
2024-05-15 18:35 - INFO - Fit the preprocessing pipeline
2024-05-15 18:35 - INFO - Training using device: cuda
2024-05-15 18:35 - INFO - Creating generators
2024-05-15 18:35 - INFO - The model has 651,257 trainable parameters
2024-05-15 18:35 - INFO - * Model:
2024-05-15 18:35 - INFO - * -----------
2024-05-15 18:35 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 18:35 - INFO - * -----------
2024-05-15 18:35 - INFO - Evaluating model based on: rocauc
2024-05-15 18:35 - INFO - Training..

2024-05-15 18:39 - INFO - ---------------------------------------------
2024-05-15 18:39 - INFO - Epoch: 01 | Time: 4m 22s
2024-05-15 18:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70167
2024-05-15 18:39 - INFO - 	 Train Loss: 0.543
2024-05-15 18:39 - INFO - 	 Val. Loss: 0.518
2024-05-15 18:39 - INFO - 	 ROC-AUC: 0.702
2024-05-15 18:39 - INFO - 	 PR-AUC: 0.413
2024-05-15 18:39 - INFO - 	 Recall for 0.4 precision: 0.537
2024-05-15 18:39 - INFO - 	 Best Val. Loss: 0.518
2024-05-15 18:39 - INFO - 	 Best ROC-AUC: 0.702
2024-05-15 18:39 - INFO - 	 Best PR-AUC: 0.413
2024-05-15 18:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.675
2024-05-15 18:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.386
2024-05-15 18:39 - INFO - 	 Best Recall for 0.4 precision: 0.537
2024-05-15 18:39 - INFO - ---------------------------------------------
2024-05-15 18:44 - INFO - ---------------------------------------------
2024-05-15 18:44 - INFO - Epoch: 02 | Time: 4m 54s
2024-05-15 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72767
2024-05-15 18:44 - INFO - 	 Train Loss: 0.500
2024-05-15 18:44 - INFO - 	 Val. Loss: 0.496
2024-05-15 18:44 - INFO - 	 ROC-AUC: 0.728
2024-05-15 18:44 - INFO - 	 PR-AUC: 0.442
2024-05-15 18:44 - INFO - 	 Recall for 0.4 precision: 0.650
2024-05-15 18:44 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 18:44 - INFO - 	 Best ROC-AUC: 0.728
2024-05-15 18:44 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-15 18:44 - INFO - 	 Best Recall for 0.4 precision: 0.650
2024-05-15 18:44 - INFO - ---------------------------------------------
2024-05-15 18:49 - INFO - ---------------------------------------------
2024-05-15 18:49 - INFO - Epoch: 03 | Time: 4m 26s
2024-05-15 18:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73129
2024-05-15 18:49 - INFO - 	 Train Loss: 0.489
2024-05-15 18:49 - INFO - 	 Val. Loss: 0.494
2024-05-15 18:49 - INFO - 	 ROC-AUC: 0.731
2024-05-15 18:49 - INFO - 	 PR-AUC: 0.444
2024-05-15 18:49 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-15 18:49 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 18:49 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 18:49 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 18:49 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-15 18:49 - INFO - ---------------------------------------------
2024-05-15 18:53 - INFO - ---------------------------------------------
2024-05-15 18:53 - INFO - Epoch: 04 | Time: 4m 22s
2024-05-15 18:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73198
2024-05-15 18:53 - INFO - 	 Train Loss: 0.485
2024-05-15 18:53 - INFO - 	 Val. Loss: 0.494
2024-05-15 18:53 - INFO - 	 ROC-AUC: 0.732
2024-05-15 18:53 - INFO - 	 PR-AUC: 0.442
2024-05-15 18:53 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-15 18:53 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 18:53 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 18:53 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 18:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 18:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 18:53 - INFO - 	 Best Recall for 0.4 precision: 0.671
2024-05-15 18:53 - INFO - ---------------------------------------------
2024-05-15 18:58 - INFO - ---------------------------------------------
2024-05-15 18:58 - INFO - Epoch: 05 | Time: 4m 34s
2024-05-15 18:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73746
2024-05-15 18:58 - INFO - 	 Train Loss: 0.482
2024-05-15 18:58 - INFO - 	 Val. Loss: 0.493
2024-05-15 18:58 - INFO - 	 ROC-AUC: 0.737
2024-05-15 18:58 - INFO - 	 PR-AUC: 0.448
2024-05-15 18:58 - INFO - 	 Recall for 0.4 precision: 0.681
2024-05-15 18:58 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 18:58 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 18:58 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 18:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 18:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 18:58 - INFO - 	 Best Recall for 0.4 precision: 0.681
2024-05-15 18:58 - INFO - ---------------------------------------------
2024-05-15 19:02 - INFO - ---------------------------------------------
2024-05-15 19:02 - INFO - Epoch: 06 | Time: 4m 39s
2024-05-15 19:02 - INFO - 	 Train Loss: 0.479
2024-05-15 19:02 - INFO - 	 Val. Loss: 0.494
2024-05-15 19:02 - INFO - 	 ROC-AUC: 0.733
2024-05-15 19:02 - INFO - 	 PR-AUC: 0.444
2024-05-15 19:02 - INFO - 	 Recall for 0.4 precision: 0.676
2024-05-15 19:02 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 19:02 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 19:02 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 19:02 - INFO - 	 Best Recall for 0.4 precision: 0.681
2024-05-15 19:02 - INFO - ---------------------------------------------
2024-05-15 19:07 - INFO - ---------------------------------------------
2024-05-15 19:07 - INFO - Epoch: 07 | Time: 4m 19s
2024-05-15 19:07 - INFO - 	 Train Loss: 0.477
2024-05-15 19:07 - INFO - 	 Val. Loss: 0.493
2024-05-15 19:07 - INFO - 	 ROC-AUC: 0.736
2024-05-15 19:07 - INFO - 	 PR-AUC: 0.447
2024-05-15 19:07 - INFO - 	 Recall for 0.4 precision: 0.683
2024-05-15 19:07 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 19:07 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 19:07 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 19:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 19:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 19:07 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-15 19:07 - INFO - ---------------------------------------------
2024-05-15 19:11 - INFO - ---------------------------------------------
2024-05-15 19:11 - INFO - Epoch: 08 | Time: 4m 21s
2024-05-15 19:11 - INFO - 	 Train Loss: 0.476
2024-05-15 19:11 - INFO - 	 Val. Loss: 0.493
2024-05-15 19:11 - INFO - 	 ROC-AUC: 0.736
2024-05-15 19:11 - INFO - 	 PR-AUC: 0.448
2024-05-15 19:11 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 19:11 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 19:11 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 19:11 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.439
2024-05-15 19:11 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-15 19:11 - INFO - ---------------------------------------------
2024-05-15 19:22 - INFO - Fit the preprocessing pipeline
2024-05-15 19:22 - INFO - Training using device: cuda
2024-05-15 19:22 - INFO - Creating generators
2024-05-15 19:22 - INFO - The model has 651,257 trainable parameters
2024-05-15 19:22 - INFO - * Model:
2024-05-15 19:22 - INFO - * -----------
2024-05-15 19:22 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 19:22 - INFO - * -----------
2024-05-15 19:22 - INFO - Evaluating model based on: rocauc
2024-05-15 19:22 - INFO - Training..

2024-05-15 19:26 - INFO - ---------------------------------------------
2024-05-15 19:26 - INFO - Epoch: 01 | Time: 4m 23s
2024-05-15 19:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70424
2024-05-15 19:26 - INFO - 	 Train Loss: 0.542
2024-05-15 19:26 - INFO - 	 Val. Loss: 0.514
2024-05-15 19:26 - INFO - 	 ROC-AUC: 0.704
2024-05-15 19:26 - INFO - 	 PR-AUC: 0.421
2024-05-15 19:26 - INFO - 	 Recall for 0.4 precision: 0.548
2024-05-15 19:26 - INFO - 	 Best Val. Loss: 0.514
2024-05-15 19:26 - INFO - 	 Best ROC-AUC: 0.704
2024-05-15 19:26 - INFO - 	 Best PR-AUC: 0.421
2024-05-15 19:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.679
2024-05-15 19:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.393
2024-05-15 19:26 - INFO - 	 Best Recall for 0.4 precision: 0.548
2024-05-15 19:26 - INFO - ---------------------------------------------
2024-05-15 19:30 - INFO - ---------------------------------------------
2024-05-15 19:30 - INFO - Epoch: 02 | Time: 4m 19s
2024-05-15 19:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72513
2024-05-15 19:30 - INFO - 	 Train Loss: 0.500
2024-05-15 19:30 - INFO - 	 Val. Loss: 0.496
2024-05-15 19:30 - INFO - 	 ROC-AUC: 0.725
2024-05-15 19:30 - INFO - 	 PR-AUC: 0.442
2024-05-15 19:30 - INFO - 	 Recall for 0.4 precision: 0.640
2024-05-15 19:30 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 19:30 - INFO - 	 Best ROC-AUC: 0.725
2024-05-15 19:30 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 19:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.706
2024-05-15 19:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-05-15 19:30 - INFO - 	 Best Recall for 0.4 precision: 0.640
2024-05-15 19:30 - INFO - ---------------------------------------------
2024-05-15 19:35 - INFO - ---------------------------------------------
2024-05-15 19:35 - INFO - Epoch: 03 | Time: 4m 17s
2024-05-15 19:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72664
2024-05-15 19:35 - INFO - 	 Train Loss: 0.490
2024-05-15 19:35 - INFO - 	 Val. Loss: 0.499
2024-05-15 19:35 - INFO - 	 ROC-AUC: 0.727
2024-05-15 19:35 - INFO - 	 PR-AUC: 0.437
2024-05-15 19:35 - INFO - 	 Recall for 0.4 precision: 0.645
2024-05-15 19:35 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 19:35 - INFO - 	 Best ROC-AUC: 0.727
2024-05-15 19:35 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 19:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-05-15 19:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-05-15 19:35 - INFO - 	 Best Recall for 0.4 precision: 0.645
2024-05-15 19:35 - INFO - ---------------------------------------------
2024-05-15 19:40 - INFO - ---------------------------------------------
2024-05-15 19:40 - INFO - Epoch: 04 | Time: 4m 44s
2024-05-15 19:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72959
2024-05-15 19:40 - INFO - 	 Train Loss: 0.485
2024-05-15 19:40 - INFO - 	 Val. Loss: 0.496
2024-05-15 19:40 - INFO - 	 ROC-AUC: 0.730
2024-05-15 19:40 - INFO - 	 PR-AUC: 0.442
2024-05-15 19:40 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 19:40 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 19:40 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 19:40 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 19:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-15 19:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-05-15 19:40 - INFO - 	 Best Recall for 0.4 precision: 0.645
2024-05-15 19:40 - INFO - ---------------------------------------------
2024-05-15 19:44 - INFO - ---------------------------------------------
2024-05-15 19:44 - INFO - Epoch: 05 | Time: 4m 15s
2024-05-15 19:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73158
2024-05-15 19:44 - INFO - 	 Train Loss: 0.482
2024-05-15 19:44 - INFO - 	 Val. Loss: 0.495
2024-05-15 19:44 - INFO - 	 ROC-AUC: 0.732
2024-05-15 19:44 - INFO - 	 PR-AUC: 0.444
2024-05-15 19:44 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-15 19:44 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 19:44 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 19:44 - INFO - 	 Best PR-AUC: 0.444
2024-05-15 19:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 19:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 19:44 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-15 19:44 - INFO - ---------------------------------------------
2024-05-15 19:49 - INFO - ---------------------------------------------
2024-05-15 19:49 - INFO - Epoch: 06 | Time: 4m 42s
2024-05-15 19:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73512
2024-05-15 19:49 - INFO - 	 Train Loss: 0.479
2024-05-15 19:49 - INFO - 	 Val. Loss: 0.493
2024-05-15 19:49 - INFO - 	 ROC-AUC: 0.735
2024-05-15 19:49 - INFO - 	 PR-AUC: 0.448
2024-05-15 19:49 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-15 19:49 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 19:49 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 19:49 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 19:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-05-15 19:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-05-15 19:49 - INFO - 	 Best Recall for 0.4 precision: 0.670
2024-05-15 19:49 - INFO - ---------------------------------------------
2024-05-15 19:53 - INFO - ---------------------------------------------
2024-05-15 19:53 - INFO - Epoch: 07 | Time: 4m 6s
2024-05-15 19:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73618
2024-05-15 19:53 - INFO - 	 Train Loss: 0.477
2024-05-15 19:53 - INFO - 	 Val. Loss: 0.493
2024-05-15 19:53 - INFO - 	 ROC-AUC: 0.736
2024-05-15 19:53 - INFO - 	 PR-AUC: 0.451
2024-05-15 19:53 - INFO - 	 Recall for 0.4 precision: 0.683
2024-05-15 19:53 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 19:53 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 19:53 - INFO - 	 Best PR-AUC: 0.451
2024-05-15 19:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 19:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 19:53 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-15 19:53 - INFO - ---------------------------------------------
2024-05-15 19:58 - INFO - ---------------------------------------------
2024-05-15 19:58 - INFO - Epoch: 08 | Time: 5m 10s
2024-05-15 19:58 - INFO - 	 Train Loss: 0.476
2024-05-15 19:58 - INFO - 	 Val. Loss: 0.499
2024-05-15 19:58 - INFO - 	 ROC-AUC: 0.732
2024-05-15 19:58 - INFO - 	 PR-AUC: 0.440
2024-05-15 19:58 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-15 19:58 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 19:58 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 19:58 - INFO - 	 Best PR-AUC: 0.451
2024-05-15 19:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 19:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 19:58 - INFO - 	 Best Recall for 0.4 precision: 0.683
2024-05-15 19:58 - INFO - ---------------------------------------------
2024-05-15 20:04 - INFO - ---------------------------------------------
2024-05-15 20:04 - INFO - Epoch: 09 | Time: 5m 44s
2024-05-15 20:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73966
2024-05-15 20:04 - INFO - 	 Train Loss: 0.475
2024-05-15 20:04 - INFO - 	 Val. Loss: 0.489
2024-05-15 20:04 - INFO - 	 ROC-AUC: 0.740
2024-05-15 20:04 - INFO - 	 PR-AUC: 0.453
2024-05-15 20:04 - INFO - 	 Recall for 0.4 precision: 0.693
2024-05-15 20:04 - INFO - 	 Best Val. Loss: 0.489
2024-05-15 20:04 - INFO - 	 Best ROC-AUC: 0.740
2024-05-15 20:04 - INFO - 	 Best PR-AUC: 0.453
2024-05-15 20:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 20:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-05-15 20:04 - INFO - 	 Best Recall for 0.4 precision: 0.693
2024-05-15 20:04 - INFO - ---------------------------------------------
2024-05-15 20:09 - INFO - ---------------------------------------------
2024-05-15 20:09 - INFO - Epoch: 10 | Time: 5m 9s
2024-05-15 20:09 - INFO - 	 Train Loss: 0.475
2024-05-15 20:09 - INFO - 	 Val. Loss: 0.491
2024-05-15 20:09 - INFO - 	 ROC-AUC: 0.738
2024-05-15 20:09 - INFO - 	 PR-AUC: 0.456
2024-05-15 20:09 - INFO - 	 Recall for 0.4 precision: 0.692
2024-05-15 20:09 - INFO - 	 Best Val. Loss: 0.489
2024-05-15 20:09 - INFO - 	 Best ROC-AUC: 0.740
2024-05-15 20:09 - INFO - 	 Best PR-AUC: 0.456
2024-05-15 20:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-05-15 20:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.450
2024-05-15 20:09 - INFO - 	 Best Recall for 0.4 precision: 0.693
2024-05-15 20:09 - INFO - ---------------------------------------------
2024-05-15 20:15 - INFO - Fit the preprocessing pipeline
2024-05-15 20:15 - INFO - Training using device: cuda
2024-05-15 20:15 - INFO - Creating generators
2024-05-15 20:15 - INFO - The model has 651,257 trainable parameters
2024-05-15 20:15 - INFO - * Model:
2024-05-15 20:15 - INFO - * -----------
2024-05-15 20:15 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 20:15 - INFO - * -----------
2024-05-15 20:15 - INFO - Evaluating model based on: rocauc
2024-05-15 20:15 - INFO - Training..

2024-05-15 20:21 - INFO - ---------------------------------------------
2024-05-15 20:21 - INFO - Epoch: 01 | Time: 5m 46s
2024-05-15 20:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71233
2024-05-15 20:21 - INFO - 	 Train Loss: 0.541
2024-05-15 20:21 - INFO - 	 Val. Loss: 0.517
2024-05-15 20:21 - INFO - 	 ROC-AUC: 0.712
2024-05-15 20:21 - INFO - 	 PR-AUC: 0.428
2024-05-15 20:21 - INFO - 	 Recall for 0.4 precision: 0.587
2024-05-15 20:21 - INFO - 	 Best Val. Loss: 0.517
2024-05-15 20:21 - INFO - 	 Best ROC-AUC: 0.712
2024-05-15 20:21 - INFO - 	 Best PR-AUC: 0.428
2024-05-15 20:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.690
2024-05-15 20:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.402
2024-05-15 20:21 - INFO - 	 Best Recall for 0.4 precision: 0.587
2024-05-15 20:21 - INFO - ---------------------------------------------
2024-05-15 20:26 - INFO - ---------------------------------------------
2024-05-15 20:26 - INFO - Epoch: 02 | Time: 5m 3s
2024-05-15 20:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72692
2024-05-15 20:26 - INFO - 	 Train Loss: 0.499
2024-05-15 20:26 - INFO - 	 Val. Loss: 0.497
2024-05-15 20:26 - INFO - 	 ROC-AUC: 0.727
2024-05-15 20:26 - INFO - 	 PR-AUC: 0.439
2024-05-15 20:26 - INFO - 	 Recall for 0.4 precision: 0.654
2024-05-15 20:26 - INFO - 	 Best Val. Loss: 0.497
2024-05-15 20:26 - INFO - 	 Best ROC-AUC: 0.727
2024-05-15 20:26 - INFO - 	 Best PR-AUC: 0.439
2024-05-15 20:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 20:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-05-15 20:26 - INFO - 	 Best Recall for 0.4 precision: 0.654
2024-05-15 20:26 - INFO - ---------------------------------------------
2024-05-15 20:31 - INFO - ---------------------------------------------
2024-05-15 20:31 - INFO - Epoch: 03 | Time: 5m 20s
2024-05-15 20:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72959
2024-05-15 20:31 - INFO - 	 Train Loss: 0.490
2024-05-15 20:31 - INFO - 	 Val. Loss: 0.494
2024-05-15 20:31 - INFO - 	 ROC-AUC: 0.730
2024-05-15 20:31 - INFO - 	 PR-AUC: 0.442
2024-05-15 20:31 - INFO - 	 Recall for 0.4 precision: 0.660
2024-05-15 20:31 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 20:31 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 20:31 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 20:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 20:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-15 20:31 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 20:31 - INFO - ---------------------------------------------
2024-05-15 20:36 - INFO - ---------------------------------------------
2024-05-15 20:36 - INFO - Epoch: 04 | Time: 4m 39s
2024-05-15 20:36 - INFO - 	 Train Loss: 0.485
2024-05-15 20:36 - INFO - 	 Val. Loss: 0.495
2024-05-15 20:36 - INFO - 	 ROC-AUC: 0.729
2024-05-15 20:36 - INFO - 	 PR-AUC: 0.439
2024-05-15 20:36 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 20:36 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 20:36 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 20:36 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 20:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 20:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-15 20:36 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 20:36 - INFO - ---------------------------------------------
2024-05-15 20:41 - INFO - ---------------------------------------------
2024-05-15 20:41 - INFO - Epoch: 05 | Time: 4m 55s
2024-05-15 20:41 - INFO - 	 Train Loss: 0.482
2024-05-15 20:41 - INFO - 	 Val. Loss: 0.496
2024-05-15 20:41 - INFO - 	 ROC-AUC: 0.729
2024-05-15 20:41 - INFO - 	 PR-AUC: 0.436
2024-05-15 20:41 - INFO - 	 Recall for 0.4 precision: 0.657
2024-05-15 20:41 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 20:41 - INFO - 	 Best ROC-AUC: 0.730
2024-05-15 20:41 - INFO - 	 Best PR-AUC: 0.442
2024-05-15 20:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 20:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-05-15 20:41 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 20:41 - INFO - ---------------------------------------------
2024-05-15 20:45 - INFO - ---------------------------------------------
2024-05-15 20:45 - INFO - Epoch: 06 | Time: 4m 10s
2024-05-15 20:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73458
2024-05-15 20:45 - INFO - 	 Train Loss: 0.480
2024-05-15 20:45 - INFO - 	 Val. Loss: 0.492
2024-05-15 20:45 - INFO - 	 ROC-AUC: 0.735
2024-05-15 20:45 - INFO - 	 PR-AUC: 0.450
2024-05-15 20:45 - INFO - 	 Recall for 0.4 precision: 0.004
2024-05-15 20:45 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 20:45 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 20:45 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 20:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 20:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 20:45 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-05-15 20:45 - INFO - ---------------------------------------------
2024-05-15 20:49 - INFO - ---------------------------------------------
2024-05-15 20:49 - INFO - Epoch: 07 | Time: 4m 29s
2024-05-15 20:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73495
2024-05-15 20:49 - INFO - 	 Train Loss: 0.478
2024-05-15 20:49 - INFO - 	 Val. Loss: 0.493
2024-05-15 20:49 - INFO - 	 ROC-AUC: 0.735
2024-05-15 20:49 - INFO - 	 PR-AUC: 0.447
2024-05-15 20:49 - INFO - 	 Recall for 0.4 precision: 0.674
2024-05-15 20:49 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 20:49 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 20:49 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 20:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-15 20:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 20:49 - INFO - 	 Best Recall for 0.4 precision: 0.674
2024-05-15 20:49 - INFO - ---------------------------------------------
2024-05-15 20:54 - INFO - ---------------------------------------------
2024-05-15 20:54 - INFO - Epoch: 08 | Time: 4m 59s
2024-05-15 20:54 - INFO - 	 Train Loss: 0.477
2024-05-15 20:54 - INFO - 	 Val. Loss: 0.496
2024-05-15 20:54 - INFO - 	 ROC-AUC: 0.732
2024-05-15 20:54 - INFO - 	 PR-AUC: 0.443
2024-05-15 20:54 - INFO - 	 Recall for 0.4 precision: 0.001
2024-05-15 20:54 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 20:54 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 20:54 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 20:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-15 20:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 20:54 - INFO - 	 Best Recall for 0.4 precision: 0.674
2024-05-15 20:54 - INFO - ---------------------------------------------
2024-05-15 20:59 - INFO - ---------------------------------------------
2024-05-15 20:59 - INFO - Epoch: 09 | Time: 4m 30s
2024-05-15 20:59 - INFO - 	 Train Loss: 0.476
2024-05-15 20:59 - INFO - 	 Val. Loss: 0.495
2024-05-15 20:59 - INFO - 	 ROC-AUC: 0.732
2024-05-15 20:59 - INFO - 	 PR-AUC: 0.444
2024-05-15 20:59 - INFO - 	 Recall for 0.4 precision: 0.670
2024-05-15 20:59 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 20:59 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 20:59 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 20:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-15 20:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 20:59 - INFO - 	 Best Recall for 0.4 precision: 0.674
2024-05-15 20:59 - INFO - ---------------------------------------------
2024-05-15 21:04 - INFO - ---------------------------------------------
2024-05-15 21:04 - INFO - Epoch: 10 | Time: 4m 56s
2024-05-15 21:04 - INFO - 	 Train Loss: 0.475
2024-05-15 21:04 - INFO - 	 Val. Loss: 0.495
2024-05-15 21:04 - INFO - 	 ROC-AUC: 0.731
2024-05-15 21:04 - INFO - 	 PR-AUC: 0.440
2024-05-15 21:04 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-15 21:04 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 21:04 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 21:04 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 21:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-05-15 21:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-05-15 21:04 - INFO - 	 Best Recall for 0.4 precision: 0.674
2024-05-15 21:04 - INFO - ---------------------------------------------
2024-05-15 21:10 - INFO - Fit the preprocessing pipeline
2024-05-15 21:10 - INFO - Training using device: cuda
2024-05-15 21:10 - INFO - Creating generators
2024-05-15 21:10 - INFO - The model has 651,257 trainable parameters
2024-05-15 21:10 - INFO - * Model:
2024-05-15 21:10 - INFO - * -----------
2024-05-15 21:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 21:10 - INFO - * -----------
2024-05-15 21:10 - INFO - Evaluating model based on: rocauc
2024-05-15 21:10 - INFO - Training..

2024-05-15 21:15 - INFO - ---------------------------------------------
2024-05-15 21:15 - INFO - Epoch: 01 | Time: 4m 28s
2024-05-15 21:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69594
2024-05-15 21:15 - INFO - 	 Train Loss: 0.545
2024-05-15 21:15 - INFO - 	 Val. Loss: 0.518
2024-05-15 21:15 - INFO - 	 ROC-AUC: 0.696
2024-05-15 21:15 - INFO - 	 PR-AUC: 0.407
2024-05-15 21:15 - INFO - 	 Recall for 0.4 precision: 0.485
2024-05-15 21:15 - INFO - 	 Best Val. Loss: 0.518
2024-05-15 21:15 - INFO - 	 Best ROC-AUC: 0.696
2024-05-15 21:15 - INFO - 	 Best PR-AUC: 0.407
2024-05-15 21:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.676
2024-05-15 21:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-05-15 21:15 - INFO - 	 Best Recall for 0.4 precision: 0.485
2024-05-15 21:15 - INFO - ---------------------------------------------
2024-05-15 21:20 - INFO - ---------------------------------------------
2024-05-15 21:20 - INFO - Epoch: 02 | Time: 4m 57s
2024-05-15 21:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72516
2024-05-15 21:20 - INFO - 	 Train Loss: 0.502
2024-05-15 21:20 - INFO - 	 Val. Loss: 0.495
2024-05-15 21:20 - INFO - 	 ROC-AUC: 0.725
2024-05-15 21:20 - INFO - 	 PR-AUC: 0.437
2024-05-15 21:20 - INFO - 	 Recall for 0.4 precision: 0.626
2024-05-15 21:20 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 21:20 - INFO - 	 Best ROC-AUC: 0.725
2024-05-15 21:20 - INFO - 	 Best PR-AUC: 0.437
2024-05-15 21:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.706
2024-05-15 21:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.421
2024-05-15 21:20 - INFO - 	 Best Recall for 0.4 precision: 0.626
2024-05-15 21:20 - INFO - ---------------------------------------------
2024-05-15 21:24 - INFO - ---------------------------------------------
2024-05-15 21:24 - INFO - Epoch: 03 | Time: 4m 27s
2024-05-15 21:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72648
2024-05-15 21:24 - INFO - 	 Train Loss: 0.490
2024-05-15 21:24 - INFO - 	 Val. Loss: 0.496
2024-05-15 21:24 - INFO - 	 ROC-AUC: 0.726
2024-05-15 21:24 - INFO - 	 PR-AUC: 0.437
2024-05-15 21:24 - INFO - 	 Recall for 0.4 precision: 0.639
2024-05-15 21:24 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 21:24 - INFO - 	 Best ROC-AUC: 0.726
2024-05-15 21:24 - INFO - 	 Best PR-AUC: 0.437
2024-05-15 21:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-15 21:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.421
2024-05-15 21:24 - INFO - 	 Best Recall for 0.4 precision: 0.639
2024-05-15 21:24 - INFO - ---------------------------------------------
2024-05-15 21:28 - INFO - ---------------------------------------------
2024-05-15 21:28 - INFO - Epoch: 04 | Time: 4m 22s
2024-05-15 21:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73448
2024-05-15 21:28 - INFO - 	 Train Loss: 0.485
2024-05-15 21:28 - INFO - 	 Val. Loss: 0.495
2024-05-15 21:28 - INFO - 	 ROC-AUC: 0.734
2024-05-15 21:28 - INFO - 	 PR-AUC: 0.450
2024-05-15 21:28 - INFO - 	 Recall for 0.4 precision: 0.678
2024-05-15 21:28 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 21:28 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 21:28 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 21:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 21:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 21:28 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-15 21:28 - INFO - ---------------------------------------------
2024-05-15 21:33 - INFO - ---------------------------------------------
2024-05-15 21:33 - INFO - Epoch: 05 | Time: 4m 17s
2024-05-15 21:33 - INFO - 	 Train Loss: 0.482
2024-05-15 21:33 - INFO - 	 Val. Loss: 0.498
2024-05-15 21:33 - INFO - 	 ROC-AUC: 0.729
2024-05-15 21:33 - INFO - 	 PR-AUC: 0.441
2024-05-15 21:33 - INFO - 	 Recall for 0.4 precision: 0.654
2024-05-15 21:33 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 21:33 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 21:33 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 21:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-05-15 21:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 21:33 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-15 21:33 - INFO - ---------------------------------------------
2024-05-15 21:37 - INFO - ---------------------------------------------
2024-05-15 21:37 - INFO - Epoch: 06 | Time: 4m 34s
2024-05-15 21:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73457
2024-05-15 21:37 - INFO - 	 Train Loss: 0.479
2024-05-15 21:37 - INFO - 	 Val. Loss: 0.493
2024-05-15 21:37 - INFO - 	 ROC-AUC: 0.735
2024-05-15 21:37 - INFO - 	 PR-AUC: 0.445
2024-05-15 21:37 - INFO - 	 Recall for 0.4 precision: 0.677
2024-05-15 21:37 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 21:37 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 21:37 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 21:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-05-15 21:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 21:37 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-15 21:37 - INFO - ---------------------------------------------
2024-05-15 21:42 - INFO - ---------------------------------------------
2024-05-15 21:42 - INFO - Epoch: 07 | Time: 4m 20s
2024-05-15 21:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73474
2024-05-15 21:42 - INFO - 	 Train Loss: 0.478
2024-05-15 21:42 - INFO - 	 Val. Loss: 0.495
2024-05-15 21:42 - INFO - 	 ROC-AUC: 0.735
2024-05-15 21:42 - INFO - 	 PR-AUC: 0.447
2024-05-15 21:42 - INFO - 	 Recall for 0.4 precision: 0.677
2024-05-15 21:42 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 21:42 - INFO - 	 Best ROC-AUC: 0.735
2024-05-15 21:42 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 21:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-15 21:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 21:42 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-15 21:42 - INFO - ---------------------------------------------
2024-05-15 21:46 - INFO - ---------------------------------------------
2024-05-15 21:46 - INFO - Epoch: 08 | Time: 4m 18s
2024-05-15 21:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73635
2024-05-15 21:46 - INFO - 	 Train Loss: 0.476
2024-05-15 21:46 - INFO - 	 Val. Loss: 0.494
2024-05-15 21:46 - INFO - 	 ROC-AUC: 0.736
2024-05-15 21:46 - INFO - 	 PR-AUC: 0.446
2024-05-15 21:46 - INFO - 	 Recall for 0.4 precision: 0.687
2024-05-15 21:46 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 21:46 - INFO - 	 Best ROC-AUC: 0.736
2024-05-15 21:46 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 21:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.715
2024-05-15 21:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 21:46 - INFO - 	 Best Recall for 0.4 precision: 0.687
2024-05-15 21:46 - INFO - ---------------------------------------------
2024-05-15 21:50 - INFO - ---------------------------------------------
2024-05-15 21:50 - INFO - Epoch: 09 | Time: 4m 22s
2024-05-15 21:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73668
2024-05-15 21:50 - INFO - 	 Train Loss: 0.475
2024-05-15 21:50 - INFO - 	 Val. Loss: 0.493
2024-05-15 21:50 - INFO - 	 ROC-AUC: 0.737
2024-05-15 21:50 - INFO - 	 PR-AUC: 0.446
2024-05-15 21:50 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 21:50 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 21:50 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 21:50 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 21:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 21:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 21:50 - INFO - 	 Best Recall for 0.4 precision: 0.687
2024-05-15 21:50 - INFO - ---------------------------------------------
2024-05-15 21:55 - INFO - ---------------------------------------------
2024-05-15 21:55 - INFO - Epoch: 10 | Time: 4m 24s
2024-05-15 21:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73896
2024-05-15 21:55 - INFO - 	 Train Loss: 0.475
2024-05-15 21:55 - INFO - 	 Val. Loss: 0.492
2024-05-15 21:55 - INFO - 	 ROC-AUC: 0.739
2024-05-15 21:55 - INFO - 	 PR-AUC: 0.450
2024-05-15 21:55 - INFO - 	 Recall for 0.4 precision: 0.695
2024-05-15 21:55 - INFO - 	 Best Val. Loss: 0.492
2024-05-15 21:55 - INFO - 	 Best ROC-AUC: 0.739
2024-05-15 21:55 - INFO - 	 Best PR-AUC: 0.450
2024-05-15 21:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 21:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-05-15 21:55 - INFO - 	 Best Recall for 0.4 precision: 0.695
2024-05-15 21:55 - INFO - ---------------------------------------------
2024-05-15 22:01 - INFO - Fit the preprocessing pipeline
2024-05-15 22:01 - INFO - Training using device: cuda
2024-05-15 22:01 - INFO - Creating generators
2024-05-15 22:01 - INFO - The model has 651,257 trainable parameters
2024-05-15 22:01 - INFO - * Model:
2024-05-15 22:01 - INFO - * -----------
2024-05-15 22:01 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 22:01 - INFO - * -----------
2024-05-15 22:01 - INFO - Evaluating model based on: rocauc
2024-05-15 22:01 - INFO - Training..

2024-05-15 22:07 - INFO - ---------------------------------------------
2024-05-15 22:07 - INFO - Epoch: 01 | Time: 6m 21s
2024-05-15 22:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69063
2024-05-15 22:07 - INFO - 	 Train Loss: 0.545
2024-05-15 22:07 - INFO - 	 Val. Loss: 0.514
2024-05-15 22:07 - INFO - 	 ROC-AUC: 0.691
2024-05-15 22:07 - INFO - 	 PR-AUC: 0.404
2024-05-15 22:07 - INFO - 	 Recall for 0.4 precision: 0.492
2024-05-15 22:07 - INFO - 	 Best Val. Loss: 0.514
2024-05-15 22:07 - INFO - 	 Best ROC-AUC: 0.691
2024-05-15 22:07 - INFO - 	 Best PR-AUC: 0.404
2024-05-15 22:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.670
2024-05-15 22:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.387
2024-05-15 22:07 - INFO - 	 Best Recall for 0.4 precision: 0.492
2024-05-15 22:07 - INFO - ---------------------------------------------
2024-05-15 22:15 - INFO - ---------------------------------------------
2024-05-15 22:15 - INFO - Epoch: 02 | Time: 7m 15s
2024-05-15 22:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72163
2024-05-15 22:15 - INFO - 	 Train Loss: 0.502
2024-05-15 22:15 - INFO - 	 Val. Loss: 0.503
2024-05-15 22:15 - INFO - 	 ROC-AUC: 0.722
2024-05-15 22:15 - INFO - 	 PR-AUC: 0.434
2024-05-15 22:15 - INFO - 	 Recall for 0.4 precision: 0.618
2024-05-15 22:15 - INFO - 	 Best Val. Loss: 0.503
2024-05-15 22:15 - INFO - 	 Best ROC-AUC: 0.722
2024-05-15 22:15 - INFO - 	 Best PR-AUC: 0.434
2024-05-15 22:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-05-15 22:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.417
2024-05-15 22:15 - INFO - 	 Best Recall for 0.4 precision: 0.618
2024-05-15 22:15 - INFO - ---------------------------------------------
2024-05-15 22:22 - INFO - ---------------------------------------------
2024-05-15 22:22 - INFO - Epoch: 03 | Time: 7m 31s
2024-05-15 22:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72546
2024-05-15 22:22 - INFO - 	 Train Loss: 0.491
2024-05-15 22:22 - INFO - 	 Val. Loss: 0.496
2024-05-15 22:22 - INFO - 	 ROC-AUC: 0.725
2024-05-15 22:22 - INFO - 	 PR-AUC: 0.434
2024-05-15 22:22 - INFO - 	 Recall for 0.4 precision: 0.637
2024-05-15 22:22 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 22:22 - INFO - 	 Best ROC-AUC: 0.725
2024-05-15 22:22 - INFO - 	 Best PR-AUC: 0.434
2024-05-15 22:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 22:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.417
2024-05-15 22:22 - INFO - 	 Best Recall for 0.4 precision: 0.637
2024-05-15 22:22 - INFO - ---------------------------------------------
2024-05-15 22:29 - INFO - ---------------------------------------------
2024-05-15 22:29 - INFO - Epoch: 04 | Time: 6m 18s
2024-05-15 22:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73093
2024-05-15 22:29 - INFO - 	 Train Loss: 0.485
2024-05-15 22:29 - INFO - 	 Val. Loss: 0.496
2024-05-15 22:29 - INFO - 	 ROC-AUC: 0.731
2024-05-15 22:29 - INFO - 	 PR-AUC: 0.443
2024-05-15 22:29 - INFO - 	 Recall for 0.4 precision: 0.665
2024-05-15 22:29 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 22:29 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 22:29 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 22:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 22:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-15 22:29 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-15 22:29 - INFO - ---------------------------------------------
2024-05-15 22:35 - INFO - ---------------------------------------------
2024-05-15 22:35 - INFO - Epoch: 05 | Time: 6m 37s
2024-05-15 22:35 - INFO - 	 Train Loss: 0.482
2024-05-15 22:35 - INFO - 	 Val. Loss: 0.496
2024-05-15 22:35 - INFO - 	 ROC-AUC: 0.725
2024-05-15 22:35 - INFO - 	 PR-AUC: 0.440
2024-05-15 22:35 - INFO - 	 Recall for 0.4 precision: 0.643
2024-05-15 22:35 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 22:35 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 22:35 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 22:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 22:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-15 22:35 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-15 22:35 - INFO - ---------------------------------------------
2024-05-15 22:42 - INFO - ---------------------------------------------
2024-05-15 22:42 - INFO - Epoch: 06 | Time: 6m 25s
2024-05-15 22:42 - INFO - 	 Train Loss: 0.480
2024-05-15 22:42 - INFO - 	 Val. Loss: 0.497
2024-05-15 22:42 - INFO - 	 ROC-AUC: 0.728
2024-05-15 22:42 - INFO - 	 PR-AUC: 0.438
2024-05-15 22:42 - INFO - 	 Recall for 0.4 precision: 0.652
2024-05-15 22:42 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 22:42 - INFO - 	 Best ROC-AUC: 0.731
2024-05-15 22:42 - INFO - 	 Best PR-AUC: 0.443
2024-05-15 22:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-05-15 22:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-05-15 22:42 - INFO - 	 Best Recall for 0.4 precision: 0.665
2024-05-15 22:42 - INFO - ---------------------------------------------
2024-05-15 22:48 - INFO - ---------------------------------------------
2024-05-15 22:48 - INFO - Epoch: 07 | Time: 6m 28s
2024-05-15 22:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73283
2024-05-15 22:48 - INFO - 	 Train Loss: 0.478
2024-05-15 22:48 - INFO - 	 Val. Loss: 0.496
2024-05-15 22:48 - INFO - 	 ROC-AUC: 0.733
2024-05-15 22:48 - INFO - 	 PR-AUC: 0.448
2024-05-15 22:48 - INFO - 	 Recall for 0.4 precision: 0.668
2024-05-15 22:48 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 22:48 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 22:48 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 22:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 22:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-05-15 22:48 - INFO - 	 Best Recall for 0.4 precision: 0.668
2024-05-15 22:48 - INFO - ---------------------------------------------
2024-05-15 22:56 - INFO - ---------------------------------------------
2024-05-15 22:56 - INFO - Epoch: 08 | Time: 7m 29s
2024-05-15 22:56 - INFO - 	 Train Loss: 0.477
2024-05-15 22:56 - INFO - 	 Val. Loss: 0.495
2024-05-15 22:56 - INFO - 	 ROC-AUC: 0.731
2024-05-15 22:56 - INFO - 	 PR-AUC: 0.442
2024-05-15 22:56 - INFO - 	 Recall for 0.4 precision: 0.663
2024-05-15 22:56 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 22:56 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 22:56 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 22:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 22:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-05-15 22:56 - INFO - 	 Best Recall for 0.4 precision: 0.668
2024-05-15 22:56 - INFO - ---------------------------------------------
2024-05-15 23:02 - INFO - ---------------------------------------------
2024-05-15 23:02 - INFO - Epoch: 09 | Time: 6m 11s
2024-05-15 23:02 - INFO - 	 Train Loss: 0.475
2024-05-15 23:02 - INFO - 	 Val. Loss: 0.495
2024-05-15 23:02 - INFO - 	 ROC-AUC: 0.731
2024-05-15 23:02 - INFO - 	 PR-AUC: 0.447
2024-05-15 23:02 - INFO - 	 Recall for 0.4 precision: 0.666
2024-05-15 23:02 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 23:02 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 23:02 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 23:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 23:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-05-15 23:02 - INFO - 	 Best Recall for 0.4 precision: 0.668
2024-05-15 23:02 - INFO - ---------------------------------------------
2024-05-15 23:08 - INFO - ---------------------------------------------
2024-05-15 23:08 - INFO - Epoch: 10 | Time: 6m 27s
2024-05-15 23:08 - INFO - 	 Train Loss: 0.474
2024-05-15 23:08 - INFO - 	 Val. Loss: 0.493
2024-05-15 23:08 - INFO - 	 ROC-AUC: 0.732
2024-05-15 23:08 - INFO - 	 PR-AUC: 0.445
2024-05-15 23:08 - INFO - 	 Recall for 0.4 precision: 0.673
2024-05-15 23:08 - INFO - 	 Best Val. Loss: 0.493
2024-05-15 23:08 - INFO - 	 Best ROC-AUC: 0.733
2024-05-15 23:08 - INFO - 	 Best PR-AUC: 0.448
2024-05-15 23:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-05-15 23:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-05-15 23:08 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-05-15 23:08 - INFO - ---------------------------------------------
2024-05-15 23:15 - INFO - Fit the preprocessing pipeline
2024-05-15 23:15 - INFO - Training using device: cuda
2024-05-15 23:15 - INFO - Creating generators
2024-05-15 23:15 - INFO - The model has 651,257 trainable parameters
2024-05-15 23:15 - INFO - * Model:
2024-05-15 23:15 - INFO - * -----------
2024-05-15 23:15 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-05-15 23:15 - INFO - * -----------
2024-05-15 23:15 - INFO - Evaluating model based on: rocauc
2024-05-15 23:15 - INFO - Training..

2024-05-15 23:21 - INFO - ---------------------------------------------
2024-05-15 23:21 - INFO - Epoch: 01 | Time: 6m 4s
2024-05-15 23:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70992
2024-05-15 23:21 - INFO - 	 Train Loss: 0.539
2024-05-15 23:21 - INFO - 	 Val. Loss: 0.507
2024-05-15 23:21 - INFO - 	 ROC-AUC: 0.710
2024-05-15 23:21 - INFO - 	 PR-AUC: 0.425
2024-05-15 23:21 - INFO - 	 Recall for 0.4 precision: 0.582
2024-05-15 23:21 - INFO - 	 Best Val. Loss: 0.507
2024-05-15 23:21 - INFO - 	 Best ROC-AUC: 0.710
2024-05-15 23:21 - INFO - 	 Best PR-AUC: 0.425
2024-05-15 23:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.690
2024-05-15 23:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-05-15 23:21 - INFO - 	 Best Recall for 0.4 precision: 0.582
2024-05-15 23:21 - INFO - ---------------------------------------------
2024-05-15 23:28 - INFO - ---------------------------------------------
2024-05-15 23:28 - INFO - Epoch: 02 | Time: 6m 51s
2024-05-15 23:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72796
2024-05-15 23:28 - INFO - 	 Train Loss: 0.498
2024-05-15 23:28 - INFO - 	 Val. Loss: 0.496
2024-05-15 23:28 - INFO - 	 ROC-AUC: 0.728
2024-05-15 23:28 - INFO - 	 PR-AUC: 0.437
2024-05-15 23:28 - INFO - 	 Recall for 0.4 precision: 0.650
2024-05-15 23:28 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 23:28 - INFO - 	 Best ROC-AUC: 0.728
2024-05-15 23:28 - INFO - 	 Best PR-AUC: 0.437
2024-05-15 23:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.711
2024-05-15 23:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-05-15 23:28 - INFO - 	 Best Recall for 0.4 precision: 0.650
2024-05-15 23:28 - INFO - ---------------------------------------------
2024-05-15 23:34 - INFO - ---------------------------------------------
2024-05-15 23:34 - INFO - Epoch: 03 | Time: 5m 53s
2024-05-15 23:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73152
2024-05-15 23:34 - INFO - 	 Train Loss: 0.489
2024-05-15 23:34 - INFO - 	 Val. Loss: 0.496
2024-05-15 23:34 - INFO - 	 ROC-AUC: 0.732
2024-05-15 23:34 - INFO - 	 PR-AUC: 0.440
2024-05-15 23:34 - INFO - 	 Recall for 0.4 precision: 0.675
2024-05-15 23:34 - INFO - 	 Best Val. Loss: 0.496
2024-05-15 23:34 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 23:34 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 23:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 23:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 23:34 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-15 23:34 - INFO - ---------------------------------------------
2024-05-15 23:39 - INFO - ---------------------------------------------
2024-05-15 23:39 - INFO - Epoch: 04 | Time: 5m 26s
2024-05-15 23:39 - INFO - 	 Train Loss: 0.485
2024-05-15 23:39 - INFO - 	 Val. Loss: 0.495
2024-05-15 23:39 - INFO - 	 ROC-AUC: 0.730
2024-05-15 23:39 - INFO - 	 PR-AUC: 0.438
2024-05-15 23:39 - INFO - 	 Recall for 0.4 precision: 0.664
2024-05-15 23:39 - INFO - 	 Best Val. Loss: 0.495
2024-05-15 23:39 - INFO - 	 Best ROC-AUC: 0.732
2024-05-15 23:39 - INFO - 	 Best PR-AUC: 0.440
2024-05-15 23:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.712
2024-05-15 23:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-05-15 23:39 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-15 23:39 - INFO - ---------------------------------------------
2024-05-15 23:45 - INFO - ---------------------------------------------
2024-05-15 23:45 - INFO - Epoch: 05 | Time: 5m 48s
2024-05-15 23:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73352
2024-05-15 23:45 - INFO - 	 Train Loss: 0.481
2024-05-15 23:45 - INFO - 	 Val. Loss: 0.494
2024-05-15 23:45 - INFO - 	 ROC-AUC: 0.734
2024-05-15 23:45 - INFO - 	 PR-AUC: 0.449
2024-05-15 23:45 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 23:45 - INFO - 	 Best Val. Loss: 0.494
2024-05-15 23:45 - INFO - 	 Best ROC-AUC: 0.734
2024-05-15 23:45 - INFO - 	 Best PR-AUC: 0.449
2024-05-15 23:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-05-15 23:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-15 23:45 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-15 23:45 - INFO - ---------------------------------------------
2024-05-15 23:51 - INFO - ---------------------------------------------
2024-05-15 23:51 - INFO - Epoch: 06 | Time: 5m 44s
2024-05-15 23:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73735
2024-05-15 23:51 - INFO - 	 Train Loss: 0.479
2024-05-15 23:51 - INFO - 	 Val. Loss: 0.491
2024-05-15 23:51 - INFO - 	 ROC-AUC: 0.737
2024-05-15 23:51 - INFO - 	 PR-AUC: 0.453
2024-05-15 23:51 - INFO - 	 Recall for 0.4 precision: 0.005
2024-05-15 23:51 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 23:51 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 23:51 - INFO - 	 Best PR-AUC: 0.453
2024-05-15 23:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 23:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-15 23:51 - INFO - 	 Best Recall for 0.4 precision: 0.675
2024-05-15 23:51 - INFO - ---------------------------------------------
2024-05-15 23:57 - INFO - ---------------------------------------------
2024-05-15 23:57 - INFO - Epoch: 07 | Time: 6m 11s
2024-05-15 23:57 - INFO - 	 Train Loss: 0.477
2024-05-15 23:57 - INFO - 	 Val. Loss: 0.494
2024-05-15 23:57 - INFO - 	 ROC-AUC: 0.734
2024-05-15 23:57 - INFO - 	 PR-AUC: 0.446
2024-05-15 23:57 - INFO - 	 Recall for 0.4 precision: 0.678
2024-05-15 23:57 - INFO - 	 Best Val. Loss: 0.491
2024-05-15 23:57 - INFO - 	 Best ROC-AUC: 0.737
2024-05-15 23:57 - INFO - 	 Best PR-AUC: 0.453
2024-05-15 23:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-15 23:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-15 23:57 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-15 23:57 - INFO - ---------------------------------------------
2024-05-16 00:03 - INFO - ---------------------------------------------
2024-05-16 00:03 - INFO - Epoch: 08 | Time: 5m 37s
2024-05-16 00:03 - INFO - 	 Train Loss: 0.476
2024-05-16 00:03 - INFO - 	 Val. Loss: 0.495
2024-05-16 00:03 - INFO - 	 ROC-AUC: 0.732
2024-05-16 00:03 - INFO - 	 PR-AUC: 0.444
2024-05-16 00:03 - INFO - 	 Recall for 0.4 precision: 0.671
2024-05-16 00:03 - INFO - 	 Best Val. Loss: 0.491
2024-05-16 00:03 - INFO - 	 Best ROC-AUC: 0.737
2024-05-16 00:03 - INFO - 	 Best PR-AUC: 0.453
2024-05-16 00:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-05-16 00:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-16 00:03 - INFO - 	 Best Recall for 0.4 precision: 0.678
2024-05-16 00:03 - INFO - ---------------------------------------------
2024-05-16 00:08 - INFO - ---------------------------------------------
2024-05-16 00:08 - INFO - Epoch: 09 | Time: 5m 0s
2024-05-16 00:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73976
2024-05-16 00:08 - INFO - 	 Train Loss: 0.475
2024-05-16 00:08 - INFO - 	 Val. Loss: 0.494
2024-05-16 00:08 - INFO - 	 ROC-AUC: 0.740
2024-05-16 00:08 - INFO - 	 PR-AUC: 0.453
2024-05-16 00:08 - INFO - 	 Recall for 0.4 precision: 0.694
2024-05-16 00:08 - INFO - 	 Best Val. Loss: 0.491
2024-05-16 00:08 - INFO - 	 Best ROC-AUC: 0.740
2024-05-16 00:08 - INFO - 	 Best PR-AUC: 0.453
2024-05-16 00:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-05-16 00:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-16 00:08 - INFO - 	 Best Recall for 0.4 precision: 0.694
2024-05-16 00:08 - INFO - ---------------------------------------------
2024-05-16 00:13 - INFO - ---------------------------------------------
2024-05-16 00:13 - INFO - Epoch: 10 | Time: 4m 59s
2024-05-16 00:13 - INFO - 	 Train Loss: 0.473
2024-05-16 00:13 - INFO - 	 Val. Loss: 0.493
2024-05-16 00:13 - INFO - 	 ROC-AUC: 0.736
2024-05-16 00:13 - INFO - 	 PR-AUC: 0.448
2024-05-16 00:13 - INFO - 	 Recall for 0.4 precision: 0.677
2024-05-16 00:13 - INFO - 	 Best Val. Loss: 0.491
2024-05-16 00:13 - INFO - 	 Best ROC-AUC: 0.740
2024-05-16 00:13 - INFO - 	 Best PR-AUC: 0.453
2024-05-16 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-05-16 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-05-16 00:13 - INFO - 	 Best Recall for 0.4 precision: 0.694
2024-05-16 00:13 - INFO - ---------------------------------------------
