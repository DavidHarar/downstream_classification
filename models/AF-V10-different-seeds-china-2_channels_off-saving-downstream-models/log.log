2024-11-03 07:03 - INFO - Fit the preprocessing pipeline
2024-11-03 07:03 - INFO - Training using device: mps
2024-11-03 07:03 - INFO - Creating generators
2024-11-03 07:03 - INFO - The model has 651,257 trainable parameters
2024-11-03 07:03 - INFO - * Model:
2024-11-03 07:03 - INFO - * -----------
2024-11-03 07:03 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 07:03 - INFO - * -----------
2024-11-03 07:03 - INFO - Evaluating model based on: aucpr
2024-11-03 07:03 - INFO - Training..

2024-11-03 07:05 - INFO - ---------------------------------------------
2024-11-03 07:05 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-03 07:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22537
2024-11-03 07:05 - INFO - 	 Train Loss: 0.255
2024-11-03 07:05 - INFO - 	 Val. Loss: 0.280
2024-11-03 07:05 - INFO - 	 ROC-AUC: 0.753
2024-11-03 07:05 - INFO - 	 PR-AUC: 0.225
2024-11-03 07:05 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-03 07:05 - INFO - 	 Best Val. Loss: 0.280
2024-11-03 07:05 - INFO - 	 Best ROC-AUC: 0.753
2024-11-03 07:05 - INFO - 	 Best PR-AUC: 0.225
2024-11-03 07:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-03 07:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.118
2024-11-03 07:05 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-03 07:05 - INFO - ---------------------------------------------
2024-11-03 07:07 - INFO - ---------------------------------------------
2024-11-03 07:07 - INFO - Epoch: 02 | Time: 1m 43s
2024-11-03 07:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26515
2024-11-03 07:07 - INFO - 	 Train Loss: 0.207
2024-11-03 07:07 - INFO - 	 Val. Loss: 0.245
2024-11-03 07:07 - INFO - 	 ROC-AUC: 0.769
2024-11-03 07:07 - INFO - 	 PR-AUC: 0.265
2024-11-03 07:07 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-03 07:07 - INFO - 	 Best Val. Loss: 0.245
2024-11-03 07:07 - INFO - 	 Best ROC-AUC: 0.769
2024-11-03 07:07 - INFO - 	 Best PR-AUC: 0.265
2024-11-03 07:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-03 07:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-03 07:07 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 07:07 - INFO - ---------------------------------------------
2024-11-03 07:08 - INFO - ---------------------------------------------
2024-11-03 07:08 - INFO - Epoch: 03 | Time: 1m 40s
2024-11-03 07:08 - INFO - 	 Train Loss: 0.181
2024-11-03 07:08 - INFO - 	 Val. Loss: 0.203
2024-11-03 07:08 - INFO - 	 ROC-AUC: 0.792
2024-11-03 07:08 - INFO - 	 PR-AUC: 0.263
2024-11-03 07:08 - INFO - 	 Recall for 0.4 precision: 0.211
2024-11-03 07:08 - INFO - 	 Best Val. Loss: 0.203
2024-11-03 07:08 - INFO - 	 Best ROC-AUC: 0.792
2024-11-03 07:08 - INFO - 	 Best PR-AUC: 0.265
2024-11-03 07:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-03 07:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-03 07:08 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 07:08 - INFO - ---------------------------------------------
2024-11-03 07:10 - INFO - ---------------------------------------------
2024-11-03 07:10 - INFO - Epoch: 04 | Time: 1m 43s
2024-11-03 07:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27708
2024-11-03 07:10 - INFO - 	 Train Loss: 0.169
2024-11-03 07:10 - INFO - 	 Val. Loss: 0.198
2024-11-03 07:10 - INFO - 	 ROC-AUC: 0.799
2024-11-03 07:10 - INFO - 	 PR-AUC: 0.277
2024-11-03 07:10 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-03 07:10 - INFO - 	 Best Val. Loss: 0.198
2024-11-03 07:10 - INFO - 	 Best ROC-AUC: 0.799
2024-11-03 07:10 - INFO - 	 Best PR-AUC: 0.277
2024-11-03 07:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-03 07:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 07:10 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 07:10 - INFO - ---------------------------------------------
2024-11-03 07:12 - INFO - ---------------------------------------------
2024-11-03 07:12 - INFO - Epoch: 05 | Time: 1m 43s
2024-11-03 07:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31996
2024-11-03 07:12 - INFO - 	 Train Loss: 0.161
2024-11-03 07:12 - INFO - 	 Val. Loss: 0.177
2024-11-03 07:12 - INFO - 	 ROC-AUC: 0.822
2024-11-03 07:12 - INFO - 	 PR-AUC: 0.320
2024-11-03 07:12 - INFO - 	 Recall for 0.4 precision: 0.325
2024-11-03 07:12 - INFO - 	 Best Val. Loss: 0.177
2024-11-03 07:12 - INFO - 	 Best ROC-AUC: 0.822
2024-11-03 07:12 - INFO - 	 Best PR-AUC: 0.320
2024-11-03 07:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.793
2024-11-03 07:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 07:12 - INFO - 	 Best Recall for 0.4 precision: 0.325
2024-11-03 07:12 - INFO - ---------------------------------------------
2024-11-03 07:13 - INFO - ---------------------------------------------
2024-11-03 07:13 - INFO - Epoch: 06 | Time: 1m 44s
2024-11-03 07:13 - INFO - 	 Train Loss: 0.154
2024-11-03 07:13 - INFO - 	 Val. Loss: 0.173
2024-11-03 07:13 - INFO - 	 ROC-AUC: 0.819
2024-11-03 07:13 - INFO - 	 PR-AUC: 0.317
2024-11-03 07:13 - INFO - 	 Recall for 0.4 precision: 0.309
2024-11-03 07:13 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 07:13 - INFO - 	 Best ROC-AUC: 0.822
2024-11-03 07:13 - INFO - 	 Best PR-AUC: 0.320
2024-11-03 07:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.793
2024-11-03 07:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 07:13 - INFO - 	 Best Recall for 0.4 precision: 0.325
2024-11-03 07:13 - INFO - ---------------------------------------------
2024-11-03 07:15 - INFO - ---------------------------------------------
2024-11-03 07:15 - INFO - Epoch: 07 | Time: 1m 43s
2024-11-03 07:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39565
2024-11-03 07:15 - INFO - 	 Train Loss: 0.149
2024-11-03 07:15 - INFO - 	 Val. Loss: 0.134
2024-11-03 07:15 - INFO - 	 ROC-AUC: 0.908
2024-11-03 07:15 - INFO - 	 PR-AUC: 0.396
2024-11-03 07:15 - INFO - 	 Recall for 0.4 precision: 0.410
2024-11-03 07:15 - INFO - 	 Best Val. Loss: 0.134
2024-11-03 07:15 - INFO - 	 Best ROC-AUC: 0.908
2024-11-03 07:15 - INFO - 	 Best PR-AUC: 0.396
2024-11-03 07:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.859
2024-11-03 07:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.186
2024-11-03 07:15 - INFO - 	 Best Recall for 0.4 precision: 0.410
2024-11-03 07:15 - INFO - ---------------------------------------------
2024-11-03 07:17 - INFO - ---------------------------------------------
2024-11-03 07:17 - INFO - Epoch: 08 | Time: 1m 44s
2024-11-03 07:17 - INFO - 	 Train Loss: 0.137
2024-11-03 07:17 - INFO - 	 Val. Loss: 0.136
2024-11-03 07:17 - INFO - 	 ROC-AUC: 0.942
2024-11-03 07:17 - INFO - 	 PR-AUC: 0.392
2024-11-03 07:17 - INFO - 	 Recall for 0.4 precision: 0.550
2024-11-03 07:17 - INFO - 	 Best Val. Loss: 0.134
2024-11-03 07:17 - INFO - 	 Best ROC-AUC: 0.942
2024-11-03 07:17 - INFO - 	 Best PR-AUC: 0.396
2024-11-03 07:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-03 07:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.186
2024-11-03 07:17 - INFO - 	 Best Recall for 0.4 precision: 0.550
2024-11-03 07:17 - INFO - ---------------------------------------------
2024-11-03 07:19 - INFO - ---------------------------------------------
2024-11-03 07:19 - INFO - Epoch: 09 | Time: 1m 43s
2024-11-03 07:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49779
2024-11-03 07:19 - INFO - 	 Train Loss: 0.120
2024-11-03 07:19 - INFO - 	 Val. Loss: 0.126
2024-11-03 07:19 - INFO - 	 ROC-AUC: 0.961
2024-11-03 07:19 - INFO - 	 PR-AUC: 0.498
2024-11-03 07:19 - INFO - 	 Recall for 0.4 precision: 0.774
2024-11-03 07:19 - INFO - 	 Best Val. Loss: 0.126
2024-11-03 07:19 - INFO - 	 Best ROC-AUC: 0.961
2024-11-03 07:19 - INFO - 	 Best PR-AUC: 0.498
2024-11-03 07:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-03 07:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.288
2024-11-03 07:19 - INFO - 	 Best Recall for 0.4 precision: 0.774
2024-11-03 07:19 - INFO - ---------------------------------------------
2024-11-03 07:20 - INFO - ---------------------------------------------
2024-11-03 07:20 - INFO - Epoch: 10 | Time: 1m 44s
2024-11-03 07:20 - INFO - 	 Train Loss: 0.110
2024-11-03 07:20 - INFO - 	 Val. Loss: 0.129
2024-11-03 07:20 - INFO - 	 ROC-AUC: 0.957
2024-11-03 07:20 - INFO - 	 PR-AUC: 0.459
2024-11-03 07:20 - INFO - 	 Recall for 0.4 precision: 0.719
2024-11-03 07:20 - INFO - 	 Best Val. Loss: 0.126
2024-11-03 07:20 - INFO - 	 Best ROC-AUC: 0.961
2024-11-03 07:20 - INFO - 	 Best PR-AUC: 0.498
2024-11-03 07:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-03 07:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.288
2024-11-03 07:20 - INFO - 	 Best Recall for 0.4 precision: 0.774
2024-11-03 07:20 - INFO - ---------------------------------------------
2024-11-03 07:23 - INFO - Fit the preprocessing pipeline
2024-11-03 07:23 - INFO - Training using device: mps
2024-11-03 07:23 - INFO - Creating generators
2024-11-03 07:23 - INFO - The model has 651,257 trainable parameters
2024-11-03 07:23 - INFO - * Model:
2024-11-03 07:23 - INFO - * -----------
2024-11-03 07:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 07:23 - INFO - * -----------
2024-11-03 07:23 - INFO - Evaluating model based on: aucpr
2024-11-03 07:23 - INFO - Training..

2024-11-03 07:25 - INFO - ---------------------------------------------
2024-11-03 07:25 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-03 07:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19848
2024-11-03 07:25 - INFO - 	 Train Loss: 0.254
2024-11-03 07:25 - INFO - 	 Val. Loss: 0.318
2024-11-03 07:25 - INFO - 	 ROC-AUC: 0.744
2024-11-03 07:25 - INFO - 	 PR-AUC: 0.198
2024-11-03 07:25 - INFO - 	 Recall for 0.4 precision: 0.130
2024-11-03 07:25 - INFO - 	 Best Val. Loss: 0.318
2024-11-03 07:25 - INFO - 	 Best ROC-AUC: 0.744
2024-11-03 07:25 - INFO - 	 Best PR-AUC: 0.198
2024-11-03 07:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-11-03 07:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-03 07:25 - INFO - 	 Best Recall for 0.4 precision: 0.130
2024-11-03 07:25 - INFO - ---------------------------------------------
2024-11-03 07:26 - INFO - ---------------------------------------------
2024-11-03 07:26 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-03 07:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23428
2024-11-03 07:26 - INFO - 	 Train Loss: 0.208
2024-11-03 07:26 - INFO - 	 Val. Loss: 0.238
2024-11-03 07:26 - INFO - 	 ROC-AUC: 0.778
2024-11-03 07:26 - INFO - 	 PR-AUC: 0.234
2024-11-03 07:26 - INFO - 	 Recall for 0.4 precision: 0.141
2024-11-03 07:26 - INFO - 	 Best Val. Loss: 0.238
2024-11-03 07:26 - INFO - 	 Best ROC-AUC: 0.778
2024-11-03 07:26 - INFO - 	 Best PR-AUC: 0.234
2024-11-03 07:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-03 07:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-03 07:26 - INFO - 	 Best Recall for 0.4 precision: 0.141
2024-11-03 07:26 - INFO - ---------------------------------------------
2024-11-03 07:28 - INFO - ---------------------------------------------
2024-11-03 07:28 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-03 07:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24557
2024-11-03 07:28 - INFO - 	 Train Loss: 0.187
2024-11-03 07:28 - INFO - 	 Val. Loss: 0.207
2024-11-03 07:28 - INFO - 	 ROC-AUC: 0.784
2024-11-03 07:28 - INFO - 	 PR-AUC: 0.246
2024-11-03 07:28 - INFO - 	 Recall for 0.4 precision: 0.202
2024-11-03 07:28 - INFO - 	 Best Val. Loss: 0.207
2024-11-03 07:28 - INFO - 	 Best ROC-AUC: 0.784
2024-11-03 07:28 - INFO - 	 Best PR-AUC: 0.246
2024-11-03 07:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 07:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-03 07:28 - INFO - 	 Best Recall for 0.4 precision: 0.202
2024-11-03 07:28 - INFO - ---------------------------------------------
2024-11-03 07:30 - INFO - ---------------------------------------------
2024-11-03 07:30 - INFO - Epoch: 04 | Time: 1m 45s
2024-11-03 07:30 - INFO - 	 Train Loss: 0.172
2024-11-03 07:30 - INFO - 	 Val. Loss: 0.191
2024-11-03 07:30 - INFO - 	 ROC-AUC: 0.785
2024-11-03 07:30 - INFO - 	 PR-AUC: 0.239
2024-11-03 07:30 - INFO - 	 Recall for 0.4 precision: 0.150
2024-11-03 07:30 - INFO - 	 Best Val. Loss: 0.191
2024-11-03 07:30 - INFO - 	 Best ROC-AUC: 0.785
2024-11-03 07:30 - INFO - 	 Best PR-AUC: 0.246
2024-11-03 07:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-03 07:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-03 07:30 - INFO - 	 Best Recall for 0.4 precision: 0.202
2024-11-03 07:30 - INFO - ---------------------------------------------
2024-11-03 07:32 - INFO - ---------------------------------------------
2024-11-03 07:32 - INFO - Epoch: 05 | Time: 1m 47s
2024-11-03 07:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28335
2024-11-03 07:32 - INFO - 	 Train Loss: 0.163
2024-11-03 07:32 - INFO - 	 Val. Loss: 0.182
2024-11-03 07:32 - INFO - 	 ROC-AUC: 0.813
2024-11-03 07:32 - INFO - 	 PR-AUC: 0.283
2024-11-03 07:32 - INFO - 	 Recall for 0.4 precision: 0.205
2024-11-03 07:32 - INFO - 	 Best Val. Loss: 0.182
2024-11-03 07:32 - INFO - 	 Best ROC-AUC: 0.813
2024-11-03 07:32 - INFO - 	 Best PR-AUC: 0.283
2024-11-03 07:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-03 07:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 07:32 - INFO - 	 Best Recall for 0.4 precision: 0.205
2024-11-03 07:32 - INFO - ---------------------------------------------
2024-11-03 07:34 - INFO - ---------------------------------------------
2024-11-03 07:34 - INFO - Epoch: 06 | Time: 1m 48s
2024-11-03 07:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29745
2024-11-03 07:34 - INFO - 	 Train Loss: 0.158
2024-11-03 07:34 - INFO - 	 Val. Loss: 0.172
2024-11-03 07:34 - INFO - 	 ROC-AUC: 0.809
2024-11-03 07:34 - INFO - 	 PR-AUC: 0.297
2024-11-03 07:34 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-03 07:34 - INFO - 	 Best Val. Loss: 0.172
2024-11-03 07:34 - INFO - 	 Best ROC-AUC: 0.813
2024-11-03 07:34 - INFO - 	 Best PR-AUC: 0.297
2024-11-03 07:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-03 07:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 07:34 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 07:34 - INFO - ---------------------------------------------
2024-11-03 07:35 - INFO - ---------------------------------------------
2024-11-03 07:35 - INFO - Epoch: 07 | Time: 1m 49s
2024-11-03 07:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31393
2024-11-03 07:35 - INFO - 	 Train Loss: 0.154
2024-11-03 07:35 - INFO - 	 Val. Loss: 0.172
2024-11-03 07:35 - INFO - 	 ROC-AUC: 0.814
2024-11-03 07:35 - INFO - 	 PR-AUC: 0.314
2024-11-03 07:35 - INFO - 	 Recall for 0.4 precision: 0.223
2024-11-03 07:35 - INFO - 	 Best Val. Loss: 0.172
2024-11-03 07:35 - INFO - 	 Best ROC-AUC: 0.814
2024-11-03 07:35 - INFO - 	 Best PR-AUC: 0.314
2024-11-03 07:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-03 07:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 07:35 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 07:35 - INFO - ---------------------------------------------
2024-11-03 07:37 - INFO - ---------------------------------------------
2024-11-03 07:37 - INFO - Epoch: 08 | Time: 1m 49s
2024-11-03 07:37 - INFO - 	 Train Loss: 0.151
2024-11-03 07:37 - INFO - 	 Val. Loss: 0.163
2024-11-03 07:37 - INFO - 	 ROC-AUC: 0.829
2024-11-03 07:37 - INFO - 	 PR-AUC: 0.291
2024-11-03 07:37 - INFO - 	 Recall for 0.4 precision: 0.208
2024-11-03 07:37 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 07:37 - INFO - 	 Best ROC-AUC: 0.829
2024-11-03 07:37 - INFO - 	 Best PR-AUC: 0.314
2024-11-03 07:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.773
2024-11-03 07:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 07:37 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 07:37 - INFO - ---------------------------------------------
2024-11-03 07:39 - INFO - ---------------------------------------------
2024-11-03 07:39 - INFO - Epoch: 09 | Time: 1m 49s
2024-11-03 07:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33958
2024-11-03 07:39 - INFO - 	 Train Loss: 0.148
2024-11-03 07:39 - INFO - 	 Val. Loss: 0.158
2024-11-03 07:39 - INFO - 	 ROC-AUC: 0.844
2024-11-03 07:39 - INFO - 	 PR-AUC: 0.340
2024-11-03 07:39 - INFO - 	 Recall for 0.4 precision: 0.348
2024-11-03 07:39 - INFO - 	 Best Val. Loss: 0.158
2024-11-03 07:39 - INFO - 	 Best ROC-AUC: 0.844
2024-11-03 07:39 - INFO - 	 Best PR-AUC: 0.340
2024-11-03 07:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.785
2024-11-03 07:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.166
2024-11-03 07:39 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-03 07:39 - INFO - ---------------------------------------------
2024-11-03 07:41 - INFO - ---------------------------------------------
2024-11-03 07:41 - INFO - Epoch: 10 | Time: 1m 50s
2024-11-03 07:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34099
2024-11-03 07:41 - INFO - 	 Train Loss: 0.144
2024-11-03 07:41 - INFO - 	 Val. Loss: 0.140
2024-11-03 07:41 - INFO - 	 ROC-AUC: 0.885
2024-11-03 07:41 - INFO - 	 PR-AUC: 0.341
2024-11-03 07:41 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-03 07:41 - INFO - 	 Best Val. Loss: 0.140
2024-11-03 07:41 - INFO - 	 Best ROC-AUC: 0.885
2024-11-03 07:41 - INFO - 	 Best PR-AUC: 0.341
2024-11-03 07:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.812
2024-11-03 07:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.191
2024-11-03 07:41 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-03 07:41 - INFO - ---------------------------------------------
2024-11-03 07:44 - INFO - Fit the preprocessing pipeline
2024-11-03 07:44 - INFO - Training using device: mps
2024-11-03 07:44 - INFO - Creating generators
2024-11-03 07:44 - INFO - The model has 651,257 trainable parameters
2024-11-03 07:44 - INFO - * Model:
2024-11-03 07:44 - INFO - * -----------
2024-11-03 07:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 07:44 - INFO - * -----------
2024-11-03 07:44 - INFO - Evaluating model based on: aucpr
2024-11-03 07:44 - INFO - Training..

2024-11-03 07:45 - INFO - ---------------------------------------------
2024-11-03 07:45 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-03 07:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13307
2024-11-03 07:45 - INFO - 	 Train Loss: 0.252
2024-11-03 07:45 - INFO - 	 Val. Loss: 0.306
2024-11-03 07:45 - INFO - 	 ROC-AUC: 0.734
2024-11-03 07:45 - INFO - 	 PR-AUC: 0.133
2024-11-03 07:45 - INFO - 	 Recall for 0.4 precision: 0.033
2024-11-03 07:45 - INFO - 	 Best Val. Loss: 0.306
2024-11-03 07:45 - INFO - 	 Best ROC-AUC: 0.734
2024-11-03 07:45 - INFO - 	 Best PR-AUC: 0.133
2024-11-03 07:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.696
2024-11-03 07:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.100
2024-11-03 07:45 - INFO - 	 Best Recall for 0.4 precision: 0.033
2024-11-03 07:45 - INFO - ---------------------------------------------
2024-11-03 07:47 - INFO - ---------------------------------------------
2024-11-03 07:47 - INFO - Epoch: 02 | Time: 1m 46s
2024-11-03 07:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21332
2024-11-03 07:47 - INFO - 	 Train Loss: 0.210
2024-11-03 07:47 - INFO - 	 Val. Loss: 0.233
2024-11-03 07:47 - INFO - 	 ROC-AUC: 0.761
2024-11-03 07:47 - INFO - 	 PR-AUC: 0.213
2024-11-03 07:47 - INFO - 	 Recall for 0.4 precision: 0.140
2024-11-03 07:47 - INFO - 	 Best Val. Loss: 0.233
2024-11-03 07:47 - INFO - 	 Best ROC-AUC: 0.761
2024-11-03 07:47 - INFO - 	 Best PR-AUC: 0.213
2024-11-03 07:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-11-03 07:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.119
2024-11-03 07:47 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-03 07:47 - INFO - ---------------------------------------------
2024-11-03 07:49 - INFO - ---------------------------------------------
2024-11-03 07:49 - INFO - Epoch: 03 | Time: 1m 49s
2024-11-03 07:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26365
2024-11-03 07:49 - INFO - 	 Train Loss: 0.189
2024-11-03 07:49 - INFO - 	 Val. Loss: 0.197
2024-11-03 07:49 - INFO - 	 ROC-AUC: 0.792
2024-11-03 07:49 - INFO - 	 PR-AUC: 0.264
2024-11-03 07:49 - INFO - 	 Recall for 0.4 precision: 0.154
2024-11-03 07:49 - INFO - 	 Best Val. Loss: 0.197
2024-11-03 07:49 - INFO - 	 Best ROC-AUC: 0.792
2024-11-03 07:49 - INFO - 	 Best PR-AUC: 0.264
2024-11-03 07:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-03 07:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.120
2024-11-03 07:49 - INFO - 	 Best Recall for 0.4 precision: 0.154
2024-11-03 07:49 - INFO - ---------------------------------------------
2024-11-03 07:51 - INFO - ---------------------------------------------
2024-11-03 07:51 - INFO - Epoch: 04 | Time: 1m 53s
2024-11-03 07:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26485
2024-11-03 07:51 - INFO - 	 Train Loss: 0.174
2024-11-03 07:51 - INFO - 	 Val. Loss: 0.190
2024-11-03 07:51 - INFO - 	 ROC-AUC: 0.815
2024-11-03 07:51 - INFO - 	 PR-AUC: 0.265
2024-11-03 07:51 - INFO - 	 Recall for 0.4 precision: 0.176
2024-11-03 07:51 - INFO - 	 Best Val. Loss: 0.190
2024-11-03 07:51 - INFO - 	 Best ROC-AUC: 0.815
2024-11-03 07:51 - INFO - 	 Best PR-AUC: 0.265
2024-11-03 07:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 07:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 07:51 - INFO - 	 Best Recall for 0.4 precision: 0.176
2024-11-03 07:51 - INFO - ---------------------------------------------
2024-11-03 07:53 - INFO - ---------------------------------------------
2024-11-03 07:53 - INFO - Epoch: 05 | Time: 1m 48s
2024-11-03 07:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26705
2024-11-03 07:53 - INFO - 	 Train Loss: 0.167
2024-11-03 07:53 - INFO - 	 Val. Loss: 0.181
2024-11-03 07:53 - INFO - 	 ROC-AUC: 0.815
2024-11-03 07:53 - INFO - 	 PR-AUC: 0.267
2024-11-03 07:53 - INFO - 	 Recall for 0.4 precision: 0.198
2024-11-03 07:53 - INFO - 	 Best Val. Loss: 0.181
2024-11-03 07:53 - INFO - 	 Best ROC-AUC: 0.815
2024-11-03 07:53 - INFO - 	 Best PR-AUC: 0.267
2024-11-03 07:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 07:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 07:53 - INFO - 	 Best Recall for 0.4 precision: 0.198
2024-11-03 07:53 - INFO - ---------------------------------------------
2024-11-03 07:55 - INFO - ---------------------------------------------
2024-11-03 07:55 - INFO - Epoch: 06 | Time: 1m 49s
2024-11-03 07:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2844
2024-11-03 07:55 - INFO - 	 Train Loss: 0.158
2024-11-03 07:55 - INFO - 	 Val. Loss: 0.173
2024-11-03 07:55 - INFO - 	 ROC-AUC: 0.835
2024-11-03 07:55 - INFO - 	 PR-AUC: 0.284
2024-11-03 07:55 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-03 07:55 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 07:55 - INFO - 	 Best ROC-AUC: 0.835
2024-11-03 07:55 - INFO - 	 Best PR-AUC: 0.284
2024-11-03 07:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.784
2024-11-03 07:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 07:55 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-03 07:55 - INFO - ---------------------------------------------
2024-11-03 07:56 - INFO - ---------------------------------------------
2024-11-03 07:56 - INFO - Epoch: 07 | Time: 1m 49s
2024-11-03 07:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31568
2024-11-03 07:56 - INFO - 	 Train Loss: 0.154
2024-11-03 07:56 - INFO - 	 Val. Loss: 0.175
2024-11-03 07:56 - INFO - 	 ROC-AUC: 0.849
2024-11-03 07:56 - INFO - 	 PR-AUC: 0.316
2024-11-03 07:56 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-03 07:56 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 07:56 - INFO - 	 Best ROC-AUC: 0.849
2024-11-03 07:56 - INFO - 	 Best PR-AUC: 0.316
2024-11-03 07:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.794
2024-11-03 07:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 07:56 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-03 07:56 - INFO - ---------------------------------------------
2024-11-03 07:58 - INFO - ---------------------------------------------
2024-11-03 07:58 - INFO - Epoch: 08 | Time: 1m 49s
2024-11-03 07:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34832
2024-11-03 07:58 - INFO - 	 Train Loss: 0.151
2024-11-03 07:58 - INFO - 	 Val. Loss: 0.163
2024-11-03 07:58 - INFO - 	 ROC-AUC: 0.850
2024-11-03 07:58 - INFO - 	 PR-AUC: 0.348
2024-11-03 07:58 - INFO - 	 Recall for 0.4 precision: 0.314
2024-11-03 07:58 - INFO - 	 Best Val. Loss: 0.163
2024-11-03 07:58 - INFO - 	 Best ROC-AUC: 0.850
2024-11-03 07:58 - INFO - 	 Best PR-AUC: 0.348
2024-11-03 07:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.792
2024-11-03 07:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-03 07:58 - INFO - 	 Best Recall for 0.4 precision: 0.314
2024-11-03 07:58 - INFO - ---------------------------------------------
2024-11-03 08:00 - INFO - ---------------------------------------------
2024-11-03 08:00 - INFO - Epoch: 09 | Time: 1m 49s
2024-11-03 08:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34853
2024-11-03 08:00 - INFO - 	 Train Loss: 0.150
2024-11-03 08:00 - INFO - 	 Val. Loss: 0.152
2024-11-03 08:00 - INFO - 	 ROC-AUC: 0.866
2024-11-03 08:00 - INFO - 	 PR-AUC: 0.349
2024-11-03 08:00 - INFO - 	 Recall for 0.4 precision: 0.371
2024-11-03 08:00 - INFO - 	 Best Val. Loss: 0.152
2024-11-03 08:00 - INFO - 	 Best ROC-AUC: 0.866
2024-11-03 08:00 - INFO - 	 Best PR-AUC: 0.349
2024-11-03 08:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.792
2024-11-03 08:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 08:00 - INFO - 	 Best Recall for 0.4 precision: 0.371
2024-11-03 08:00 - INFO - ---------------------------------------------
2024-11-03 08:02 - INFO - ---------------------------------------------
2024-11-03 08:02 - INFO - Epoch: 10 | Time: 1m 49s
2024-11-03 08:02 - INFO - 	 Train Loss: 0.148
2024-11-03 08:02 - INFO - 	 Val. Loss: 0.151
2024-11-03 08:02 - INFO - 	 ROC-AUC: 0.873
2024-11-03 08:02 - INFO - 	 PR-AUC: 0.331
2024-11-03 08:02 - INFO - 	 Recall for 0.4 precision: 0.307
2024-11-03 08:02 - INFO - 	 Best Val. Loss: 0.151
2024-11-03 08:02 - INFO - 	 Best ROC-AUC: 0.873
2024-11-03 08:02 - INFO - 	 Best PR-AUC: 0.349
2024-11-03 08:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.792
2024-11-03 08:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 08:02 - INFO - 	 Best Recall for 0.4 precision: 0.371
2024-11-03 08:02 - INFO - ---------------------------------------------
2024-11-03 08:05 - INFO - Fit the preprocessing pipeline
2024-11-03 08:05 - INFO - Training using device: mps
2024-11-03 08:05 - INFO - Creating generators
2024-11-03 08:05 - INFO - The model has 651,257 trainable parameters
2024-11-03 08:05 - INFO - * Model:
2024-11-03 08:05 - INFO - * -----------
2024-11-03 08:05 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 08:05 - INFO - * -----------
2024-11-03 08:05 - INFO - Evaluating model based on: aucpr
2024-11-03 08:05 - INFO - Training..

2024-11-03 08:06 - INFO - ---------------------------------------------
2024-11-03 08:06 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-03 08:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25222
2024-11-03 08:06 - INFO - 	 Train Loss: 0.251
2024-11-03 08:06 - INFO - 	 Val. Loss: 0.280
2024-11-03 08:06 - INFO - 	 ROC-AUC: 0.789
2024-11-03 08:06 - INFO - 	 PR-AUC: 0.252
2024-11-03 08:06 - INFO - 	 Recall for 0.4 precision: 0.198
2024-11-03 08:06 - INFO - 	 Best Val. Loss: 0.280
2024-11-03 08:06 - INFO - 	 Best ROC-AUC: 0.789
2024-11-03 08:06 - INFO - 	 Best PR-AUC: 0.252
2024-11-03 08:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 08:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.129
2024-11-03 08:06 - INFO - 	 Best Recall for 0.4 precision: 0.198
2024-11-03 08:06 - INFO - ---------------------------------------------
2024-11-03 08:08 - INFO - ---------------------------------------------
2024-11-03 08:08 - INFO - Epoch: 02 | Time: 1m 46s
2024-11-03 08:08 - INFO - 	 Train Loss: 0.207
2024-11-03 08:08 - INFO - 	 Val. Loss: 0.237
2024-11-03 08:08 - INFO - 	 ROC-AUC: 0.775
2024-11-03 08:08 - INFO - 	 PR-AUC: 0.227
2024-11-03 08:08 - INFO - 	 Recall for 0.4 precision: 0.182
2024-11-03 08:08 - INFO - 	 Best Val. Loss: 0.237
2024-11-03 08:08 - INFO - 	 Best ROC-AUC: 0.789
2024-11-03 08:08 - INFO - 	 Best PR-AUC: 0.252
2024-11-03 08:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 08:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.129
2024-11-03 08:08 - INFO - 	 Best Recall for 0.4 precision: 0.198
2024-11-03 08:08 - INFO - ---------------------------------------------
2024-11-03 08:10 - INFO - ---------------------------------------------
2024-11-03 08:10 - INFO - Epoch: 03 | Time: 1m 49s
2024-11-03 08:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26219
2024-11-03 08:10 - INFO - 	 Train Loss: 0.186
2024-11-03 08:10 - INFO - 	 Val. Loss: 0.211
2024-11-03 08:10 - INFO - 	 ROC-AUC: 0.781
2024-11-03 08:10 - INFO - 	 PR-AUC: 0.262
2024-11-03 08:10 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-03 08:10 - INFO - 	 Best Val. Loss: 0.211
2024-11-03 08:10 - INFO - 	 Best ROC-AUC: 0.789
2024-11-03 08:10 - INFO - 	 Best PR-AUC: 0.262
2024-11-03 08:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 08:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-03 08:10 - INFO - 	 Best Recall for 0.4 precision: 0.198
2024-11-03 08:10 - INFO - ---------------------------------------------
2024-11-03 08:12 - INFO - ---------------------------------------------
2024-11-03 08:12 - INFO - Epoch: 04 | Time: 1m 46s
2024-11-03 08:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29667
2024-11-03 08:12 - INFO - 	 Train Loss: 0.172
2024-11-03 08:12 - INFO - 	 Val. Loss: 0.203
2024-11-03 08:12 - INFO - 	 ROC-AUC: 0.801
2024-11-03 08:12 - INFO - 	 PR-AUC: 0.297
2024-11-03 08:12 - INFO - 	 Recall for 0.4 precision: 0.302
2024-11-03 08:12 - INFO - 	 Best Val. Loss: 0.203
2024-11-03 08:12 - INFO - 	 Best ROC-AUC: 0.801
2024-11-03 08:12 - INFO - 	 Best PR-AUC: 0.297
2024-11-03 08:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-03 08:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 08:12 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-03 08:12 - INFO - ---------------------------------------------
2024-11-03 08:13 - INFO - ---------------------------------------------
2024-11-03 08:13 - INFO - Epoch: 05 | Time: 1m 47s
2024-11-03 08:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30314
2024-11-03 08:13 - INFO - 	 Train Loss: 0.164
2024-11-03 08:13 - INFO - 	 Val. Loss: 0.187
2024-11-03 08:13 - INFO - 	 ROC-AUC: 0.826
2024-11-03 08:13 - INFO - 	 PR-AUC: 0.303
2024-11-03 08:13 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-03 08:13 - INFO - 	 Best Val. Loss: 0.187
2024-11-03 08:13 - INFO - 	 Best ROC-AUC: 0.826
2024-11-03 08:13 - INFO - 	 Best PR-AUC: 0.303
2024-11-03 08:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 08:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 08:13 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-03 08:13 - INFO - ---------------------------------------------
2024-11-03 08:15 - INFO - ---------------------------------------------
2024-11-03 08:15 - INFO - Epoch: 06 | Time: 1m 50s
2024-11-03 08:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36502
2024-11-03 08:15 - INFO - 	 Train Loss: 0.156
2024-11-03 08:15 - INFO - 	 Val. Loss: 0.154
2024-11-03 08:15 - INFO - 	 ROC-AUC: 0.869
2024-11-03 08:15 - INFO - 	 PR-AUC: 0.365
2024-11-03 08:15 - INFO - 	 Recall for 0.4 precision: 0.439
2024-11-03 08:15 - INFO - 	 Best Val. Loss: 0.154
2024-11-03 08:15 - INFO - 	 Best ROC-AUC: 0.869
2024-11-03 08:15 - INFO - 	 Best PR-AUC: 0.365
2024-11-03 08:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.790
2024-11-03 08:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 08:15 - INFO - 	 Best Recall for 0.4 precision: 0.439
2024-11-03 08:15 - INFO - ---------------------------------------------
2024-11-03 08:17 - INFO - ---------------------------------------------
2024-11-03 08:17 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-03 08:17 - INFO - 	 Train Loss: 0.149
2024-11-03 08:17 - INFO - 	 Val. Loss: 0.144
2024-11-03 08:17 - INFO - 	 ROC-AUC: 0.906
2024-11-03 08:17 - INFO - 	 PR-AUC: 0.329
2024-11-03 08:17 - INFO - 	 Recall for 0.4 precision: 0.459
2024-11-03 08:17 - INFO - 	 Best Val. Loss: 0.144
2024-11-03 08:17 - INFO - 	 Best ROC-AUC: 0.906
2024-11-03 08:17 - INFO - 	 Best PR-AUC: 0.365
2024-11-03 08:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.873
2024-11-03 08:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 08:17 - INFO - 	 Best Recall for 0.4 precision: 0.459
2024-11-03 08:17 - INFO - ---------------------------------------------
2024-11-03 08:19 - INFO - ---------------------------------------------
2024-11-03 08:19 - INFO - Epoch: 08 | Time: 1m 53s
2024-11-03 08:19 - INFO - 	 Train Loss: 0.135
2024-11-03 08:19 - INFO - 	 Val. Loss: 0.141
2024-11-03 08:19 - INFO - 	 ROC-AUC: 0.907
2024-11-03 08:19 - INFO - 	 PR-AUC: 0.308
2024-11-03 08:19 - INFO - 	 Recall for 0.4 precision: 0.361
2024-11-03 08:19 - INFO - 	 Best Val. Loss: 0.141
2024-11-03 08:19 - INFO - 	 Best ROC-AUC: 0.907
2024-11-03 08:19 - INFO - 	 Best PR-AUC: 0.365
2024-11-03 08:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.871
2024-11-03 08:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 08:19 - INFO - 	 Best Recall for 0.4 precision: 0.459
2024-11-03 08:19 - INFO - ---------------------------------------------
2024-11-03 08:21 - INFO - ---------------------------------------------
2024-11-03 08:21 - INFO - Epoch: 09 | Time: 1m 54s
2024-11-03 08:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38593
2024-11-03 08:21 - INFO - 	 Train Loss: 0.122
2024-11-03 08:21 - INFO - 	 Val. Loss: 0.130
2024-11-03 08:21 - INFO - 	 ROC-AUC: 0.897
2024-11-03 08:21 - INFO - 	 PR-AUC: 0.386
2024-11-03 08:21 - INFO - 	 Recall for 0.4 precision: 0.554
2024-11-03 08:21 - INFO - 	 Best Val. Loss: 0.130
2024-11-03 08:21 - INFO - 	 Best ROC-AUC: 0.907
2024-11-03 08:21 - INFO - 	 Best PR-AUC: 0.386
2024-11-03 08:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.871
2024-11-03 08:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-03 08:21 - INFO - 	 Best Recall for 0.4 precision: 0.554
2024-11-03 08:21 - INFO - ---------------------------------------------
2024-11-03 08:23 - INFO - ---------------------------------------------
2024-11-03 08:23 - INFO - Epoch: 10 | Time: 1m 56s
2024-11-03 08:23 - INFO - 	 Train Loss: 0.111
2024-11-03 08:23 - INFO - 	 Val. Loss: 0.139
2024-11-03 08:23 - INFO - 	 ROC-AUC: 0.873
2024-11-03 08:23 - INFO - 	 PR-AUC: 0.356
2024-11-03 08:23 - INFO - 	 Recall for 0.4 precision: 0.468
2024-11-03 08:23 - INFO - 	 Best Val. Loss: 0.130
2024-11-03 08:23 - INFO - 	 Best ROC-AUC: 0.907
2024-11-03 08:23 - INFO - 	 Best PR-AUC: 0.386
2024-11-03 08:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.871
2024-11-03 08:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-03 08:23 - INFO - 	 Best Recall for 0.4 precision: 0.554
2024-11-03 08:23 - INFO - ---------------------------------------------
2024-11-03 08:26 - INFO - Fit the preprocessing pipeline
2024-11-03 08:26 - INFO - Training using device: mps
2024-11-03 08:26 - INFO - Creating generators
2024-11-03 08:26 - INFO - The model has 651,257 trainable parameters
2024-11-03 08:26 - INFO - * Model:
2024-11-03 08:26 - INFO - * -----------
2024-11-03 08:26 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 08:26 - INFO - * -----------
2024-11-03 08:26 - INFO - Evaluating model based on: aucpr
2024-11-03 08:26 - INFO - Training..

2024-11-03 08:27 - INFO - ---------------------------------------------
2024-11-03 08:27 - INFO - Epoch: 01 | Time: 1m 45s
2024-11-03 08:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22917
2024-11-03 08:27 - INFO - 	 Train Loss: 0.252
2024-11-03 08:27 - INFO - 	 Val. Loss: 0.291
2024-11-03 08:27 - INFO - 	 ROC-AUC: 0.770
2024-11-03 08:27 - INFO - 	 PR-AUC: 0.229
2024-11-03 08:27 - INFO - 	 Recall for 0.4 precision: 0.140
2024-11-03 08:27 - INFO - 	 Best Val. Loss: 0.291
2024-11-03 08:27 - INFO - 	 Best ROC-AUC: 0.770
2024-11-03 08:27 - INFO - 	 Best PR-AUC: 0.229
2024-11-03 08:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.739
2024-11-03 08:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.115
2024-11-03 08:27 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-03 08:27 - INFO - ---------------------------------------------
2024-11-03 08:29 - INFO - ---------------------------------------------
2024-11-03 08:29 - INFO - Epoch: 02 | Time: 1m 57s
2024-11-03 08:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24615
2024-11-03 08:29 - INFO - 	 Train Loss: 0.208
2024-11-03 08:29 - INFO - 	 Val. Loss: 0.246
2024-11-03 08:29 - INFO - 	 ROC-AUC: 0.748
2024-11-03 08:29 - INFO - 	 PR-AUC: 0.246
2024-11-03 08:29 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-03 08:29 - INFO - 	 Best Val. Loss: 0.246
2024-11-03 08:29 - INFO - 	 Best ROC-AUC: 0.770
2024-11-03 08:29 - INFO - 	 Best PR-AUC: 0.246
2024-11-03 08:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.739
2024-11-03 08:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-03 08:29 - INFO - 	 Best Recall for 0.4 precision: 0.273
2024-11-03 08:29 - INFO - ---------------------------------------------
2024-11-03 08:31 - INFO - ---------------------------------------------
2024-11-03 08:31 - INFO - Epoch: 03 | Time: 1m 58s
2024-11-03 08:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2618
2024-11-03 08:31 - INFO - 	 Train Loss: 0.186
2024-11-03 08:31 - INFO - 	 Val. Loss: 0.220
2024-11-03 08:31 - INFO - 	 ROC-AUC: 0.772
2024-11-03 08:31 - INFO - 	 PR-AUC: 0.262
2024-11-03 08:31 - INFO - 	 Recall for 0.4 precision: 0.315
2024-11-03 08:31 - INFO - 	 Best Val. Loss: 0.220
2024-11-03 08:31 - INFO - 	 Best ROC-AUC: 0.772
2024-11-03 08:31 - INFO - 	 Best PR-AUC: 0.262
2024-11-03 08:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.740
2024-11-03 08:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 08:31 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-03 08:31 - INFO - ---------------------------------------------
2024-11-03 08:33 - INFO - ---------------------------------------------
2024-11-03 08:33 - INFO - Epoch: 04 | Time: 1m 58s
2024-11-03 08:33 - INFO - 	 Train Loss: 0.172
2024-11-03 08:33 - INFO - 	 Val. Loss: 0.205
2024-11-03 08:33 - INFO - 	 ROC-AUC: 0.774
2024-11-03 08:33 - INFO - 	 PR-AUC: 0.250
2024-11-03 08:33 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-03 08:33 - INFO - 	 Best Val. Loss: 0.205
2024-11-03 08:33 - INFO - 	 Best ROC-AUC: 0.774
2024-11-03 08:33 - INFO - 	 Best PR-AUC: 0.262
2024-11-03 08:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.745
2024-11-03 08:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 08:33 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-03 08:33 - INFO - ---------------------------------------------
2024-11-03 08:35 - INFO - ---------------------------------------------
2024-11-03 08:35 - INFO - Epoch: 05 | Time: 1m 59s
2024-11-03 08:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26323
2024-11-03 08:35 - INFO - 	 Train Loss: 0.164
2024-11-03 08:35 - INFO - 	 Val. Loss: 0.189
2024-11-03 08:35 - INFO - 	 ROC-AUC: 0.789
2024-11-03 08:35 - INFO - 	 PR-AUC: 0.263
2024-11-03 08:35 - INFO - 	 Recall for 0.4 precision: 0.299
2024-11-03 08:35 - INFO - 	 Best Val. Loss: 0.189
2024-11-03 08:35 - INFO - 	 Best ROC-AUC: 0.789
2024-11-03 08:35 - INFO - 	 Best PR-AUC: 0.263
2024-11-03 08:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-03 08:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 08:35 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-03 08:35 - INFO - ---------------------------------------------
2024-11-03 08:37 - INFO - ---------------------------------------------
2024-11-03 08:37 - INFO - Epoch: 06 | Time: 2m 2s
2024-11-03 08:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27684
2024-11-03 08:37 - INFO - 	 Train Loss: 0.159
2024-11-03 08:37 - INFO - 	 Val. Loss: 0.180
2024-11-03 08:37 - INFO - 	 ROC-AUC: 0.800
2024-11-03 08:37 - INFO - 	 PR-AUC: 0.277
2024-11-03 08:37 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-03 08:37 - INFO - 	 Best Val. Loss: 0.180
2024-11-03 08:37 - INFO - 	 Best ROC-AUC: 0.800
2024-11-03 08:37 - INFO - 	 Best PR-AUC: 0.277
2024-11-03 08:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-03 08:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-03 08:37 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-03 08:37 - INFO - ---------------------------------------------
2024-11-03 08:39 - INFO - ---------------------------------------------
2024-11-03 08:39 - INFO - Epoch: 07 | Time: 2m 2s
2024-11-03 08:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29057
2024-11-03 08:39 - INFO - 	 Train Loss: 0.154
2024-11-03 08:39 - INFO - 	 Val. Loss: 0.178
2024-11-03 08:39 - INFO - 	 ROC-AUC: 0.798
2024-11-03 08:39 - INFO - 	 PR-AUC: 0.291
2024-11-03 08:39 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-03 08:39 - INFO - 	 Best Val. Loss: 0.178
2024-11-03 08:39 - INFO - 	 Best ROC-AUC: 0.800
2024-11-03 08:39 - INFO - 	 Best PR-AUC: 0.291
2024-11-03 08:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-03 08:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 08:39 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-03 08:39 - INFO - ---------------------------------------------
2024-11-03 08:41 - INFO - ---------------------------------------------
2024-11-03 08:41 - INFO - Epoch: 08 | Time: 2m 2s
2024-11-03 08:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31099
2024-11-03 08:41 - INFO - 	 Train Loss: 0.151
2024-11-03 08:41 - INFO - 	 Val. Loss: 0.170
2024-11-03 08:41 - INFO - 	 ROC-AUC: 0.813
2024-11-03 08:41 - INFO - 	 PR-AUC: 0.311
2024-11-03 08:41 - INFO - 	 Recall for 0.4 precision: 0.377
2024-11-03 08:41 - INFO - 	 Best Val. Loss: 0.170
2024-11-03 08:41 - INFO - 	 Best ROC-AUC: 0.813
2024-11-03 08:41 - INFO - 	 Best PR-AUC: 0.311
2024-11-03 08:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-03 08:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 08:41 - INFO - 	 Best Recall for 0.4 precision: 0.377
2024-11-03 08:41 - INFO - ---------------------------------------------
2024-11-03 08:43 - INFO - ---------------------------------------------
2024-11-03 08:43 - INFO - Epoch: 09 | Time: 2m 1s
2024-11-03 08:43 - INFO - 	 Train Loss: 0.150
2024-11-03 08:43 - INFO - 	 Val. Loss: 0.173
2024-11-03 08:43 - INFO - 	 ROC-AUC: 0.800
2024-11-03 08:43 - INFO - 	 PR-AUC: 0.279
2024-11-03 08:43 - INFO - 	 Recall for 0.4 precision: 0.397
2024-11-03 08:43 - INFO - 	 Best Val. Loss: 0.170
2024-11-03 08:43 - INFO - 	 Best ROC-AUC: 0.813
2024-11-03 08:43 - INFO - 	 Best PR-AUC: 0.311
2024-11-03 08:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-03 08:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 08:43 - INFO - 	 Best Recall for 0.4 precision: 0.397
2024-11-03 08:43 - INFO - ---------------------------------------------
2024-11-03 08:46 - INFO - ---------------------------------------------
2024-11-03 08:46 - INFO - Epoch: 10 | Time: 2m 2s
2024-11-03 08:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33535
2024-11-03 08:46 - INFO - 	 Train Loss: 0.149
2024-11-03 08:46 - INFO - 	 Val. Loss: 0.166
2024-11-03 08:46 - INFO - 	 ROC-AUC: 0.826
2024-11-03 08:46 - INFO - 	 PR-AUC: 0.335
2024-11-03 08:46 - INFO - 	 Recall for 0.4 precision: 0.380
2024-11-03 08:46 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 08:46 - INFO - 	 Best ROC-AUC: 0.826
2024-11-03 08:46 - INFO - 	 Best PR-AUC: 0.335
2024-11-03 08:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.772
2024-11-03 08:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-03 08:46 - INFO - 	 Best Recall for 0.4 precision: 0.397
2024-11-03 08:46 - INFO - ---------------------------------------------
2024-11-03 08:48 - INFO - Fit the preprocessing pipeline
2024-11-03 08:48 - INFO - Training using device: mps
2024-11-03 08:48 - INFO - Creating generators
2024-11-03 08:48 - INFO - The model has 651,257 trainable parameters
2024-11-03 08:48 - INFO - * Model:
2024-11-03 08:48 - INFO - * -----------
2024-11-03 08:48 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 08:48 - INFO - * -----------
2024-11-03 08:48 - INFO - Evaluating model based on: aucpr
2024-11-03 08:48 - INFO - Training..

2024-11-03 08:50 - INFO - ---------------------------------------------
2024-11-03 08:50 - INFO - Epoch: 01 | Time: 1m 52s
2024-11-03 08:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2036
2024-11-03 08:50 - INFO - 	 Train Loss: 0.256
2024-11-03 08:50 - INFO - 	 Val. Loss: 0.285
2024-11-03 08:50 - INFO - 	 ROC-AUC: 0.737
2024-11-03 08:50 - INFO - 	 PR-AUC: 0.204
2024-11-03 08:50 - INFO - 	 Recall for 0.4 precision: 0.020
2024-11-03 08:50 - INFO - 	 Best Val. Loss: 0.285
2024-11-03 08:50 - INFO - 	 Best ROC-AUC: 0.737
2024-11-03 08:50 - INFO - 	 Best PR-AUC: 0.204
2024-11-03 08:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-03 08:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 08:50 - INFO - 	 Best Recall for 0.4 precision: 0.020
2024-11-03 08:50 - INFO - ---------------------------------------------
2024-11-03 08:52 - INFO - ---------------------------------------------
2024-11-03 08:52 - INFO - Epoch: 02 | Time: 2m 3s
2024-11-03 08:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24179
2024-11-03 08:52 - INFO - 	 Train Loss: 0.205
2024-11-03 08:52 - INFO - 	 Val. Loss: 0.239
2024-11-03 08:52 - INFO - 	 ROC-AUC: 0.786
2024-11-03 08:52 - INFO - 	 PR-AUC: 0.242
2024-11-03 08:52 - INFO - 	 Recall for 0.4 precision: 0.146
2024-11-03 08:52 - INFO - 	 Best Val. Loss: 0.239
2024-11-03 08:52 - INFO - 	 Best ROC-AUC: 0.786
2024-11-03 08:52 - INFO - 	 Best PR-AUC: 0.242
2024-11-03 08:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 08:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-03 08:52 - INFO - 	 Best Recall for 0.4 precision: 0.146
2024-11-03 08:52 - INFO - ---------------------------------------------
2024-11-03 08:54 - INFO - ---------------------------------------------
2024-11-03 08:54 - INFO - Epoch: 03 | Time: 2m 3s
2024-11-03 08:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24191
2024-11-03 08:54 - INFO - 	 Train Loss: 0.187
2024-11-03 08:54 - INFO - 	 Val. Loss: 0.204
2024-11-03 08:54 - INFO - 	 ROC-AUC: 0.772
2024-11-03 08:54 - INFO - 	 PR-AUC: 0.242
2024-11-03 08:54 - INFO - 	 Recall for 0.4 precision: 0.120
2024-11-03 08:54 - INFO - 	 Best Val. Loss: 0.204
2024-11-03 08:54 - INFO - 	 Best ROC-AUC: 0.786
2024-11-03 08:54 - INFO - 	 Best PR-AUC: 0.242
2024-11-03 08:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 08:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-03 08:54 - INFO - 	 Best Recall for 0.4 precision: 0.146
2024-11-03 08:54 - INFO - ---------------------------------------------
2024-11-03 08:56 - INFO - ---------------------------------------------
2024-11-03 08:56 - INFO - Epoch: 04 | Time: 2m 3s
2024-11-03 08:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26802
2024-11-03 08:56 - INFO - 	 Train Loss: 0.172
2024-11-03 08:56 - INFO - 	 Val. Loss: 0.219
2024-11-03 08:56 - INFO - 	 ROC-AUC: 0.793
2024-11-03 08:56 - INFO - 	 PR-AUC: 0.268
2024-11-03 08:56 - INFO - 	 Recall for 0.4 precision: 0.229
2024-11-03 08:56 - INFO - 	 Best Val. Loss: 0.204
2024-11-03 08:56 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 08:56 - INFO - 	 Best PR-AUC: 0.268
2024-11-03 08:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-03 08:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-03 08:56 - INFO - 	 Best Recall for 0.4 precision: 0.229
2024-11-03 08:56 - INFO - ---------------------------------------------
2024-11-03 08:58 - INFO - ---------------------------------------------
2024-11-03 08:58 - INFO - Epoch: 05 | Time: 2m 3s
2024-11-03 08:58 - INFO - 	 Train Loss: 0.171
2024-11-03 08:58 - INFO - 	 Val. Loss: 0.203
2024-11-03 08:58 - INFO - 	 ROC-AUC: 0.784
2024-11-03 08:58 - INFO - 	 PR-AUC: 0.264
2024-11-03 08:58 - INFO - 	 Recall for 0.4 precision: 0.319
2024-11-03 08:58 - INFO - 	 Best Val. Loss: 0.203
2024-11-03 08:58 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 08:58 - INFO - 	 Best PR-AUC: 0.268
2024-11-03 08:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-03 08:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-03 08:58 - INFO - 	 Best Recall for 0.4 precision: 0.319
2024-11-03 08:58 - INFO - ---------------------------------------------
2024-11-03 09:00 - INFO - ---------------------------------------------
2024-11-03 09:00 - INFO - Epoch: 06 | Time: 2m 3s
2024-11-03 09:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37131
2024-11-03 09:00 - INFO - 	 Train Loss: 0.160
2024-11-03 09:00 - INFO - 	 Val. Loss: 0.159
2024-11-03 09:00 - INFO - 	 ROC-AUC: 0.853
2024-11-03 09:00 - INFO - 	 PR-AUC: 0.371
2024-11-03 09:00 - INFO - 	 Recall for 0.4 precision: 0.415
2024-11-03 09:00 - INFO - 	 Best Val. Loss: 0.159
2024-11-03 09:00 - INFO - 	 Best ROC-AUC: 0.853
2024-11-03 09:00 - INFO - 	 Best PR-AUC: 0.371
2024-11-03 09:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.792
2024-11-03 09:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-03 09:00 - INFO - 	 Best Recall for 0.4 precision: 0.415
2024-11-03 09:00 - INFO - ---------------------------------------------
2024-11-03 09:02 - INFO - ---------------------------------------------
2024-11-03 09:02 - INFO - Epoch: 07 | Time: 2m 4s
2024-11-03 09:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38754
2024-11-03 09:02 - INFO - 	 Train Loss: 0.148
2024-11-03 09:02 - INFO - 	 Val. Loss: 0.135
2024-11-03 09:02 - INFO - 	 ROC-AUC: 0.922
2024-11-03 09:02 - INFO - 	 PR-AUC: 0.388
2024-11-03 09:02 - INFO - 	 Recall for 0.4 precision: 0.488
2024-11-03 09:02 - INFO - 	 Best Val. Loss: 0.135
2024-11-03 09:02 - INFO - 	 Best ROC-AUC: 0.922
2024-11-03 09:02 - INFO - 	 Best PR-AUC: 0.388
2024-11-03 09:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.876
2024-11-03 09:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.231
2024-11-03 09:02 - INFO - 	 Best Recall for 0.4 precision: 0.488
2024-11-03 09:02 - INFO - ---------------------------------------------
2024-11-03 09:05 - INFO - ---------------------------------------------
2024-11-03 09:05 - INFO - Epoch: 08 | Time: 2m 5s
2024-11-03 09:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42982
2024-11-03 09:05 - INFO - 	 Train Loss: 0.132
2024-11-03 09:05 - INFO - 	 Val. Loss: 0.140
2024-11-03 09:05 - INFO - 	 ROC-AUC: 0.949
2024-11-03 09:05 - INFO - 	 PR-AUC: 0.430
2024-11-03 09:05 - INFO - 	 Recall for 0.4 precision: 0.654
2024-11-03 09:05 - INFO - 	 Best Val. Loss: 0.135
2024-11-03 09:05 - INFO - 	 Best ROC-AUC: 0.949
2024-11-03 09:05 - INFO - 	 Best PR-AUC: 0.430
2024-11-03 09:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.899
2024-11-03 09:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.219
2024-11-03 09:05 - INFO - 	 Best Recall for 0.4 precision: 0.654
2024-11-03 09:05 - INFO - ---------------------------------------------
2024-11-03 09:07 - INFO - ---------------------------------------------
2024-11-03 09:07 - INFO - Epoch: 09 | Time: 2m 4s
2024-11-03 09:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59405
2024-11-03 09:07 - INFO - 	 Train Loss: 0.118
2024-11-03 09:07 - INFO - 	 Val. Loss: 0.104
2024-11-03 09:07 - INFO - 	 ROC-AUC: 0.970
2024-11-03 09:07 - INFO - 	 PR-AUC: 0.594
2024-11-03 09:07 - INFO - 	 Recall for 0.4 precision: 0.909
2024-11-03 09:07 - INFO - 	 Best Val. Loss: 0.104
2024-11-03 09:07 - INFO - 	 Best ROC-AUC: 0.970
2024-11-03 09:07 - INFO - 	 Best PR-AUC: 0.594
2024-11-03 09:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-03 09:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.393
2024-11-03 09:07 - INFO - 	 Best Recall for 0.4 precision: 0.909
2024-11-03 09:07 - INFO - ---------------------------------------------
2024-11-03 09:09 - INFO - ---------------------------------------------
2024-11-03 09:09 - INFO - Epoch: 10 | Time: 2m 4s
2024-11-03 09:09 - INFO - 	 Train Loss: 0.107
2024-11-03 09:09 - INFO - 	 Val. Loss: 0.102
2024-11-03 09:09 - INFO - 	 ROC-AUC: 0.968
2024-11-03 09:09 - INFO - 	 PR-AUC: 0.549
2024-11-03 09:09 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 09:09 - INFO - 	 Best Val. Loss: 0.102
2024-11-03 09:09 - INFO - 	 Best ROC-AUC: 0.970
2024-11-03 09:09 - INFO - 	 Best PR-AUC: 0.594
2024-11-03 09:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-03 09:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.393
2024-11-03 09:09 - INFO - 	 Best Recall for 0.4 precision: 0.909
2024-11-03 09:09 - INFO - ---------------------------------------------
2024-11-03 09:11 - INFO - Fit the preprocessing pipeline
2024-11-03 09:11 - INFO - Training using device: mps
2024-11-03 09:11 - INFO - Creating generators
2024-11-03 09:11 - INFO - The model has 651,257 trainable parameters
2024-11-03 09:11 - INFO - * Model:
2024-11-03 09:11 - INFO - * -----------
2024-11-03 09:11 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 09:11 - INFO - * -----------
2024-11-03 09:11 - INFO - Evaluating model based on: aucpr
2024-11-03 09:11 - INFO - Training..

2024-11-03 09:13 - INFO - ---------------------------------------------
2024-11-03 09:13 - INFO - Epoch: 01 | Time: 1m 51s
2024-11-03 09:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13912
2024-11-03 09:13 - INFO - 	 Train Loss: 0.256
2024-11-03 09:13 - INFO - 	 Val. Loss: 0.345
2024-11-03 09:13 - INFO - 	 ROC-AUC: 0.711
2024-11-03 09:13 - INFO - 	 PR-AUC: 0.139
2024-11-03 09:13 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 09:13 - INFO - 	 Best Val. Loss: 0.345
2024-11-03 09:13 - INFO - 	 Best ROC-AUC: 0.711
2024-11-03 09:13 - INFO - 	 Best PR-AUC: 0.139
2024-11-03 09:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.655
2024-11-03 09:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.116
2024-11-03 09:13 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-03 09:13 - INFO - ---------------------------------------------
2024-11-03 09:15 - INFO - ---------------------------------------------
2024-11-03 09:15 - INFO - Epoch: 02 | Time: 2m 0s
2024-11-03 09:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21159
2024-11-03 09:15 - INFO - 	 Train Loss: 0.209
2024-11-03 09:15 - INFO - 	 Val. Loss: 0.266
2024-11-03 09:15 - INFO - 	 ROC-AUC: 0.753
2024-11-03 09:15 - INFO - 	 PR-AUC: 0.212
2024-11-03 09:15 - INFO - 	 Recall for 0.4 precision: 0.166
2024-11-03 09:15 - INFO - 	 Best Val. Loss: 0.266
2024-11-03 09:15 - INFO - 	 Best ROC-AUC: 0.753
2024-11-03 09:15 - INFO - 	 Best PR-AUC: 0.212
2024-11-03 09:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-11-03 09:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-03 09:15 - INFO - 	 Best Recall for 0.4 precision: 0.166
2024-11-03 09:15 - INFO - ---------------------------------------------
2024-11-03 09:17 - INFO - ---------------------------------------------
2024-11-03 09:17 - INFO - Epoch: 03 | Time: 2m 1s
2024-11-03 09:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26499
2024-11-03 09:17 - INFO - 	 Train Loss: 0.183
2024-11-03 09:17 - INFO - 	 Val. Loss: 0.218
2024-11-03 09:17 - INFO - 	 ROC-AUC: 0.777
2024-11-03 09:17 - INFO - 	 PR-AUC: 0.265
2024-11-03 09:17 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-03 09:17 - INFO - 	 Best Val. Loss: 0.218
2024-11-03 09:17 - INFO - 	 Best ROC-AUC: 0.777
2024-11-03 09:17 - INFO - 	 Best PR-AUC: 0.265
2024-11-03 09:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.731
2024-11-03 09:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 09:17 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-03 09:17 - INFO - ---------------------------------------------
2024-11-03 09:19 - INFO - ---------------------------------------------
2024-11-03 09:19 - INFO - Epoch: 04 | Time: 2m 3s
2024-11-03 09:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29972
2024-11-03 09:19 - INFO - 	 Train Loss: 0.170
2024-11-03 09:19 - INFO - 	 Val. Loss: 0.196
2024-11-03 09:19 - INFO - 	 ROC-AUC: 0.791
2024-11-03 09:19 - INFO - 	 PR-AUC: 0.300
2024-11-03 09:19 - INFO - 	 Recall for 0.4 precision: 0.302
2024-11-03 09:19 - INFO - 	 Best Val. Loss: 0.196
2024-11-03 09:19 - INFO - 	 Best ROC-AUC: 0.791
2024-11-03 09:19 - INFO - 	 Best PR-AUC: 0.300
2024-11-03 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-03 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-03 09:19 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-03 09:19 - INFO - ---------------------------------------------
2024-11-03 09:22 - INFO - ---------------------------------------------
2024-11-03 09:22 - INFO - Epoch: 05 | Time: 2m 3s
2024-11-03 09:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34527
2024-11-03 09:22 - INFO - 	 Train Loss: 0.164
2024-11-03 09:22 - INFO - 	 Val. Loss: 0.188
2024-11-03 09:22 - INFO - 	 ROC-AUC: 0.806
2024-11-03 09:22 - INFO - 	 PR-AUC: 0.345
2024-11-03 09:22 - INFO - 	 Recall for 0.4 precision: 0.405
2024-11-03 09:22 - INFO - 	 Best Val. Loss: 0.188
2024-11-03 09:22 - INFO - 	 Best ROC-AUC: 0.806
2024-11-03 09:22 - INFO - 	 Best PR-AUC: 0.345
2024-11-03 09:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-03 09:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 09:22 - INFO - 	 Best Recall for 0.4 precision: 0.405
2024-11-03 09:22 - INFO - ---------------------------------------------
2024-11-03 09:24 - INFO - ---------------------------------------------
2024-11-03 09:24 - INFO - Epoch: 06 | Time: 2m 3s
2024-11-03 09:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35055
2024-11-03 09:24 - INFO - 	 Train Loss: 0.156
2024-11-03 09:24 - INFO - 	 Val. Loss: 0.171
2024-11-03 09:24 - INFO - 	 ROC-AUC: 0.825
2024-11-03 09:24 - INFO - 	 PR-AUC: 0.351
2024-11-03 09:24 - INFO - 	 Recall for 0.4 precision: 0.431
2024-11-03 09:24 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 09:24 - INFO - 	 Best ROC-AUC: 0.825
2024-11-03 09:24 - INFO - 	 Best PR-AUC: 0.351
2024-11-03 09:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 09:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 09:24 - INFO - 	 Best Recall for 0.4 precision: 0.431
2024-11-03 09:24 - INFO - ---------------------------------------------
2024-11-03 09:26 - INFO - ---------------------------------------------
2024-11-03 09:26 - INFO - Epoch: 07 | Time: 2m 3s
2024-11-03 09:26 - INFO - 	 Train Loss: 0.153
2024-11-03 09:26 - INFO - 	 Val. Loss: 0.170
2024-11-03 09:26 - INFO - 	 ROC-AUC: 0.828
2024-11-03 09:26 - INFO - 	 PR-AUC: 0.339
2024-11-03 09:26 - INFO - 	 Recall for 0.4 precision: 0.411
2024-11-03 09:26 - INFO - 	 Best Val. Loss: 0.170
2024-11-03 09:26 - INFO - 	 Best ROC-AUC: 0.828
2024-11-03 09:26 - INFO - 	 Best PR-AUC: 0.351
2024-11-03 09:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.766
2024-11-03 09:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 09:26 - INFO - 	 Best Recall for 0.4 precision: 0.431
2024-11-03 09:26 - INFO - ---------------------------------------------
2024-11-03 09:28 - INFO - ---------------------------------------------
2024-11-03 09:28 - INFO - Epoch: 08 | Time: 2m 4s
2024-11-03 09:28 - INFO - 	 Train Loss: 0.150
2024-11-03 09:28 - INFO - 	 Val. Loss: 0.162
2024-11-03 09:28 - INFO - 	 ROC-AUC: 0.833
2024-11-03 09:28 - INFO - 	 PR-AUC: 0.338
2024-11-03 09:28 - INFO - 	 Recall for 0.4 precision: 0.472
2024-11-03 09:28 - INFO - 	 Best Val. Loss: 0.162
2024-11-03 09:28 - INFO - 	 Best ROC-AUC: 0.833
2024-11-03 09:28 - INFO - 	 Best PR-AUC: 0.351
2024-11-03 09:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 09:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 09:28 - INFO - 	 Best Recall for 0.4 precision: 0.472
2024-11-03 09:28 - INFO - ---------------------------------------------
2024-11-03 09:30 - INFO - ---------------------------------------------
2024-11-03 09:30 - INFO - Epoch: 09 | Time: 2m 3s
2024-11-03 09:30 - INFO - 	 Train Loss: 0.147
2024-11-03 09:30 - INFO - 	 Val. Loss: 0.157
2024-11-03 09:30 - INFO - 	 ROC-AUC: 0.840
2024-11-03 09:30 - INFO - 	 PR-AUC: 0.341
2024-11-03 09:30 - INFO - 	 Recall for 0.4 precision: 0.436
2024-11-03 09:30 - INFO - 	 Best Val. Loss: 0.157
2024-11-03 09:30 - INFO - 	 Best ROC-AUC: 0.840
2024-11-03 09:30 - INFO - 	 Best PR-AUC: 0.351
2024-11-03 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.771
2024-11-03 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 09:30 - INFO - 	 Best Recall for 0.4 precision: 0.472
2024-11-03 09:30 - INFO - ---------------------------------------------
2024-11-03 09:32 - INFO - ---------------------------------------------
2024-11-03 09:32 - INFO - Epoch: 10 | Time: 2m 4s
2024-11-03 09:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38804
2024-11-03 09:32 - INFO - 	 Train Loss: 0.146
2024-11-03 09:32 - INFO - 	 Val. Loss: 0.137
2024-11-03 09:32 - INFO - 	 ROC-AUC: 0.893
2024-11-03 09:32 - INFO - 	 PR-AUC: 0.388
2024-11-03 09:32 - INFO - 	 Recall for 0.4 precision: 0.462
2024-11-03 09:32 - INFO - 	 Best Val. Loss: 0.137
2024-11-03 09:32 - INFO - 	 Best ROC-AUC: 0.893
2024-11-03 09:32 - INFO - 	 Best PR-AUC: 0.388
2024-11-03 09:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.795
2024-11-03 09:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 09:32 - INFO - 	 Best Recall for 0.4 precision: 0.472
2024-11-03 09:32 - INFO - ---------------------------------------------
2024-11-03 09:35 - INFO - Fit the preprocessing pipeline
2024-11-03 09:35 - INFO - Training using device: mps
2024-11-03 09:35 - INFO - Creating generators
2024-11-03 09:35 - INFO - The model has 651,257 trainable parameters
2024-11-03 09:35 - INFO - * Model:
2024-11-03 09:35 - INFO - * -----------
2024-11-03 09:35 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 09:35 - INFO - * -----------
2024-11-03 09:35 - INFO - Evaluating model based on: aucpr
2024-11-03 09:35 - INFO - Training..

2024-11-03 09:36 - INFO - ---------------------------------------------
2024-11-03 09:36 - INFO - Epoch: 01 | Time: 1m 55s
2024-11-03 09:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14513
2024-11-03 09:36 - INFO - 	 Train Loss: 0.254
2024-11-03 09:36 - INFO - 	 Val. Loss: 0.285
2024-11-03 09:36 - INFO - 	 ROC-AUC: 0.770
2024-11-03 09:36 - INFO - 	 PR-AUC: 0.145
2024-11-03 09:36 - INFO - 	 Recall for 0.4 precision: 0.016
2024-11-03 09:36 - INFO - 	 Best Val. Loss: 0.285
2024-11-03 09:36 - INFO - 	 Best ROC-AUC: 0.770
2024-11-03 09:36 - INFO - 	 Best PR-AUC: 0.145
2024-11-03 09:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-11-03 09:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.091
2024-11-03 09:36 - INFO - 	 Best Recall for 0.4 precision: 0.016
2024-11-03 09:36 - INFO - ---------------------------------------------
2024-11-03 09:39 - INFO - ---------------------------------------------
2024-11-03 09:39 - INFO - Epoch: 02 | Time: 2m 3s
2024-11-03 09:39 - INFO - 	 Train Loss: 0.204
2024-11-03 09:39 - INFO - 	 Val. Loss: 0.250
2024-11-03 09:39 - INFO - 	 ROC-AUC: 0.719
2024-11-03 09:39 - INFO - 	 PR-AUC: 0.106
2024-11-03 09:39 - INFO - 	 Recall for 0.4 precision: 0.049
2024-11-03 09:39 - INFO - 	 Best Val. Loss: 0.250
2024-11-03 09:39 - INFO - 	 Best ROC-AUC: 0.770
2024-11-03 09:39 - INFO - 	 Best PR-AUC: 0.145
2024-11-03 09:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-11-03 09:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.091
2024-11-03 09:39 - INFO - 	 Best Recall for 0.4 precision: 0.049
2024-11-03 09:39 - INFO - ---------------------------------------------
2024-11-03 09:41 - INFO - ---------------------------------------------
2024-11-03 09:41 - INFO - Epoch: 03 | Time: 2m 3s
2024-11-03 09:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21675
2024-11-03 09:41 - INFO - 	 Train Loss: 0.187
2024-11-03 09:41 - INFO - 	 Val. Loss: 0.233
2024-11-03 09:41 - INFO - 	 ROC-AUC: 0.749
2024-11-03 09:41 - INFO - 	 PR-AUC: 0.217
2024-11-03 09:41 - INFO - 	 Recall for 0.4 precision: 0.224
2024-11-03 09:41 - INFO - 	 Best Val. Loss: 0.233
2024-11-03 09:41 - INFO - 	 Best ROC-AUC: 0.770
2024-11-03 09:41 - INFO - 	 Best PR-AUC: 0.217
2024-11-03 09:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-11-03 09:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.114
2024-11-03 09:41 - INFO - 	 Best Recall for 0.4 precision: 0.224
2024-11-03 09:41 - INFO - ---------------------------------------------
2024-11-03 09:43 - INFO - ---------------------------------------------
2024-11-03 09:43 - INFO - Epoch: 04 | Time: 2m 2s
2024-11-03 09:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24242
2024-11-03 09:43 - INFO - 	 Train Loss: 0.176
2024-11-03 09:43 - INFO - 	 Val. Loss: 0.208
2024-11-03 09:43 - INFO - 	 ROC-AUC: 0.770
2024-11-03 09:43 - INFO - 	 PR-AUC: 0.242
2024-11-03 09:43 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-03 09:43 - INFO - 	 Best Val. Loss: 0.208
2024-11-03 09:43 - INFO - 	 Best ROC-AUC: 0.770
2024-11-03 09:43 - INFO - 	 Best PR-AUC: 0.242
2024-11-03 09:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.728
2024-11-03 09:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 09:43 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-03 09:43 - INFO - ---------------------------------------------
2024-11-03 09:45 - INFO - ---------------------------------------------
2024-11-03 09:45 - INFO - Epoch: 05 | Time: 2m 4s
2024-11-03 09:45 - INFO - 	 Train Loss: 0.166
2024-11-03 09:45 - INFO - 	 Val. Loss: 0.200
2024-11-03 09:45 - INFO - 	 ROC-AUC: 0.792
2024-11-03 09:45 - INFO - 	 PR-AUC: 0.230
2024-11-03 09:45 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-03 09:45 - INFO - 	 Best Val. Loss: 0.200
2024-11-03 09:45 - INFO - 	 Best ROC-AUC: 0.792
2024-11-03 09:45 - INFO - 	 Best PR-AUC: 0.242
2024-11-03 09:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-03 09:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 09:45 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-03 09:45 - INFO - ---------------------------------------------
2024-11-03 09:47 - INFO - ---------------------------------------------
2024-11-03 09:47 - INFO - Epoch: 06 | Time: 2m 4s
2024-11-03 09:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30944
2024-11-03 09:47 - INFO - 	 Train Loss: 0.161
2024-11-03 09:47 - INFO - 	 Val. Loss: 0.171
2024-11-03 09:47 - INFO - 	 ROC-AUC: 0.823
2024-11-03 09:47 - INFO - 	 PR-AUC: 0.309
2024-11-03 09:47 - INFO - 	 Recall for 0.4 precision: 0.249
2024-11-03 09:47 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 09:47 - INFO - 	 Best ROC-AUC: 0.823
2024-11-03 09:47 - INFO - 	 Best PR-AUC: 0.309
2024-11-03 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.772
2024-11-03 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-03 09:47 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-03 09:47 - INFO - ---------------------------------------------
2024-11-03 09:49 - INFO - ---------------------------------------------
2024-11-03 09:49 - INFO - Epoch: 07 | Time: 2m 4s
2024-11-03 09:49 - INFO - 	 Train Loss: 0.153
2024-11-03 09:49 - INFO - 	 Val. Loss: 0.152
2024-11-03 09:49 - INFO - 	 ROC-AUC: 0.856
2024-11-03 09:49 - INFO - 	 PR-AUC: 0.268
2024-11-03 09:49 - INFO - 	 Recall for 0.4 precision: 0.109
2024-11-03 09:49 - INFO - 	 Best Val. Loss: 0.152
2024-11-03 09:49 - INFO - 	 Best ROC-AUC: 0.856
2024-11-03 09:49 - INFO - 	 Best PR-AUC: 0.309
2024-11-03 09:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.798
2024-11-03 09:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-03 09:49 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-03 09:49 - INFO - ---------------------------------------------
2024-11-03 09:51 - INFO - ---------------------------------------------
2024-11-03 09:51 - INFO - Epoch: 08 | Time: 2m 6s
2024-11-03 09:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39686
2024-11-03 09:51 - INFO - 	 Train Loss: 0.145
2024-11-03 09:51 - INFO - 	 Val. Loss: 0.132
2024-11-03 09:51 - INFO - 	 ROC-AUC: 0.889
2024-11-03 09:51 - INFO - 	 PR-AUC: 0.397
2024-11-03 09:51 - INFO - 	 Recall for 0.4 precision: 0.462
2024-11-03 09:51 - INFO - 	 Best Val. Loss: 0.132
2024-11-03 09:51 - INFO - 	 Best ROC-AUC: 0.889
2024-11-03 09:51 - INFO - 	 Best PR-AUC: 0.397
2024-11-03 09:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.845
2024-11-03 09:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.176
2024-11-03 09:51 - INFO - 	 Best Recall for 0.4 precision: 0.462
2024-11-03 09:51 - INFO - ---------------------------------------------
2024-11-03 09:53 - INFO - ---------------------------------------------
2024-11-03 09:53 - INFO - Epoch: 09 | Time: 2m 6s
2024-11-03 09:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45371
2024-11-03 09:53 - INFO - 	 Train Loss: 0.131
2024-11-03 09:53 - INFO - 	 Val. Loss: 0.129
2024-11-03 09:53 - INFO - 	 ROC-AUC: 0.954
2024-11-03 09:53 - INFO - 	 PR-AUC: 0.454
2024-11-03 09:53 - INFO - 	 Recall for 0.4 precision: 0.650
2024-11-03 09:53 - INFO - 	 Best Val. Loss: 0.129
2024-11-03 09:53 - INFO - 	 Best ROC-AUC: 0.954
2024-11-03 09:53 - INFO - 	 Best PR-AUC: 0.454
2024-11-03 09:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.910
2024-11-03 09:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-03 09:53 - INFO - 	 Best Recall for 0.4 precision: 0.650
2024-11-03 09:53 - INFO - ---------------------------------------------
2024-11-03 09:55 - INFO - ---------------------------------------------
2024-11-03 09:55 - INFO - Epoch: 10 | Time: 2m 6s
2024-11-03 09:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57289
2024-11-03 09:55 - INFO - 	 Train Loss: 0.116
2024-11-03 09:55 - INFO - 	 Val. Loss: 0.106
2024-11-03 09:55 - INFO - 	 ROC-AUC: 0.960
2024-11-03 09:55 - INFO - 	 PR-AUC: 0.573
2024-11-03 09:55 - INFO - 	 Recall for 0.4 precision: 0.761
2024-11-03 09:55 - INFO - 	 Best Val. Loss: 0.106
2024-11-03 09:55 - INFO - 	 Best ROC-AUC: 0.960
2024-11-03 09:55 - INFO - 	 Best PR-AUC: 0.573
2024-11-03 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.911
2024-11-03 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.313
2024-11-03 09:55 - INFO - 	 Best Recall for 0.4 precision: 0.761
2024-11-03 09:55 - INFO - ---------------------------------------------
2024-11-03 09:58 - INFO - Fit the preprocessing pipeline
2024-11-03 09:58 - INFO - Training using device: mps
2024-11-03 09:58 - INFO - Creating generators
2024-11-03 09:58 - INFO - The model has 651,257 trainable parameters
2024-11-03 09:58 - INFO - * Model:
2024-11-03 09:58 - INFO - * -----------
2024-11-03 09:58 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 09:58 - INFO - * -----------
2024-11-03 09:58 - INFO - Evaluating model based on: aucpr
2024-11-03 09:58 - INFO - Training..

2024-11-03 10:00 - INFO - ---------------------------------------------
2024-11-03 10:00 - INFO - Epoch: 01 | Time: 1m 59s
2024-11-03 10:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12927
2024-11-03 10:00 - INFO - 	 Train Loss: 0.247
2024-11-03 10:00 - INFO - 	 Val. Loss: 0.293
2024-11-03 10:00 - INFO - 	 ROC-AUC: 0.719
2024-11-03 10:00 - INFO - 	 PR-AUC: 0.129
2024-11-03 10:00 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 10:00 - INFO - 	 Best Val. Loss: 0.293
2024-11-03 10:00 - INFO - 	 Best ROC-AUC: 0.719
2024-11-03 10:00 - INFO - 	 Best PR-AUC: 0.129
2024-11-03 10:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-11-03 10:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.084
2024-11-03 10:00 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-03 10:00 - INFO - ---------------------------------------------
2024-11-03 10:02 - INFO - ---------------------------------------------
2024-11-03 10:02 - INFO - Epoch: 02 | Time: 2m 11s
2024-11-03 10:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2305
2024-11-03 10:02 - INFO - 	 Train Loss: 0.210
2024-11-03 10:02 - INFO - 	 Val. Loss: 0.243
2024-11-03 10:02 - INFO - 	 ROC-AUC: 0.745
2024-11-03 10:02 - INFO - 	 PR-AUC: 0.231
2024-11-03 10:02 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-03 10:02 - INFO - 	 Best Val. Loss: 0.243
2024-11-03 10:02 - INFO - 	 Best ROC-AUC: 0.745
2024-11-03 10:02 - INFO - 	 Best PR-AUC: 0.231
2024-11-03 10:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-11-03 10:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-03 10:02 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-03 10:02 - INFO - ---------------------------------------------
2024-11-03 10:04 - INFO - ---------------------------------------------
2024-11-03 10:04 - INFO - Epoch: 03 | Time: 2m 12s
2024-11-03 10:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23598
2024-11-03 10:04 - INFO - 	 Train Loss: 0.187
2024-11-03 10:04 - INFO - 	 Val. Loss: 0.210
2024-11-03 10:04 - INFO - 	 ROC-AUC: 0.761
2024-11-03 10:04 - INFO - 	 PR-AUC: 0.236
2024-11-03 10:04 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-03 10:04 - INFO - 	 Best Val. Loss: 0.210
2024-11-03 10:04 - INFO - 	 Best ROC-AUC: 0.761
2024-11-03 10:04 - INFO - 	 Best PR-AUC: 0.236
2024-11-03 10:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-03 10:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 10:04 - INFO - 	 Best Recall for 0.4 precision: 0.244
2024-11-03 10:04 - INFO - ---------------------------------------------
2024-11-03 10:07 - INFO - ---------------------------------------------
2024-11-03 10:07 - INFO - Epoch: 04 | Time: 2m 12s
2024-11-03 10:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25708
2024-11-03 10:07 - INFO - 	 Train Loss: 0.172
2024-11-03 10:07 - INFO - 	 Val. Loss: 0.203
2024-11-03 10:07 - INFO - 	 ROC-AUC: 0.765
2024-11-03 10:07 - INFO - 	 PR-AUC: 0.257
2024-11-03 10:07 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-03 10:07 - INFO - 	 Best Val. Loss: 0.203
2024-11-03 10:07 - INFO - 	 Best ROC-AUC: 0.765
2024-11-03 10:07 - INFO - 	 Best PR-AUC: 0.257
2024-11-03 10:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.745
2024-11-03 10:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-03 10:07 - INFO - 	 Best Recall for 0.4 precision: 0.306
2024-11-03 10:07 - INFO - ---------------------------------------------
2024-11-03 10:09 - INFO - ---------------------------------------------
2024-11-03 10:09 - INFO - Epoch: 05 | Time: 2m 14s
2024-11-03 10:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30945
2024-11-03 10:09 - INFO - 	 Train Loss: 0.164
2024-11-03 10:09 - INFO - 	 Val. Loss: 0.181
2024-11-03 10:09 - INFO - 	 ROC-AUC: 0.799
2024-11-03 10:09 - INFO - 	 PR-AUC: 0.309
2024-11-03 10:09 - INFO - 	 Recall for 0.4 precision: 0.335
2024-11-03 10:09 - INFO - 	 Best Val. Loss: 0.181
2024-11-03 10:09 - INFO - 	 Best ROC-AUC: 0.799
2024-11-03 10:09 - INFO - 	 Best PR-AUC: 0.309
2024-11-03 10:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.772
2024-11-03 10:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.172
2024-11-03 10:09 - INFO - 	 Best Recall for 0.4 precision: 0.335
2024-11-03 10:09 - INFO - ---------------------------------------------
2024-11-03 10:11 - INFO - ---------------------------------------------
2024-11-03 10:11 - INFO - Epoch: 06 | Time: 2m 13s
2024-11-03 10:11 - INFO - 	 Train Loss: 0.158
2024-11-03 10:11 - INFO - 	 Val. Loss: 0.176
2024-11-03 10:11 - INFO - 	 ROC-AUC: 0.793
2024-11-03 10:11 - INFO - 	 PR-AUC: 0.309
2024-11-03 10:11 - INFO - 	 Recall for 0.4 precision: 0.324
2024-11-03 10:11 - INFO - 	 Best Val. Loss: 0.176
2024-11-03 10:11 - INFO - 	 Best ROC-AUC: 0.799
2024-11-03 10:11 - INFO - 	 Best PR-AUC: 0.309
2024-11-03 10:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.772
2024-11-03 10:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.172
2024-11-03 10:11 - INFO - 	 Best Recall for 0.4 precision: 0.335
2024-11-03 10:11 - INFO - ---------------------------------------------
2024-11-03 10:13 - INFO - ---------------------------------------------
2024-11-03 10:13 - INFO - Epoch: 07 | Time: 2m 13s
2024-11-03 10:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35852
2024-11-03 10:13 - INFO - 	 Train Loss: 0.154
2024-11-03 10:13 - INFO - 	 Val. Loss: 0.166
2024-11-03 10:13 - INFO - 	 ROC-AUC: 0.819
2024-11-03 10:13 - INFO - 	 PR-AUC: 0.359
2024-11-03 10:13 - INFO - 	 Recall for 0.4 precision: 0.433
2024-11-03 10:13 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 10:13 - INFO - 	 Best ROC-AUC: 0.819
2024-11-03 10:13 - INFO - 	 Best PR-AUC: 0.359
2024-11-03 10:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 10:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 10:13 - INFO - 	 Best Recall for 0.4 precision: 0.433
2024-11-03 10:13 - INFO - ---------------------------------------------
2024-11-03 10:15 - INFO - ---------------------------------------------
2024-11-03 10:15 - INFO - Epoch: 08 | Time: 2m 11s
2024-11-03 10:15 - INFO - 	 Train Loss: 0.151
2024-11-03 10:15 - INFO - 	 Val. Loss: 0.166
2024-11-03 10:15 - INFO - 	 ROC-AUC: 0.822
2024-11-03 10:15 - INFO - 	 PR-AUC: 0.346
2024-11-03 10:15 - INFO - 	 Recall for 0.4 precision: 0.338
2024-11-03 10:15 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 10:15 - INFO - 	 Best ROC-AUC: 0.822
2024-11-03 10:15 - INFO - 	 Best PR-AUC: 0.359
2024-11-03 10:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.772
2024-11-03 10:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 10:15 - INFO - 	 Best Recall for 0.4 precision: 0.433
2024-11-03 10:15 - INFO - ---------------------------------------------
2024-11-03 10:18 - INFO - ---------------------------------------------
2024-11-03 10:18 - INFO - Epoch: 09 | Time: 2m 13s
2024-11-03 10:18 - INFO - 	 Train Loss: 0.148
2024-11-03 10:18 - INFO - 	 Val. Loss: 0.146
2024-11-03 10:18 - INFO - 	 ROC-AUC: 0.877
2024-11-03 10:18 - INFO - 	 PR-AUC: 0.310
2024-11-03 10:18 - INFO - 	 Recall for 0.4 precision: 0.338
2024-11-03 10:18 - INFO - 	 Best Val. Loss: 0.146
2024-11-03 10:18 - INFO - 	 Best ROC-AUC: 0.877
2024-11-03 10:18 - INFO - 	 Best PR-AUC: 0.359
2024-11-03 10:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.817
2024-11-03 10:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 10:18 - INFO - 	 Best Recall for 0.4 precision: 0.433
2024-11-03 10:18 - INFO - ---------------------------------------------
2024-11-03 10:20 - INFO - ---------------------------------------------
2024-11-03 10:20 - INFO - Epoch: 10 | Time: 2m 15s
2024-11-03 10:20 - INFO - 	 Train Loss: 0.135
2024-11-03 10:20 - INFO - 	 Val. Loss: 0.261
2024-11-03 10:20 - INFO - 	 ROC-AUC: 0.495
2024-11-03 10:20 - INFO - 	 PR-AUC: 0.069
2024-11-03 10:20 - INFO - 	 Recall for 0.4 precision: 0.008
2024-11-03 10:20 - INFO - 	 Best Val. Loss: 0.146
2024-11-03 10:20 - INFO - 	 Best ROC-AUC: 0.877
2024-11-03 10:20 - INFO - 	 Best PR-AUC: 0.359
2024-11-03 10:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.817
2024-11-03 10:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 10:20 - INFO - 	 Best Recall for 0.4 precision: 0.433
2024-11-03 10:20 - INFO - ---------------------------------------------
2024-11-03 10:23 - INFO - Fit the preprocessing pipeline
2024-11-03 10:23 - INFO - Training using device: mps
2024-11-03 10:23 - INFO - Creating generators
2024-11-03 10:23 - INFO - The model has 651,257 trainable parameters
2024-11-03 10:23 - INFO - * Model:
2024-11-03 10:23 - INFO - * -----------
2024-11-03 10:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 10:23 - INFO - * -----------
2024-11-03 10:23 - INFO - Evaluating model based on: aucpr
2024-11-03 10:23 - INFO - Training..

2024-11-03 10:25 - INFO - ---------------------------------------------
2024-11-03 10:25 - INFO - Epoch: 01 | Time: 2m 18s
2024-11-03 10:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15169
2024-11-03 10:25 - INFO - 	 Train Loss: 0.258
2024-11-03 10:25 - INFO - 	 Val. Loss: 0.324
2024-11-03 10:25 - INFO - 	 ROC-AUC: 0.744
2024-11-03 10:25 - INFO - 	 PR-AUC: 0.152
2024-11-03 10:25 - INFO - 	 Recall for 0.4 precision: 0.033
2024-11-03 10:25 - INFO - 	 Best Val. Loss: 0.324
2024-11-03 10:25 - INFO - 	 Best ROC-AUC: 0.744
2024-11-03 10:25 - INFO - 	 Best PR-AUC: 0.152
2024-11-03 10:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-03 10:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-03 10:25 - INFO - 	 Best Recall for 0.4 precision: 0.033
2024-11-03 10:25 - INFO - ---------------------------------------------
2024-11-03 10:27 - INFO - ---------------------------------------------
2024-11-03 10:27 - INFO - Epoch: 02 | Time: 2m 21s
2024-11-03 10:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22146
2024-11-03 10:27 - INFO - 	 Train Loss: 0.211
2024-11-03 10:27 - INFO - 	 Val. Loss: 0.234
2024-11-03 10:27 - INFO - 	 ROC-AUC: 0.787
2024-11-03 10:27 - INFO - 	 PR-AUC: 0.221
2024-11-03 10:27 - INFO - 	 Recall for 0.4 precision: 0.169
2024-11-03 10:27 - INFO - 	 Best Val. Loss: 0.234
2024-11-03 10:27 - INFO - 	 Best ROC-AUC: 0.787
2024-11-03 10:27 - INFO - 	 Best PR-AUC: 0.221
2024-11-03 10:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-03 10:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-03 10:27 - INFO - 	 Best Recall for 0.4 precision: 0.169
2024-11-03 10:27 - INFO - ---------------------------------------------
2024-11-03 10:30 - INFO - ---------------------------------------------
2024-11-03 10:30 - INFO - Epoch: 03 | Time: 2m 17s
2024-11-03 10:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24332
2024-11-03 10:30 - INFO - 	 Train Loss: 0.189
2024-11-03 10:30 - INFO - 	 Val. Loss: 0.201
2024-11-03 10:30 - INFO - 	 ROC-AUC: 0.788
2024-11-03 10:30 - INFO - 	 PR-AUC: 0.243
2024-11-03 10:30 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-03 10:30 - INFO - 	 Best Val. Loss: 0.201
2024-11-03 10:30 - INFO - 	 Best ROC-AUC: 0.788
2024-11-03 10:30 - INFO - 	 Best PR-AUC: 0.243
2024-11-03 10:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-03 10:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-03 10:30 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-03 10:30 - INFO - ---------------------------------------------
2024-11-03 10:32 - INFO - ---------------------------------------------
2024-11-03 10:32 - INFO - Epoch: 04 | Time: 2m 12s
2024-11-03 10:32 - INFO - 	 Train Loss: 0.177
2024-11-03 10:32 - INFO - 	 Val. Loss: 0.187
2024-11-03 10:32 - INFO - 	 ROC-AUC: 0.790
2024-11-03 10:32 - INFO - 	 PR-AUC: 0.170
2024-11-03 10:32 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-03 10:32 - INFO - 	 Best Val. Loss: 0.187
2024-11-03 10:32 - INFO - 	 Best ROC-AUC: 0.790
2024-11-03 10:32 - INFO - 	 Best PR-AUC: 0.243
2024-11-03 10:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-03 10:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-03 10:32 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-03 10:32 - INFO - ---------------------------------------------
2024-11-03 10:34 - INFO - ---------------------------------------------
2024-11-03 10:34 - INFO - Epoch: 05 | Time: 2m 14s
2024-11-03 10:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27035
2024-11-03 10:34 - INFO - 	 Train Loss: 0.167
2024-11-03 10:34 - INFO - 	 Val. Loss: 0.186
2024-11-03 10:34 - INFO - 	 ROC-AUC: 0.831
2024-11-03 10:34 - INFO - 	 PR-AUC: 0.270
2024-11-03 10:34 - INFO - 	 Recall for 0.4 precision: 0.150
2024-11-03 10:34 - INFO - 	 Best Val. Loss: 0.186
2024-11-03 10:34 - INFO - 	 Best ROC-AUC: 0.831
2024-11-03 10:34 - INFO - 	 Best PR-AUC: 0.270
2024-11-03 10:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.771
2024-11-03 10:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-03 10:34 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-03 10:34 - INFO - ---------------------------------------------
2024-11-03 10:36 - INFO - ---------------------------------------------
2024-11-03 10:36 - INFO - Epoch: 06 | Time: 2m 10s
2024-11-03 10:36 - INFO - 	 Train Loss: 0.160
2024-11-03 10:36 - INFO - 	 Val. Loss: 0.172
2024-11-03 10:36 - INFO - 	 ROC-AUC: 0.833
2024-11-03 10:36 - INFO - 	 PR-AUC: 0.233
2024-11-03 10:36 - INFO - 	 Recall for 0.4 precision: 0.086
2024-11-03 10:36 - INFO - 	 Best Val. Loss: 0.172
2024-11-03 10:36 - INFO - 	 Best ROC-AUC: 0.833
2024-11-03 10:36 - INFO - 	 Best PR-AUC: 0.270
2024-11-03 10:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-03 10:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-03 10:36 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-03 10:36 - INFO - ---------------------------------------------
2024-11-03 10:38 - INFO - ---------------------------------------------
2024-11-03 10:38 - INFO - Epoch: 07 | Time: 2m 11s
2024-11-03 10:38 - INFO - 	 Train Loss: 0.155
2024-11-03 10:38 - INFO - 	 Val. Loss: 0.172
2024-11-03 10:38 - INFO - 	 ROC-AUC: 0.823
2024-11-03 10:38 - INFO - 	 PR-AUC: 0.246
2024-11-03 10:38 - INFO - 	 Recall for 0.4 precision: 0.150
2024-11-03 10:38 - INFO - 	 Best Val. Loss: 0.172
2024-11-03 10:38 - INFO - 	 Best ROC-AUC: 0.833
2024-11-03 10:38 - INFO - 	 Best PR-AUC: 0.270
2024-11-03 10:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-03 10:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-03 10:38 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-03 10:38 - INFO - ---------------------------------------------
2024-11-03 10:41 - INFO - ---------------------------------------------
2024-11-03 10:41 - INFO - Epoch: 08 | Time: 2m 14s
2024-11-03 10:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31605
2024-11-03 10:41 - INFO - 	 Train Loss: 0.150
2024-11-03 10:41 - INFO - 	 Val. Loss: 0.149
2024-11-03 10:41 - INFO - 	 ROC-AUC: 0.880
2024-11-03 10:41 - INFO - 	 PR-AUC: 0.316
2024-11-03 10:41 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-03 10:41 - INFO - 	 Best Val. Loss: 0.149
2024-11-03 10:41 - INFO - 	 Best ROC-AUC: 0.880
2024-11-03 10:41 - INFO - 	 Best PR-AUC: 0.316
2024-11-03 10:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.799
2024-11-03 10:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 10:41 - INFO - 	 Best Recall for 0.4 precision: 0.306
2024-11-03 10:41 - INFO - ---------------------------------------------
2024-11-03 10:43 - INFO - ---------------------------------------------
2024-11-03 10:43 - INFO - Epoch: 09 | Time: 2m 17s
2024-11-03 10:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37496
2024-11-03 10:43 - INFO - 	 Train Loss: 0.148
2024-11-03 10:43 - INFO - 	 Val. Loss: 0.141
2024-11-03 10:43 - INFO - 	 ROC-AUC: 0.900
2024-11-03 10:43 - INFO - 	 PR-AUC: 0.375
2024-11-03 10:43 - INFO - 	 Recall for 0.4 precision: 0.338
2024-11-03 10:43 - INFO - 	 Best Val. Loss: 0.141
2024-11-03 10:43 - INFO - 	 Best ROC-AUC: 0.900
2024-11-03 10:43 - INFO - 	 Best PR-AUC: 0.375
2024-11-03 10:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.824
2024-11-03 10:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-03 10:43 - INFO - 	 Best Recall for 0.4 precision: 0.338
2024-11-03 10:43 - INFO - ---------------------------------------------
2024-11-03 10:45 - INFO - ---------------------------------------------
2024-11-03 10:45 - INFO - Epoch: 10 | Time: 2m 17s
2024-11-03 10:45 - INFO - 	 Train Loss: 0.140
2024-11-03 10:45 - INFO - 	 Val. Loss: 0.167
2024-11-03 10:45 - INFO - 	 ROC-AUC: 0.915
2024-11-03 10:45 - INFO - 	 PR-AUC: 0.354
2024-11-03 10:45 - INFO - 	 Recall for 0.4 precision: 0.348
2024-11-03 10:45 - INFO - 	 Best Val. Loss: 0.141
2024-11-03 10:45 - INFO - 	 Best ROC-AUC: 0.915
2024-11-03 10:45 - INFO - 	 Best PR-AUC: 0.375
2024-11-03 10:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.868
2024-11-03 10:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-03 10:45 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-03 10:45 - INFO - ---------------------------------------------
2024-11-03 10:48 - INFO - Fit the preprocessing pipeline
2024-11-03 10:48 - INFO - Training using device: mps
2024-11-03 10:48 - INFO - Creating generators
2024-11-03 10:48 - INFO - The model has 651,257 trainable parameters
2024-11-03 10:48 - INFO - * Model:
2024-11-03 10:48 - INFO - * -----------
2024-11-03 10:48 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 10:48 - INFO - * -----------
2024-11-03 10:48 - INFO - Evaluating model based on: aucpr
2024-11-03 10:48 - INFO - Training..

2024-11-03 10:50 - INFO - ---------------------------------------------
2024-11-03 10:50 - INFO - Epoch: 01 | Time: 2m 5s
2024-11-03 10:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1715
2024-11-03 10:50 - INFO - 	 Train Loss: 0.260
2024-11-03 10:50 - INFO - 	 Val. Loss: 0.289
2024-11-03 10:50 - INFO - 	 ROC-AUC: 0.750
2024-11-03 10:50 - INFO - 	 PR-AUC: 0.172
2024-11-03 10:50 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-03 10:50 - INFO - 	 Best Val. Loss: 0.289
2024-11-03 10:50 - INFO - 	 Best ROC-AUC: 0.750
2024-11-03 10:50 - INFO - 	 Best PR-AUC: 0.172
2024-11-03 10:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-11-03 10:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-03 10:50 - INFO - 	 Best Recall for 0.4 precision: 0.026
2024-11-03 10:50 - INFO - ---------------------------------------------
2024-11-03 10:52 - INFO - ---------------------------------------------
2024-11-03 10:52 - INFO - Epoch: 02 | Time: 2m 11s
2024-11-03 10:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25592
2024-11-03 10:52 - INFO - 	 Train Loss: 0.210
2024-11-03 10:52 - INFO - 	 Val. Loss: 0.238
2024-11-03 10:52 - INFO - 	 ROC-AUC: 0.756
2024-11-03 10:52 - INFO - 	 PR-AUC: 0.256
2024-11-03 10:52 - INFO - 	 Recall for 0.4 precision: 0.224
2024-11-03 10:52 - INFO - 	 Best Val. Loss: 0.238
2024-11-03 10:52 - INFO - 	 Best ROC-AUC: 0.756
2024-11-03 10:52 - INFO - 	 Best PR-AUC: 0.256
2024-11-03 10:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 10:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-03 10:52 - INFO - 	 Best Recall for 0.4 precision: 0.224
2024-11-03 10:52 - INFO - ---------------------------------------------
2024-11-03 10:54 - INFO - ---------------------------------------------
2024-11-03 10:54 - INFO - Epoch: 03 | Time: 2m 8s
2024-11-03 10:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2886
2024-11-03 10:54 - INFO - 	 Train Loss: 0.188
2024-11-03 10:54 - INFO - 	 Val. Loss: 0.231
2024-11-03 10:54 - INFO - 	 ROC-AUC: 0.761
2024-11-03 10:54 - INFO - 	 PR-AUC: 0.289
2024-11-03 10:54 - INFO - 	 Recall for 0.4 precision: 0.259
2024-11-03 10:54 - INFO - 	 Best Val. Loss: 0.231
2024-11-03 10:54 - INFO - 	 Best ROC-AUC: 0.761
2024-11-03 10:54 - INFO - 	 Best PR-AUC: 0.289
2024-11-03 10:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-03 10:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-03 10:54 - INFO - 	 Best Recall for 0.4 precision: 0.259
2024-11-03 10:54 - INFO - ---------------------------------------------
2024-11-03 10:57 - INFO - ---------------------------------------------
2024-11-03 10:57 - INFO - Epoch: 04 | Time: 2m 6s
2024-11-03 10:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31505
2024-11-03 10:57 - INFO - 	 Train Loss: 0.173
2024-11-03 10:57 - INFO - 	 Val. Loss: 0.195
2024-11-03 10:57 - INFO - 	 ROC-AUC: 0.786
2024-11-03 10:57 - INFO - 	 PR-AUC: 0.315
2024-11-03 10:57 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-03 10:57 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 10:57 - INFO - 	 Best ROC-AUC: 0.786
2024-11-03 10:57 - INFO - 	 Best PR-AUC: 0.315
2024-11-03 10:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 10:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-03 10:57 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-03 10:57 - INFO - ---------------------------------------------
2024-11-03 10:59 - INFO - ---------------------------------------------
2024-11-03 10:59 - INFO - Epoch: 05 | Time: 2m 5s
2024-11-03 10:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33467
2024-11-03 10:59 - INFO - 	 Train Loss: 0.164
2024-11-03 10:59 - INFO - 	 Val. Loss: 0.174
2024-11-03 10:59 - INFO - 	 ROC-AUC: 0.826
2024-11-03 10:59 - INFO - 	 PR-AUC: 0.335
2024-11-03 10:59 - INFO - 	 Recall for 0.4 precision: 0.384
2024-11-03 10:59 - INFO - 	 Best Val. Loss: 0.174
2024-11-03 10:59 - INFO - 	 Best ROC-AUC: 0.826
2024-11-03 10:59 - INFO - 	 Best PR-AUC: 0.335
2024-11-03 10:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-03 10:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-03 10:59 - INFO - 	 Best Recall for 0.4 precision: 0.384
2024-11-03 10:59 - INFO - ---------------------------------------------
2024-11-03 11:01 - INFO - ---------------------------------------------
2024-11-03 11:01 - INFO - Epoch: 06 | Time: 2m 6s
2024-11-03 11:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34286
2024-11-03 11:01 - INFO - 	 Train Loss: 0.157
2024-11-03 11:01 - INFO - 	 Val. Loss: 0.172
2024-11-03 11:01 - INFO - 	 ROC-AUC: 0.821
2024-11-03 11:01 - INFO - 	 PR-AUC: 0.343
2024-11-03 11:01 - INFO - 	 Recall for 0.4 precision: 0.452
2024-11-03 11:01 - INFO - 	 Best Val. Loss: 0.172
2024-11-03 11:01 - INFO - 	 Best ROC-AUC: 0.826
2024-11-03 11:01 - INFO - 	 Best PR-AUC: 0.343
2024-11-03 11:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-03 11:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 11:01 - INFO - 	 Best Recall for 0.4 precision: 0.452
2024-11-03 11:01 - INFO - ---------------------------------------------
2024-11-03 11:03 - INFO - ---------------------------------------------
2024-11-03 11:03 - INFO - Epoch: 07 | Time: 2m 9s
2024-11-03 11:03 - INFO - 	 Train Loss: 0.154
2024-11-03 11:03 - INFO - 	 Val. Loss: 0.168
2024-11-03 11:03 - INFO - 	 ROC-AUC: 0.836
2024-11-03 11:03 - INFO - 	 PR-AUC: 0.324
2024-11-03 11:03 - INFO - 	 Recall for 0.4 precision: 0.380
2024-11-03 11:03 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 11:03 - INFO - 	 Best ROC-AUC: 0.836
2024-11-03 11:03 - INFO - 	 Best PR-AUC: 0.343
2024-11-03 11:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 11:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 11:03 - INFO - 	 Best Recall for 0.4 precision: 0.452
2024-11-03 11:03 - INFO - ---------------------------------------------
2024-11-03 11:05 - INFO - ---------------------------------------------
2024-11-03 11:05 - INFO - Epoch: 08 | Time: 2m 15s
2024-11-03 11:05 - INFO - 	 Train Loss: 0.153
2024-11-03 11:05 - INFO - 	 Val. Loss: 0.169
2024-11-03 11:05 - INFO - 	 ROC-AUC: 0.846
2024-11-03 11:05 - INFO - 	 PR-AUC: 0.339
2024-11-03 11:05 - INFO - 	 Recall for 0.4 precision: 0.465
2024-11-03 11:05 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 11:05 - INFO - 	 Best ROC-AUC: 0.846
2024-11-03 11:05 - INFO - 	 Best PR-AUC: 0.343
2024-11-03 11:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 11:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 11:05 - INFO - 	 Best Recall for 0.4 precision: 0.465
2024-11-03 11:05 - INFO - ---------------------------------------------
2024-11-03 11:08 - INFO - ---------------------------------------------
2024-11-03 11:08 - INFO - Epoch: 09 | Time: 2m 20s
2024-11-03 11:08 - INFO - 	 Train Loss: 0.148
2024-11-03 11:08 - INFO - 	 Val. Loss: 0.145
2024-11-03 11:08 - INFO - 	 ROC-AUC: 0.883
2024-11-03 11:08 - INFO - 	 PR-AUC: 0.340
2024-11-03 11:08 - INFO - 	 Recall for 0.4 precision: 0.361
2024-11-03 11:08 - INFO - 	 Best Val. Loss: 0.145
2024-11-03 11:08 - INFO - 	 Best ROC-AUC: 0.883
2024-11-03 11:08 - INFO - 	 Best PR-AUC: 0.343
2024-11-03 11:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.804
2024-11-03 11:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 11:08 - INFO - 	 Best Recall for 0.4 precision: 0.465
2024-11-03 11:08 - INFO - ---------------------------------------------
2024-11-03 11:13 - INFO - Fit the preprocessing pipeline
2024-11-03 11:13 - INFO - Training using device: mps
2024-11-03 11:13 - INFO - Creating generators
2024-11-03 11:13 - INFO - The model has 651,257 trainable parameters
2024-11-03 11:13 - INFO - * Model:
2024-11-03 11:13 - INFO - * -----------
2024-11-03 11:13 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 11:13 - INFO - * -----------
2024-11-03 11:13 - INFO - Evaluating model based on: aucpr
2024-11-03 11:13 - INFO - Training..

2024-11-03 11:15 - INFO - ---------------------------------------------
2024-11-03 11:15 - INFO - Epoch: 01 | Time: 2m 0s
2024-11-03 11:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17362
2024-11-03 11:15 - INFO - 	 Train Loss: 0.259
2024-11-03 11:15 - INFO - 	 Val. Loss: 0.305
2024-11-03 11:15 - INFO - 	 ROC-AUC: 0.751
2024-11-03 11:15 - INFO - 	 PR-AUC: 0.174
2024-11-03 11:15 - INFO - 	 Recall for 0.4 precision: 0.065
2024-11-03 11:15 - INFO - 	 Best Val. Loss: 0.305
2024-11-03 11:15 - INFO - 	 Best ROC-AUC: 0.751
2024-11-03 11:15 - INFO - 	 Best PR-AUC: 0.174
2024-11-03 11:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-03 11:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 11:15 - INFO - 	 Best Recall for 0.4 precision: 0.065
2024-11-03 11:15 - INFO - ---------------------------------------------
2024-11-03 11:17 - INFO - ---------------------------------------------
2024-11-03 11:17 - INFO - Epoch: 02 | Time: 2m 7s
2024-11-03 11:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20521
2024-11-03 11:17 - INFO - 	 Train Loss: 0.212
2024-11-03 11:17 - INFO - 	 Val. Loss: 0.266
2024-11-03 11:17 - INFO - 	 ROC-AUC: 0.764
2024-11-03 11:17 - INFO - 	 PR-AUC: 0.205
2024-11-03 11:17 - INFO - 	 Recall for 0.4 precision: 0.137
2024-11-03 11:17 - INFO - 	 Best Val. Loss: 0.266
2024-11-03 11:17 - INFO - 	 Best ROC-AUC: 0.764
2024-11-03 11:17 - INFO - 	 Best PR-AUC: 0.205
2024-11-03 11:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.788
2024-11-03 11:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-03 11:17 - INFO - 	 Best Recall for 0.4 precision: 0.137
2024-11-03 11:17 - INFO - ---------------------------------------------
2024-11-03 11:19 - INFO - ---------------------------------------------
2024-11-03 11:19 - INFO - Epoch: 03 | Time: 2m 12s
2024-11-03 11:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27248
2024-11-03 11:19 - INFO - 	 Train Loss: 0.188
2024-11-03 11:19 - INFO - 	 Val. Loss: 0.214
2024-11-03 11:19 - INFO - 	 ROC-AUC: 0.792
2024-11-03 11:19 - INFO - 	 PR-AUC: 0.272
2024-11-03 11:19 - INFO - 	 Recall for 0.4 precision: 0.291
2024-11-03 11:19 - INFO - 	 Best Val. Loss: 0.214
2024-11-03 11:19 - INFO - 	 Best ROC-AUC: 0.792
2024-11-03 11:19 - INFO - 	 Best PR-AUC: 0.272
2024-11-03 11:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 11:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 11:19 - INFO - 	 Best Recall for 0.4 precision: 0.291
2024-11-03 11:19 - INFO - ---------------------------------------------
2024-11-03 11:21 - INFO - ---------------------------------------------
2024-11-03 11:21 - INFO - Epoch: 04 | Time: 2m 15s
2024-11-03 11:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27919
2024-11-03 11:21 - INFO - 	 Train Loss: 0.172
2024-11-03 11:21 - INFO - 	 Val. Loss: 0.201
2024-11-03 11:21 - INFO - 	 ROC-AUC: 0.786
2024-11-03 11:21 - INFO - 	 PR-AUC: 0.279
2024-11-03 11:21 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-03 11:21 - INFO - 	 Best Val. Loss: 0.201
2024-11-03 11:21 - INFO - 	 Best ROC-AUC: 0.792
2024-11-03 11:21 - INFO - 	 Best PR-AUC: 0.279
2024-11-03 11:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 11:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 11:21 - INFO - 	 Best Recall for 0.4 precision: 0.306
2024-11-03 11:21 - INFO - ---------------------------------------------
2024-11-03 11:24 - INFO - ---------------------------------------------
2024-11-03 11:24 - INFO - Epoch: 05 | Time: 2m 16s
2024-11-03 11:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31121
2024-11-03 11:24 - INFO - 	 Train Loss: 0.163
2024-11-03 11:24 - INFO - 	 Val. Loss: 0.187
2024-11-03 11:24 - INFO - 	 ROC-AUC: 0.795
2024-11-03 11:24 - INFO - 	 PR-AUC: 0.311
2024-11-03 11:24 - INFO - 	 Recall for 0.4 precision: 0.345
2024-11-03 11:24 - INFO - 	 Best Val. Loss: 0.187
2024-11-03 11:24 - INFO - 	 Best ROC-AUC: 0.795
2024-11-03 11:24 - INFO - 	 Best PR-AUC: 0.311
2024-11-03 11:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 11:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 11:24 - INFO - 	 Best Recall for 0.4 precision: 0.345
2024-11-03 11:24 - INFO - ---------------------------------------------
2024-11-03 11:26 - INFO - ---------------------------------------------
2024-11-03 11:26 - INFO - Epoch: 06 | Time: 2m 15s
2024-11-03 11:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32537
2024-11-03 11:26 - INFO - 	 Train Loss: 0.157
2024-11-03 11:26 - INFO - 	 Val. Loss: 0.172
2024-11-03 11:26 - INFO - 	 ROC-AUC: 0.805
2024-11-03 11:26 - INFO - 	 PR-AUC: 0.325
2024-11-03 11:26 - INFO - 	 Recall for 0.4 precision: 0.400
2024-11-03 11:26 - INFO - 	 Best Val. Loss: 0.172
2024-11-03 11:26 - INFO - 	 Best ROC-AUC: 0.805
2024-11-03 11:26 - INFO - 	 Best PR-AUC: 0.325
2024-11-03 11:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-03 11:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 11:26 - INFO - 	 Best Recall for 0.4 precision: 0.400
2024-11-03 11:26 - INFO - ---------------------------------------------
2024-11-03 11:28 - INFO - ---------------------------------------------
2024-11-03 11:28 - INFO - Epoch: 07 | Time: 2m 6s
2024-11-03 11:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33451
2024-11-03 11:28 - INFO - 	 Train Loss: 0.153
2024-11-03 11:28 - INFO - 	 Val. Loss: 0.172
2024-11-03 11:28 - INFO - 	 ROC-AUC: 0.807
2024-11-03 11:28 - INFO - 	 PR-AUC: 0.335
2024-11-03 11:28 - INFO - 	 Recall for 0.4 precision: 0.384
2024-11-03 11:28 - INFO - 	 Best Val. Loss: 0.172
2024-11-03 11:28 - INFO - 	 Best ROC-AUC: 0.807
2024-11-03 11:28 - INFO - 	 Best PR-AUC: 0.335
2024-11-03 11:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 11:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-03 11:28 - INFO - 	 Best Recall for 0.4 precision: 0.400
2024-11-03 11:28 - INFO - ---------------------------------------------
2024-11-03 11:30 - INFO - ---------------------------------------------
2024-11-03 11:30 - INFO - Epoch: 08 | Time: 2m 5s
2024-11-03 11:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36044
2024-11-03 11:30 - INFO - 	 Train Loss: 0.151
2024-11-03 11:30 - INFO - 	 Val. Loss: 0.165
2024-11-03 11:30 - INFO - 	 ROC-AUC: 0.822
2024-11-03 11:30 - INFO - 	 PR-AUC: 0.360
2024-11-03 11:30 - INFO - 	 Recall for 0.4 precision: 0.439
2024-11-03 11:30 - INFO - 	 Best Val. Loss: 0.165
2024-11-03 11:30 - INFO - 	 Best ROC-AUC: 0.822
2024-11-03 11:30 - INFO - 	 Best PR-AUC: 0.360
2024-11-03 11:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 11:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.140
2024-11-03 11:30 - INFO - 	 Best Recall for 0.4 precision: 0.439
2024-11-03 11:30 - INFO - ---------------------------------------------
2024-11-03 11:32 - INFO - ---------------------------------------------
2024-11-03 11:32 - INFO - Epoch: 09 | Time: 2m 7s
2024-11-03 11:32 - INFO - 	 Train Loss: 0.148
2024-11-03 11:32 - INFO - 	 Val. Loss: 0.159
2024-11-03 11:32 - INFO - 	 ROC-AUC: 0.830
2024-11-03 11:32 - INFO - 	 PR-AUC: 0.343
2024-11-03 11:32 - INFO - 	 Recall for 0.4 precision: 0.452
2024-11-03 11:32 - INFO - 	 Best Val. Loss: 0.159
2024-11-03 11:32 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 11:32 - INFO - 	 Best PR-AUC: 0.360
2024-11-03 11:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-03 11:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.140
2024-11-03 11:32 - INFO - 	 Best Recall for 0.4 precision: 0.452
2024-11-03 11:32 - INFO - ---------------------------------------------
2024-11-03 11:34 - INFO - ---------------------------------------------
2024-11-03 11:34 - INFO - Epoch: 10 | Time: 2m 7s
2024-11-03 11:34 - INFO - 	 Train Loss: 0.149
2024-11-03 11:34 - INFO - 	 Val. Loss: 0.183
2024-11-03 11:34 - INFO - 	 ROC-AUC: 0.823
2024-11-03 11:34 - INFO - 	 PR-AUC: 0.291
2024-11-03 11:34 - INFO - 	 Recall for 0.4 precision: 0.332
2024-11-03 11:34 - INFO - 	 Best Val. Loss: 0.159
2024-11-03 11:34 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 11:34 - INFO - 	 Best PR-AUC: 0.360
2024-11-03 11:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-03 11:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.140
2024-11-03 11:34 - INFO - 	 Best Recall for 0.4 precision: 0.452
2024-11-03 11:34 - INFO - ---------------------------------------------
2024-11-03 11:37 - INFO - Fit the preprocessing pipeline
2024-11-03 11:37 - INFO - Training using device: mps
2024-11-03 11:37 - INFO - Creating generators
2024-11-03 11:37 - INFO - The model has 651,257 trainable parameters
2024-11-03 11:37 - INFO - * Model:
2024-11-03 11:37 - INFO - * -----------
2024-11-03 11:37 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 11:37 - INFO - * -----------
2024-11-03 11:37 - INFO - Evaluating model based on: aucpr
2024-11-03 11:37 - INFO - Training..

2024-11-03 11:39 - INFO - ---------------------------------------------
2024-11-03 11:39 - INFO - Epoch: 01 | Time: 2m 7s
2024-11-03 11:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25901
2024-11-03 11:39 - INFO - 	 Train Loss: 0.253
2024-11-03 11:39 - INFO - 	 Val. Loss: 0.301
2024-11-03 11:39 - INFO - 	 ROC-AUC: 0.758
2024-11-03 11:39 - INFO - 	 PR-AUC: 0.259
2024-11-03 11:39 - INFO - 	 Recall for 0.4 precision: 0.280
2024-11-03 11:39 - INFO - 	 Best Val. Loss: 0.301
2024-11-03 11:39 - INFO - 	 Best ROC-AUC: 0.758
2024-11-03 11:39 - INFO - 	 Best PR-AUC: 0.259
2024-11-03 11:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 11:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 11:39 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 11:39 - INFO - ---------------------------------------------
2024-11-03 11:41 - INFO - ---------------------------------------------
2024-11-03 11:41 - INFO - Epoch: 02 | Time: 2m 16s
2024-11-03 11:41 - INFO - 	 Train Loss: 0.207
2024-11-03 11:41 - INFO - 	 Val. Loss: 0.235
2024-11-03 11:41 - INFO - 	 ROC-AUC: 0.763
2024-11-03 11:41 - INFO - 	 PR-AUC: 0.225
2024-11-03 11:41 - INFO - 	 Recall for 0.4 precision: 0.198
2024-11-03 11:41 - INFO - 	 Best Val. Loss: 0.235
2024-11-03 11:41 - INFO - 	 Best ROC-AUC: 0.763
2024-11-03 11:41 - INFO - 	 Best PR-AUC: 0.259
2024-11-03 11:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-03 11:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 11:41 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 11:41 - INFO - ---------------------------------------------
2024-11-03 11:44 - INFO - ---------------------------------------------
2024-11-03 11:44 - INFO - Epoch: 03 | Time: 2m 16s
2024-11-03 11:44 - INFO - 	 Train Loss: 0.184
2024-11-03 11:44 - INFO - 	 Val. Loss: 0.222
2024-11-03 11:44 - INFO - 	 ROC-AUC: 0.762
2024-11-03 11:44 - INFO - 	 PR-AUC: 0.229
2024-11-03 11:44 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-03 11:44 - INFO - 	 Best Val. Loss: 0.222
2024-11-03 11:44 - INFO - 	 Best ROC-AUC: 0.763
2024-11-03 11:44 - INFO - 	 Best PR-AUC: 0.259
2024-11-03 11:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-03 11:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 11:44 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 11:44 - INFO - ---------------------------------------------
2024-11-03 11:46 - INFO - ---------------------------------------------
2024-11-03 11:46 - INFO - Epoch: 04 | Time: 2m 16s
2024-11-03 11:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26589
2024-11-03 11:46 - INFO - 	 Train Loss: 0.171
2024-11-03 11:46 - INFO - 	 Val. Loss: 0.195
2024-11-03 11:46 - INFO - 	 ROC-AUC: 0.794
2024-11-03 11:46 - INFO - 	 PR-AUC: 0.266
2024-11-03 11:46 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-03 11:46 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 11:46 - INFO - 	 Best ROC-AUC: 0.794
2024-11-03 11:46 - INFO - 	 Best PR-AUC: 0.266
2024-11-03 11:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-03 11:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.188
2024-11-03 11:46 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 11:46 - INFO - ---------------------------------------------
2024-11-03 11:48 - INFO - ---------------------------------------------
2024-11-03 11:48 - INFO - Epoch: 05 | Time: 2m 13s
2024-11-03 11:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27569
2024-11-03 11:48 - INFO - 	 Train Loss: 0.162
2024-11-03 11:48 - INFO - 	 Val. Loss: 0.184
2024-11-03 11:48 - INFO - 	 ROC-AUC: 0.803
2024-11-03 11:48 - INFO - 	 PR-AUC: 0.276
2024-11-03 11:48 - INFO - 	 Recall for 0.4 precision: 0.203
2024-11-03 11:48 - INFO - 	 Best Val. Loss: 0.184
2024-11-03 11:48 - INFO - 	 Best ROC-AUC: 0.803
2024-11-03 11:48 - INFO - 	 Best PR-AUC: 0.276
2024-11-03 11:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-03 11:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 11:48 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 11:48 - INFO - ---------------------------------------------
2024-11-03 11:50 - INFO - ---------------------------------------------
2024-11-03 11:50 - INFO - Epoch: 06 | Time: 2m 13s
2024-11-03 11:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30473
2024-11-03 11:50 - INFO - 	 Train Loss: 0.158
2024-11-03 11:50 - INFO - 	 Val. Loss: 0.173
2024-11-03 11:50 - INFO - 	 ROC-AUC: 0.815
2024-11-03 11:50 - INFO - 	 PR-AUC: 0.305
2024-11-03 11:50 - INFO - 	 Recall for 0.4 precision: 0.250
2024-11-03 11:50 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 11:50 - INFO - 	 Best ROC-AUC: 0.815
2024-11-03 11:50 - INFO - 	 Best PR-AUC: 0.305
2024-11-03 11:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 11:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.172
2024-11-03 11:50 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 11:50 - INFO - ---------------------------------------------
2024-11-03 11:53 - INFO - ---------------------------------------------
2024-11-03 11:53 - INFO - Epoch: 07 | Time: 2m 12s
2024-11-03 11:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31931
2024-11-03 11:53 - INFO - 	 Train Loss: 0.153
2024-11-03 11:53 - INFO - 	 Val. Loss: 0.165
2024-11-03 11:53 - INFO - 	 ROC-AUC: 0.829
2024-11-03 11:53 - INFO - 	 PR-AUC: 0.319
2024-11-03 11:53 - INFO - 	 Recall for 0.4 precision: 0.262
2024-11-03 11:53 - INFO - 	 Best Val. Loss: 0.165
2024-11-03 11:53 - INFO - 	 Best ROC-AUC: 0.829
2024-11-03 11:53 - INFO - 	 Best PR-AUC: 0.319
2024-11-03 11:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 11:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.175
2024-11-03 11:53 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 11:53 - INFO - ---------------------------------------------
2024-11-03 11:55 - INFO - ---------------------------------------------
2024-11-03 11:55 - INFO - Epoch: 08 | Time: 2m 17s
2024-11-03 11:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33683
2024-11-03 11:55 - INFO - 	 Train Loss: 0.150
2024-11-03 11:55 - INFO - 	 Val. Loss: 0.162
2024-11-03 11:55 - INFO - 	 ROC-AUC: 0.830
2024-11-03 11:55 - INFO - 	 PR-AUC: 0.337
2024-11-03 11:55 - INFO - 	 Recall for 0.4 precision: 0.328
2024-11-03 11:55 - INFO - 	 Best Val. Loss: 0.162
2024-11-03 11:55 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 11:55 - INFO - 	 Best PR-AUC: 0.337
2024-11-03 11:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.785
2024-11-03 11:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-03 11:55 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-03 11:55 - INFO - ---------------------------------------------
2024-11-03 11:57 - INFO - ---------------------------------------------
2024-11-03 11:57 - INFO - Epoch: 09 | Time: 2m 21s
2024-11-03 11:57 - INFO - 	 Train Loss: 0.147
2024-11-03 11:57 - INFO - 	 Val. Loss: 0.166
2024-11-03 11:57 - INFO - 	 ROC-AUC: 0.825
2024-11-03 11:57 - INFO - 	 PR-AUC: 0.314
2024-11-03 11:57 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-03 11:57 - INFO - 	 Best Val. Loss: 0.162
2024-11-03 11:57 - INFO - 	 Best ROC-AUC: 0.830
2024-11-03 11:57 - INFO - 	 Best PR-AUC: 0.337
2024-11-03 11:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.785
2024-11-03 11:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-03 11:57 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-03 11:57 - INFO - ---------------------------------------------
2024-11-03 12:00 - INFO - ---------------------------------------------
2024-11-03 12:00 - INFO - Epoch: 10 | Time: 2m 17s
2024-11-03 12:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35128
2024-11-03 12:00 - INFO - 	 Train Loss: 0.150
2024-11-03 12:00 - INFO - 	 Val. Loss: 0.158
2024-11-03 12:00 - INFO - 	 ROC-AUC: 0.832
2024-11-03 12:00 - INFO - 	 PR-AUC: 0.351
2024-11-03 12:00 - INFO - 	 Recall for 0.4 precision: 0.332
2024-11-03 12:00 - INFO - 	 Best Val. Loss: 0.158
2024-11-03 12:00 - INFO - 	 Best ROC-AUC: 0.832
2024-11-03 12:00 - INFO - 	 Best PR-AUC: 0.351
2024-11-03 12:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.781
2024-11-03 12:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-03 12:00 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 12:00 - INFO - ---------------------------------------------
2024-11-03 12:02 - INFO - Fit the preprocessing pipeline
2024-11-03 12:02 - INFO - Training using device: mps
2024-11-03 12:02 - INFO - Creating generators
2024-11-03 12:02 - INFO - The model has 651,257 trainable parameters
2024-11-03 12:02 - INFO - * Model:
2024-11-03 12:02 - INFO - * -----------
2024-11-03 12:02 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 12:02 - INFO - * -----------
2024-11-03 12:02 - INFO - Evaluating model based on: aucpr
2024-11-03 12:02 - INFO - Training..

2024-11-03 12:05 - INFO - ---------------------------------------------
2024-11-03 12:05 - INFO - Epoch: 01 | Time: 2m 15s
2024-11-03 12:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12579
2024-11-03 12:05 - INFO - 	 Train Loss: 0.255
2024-11-03 12:05 - INFO - 	 Val. Loss: 0.348
2024-11-03 12:05 - INFO - 	 ROC-AUC: 0.707
2024-11-03 12:05 - INFO - 	 PR-AUC: 0.126
2024-11-03 12:05 - INFO - 	 Recall for 0.4 precision: 0.086
2024-11-03 12:05 - INFO - 	 Best Val. Loss: 0.348
2024-11-03 12:05 - INFO - 	 Best ROC-AUC: 0.707
2024-11-03 12:05 - INFO - 	 Best PR-AUC: 0.126
2024-11-03 12:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.681
2024-11-03 12:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.126
2024-11-03 12:05 - INFO - 	 Best Recall for 0.4 precision: 0.086
2024-11-03 12:05 - INFO - ---------------------------------------------
2024-11-03 12:07 - INFO - ---------------------------------------------
2024-11-03 12:07 - INFO - Epoch: 02 | Time: 1m 59s
2024-11-03 12:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21976
2024-11-03 12:07 - INFO - 	 Train Loss: 0.216
2024-11-03 12:07 - INFO - 	 Val. Loss: 0.250
2024-11-03 12:07 - INFO - 	 ROC-AUC: 0.763
2024-11-03 12:07 - INFO - 	 PR-AUC: 0.220
2024-11-03 12:07 - INFO - 	 Recall for 0.4 precision: 0.112
2024-11-03 12:07 - INFO - 	 Best Val. Loss: 0.250
2024-11-03 12:07 - INFO - 	 Best ROC-AUC: 0.763
2024-11-03 12:07 - INFO - 	 Best PR-AUC: 0.220
2024-11-03 12:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-03 12:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.116
2024-11-03 12:07 - INFO - 	 Best Recall for 0.4 precision: 0.112
2024-11-03 12:07 - INFO - ---------------------------------------------
2024-11-03 12:09 - INFO - ---------------------------------------------
2024-11-03 12:09 - INFO - Epoch: 03 | Time: 2m 1s
2024-11-03 12:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26093
2024-11-03 12:09 - INFO - 	 Train Loss: 0.189
2024-11-03 12:09 - INFO - 	 Val. Loss: 0.220
2024-11-03 12:09 - INFO - 	 ROC-AUC: 0.771
2024-11-03 12:09 - INFO - 	 PR-AUC: 0.261
2024-11-03 12:09 - INFO - 	 Recall for 0.4 precision: 0.215
2024-11-03 12:09 - INFO - 	 Best Val. Loss: 0.220
2024-11-03 12:09 - INFO - 	 Best ROC-AUC: 0.771
2024-11-03 12:09 - INFO - 	 Best PR-AUC: 0.261
2024-11-03 12:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.727
2024-11-03 12:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-03 12:09 - INFO - 	 Best Recall for 0.4 precision: 0.215
2024-11-03 12:09 - INFO - ---------------------------------------------
2024-11-03 12:11 - INFO - ---------------------------------------------
2024-11-03 12:11 - INFO - Epoch: 04 | Time: 2m 1s
2024-11-03 12:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27357
2024-11-03 12:11 - INFO - 	 Train Loss: 0.174
2024-11-03 12:11 - INFO - 	 Val. Loss: 0.202
2024-11-03 12:11 - INFO - 	 ROC-AUC: 0.781
2024-11-03 12:11 - INFO - 	 PR-AUC: 0.274
2024-11-03 12:11 - INFO - 	 Recall for 0.4 precision: 0.237
2024-11-03 12:11 - INFO - 	 Best Val. Loss: 0.202
2024-11-03 12:11 - INFO - 	 Best ROC-AUC: 0.781
2024-11-03 12:11 - INFO - 	 Best PR-AUC: 0.274
2024-11-03 12:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-03 12:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 12:11 - INFO - 	 Best Recall for 0.4 precision: 0.237
2024-11-03 12:11 - INFO - ---------------------------------------------
2024-11-03 12:13 - INFO - ---------------------------------------------
2024-11-03 12:13 - INFO - Epoch: 05 | Time: 2m 4s
2024-11-03 12:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28848
2024-11-03 12:13 - INFO - 	 Train Loss: 0.163
2024-11-03 12:13 - INFO - 	 Val. Loss: 0.198
2024-11-03 12:13 - INFO - 	 ROC-AUC: 0.790
2024-11-03 12:13 - INFO - 	 PR-AUC: 0.288
2024-11-03 12:13 - INFO - 	 Recall for 0.4 precision: 0.354
2024-11-03 12:13 - INFO - 	 Best Val. Loss: 0.198
2024-11-03 12:13 - INFO - 	 Best ROC-AUC: 0.790
2024-11-03 12:13 - INFO - 	 Best PR-AUC: 0.288
2024-11-03 12:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-03 12:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-03 12:13 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-03 12:13 - INFO - ---------------------------------------------
2024-11-03 12:15 - INFO - ---------------------------------------------
2024-11-03 12:15 - INFO - Epoch: 06 | Time: 2m 2s
2024-11-03 12:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30807
2024-11-03 12:15 - INFO - 	 Train Loss: 0.158
2024-11-03 12:15 - INFO - 	 Val. Loss: 0.187
2024-11-03 12:15 - INFO - 	 ROC-AUC: 0.797
2024-11-03 12:15 - INFO - 	 PR-AUC: 0.308
2024-11-03 12:15 - INFO - 	 Recall for 0.4 precision: 0.356
2024-11-03 12:15 - INFO - 	 Best Val. Loss: 0.187
2024-11-03 12:15 - INFO - 	 Best ROC-AUC: 0.797
2024-11-03 12:15 - INFO - 	 Best PR-AUC: 0.308
2024-11-03 12:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-03 12:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-03 12:15 - INFO - 	 Best Recall for 0.4 precision: 0.356
2024-11-03 12:15 - INFO - ---------------------------------------------
2024-11-03 12:17 - INFO - ---------------------------------------------
2024-11-03 12:17 - INFO - Epoch: 07 | Time: 2m 3s
2024-11-03 12:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33237
2024-11-03 12:17 - INFO - 	 Train Loss: 0.153
2024-11-03 12:17 - INFO - 	 Val. Loss: 0.171
2024-11-03 12:17 - INFO - 	 ROC-AUC: 0.821
2024-11-03 12:17 - INFO - 	 PR-AUC: 0.332
2024-11-03 12:17 - INFO - 	 Recall for 0.4 precision: 0.377
2024-11-03 12:17 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 12:17 - INFO - 	 Best ROC-AUC: 0.821
2024-11-03 12:17 - INFO - 	 Best PR-AUC: 0.332
2024-11-03 12:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 12:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-03 12:17 - INFO - 	 Best Recall for 0.4 precision: 0.377
2024-11-03 12:17 - INFO - ---------------------------------------------
2024-11-03 12:19 - INFO - ---------------------------------------------
2024-11-03 12:19 - INFO - Epoch: 08 | Time: 2m 5s
2024-11-03 12:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35524
2024-11-03 12:19 - INFO - 	 Train Loss: 0.150
2024-11-03 12:19 - INFO - 	 Val. Loss: 0.155
2024-11-03 12:19 - INFO - 	 ROC-AUC: 0.841
2024-11-03 12:19 - INFO - 	 PR-AUC: 0.355
2024-11-03 12:19 - INFO - 	 Recall for 0.4 precision: 0.358
2024-11-03 12:19 - INFO - 	 Best Val. Loss: 0.155
2024-11-03 12:19 - INFO - 	 Best ROC-AUC: 0.841
2024-11-03 12:19 - INFO - 	 Best PR-AUC: 0.355
2024-11-03 12:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.778
2024-11-03 12:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.166
2024-11-03 12:19 - INFO - 	 Best Recall for 0.4 precision: 0.377
2024-11-03 12:19 - INFO - ---------------------------------------------
2024-11-03 12:21 - INFO - ---------------------------------------------
2024-11-03 12:21 - INFO - Epoch: 09 | Time: 2m 3s
2024-11-03 12:21 - INFO - 	 Train Loss: 0.147
2024-11-03 12:21 - INFO - 	 Val. Loss: 0.150
2024-11-03 12:21 - INFO - 	 ROC-AUC: 0.848
2024-11-03 12:21 - INFO - 	 PR-AUC: 0.347
2024-11-03 12:21 - INFO - 	 Recall for 0.4 precision: 0.416
2024-11-03 12:21 - INFO - 	 Best Val. Loss: 0.150
2024-11-03 12:21 - INFO - 	 Best ROC-AUC: 0.848
2024-11-03 12:21 - INFO - 	 Best PR-AUC: 0.355
2024-11-03 12:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-03 12:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.166
2024-11-03 12:21 - INFO - 	 Best Recall for 0.4 precision: 0.416
2024-11-03 12:21 - INFO - ---------------------------------------------
2024-11-03 12:23 - INFO - ---------------------------------------------
2024-11-03 12:23 - INFO - Epoch: 10 | Time: 2m 4s
2024-11-03 12:23 - INFO - 	 Train Loss: 0.145
2024-11-03 12:23 - INFO - 	 Val. Loss: 0.149
2024-11-03 12:23 - INFO - 	 ROC-AUC: 0.858
2024-11-03 12:23 - INFO - 	 PR-AUC: 0.343
2024-11-03 12:23 - INFO - 	 Recall for 0.4 precision: 0.345
2024-11-03 12:23 - INFO - 	 Best Val. Loss: 0.149
2024-11-03 12:23 - INFO - 	 Best ROC-AUC: 0.858
2024-11-03 12:23 - INFO - 	 Best PR-AUC: 0.355
2024-11-03 12:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.791
2024-11-03 12:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.166
2024-11-03 12:23 - INFO - 	 Best Recall for 0.4 precision: 0.416
2024-11-03 12:23 - INFO - ---------------------------------------------
2024-11-03 12:26 - INFO - Fit the preprocessing pipeline
2024-11-03 12:26 - INFO - Training using device: mps
2024-11-03 12:26 - INFO - Creating generators
2024-11-03 12:26 - INFO - The model has 651,257 trainable parameters
2024-11-03 12:26 - INFO - * Model:
2024-11-03 12:26 - INFO - * -----------
2024-11-03 12:26 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 12:26 - INFO - * -----------
2024-11-03 12:26 - INFO - Evaluating model based on: aucpr
2024-11-03 12:26 - INFO - Training..

2024-11-03 12:28 - INFO - ---------------------------------------------
2024-11-03 12:28 - INFO - Epoch: 01 | Time: 1m 52s
2024-11-03 12:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17158
2024-11-03 12:28 - INFO - 	 Train Loss: 0.254
2024-11-03 12:28 - INFO - 	 Val. Loss: 0.282
2024-11-03 12:28 - INFO - 	 ROC-AUC: 0.743
2024-11-03 12:28 - INFO - 	 PR-AUC: 0.172
2024-11-03 12:28 - INFO - 	 Recall for 0.4 precision: 0.063
2024-11-03 12:28 - INFO - 	 Best Val. Loss: 0.282
2024-11-03 12:28 - INFO - 	 Best ROC-AUC: 0.743
2024-11-03 12:28 - INFO - 	 Best PR-AUC: 0.172
2024-11-03 12:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-11-03 12:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 12:28 - INFO - 	 Best Recall for 0.4 precision: 0.063
2024-11-03 12:28 - INFO - ---------------------------------------------
2024-11-03 12:30 - INFO - ---------------------------------------------
2024-11-03 12:30 - INFO - Epoch: 02 | Time: 2m 1s
2024-11-03 12:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20542
2024-11-03 12:30 - INFO - 	 Train Loss: 0.207
2024-11-03 12:30 - INFO - 	 Val. Loss: 0.249
2024-11-03 12:30 - INFO - 	 ROC-AUC: 0.774
2024-11-03 12:30 - INFO - 	 PR-AUC: 0.205
2024-11-03 12:30 - INFO - 	 Recall for 0.4 precision: 0.078
2024-11-03 12:30 - INFO - 	 Best Val. Loss: 0.249
2024-11-03 12:30 - INFO - 	 Best ROC-AUC: 0.774
2024-11-03 12:30 - INFO - 	 Best PR-AUC: 0.205
2024-11-03 12:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-03 12:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-03 12:30 - INFO - 	 Best Recall for 0.4 precision: 0.078
2024-11-03 12:30 - INFO - ---------------------------------------------
2024-11-03 12:32 - INFO - ---------------------------------------------
2024-11-03 12:32 - INFO - Epoch: 03 | Time: 2m 3s
2024-11-03 12:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24968
2024-11-03 12:32 - INFO - 	 Train Loss: 0.188
2024-11-03 12:32 - INFO - 	 Val. Loss: 0.212
2024-11-03 12:32 - INFO - 	 ROC-AUC: 0.783
2024-11-03 12:32 - INFO - 	 PR-AUC: 0.250
2024-11-03 12:32 - INFO - 	 Recall for 0.4 precision: 0.260
2024-11-03 12:32 - INFO - 	 Best Val. Loss: 0.212
2024-11-03 12:32 - INFO - 	 Best ROC-AUC: 0.783
2024-11-03 12:32 - INFO - 	 Best PR-AUC: 0.250
2024-11-03 12:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-03 12:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-03 12:32 - INFO - 	 Best Recall for 0.4 precision: 0.260
2024-11-03 12:32 - INFO - ---------------------------------------------
2024-11-03 12:34 - INFO - ---------------------------------------------
2024-11-03 12:34 - INFO - Epoch: 04 | Time: 2m 4s
2024-11-03 12:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29482
2024-11-03 12:34 - INFO - 	 Train Loss: 0.174
2024-11-03 12:34 - INFO - 	 Val. Loss: 0.195
2024-11-03 12:34 - INFO - 	 ROC-AUC: 0.793
2024-11-03 12:34 - INFO - 	 PR-AUC: 0.295
2024-11-03 12:34 - INFO - 	 Recall for 0.4 precision: 0.338
2024-11-03 12:34 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 12:34 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 12:34 - INFO - 	 Best PR-AUC: 0.295
2024-11-03 12:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 12:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 12:34 - INFO - 	 Best Recall for 0.4 precision: 0.338
2024-11-03 12:34 - INFO - ---------------------------------------------
2024-11-03 12:36 - INFO - ---------------------------------------------
2024-11-03 12:36 - INFO - Epoch: 05 | Time: 2m 4s
2024-11-03 12:36 - INFO - 	 Train Loss: 0.164
2024-11-03 12:36 - INFO - 	 Val. Loss: 0.188
2024-11-03 12:36 - INFO - 	 ROC-AUC: 0.797
2024-11-03 12:36 - INFO - 	 PR-AUC: 0.283
2024-11-03 12:36 - INFO - 	 Recall for 0.4 precision: 0.325
2024-11-03 12:36 - INFO - 	 Best Val. Loss: 0.188
2024-11-03 12:36 - INFO - 	 Best ROC-AUC: 0.797
2024-11-03 12:36 - INFO - 	 Best PR-AUC: 0.295
2024-11-03 12:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-03 12:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 12:36 - INFO - 	 Best Recall for 0.4 precision: 0.338
2024-11-03 12:36 - INFO - ---------------------------------------------
2024-11-03 12:38 - INFO - ---------------------------------------------
2024-11-03 12:38 - INFO - Epoch: 06 | Time: 2m 4s
2024-11-03 12:38 - INFO - 	 Train Loss: 0.159
2024-11-03 12:38 - INFO - 	 Val. Loss: 0.175
2024-11-03 12:38 - INFO - 	 ROC-AUC: 0.820
2024-11-03 12:38 - INFO - 	 PR-AUC: 0.290
2024-11-03 12:38 - INFO - 	 Recall for 0.4 precision: 0.328
2024-11-03 12:38 - INFO - 	 Best Val. Loss: 0.175
2024-11-03 12:38 - INFO - 	 Best ROC-AUC: 0.820
2024-11-03 12:38 - INFO - 	 Best PR-AUC: 0.295
2024-11-03 12:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.772
2024-11-03 12:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-03 12:38 - INFO - 	 Best Recall for 0.4 precision: 0.338
2024-11-03 12:38 - INFO - ---------------------------------------------
2024-11-03 12:40 - INFO - ---------------------------------------------
2024-11-03 12:40 - INFO - Epoch: 07 | Time: 2m 4s
2024-11-03 12:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32286
2024-11-03 12:40 - INFO - 	 Train Loss: 0.153
2024-11-03 12:40 - INFO - 	 Val. Loss: 0.164
2024-11-03 12:40 - INFO - 	 ROC-AUC: 0.835
2024-11-03 12:40 - INFO - 	 PR-AUC: 0.323
2024-11-03 12:40 - INFO - 	 Recall for 0.4 precision: 0.325
2024-11-03 12:40 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 12:40 - INFO - 	 Best ROC-AUC: 0.835
2024-11-03 12:40 - INFO - 	 Best PR-AUC: 0.323
2024-11-03 12:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.785
2024-11-03 12:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.174
2024-11-03 12:40 - INFO - 	 Best Recall for 0.4 precision: 0.338
2024-11-03 12:40 - INFO - ---------------------------------------------
2024-11-03 12:42 - INFO - ---------------------------------------------
2024-11-03 12:42 - INFO - Epoch: 08 | Time: 2m 4s
2024-11-03 12:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32863
2024-11-03 12:42 - INFO - 	 Train Loss: 0.149
2024-11-03 12:42 - INFO - 	 Val. Loss: 0.165
2024-11-03 12:42 - INFO - 	 ROC-AUC: 0.871
2024-11-03 12:42 - INFO - 	 PR-AUC: 0.329
2024-11-03 12:42 - INFO - 	 Recall for 0.4 precision: 0.353
2024-11-03 12:42 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 12:42 - INFO - 	 Best ROC-AUC: 0.871
2024-11-03 12:42 - INFO - 	 Best PR-AUC: 0.329
2024-11-03 12:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.804
2024-11-03 12:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 12:42 - INFO - 	 Best Recall for 0.4 precision: 0.353
2024-11-03 12:42 - INFO - ---------------------------------------------
2024-11-03 12:44 - INFO - ---------------------------------------------
2024-11-03 12:44 - INFO - Epoch: 09 | Time: 2m 4s
2024-11-03 12:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38518
2024-11-03 12:44 - INFO - 	 Train Loss: 0.145
2024-11-03 12:44 - INFO - 	 Val. Loss: 0.131
2024-11-03 12:44 - INFO - 	 ROC-AUC: 0.931
2024-11-03 12:44 - INFO - 	 PR-AUC: 0.385
2024-11-03 12:44 - INFO - 	 Recall for 0.4 precision: 0.579
2024-11-03 12:44 - INFO - 	 Best Val. Loss: 0.131
2024-11-03 12:44 - INFO - 	 Best ROC-AUC: 0.931
2024-11-03 12:44 - INFO - 	 Best PR-AUC: 0.385
2024-11-03 12:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.890
2024-11-03 12:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.259
2024-11-03 12:44 - INFO - 	 Best Recall for 0.4 precision: 0.579
2024-11-03 12:44 - INFO - ---------------------------------------------
2024-11-03 12:46 - INFO - ---------------------------------------------
2024-11-03 12:46 - INFO - Epoch: 10 | Time: 2m 4s
2024-11-03 12:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4472
2024-11-03 12:46 - INFO - 	 Train Loss: 0.129
2024-11-03 12:46 - INFO - 	 Val. Loss: 0.115
2024-11-03 12:46 - INFO - 	 ROC-AUC: 0.951
2024-11-03 12:46 - INFO - 	 PR-AUC: 0.447
2024-11-03 12:46 - INFO - 	 Recall for 0.4 precision: 0.719
2024-11-03 12:46 - INFO - 	 Best Val. Loss: 0.115
2024-11-03 12:46 - INFO - 	 Best ROC-AUC: 0.951
2024-11-03 12:46 - INFO - 	 Best PR-AUC: 0.447
2024-11-03 12:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-03 12:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.295
2024-11-03 12:46 - INFO - 	 Best Recall for 0.4 precision: 0.719
2024-11-03 12:46 - INFO - ---------------------------------------------
