2024-11-04 05:14 - INFO - Fit the preprocessing pipeline
2024-11-04 05:14 - INFO - Training using device: mps
2024-11-04 05:14 - INFO - Creating generators
2024-11-04 05:14 - INFO - The model has 651,257 trainable parameters
2024-11-04 05:14 - INFO - * Model:
2024-11-04 05:14 - INFO - * -----------
2024-11-04 05:14 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 05:14 - INFO - * -----------
2024-11-04 05:14 - INFO - Evaluating model based on: aucpr
2024-11-04 05:14 - INFO - Training..

2024-11-04 05:15 - INFO - ---------------------------------------------
2024-11-04 05:15 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 05:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21745
2024-11-04 05:15 - INFO - 	 Train Loss: 0.253
2024-11-04 05:15 - INFO - 	 Val. Loss: 0.275
2024-11-04 05:15 - INFO - 	 ROC-AUC: 0.744
2024-11-04 05:15 - INFO - 	 PR-AUC: 0.217
2024-11-04 05:15 - INFO - 	 Recall for 0.4 precision: 0.172
2024-11-04 05:15 - INFO - 	 Best Val. Loss: 0.275
2024-11-04 05:15 - INFO - 	 Best ROC-AUC: 0.744
2024-11-04 05:15 - INFO - 	 Best PR-AUC: 0.217
2024-11-04 05:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-11-04 05:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-04 05:15 - INFO - 	 Best Recall for 0.4 precision: 0.172
2024-11-04 05:15 - INFO - ---------------------------------------------
2024-11-04 05:17 - INFO - ---------------------------------------------
2024-11-04 05:17 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 05:17 - INFO - 	 Train Loss: 0.204
2024-11-04 05:17 - INFO - 	 Val. Loss: 0.236
2024-11-04 05:17 - INFO - 	 ROC-AUC: 0.769
2024-11-04 05:17 - INFO - 	 PR-AUC: 0.196
2024-11-04 05:17 - INFO - 	 Recall for 0.4 precision: 0.068
2024-11-04 05:17 - INFO - 	 Best Val. Loss: 0.236
2024-11-04 05:17 - INFO - 	 Best ROC-AUC: 0.769
2024-11-04 05:17 - INFO - 	 Best PR-AUC: 0.217
2024-11-04 05:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.740
2024-11-04 05:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-04 05:17 - INFO - 	 Best Recall for 0.4 precision: 0.172
2024-11-04 05:17 - INFO - ---------------------------------------------
2024-11-04 05:19 - INFO - ---------------------------------------------
2024-11-04 05:19 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-04 05:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25431
2024-11-04 05:19 - INFO - 	 Train Loss: 0.183
2024-11-04 05:19 - INFO - 	 Val. Loss: 0.201
2024-11-04 05:19 - INFO - 	 ROC-AUC: 0.789
2024-11-04 05:19 - INFO - 	 PR-AUC: 0.254
2024-11-04 05:19 - INFO - 	 Recall for 0.4 precision: 0.265
2024-11-04 05:19 - INFO - 	 Best Val. Loss: 0.201
2024-11-04 05:19 - INFO - 	 Best ROC-AUC: 0.789
2024-11-04 05:19 - INFO - 	 Best PR-AUC: 0.254
2024-11-04 05:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-04 05:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-04 05:19 - INFO - 	 Best Recall for 0.4 precision: 0.265
2024-11-04 05:19 - INFO - ---------------------------------------------
2024-11-04 05:20 - INFO - ---------------------------------------------
2024-11-04 05:20 - INFO - Epoch: 04 | Time: 1m 43s
2024-11-04 05:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29549
2024-11-04 05:20 - INFO - 	 Train Loss: 0.169
2024-11-04 05:20 - INFO - 	 Val. Loss: 0.197
2024-11-04 05:20 - INFO - 	 ROC-AUC: 0.796
2024-11-04 05:20 - INFO - 	 PR-AUC: 0.295
2024-11-04 05:20 - INFO - 	 Recall for 0.4 precision: 0.314
2024-11-04 05:20 - INFO - 	 Best Val. Loss: 0.197
2024-11-04 05:20 - INFO - 	 Best ROC-AUC: 0.796
2024-11-04 05:20 - INFO - 	 Best PR-AUC: 0.295
2024-11-04 05:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 05:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 05:20 - INFO - 	 Best Recall for 0.4 precision: 0.314
2024-11-04 05:20 - INFO - ---------------------------------------------
2024-11-04 05:22 - INFO - ---------------------------------------------
2024-11-04 05:22 - INFO - Epoch: 05 | Time: 1m 45s
2024-11-04 05:22 - INFO - 	 Train Loss: 0.163
2024-11-04 05:22 - INFO - 	 Val. Loss: 0.180
2024-11-04 05:22 - INFO - 	 ROC-AUC: 0.794
2024-11-04 05:22 - INFO - 	 PR-AUC: 0.283
2024-11-04 05:22 - INFO - 	 Recall for 0.4 precision: 0.237
2024-11-04 05:22 - INFO - 	 Best Val. Loss: 0.180
2024-11-04 05:22 - INFO - 	 Best ROC-AUC: 0.796
2024-11-04 05:22 - INFO - 	 Best PR-AUC: 0.295
2024-11-04 05:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 05:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 05:22 - INFO - 	 Best Recall for 0.4 precision: 0.314
2024-11-04 05:22 - INFO - ---------------------------------------------
2024-11-04 05:24 - INFO - ---------------------------------------------
2024-11-04 05:24 - INFO - Epoch: 06 | Time: 1m 46s
2024-11-04 05:24 - INFO - 	 Train Loss: 0.158
2024-11-04 05:24 - INFO - 	 Val. Loss: 0.184
2024-11-04 05:24 - INFO - 	 ROC-AUC: 0.804
2024-11-04 05:24 - INFO - 	 PR-AUC: 0.281
2024-11-04 05:24 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-04 05:24 - INFO - 	 Best Val. Loss: 0.180
2024-11-04 05:24 - INFO - 	 Best ROC-AUC: 0.804
2024-11-04 05:24 - INFO - 	 Best PR-AUC: 0.295
2024-11-04 05:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-04 05:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 05:24 - INFO - 	 Best Recall for 0.4 precision: 0.314
2024-11-04 05:24 - INFO - ---------------------------------------------
2024-11-04 05:26 - INFO - ---------------------------------------------
2024-11-04 05:26 - INFO - Epoch: 07 | Time: 1m 48s
2024-11-04 05:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32624
2024-11-04 05:26 - INFO - 	 Train Loss: 0.155
2024-11-04 05:26 - INFO - 	 Val. Loss: 0.175
2024-11-04 05:26 - INFO - 	 ROC-AUC: 0.834
2024-11-04 05:26 - INFO - 	 PR-AUC: 0.326
2024-11-04 05:26 - INFO - 	 Recall for 0.4 precision: 0.337
2024-11-04 05:26 - INFO - 	 Best Val. Loss: 0.175
2024-11-04 05:26 - INFO - 	 Best ROC-AUC: 0.834
2024-11-04 05:26 - INFO - 	 Best PR-AUC: 0.326
2024-11-04 05:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.776
2024-11-04 05:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.180
2024-11-04 05:26 - INFO - 	 Best Recall for 0.4 precision: 0.337
2024-11-04 05:26 - INFO - ---------------------------------------------
2024-11-04 05:28 - INFO - ---------------------------------------------
2024-11-04 05:28 - INFO - Epoch: 08 | Time: 1m 48s
2024-11-04 05:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43995
2024-11-04 05:28 - INFO - 	 Train Loss: 0.144
2024-11-04 05:28 - INFO - 	 Val. Loss: 0.134
2024-11-04 05:28 - INFO - 	 ROC-AUC: 0.926
2024-11-04 05:28 - INFO - 	 PR-AUC: 0.440
2024-11-04 05:28 - INFO - 	 Recall for 0.4 precision: 0.512
2024-11-04 05:28 - INFO - 	 Best Val. Loss: 0.134
2024-11-04 05:28 - INFO - 	 Best ROC-AUC: 0.926
2024-11-04 05:28 - INFO - 	 Best PR-AUC: 0.440
2024-11-04 05:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.878
2024-11-04 05:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-04 05:28 - INFO - 	 Best Recall for 0.4 precision: 0.512
2024-11-04 05:28 - INFO - ---------------------------------------------
2024-11-04 05:29 - INFO - ---------------------------------------------
2024-11-04 05:29 - INFO - Epoch: 09 | Time: 1m 48s
2024-11-04 05:29 - INFO - 	 Train Loss: 0.121
2024-11-04 05:29 - INFO - 	 Val. Loss: 0.154
2024-11-04 05:29 - INFO - 	 ROC-AUC: 0.928
2024-11-04 05:29 - INFO - 	 PR-AUC: 0.403
2024-11-04 05:29 - INFO - 	 Recall for 0.4 precision: 0.546
2024-11-04 05:29 - INFO - 	 Best Val. Loss: 0.134
2024-11-04 05:29 - INFO - 	 Best ROC-AUC: 0.928
2024-11-04 05:29 - INFO - 	 Best PR-AUC: 0.440
2024-11-04 05:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.912
2024-11-04 05:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-04 05:29 - INFO - 	 Best Recall for 0.4 precision: 0.546
2024-11-04 05:29 - INFO - ---------------------------------------------
2024-11-04 05:31 - INFO - ---------------------------------------------
2024-11-04 05:31 - INFO - Epoch: 10 | Time: 1m 48s
2024-11-04 05:31 - INFO - 	 Train Loss: 0.111
2024-11-04 05:31 - INFO - 	 Val. Loss: 0.163
2024-11-04 05:31 - INFO - 	 ROC-AUC: 0.914
2024-11-04 05:31 - INFO - 	 PR-AUC: 0.430
2024-11-04 05:31 - INFO - 	 Recall for 0.4 precision: 0.564
2024-11-04 05:31 - INFO - 	 Best Val. Loss: 0.134
2024-11-04 05:31 - INFO - 	 Best ROC-AUC: 0.928
2024-11-04 05:31 - INFO - 	 Best PR-AUC: 0.440
2024-11-04 05:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.912
2024-11-04 05:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-04 05:31 - INFO - 	 Best Recall for 0.4 precision: 0.564
2024-11-04 05:31 - INFO - ---------------------------------------------
2024-11-04 05:34 - INFO - Fit the preprocessing pipeline
2024-11-04 05:34 - INFO - Training using device: mps
2024-11-04 05:34 - INFO - Creating generators
2024-11-04 05:34 - INFO - The model has 651,257 trainable parameters
2024-11-04 05:34 - INFO - * Model:
2024-11-04 05:34 - INFO - * -----------
2024-11-04 05:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 05:34 - INFO - * -----------
2024-11-04 05:34 - INFO - Evaluating model based on: aucpr
2024-11-04 05:34 - INFO - Training..

2024-11-04 05:36 - INFO - ---------------------------------------------
2024-11-04 05:36 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 05:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14526
2024-11-04 05:36 - INFO - 	 Train Loss: 0.253
2024-11-04 05:36 - INFO - 	 Val. Loss: 0.285
2024-11-04 05:36 - INFO - 	 ROC-AUC: 0.733
2024-11-04 05:36 - INFO - 	 PR-AUC: 0.145
2024-11-04 05:36 - INFO - 	 Recall for 0.4 precision: 0.015
2024-11-04 05:36 - INFO - 	 Best Val. Loss: 0.285
2024-11-04 05:36 - INFO - 	 Best ROC-AUC: 0.733
2024-11-04 05:36 - INFO - 	 Best PR-AUC: 0.145
2024-11-04 05:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 05:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-04 05:36 - INFO - 	 Best Recall for 0.4 precision: 0.015
2024-11-04 05:36 - INFO - ---------------------------------------------
2024-11-04 05:37 - INFO - ---------------------------------------------
2024-11-04 05:37 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 05:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25428
2024-11-04 05:37 - INFO - 	 Train Loss: 0.204
2024-11-04 05:37 - INFO - 	 Val. Loss: 0.227
2024-11-04 05:37 - INFO - 	 ROC-AUC: 0.788
2024-11-04 05:37 - INFO - 	 PR-AUC: 0.254
2024-11-04 05:37 - INFO - 	 Recall for 0.4 precision: 0.202
2024-11-04 05:37 - INFO - 	 Best Val. Loss: 0.227
2024-11-04 05:37 - INFO - 	 Best ROC-AUC: 0.788
2024-11-04 05:37 - INFO - 	 Best PR-AUC: 0.254
2024-11-04 05:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-04 05:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-04 05:37 - INFO - 	 Best Recall for 0.4 precision: 0.202
2024-11-04 05:37 - INFO - ---------------------------------------------
2024-11-04 05:39 - INFO - ---------------------------------------------
2024-11-04 05:39 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-04 05:39 - INFO - 	 Train Loss: 0.183
2024-11-04 05:39 - INFO - 	 Val. Loss: 0.205
2024-11-04 05:39 - INFO - 	 ROC-AUC: 0.800
2024-11-04 05:39 - INFO - 	 PR-AUC: 0.248
2024-11-04 05:39 - INFO - 	 Recall for 0.4 precision: 0.211
2024-11-04 05:39 - INFO - 	 Best Val. Loss: 0.205
2024-11-04 05:39 - INFO - 	 Best ROC-AUC: 0.800
2024-11-04 05:39 - INFO - 	 Best PR-AUC: 0.254
2024-11-04 05:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-04 05:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-04 05:39 - INFO - 	 Best Recall for 0.4 precision: 0.211
2024-11-04 05:39 - INFO - ---------------------------------------------
2024-11-04 05:41 - INFO - ---------------------------------------------
2024-11-04 05:41 - INFO - Epoch: 04 | Time: 1m 42s
2024-11-04 05:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28869
2024-11-04 05:41 - INFO - 	 Train Loss: 0.168
2024-11-04 05:41 - INFO - 	 Val. Loss: 0.196
2024-11-04 05:41 - INFO - 	 ROC-AUC: 0.802
2024-11-04 05:41 - INFO - 	 PR-AUC: 0.289
2024-11-04 05:41 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-04 05:41 - INFO - 	 Best Val. Loss: 0.196
2024-11-04 05:41 - INFO - 	 Best ROC-AUC: 0.802
2024-11-04 05:41 - INFO - 	 Best PR-AUC: 0.289
2024-11-04 05:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-04 05:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 05:41 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 05:41 - INFO - ---------------------------------------------
2024-11-04 05:42 - INFO - ---------------------------------------------
2024-11-04 05:42 - INFO - Epoch: 05 | Time: 1m 46s
2024-11-04 05:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32022
2024-11-04 05:42 - INFO - 	 Train Loss: 0.163
2024-11-04 05:42 - INFO - 	 Val. Loss: 0.170
2024-11-04 05:42 - INFO - 	 ROC-AUC: 0.840
2024-11-04 05:42 - INFO - 	 PR-AUC: 0.320
2024-11-04 05:42 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-04 05:42 - INFO - 	 Best Val. Loss: 0.170
2024-11-04 05:42 - INFO - 	 Best ROC-AUC: 0.840
2024-11-04 05:42 - INFO - 	 Best PR-AUC: 0.320
2024-11-04 05:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.791
2024-11-04 05:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-04 05:42 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 05:42 - INFO - ---------------------------------------------
2024-11-04 05:44 - INFO - ---------------------------------------------
2024-11-04 05:44 - INFO - Epoch: 06 | Time: 1m 49s
2024-11-04 05:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37793
2024-11-04 05:44 - INFO - 	 Train Loss: 0.152
2024-11-04 05:44 - INFO - 	 Val. Loss: 0.162
2024-11-04 05:44 - INFO - 	 ROC-AUC: 0.914
2024-11-04 05:44 - INFO - 	 PR-AUC: 0.378
2024-11-04 05:44 - INFO - 	 Recall for 0.4 precision: 0.433
2024-11-04 05:44 - INFO - 	 Best Val. Loss: 0.162
2024-11-04 05:44 - INFO - 	 Best ROC-AUC: 0.914
2024-11-04 05:44 - INFO - 	 Best PR-AUC: 0.378
2024-11-04 05:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.870
2024-11-04 05:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.202
2024-11-04 05:44 - INFO - 	 Best Recall for 0.4 precision: 0.433
2024-11-04 05:44 - INFO - ---------------------------------------------
2024-11-04 05:46 - INFO - ---------------------------------------------
2024-11-04 05:46 - INFO - Epoch: 07 | Time: 1m 49s
2024-11-04 05:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47011
2024-11-04 05:46 - INFO - 	 Train Loss: 0.134
2024-11-04 05:46 - INFO - 	 Val. Loss: 0.122
2024-11-04 05:46 - INFO - 	 ROC-AUC: 0.956
2024-11-04 05:46 - INFO - 	 PR-AUC: 0.470
2024-11-04 05:46 - INFO - 	 Recall for 0.4 precision: 0.711
2024-11-04 05:46 - INFO - 	 Best Val. Loss: 0.122
2024-11-04 05:46 - INFO - 	 Best ROC-AUC: 0.956
2024-11-04 05:46 - INFO - 	 Best PR-AUC: 0.470
2024-11-04 05:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-11-04 05:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.260
2024-11-04 05:46 - INFO - 	 Best Recall for 0.4 precision: 0.711
2024-11-04 05:46 - INFO - ---------------------------------------------
2024-11-04 05:48 - INFO - ---------------------------------------------
2024-11-04 05:48 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-04 05:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5152
2024-11-04 05:48 - INFO - 	 Train Loss: 0.118
2024-11-04 05:48 - INFO - 	 Val. Loss: 0.120
2024-11-04 05:48 - INFO - 	 ROC-AUC: 0.951
2024-11-04 05:48 - INFO - 	 PR-AUC: 0.515
2024-11-04 05:48 - INFO - 	 Recall for 0.4 precision: 0.763
2024-11-04 05:48 - INFO - 	 Best Val. Loss: 0.120
2024-11-04 05:48 - INFO - 	 Best ROC-AUC: 0.956
2024-11-04 05:48 - INFO - 	 Best PR-AUC: 0.515
2024-11-04 05:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-11-04 05:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.315
2024-11-04 05:48 - INFO - 	 Best Recall for 0.4 precision: 0.763
2024-11-04 05:48 - INFO - ---------------------------------------------
2024-11-04 05:50 - INFO - ---------------------------------------------
2024-11-04 05:50 - INFO - Epoch: 09 | Time: 1m 52s
2024-11-04 05:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5784
2024-11-04 05:50 - INFO - 	 Train Loss: 0.112
2024-11-04 05:50 - INFO - 	 Val. Loss: 0.098
2024-11-04 05:50 - INFO - 	 ROC-AUC: 0.972
2024-11-04 05:50 - INFO - 	 PR-AUC: 0.578
2024-11-04 05:50 - INFO - 	 Recall for 0.4 precision: 0.894
2024-11-04 05:50 - INFO - 	 Best Val. Loss: 0.098
2024-11-04 05:50 - INFO - 	 Best ROC-AUC: 0.972
2024-11-04 05:50 - INFO - 	 Best PR-AUC: 0.578
2024-11-04 05:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-04 05:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-11-04 05:50 - INFO - 	 Best Recall for 0.4 precision: 0.894
2024-11-04 05:50 - INFO - ---------------------------------------------
2024-11-04 05:52 - INFO - ---------------------------------------------
2024-11-04 05:52 - INFO - Epoch: 10 | Time: 1m 52s
2024-11-04 05:52 - INFO - 	 Train Loss: 0.105
2024-11-04 05:52 - INFO - 	 Val. Loss: 0.331
2024-11-04 05:52 - INFO - 	 ROC-AUC: 0.820
2024-11-04 05:52 - INFO - 	 PR-AUC: 0.172
2024-11-04 05:52 - INFO - 	 Recall for 0.4 precision: 0.216
2024-11-04 05:52 - INFO - 	 Best Val. Loss: 0.098
2024-11-04 05:52 - INFO - 	 Best ROC-AUC: 0.972
2024-11-04 05:52 - INFO - 	 Best PR-AUC: 0.578
2024-11-04 05:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-04 05:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-11-04 05:52 - INFO - 	 Best Recall for 0.4 precision: 0.894
2024-11-04 05:52 - INFO - ---------------------------------------------
2024-11-04 05:54 - INFO - Fit the preprocessing pipeline
2024-11-04 05:54 - INFO - Training using device: mps
2024-11-04 05:54 - INFO - Creating generators
2024-11-04 05:54 - INFO - The model has 651,257 trainable parameters
2024-11-04 05:54 - INFO - * Model:
2024-11-04 05:54 - INFO - * -----------
2024-11-04 05:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 05:54 - INFO - * -----------
2024-11-04 05:54 - INFO - Evaluating model based on: aucpr
2024-11-04 05:54 - INFO - Training..

2024-11-04 05:56 - INFO - ---------------------------------------------
2024-11-04 05:56 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 05:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20337
2024-11-04 05:56 - INFO - 	 Train Loss: 0.255
2024-11-04 05:56 - INFO - 	 Val. Loss: 0.278
2024-11-04 05:56 - INFO - 	 ROC-AUC: 0.752
2024-11-04 05:56 - INFO - 	 PR-AUC: 0.203
2024-11-04 05:56 - INFO - 	 Recall for 0.4 precision: 0.124
2024-11-04 05:56 - INFO - 	 Best Val. Loss: 0.278
2024-11-04 05:56 - INFO - 	 Best ROC-AUC: 0.752
2024-11-04 05:56 - INFO - 	 Best PR-AUC: 0.203
2024-11-04 05:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-04 05:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.140
2024-11-04 05:56 - INFO - 	 Best Recall for 0.4 precision: 0.124
2024-11-04 05:56 - INFO - ---------------------------------------------
2024-11-04 05:58 - INFO - ---------------------------------------------
2024-11-04 05:58 - INFO - Epoch: 02 | Time: 1m 45s
2024-11-04 05:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23678
2024-11-04 05:58 - INFO - 	 Train Loss: 0.204
2024-11-04 05:58 - INFO - 	 Val. Loss: 0.228
2024-11-04 05:58 - INFO - 	 ROC-AUC: 0.772
2024-11-04 05:58 - INFO - 	 PR-AUC: 0.237
2024-11-04 05:58 - INFO - 	 Recall for 0.4 precision: 0.150
2024-11-04 05:58 - INFO - 	 Best Val. Loss: 0.228
2024-11-04 05:58 - INFO - 	 Best ROC-AUC: 0.772
2024-11-04 05:58 - INFO - 	 Best PR-AUC: 0.237
2024-11-04 05:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-04 05:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 05:58 - INFO - 	 Best Recall for 0.4 precision: 0.150
2024-11-04 05:58 - INFO - ---------------------------------------------
2024-11-04 06:00 - INFO - ---------------------------------------------
2024-11-04 06:00 - INFO - Epoch: 03 | Time: 1m 47s
2024-11-04 06:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23905
2024-11-04 06:00 - INFO - 	 Train Loss: 0.182
2024-11-04 06:00 - INFO - 	 Val. Loss: 0.212
2024-11-04 06:00 - INFO - 	 ROC-AUC: 0.769
2024-11-04 06:00 - INFO - 	 PR-AUC: 0.239
2024-11-04 06:00 - INFO - 	 Recall for 0.4 precision: 0.164
2024-11-04 06:00 - INFO - 	 Best Val. Loss: 0.212
2024-11-04 06:00 - INFO - 	 Best ROC-AUC: 0.772
2024-11-04 06:00 - INFO - 	 Best PR-AUC: 0.239
2024-11-04 06:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-04 06:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-04 06:00 - INFO - 	 Best Recall for 0.4 precision: 0.164
2024-11-04 06:00 - INFO - ---------------------------------------------
2024-11-04 06:01 - INFO - ---------------------------------------------
2024-11-04 06:01 - INFO - Epoch: 04 | Time: 1m 48s
2024-11-04 06:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25516
2024-11-04 06:01 - INFO - 	 Train Loss: 0.169
2024-11-04 06:01 - INFO - 	 Val. Loss: 0.194
2024-11-04 06:01 - INFO - 	 ROC-AUC: 0.776
2024-11-04 06:01 - INFO - 	 PR-AUC: 0.255
2024-11-04 06:01 - INFO - 	 Recall for 0.4 precision: 0.237
2024-11-04 06:01 - INFO - 	 Best Val. Loss: 0.194
2024-11-04 06:01 - INFO - 	 Best ROC-AUC: 0.776
2024-11-04 06:01 - INFO - 	 Best PR-AUC: 0.255
2024-11-04 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-04 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-04 06:01 - INFO - 	 Best Recall for 0.4 precision: 0.237
2024-11-04 06:01 - INFO - ---------------------------------------------
2024-11-04 06:03 - INFO - ---------------------------------------------
2024-11-04 06:03 - INFO - Epoch: 05 | Time: 1m 50s
2024-11-04 06:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28973
2024-11-04 06:03 - INFO - 	 Train Loss: 0.162
2024-11-04 06:03 - INFO - 	 Val. Loss: 0.180
2024-11-04 06:03 - INFO - 	 ROC-AUC: 0.790
2024-11-04 06:03 - INFO - 	 PR-AUC: 0.290
2024-11-04 06:03 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-04 06:03 - INFO - 	 Best Val. Loss: 0.180
2024-11-04 06:03 - INFO - 	 Best ROC-AUC: 0.790
2024-11-04 06:03 - INFO - 	 Best PR-AUC: 0.290
2024-11-04 06:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 06:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 06:03 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-04 06:03 - INFO - ---------------------------------------------
2024-11-04 06:05 - INFO - ---------------------------------------------
2024-11-04 06:05 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-04 06:05 - INFO - 	 Train Loss: 0.157
2024-11-04 06:05 - INFO - 	 Val. Loss: 0.176
2024-11-04 06:05 - INFO - 	 ROC-AUC: 0.794
2024-11-04 06:05 - INFO - 	 PR-AUC: 0.257
2024-11-04 06:05 - INFO - 	 Recall for 0.4 precision: 0.203
2024-11-04 06:05 - INFO - 	 Best Val. Loss: 0.176
2024-11-04 06:05 - INFO - 	 Best ROC-AUC: 0.794
2024-11-04 06:05 - INFO - 	 Best PR-AUC: 0.290
2024-11-04 06:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-04 06:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 06:05 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-04 06:05 - INFO - ---------------------------------------------
2024-11-04 06:07 - INFO - ---------------------------------------------
2024-11-04 06:07 - INFO - Epoch: 07 | Time: 1m 52s
2024-11-04 06:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30758
2024-11-04 06:07 - INFO - 	 Train Loss: 0.154
2024-11-04 06:07 - INFO - 	 Val. Loss: 0.164
2024-11-04 06:07 - INFO - 	 ROC-AUC: 0.814
2024-11-04 06:07 - INFO - 	 PR-AUC: 0.308
2024-11-04 06:07 - INFO - 	 Recall for 0.4 precision: 0.270
2024-11-04 06:07 - INFO - 	 Best Val. Loss: 0.164
2024-11-04 06:07 - INFO - 	 Best ROC-AUC: 0.814
2024-11-04 06:07 - INFO - 	 Best PR-AUC: 0.308
2024-11-04 06:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-04 06:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-04 06:07 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-04 06:07 - INFO - ---------------------------------------------
2024-11-04 06:09 - INFO - ---------------------------------------------
2024-11-04 06:09 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-04 06:09 - INFO - 	 Train Loss: 0.152
2024-11-04 06:09 - INFO - 	 Val. Loss: 0.167
2024-11-04 06:09 - INFO - 	 ROC-AUC: 0.813
2024-11-04 06:09 - INFO - 	 PR-AUC: 0.302
2024-11-04 06:09 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-04 06:09 - INFO - 	 Best Val. Loss: 0.164
2024-11-04 06:09 - INFO - 	 Best ROC-AUC: 0.814
2024-11-04 06:09 - INFO - 	 Best PR-AUC: 0.308
2024-11-04 06:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-04 06:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-04 06:09 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-04 06:09 - INFO - ---------------------------------------------
2024-11-04 06:11 - INFO - ---------------------------------------------
2024-11-04 06:11 - INFO - Epoch: 09 | Time: 1m 53s
2024-11-04 06:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34497
2024-11-04 06:11 - INFO - 	 Train Loss: 0.147
2024-11-04 06:11 - INFO - 	 Val. Loss: 0.154
2024-11-04 06:11 - INFO - 	 ROC-AUC: 0.899
2024-11-04 06:11 - INFO - 	 PR-AUC: 0.345
2024-11-04 06:11 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-04 06:11 - INFO - 	 Best Val. Loss: 0.154
2024-11-04 06:11 - INFO - 	 Best ROC-AUC: 0.899
2024-11-04 06:11 - INFO - 	 Best PR-AUC: 0.345
2024-11-04 06:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.885
2024-11-04 06:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.231
2024-11-04 06:11 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-04 06:11 - INFO - ---------------------------------------------
2024-11-04 06:13 - INFO - ---------------------------------------------
2024-11-04 06:13 - INFO - Epoch: 10 | Time: 1m 53s
2024-11-04 06:13 - INFO - 	 Train Loss: 0.130
2024-11-04 06:13 - INFO - 	 Val. Loss: 0.213
2024-11-04 06:13 - INFO - 	 ROC-AUC: 0.811
2024-11-04 06:13 - INFO - 	 PR-AUC: 0.203
2024-11-04 06:13 - INFO - 	 Recall for 0.4 precision: 0.055
2024-11-04 06:13 - INFO - 	 Best Val. Loss: 0.154
2024-11-04 06:13 - INFO - 	 Best ROC-AUC: 0.899
2024-11-04 06:13 - INFO - 	 Best PR-AUC: 0.345
2024-11-04 06:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.885
2024-11-04 06:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.231
2024-11-04 06:13 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-04 06:13 - INFO - ---------------------------------------------
2024-11-04 06:15 - INFO - Fit the preprocessing pipeline
2024-11-04 06:15 - INFO - Training using device: mps
2024-11-04 06:15 - INFO - Creating generators
2024-11-04 06:15 - INFO - The model has 651,257 trainable parameters
2024-11-04 06:15 - INFO - * Model:
2024-11-04 06:15 - INFO - * -----------
2024-11-04 06:15 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 06:15 - INFO - * -----------
2024-11-04 06:15 - INFO - Evaluating model based on: aucpr
2024-11-04 06:15 - INFO - Training..

2024-11-04 06:17 - INFO - ---------------------------------------------
2024-11-04 06:17 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 06:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16299
2024-11-04 06:17 - INFO - 	 Train Loss: 0.258
2024-11-04 06:17 - INFO - 	 Val. Loss: 0.316
2024-11-04 06:17 - INFO - 	 ROC-AUC: 0.741
2024-11-04 06:17 - INFO - 	 PR-AUC: 0.163
2024-11-04 06:17 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-04 06:17 - INFO - 	 Best Val. Loss: 0.316
2024-11-04 06:17 - INFO - 	 Best ROC-AUC: 0.741
2024-11-04 06:17 - INFO - 	 Best PR-AUC: 0.163
2024-11-04 06:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-04 06:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 06:17 - INFO - 	 Best Recall for 0.4 precision: 0.010
2024-11-04 06:17 - INFO - ---------------------------------------------
2024-11-04 06:19 - INFO - ---------------------------------------------
2024-11-04 06:19 - INFO - Epoch: 02 | Time: 1m 42s
2024-11-04 06:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25394
2024-11-04 06:19 - INFO - 	 Train Loss: 0.209
2024-11-04 06:19 - INFO - 	 Val. Loss: 0.254
2024-11-04 06:19 - INFO - 	 ROC-AUC: 0.781
2024-11-04 06:19 - INFO - 	 PR-AUC: 0.254
2024-11-04 06:19 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-04 06:19 - INFO - 	 Best Val. Loss: 0.254
2024-11-04 06:19 - INFO - 	 Best ROC-AUC: 0.781
2024-11-04 06:19 - INFO - 	 Best PR-AUC: 0.254
2024-11-04 06:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-04 06:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-04 06:19 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 06:19 - INFO - ---------------------------------------------
2024-11-04 06:21 - INFO - ---------------------------------------------
2024-11-04 06:21 - INFO - Epoch: 03 | Time: 1m 47s
2024-11-04 06:21 - INFO - 	 Train Loss: 0.189
2024-11-04 06:21 - INFO - 	 Val. Loss: 0.231
2024-11-04 06:21 - INFO - 	 ROC-AUC: 0.765
2024-11-04 06:21 - INFO - 	 PR-AUC: 0.200
2024-11-04 06:21 - INFO - 	 Recall for 0.4 precision: 0.111
2024-11-04 06:21 - INFO - 	 Best Val. Loss: 0.231
2024-11-04 06:21 - INFO - 	 Best ROC-AUC: 0.781
2024-11-04 06:21 - INFO - 	 Best PR-AUC: 0.254
2024-11-04 06:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-04 06:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-04 06:21 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 06:21 - INFO - ---------------------------------------------
2024-11-04 06:22 - INFO - ---------------------------------------------
2024-11-04 06:22 - INFO - Epoch: 04 | Time: 1m 48s
2024-11-04 06:22 - INFO - 	 Train Loss: 0.172
2024-11-04 06:22 - INFO - 	 Val. Loss: 0.198
2024-11-04 06:22 - INFO - 	 ROC-AUC: 0.783
2024-11-04 06:22 - INFO - 	 PR-AUC: 0.244
2024-11-04 06:22 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-04 06:22 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 06:22 - INFO - 	 Best ROC-AUC: 0.783
2024-11-04 06:22 - INFO - 	 Best PR-AUC: 0.254
2024-11-04 06:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-04 06:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-04 06:22 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 06:22 - INFO - ---------------------------------------------
2024-11-04 06:24 - INFO - ---------------------------------------------
2024-11-04 06:24 - INFO - Epoch: 05 | Time: 1m 49s
2024-11-04 06:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28355
2024-11-04 06:24 - INFO - 	 Train Loss: 0.164
2024-11-04 06:24 - INFO - 	 Val. Loss: 0.186
2024-11-04 06:24 - INFO - 	 ROC-AUC: 0.804
2024-11-04 06:24 - INFO - 	 PR-AUC: 0.284
2024-11-04 06:24 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-04 06:24 - INFO - 	 Best Val. Loss: 0.186
2024-11-04 06:24 - INFO - 	 Best ROC-AUC: 0.804
2024-11-04 06:24 - INFO - 	 Best PR-AUC: 0.284
2024-11-04 06:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-04 06:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-04 06:24 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-04 06:24 - INFO - ---------------------------------------------
2024-11-04 06:26 - INFO - ---------------------------------------------
2024-11-04 06:26 - INFO - Epoch: 06 | Time: 1m 49s
2024-11-04 06:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29759
2024-11-04 06:26 - INFO - 	 Train Loss: 0.164
2024-11-04 06:26 - INFO - 	 Val. Loss: 0.222
2024-11-04 06:26 - INFO - 	 ROC-AUC: 0.841
2024-11-04 06:26 - INFO - 	 PR-AUC: 0.298
2024-11-04 06:26 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-04 06:26 - INFO - 	 Best Val. Loss: 0.186
2024-11-04 06:26 - INFO - 	 Best ROC-AUC: 0.841
2024-11-04 06:26 - INFO - 	 Best PR-AUC: 0.298
2024-11-04 06:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.809
2024-11-04 06:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.182
2024-11-04 06:26 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-04 06:26 - INFO - ---------------------------------------------
2024-11-04 06:28 - INFO - ---------------------------------------------
2024-11-04 06:28 - INFO - Epoch: 07 | Time: 1m 49s
2024-11-04 06:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30596
2024-11-04 06:28 - INFO - 	 Train Loss: 0.154
2024-11-04 06:28 - INFO - 	 Val. Loss: 0.167
2024-11-04 06:28 - INFO - 	 ROC-AUC: 0.863
2024-11-04 06:28 - INFO - 	 PR-AUC: 0.306
2024-11-04 06:28 - INFO - 	 Recall for 0.4 precision: 0.449
2024-11-04 06:28 - INFO - 	 Best Val. Loss: 0.167
2024-11-04 06:28 - INFO - 	 Best ROC-AUC: 0.863
2024-11-04 06:28 - INFO - 	 Best PR-AUC: 0.306
2024-11-04 06:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.809
2024-11-04 06:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.184
2024-11-04 06:28 - INFO - 	 Best Recall for 0.4 precision: 0.449
2024-11-04 06:28 - INFO - ---------------------------------------------
2024-11-04 06:30 - INFO - ---------------------------------------------
2024-11-04 06:30 - INFO - Epoch: 08 | Time: 1m 50s
2024-11-04 06:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40898
2024-11-04 06:30 - INFO - 	 Train Loss: 0.136
2024-11-04 06:30 - INFO - 	 Val. Loss: 0.143
2024-11-04 06:30 - INFO - 	 ROC-AUC: 0.937
2024-11-04 06:30 - INFO - 	 PR-AUC: 0.409
2024-11-04 06:30 - INFO - 	 Recall for 0.4 precision: 0.039
2024-11-04 06:30 - INFO - 	 Best Val. Loss: 0.143
2024-11-04 06:30 - INFO - 	 Best ROC-AUC: 0.937
2024-11-04 06:30 - INFO - 	 Best PR-AUC: 0.409
2024-11-04 06:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.888
2024-11-04 06:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.249
2024-11-04 06:30 - INFO - 	 Best Recall for 0.4 precision: 0.449
2024-11-04 06:30 - INFO - ---------------------------------------------
2024-11-04 06:32 - INFO - ---------------------------------------------
2024-11-04 06:32 - INFO - Epoch: 09 | Time: 1m 50s
2024-11-04 06:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42083
2024-11-04 06:32 - INFO - 	 Train Loss: 0.118
2024-11-04 06:32 - INFO - 	 Val. Loss: 0.124
2024-11-04 06:32 - INFO - 	 ROC-AUC: 0.935
2024-11-04 06:32 - INFO - 	 PR-AUC: 0.421
2024-11-04 06:32 - INFO - 	 Recall for 0.4 precision: 0.538
2024-11-04 06:32 - INFO - 	 Best Val. Loss: 0.124
2024-11-04 06:32 - INFO - 	 Best ROC-AUC: 0.937
2024-11-04 06:32 - INFO - 	 Best PR-AUC: 0.421
2024-11-04 06:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.888
2024-11-04 06:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.257
2024-11-04 06:32 - INFO - 	 Best Recall for 0.4 precision: 0.538
2024-11-04 06:32 - INFO - ---------------------------------------------
2024-11-04 06:33 - INFO - ---------------------------------------------
2024-11-04 06:33 - INFO - Epoch: 10 | Time: 1m 50s
2024-11-04 06:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55668
2024-11-04 06:33 - INFO - 	 Train Loss: 0.111
2024-11-04 06:33 - INFO - 	 Val. Loss: 0.106
2024-11-04 06:33 - INFO - 	 ROC-AUC: 0.953
2024-11-04 06:33 - INFO - 	 PR-AUC: 0.557
2024-11-04 06:33 - INFO - 	 Recall for 0.4 precision: 0.844
2024-11-04 06:33 - INFO - 	 Best Val. Loss: 0.106
2024-11-04 06:33 - INFO - 	 Best ROC-AUC: 0.953
2024-11-04 06:33 - INFO - 	 Best PR-AUC: 0.557
2024-11-04 06:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-04 06:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.376
2024-11-04 06:33 - INFO - 	 Best Recall for 0.4 precision: 0.844
2024-11-04 06:33 - INFO - ---------------------------------------------
2024-11-04 06:36 - INFO - Fit the preprocessing pipeline
2024-11-04 06:36 - INFO - Training using device: mps
2024-11-04 06:36 - INFO - Creating generators
2024-11-04 06:36 - INFO - The model has 651,257 trainable parameters
2024-11-04 06:36 - INFO - * Model:
2024-11-04 06:36 - INFO - * -----------
2024-11-04 06:36 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 06:36 - INFO - * -----------
2024-11-04 06:36 - INFO - Evaluating model based on: aucpr
2024-11-04 06:36 - INFO - Training..

2024-11-04 06:38 - INFO - ---------------------------------------------
2024-11-04 06:38 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-04 06:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12763
2024-11-04 06:38 - INFO - 	 Train Loss: 0.249
2024-11-04 06:38 - INFO - 	 Val. Loss: 0.290
2024-11-04 06:38 - INFO - 	 ROC-AUC: 0.724
2024-11-04 06:38 - INFO - 	 PR-AUC: 0.128
2024-11-04 06:38 - INFO - 	 Recall for 0.4 precision: 0.023
2024-11-04 06:38 - INFO - 	 Best Val. Loss: 0.290
2024-11-04 06:38 - INFO - 	 Best ROC-AUC: 0.724
2024-11-04 06:38 - INFO - 	 Best PR-AUC: 0.128
2024-11-04 06:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.701
2024-11-04 06:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.102
2024-11-04 06:38 - INFO - 	 Best Recall for 0.4 precision: 0.023
2024-11-04 06:38 - INFO - ---------------------------------------------
2024-11-04 06:39 - INFO - ---------------------------------------------
2024-11-04 06:39 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 06:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22134
2024-11-04 06:39 - INFO - 	 Train Loss: 0.204
2024-11-04 06:39 - INFO - 	 Val. Loss: 0.246
2024-11-04 06:39 - INFO - 	 ROC-AUC: 0.748
2024-11-04 06:39 - INFO - 	 PR-AUC: 0.221
2024-11-04 06:39 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-04 06:39 - INFO - 	 Best Val. Loss: 0.246
2024-11-04 06:39 - INFO - 	 Best ROC-AUC: 0.748
2024-11-04 06:39 - INFO - 	 Best PR-AUC: 0.221
2024-11-04 06:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.733
2024-11-04 06:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-04 06:39 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-04 06:39 - INFO - ---------------------------------------------
2024-11-04 06:41 - INFO - ---------------------------------------------
2024-11-04 06:41 - INFO - Epoch: 03 | Time: 1m 43s
2024-11-04 06:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26634
2024-11-04 06:41 - INFO - 	 Train Loss: 0.182
2024-11-04 06:41 - INFO - 	 Val. Loss: 0.205
2024-11-04 06:41 - INFO - 	 ROC-AUC: 0.782
2024-11-04 06:41 - INFO - 	 PR-AUC: 0.266
2024-11-04 06:41 - INFO - 	 Recall for 0.4 precision: 0.234
2024-11-04 06:41 - INFO - 	 Best Val. Loss: 0.205
2024-11-04 06:41 - INFO - 	 Best ROC-AUC: 0.782
2024-11-04 06:41 - INFO - 	 Best PR-AUC: 0.266
2024-11-04 06:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.741
2024-11-04 06:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 06:41 - INFO - 	 Best Recall for 0.4 precision: 0.234
2024-11-04 06:41 - INFO - ---------------------------------------------
2024-11-04 06:43 - INFO - ---------------------------------------------
2024-11-04 06:43 - INFO - Epoch: 04 | Time: 1m 48s
2024-11-04 06:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29018
2024-11-04 06:43 - INFO - 	 Train Loss: 0.169
2024-11-04 06:43 - INFO - 	 Val. Loss: 0.187
2024-11-04 06:43 - INFO - 	 ROC-AUC: 0.806
2024-11-04 06:43 - INFO - 	 PR-AUC: 0.290
2024-11-04 06:43 - INFO - 	 Recall for 0.4 precision: 0.237
2024-11-04 06:43 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 06:43 - INFO - 	 Best ROC-AUC: 0.806
2024-11-04 06:43 - INFO - 	 Best PR-AUC: 0.290
2024-11-04 06:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-04 06:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-04 06:43 - INFO - 	 Best Recall for 0.4 precision: 0.237
2024-11-04 06:43 - INFO - ---------------------------------------------
2024-11-04 06:45 - INFO - ---------------------------------------------
2024-11-04 06:45 - INFO - Epoch: 05 | Time: 1m 48s
2024-11-04 06:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32176
2024-11-04 06:45 - INFO - 	 Train Loss: 0.161
2024-11-04 06:45 - INFO - 	 Val. Loss: 0.173
2024-11-04 06:45 - INFO - 	 ROC-AUC: 0.854
2024-11-04 06:45 - INFO - 	 PR-AUC: 0.322
2024-11-04 06:45 - INFO - 	 Recall for 0.4 precision: 0.333
2024-11-04 06:45 - INFO - 	 Best Val. Loss: 0.173
2024-11-04 06:45 - INFO - 	 Best ROC-AUC: 0.854
2024-11-04 06:45 - INFO - 	 Best PR-AUC: 0.322
2024-11-04 06:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.807
2024-11-04 06:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.181
2024-11-04 06:45 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-04 06:45 - INFO - ---------------------------------------------
2024-11-04 06:47 - INFO - ---------------------------------------------
2024-11-04 06:47 - INFO - Epoch: 06 | Time: 1m 49s
2024-11-04 06:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39335
2024-11-04 06:47 - INFO - 	 Train Loss: 0.149
2024-11-04 06:47 - INFO - 	 Val. Loss: 0.175
2024-11-04 06:47 - INFO - 	 ROC-AUC: 0.878
2024-11-04 06:47 - INFO - 	 PR-AUC: 0.393
2024-11-04 06:47 - INFO - 	 Recall for 0.4 precision: 0.410
2024-11-04 06:47 - INFO - 	 Best Val. Loss: 0.173
2024-11-04 06:47 - INFO - 	 Best ROC-AUC: 0.878
2024-11-04 06:47 - INFO - 	 Best PR-AUC: 0.393
2024-11-04 06:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.818
2024-11-04 06:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-04 06:47 - INFO - 	 Best Recall for 0.4 precision: 0.410
2024-11-04 06:47 - INFO - ---------------------------------------------
2024-11-04 06:48 - INFO - ---------------------------------------------
2024-11-04 06:48 - INFO - Epoch: 07 | Time: 1m 50s
2024-11-04 06:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45387
2024-11-04 06:48 - INFO - 	 Train Loss: 0.122
2024-11-04 06:48 - INFO - 	 Val. Loss: 0.123
2024-11-04 06:48 - INFO - 	 ROC-AUC: 0.928
2024-11-04 06:48 - INFO - 	 PR-AUC: 0.454
2024-11-04 06:48 - INFO - 	 Recall for 0.4 precision: 0.563
2024-11-04 06:48 - INFO - 	 Best Val. Loss: 0.123
2024-11-04 06:48 - INFO - 	 Best ROC-AUC: 0.928
2024-11-04 06:48 - INFO - 	 Best PR-AUC: 0.454
2024-11-04 06:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.892
2024-11-04 06:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.232
2024-11-04 06:48 - INFO - 	 Best Recall for 0.4 precision: 0.563
2024-11-04 06:48 - INFO - ---------------------------------------------
2024-11-04 06:50 - INFO - ---------------------------------------------
2024-11-04 06:50 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-04 06:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53882
2024-11-04 06:50 - INFO - 	 Train Loss: 0.111
2024-11-04 06:50 - INFO - 	 Val. Loss: 0.256
2024-11-04 06:50 - INFO - 	 ROC-AUC: 0.932
2024-11-04 06:50 - INFO - 	 PR-AUC: 0.539
2024-11-04 06:50 - INFO - 	 Recall for 0.4 precision: 0.824
2024-11-04 06:50 - INFO - 	 Best Val. Loss: 0.123
2024-11-04 06:50 - INFO - 	 Best ROC-AUC: 0.932
2024-11-04 06:50 - INFO - 	 Best PR-AUC: 0.539
2024-11-04 06:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-04 06:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.354
2024-11-04 06:50 - INFO - 	 Best Recall for 0.4 precision: 0.824
2024-11-04 06:50 - INFO - ---------------------------------------------
2024-11-04 06:52 - INFO - ---------------------------------------------
2024-11-04 06:52 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-04 06:52 - INFO - 	 Train Loss: 0.108
2024-11-04 06:52 - INFO - 	 Val. Loss: 0.119
2024-11-04 06:52 - INFO - 	 ROC-AUC: 0.947
2024-11-04 06:52 - INFO - 	 PR-AUC: 0.500
2024-11-04 06:52 - INFO - 	 Recall for 0.4 precision: 0.836
2024-11-04 06:52 - INFO - 	 Best Val. Loss: 0.119
2024-11-04 06:52 - INFO - 	 Best ROC-AUC: 0.947
2024-11-04 06:52 - INFO - 	 Best PR-AUC: 0.539
2024-11-04 06:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-04 06:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.354
2024-11-04 06:52 - INFO - 	 Best Recall for 0.4 precision: 0.836
2024-11-04 06:52 - INFO - ---------------------------------------------
2024-11-04 06:54 - INFO - ---------------------------------------------
2024-11-04 06:54 - INFO - Epoch: 10 | Time: 1m 51s
2024-11-04 06:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55238
2024-11-04 06:54 - INFO - 	 Train Loss: 0.103
2024-11-04 06:54 - INFO - 	 Val. Loss: 0.241
2024-11-04 06:54 - INFO - 	 ROC-AUC: 0.966
2024-11-04 06:54 - INFO - 	 PR-AUC: 0.552
2024-11-04 06:54 - INFO - 	 Recall for 0.4 precision: 0.946
2024-11-04 06:54 - INFO - 	 Best Val. Loss: 0.119
2024-11-04 06:54 - INFO - 	 Best ROC-AUC: 0.966
2024-11-04 06:54 - INFO - 	 Best PR-AUC: 0.552
2024-11-04 06:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-04 06:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.405
2024-11-04 06:54 - INFO - 	 Best Recall for 0.4 precision: 0.946
2024-11-04 06:54 - INFO - ---------------------------------------------
2024-11-04 06:57 - INFO - Fit the preprocessing pipeline
2024-11-04 06:57 - INFO - Training using device: mps
2024-11-04 06:57 - INFO - Creating generators
2024-11-04 06:57 - INFO - The model has 651,257 trainable parameters
2024-11-04 06:57 - INFO - * Model:
2024-11-04 06:57 - INFO - * -----------
2024-11-04 06:57 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 06:57 - INFO - * -----------
2024-11-04 06:57 - INFO - Evaluating model based on: aucpr
2024-11-04 06:57 - INFO - Training..

2024-11-04 06:58 - INFO - ---------------------------------------------
2024-11-04 06:58 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 06:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12078
2024-11-04 06:58 - INFO - 	 Train Loss: 0.252
2024-11-04 06:58 - INFO - 	 Val. Loss: 0.305
2024-11-04 06:58 - INFO - 	 ROC-AUC: 0.695
2024-11-04 06:58 - INFO - 	 PR-AUC: 0.121
2024-11-04 06:58 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 06:58 - INFO - 	 Best Val. Loss: 0.305
2024-11-04 06:58 - INFO - 	 Best ROC-AUC: 0.695
2024-11-04 06:58 - INFO - 	 Best PR-AUC: 0.121
2024-11-04 06:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.677
2024-11-04 06:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.091
2024-11-04 06:58 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-04 06:58 - INFO - ---------------------------------------------
2024-11-04 07:00 - INFO - ---------------------------------------------
2024-11-04 07:00 - INFO - Epoch: 02 | Time: 1m 45s
2024-11-04 07:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18239
2024-11-04 07:00 - INFO - 	 Train Loss: 0.209
2024-11-04 07:00 - INFO - 	 Val. Loss: 0.249
2024-11-04 07:00 - INFO - 	 ROC-AUC: 0.720
2024-11-04 07:00 - INFO - 	 PR-AUC: 0.182
2024-11-04 07:00 - INFO - 	 Recall for 0.4 precision: 0.101
2024-11-04 07:00 - INFO - 	 Best Val. Loss: 0.249
2024-11-04 07:00 - INFO - 	 Best ROC-AUC: 0.720
2024-11-04 07:00 - INFO - 	 Best PR-AUC: 0.182
2024-11-04 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.702
2024-11-04 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.119
2024-11-04 07:00 - INFO - 	 Best Recall for 0.4 precision: 0.101
2024-11-04 07:00 - INFO - ---------------------------------------------
2024-11-04 07:02 - INFO - ---------------------------------------------
2024-11-04 07:02 - INFO - Epoch: 03 | Time: 1m 49s
2024-11-04 07:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23831
2024-11-04 07:02 - INFO - 	 Train Loss: 0.187
2024-11-04 07:02 - INFO - 	 Val. Loss: 0.208
2024-11-04 07:02 - INFO - 	 ROC-AUC: 0.771
2024-11-04 07:02 - INFO - 	 PR-AUC: 0.238
2024-11-04 07:02 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-04 07:02 - INFO - 	 Best Val. Loss: 0.208
2024-11-04 07:02 - INFO - 	 Best ROC-AUC: 0.771
2024-11-04 07:02 - INFO - 	 Best PR-AUC: 0.238
2024-11-04 07:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.729
2024-11-04 07:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 07:02 - INFO - 	 Best Recall for 0.4 precision: 0.163
2024-11-04 07:02 - INFO - ---------------------------------------------
2024-11-04 07:04 - INFO - ---------------------------------------------
2024-11-04 07:04 - INFO - Epoch: 04 | Time: 1m 48s
2024-11-04 07:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25727
2024-11-04 07:04 - INFO - 	 Train Loss: 0.171
2024-11-04 07:04 - INFO - 	 Val. Loss: 0.196
2024-11-04 07:04 - INFO - 	 ROC-AUC: 0.783
2024-11-04 07:04 - INFO - 	 PR-AUC: 0.257
2024-11-04 07:04 - INFO - 	 Recall for 0.4 precision: 0.169
2024-11-04 07:04 - INFO - 	 Best Val. Loss: 0.196
2024-11-04 07:04 - INFO - 	 Best ROC-AUC: 0.783
2024-11-04 07:04 - INFO - 	 Best PR-AUC: 0.257
2024-11-04 07:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-04 07:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 07:04 - INFO - 	 Best Recall for 0.4 precision: 0.169
2024-11-04 07:04 - INFO - ---------------------------------------------
2024-11-04 07:06 - INFO - ---------------------------------------------
2024-11-04 07:06 - INFO - Epoch: 05 | Time: 1m 49s
2024-11-04 07:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28301
2024-11-04 07:06 - INFO - 	 Train Loss: 0.164
2024-11-04 07:06 - INFO - 	 Val. Loss: 0.185
2024-11-04 07:06 - INFO - 	 ROC-AUC: 0.781
2024-11-04 07:06 - INFO - 	 PR-AUC: 0.283
2024-11-04 07:06 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-04 07:06 - INFO - 	 Best Val. Loss: 0.185
2024-11-04 07:06 - INFO - 	 Best ROC-AUC: 0.783
2024-11-04 07:06 - INFO - 	 Best PR-AUC: 0.283
2024-11-04 07:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-04 07:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-04 07:06 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-04 07:06 - INFO - ---------------------------------------------
2024-11-04 07:07 - INFO - ---------------------------------------------
2024-11-04 07:07 - INFO - Epoch: 06 | Time: 1m 49s
2024-11-04 07:07 - INFO - 	 Train Loss: 0.160
2024-11-04 07:07 - INFO - 	 Val. Loss: 0.175
2024-11-04 07:07 - INFO - 	 ROC-AUC: 0.788
2024-11-04 07:07 - INFO - 	 PR-AUC: 0.264
2024-11-04 07:07 - INFO - 	 Recall for 0.4 precision: 0.176
2024-11-04 07:07 - INFO - 	 Best Val. Loss: 0.175
2024-11-04 07:07 - INFO - 	 Best ROC-AUC: 0.788
2024-11-04 07:07 - INFO - 	 Best PR-AUC: 0.283
2024-11-04 07:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 07:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-04 07:07 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-04 07:07 - INFO - ---------------------------------------------
2024-11-04 07:09 - INFO - ---------------------------------------------
2024-11-04 07:09 - INFO - Epoch: 07 | Time: 1m 50s
2024-11-04 07:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29098
2024-11-04 07:09 - INFO - 	 Train Loss: 0.155
2024-11-04 07:09 - INFO - 	 Val. Loss: 0.169
2024-11-04 07:09 - INFO - 	 ROC-AUC: 0.814
2024-11-04 07:09 - INFO - 	 PR-AUC: 0.291
2024-11-04 07:09 - INFO - 	 Recall for 0.4 precision: 0.203
2024-11-04 07:09 - INFO - 	 Best Val. Loss: 0.169
2024-11-04 07:09 - INFO - 	 Best ROC-AUC: 0.814
2024-11-04 07:09 - INFO - 	 Best PR-AUC: 0.291
2024-11-04 07:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-04 07:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-04 07:09 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-04 07:09 - INFO - ---------------------------------------------
2024-11-04 07:11 - INFO - ---------------------------------------------
2024-11-04 07:11 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-04 07:11 - INFO - 	 Train Loss: 0.148
2024-11-04 07:11 - INFO - 	 Val. Loss: 0.190
2024-11-04 07:11 - INFO - 	 ROC-AUC: 0.824
2024-11-04 07:11 - INFO - 	 PR-AUC: 0.240
2024-11-04 07:11 - INFO - 	 Recall for 0.4 precision: 0.150
2024-11-04 07:11 - INFO - 	 Best Val. Loss: 0.169
2024-11-04 07:11 - INFO - 	 Best ROC-AUC: 0.824
2024-11-04 07:11 - INFO - 	 Best PR-AUC: 0.291
2024-11-04 07:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.820
2024-11-04 07:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-04 07:11 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-04 07:11 - INFO - ---------------------------------------------
2024-11-04 07:13 - INFO - ---------------------------------------------
2024-11-04 07:13 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-04 07:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32139
2024-11-04 07:13 - INFO - 	 Train Loss: 0.126
2024-11-04 07:13 - INFO - 	 Val. Loss: 0.185
2024-11-04 07:13 - INFO - 	 ROC-AUC: 0.926
2024-11-04 07:13 - INFO - 	 PR-AUC: 0.321
2024-11-04 07:13 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-04 07:13 - INFO - 	 Best Val. Loss: 0.169
2024-11-04 07:13 - INFO - 	 Best ROC-AUC: 0.926
2024-11-04 07:13 - INFO - 	 Best PR-AUC: 0.321
2024-11-04 07:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-11-04 07:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.271
2024-11-04 07:13 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 07:13 - INFO - ---------------------------------------------
2024-11-04 07:15 - INFO - ---------------------------------------------
2024-11-04 07:15 - INFO - Epoch: 10 | Time: 1m 50s
2024-11-04 07:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43305
2024-11-04 07:15 - INFO - 	 Train Loss: 0.114
2024-11-04 07:15 - INFO - 	 Val. Loss: 0.142
2024-11-04 07:15 - INFO - 	 ROC-AUC: 0.948
2024-11-04 07:15 - INFO - 	 PR-AUC: 0.433
2024-11-04 07:15 - INFO - 	 Recall for 0.4 precision: 0.657
2024-11-04 07:15 - INFO - 	 Best Val. Loss: 0.142
2024-11-04 07:15 - INFO - 	 Best ROC-AUC: 0.948
2024-11-04 07:15 - INFO - 	 Best PR-AUC: 0.433
2024-11-04 07:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-04 07:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.267
2024-11-04 07:15 - INFO - 	 Best Recall for 0.4 precision: 0.657
2024-11-04 07:15 - INFO - ---------------------------------------------
2024-11-04 07:17 - INFO - Fit the preprocessing pipeline
2024-11-04 07:17 - INFO - Training using device: mps
2024-11-04 07:17 - INFO - Creating generators
2024-11-04 07:17 - INFO - The model has 651,257 trainable parameters
2024-11-04 07:17 - INFO - * Model:
2024-11-04 07:17 - INFO - * -----------
2024-11-04 07:17 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 07:17 - INFO - * -----------
2024-11-04 07:17 - INFO - Evaluating model based on: aucpr
2024-11-04 07:17 - INFO - Training..

2024-11-04 07:19 - INFO - ---------------------------------------------
2024-11-04 07:19 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 07:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13897
2024-11-04 07:19 - INFO - 	 Train Loss: 0.253
2024-11-04 07:19 - INFO - 	 Val. Loss: 0.296
2024-11-04 07:19 - INFO - 	 ROC-AUC: 0.716
2024-11-04 07:19 - INFO - 	 PR-AUC: 0.139
2024-11-04 07:19 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 07:19 - INFO - 	 Best Val. Loss: 0.296
2024-11-04 07:19 - INFO - 	 Best ROC-AUC: 0.716
2024-11-04 07:19 - INFO - 	 Best PR-AUC: 0.139
2024-11-04 07:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.728
2024-11-04 07:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.129
2024-11-04 07:19 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-04 07:19 - INFO - ---------------------------------------------
2024-11-04 07:21 - INFO - ---------------------------------------------
2024-11-04 07:21 - INFO - Epoch: 02 | Time: 1m 43s
2024-11-04 07:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22508
2024-11-04 07:21 - INFO - 	 Train Loss: 0.206
2024-11-04 07:21 - INFO - 	 Val. Loss: 0.234
2024-11-04 07:21 - INFO - 	 ROC-AUC: 0.761
2024-11-04 07:21 - INFO - 	 PR-AUC: 0.225
2024-11-04 07:21 - INFO - 	 Recall for 0.4 precision: 0.166
2024-11-04 07:21 - INFO - 	 Best Val. Loss: 0.234
2024-11-04 07:21 - INFO - 	 Best ROC-AUC: 0.761
2024-11-04 07:21 - INFO - 	 Best PR-AUC: 0.225
2024-11-04 07:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-04 07:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-04 07:21 - INFO - 	 Best Recall for 0.4 precision: 0.166
2024-11-04 07:21 - INFO - ---------------------------------------------
2024-11-04 07:23 - INFO - ---------------------------------------------
2024-11-04 07:23 - INFO - Epoch: 03 | Time: 1m 49s
2024-11-04 07:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25995
2024-11-04 07:23 - INFO - 	 Train Loss: 0.182
2024-11-04 07:23 - INFO - 	 Val. Loss: 0.193
2024-11-04 07:23 - INFO - 	 ROC-AUC: 0.790
2024-11-04 07:23 - INFO - 	 PR-AUC: 0.260
2024-11-04 07:23 - INFO - 	 Recall for 0.4 precision: 0.172
2024-11-04 07:23 - INFO - 	 Best Val. Loss: 0.193
2024-11-04 07:23 - INFO - 	 Best ROC-AUC: 0.790
2024-11-04 07:23 - INFO - 	 Best PR-AUC: 0.260
2024-11-04 07:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-04 07:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 07:23 - INFO - 	 Best Recall for 0.4 precision: 0.172
2024-11-04 07:23 - INFO - ---------------------------------------------
2024-11-04 07:25 - INFO - ---------------------------------------------
2024-11-04 07:25 - INFO - Epoch: 04 | Time: 1m 50s
2024-11-04 07:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2711
2024-11-04 07:25 - INFO - 	 Train Loss: 0.170
2024-11-04 07:25 - INFO - 	 Val. Loss: 0.193
2024-11-04 07:25 - INFO - 	 ROC-AUC: 0.794
2024-11-04 07:25 - INFO - 	 PR-AUC: 0.271
2024-11-04 07:25 - INFO - 	 Recall for 0.4 precision: 0.208
2024-11-04 07:25 - INFO - 	 Best Val. Loss: 0.193
2024-11-04 07:25 - INFO - 	 Best ROC-AUC: 0.794
2024-11-04 07:25 - INFO - 	 Best PR-AUC: 0.271
2024-11-04 07:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-04 07:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-04 07:25 - INFO - 	 Best Recall for 0.4 precision: 0.208
2024-11-04 07:25 - INFO - ---------------------------------------------
2024-11-04 07:26 - INFO - ---------------------------------------------
2024-11-04 07:26 - INFO - Epoch: 05 | Time: 1m 50s
2024-11-04 07:26 - INFO - 	 Train Loss: 0.163
2024-11-04 07:26 - INFO - 	 Val. Loss: 0.193
2024-11-04 07:26 - INFO - 	 ROC-AUC: 0.772
2024-11-04 07:26 - INFO - 	 PR-AUC: 0.261
2024-11-04 07:26 - INFO - 	 Recall for 0.4 precision: 0.195
2024-11-04 07:26 - INFO - 	 Best Val. Loss: 0.193
2024-11-04 07:26 - INFO - 	 Best ROC-AUC: 0.794
2024-11-04 07:26 - INFO - 	 Best PR-AUC: 0.271
2024-11-04 07:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-04 07:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-04 07:26 - INFO - 	 Best Recall for 0.4 precision: 0.208
2024-11-04 07:26 - INFO - ---------------------------------------------
2024-11-04 07:28 - INFO - ---------------------------------------------
2024-11-04 07:28 - INFO - Epoch: 06 | Time: 1m 52s
2024-11-04 07:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27609
2024-11-04 07:28 - INFO - 	 Train Loss: 0.158
2024-11-04 07:28 - INFO - 	 Val. Loss: 0.180
2024-11-04 07:28 - INFO - 	 ROC-AUC: 0.795
2024-11-04 07:28 - INFO - 	 PR-AUC: 0.276
2024-11-04 07:28 - INFO - 	 Recall for 0.4 precision: 0.260
2024-11-04 07:28 - INFO - 	 Best Val. Loss: 0.180
2024-11-04 07:28 - INFO - 	 Best ROC-AUC: 0.795
2024-11-04 07:28 - INFO - 	 Best PR-AUC: 0.276
2024-11-04 07:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-04 07:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-04 07:28 - INFO - 	 Best Recall for 0.4 precision: 0.260
2024-11-04 07:28 - INFO - ---------------------------------------------
2024-11-04 07:30 - INFO - ---------------------------------------------
2024-11-04 07:30 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-04 07:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29369
2024-11-04 07:30 - INFO - 	 Train Loss: 0.155
2024-11-04 07:30 - INFO - 	 Val. Loss: 0.172
2024-11-04 07:30 - INFO - 	 ROC-AUC: 0.801
2024-11-04 07:30 - INFO - 	 PR-AUC: 0.294
2024-11-04 07:30 - INFO - 	 Recall for 0.4 precision: 0.268
2024-11-04 07:30 - INFO - 	 Best Val. Loss: 0.172
2024-11-04 07:30 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 07:30 - INFO - 	 Best PR-AUC: 0.294
2024-11-04 07:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-04 07:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-04 07:30 - INFO - 	 Best Recall for 0.4 precision: 0.268
2024-11-04 07:30 - INFO - ---------------------------------------------
2024-11-04 07:32 - INFO - ---------------------------------------------
2024-11-04 07:32 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-04 07:32 - INFO - 	 Train Loss: 0.152
2024-11-04 07:32 - INFO - 	 Val. Loss: 0.178
2024-11-04 07:32 - INFO - 	 ROC-AUC: 0.799
2024-11-04 07:32 - INFO - 	 PR-AUC: 0.274
2024-11-04 07:32 - INFO - 	 Recall for 0.4 precision: 0.260
2024-11-04 07:32 - INFO - 	 Best Val. Loss: 0.172
2024-11-04 07:32 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 07:32 - INFO - 	 Best PR-AUC: 0.294
2024-11-04 07:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-04 07:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-04 07:32 - INFO - 	 Best Recall for 0.4 precision: 0.268
2024-11-04 07:32 - INFO - ---------------------------------------------
2024-11-04 07:34 - INFO - ---------------------------------------------
2024-11-04 07:34 - INFO - Epoch: 09 | Time: 1m 50s
2024-11-04 07:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32197
2024-11-04 07:34 - INFO - 	 Train Loss: 0.150
2024-11-04 07:34 - INFO - 	 Val. Loss: 0.159
2024-11-04 07:34 - INFO - 	 ROC-AUC: 0.849
2024-11-04 07:34 - INFO - 	 PR-AUC: 0.322
2024-11-04 07:34 - INFO - 	 Recall for 0.4 precision: 0.302
2024-11-04 07:34 - INFO - 	 Best Val. Loss: 0.159
2024-11-04 07:34 - INFO - 	 Best ROC-AUC: 0.849
2024-11-04 07:34 - INFO - 	 Best PR-AUC: 0.322
2024-11-04 07:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.814
2024-11-04 07:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.194
2024-11-04 07:34 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-04 07:34 - INFO - ---------------------------------------------
2024-11-04 07:36 - INFO - ---------------------------------------------
2024-11-04 07:36 - INFO - Epoch: 10 | Time: 2m 2s
2024-11-04 07:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3743
2024-11-04 07:36 - INFO - 	 Train Loss: 0.135
2024-11-04 07:36 - INFO - 	 Val. Loss: 0.161
2024-11-04 07:36 - INFO - 	 ROC-AUC: 0.937
2024-11-04 07:36 - INFO - 	 PR-AUC: 0.374
2024-11-04 07:36 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-04 07:36 - INFO - 	 Best Val. Loss: 0.159
2024-11-04 07:36 - INFO - 	 Best ROC-AUC: 0.937
2024-11-04 07:36 - INFO - 	 Best PR-AUC: 0.374
2024-11-04 07:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-04 07:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.289
2024-11-04 07:36 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-04 07:36 - INFO - ---------------------------------------------
2024-11-04 07:39 - INFO - Fit the preprocessing pipeline
2024-11-04 07:39 - INFO - Training using device: mps
2024-11-04 07:39 - INFO - Creating generators
2024-11-04 07:39 - INFO - The model has 651,257 trainable parameters
2024-11-04 07:39 - INFO - * Model:
2024-11-04 07:39 - INFO - * -----------
2024-11-04 07:39 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 07:39 - INFO - * -----------
2024-11-04 07:39 - INFO - Evaluating model based on: aucpr
2024-11-04 07:39 - INFO - Training..

2024-11-04 07:40 - INFO - ---------------------------------------------
2024-11-04 07:40 - INFO - Epoch: 01 | Time: 1m 44s
2024-11-04 07:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1652
2024-11-04 07:40 - INFO - 	 Train Loss: 0.256
2024-11-04 07:40 - INFO - 	 Val. Loss: 0.289
2024-11-04 07:40 - INFO - 	 ROC-AUC: 0.716
2024-11-04 07:40 - INFO - 	 PR-AUC: 0.165
2024-11-04 07:40 - INFO - 	 Recall for 0.4 precision: 0.075
2024-11-04 07:40 - INFO - 	 Best Val. Loss: 0.289
2024-11-04 07:40 - INFO - 	 Best ROC-AUC: 0.716
2024-11-04 07:40 - INFO - 	 Best PR-AUC: 0.165
2024-11-04 07:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-11-04 07:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-04 07:40 - INFO - 	 Best Recall for 0.4 precision: 0.075
2024-11-04 07:40 - INFO - ---------------------------------------------
2024-11-04 07:42 - INFO - ---------------------------------------------
2024-11-04 07:42 - INFO - Epoch: 02 | Time: 1m 47s
2024-11-04 07:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18679
2024-11-04 07:42 - INFO - 	 Train Loss: 0.205
2024-11-04 07:42 - INFO - 	 Val. Loss: 0.257
2024-11-04 07:42 - INFO - 	 ROC-AUC: 0.755
2024-11-04 07:42 - INFO - 	 PR-AUC: 0.187
2024-11-04 07:42 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 07:42 - INFO - 	 Best Val. Loss: 0.257
2024-11-04 07:42 - INFO - 	 Best ROC-AUC: 0.755
2024-11-04 07:42 - INFO - 	 Best PR-AUC: 0.187
2024-11-04 07:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-11-04 07:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.117
2024-11-04 07:42 - INFO - 	 Best Recall for 0.4 precision: 0.075
2024-11-04 07:42 - INFO - ---------------------------------------------
2024-11-04 07:44 - INFO - ---------------------------------------------
2024-11-04 07:44 - INFO - Epoch: 03 | Time: 1m 53s
2024-11-04 07:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24581
2024-11-04 07:44 - INFO - 	 Train Loss: 0.184
2024-11-04 07:44 - INFO - 	 Val. Loss: 0.194
2024-11-04 07:44 - INFO - 	 ROC-AUC: 0.779
2024-11-04 07:44 - INFO - 	 PR-AUC: 0.246
2024-11-04 07:44 - INFO - 	 Recall for 0.4 precision: 0.224
2024-11-04 07:44 - INFO - 	 Best Val. Loss: 0.194
2024-11-04 07:44 - INFO - 	 Best ROC-AUC: 0.779
2024-11-04 07:44 - INFO - 	 Best PR-AUC: 0.246
2024-11-04 07:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.725
2024-11-04 07:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 07:44 - INFO - 	 Best Recall for 0.4 precision: 0.224
2024-11-04 07:44 - INFO - ---------------------------------------------
2024-11-04 07:46 - INFO - ---------------------------------------------
2024-11-04 07:46 - INFO - Epoch: 04 | Time: 1m 54s
2024-11-04 07:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27902
2024-11-04 07:46 - INFO - 	 Train Loss: 0.168
2024-11-04 07:46 - INFO - 	 Val. Loss: 0.191
2024-11-04 07:46 - INFO - 	 ROC-AUC: 0.801
2024-11-04 07:46 - INFO - 	 PR-AUC: 0.279
2024-11-04 07:46 - INFO - 	 Recall for 0.4 precision: 0.262
2024-11-04 07:46 - INFO - 	 Best Val. Loss: 0.191
2024-11-04 07:46 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 07:46 - INFO - 	 Best PR-AUC: 0.279
2024-11-04 07:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-04 07:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-04 07:46 - INFO - 	 Best Recall for 0.4 precision: 0.262
2024-11-04 07:46 - INFO - ---------------------------------------------
2024-11-04 07:48 - INFO - ---------------------------------------------
2024-11-04 07:48 - INFO - Epoch: 05 | Time: 1m 54s
2024-11-04 07:48 - INFO - 	 Train Loss: 0.162
2024-11-04 07:48 - INFO - 	 Val. Loss: 0.186
2024-11-04 07:48 - INFO - 	 ROC-AUC: 0.793
2024-11-04 07:48 - INFO - 	 PR-AUC: 0.274
2024-11-04 07:48 - INFO - 	 Recall for 0.4 precision: 0.242
2024-11-04 07:48 - INFO - 	 Best Val. Loss: 0.186
2024-11-04 07:48 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 07:48 - INFO - 	 Best PR-AUC: 0.279
2024-11-04 07:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-04 07:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-04 07:48 - INFO - 	 Best Recall for 0.4 precision: 0.262
2024-11-04 07:48 - INFO - ---------------------------------------------
2024-11-04 07:50 - INFO - ---------------------------------------------
2024-11-04 07:50 - INFO - Epoch: 06 | Time: 2m 5s
2024-11-04 07:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31029
2024-11-04 07:50 - INFO - 	 Train Loss: 0.158
2024-11-04 07:50 - INFO - 	 Val. Loss: 0.174
2024-11-04 07:50 - INFO - 	 ROC-AUC: 0.801
2024-11-04 07:50 - INFO - 	 PR-AUC: 0.310
2024-11-04 07:50 - INFO - 	 Recall for 0.4 precision: 0.328
2024-11-04 07:50 - INFO - 	 Best Val. Loss: 0.174
2024-11-04 07:50 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 07:50 - INFO - 	 Best PR-AUC: 0.310
2024-11-04 07:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-04 07:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 07:50 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-04 07:50 - INFO - ---------------------------------------------
2024-11-04 07:52 - INFO - ---------------------------------------------
2024-11-04 07:52 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-04 07:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31512
2024-11-04 07:52 - INFO - 	 Train Loss: 0.154
2024-11-04 07:52 - INFO - 	 Val. Loss: 0.159
2024-11-04 07:52 - INFO - 	 ROC-AUC: 0.852
2024-11-04 07:52 - INFO - 	 PR-AUC: 0.315
2024-11-04 07:52 - INFO - 	 Recall for 0.4 precision: 0.234
2024-11-04 07:52 - INFO - 	 Best Val. Loss: 0.159
2024-11-04 07:52 - INFO - 	 Best ROC-AUC: 0.852
2024-11-04 07:52 - INFO - 	 Best PR-AUC: 0.315
2024-11-04 07:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.778
2024-11-04 07:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-04 07:52 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-04 07:52 - INFO - ---------------------------------------------
2024-11-04 07:54 - INFO - ---------------------------------------------
2024-11-04 07:54 - INFO - Epoch: 08 | Time: 1m 50s
2024-11-04 07:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40872
2024-11-04 07:54 - INFO - 	 Train Loss: 0.148
2024-11-04 07:54 - INFO - 	 Val. Loss: 0.155
2024-11-04 07:54 - INFO - 	 ROC-AUC: 0.906
2024-11-04 07:54 - INFO - 	 PR-AUC: 0.409
2024-11-04 07:54 - INFO - 	 Recall for 0.4 precision: 0.452
2024-11-04 07:54 - INFO - 	 Best Val. Loss: 0.155
2024-11-04 07:54 - INFO - 	 Best ROC-AUC: 0.906
2024-11-04 07:54 - INFO - 	 Best PR-AUC: 0.409
2024-11-04 07:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.856
2024-11-04 07:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.207
2024-11-04 07:54 - INFO - 	 Best Recall for 0.4 precision: 0.452
2024-11-04 07:54 - INFO - ---------------------------------------------
2024-11-04 07:56 - INFO - ---------------------------------------------
2024-11-04 07:56 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-04 07:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50961
2024-11-04 07:56 - INFO - 	 Train Loss: 0.127
2024-11-04 07:56 - INFO - 	 Val. Loss: 0.121
2024-11-04 07:56 - INFO - 	 ROC-AUC: 0.950
2024-11-04 07:56 - INFO - 	 PR-AUC: 0.510
2024-11-04 07:56 - INFO - 	 Recall for 0.4 precision: 0.737
2024-11-04 07:56 - INFO - 	 Best Val. Loss: 0.121
2024-11-04 07:56 - INFO - 	 Best ROC-AUC: 0.950
2024-11-04 07:56 - INFO - 	 Best PR-AUC: 0.510
2024-11-04 07:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-04 07:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.326
2024-11-04 07:56 - INFO - 	 Best Recall for 0.4 precision: 0.737
2024-11-04 07:56 - INFO - ---------------------------------------------
2024-11-04 07:57 - INFO - ---------------------------------------------
2024-11-04 07:57 - INFO - Epoch: 10 | Time: 1m 50s
2024-11-04 07:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51261
2024-11-04 07:57 - INFO - 	 Train Loss: 0.113
2024-11-04 07:57 - INFO - 	 Val. Loss: 0.117
2024-11-04 07:57 - INFO - 	 ROC-AUC: 0.963
2024-11-04 07:57 - INFO - 	 PR-AUC: 0.513
2024-11-04 07:57 - INFO - 	 Recall for 0.4 precision: 0.842
2024-11-04 07:57 - INFO - 	 Best Val. Loss: 0.117
2024-11-04 07:57 - INFO - 	 Best ROC-AUC: 0.963
2024-11-04 07:57 - INFO - 	 Best PR-AUC: 0.513
2024-11-04 07:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-04 07:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.327
2024-11-04 07:57 - INFO - 	 Best Recall for 0.4 precision: 0.842
2024-11-04 07:57 - INFO - ---------------------------------------------
2024-11-04 08:00 - INFO - Fit the preprocessing pipeline
2024-11-04 08:00 - INFO - Training using device: mps
2024-11-04 08:00 - INFO - Creating generators
2024-11-04 08:00 - INFO - The model has 651,257 trainable parameters
2024-11-04 08:00 - INFO - * Model:
2024-11-04 08:00 - INFO - * -----------
2024-11-04 08:00 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 08:00 - INFO - * -----------
2024-11-04 08:00 - INFO - Evaluating model based on: aucpr
2024-11-04 08:00 - INFO - Training..

2024-11-04 08:02 - INFO - ---------------------------------------------
2024-11-04 08:02 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-04 08:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16459
2024-11-04 08:02 - INFO - 	 Train Loss: 0.252
2024-11-04 08:02 - INFO - 	 Val. Loss: 0.293
2024-11-04 08:02 - INFO - 	 ROC-AUC: 0.748
2024-11-04 08:02 - INFO - 	 PR-AUC: 0.165
2024-11-04 08:02 - INFO - 	 Recall for 0.4 precision: 0.016
2024-11-04 08:02 - INFO - 	 Best Val. Loss: 0.293
2024-11-04 08:02 - INFO - 	 Best ROC-AUC: 0.748
2024-11-04 08:02 - INFO - 	 Best PR-AUC: 0.165
2024-11-04 08:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.725
2024-11-04 08:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-04 08:02 - INFO - 	 Best Recall for 0.4 precision: 0.016
2024-11-04 08:02 - INFO - ---------------------------------------------
2024-11-04 08:04 - INFO - ---------------------------------------------
2024-11-04 08:04 - INFO - Epoch: 02 | Time: 1m 42s
2024-11-04 08:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22068
2024-11-04 08:04 - INFO - 	 Train Loss: 0.209
2024-11-04 08:04 - INFO - 	 Val. Loss: 0.255
2024-11-04 08:04 - INFO - 	 ROC-AUC: 0.762
2024-11-04 08:04 - INFO - 	 PR-AUC: 0.221
2024-11-04 08:04 - INFO - 	 Recall for 0.4 precision: 0.182
2024-11-04 08:04 - INFO - 	 Best Val. Loss: 0.255
2024-11-04 08:04 - INFO - 	 Best ROC-AUC: 0.762
2024-11-04 08:04 - INFO - 	 Best PR-AUC: 0.221
2024-11-04 08:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-04 08:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-04 08:04 - INFO - 	 Best Recall for 0.4 precision: 0.182
2024-11-04 08:04 - INFO - ---------------------------------------------
2024-11-04 08:05 - INFO - ---------------------------------------------
2024-11-04 08:05 - INFO - Epoch: 03 | Time: 1m 45s
2024-11-04 08:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26461
2024-11-04 08:05 - INFO - 	 Train Loss: 0.189
2024-11-04 08:05 - INFO - 	 Val. Loss: 0.213
2024-11-04 08:05 - INFO - 	 ROC-AUC: 0.775
2024-11-04 08:05 - INFO - 	 PR-AUC: 0.265
2024-11-04 08:05 - INFO - 	 Recall for 0.4 precision: 0.315
2024-11-04 08:05 - INFO - 	 Best Val. Loss: 0.213
2024-11-04 08:05 - INFO - 	 Best ROC-AUC: 0.775
2024-11-04 08:05 - INFO - 	 Best PR-AUC: 0.265
2024-11-04 08:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-11-04 08:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.129
2024-11-04 08:05 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-04 08:05 - INFO - ---------------------------------------------
2024-11-04 08:07 - INFO - ---------------------------------------------
2024-11-04 08:07 - INFO - Epoch: 04 | Time: 1m 51s
2024-11-04 08:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29296
2024-11-04 08:07 - INFO - 	 Train Loss: 0.172
2024-11-04 08:07 - INFO - 	 Val. Loss: 0.195
2024-11-04 08:07 - INFO - 	 ROC-AUC: 0.787
2024-11-04 08:07 - INFO - 	 PR-AUC: 0.293
2024-11-04 08:07 - INFO - 	 Recall for 0.4 precision: 0.288
2024-11-04 08:07 - INFO - 	 Best Val. Loss: 0.195
2024-11-04 08:07 - INFO - 	 Best ROC-AUC: 0.787
2024-11-04 08:07 - INFO - 	 Best PR-AUC: 0.293
2024-11-04 08:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 08:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 08:07 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-04 08:07 - INFO - ---------------------------------------------
2024-11-04 08:09 - INFO - ---------------------------------------------
2024-11-04 08:09 - INFO - Epoch: 05 | Time: 1m 50s
2024-11-04 08:09 - INFO - 	 Train Loss: 0.163
2024-11-04 08:09 - INFO - 	 Val. Loss: 0.187
2024-11-04 08:09 - INFO - 	 ROC-AUC: 0.793
2024-11-04 08:09 - INFO - 	 PR-AUC: 0.290
2024-11-04 08:09 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-04 08:09 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 08:09 - INFO - 	 Best ROC-AUC: 0.793
2024-11-04 08:09 - INFO - 	 Best PR-AUC: 0.293
2024-11-04 08:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-04 08:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 08:09 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-04 08:09 - INFO - ---------------------------------------------
2024-11-04 08:11 - INFO - ---------------------------------------------
2024-11-04 08:11 - INFO - Epoch: 06 | Time: 1m 51s
2024-11-04 08:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31173
2024-11-04 08:11 - INFO - 	 Train Loss: 0.159
2024-11-04 08:11 - INFO - 	 Val. Loss: 0.183
2024-11-04 08:11 - INFO - 	 ROC-AUC: 0.793
2024-11-04 08:11 - INFO - 	 PR-AUC: 0.312
2024-11-04 08:11 - INFO - 	 Recall for 0.4 precision: 0.293
2024-11-04 08:11 - INFO - 	 Best Val. Loss: 0.183
2024-11-04 08:11 - INFO - 	 Best ROC-AUC: 0.793
2024-11-04 08:11 - INFO - 	 Best PR-AUC: 0.312
2024-11-04 08:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-04 08:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 08:11 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-04 08:11 - INFO - ---------------------------------------------
2024-11-04 08:13 - INFO - ---------------------------------------------
2024-11-04 08:13 - INFO - Epoch: 07 | Time: 1m 53s
2024-11-04 08:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33424
2024-11-04 08:13 - INFO - 	 Train Loss: 0.154
2024-11-04 08:13 - INFO - 	 Val. Loss: 0.160
2024-11-04 08:13 - INFO - 	 ROC-AUC: 0.839
2024-11-04 08:13 - INFO - 	 PR-AUC: 0.334
2024-11-04 08:13 - INFO - 	 Recall for 0.4 precision: 0.367
2024-11-04 08:13 - INFO - 	 Best Val. Loss: 0.160
2024-11-04 08:13 - INFO - 	 Best ROC-AUC: 0.839
2024-11-04 08:13 - INFO - 	 Best PR-AUC: 0.334
2024-11-04 08:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.784
2024-11-04 08:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-04 08:13 - INFO - 	 Best Recall for 0.4 precision: 0.367
2024-11-04 08:13 - INFO - ---------------------------------------------
2024-11-04 08:15 - INFO - ---------------------------------------------
2024-11-04 08:15 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-04 08:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34949
2024-11-04 08:15 - INFO - 	 Train Loss: 0.151
2024-11-04 08:15 - INFO - 	 Val. Loss: 0.155
2024-11-04 08:15 - INFO - 	 ROC-AUC: 0.851
2024-11-04 08:15 - INFO - 	 PR-AUC: 0.349
2024-11-04 08:15 - INFO - 	 Recall for 0.4 precision: 0.382
2024-11-04 08:15 - INFO - 	 Best Val. Loss: 0.155
2024-11-04 08:15 - INFO - 	 Best ROC-AUC: 0.851
2024-11-04 08:15 - INFO - 	 Best PR-AUC: 0.349
2024-11-04 08:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.776
2024-11-04 08:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 08:15 - INFO - 	 Best Recall for 0.4 precision: 0.382
2024-11-04 08:15 - INFO - ---------------------------------------------
2024-11-04 08:17 - INFO - ---------------------------------------------
2024-11-04 08:17 - INFO - Epoch: 09 | Time: 1m 55s
2024-11-04 08:17 - INFO - 	 Train Loss: 0.150
2024-11-04 08:17 - INFO - 	 Val. Loss: 0.200
2024-11-04 08:17 - INFO - 	 ROC-AUC: 0.808
2024-11-04 08:17 - INFO - 	 PR-AUC: 0.255
2024-11-04 08:17 - INFO - 	 Recall for 0.4 precision: 0.205
2024-11-04 08:17 - INFO - 	 Best Val. Loss: 0.155
2024-11-04 08:17 - INFO - 	 Best ROC-AUC: 0.851
2024-11-04 08:17 - INFO - 	 Best PR-AUC: 0.349
2024-11-04 08:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.776
2024-11-04 08:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 08:17 - INFO - 	 Best Recall for 0.4 precision: 0.382
2024-11-04 08:17 - INFO - ---------------------------------------------
2024-11-04 08:19 - INFO - ---------------------------------------------
2024-11-04 08:19 - INFO - Epoch: 10 | Time: 1m 56s
2024-11-04 08:19 - INFO - 	 Train Loss: 0.135
2024-11-04 08:19 - INFO - 	 Val. Loss: 0.184
2024-11-04 08:19 - INFO - 	 ROC-AUC: 0.763
2024-11-04 08:19 - INFO - 	 PR-AUC: 0.155
2024-11-04 08:19 - INFO - 	 Recall for 0.4 precision: 0.044
2024-11-04 08:19 - INFO - 	 Best Val. Loss: 0.155
2024-11-04 08:19 - INFO - 	 Best ROC-AUC: 0.851
2024-11-04 08:19 - INFO - 	 Best PR-AUC: 0.349
2024-11-04 08:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.776
2024-11-04 08:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 08:19 - INFO - 	 Best Recall for 0.4 precision: 0.382
2024-11-04 08:19 - INFO - ---------------------------------------------
2024-11-04 08:21 - INFO - Fit the preprocessing pipeline
2024-11-04 08:21 - INFO - Training using device: mps
2024-11-04 08:21 - INFO - Creating generators
2024-11-04 08:21 - INFO - The model has 651,257 trainable parameters
2024-11-04 08:21 - INFO - * Model:
2024-11-04 08:21 - INFO - * -----------
2024-11-04 08:21 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 08:21 - INFO - * -----------
2024-11-04 08:21 - INFO - Evaluating model based on: aucpr
2024-11-04 08:21 - INFO - Training..

2024-11-04 08:23 - INFO - ---------------------------------------------
2024-11-04 08:23 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-04 08:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11028
2024-11-04 08:23 - INFO - 	 Train Loss: 0.250
2024-11-04 08:23 - INFO - 	 Val. Loss: 0.288
2024-11-04 08:23 - INFO - 	 ROC-AUC: 0.713
2024-11-04 08:23 - INFO - 	 PR-AUC: 0.110
2024-11-04 08:23 - INFO - 	 Recall for 0.4 precision: 0.044
2024-11-04 08:23 - INFO - 	 Best Val. Loss: 0.288
2024-11-04 08:23 - INFO - 	 Best ROC-AUC: 0.713
2024-11-04 08:23 - INFO - 	 Best PR-AUC: 0.110
2024-11-04 08:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.664
2024-11-04 08:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.081
2024-11-04 08:23 - INFO - 	 Best Recall for 0.4 precision: 0.044
2024-11-04 08:23 - INFO - ---------------------------------------------
2024-11-04 08:25 - INFO - ---------------------------------------------
2024-11-04 08:25 - INFO - Epoch: 02 | Time: 1m 46s
2024-11-04 08:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24506
2024-11-04 08:25 - INFO - 	 Train Loss: 0.207
2024-11-04 08:25 - INFO - 	 Val. Loss: 0.235
2024-11-04 08:25 - INFO - 	 ROC-AUC: 0.772
2024-11-04 08:25 - INFO - 	 PR-AUC: 0.245
2024-11-04 08:25 - INFO - 	 Recall for 0.4 precision: 0.176
2024-11-04 08:25 - INFO - 	 Best Val. Loss: 0.235
2024-11-04 08:25 - INFO - 	 Best ROC-AUC: 0.772
2024-11-04 08:25 - INFO - 	 Best PR-AUC: 0.245
2024-11-04 08:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.741
2024-11-04 08:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-04 08:25 - INFO - 	 Best Recall for 0.4 precision: 0.176
2024-11-04 08:25 - INFO - ---------------------------------------------
2024-11-04 08:27 - INFO - ---------------------------------------------
2024-11-04 08:27 - INFO - Epoch: 03 | Time: 1m 51s
2024-11-04 08:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26072
2024-11-04 08:27 - INFO - 	 Train Loss: 0.185
2024-11-04 08:27 - INFO - 	 Val. Loss: 0.206
2024-11-04 08:27 - INFO - 	 ROC-AUC: 0.784
2024-11-04 08:27 - INFO - 	 PR-AUC: 0.261
2024-11-04 08:27 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-04 08:27 - INFO - 	 Best Val. Loss: 0.206
2024-11-04 08:27 - INFO - 	 Best ROC-AUC: 0.784
2024-11-04 08:27 - INFO - 	 Best PR-AUC: 0.261
2024-11-04 08:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 08:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 08:27 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-04 08:27 - INFO - ---------------------------------------------
2024-11-04 08:29 - INFO - ---------------------------------------------
2024-11-04 08:29 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-04 08:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2949
2024-11-04 08:29 - INFO - 	 Train Loss: 0.172
2024-11-04 08:29 - INFO - 	 Val. Loss: 0.192
2024-11-04 08:29 - INFO - 	 ROC-AUC: 0.808
2024-11-04 08:29 - INFO - 	 PR-AUC: 0.295
2024-11-04 08:29 - INFO - 	 Recall for 0.4 precision: 0.254
2024-11-04 08:29 - INFO - 	 Best Val. Loss: 0.192
2024-11-04 08:29 - INFO - 	 Best ROC-AUC: 0.808
2024-11-04 08:29 - INFO - 	 Best PR-AUC: 0.295
2024-11-04 08:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-04 08:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-04 08:29 - INFO - 	 Best Recall for 0.4 precision: 0.254
2024-11-04 08:29 - INFO - ---------------------------------------------
2024-11-04 08:31 - INFO - ---------------------------------------------
2024-11-04 08:31 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-04 08:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31255
2024-11-04 08:31 - INFO - 	 Train Loss: 0.165
2024-11-04 08:31 - INFO - 	 Val. Loss: 0.179
2024-11-04 08:31 - INFO - 	 ROC-AUC: 0.838
2024-11-04 08:31 - INFO - 	 PR-AUC: 0.313
2024-11-04 08:31 - INFO - 	 Recall for 0.4 precision: 0.270
2024-11-04 08:31 - INFO - 	 Best Val. Loss: 0.179
2024-11-04 08:31 - INFO - 	 Best ROC-AUC: 0.838
2024-11-04 08:31 - INFO - 	 Best PR-AUC: 0.313
2024-11-04 08:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.795
2024-11-04 08:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.201
2024-11-04 08:31 - INFO - 	 Best Recall for 0.4 precision: 0.270
2024-11-04 08:31 - INFO - ---------------------------------------------
2024-11-04 08:32 - INFO - ---------------------------------------------
2024-11-04 08:32 - INFO - Epoch: 06 | Time: 1m 55s
2024-11-04 08:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37207
2024-11-04 08:32 - INFO - 	 Train Loss: 0.155
2024-11-04 08:32 - INFO - 	 Val. Loss: 0.154
2024-11-04 08:32 - INFO - 	 ROC-AUC: 0.886
2024-11-04 08:32 - INFO - 	 PR-AUC: 0.372
2024-11-04 08:32 - INFO - 	 Recall for 0.4 precision: 0.465
2024-11-04 08:32 - INFO - 	 Best Val. Loss: 0.154
2024-11-04 08:32 - INFO - 	 Best ROC-AUC: 0.886
2024-11-04 08:32 - INFO - 	 Best PR-AUC: 0.372
2024-11-04 08:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.850
2024-11-04 08:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.268
2024-11-04 08:32 - INFO - 	 Best Recall for 0.4 precision: 0.465
2024-11-04 08:32 - INFO - ---------------------------------------------
2024-11-04 08:34 - INFO - ---------------------------------------------
2024-11-04 08:34 - INFO - Epoch: 07 | Time: 1m 56s
2024-11-04 08:34 - INFO - 	 Train Loss: 0.133
2024-11-04 08:34 - INFO - 	 Val. Loss: 0.150
2024-11-04 08:34 - INFO - 	 ROC-AUC: 0.905
2024-11-04 08:34 - INFO - 	 PR-AUC: 0.339
2024-11-04 08:34 - INFO - 	 Recall for 0.4 precision: 0.429
2024-11-04 08:34 - INFO - 	 Best Val. Loss: 0.150
2024-11-04 08:34 - INFO - 	 Best ROC-AUC: 0.905
2024-11-04 08:34 - INFO - 	 Best PR-AUC: 0.372
2024-11-04 08:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.885
2024-11-04 08:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.268
2024-11-04 08:34 - INFO - 	 Best Recall for 0.4 precision: 0.465
2024-11-04 08:34 - INFO - ---------------------------------------------
2024-11-04 08:36 - INFO - ---------------------------------------------
2024-11-04 08:36 - INFO - Epoch: 08 | Time: 1m 57s
2024-11-04 08:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51048
2024-11-04 08:36 - INFO - 	 Train Loss: 0.116
2024-11-04 08:36 - INFO - 	 Val. Loss: 0.129
2024-11-04 08:36 - INFO - 	 ROC-AUC: 0.969
2024-11-04 08:36 - INFO - 	 PR-AUC: 0.510
2024-11-04 08:36 - INFO - 	 Recall for 0.4 precision: 0.917
2024-11-04 08:36 - INFO - 	 Best Val. Loss: 0.129
2024-11-04 08:36 - INFO - 	 Best ROC-AUC: 0.969
2024-11-04 08:36 - INFO - 	 Best PR-AUC: 0.510
2024-11-04 08:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-04 08:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-11-04 08:36 - INFO - 	 Best Recall for 0.4 precision: 0.917
2024-11-04 08:36 - INFO - ---------------------------------------------
2024-11-04 08:38 - INFO - ---------------------------------------------
2024-11-04 08:38 - INFO - Epoch: 09 | Time: 1m 56s
2024-11-04 08:38 - INFO - 	 Train Loss: 0.110
2024-11-04 08:38 - INFO - 	 Val. Loss: 0.134
2024-11-04 08:38 - INFO - 	 ROC-AUC: 0.957
2024-11-04 08:38 - INFO - 	 PR-AUC: 0.470
2024-11-04 08:38 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-04 08:38 - INFO - 	 Best Val. Loss: 0.129
2024-11-04 08:38 - INFO - 	 Best ROC-AUC: 0.969
2024-11-04 08:38 - INFO - 	 Best PR-AUC: 0.510
2024-11-04 08:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-04 08:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-11-04 08:38 - INFO - 	 Best Recall for 0.4 precision: 0.917
2024-11-04 08:38 - INFO - ---------------------------------------------
2024-11-04 08:40 - INFO - ---------------------------------------------
2024-11-04 08:40 - INFO - Epoch: 10 | Time: 1m 56s
2024-11-04 08:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54287
2024-11-04 08:40 - INFO - 	 Train Loss: 0.109
2024-11-04 08:40 - INFO - 	 Val. Loss: 0.174
2024-11-04 08:40 - INFO - 	 ROC-AUC: 0.974
2024-11-04 08:40 - INFO - 	 PR-AUC: 0.543
2024-11-04 08:40 - INFO - 	 Recall for 0.4 precision: 0.943
2024-11-04 08:40 - INFO - 	 Best Val. Loss: 0.129
2024-11-04 08:40 - INFO - 	 Best ROC-AUC: 0.974
2024-11-04 08:40 - INFO - 	 Best PR-AUC: 0.543
2024-11-04 08:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-04 08:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.473
2024-11-04 08:40 - INFO - 	 Best Recall for 0.4 precision: 0.943
2024-11-04 08:40 - INFO - ---------------------------------------------
2024-11-04 08:43 - INFO - Fit the preprocessing pipeline
2024-11-04 08:43 - INFO - Training using device: mps
2024-11-04 08:43 - INFO - Creating generators
2024-11-04 08:43 - INFO - The model has 651,257 trainable parameters
2024-11-04 08:43 - INFO - * Model:
2024-11-04 08:43 - INFO - * -----------
2024-11-04 08:43 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 08:43 - INFO - * -----------
2024-11-04 08:43 - INFO - Evaluating model based on: aucpr
2024-11-04 08:43 - INFO - Training..

2024-11-04 08:45 - INFO - ---------------------------------------------
2024-11-04 08:45 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 08:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13517
2024-11-04 08:45 - INFO - 	 Train Loss: 0.261
2024-11-04 08:45 - INFO - 	 Val. Loss: 0.302
2024-11-04 08:45 - INFO - 	 ROC-AUC: 0.661
2024-11-04 08:45 - INFO - 	 PR-AUC: 0.135
2024-11-04 08:45 - INFO - 	 Recall for 0.4 precision: 0.046
2024-11-04 08:45 - INFO - 	 Best Val. Loss: 0.302
2024-11-04 08:45 - INFO - 	 Best ROC-AUC: 0.661
2024-11-04 08:45 - INFO - 	 Best PR-AUC: 0.135
2024-11-04 08:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.656
2024-11-04 08:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.103
2024-11-04 08:45 - INFO - 	 Best Recall for 0.4 precision: 0.046
2024-11-04 08:45 - INFO - ---------------------------------------------
2024-11-04 08:46 - INFO - ---------------------------------------------
2024-11-04 08:46 - INFO - Epoch: 02 | Time: 1m 49s
2024-11-04 08:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14469
2024-11-04 08:46 - INFO - 	 Train Loss: 0.210
2024-11-04 08:46 - INFO - 	 Val. Loss: 0.250
2024-11-04 08:46 - INFO - 	 ROC-AUC: 0.745
2024-11-04 08:46 - INFO - 	 PR-AUC: 0.145
2024-11-04 08:46 - INFO - 	 Recall for 0.4 precision: 0.036
2024-11-04 08:46 - INFO - 	 Best Val. Loss: 0.250
2024-11-04 08:46 - INFO - 	 Best ROC-AUC: 0.745
2024-11-04 08:46 - INFO - 	 Best PR-AUC: 0.145
2024-11-04 08:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 08:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-04 08:46 - INFO - 	 Best Recall for 0.4 precision: 0.046
2024-11-04 08:46 - INFO - ---------------------------------------------
2024-11-04 08:48 - INFO - ---------------------------------------------
2024-11-04 08:48 - INFO - Epoch: 03 | Time: 1m 55s
2024-11-04 08:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18925
2024-11-04 08:48 - INFO - 	 Train Loss: 0.190
2024-11-04 08:48 - INFO - 	 Val. Loss: 0.215
2024-11-04 08:48 - INFO - 	 ROC-AUC: 0.765
2024-11-04 08:48 - INFO - 	 PR-AUC: 0.189
2024-11-04 08:48 - INFO - 	 Recall for 0.4 precision: 0.059
2024-11-04 08:48 - INFO - 	 Best Val. Loss: 0.215
2024-11-04 08:48 - INFO - 	 Best ROC-AUC: 0.765
2024-11-04 08:48 - INFO - 	 Best PR-AUC: 0.189
2024-11-04 08:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-04 08:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-04 08:48 - INFO - 	 Best Recall for 0.4 precision: 0.059
2024-11-04 08:48 - INFO - ---------------------------------------------
2024-11-04 08:50 - INFO - ---------------------------------------------
2024-11-04 08:50 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-04 08:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23349
2024-11-04 08:50 - INFO - 	 Train Loss: 0.176
2024-11-04 08:50 - INFO - 	 Val. Loss: 0.191
2024-11-04 08:50 - INFO - 	 ROC-AUC: 0.803
2024-11-04 08:50 - INFO - 	 PR-AUC: 0.233
2024-11-04 08:50 - INFO - 	 Recall for 0.4 precision: 0.164
2024-11-04 08:50 - INFO - 	 Best Val. Loss: 0.191
2024-11-04 08:50 - INFO - 	 Best ROC-AUC: 0.803
2024-11-04 08:50 - INFO - 	 Best PR-AUC: 0.233
2024-11-04 08:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-04 08:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-04 08:50 - INFO - 	 Best Recall for 0.4 precision: 0.164
2024-11-04 08:50 - INFO - ---------------------------------------------
2024-11-04 08:52 - INFO - ---------------------------------------------
2024-11-04 08:52 - INFO - Epoch: 05 | Time: 1m 54s
2024-11-04 08:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27508
2024-11-04 08:52 - INFO - 	 Train Loss: 0.168
2024-11-04 08:52 - INFO - 	 Val. Loss: 0.196
2024-11-04 08:52 - INFO - 	 ROC-AUC: 0.808
2024-11-04 08:52 - INFO - 	 PR-AUC: 0.275
2024-11-04 08:52 - INFO - 	 Recall for 0.4 precision: 0.293
2024-11-04 08:52 - INFO - 	 Best Val. Loss: 0.191
2024-11-04 08:52 - INFO - 	 Best ROC-AUC: 0.808
2024-11-04 08:52 - INFO - 	 Best PR-AUC: 0.275
2024-11-04 08:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-04 08:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-04 08:52 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-04 08:52 - INFO - ---------------------------------------------
2024-11-04 08:54 - INFO - ---------------------------------------------
2024-11-04 08:54 - INFO - Epoch: 06 | Time: 1m 56s
2024-11-04 08:54 - INFO - 	 Train Loss: 0.162
2024-11-04 08:54 - INFO - 	 Val. Loss: 0.184
2024-11-04 08:54 - INFO - 	 ROC-AUC: 0.808
2024-11-04 08:54 - INFO - 	 PR-AUC: 0.251
2024-11-04 08:54 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-04 08:54 - INFO - 	 Best Val. Loss: 0.184
2024-11-04 08:54 - INFO - 	 Best ROC-AUC: 0.808
2024-11-04 08:54 - INFO - 	 Best PR-AUC: 0.275
2024-11-04 08:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-04 08:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-04 08:54 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-04 08:54 - INFO - ---------------------------------------------
2024-11-04 08:56 - INFO - ---------------------------------------------
2024-11-04 08:56 - INFO - Epoch: 07 | Time: 1m 56s
2024-11-04 08:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31401
2024-11-04 08:56 - INFO - 	 Train Loss: 0.155
2024-11-04 08:56 - INFO - 	 Val. Loss: 0.162
2024-11-04 08:56 - INFO - 	 ROC-AUC: 0.856
2024-11-04 08:56 - INFO - 	 PR-AUC: 0.314
2024-11-04 08:56 - INFO - 	 Recall for 0.4 precision: 0.335
2024-11-04 08:56 - INFO - 	 Best Val. Loss: 0.162
2024-11-04 08:56 - INFO - 	 Best ROC-AUC: 0.856
2024-11-04 08:56 - INFO - 	 Best PR-AUC: 0.314
2024-11-04 08:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.809
2024-11-04 08:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.200
2024-11-04 08:56 - INFO - 	 Best Recall for 0.4 precision: 0.335
2024-11-04 08:56 - INFO - ---------------------------------------------
2024-11-04 08:58 - INFO - ---------------------------------------------
2024-11-04 08:58 - INFO - Epoch: 08 | Time: 1m 57s
2024-11-04 08:58 - INFO - 	 Train Loss: 0.141
2024-11-04 08:58 - INFO - 	 Val. Loss: 0.221
2024-11-04 08:58 - INFO - 	 ROC-AUC: 0.861
2024-11-04 08:58 - INFO - 	 PR-AUC: 0.267
2024-11-04 08:58 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 08:58 - INFO - 	 Best Val. Loss: 0.162
2024-11-04 08:58 - INFO - 	 Best ROC-AUC: 0.861
2024-11-04 08:58 - INFO - 	 Best PR-AUC: 0.314
2024-11-04 08:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.876
2024-11-04 08:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.200
2024-11-04 08:58 - INFO - 	 Best Recall for 0.4 precision: 0.335
2024-11-04 08:58 - INFO - ---------------------------------------------
2024-11-04 09:00 - INFO - ---------------------------------------------
2024-11-04 09:00 - INFO - Epoch: 09 | Time: 1m 58s
2024-11-04 09:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53314
2024-11-04 09:00 - INFO - 	 Train Loss: 0.127
2024-11-04 09:00 - INFO - 	 Val. Loss: 0.120
2024-11-04 09:00 - INFO - 	 ROC-AUC: 0.946
2024-11-04 09:00 - INFO - 	 PR-AUC: 0.533
2024-11-04 09:00 - INFO - 	 Recall for 0.4 precision: 0.839
2024-11-04 09:00 - INFO - 	 Best Val. Loss: 0.120
2024-11-04 09:00 - INFO - 	 Best ROC-AUC: 0.946
2024-11-04 09:00 - INFO - 	 Best PR-AUC: 0.533
2024-11-04 09:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-04 09:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.350
2024-11-04 09:00 - INFO - 	 Best Recall for 0.4 precision: 0.839
2024-11-04 09:00 - INFO - ---------------------------------------------
2024-11-04 09:02 - INFO - ---------------------------------------------
2024-11-04 09:02 - INFO - Epoch: 10 | Time: 1m 58s
2024-11-04 09:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64038
2024-11-04 09:02 - INFO - 	 Train Loss: 0.113
2024-11-04 09:02 - INFO - 	 Val. Loss: 0.098
2024-11-04 09:02 - INFO - 	 ROC-AUC: 0.960
2024-11-04 09:02 - INFO - 	 PR-AUC: 0.640
2024-11-04 09:02 - INFO - 	 Recall for 0.4 precision: 0.907
2024-11-04 09:02 - INFO - 	 Best Val. Loss: 0.098
2024-11-04 09:02 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 09:02 - INFO - 	 Best PR-AUC: 0.640
2024-11-04 09:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-04 09:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.411
2024-11-04 09:02 - INFO - 	 Best Recall for 0.4 precision: 0.907
2024-11-04 09:02 - INFO - ---------------------------------------------
2024-11-04 09:05 - INFO - Fit the preprocessing pipeline
2024-11-04 09:05 - INFO - Training using device: mps
2024-11-04 09:05 - INFO - Creating generators
2024-11-04 09:05 - INFO - The model has 651,257 trainable parameters
2024-11-04 09:05 - INFO - * Model:
2024-11-04 09:05 - INFO - * -----------
2024-11-04 09:05 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 09:05 - INFO - * -----------
2024-11-04 09:05 - INFO - Evaluating model based on: aucpr
2024-11-04 09:05 - INFO - Training..

2024-11-04 09:06 - INFO - ---------------------------------------------
2024-11-04 09:06 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 09:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20341
2024-11-04 09:06 - INFO - 	 Train Loss: 0.254
2024-11-04 09:06 - INFO - 	 Val. Loss: 0.300
2024-11-04 09:06 - INFO - 	 ROC-AUC: 0.733
2024-11-04 09:06 - INFO - 	 PR-AUC: 0.203
2024-11-04 09:06 - INFO - 	 Recall for 0.4 precision: 0.137
2024-11-04 09:06 - INFO - 	 Best Val. Loss: 0.300
2024-11-04 09:06 - INFO - 	 Best ROC-AUC: 0.733
2024-11-04 09:06 - INFO - 	 Best PR-AUC: 0.203
2024-11-04 09:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.702
2024-11-04 09:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.124
2024-11-04 09:06 - INFO - 	 Best Recall for 0.4 precision: 0.137
2024-11-04 09:06 - INFO - ---------------------------------------------
2024-11-04 09:08 - INFO - ---------------------------------------------
2024-11-04 09:08 - INFO - Epoch: 02 | Time: 1m 52s
2024-11-04 09:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26875
2024-11-04 09:08 - INFO - 	 Train Loss: 0.206
2024-11-04 09:08 - INFO - 	 Val. Loss: 0.249
2024-11-04 09:08 - INFO - 	 ROC-AUC: 0.761
2024-11-04 09:08 - INFO - 	 PR-AUC: 0.269
2024-11-04 09:08 - INFO - 	 Recall for 0.4 precision: 0.272
2024-11-04 09:08 - INFO - 	 Best Val. Loss: 0.249
2024-11-04 09:08 - INFO - 	 Best ROC-AUC: 0.761
2024-11-04 09:08 - INFO - 	 Best PR-AUC: 0.269
2024-11-04 09:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-04 09:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-04 09:08 - INFO - 	 Best Recall for 0.4 precision: 0.272
2024-11-04 09:08 - INFO - ---------------------------------------------
2024-11-04 09:10 - INFO - ---------------------------------------------
2024-11-04 09:10 - INFO - Epoch: 03 | Time: 1m 52s
2024-11-04 09:10 - INFO - 	 Train Loss: 0.182
2024-11-04 09:10 - INFO - 	 Val. Loss: 0.219
2024-11-04 09:10 - INFO - 	 ROC-AUC: 0.773
2024-11-04 09:10 - INFO - 	 PR-AUC: 0.216
2024-11-04 09:10 - INFO - 	 Recall for 0.4 precision: 0.156
2024-11-04 09:10 - INFO - 	 Best Val. Loss: 0.219
2024-11-04 09:10 - INFO - 	 Best ROC-AUC: 0.773
2024-11-04 09:10 - INFO - 	 Best PR-AUC: 0.269
2024-11-04 09:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.720
2024-11-04 09:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-04 09:10 - INFO - 	 Best Recall for 0.4 precision: 0.272
2024-11-04 09:10 - INFO - ---------------------------------------------
2024-11-04 09:12 - INFO - ---------------------------------------------
2024-11-04 09:12 - INFO - Epoch: 04 | Time: 1m 53s
2024-11-04 09:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28278
2024-11-04 09:12 - INFO - 	 Train Loss: 0.169
2024-11-04 09:12 - INFO - 	 Val. Loss: 0.199
2024-11-04 09:12 - INFO - 	 ROC-AUC: 0.786
2024-11-04 09:12 - INFO - 	 PR-AUC: 0.283
2024-11-04 09:12 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-04 09:12 - INFO - 	 Best Val. Loss: 0.199
2024-11-04 09:12 - INFO - 	 Best ROC-AUC: 0.786
2024-11-04 09:12 - INFO - 	 Best PR-AUC: 0.283
2024-11-04 09:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-04 09:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 09:12 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-04 09:12 - INFO - ---------------------------------------------
2024-11-04 09:14 - INFO - ---------------------------------------------
2024-11-04 09:14 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-04 09:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28633
2024-11-04 09:14 - INFO - 	 Train Loss: 0.162
2024-11-04 09:14 - INFO - 	 Val. Loss: 0.188
2024-11-04 09:14 - INFO - 	 ROC-AUC: 0.789
2024-11-04 09:14 - INFO - 	 PR-AUC: 0.286
2024-11-04 09:14 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-04 09:14 - INFO - 	 Best Val. Loss: 0.188
2024-11-04 09:14 - INFO - 	 Best ROC-AUC: 0.789
2024-11-04 09:14 - INFO - 	 Best PR-AUC: 0.286
2024-11-04 09:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-04 09:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 09:14 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 09:14 - INFO - ---------------------------------------------
2024-11-04 09:16 - INFO - ---------------------------------------------
2024-11-04 09:16 - INFO - Epoch: 06 | Time: 1m 54s
2024-11-04 09:16 - INFO - 	 Train Loss: 0.158
2024-11-04 09:16 - INFO - 	 Val. Loss: 0.171
2024-11-04 09:16 - INFO - 	 ROC-AUC: 0.821
2024-11-04 09:16 - INFO - 	 PR-AUC: 0.275
2024-11-04 09:16 - INFO - 	 Recall for 0.4 precision: 0.250
2024-11-04 09:16 - INFO - 	 Best Val. Loss: 0.171
2024-11-04 09:16 - INFO - 	 Best ROC-AUC: 0.821
2024-11-04 09:16 - INFO - 	 Best PR-AUC: 0.286
2024-11-04 09:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.778
2024-11-04 09:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 09:16 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 09:16 - INFO - ---------------------------------------------
2024-11-04 09:18 - INFO - ---------------------------------------------
2024-11-04 09:18 - INFO - Epoch: 07 | Time: 1m 55s
2024-11-04 09:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29461
2024-11-04 09:18 - INFO - 	 Train Loss: 0.157
2024-11-04 09:18 - INFO - 	 Val. Loss: 0.170
2024-11-04 09:18 - INFO - 	 ROC-AUC: 0.821
2024-11-04 09:18 - INFO - 	 PR-AUC: 0.295
2024-11-04 09:18 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-04 09:18 - INFO - 	 Best Val. Loss: 0.170
2024-11-04 09:18 - INFO - 	 Best ROC-AUC: 0.821
2024-11-04 09:18 - INFO - 	 Best PR-AUC: 0.295
2024-11-04 09:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-04 09:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-04 09:18 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 09:18 - INFO - ---------------------------------------------
2024-11-04 09:20 - INFO - ---------------------------------------------
2024-11-04 09:20 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-04 09:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45313
2024-11-04 09:20 - INFO - 	 Train Loss: 0.137
2024-11-04 09:20 - INFO - 	 Val. Loss: 0.133
2024-11-04 09:20 - INFO - 	 ROC-AUC: 0.939
2024-11-04 09:20 - INFO - 	 PR-AUC: 0.453
2024-11-04 09:20 - INFO - 	 Recall for 0.4 precision: 0.646
2024-11-04 09:20 - INFO - 	 Best Val. Loss: 0.133
2024-11-04 09:20 - INFO - 	 Best ROC-AUC: 0.939
2024-11-04 09:20 - INFO - 	 Best PR-AUC: 0.453
2024-11-04 09:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-04 09:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-04 09:20 - INFO - 	 Best Recall for 0.4 precision: 0.646
2024-11-04 09:20 - INFO - ---------------------------------------------
2024-11-04 09:22 - INFO - ---------------------------------------------
2024-11-04 09:22 - INFO - Epoch: 09 | Time: 1m 55s
2024-11-04 09:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4613
2024-11-04 09:22 - INFO - 	 Train Loss: 0.119
2024-11-04 09:22 - INFO - 	 Val. Loss: 0.134
2024-11-04 09:22 - INFO - 	 ROC-AUC: 0.951
2024-11-04 09:22 - INFO - 	 PR-AUC: 0.461
2024-11-04 09:22 - INFO - 	 Recall for 0.4 precision: 0.740
2024-11-04 09:22 - INFO - 	 Best Val. Loss: 0.133
2024-11-04 09:22 - INFO - 	 Best ROC-AUC: 0.951
2024-11-04 09:22 - INFO - 	 Best PR-AUC: 0.461
2024-11-04 09:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.912
2024-11-04 09:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.301
2024-11-04 09:22 - INFO - 	 Best Recall for 0.4 precision: 0.740
2024-11-04 09:22 - INFO - ---------------------------------------------
2024-11-04 09:24 - INFO - ---------------------------------------------
2024-11-04 09:24 - INFO - Epoch: 10 | Time: 1m 54s
2024-11-04 09:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5464
2024-11-04 09:24 - INFO - 	 Train Loss: 0.110
2024-11-04 09:24 - INFO - 	 Val. Loss: 0.111
2024-11-04 09:24 - INFO - 	 ROC-AUC: 0.963
2024-11-04 09:24 - INFO - 	 PR-AUC: 0.546
2024-11-04 09:24 - INFO - 	 Recall for 0.4 precision: 0.865
2024-11-04 09:24 - INFO - 	 Best Val. Loss: 0.111
2024-11-04 09:24 - INFO - 	 Best ROC-AUC: 0.963
2024-11-04 09:24 - INFO - 	 Best PR-AUC: 0.546
2024-11-04 09:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-04 09:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.361
2024-11-04 09:24 - INFO - 	 Best Recall for 0.4 precision: 0.865
2024-11-04 09:24 - INFO - ---------------------------------------------
2024-11-04 09:26 - INFO - Fit the preprocessing pipeline
2024-11-04 09:26 - INFO - Training using device: mps
2024-11-04 09:26 - INFO - Creating generators
2024-11-04 09:26 - INFO - The model has 651,257 trainable parameters
2024-11-04 09:26 - INFO - * Model:
2024-11-04 09:26 - INFO - * -----------
2024-11-04 09:26 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 09:26 - INFO - * -----------
2024-11-04 09:26 - INFO - Evaluating model based on: aucpr
2024-11-04 09:26 - INFO - Training..

2024-11-04 09:28 - INFO - ---------------------------------------------
2024-11-04 09:28 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 09:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15416
2024-11-04 09:28 - INFO - 	 Train Loss: 0.253
2024-11-04 09:28 - INFO - 	 Val. Loss: 0.301
2024-11-04 09:28 - INFO - 	 ROC-AUC: 0.717
2024-11-04 09:28 - INFO - 	 PR-AUC: 0.154
2024-11-04 09:28 - INFO - 	 Recall for 0.4 precision: 0.055
2024-11-04 09:28 - INFO - 	 Best Val. Loss: 0.301
2024-11-04 09:28 - INFO - 	 Best ROC-AUC: 0.717
2024-11-04 09:28 - INFO - 	 Best PR-AUC: 0.154
2024-11-04 09:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-11-04 09:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.102
2024-11-04 09:28 - INFO - 	 Best Recall for 0.4 precision: 0.055
2024-11-04 09:28 - INFO - ---------------------------------------------
2024-11-04 09:30 - INFO - ---------------------------------------------
2024-11-04 09:30 - INFO - Epoch: 02 | Time: 1m 46s
2024-11-04 09:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20679
2024-11-04 09:30 - INFO - 	 Train Loss: 0.205
2024-11-04 09:30 - INFO - 	 Val. Loss: 0.242
2024-11-04 09:30 - INFO - 	 ROC-AUC: 0.757
2024-11-04 09:30 - INFO - 	 PR-AUC: 0.207
2024-11-04 09:30 - INFO - 	 Recall for 0.4 precision: 0.122
2024-11-04 09:30 - INFO - 	 Best Val. Loss: 0.242
2024-11-04 09:30 - INFO - 	 Best ROC-AUC: 0.757
2024-11-04 09:30 - INFO - 	 Best PR-AUC: 0.207
2024-11-04 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.740
2024-11-04 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-04 09:30 - INFO - 	 Best Recall for 0.4 precision: 0.122
2024-11-04 09:30 - INFO - ---------------------------------------------
2024-11-04 09:32 - INFO - ---------------------------------------------
2024-11-04 09:32 - INFO - Epoch: 03 | Time: 1m 55s
2024-11-04 09:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24351
2024-11-04 09:32 - INFO - 	 Train Loss: 0.184
2024-11-04 09:32 - INFO - 	 Val. Loss: 0.217
2024-11-04 09:32 - INFO - 	 ROC-AUC: 0.749
2024-11-04 09:32 - INFO - 	 PR-AUC: 0.244
2024-11-04 09:32 - INFO - 	 Recall for 0.4 precision: 0.237
2024-11-04 09:32 - INFO - 	 Best Val. Loss: 0.217
2024-11-04 09:32 - INFO - 	 Best ROC-AUC: 0.757
2024-11-04 09:32 - INFO - 	 Best PR-AUC: 0.244
2024-11-04 09:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.740
2024-11-04 09:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-04 09:32 - INFO - 	 Best Recall for 0.4 precision: 0.237
2024-11-04 09:32 - INFO - ---------------------------------------------
2024-11-04 09:33 - INFO - ---------------------------------------------
2024-11-04 09:33 - INFO - Epoch: 04 | Time: 1m 54s
2024-11-04 09:33 - INFO - 	 Train Loss: 0.174
2024-11-04 09:33 - INFO - 	 Val. Loss: 0.224
2024-11-04 09:33 - INFO - 	 ROC-AUC: 0.773
2024-11-04 09:33 - INFO - 	 PR-AUC: 0.167
2024-11-04 09:33 - INFO - 	 Recall for 0.4 precision: 0.033
2024-11-04 09:33 - INFO - 	 Best Val. Loss: 0.217
2024-11-04 09:33 - INFO - 	 Best ROC-AUC: 0.773
2024-11-04 09:33 - INFO - 	 Best PR-AUC: 0.244
2024-11-04 09:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-11-04 09:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-04 09:33 - INFO - 	 Best Recall for 0.4 precision: 0.237
2024-11-04 09:33 - INFO - ---------------------------------------------
2024-11-04 09:35 - INFO - ---------------------------------------------
2024-11-04 09:35 - INFO - Epoch: 05 | Time: 1m 57s
2024-11-04 09:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28681
2024-11-04 09:35 - INFO - 	 Train Loss: 0.168
2024-11-04 09:35 - INFO - 	 Val. Loss: 0.190
2024-11-04 09:35 - INFO - 	 ROC-AUC: 0.804
2024-11-04 09:35 - INFO - 	 PR-AUC: 0.287
2024-11-04 09:35 - INFO - 	 Recall for 0.4 precision: 0.312
2024-11-04 09:35 - INFO - 	 Best Val. Loss: 0.190
2024-11-04 09:35 - INFO - 	 Best ROC-AUC: 0.804
2024-11-04 09:35 - INFO - 	 Best PR-AUC: 0.287
2024-11-04 09:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-04 09:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-04 09:35 - INFO - 	 Best Recall for 0.4 precision: 0.312
2024-11-04 09:35 - INFO - ---------------------------------------------
2024-11-04 09:37 - INFO - ---------------------------------------------
2024-11-04 09:37 - INFO - Epoch: 06 | Time: 1m 57s
2024-11-04 09:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.316
2024-11-04 09:37 - INFO - 	 Train Loss: 0.159
2024-11-04 09:37 - INFO - 	 Val. Loss: 0.179
2024-11-04 09:37 - INFO - 	 ROC-AUC: 0.826
2024-11-04 09:37 - INFO - 	 PR-AUC: 0.316
2024-11-04 09:37 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-04 09:37 - INFO - 	 Best Val. Loss: 0.179
2024-11-04 09:37 - INFO - 	 Best ROC-AUC: 0.826
2024-11-04 09:37 - INFO - 	 Best PR-AUC: 0.316
2024-11-04 09:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.771
2024-11-04 09:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-04 09:37 - INFO - 	 Best Recall for 0.4 precision: 0.312
2024-11-04 09:37 - INFO - ---------------------------------------------
2024-11-04 09:39 - INFO - ---------------------------------------------
2024-11-04 09:39 - INFO - Epoch: 07 | Time: 1m 56s
2024-11-04 09:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40285
2024-11-04 09:39 - INFO - 	 Train Loss: 0.147
2024-11-04 09:39 - INFO - 	 Val. Loss: 0.146
2024-11-04 09:39 - INFO - 	 ROC-AUC: 0.944
2024-11-04 09:39 - INFO - 	 PR-AUC: 0.403
2024-11-04 09:39 - INFO - 	 Recall for 0.4 precision: 0.550
2024-11-04 09:39 - INFO - 	 Best Val. Loss: 0.146
2024-11-04 09:39 - INFO - 	 Best ROC-AUC: 0.944
2024-11-04 09:39 - INFO - 	 Best PR-AUC: 0.403
2024-11-04 09:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-11-04 09:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.284
2024-11-04 09:39 - INFO - 	 Best Recall for 0.4 precision: 0.550
2024-11-04 09:39 - INFO - ---------------------------------------------
2024-11-04 09:41 - INFO - ---------------------------------------------
2024-11-04 09:41 - INFO - Epoch: 08 | Time: 1m 59s
2024-11-04 09:41 - INFO - 	 Train Loss: 0.123
2024-11-04 09:41 - INFO - 	 Val. Loss: 0.168
2024-11-04 09:41 - INFO - 	 ROC-AUC: 0.881
2024-11-04 09:41 - INFO - 	 PR-AUC: 0.329
2024-11-04 09:41 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-04 09:41 - INFO - 	 Best Val. Loss: 0.146
2024-11-04 09:41 - INFO - 	 Best ROC-AUC: 0.944
2024-11-04 09:41 - INFO - 	 Best PR-AUC: 0.403
2024-11-04 09:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-11-04 09:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.284
2024-11-04 09:41 - INFO - 	 Best Recall for 0.4 precision: 0.550
2024-11-04 09:41 - INFO - ---------------------------------------------
2024-11-04 09:43 - INFO - ---------------------------------------------
2024-11-04 09:43 - INFO - Epoch: 09 | Time: 2m 0s
2024-11-04 09:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56435
2024-11-04 09:43 - INFO - 	 Train Loss: 0.116
2024-11-04 09:43 - INFO - 	 Val. Loss: 0.100
2024-11-04 09:43 - INFO - 	 ROC-AUC: 0.955
2024-11-04 09:43 - INFO - 	 PR-AUC: 0.564
2024-11-04 09:43 - INFO - 	 Recall for 0.4 precision: 0.881
2024-11-04 09:43 - INFO - 	 Best Val. Loss: 0.100
2024-11-04 09:43 - INFO - 	 Best ROC-AUC: 0.955
2024-11-04 09:43 - INFO - 	 Best PR-AUC: 0.564
2024-11-04 09:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-04 09:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.389
2024-11-04 09:43 - INFO - 	 Best Recall for 0.4 precision: 0.881
2024-11-04 09:43 - INFO - ---------------------------------------------
2024-11-04 09:45 - INFO - ---------------------------------------------
2024-11-04 09:45 - INFO - Epoch: 10 | Time: 2m 0s
2024-11-04 09:45 - INFO - 	 Train Loss: 0.105
2024-11-04 09:45 - INFO - 	 Val. Loss: 0.112
2024-11-04 09:45 - INFO - 	 ROC-AUC: 0.945
2024-11-04 09:45 - INFO - 	 PR-AUC: 0.487
2024-11-04 09:45 - INFO - 	 Recall for 0.4 precision: 0.787
2024-11-04 09:45 - INFO - 	 Best Val. Loss: 0.100
2024-11-04 09:45 - INFO - 	 Best ROC-AUC: 0.955
2024-11-04 09:45 - INFO - 	 Best PR-AUC: 0.564
2024-11-04 09:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-04 09:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.389
2024-11-04 09:45 - INFO - 	 Best Recall for 0.4 precision: 0.881
2024-11-04 09:45 - INFO - ---------------------------------------------
2024-11-04 09:48 - INFO - Fit the preprocessing pipeline
2024-11-04 09:48 - INFO - Training using device: mps
2024-11-04 09:48 - INFO - Creating generators
2024-11-04 09:48 - INFO - The model has 651,257 trainable parameters
2024-11-04 09:48 - INFO - * Model:
2024-11-04 09:48 - INFO - * -----------
2024-11-04 09:48 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 09:48 - INFO - * -----------
2024-11-04 09:48 - INFO - Evaluating model based on: aucpr
2024-11-04 09:48 - INFO - Training..

2024-11-04 09:50 - INFO - ---------------------------------------------
2024-11-04 09:50 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-04 09:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12451
2024-11-04 09:50 - INFO - 	 Train Loss: 0.254
2024-11-04 09:50 - INFO - 	 Val. Loss: 0.307
2024-11-04 09:50 - INFO - 	 ROC-AUC: 0.727
2024-11-04 09:50 - INFO - 	 PR-AUC: 0.125
2024-11-04 09:50 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 09:50 - INFO - 	 Best Val. Loss: 0.307
2024-11-04 09:50 - INFO - 	 Best ROC-AUC: 0.727
2024-11-04 09:50 - INFO - 	 Best PR-AUC: 0.125
2024-11-04 09:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.694
2024-11-04 09:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.114
2024-11-04 09:50 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-04 09:50 - INFO - ---------------------------------------------
2024-11-04 09:52 - INFO - ---------------------------------------------
2024-11-04 09:52 - INFO - Epoch: 02 | Time: 1m 50s
2024-11-04 09:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18352
2024-11-04 09:52 - INFO - 	 Train Loss: 0.204
2024-11-04 09:52 - INFO - 	 Val. Loss: 0.249
2024-11-04 09:52 - INFO - 	 ROC-AUC: 0.782
2024-11-04 09:52 - INFO - 	 PR-AUC: 0.184
2024-11-04 09:52 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-04 09:52 - INFO - 	 Best Val. Loss: 0.249
2024-11-04 09:52 - INFO - 	 Best ROC-AUC: 0.782
2024-11-04 09:52 - INFO - 	 Best PR-AUC: 0.184
2024-11-04 09:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-04 09:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-04 09:52 - INFO - 	 Best Recall for 0.4 precision: 0.013
2024-11-04 09:52 - INFO - ---------------------------------------------
2024-11-04 09:53 - INFO - ---------------------------------------------
2024-11-04 09:53 - INFO - Epoch: 03 | Time: 1m 50s
2024-11-04 09:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21502
2024-11-04 09:53 - INFO - 	 Train Loss: 0.185
2024-11-04 09:53 - INFO - 	 Val. Loss: 0.217
2024-11-04 09:53 - INFO - 	 ROC-AUC: 0.786
2024-11-04 09:53 - INFO - 	 PR-AUC: 0.215
2024-11-04 09:53 - INFO - 	 Recall for 0.4 precision: 0.172
2024-11-04 09:53 - INFO - 	 Best Val. Loss: 0.217
2024-11-04 09:53 - INFO - 	 Best ROC-AUC: 0.786
2024-11-04 09:53 - INFO - 	 Best PR-AUC: 0.215
2024-11-04 09:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.734
2024-11-04 09:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 09:53 - INFO - 	 Best Recall for 0.4 precision: 0.172
2024-11-04 09:53 - INFO - ---------------------------------------------
2024-11-04 09:55 - INFO - ---------------------------------------------
2024-11-04 09:55 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-04 09:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22926
2024-11-04 09:55 - INFO - 	 Train Loss: 0.171
2024-11-04 09:55 - INFO - 	 Val. Loss: 0.197
2024-11-04 09:55 - INFO - 	 ROC-AUC: 0.786
2024-11-04 09:55 - INFO - 	 PR-AUC: 0.229
2024-11-04 09:55 - INFO - 	 Recall for 0.4 precision: 0.208
2024-11-04 09:55 - INFO - 	 Best Val. Loss: 0.197
2024-11-04 09:55 - INFO - 	 Best ROC-AUC: 0.786
2024-11-04 09:55 - INFO - 	 Best PR-AUC: 0.229
2024-11-04 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-04 09:55 - INFO - 	 Best Recall for 0.4 precision: 0.208
2024-11-04 09:55 - INFO - ---------------------------------------------
2024-11-04 09:57 - INFO - ---------------------------------------------
2024-11-04 09:57 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-04 09:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27135
2024-11-04 09:57 - INFO - 	 Train Loss: 0.165
2024-11-04 09:57 - INFO - 	 Val. Loss: 0.183
2024-11-04 09:57 - INFO - 	 ROC-AUC: 0.815
2024-11-04 09:57 - INFO - 	 PR-AUC: 0.271
2024-11-04 09:57 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-04 09:57 - INFO - 	 Best Val. Loss: 0.183
2024-11-04 09:57 - INFO - 	 Best ROC-AUC: 0.815
2024-11-04 09:57 - INFO - 	 Best PR-AUC: 0.271
2024-11-04 09:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-04 09:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-04 09:57 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 09:57 - INFO - ---------------------------------------------
2024-11-04 09:59 - INFO - ---------------------------------------------
2024-11-04 09:59 - INFO - Epoch: 06 | Time: 1m 53s
2024-11-04 09:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30052
2024-11-04 09:59 - INFO - 	 Train Loss: 0.160
2024-11-04 09:59 - INFO - 	 Val. Loss: 0.184
2024-11-04 09:59 - INFO - 	 ROC-AUC: 0.804
2024-11-04 09:59 - INFO - 	 PR-AUC: 0.301
2024-11-04 09:59 - INFO - 	 Recall for 0.4 precision: 0.249
2024-11-04 09:59 - INFO - 	 Best Val. Loss: 0.183
2024-11-04 09:59 - INFO - 	 Best ROC-AUC: 0.815
2024-11-04 09:59 - INFO - 	 Best PR-AUC: 0.301
2024-11-04 09:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-04 09:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 09:59 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 09:59 - INFO - ---------------------------------------------
2024-11-04 10:01 - INFO - ---------------------------------------------
2024-11-04 10:01 - INFO - Epoch: 07 | Time: 1m 52s
2024-11-04 10:01 - INFO - 	 Train Loss: 0.157
2024-11-04 10:01 - INFO - 	 Val. Loss: 0.170
2024-11-04 10:01 - INFO - 	 ROC-AUC: 0.822
2024-11-04 10:01 - INFO - 	 PR-AUC: 0.293
2024-11-04 10:01 - INFO - 	 Recall for 0.4 precision: 0.291
2024-11-04 10:01 - INFO - 	 Best Val. Loss: 0.170
2024-11-04 10:01 - INFO - 	 Best ROC-AUC: 0.822
2024-11-04 10:01 - INFO - 	 Best PR-AUC: 0.301
2024-11-04 10:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-04 10:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 10:01 - INFO - 	 Best Recall for 0.4 precision: 0.291
2024-11-04 10:01 - INFO - ---------------------------------------------
2024-11-04 10:03 - INFO - ---------------------------------------------
2024-11-04 10:03 - INFO - Epoch: 08 | Time: 1m 52s
2024-11-04 10:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31701
2024-11-04 10:03 - INFO - 	 Train Loss: 0.153
2024-11-04 10:03 - INFO - 	 Val. Loss: 0.164
2024-11-04 10:03 - INFO - 	 ROC-AUC: 0.826
2024-11-04 10:03 - INFO - 	 PR-AUC: 0.317
2024-11-04 10:03 - INFO - 	 Recall for 0.4 precision: 0.340
2024-11-04 10:03 - INFO - 	 Best Val. Loss: 0.164
2024-11-04 10:03 - INFO - 	 Best ROC-AUC: 0.826
2024-11-04 10:03 - INFO - 	 Best PR-AUC: 0.317
2024-11-04 10:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-04 10:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-04 10:03 - INFO - 	 Best Recall for 0.4 precision: 0.340
2024-11-04 10:03 - INFO - ---------------------------------------------
2024-11-04 10:05 - INFO - ---------------------------------------------
2024-11-04 10:05 - INFO - Epoch: 09 | Time: 1m 51s
2024-11-04 10:05 - INFO - 	 Train Loss: 0.152
2024-11-04 10:05 - INFO - 	 Val. Loss: 0.158
2024-11-04 10:05 - INFO - 	 ROC-AUC: 0.849
2024-11-04 10:05 - INFO - 	 PR-AUC: 0.307
2024-11-04 10:05 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-04 10:05 - INFO - 	 Best Val. Loss: 0.158
2024-11-04 10:05 - INFO - 	 Best ROC-AUC: 0.849
2024-11-04 10:05 - INFO - 	 Best PR-AUC: 0.317
2024-11-04 10:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-04 10:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-04 10:05 - INFO - 	 Best Recall for 0.4 precision: 0.340
2024-11-04 10:05 - INFO - ---------------------------------------------
2024-11-04 10:07 - INFO - ---------------------------------------------
2024-11-04 10:07 - INFO - Epoch: 10 | Time: 1m 51s
2024-11-04 10:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36659
2024-11-04 10:07 - INFO - 	 Train Loss: 0.143
2024-11-04 10:07 - INFO - 	 Val. Loss: 0.233
2024-11-04 10:07 - INFO - 	 ROC-AUC: 0.924
2024-11-04 10:07 - INFO - 	 PR-AUC: 0.367
2024-11-04 10:07 - INFO - 	 Recall for 0.4 precision: 0.416
2024-11-04 10:07 - INFO - 	 Best Val. Loss: 0.158
2024-11-04 10:07 - INFO - 	 Best ROC-AUC: 0.924
2024-11-04 10:07 - INFO - 	 Best PR-AUC: 0.367
2024-11-04 10:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.892
2024-11-04 10:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.283
2024-11-04 10:07 - INFO - 	 Best Recall for 0.4 precision: 0.416
2024-11-04 10:07 - INFO - ---------------------------------------------
2024-11-04 10:09 - INFO - Fit the preprocessing pipeline
2024-11-04 10:09 - INFO - Training using device: mps
2024-11-04 10:09 - INFO - Creating generators
2024-11-04 10:09 - INFO - The model has 651,257 trainable parameters
2024-11-04 10:09 - INFO - * Model:
2024-11-04 10:09 - INFO - * -----------
2024-11-04 10:09 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 10:09 - INFO - * -----------
2024-11-04 10:09 - INFO - Evaluating model based on: aucpr
2024-11-04 10:09 - INFO - Training..

2024-11-04 10:11 - INFO - ---------------------------------------------
2024-11-04 10:11 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 10:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18192
2024-11-04 10:11 - INFO - 	 Train Loss: 0.247
2024-11-04 10:11 - INFO - 	 Val. Loss: 0.274
2024-11-04 10:11 - INFO - 	 ROC-AUC: 0.769
2024-11-04 10:11 - INFO - 	 PR-AUC: 0.182
2024-11-04 10:11 - INFO - 	 Recall for 0.4 precision: 0.046
2024-11-04 10:11 - INFO - 	 Best Val. Loss: 0.274
2024-11-04 10:11 - INFO - 	 Best ROC-AUC: 0.769
2024-11-04 10:11 - INFO - 	 Best PR-AUC: 0.182
2024-11-04 10:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 10:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 10:11 - INFO - 	 Best Recall for 0.4 precision: 0.046
2024-11-04 10:11 - INFO - ---------------------------------------------
2024-11-04 10:13 - INFO - ---------------------------------------------
2024-11-04 10:13 - INFO - Epoch: 02 | Time: 1m 45s
2024-11-04 10:13 - INFO - 	 Train Loss: 0.204
2024-11-04 10:13 - INFO - 	 Val. Loss: 0.239
2024-11-04 10:13 - INFO - 	 ROC-AUC: 0.727
2024-11-04 10:13 - INFO - 	 PR-AUC: 0.162
2024-11-04 10:13 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-04 10:13 - INFO - 	 Best Val. Loss: 0.239
2024-11-04 10:13 - INFO - 	 Best ROC-AUC: 0.769
2024-11-04 10:13 - INFO - 	 Best PR-AUC: 0.182
2024-11-04 10:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 10:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 10:13 - INFO - 	 Best Recall for 0.4 precision: 0.046
2024-11-04 10:13 - INFO - ---------------------------------------------
2024-11-04 10:15 - INFO - ---------------------------------------------
2024-11-04 10:15 - INFO - Epoch: 03 | Time: 1m 52s
2024-11-04 10:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25135
2024-11-04 10:15 - INFO - 	 Train Loss: 0.187
2024-11-04 10:15 - INFO - 	 Val. Loss: 0.196
2024-11-04 10:15 - INFO - 	 ROC-AUC: 0.798
2024-11-04 10:15 - INFO - 	 PR-AUC: 0.251
2024-11-04 10:15 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-04 10:15 - INFO - 	 Best Val. Loss: 0.196
2024-11-04 10:15 - INFO - 	 Best ROC-AUC: 0.798
2024-11-04 10:15 - INFO - 	 Best PR-AUC: 0.251
2024-11-04 10:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.729
2024-11-04 10:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 10:15 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-04 10:15 - INFO - ---------------------------------------------
2024-11-04 10:17 - INFO - ---------------------------------------------
2024-11-04 10:17 - INFO - Epoch: 04 | Time: 1m 55s
2024-11-04 10:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25779
2024-11-04 10:17 - INFO - 	 Train Loss: 0.172
2024-11-04 10:17 - INFO - 	 Val. Loss: 0.199
2024-11-04 10:17 - INFO - 	 ROC-AUC: 0.785
2024-11-04 10:17 - INFO - 	 PR-AUC: 0.258
2024-11-04 10:17 - INFO - 	 Recall for 0.4 precision: 0.205
2024-11-04 10:17 - INFO - 	 Best Val. Loss: 0.196
2024-11-04 10:17 - INFO - 	 Best ROC-AUC: 0.798
2024-11-04 10:17 - INFO - 	 Best PR-AUC: 0.258
2024-11-04 10:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.729
2024-11-04 10:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-04 10:17 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-04 10:17 - INFO - ---------------------------------------------
2024-11-04 10:19 - INFO - ---------------------------------------------
2024-11-04 10:19 - INFO - Epoch: 05 | Time: 1m 56s
2024-11-04 10:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28395
2024-11-04 10:19 - INFO - 	 Train Loss: 0.165
2024-11-04 10:19 - INFO - 	 Val. Loss: 0.188
2024-11-04 10:19 - INFO - 	 ROC-AUC: 0.789
2024-11-04 10:19 - INFO - 	 PR-AUC: 0.284
2024-11-04 10:19 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-04 10:19 - INFO - 	 Best Val. Loss: 0.188
2024-11-04 10:19 - INFO - 	 Best ROC-AUC: 0.798
2024-11-04 10:19 - INFO - 	 Best PR-AUC: 0.284
2024-11-04 10:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.729
2024-11-04 10:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 10:19 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-04 10:19 - INFO - ---------------------------------------------
2024-11-04 10:21 - INFO - ---------------------------------------------
2024-11-04 10:21 - INFO - Epoch: 06 | Time: 1m 58s
2024-11-04 10:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31218
2024-11-04 10:21 - INFO - 	 Train Loss: 0.159
2024-11-04 10:21 - INFO - 	 Val. Loss: 0.169
2024-11-04 10:21 - INFO - 	 ROC-AUC: 0.821
2024-11-04 10:21 - INFO - 	 PR-AUC: 0.312
2024-11-04 10:21 - INFO - 	 Recall for 0.4 precision: 0.312
2024-11-04 10:21 - INFO - 	 Best Val. Loss: 0.169
2024-11-04 10:21 - INFO - 	 Best ROC-AUC: 0.821
2024-11-04 10:21 - INFO - 	 Best PR-AUC: 0.312
2024-11-04 10:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-04 10:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-04 10:21 - INFO - 	 Best Recall for 0.4 precision: 0.312
2024-11-04 10:21 - INFO - ---------------------------------------------
2024-11-04 10:23 - INFO - ---------------------------------------------
2024-11-04 10:23 - INFO - Epoch: 07 | Time: 1m 58s
2024-11-04 10:23 - INFO - 	 Train Loss: 0.154
2024-11-04 10:23 - INFO - 	 Val. Loss: 0.172
2024-11-04 10:23 - INFO - 	 ROC-AUC: 0.811
2024-11-04 10:23 - INFO - 	 PR-AUC: 0.306
2024-11-04 10:23 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-04 10:23 - INFO - 	 Best Val. Loss: 0.169
2024-11-04 10:23 - INFO - 	 Best ROC-AUC: 0.821
2024-11-04 10:23 - INFO - 	 Best PR-AUC: 0.312
2024-11-04 10:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-04 10:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-04 10:23 - INFO - 	 Best Recall for 0.4 precision: 0.341
2024-11-04 10:23 - INFO - ---------------------------------------------
2024-11-04 10:25 - INFO - ---------------------------------------------
2024-11-04 10:25 - INFO - Epoch: 08 | Time: 1m 59s
2024-11-04 10:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40944
2024-11-04 10:25 - INFO - 	 Train Loss: 0.145
2024-11-04 10:25 - INFO - 	 Val. Loss: 0.130
2024-11-04 10:25 - INFO - 	 ROC-AUC: 0.940
2024-11-04 10:25 - INFO - 	 PR-AUC: 0.409
2024-11-04 10:25 - INFO - 	 Recall for 0.4 precision: 0.598
2024-11-04 10:25 - INFO - 	 Best Val. Loss: 0.130
2024-11-04 10:25 - INFO - 	 Best ROC-AUC: 0.940
2024-11-04 10:25 - INFO - 	 Best PR-AUC: 0.409
2024-11-04 10:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-04 10:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.280
2024-11-04 10:25 - INFO - 	 Best Recall for 0.4 precision: 0.598
2024-11-04 10:25 - INFO - ---------------------------------------------
2024-11-04 10:27 - INFO - ---------------------------------------------
2024-11-04 10:27 - INFO - Epoch: 09 | Time: 1m 58s
2024-11-04 10:27 - INFO - 	 Train Loss: 0.122
2024-11-04 10:27 - INFO - 	 Val. Loss: 0.141
2024-11-04 10:27 - INFO - 	 ROC-AUC: 0.921
2024-11-04 10:27 - INFO - 	 PR-AUC: 0.367
2024-11-04 10:27 - INFO - 	 Recall for 0.4 precision: 0.507
2024-11-04 10:27 - INFO - 	 Best Val. Loss: 0.130
2024-11-04 10:27 - INFO - 	 Best ROC-AUC: 0.940
2024-11-04 10:27 - INFO - 	 Best PR-AUC: 0.409
2024-11-04 10:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-04 10:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.280
2024-11-04 10:27 - INFO - 	 Best Recall for 0.4 precision: 0.598
2024-11-04 10:27 - INFO - ---------------------------------------------
2024-11-04 10:29 - INFO - ---------------------------------------------
2024-11-04 10:29 - INFO - Epoch: 10 | Time: 1m 59s
2024-11-04 10:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54349
2024-11-04 10:29 - INFO - 	 Train Loss: 0.113
2024-11-04 10:29 - INFO - 	 Val. Loss: 0.103
2024-11-04 10:29 - INFO - 	 ROC-AUC: 0.967
2024-11-04 10:29 - INFO - 	 PR-AUC: 0.543
2024-11-04 10:29 - INFO - 	 Recall for 0.4 precision: 0.917
2024-11-04 10:29 - INFO - 	 Best Val. Loss: 0.103
2024-11-04 10:29 - INFO - 	 Best ROC-AUC: 0.967
2024-11-04 10:29 - INFO - 	 Best PR-AUC: 0.543
2024-11-04 10:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-04 10:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.396
2024-11-04 10:29 - INFO - 	 Best Recall for 0.4 precision: 0.917
2024-11-04 10:29 - INFO - ---------------------------------------------
