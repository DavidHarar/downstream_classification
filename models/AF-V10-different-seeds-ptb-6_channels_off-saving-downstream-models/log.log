2024-10-25 14:55 - INFO - Fit the preprocessing pipeline
2024-10-25 14:55 - INFO - Training using device: cuda
2024-10-25 14:55 - INFO - Creating generators
2024-10-25 14:56 - INFO - The model has 651,257 trainable parameters
2024-10-25 14:56 - INFO - * Model:
2024-10-25 14:56 - INFO - * -----------
2024-10-25 14:56 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 14:56 - INFO - * -----------
2024-10-25 14:56 - INFO - Evaluating model based on: rocauc
2024-10-25 14:56 - INFO - Training..

2024-10-25 14:56 - INFO - ---------------------------------------------
2024-10-25 14:56 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 14:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97828
2024-10-25 14:56 - INFO - 	 Train Loss: 0.167
2024-10-25 14:56 - INFO - 	 Val. Loss: 0.088
2024-10-25 14:56 - INFO - 	 ROC-AUC: 0.978
2024-10-25 14:56 - INFO - 	 PR-AUC: 0.811
2024-10-25 14:56 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 14:56 - INFO - 	 Best Val. Loss: 0.088
2024-10-25 14:56 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 14:56 - INFO - 	 Best PR-AUC: 0.811
2024-10-25 14:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 14:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.777
2024-10-25 14:56 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 14:56 - INFO - ---------------------------------------------
2024-10-25 14:57 - INFO - ---------------------------------------------
2024-10-25 14:57 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 14:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98271
2024-10-25 14:57 - INFO - 	 Train Loss: 0.087
2024-10-25 14:57 - INFO - 	 Val. Loss: 0.074
2024-10-25 14:57 - INFO - 	 ROC-AUC: 0.983
2024-10-25 14:57 - INFO - 	 PR-AUC: 0.845
2024-10-25 14:57 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 14:57 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 14:57 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 14:57 - INFO - 	 Best PR-AUC: 0.845
2024-10-25 14:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 14:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-25 14:57 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 14:57 - INFO - ---------------------------------------------
2024-10-25 14:57 - INFO - ---------------------------------------------
2024-10-25 14:57 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 14:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98548
2024-10-25 14:57 - INFO - 	 Train Loss: 0.078
2024-10-25 14:57 - INFO - 	 Val. Loss: 0.066
2024-10-25 14:57 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:57 - INFO - 	 PR-AUC: 0.872
2024-10-25 14:57 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:57 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 14:57 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 14:57 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 14:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 14:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 14:57 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 14:57 - INFO - ---------------------------------------------
2024-10-25 14:58 - INFO - ---------------------------------------------
2024-10-25 14:58 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 14:58 - INFO - 	 Train Loss: 0.074
2024-10-25 14:58 - INFO - 	 Val. Loss: 0.068
2024-10-25 14:58 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:58 - INFO - 	 PR-AUC: 0.865
2024-10-25 14:58 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:58 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 14:58 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 14:58 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 14:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 14:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 14:58 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 14:58 - INFO - ---------------------------------------------
2024-10-25 14:58 - INFO - ---------------------------------------------
2024-10-25 14:58 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 14:58 - INFO - 	 Train Loss: 0.071
2024-10-25 14:58 - INFO - 	 Val. Loss: 0.068
2024-10-25 14:58 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:58 - INFO - 	 PR-AUC: 0.877
2024-10-25 14:58 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 14:58 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 14:58 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 14:58 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 14:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 14:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 14:58 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 14:58 - INFO - ---------------------------------------------
2024-10-25 14:59 - INFO - ---------------------------------------------
2024-10-25 14:59 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 14:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98564
2024-10-25 14:59 - INFO - 	 Train Loss: 0.068
2024-10-25 14:59 - INFO - 	 Val. Loss: 0.065
2024-10-25 14:59 - INFO - 	 ROC-AUC: 0.986
2024-10-25 14:59 - INFO - 	 PR-AUC: 0.866
2024-10-25 14:59 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 14:59 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 14:59 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:59 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 14:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 14:59 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 14:59 - INFO - ---------------------------------------------
2024-10-25 14:59 - INFO - ---------------------------------------------
2024-10-25 14:59 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 14:59 - INFO - 	 Train Loss: 0.067
2024-10-25 14:59 - INFO - 	 Val. Loss: 0.068
2024-10-25 14:59 - INFO - 	 ROC-AUC: 0.985
2024-10-25 14:59 - INFO - 	 PR-AUC: 0.861
2024-10-25 14:59 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 14:59 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 14:59 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 14:59 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 14:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 14:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 14:59 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 14:59 - INFO - ---------------------------------------------
2024-10-25 15:00 - INFO - ---------------------------------------------
2024-10-25 15:00 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 15:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9876
2024-10-25 15:00 - INFO - 	 Train Loss: 0.065
2024-10-25 15:00 - INFO - 	 Val. Loss: 0.064
2024-10-25 15:00 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:00 - INFO - 	 PR-AUC: 0.882
2024-10-25 15:00 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 15:00 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 15:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:00 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 15:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 15:00 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 15:00 - INFO - ---------------------------------------------
2024-10-25 15:00 - INFO - ---------------------------------------------
2024-10-25 15:00 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 15:00 - INFO - 	 Train Loss: 0.064
2024-10-25 15:00 - INFO - 	 Val. Loss: 0.062
2024-10-25 15:00 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:00 - INFO - 	 PR-AUC: 0.879
2024-10-25 15:00 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 15:00 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 15:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:00 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 15:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 15:00 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 15:00 - INFO - ---------------------------------------------
2024-10-25 15:01 - INFO - ---------------------------------------------
2024-10-25 15:01 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 15:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98777
2024-10-25 15:01 - INFO - 	 Train Loss: 0.062
2024-10-25 15:01 - INFO - 	 Val. Loss: 0.065
2024-10-25 15:01 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:01 - INFO - 	 PR-AUC: 0.888
2024-10-25 15:01 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 15:01 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 15:01 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:01 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 15:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 15:01 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 15:01 - INFO - ---------------------------------------------
2024-10-25 15:02 - INFO - Fit the preprocessing pipeline
2024-10-25 15:02 - INFO - Training using device: cuda
2024-10-25 15:02 - INFO - Creating generators
2024-10-25 15:02 - INFO - The model has 651,257 trainable parameters
2024-10-25 15:02 - INFO - * Model:
2024-10-25 15:02 - INFO - * -----------
2024-10-25 15:02 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 15:02 - INFO - * -----------
2024-10-25 15:02 - INFO - Evaluating model based on: rocauc
2024-10-25 15:02 - INFO - Training..

2024-10-25 15:03 - INFO - ---------------------------------------------
2024-10-25 15:03 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 15:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97683
2024-10-25 15:03 - INFO - 	 Train Loss: 0.160
2024-10-25 15:03 - INFO - 	 Val. Loss: 0.091
2024-10-25 15:03 - INFO - 	 ROC-AUC: 0.977
2024-10-25 15:03 - INFO - 	 PR-AUC: 0.803
2024-10-25 15:03 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-25 15:03 - INFO - 	 Best Val. Loss: 0.091
2024-10-25 15:03 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 15:03 - INFO - 	 Best PR-AUC: 0.803
2024-10-25 15:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 15:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.768
2024-10-25 15:03 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-25 15:03 - INFO - ---------------------------------------------
2024-10-25 15:03 - INFO - ---------------------------------------------
2024-10-25 15:03 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 15:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98273
2024-10-25 15:03 - INFO - 	 Train Loss: 0.087
2024-10-25 15:03 - INFO - 	 Val. Loss: 0.074
2024-10-25 15:03 - INFO - 	 ROC-AUC: 0.983
2024-10-25 15:03 - INFO - 	 PR-AUC: 0.836
2024-10-25 15:03 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 15:03 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 15:03 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 15:03 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 15:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 15:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-25 15:03 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 15:03 - INFO - ---------------------------------------------
2024-10-25 15:04 - INFO - ---------------------------------------------
2024-10-25 15:04 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 15:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98584
2024-10-25 15:04 - INFO - 	 Train Loss: 0.079
2024-10-25 15:04 - INFO - 	 Val. Loss: 0.068
2024-10-25 15:04 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:04 - INFO - 	 PR-AUC: 0.865
2024-10-25 15:04 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:04 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 15:04 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:04 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 15:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 15:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 15:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:04 - INFO - ---------------------------------------------
2024-10-25 15:05 - INFO - ---------------------------------------------
2024-10-25 15:05 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 15:05 - INFO - 	 Train Loss: 0.074
2024-10-25 15:05 - INFO - 	 Val. Loss: 0.077
2024-10-25 15:05 - INFO - 	 ROC-AUC: 0.982
2024-10-25 15:05 - INFO - 	 PR-AUC: 0.855
2024-10-25 15:05 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 15:05 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 15:05 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:05 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 15:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 15:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 15:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:05 - INFO - ---------------------------------------------
2024-10-25 15:05 - INFO - ---------------------------------------------
2024-10-25 15:05 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 15:05 - INFO - 	 Train Loss: 0.070
2024-10-25 15:05 - INFO - 	 Val. Loss: 0.069
2024-10-25 15:05 - INFO - 	 ROC-AUC: 0.985
2024-10-25 15:05 - INFO - 	 PR-AUC: 0.855
2024-10-25 15:05 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:05 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 15:05 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:05 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 15:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 15:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 15:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:05 - INFO - ---------------------------------------------
2024-10-25 15:06 - INFO - ---------------------------------------------
2024-10-25 15:06 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 15:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98628
2024-10-25 15:06 - INFO - 	 Train Loss: 0.068
2024-10-25 15:06 - INFO - 	 Val. Loss: 0.066
2024-10-25 15:06 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:06 - INFO - 	 PR-AUC: 0.873
2024-10-25 15:06 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 15:06 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 15:06 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:06 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 15:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 15:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 15:06 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:06 - INFO - ---------------------------------------------
2024-10-25 15:06 - INFO - ---------------------------------------------
2024-10-25 15:06 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 15:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98686
2024-10-25 15:06 - INFO - 	 Train Loss: 0.067
2024-10-25 15:06 - INFO - 	 Val. Loss: 0.062
2024-10-25 15:06 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:06 - INFO - 	 PR-AUC: 0.882
2024-10-25 15:06 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:06 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 15:06 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:06 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 15:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 15:06 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:06 - INFO - ---------------------------------------------
2024-10-25 15:07 - INFO - ---------------------------------------------
2024-10-25 15:07 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 15:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98752
2024-10-25 15:07 - INFO - 	 Train Loss: 0.064
2024-10-25 15:07 - INFO - 	 Val. Loss: 0.060
2024-10-25 15:07 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:07 - INFO - 	 PR-AUC: 0.890
2024-10-25 15:07 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:07 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:07 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:07 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 15:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 15:07 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:07 - INFO - ---------------------------------------------
2024-10-25 15:07 - INFO - ---------------------------------------------
2024-10-25 15:07 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 15:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98858
2024-10-25 15:07 - INFO - 	 Train Loss: 0.063
2024-10-25 15:07 - INFO - 	 Val. Loss: 0.064
2024-10-25 15:07 - INFO - 	 ROC-AUC: 0.989
2024-10-25 15:07 - INFO - 	 PR-AUC: 0.891
2024-10-25 15:07 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 15:07 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:07 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 15:07 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 15:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 15:07 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 15:07 - INFO - ---------------------------------------------
2024-10-25 15:08 - INFO - ---------------------------------------------
2024-10-25 15:08 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 15:08 - INFO - 	 Train Loss: 0.062
2024-10-25 15:08 - INFO - 	 Val. Loss: 0.061
2024-10-25 15:08 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:08 - INFO - 	 PR-AUC: 0.889
2024-10-25 15:08 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:08 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 15:08 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 15:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 15:08 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 15:08 - INFO - ---------------------------------------------
2024-10-25 15:09 - INFO - Fit the preprocessing pipeline
2024-10-25 15:09 - INFO - Training using device: cuda
2024-10-25 15:09 - INFO - Creating generators
2024-10-25 15:09 - INFO - The model has 651,257 trainable parameters
2024-10-25 15:09 - INFO - * Model:
2024-10-25 15:09 - INFO - * -----------
2024-10-25 15:09 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 15:09 - INFO - * -----------
2024-10-25 15:09 - INFO - Evaluating model based on: rocauc
2024-10-25 15:09 - INFO - Training..

2024-10-25 15:10 - INFO - ---------------------------------------------
2024-10-25 15:10 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 15:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97579
2024-10-25 15:10 - INFO - 	 Train Loss: 0.165
2024-10-25 15:10 - INFO - 	 Val. Loss: 0.097
2024-10-25 15:10 - INFO - 	 ROC-AUC: 0.976
2024-10-25 15:10 - INFO - 	 PR-AUC: 0.767
2024-10-25 15:10 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 15:10 - INFO - 	 Best Val. Loss: 0.097
2024-10-25 15:10 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 15:10 - INFO - 	 Best PR-AUC: 0.767
2024-10-25 15:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-25 15:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-10-25 15:10 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 15:10 - INFO - ---------------------------------------------
2024-10-25 15:10 - INFO - ---------------------------------------------
2024-10-25 15:10 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 15:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98339
2024-10-25 15:10 - INFO - 	 Train Loss: 0.088
2024-10-25 15:10 - INFO - 	 Val. Loss: 0.073
2024-10-25 15:10 - INFO - 	 ROC-AUC: 0.983
2024-10-25 15:10 - INFO - 	 PR-AUC: 0.826
2024-10-25 15:10 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 15:10 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 15:10 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 15:10 - INFO - 	 Best PR-AUC: 0.826
2024-10-25 15:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 15:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-25 15:10 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 15:10 - INFO - ---------------------------------------------
2024-10-25 15:11 - INFO - ---------------------------------------------
2024-10-25 15:11 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 15:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98554
2024-10-25 15:11 - INFO - 	 Train Loss: 0.078
2024-10-25 15:11 - INFO - 	 Val. Loss: 0.070
2024-10-25 15:11 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:11 - INFO - 	 PR-AUC: 0.868
2024-10-25 15:11 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:11 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 15:11 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:11 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 15:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 15:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 15:11 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 15:11 - INFO - ---------------------------------------------
2024-10-25 15:11 - INFO - ---------------------------------------------
2024-10-25 15:11 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 15:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98643
2024-10-25 15:11 - INFO - 	 Train Loss: 0.074
2024-10-25 15:11 - INFO - 	 Val. Loss: 0.067
2024-10-25 15:11 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:11 - INFO - 	 PR-AUC: 0.875
2024-10-25 15:11 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 15:11 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 15:11 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:11 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 15:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 15:11 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 15:11 - INFO - ---------------------------------------------
2024-10-25 15:12 - INFO - ---------------------------------------------
2024-10-25 15:12 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 15:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98689
2024-10-25 15:12 - INFO - 	 Train Loss: 0.071
2024-10-25 15:12 - INFO - 	 Val. Loss: 0.062
2024-10-25 15:12 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:12 - INFO - 	 PR-AUC: 0.879
2024-10-25 15:12 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:12 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 15:12 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:12 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 15:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 15:12 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:12 - INFO - ---------------------------------------------
2024-10-25 15:13 - INFO - ---------------------------------------------
2024-10-25 15:13 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 15:13 - INFO - 	 Train Loss: 0.068
2024-10-25 15:13 - INFO - 	 Val. Loss: 0.066
2024-10-25 15:13 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:13 - INFO - 	 PR-AUC: 0.863
2024-10-25 15:13 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:13 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 15:13 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:13 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 15:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 15:13 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:13 - INFO - ---------------------------------------------
2024-10-25 15:13 - INFO - ---------------------------------------------
2024-10-25 15:13 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 15:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.987
2024-10-25 15:13 - INFO - 	 Train Loss: 0.067
2024-10-25 15:13 - INFO - 	 Val. Loss: 0.061
2024-10-25 15:13 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:13 - INFO - 	 PR-AUC: 0.880
2024-10-25 15:13 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:13 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 15:13 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:13 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 15:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 15:13 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:13 - INFO - ---------------------------------------------
2024-10-25 15:14 - INFO - ---------------------------------------------
2024-10-25 15:14 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 15:14 - INFO - 	 Train Loss: 0.064
2024-10-25 15:14 - INFO - 	 Val. Loss: 0.066
2024-10-25 15:14 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:14 - INFO - 	 PR-AUC: 0.875
2024-10-25 15:14 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:14 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 15:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:14 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 15:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 15:14 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:14 - INFO - ---------------------------------------------
2024-10-25 15:14 - INFO - ---------------------------------------------
2024-10-25 15:14 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 15:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98744
2024-10-25 15:14 - INFO - 	 Train Loss: 0.063
2024-10-25 15:14 - INFO - 	 Val. Loss: 0.060
2024-10-25 15:14 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:14 - INFO - 	 PR-AUC: 0.889
2024-10-25 15:14 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:14 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:14 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 15:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 15:14 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:14 - INFO - ---------------------------------------------
2024-10-25 15:15 - INFO - ---------------------------------------------
2024-10-25 15:15 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 15:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98832
2024-10-25 15:15 - INFO - 	 Train Loss: 0.062
2024-10-25 15:15 - INFO - 	 Val. Loss: 0.059
2024-10-25 15:15 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:15 - INFO - 	 PR-AUC: 0.892
2024-10-25 15:15 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:15 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 15:15 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:15 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 15:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-25 15:15 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:15 - INFO - ---------------------------------------------
2024-10-25 15:16 - INFO - Fit the preprocessing pipeline
2024-10-25 15:16 - INFO - Training using device: cuda
2024-10-25 15:16 - INFO - Creating generators
2024-10-25 15:16 - INFO - The model has 651,257 trainable parameters
2024-10-25 15:16 - INFO - * Model:
2024-10-25 15:16 - INFO - * -----------
2024-10-25 15:16 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 15:16 - INFO - * -----------
2024-10-25 15:16 - INFO - Evaluating model based on: rocauc
2024-10-25 15:16 - INFO - Training..

2024-10-25 15:17 - INFO - ---------------------------------------------
2024-10-25 15:17 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 15:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97999
2024-10-25 15:17 - INFO - 	 Train Loss: 0.164
2024-10-25 15:17 - INFO - 	 Val. Loss: 0.080
2024-10-25 15:17 - INFO - 	 ROC-AUC: 0.980
2024-10-25 15:17 - INFO - 	 PR-AUC: 0.802
2024-10-25 15:17 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 15:17 - INFO - 	 Best Val. Loss: 0.080
2024-10-25 15:17 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 15:17 - INFO - 	 Best PR-AUC: 0.802
2024-10-25 15:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 15:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-10-25 15:17 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 15:17 - INFO - ---------------------------------------------
2024-10-25 15:17 - INFO - ---------------------------------------------
2024-10-25 15:17 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 15:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98258
2024-10-25 15:17 - INFO - 	 Train Loss: 0.089
2024-10-25 15:17 - INFO - 	 Val. Loss: 0.073
2024-10-25 15:17 - INFO - 	 ROC-AUC: 0.983
2024-10-25 15:17 - INFO - 	 PR-AUC: 0.840
2024-10-25 15:17 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:17 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 15:17 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 15:17 - INFO - 	 Best PR-AUC: 0.840
2024-10-25 15:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 15:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-25 15:17 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 15:17 - INFO - ---------------------------------------------
2024-10-25 15:18 - INFO - ---------------------------------------------
2024-10-25 15:18 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 15:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98294
2024-10-25 15:18 - INFO - 	 Train Loss: 0.079
2024-10-25 15:18 - INFO - 	 Val. Loss: 0.071
2024-10-25 15:18 - INFO - 	 ROC-AUC: 0.983
2024-10-25 15:18 - INFO - 	 PR-AUC: 0.859
2024-10-25 15:18 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 15:18 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 15:18 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 15:18 - INFO - 	 Best PR-AUC: 0.859
2024-10-25 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-25 15:18 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 15:18 - INFO - ---------------------------------------------
2024-10-25 15:18 - INFO - ---------------------------------------------
2024-10-25 15:18 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 15:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98643
2024-10-25 15:18 - INFO - 	 Train Loss: 0.075
2024-10-25 15:18 - INFO - 	 Val. Loss: 0.066
2024-10-25 15:18 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:18 - INFO - 	 PR-AUC: 0.863
2024-10-25 15:18 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:18 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 15:18 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:18 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-25 15:18 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:18 - INFO - ---------------------------------------------
2024-10-25 15:19 - INFO - ---------------------------------------------
2024-10-25 15:19 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 15:19 - INFO - 	 Train Loss: 0.070
2024-10-25 15:19 - INFO - 	 Val. Loss: 0.067
2024-10-25 15:19 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:19 - INFO - 	 PR-AUC: 0.866
2024-10-25 15:19 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 15:19 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 15:19 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:19 - INFO - 	 Best PR-AUC: 0.866
2024-10-25 15:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 15:19 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 15:19 - INFO - ---------------------------------------------
2024-10-25 15:19 - INFO - ---------------------------------------------
2024-10-25 15:19 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 15:19 - INFO - 	 Train Loss: 0.069
2024-10-25 15:19 - INFO - 	 Val. Loss: 0.066
2024-10-25 15:19 - INFO - 	 ROC-AUC: 0.985
2024-10-25 15:19 - INFO - 	 PR-AUC: 0.864
2024-10-25 15:19 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:19 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 15:19 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:19 - INFO - 	 Best PR-AUC: 0.866
2024-10-25 15:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 15:19 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:19 - INFO - ---------------------------------------------
2024-10-25 15:20 - INFO - ---------------------------------------------
2024-10-25 15:20 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 15:20 - INFO - 	 Train Loss: 0.067
2024-10-25 15:20 - INFO - 	 Val. Loss: 0.067
2024-10-25 15:20 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:20 - INFO - 	 PR-AUC: 0.870
2024-10-25 15:20 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:20 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 15:20 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:20 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 15:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 15:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:20 - INFO - ---------------------------------------------
2024-10-25 15:20 - INFO - ---------------------------------------------
2024-10-25 15:20 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 15:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98746
2024-10-25 15:20 - INFO - 	 Train Loss: 0.065
2024-10-25 15:20 - INFO - 	 Val. Loss: 0.061
2024-10-25 15:20 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:20 - INFO - 	 PR-AUC: 0.887
2024-10-25 15:20 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:20 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 15:20 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:20 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 15:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 15:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:20 - INFO - ---------------------------------------------
2024-10-25 15:21 - INFO - ---------------------------------------------
2024-10-25 15:21 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 15:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98756
2024-10-25 15:21 - INFO - 	 Train Loss: 0.064
2024-10-25 15:21 - INFO - 	 Val. Loss: 0.060
2024-10-25 15:21 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:21 - INFO - 	 PR-AUC: 0.883
2024-10-25 15:21 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:21 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:21 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:21 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 15:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 15:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:21 - INFO - ---------------------------------------------
2024-10-25 15:22 - INFO - ---------------------------------------------
2024-10-25 15:22 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 15:22 - INFO - 	 Train Loss: 0.063
2024-10-25 15:22 - INFO - 	 Val. Loss: 0.060
2024-10-25 15:22 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:22 - INFO - 	 PR-AUC: 0.886
2024-10-25 15:22 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:22 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:22 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:22 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 15:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 15:22 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:22 - INFO - ---------------------------------------------
2024-10-25 15:23 - INFO - Fit the preprocessing pipeline
2024-10-25 15:23 - INFO - Training using device: cuda
2024-10-25 15:23 - INFO - Creating generators
2024-10-25 15:23 - INFO - The model has 651,257 trainable parameters
2024-10-25 15:23 - INFO - * Model:
2024-10-25 15:23 - INFO - * -----------
2024-10-25 15:23 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 15:23 - INFO - * -----------
2024-10-25 15:23 - INFO - Evaluating model based on: rocauc
2024-10-25 15:23 - INFO - Training..

2024-10-25 15:24 - INFO - ---------------------------------------------
2024-10-25 15:24 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 15:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97371
2024-10-25 15:24 - INFO - 	 Train Loss: 0.166
2024-10-25 15:24 - INFO - 	 Val. Loss: 0.092
2024-10-25 15:24 - INFO - 	 ROC-AUC: 0.974
2024-10-25 15:24 - INFO - 	 PR-AUC: 0.772
2024-10-25 15:24 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-25 15:24 - INFO - 	 Best Val. Loss: 0.092
2024-10-25 15:24 - INFO - 	 Best ROC-AUC: 0.974
2024-10-25 15:24 - INFO - 	 Best PR-AUC: 0.772
2024-10-25 15:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 15:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-10-25 15:24 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-25 15:24 - INFO - ---------------------------------------------
2024-10-25 15:24 - INFO - ---------------------------------------------
2024-10-25 15:24 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 15:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98284
2024-10-25 15:24 - INFO - 	 Train Loss: 0.089
2024-10-25 15:24 - INFO - 	 Val. Loss: 0.074
2024-10-25 15:24 - INFO - 	 ROC-AUC: 0.983
2024-10-25 15:24 - INFO - 	 PR-AUC: 0.829
2024-10-25 15:24 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:24 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 15:24 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 15:24 - INFO - 	 Best PR-AUC: 0.829
2024-10-25 15:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 15:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-25 15:24 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:24 - INFO - ---------------------------------------------
2024-10-25 15:25 - INFO - ---------------------------------------------
2024-10-25 15:25 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 15:25 - INFO - 	 Train Loss: 0.079
2024-10-25 15:25 - INFO - 	 Val. Loss: 0.079
2024-10-25 15:25 - INFO - 	 ROC-AUC: 0.981
2024-10-25 15:25 - INFO - 	 PR-AUC: 0.836
2024-10-25 15:25 - INFO - 	 Recall for 0.4 precision: 0.962
2024-10-25 15:25 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 15:25 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 15:25 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 15:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 15:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-25 15:25 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:25 - INFO - ---------------------------------------------
2024-10-25 15:25 - INFO - ---------------------------------------------
2024-10-25 15:25 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 15:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98477
2024-10-25 15:25 - INFO - 	 Train Loss: 0.073
2024-10-25 15:25 - INFO - 	 Val. Loss: 0.067
2024-10-25 15:25 - INFO - 	 ROC-AUC: 0.985
2024-10-25 15:25 - INFO - 	 PR-AUC: 0.879
2024-10-25 15:25 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 15:25 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 15:25 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 15:25 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 15:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 15:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 15:25 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:25 - INFO - ---------------------------------------------
2024-10-25 15:26 - INFO - ---------------------------------------------
2024-10-25 15:26 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 15:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98622
2024-10-25 15:26 - INFO - 	 Train Loss: 0.070
2024-10-25 15:26 - INFO - 	 Val. Loss: 0.065
2024-10-25 15:26 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:26 - INFO - 	 PR-AUC: 0.881
2024-10-25 15:26 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:26 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 15:26 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:26 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 15:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 15:26 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:26 - INFO - ---------------------------------------------
2024-10-25 15:26 - INFO - ---------------------------------------------
2024-10-25 15:26 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 15:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98681
2024-10-25 15:26 - INFO - 	 Train Loss: 0.068
2024-10-25 15:26 - INFO - 	 Val. Loss: 0.063
2024-10-25 15:26 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:26 - INFO - 	 PR-AUC: 0.877
2024-10-25 15:26 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:26 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 15:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:26 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 15:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 15:26 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:26 - INFO - ---------------------------------------------
2024-10-25 15:27 - INFO - ---------------------------------------------
2024-10-25 15:27 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 15:27 - INFO - 	 Train Loss: 0.066
2024-10-25 15:27 - INFO - 	 Val. Loss: 0.071
2024-10-25 15:27 - INFO - 	 ROC-AUC: 0.984
2024-10-25 15:27 - INFO - 	 PR-AUC: 0.856
2024-10-25 15:27 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 15:27 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 15:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:27 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 15:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 15:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:27 - INFO - ---------------------------------------------
2024-10-25 15:27 - INFO - ---------------------------------------------
2024-10-25 15:27 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 15:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98759
2024-10-25 15:27 - INFO - 	 Train Loss: 0.065
2024-10-25 15:27 - INFO - 	 Val. Loss: 0.060
2024-10-25 15:27 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:27 - INFO - 	 PR-AUC: 0.886
2024-10-25 15:27 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:27 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:27 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:27 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 15:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 15:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:27 - INFO - ---------------------------------------------
2024-10-25 15:28 - INFO - ---------------------------------------------
2024-10-25 15:28 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 15:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98807
2024-10-25 15:28 - INFO - 	 Train Loss: 0.063
2024-10-25 15:28 - INFO - 	 Val. Loss: 0.059
2024-10-25 15:28 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:28 - INFO - 	 PR-AUC: 0.891
2024-10-25 15:28 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:28 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 15:28 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:28 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 15:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 15:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 15:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:28 - INFO - ---------------------------------------------
2024-10-25 15:28 - INFO - ---------------------------------------------
2024-10-25 15:28 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 15:28 - INFO - 	 Train Loss: 0.062
2024-10-25 15:28 - INFO - 	 Val. Loss: 0.060
2024-10-25 15:28 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:28 - INFO - 	 PR-AUC: 0.891
2024-10-25 15:28 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 15:28 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 15:28 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:28 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 15:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 15:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 15:28 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:28 - INFO - ---------------------------------------------
2024-10-25 15:30 - INFO - Fit the preprocessing pipeline
2024-10-25 15:30 - INFO - Training using device: cuda
2024-10-25 15:30 - INFO - Creating generators
2024-10-25 15:30 - INFO - The model has 651,257 trainable parameters
2024-10-25 15:30 - INFO - * Model:
2024-10-25 15:30 - INFO - * -----------
2024-10-25 15:30 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 15:30 - INFO - * -----------
2024-10-25 15:30 - INFO - Evaluating model based on: rocauc
2024-10-25 15:30 - INFO - Training..

2024-10-25 15:30 - INFO - ---------------------------------------------
2024-10-25 15:30 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 15:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97013
2024-10-25 15:30 - INFO - 	 Train Loss: 0.180
2024-10-25 15:30 - INFO - 	 Val. Loss: 0.101
2024-10-25 15:30 - INFO - 	 ROC-AUC: 0.970
2024-10-25 15:30 - INFO - 	 PR-AUC: 0.723
2024-10-25 15:30 - INFO - 	 Recall for 0.4 precision: 0.950
2024-10-25 15:30 - INFO - 	 Best Val. Loss: 0.101
2024-10-25 15:30 - INFO - 	 Best ROC-AUC: 0.970
2024-10-25 15:30 - INFO - 	 Best PR-AUC: 0.723
2024-10-25 15:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 15:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.730
2024-10-25 15:30 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-25 15:30 - INFO - ---------------------------------------------
2024-10-25 15:31 - INFO - ---------------------------------------------
2024-10-25 15:31 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 15:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98319
2024-10-25 15:31 - INFO - 	 Train Loss: 0.090
2024-10-25 15:31 - INFO - 	 Val. Loss: 0.073
2024-10-25 15:31 - INFO - 	 ROC-AUC: 0.983
2024-10-25 15:31 - INFO - 	 PR-AUC: 0.846
2024-10-25 15:31 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:31 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 15:31 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 15:31 - INFO - 	 Best PR-AUC: 0.846
2024-10-25 15:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 15:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-25 15:31 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:31 - INFO - ---------------------------------------------
2024-10-25 15:32 - INFO - ---------------------------------------------
2024-10-25 15:32 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 15:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98518
2024-10-25 15:32 - INFO - 	 Train Loss: 0.079
2024-10-25 15:32 - INFO - 	 Val. Loss: 0.069
2024-10-25 15:32 - INFO - 	 ROC-AUC: 0.985
2024-10-25 15:32 - INFO - 	 PR-AUC: 0.854
2024-10-25 15:32 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:32 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 15:32 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 15:32 - INFO - 	 Best PR-AUC: 0.854
2024-10-25 15:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-25 15:32 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:32 - INFO - ---------------------------------------------
2024-10-25 15:32 - INFO - ---------------------------------------------
2024-10-25 15:32 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 15:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98616
2024-10-25 15:32 - INFO - 	 Train Loss: 0.075
2024-10-25 15:32 - INFO - 	 Val. Loss: 0.068
2024-10-25 15:32 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:32 - INFO - 	 PR-AUC: 0.876
2024-10-25 15:32 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:32 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 15:32 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:32 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 15:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 15:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 15:32 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:32 - INFO - ---------------------------------------------
2024-10-25 15:33 - INFO - ---------------------------------------------
2024-10-25 15:33 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 15:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98686
2024-10-25 15:33 - INFO - 	 Train Loss: 0.071
2024-10-25 15:33 - INFO - 	 Val. Loss: 0.062
2024-10-25 15:33 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:33 - INFO - 	 PR-AUC: 0.876
2024-10-25 15:33 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:33 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 15:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:33 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 15:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 15:33 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:33 - INFO - ---------------------------------------------
2024-10-25 15:33 - INFO - ---------------------------------------------
2024-10-25 15:33 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 15:33 - INFO - 	 Train Loss: 0.068
2024-10-25 15:33 - INFO - 	 Val. Loss: 0.064
2024-10-25 15:33 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:33 - INFO - 	 PR-AUC: 0.868
2024-10-25 15:33 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:33 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 15:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:33 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 15:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 15:33 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:33 - INFO - ---------------------------------------------
2024-10-25 15:34 - INFO - ---------------------------------------------
2024-10-25 15:34 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 15:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98708
2024-10-25 15:34 - INFO - 	 Train Loss: 0.066
2024-10-25 15:34 - INFO - 	 Val. Loss: 0.063
2024-10-25 15:34 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:34 - INFO - 	 PR-AUC: 0.871
2024-10-25 15:34 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:34 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 15:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:34 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 15:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 15:34 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:34 - INFO - ---------------------------------------------
2024-10-25 15:34 - INFO - ---------------------------------------------
2024-10-25 15:34 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 15:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9876
2024-10-25 15:34 - INFO - 	 Train Loss: 0.064
2024-10-25 15:34 - INFO - 	 Val. Loss: 0.060
2024-10-25 15:34 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:34 - INFO - 	 PR-AUC: 0.882
2024-10-25 15:34 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 15:34 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:34 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:34 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 15:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 15:34 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:34 - INFO - ---------------------------------------------
2024-10-25 15:35 - INFO - ---------------------------------------------
2024-10-25 15:35 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 15:35 - INFO - 	 Train Loss: 0.064
2024-10-25 15:35 - INFO - 	 Val. Loss: 0.064
2024-10-25 15:35 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:35 - INFO - 	 PR-AUC: 0.885
2024-10-25 15:35 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 15:35 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:35 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:35 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 15:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-25 15:35 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:35 - INFO - ---------------------------------------------
2024-10-25 15:35 - INFO - ---------------------------------------------
2024-10-25 15:35 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 15:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98772
2024-10-25 15:35 - INFO - 	 Train Loss: 0.063
2024-10-25 15:35 - INFO - 	 Val. Loss: 0.060
2024-10-25 15:35 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:35 - INFO - 	 PR-AUC: 0.886
2024-10-25 15:35 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:35 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:35 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:35 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 15:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-25 15:35 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:35 - INFO - ---------------------------------------------
2024-10-25 15:37 - INFO - Fit the preprocessing pipeline
2024-10-25 15:37 - INFO - Training using device: cuda
2024-10-25 15:37 - INFO - Creating generators
2024-10-25 15:37 - INFO - The model has 651,257 trainable parameters
2024-10-25 15:37 - INFO - * Model:
2024-10-25 15:37 - INFO - * -----------
2024-10-25 15:37 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 15:37 - INFO - * -----------
2024-10-25 15:37 - INFO - Evaluating model based on: rocauc
2024-10-25 15:37 - INFO - Training..

2024-10-25 15:37 - INFO - ---------------------------------------------
2024-10-25 15:37 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 15:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97551
2024-10-25 15:37 - INFO - 	 Train Loss: 0.166
2024-10-25 15:37 - INFO - 	 Val. Loss: 0.087
2024-10-25 15:37 - INFO - 	 ROC-AUC: 0.976
2024-10-25 15:37 - INFO - 	 PR-AUC: 0.786
2024-10-25 15:37 - INFO - 	 Recall for 0.4 precision: 0.960
2024-10-25 15:37 - INFO - 	 Best Val. Loss: 0.087
2024-10-25 15:37 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 15:37 - INFO - 	 Best PR-AUC: 0.786
2024-10-25 15:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 15:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-10-25 15:37 - INFO - 	 Best Recall for 0.4 precision: 0.960
2024-10-25 15:37 - INFO - ---------------------------------------------
2024-10-25 15:38 - INFO - ---------------------------------------------
2024-10-25 15:38 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 15:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98353
2024-10-25 15:38 - INFO - 	 Train Loss: 0.088
2024-10-25 15:38 - INFO - 	 Val. Loss: 0.071
2024-10-25 15:38 - INFO - 	 ROC-AUC: 0.984
2024-10-25 15:38 - INFO - 	 PR-AUC: 0.845
2024-10-25 15:38 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:38 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 15:38 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 15:38 - INFO - 	 Best PR-AUC: 0.845
2024-10-25 15:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 15:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-25 15:38 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 15:38 - INFO - ---------------------------------------------
2024-10-25 15:39 - INFO - ---------------------------------------------
2024-10-25 15:39 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 15:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98481
2024-10-25 15:39 - INFO - 	 Train Loss: 0.079
2024-10-25 15:39 - INFO - 	 Val. Loss: 0.071
2024-10-25 15:39 - INFO - 	 ROC-AUC: 0.985
2024-10-25 15:39 - INFO - 	 PR-AUC: 0.852
2024-10-25 15:39 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:39 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 15:39 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 15:39 - INFO - 	 Best PR-AUC: 0.852
2024-10-25 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-25 15:39 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 15:39 - INFO - ---------------------------------------------
2024-10-25 15:39 - INFO - ---------------------------------------------
2024-10-25 15:39 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 15:39 - INFO - 	 Train Loss: 0.073
2024-10-25 15:39 - INFO - 	 Val. Loss: 0.068
2024-10-25 15:39 - INFO - 	 ROC-AUC: 0.985
2024-10-25 15:39 - INFO - 	 PR-AUC: 0.853
2024-10-25 15:39 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:39 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 15:39 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 15:39 - INFO - 	 Best PR-AUC: 0.853
2024-10-25 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-25 15:39 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:39 - INFO - ---------------------------------------------
2024-10-25 15:40 - INFO - ---------------------------------------------
2024-10-25 15:40 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 15:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98626
2024-10-25 15:40 - INFO - 	 Train Loss: 0.070
2024-10-25 15:40 - INFO - 	 Val. Loss: 0.063
2024-10-25 15:40 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:40 - INFO - 	 PR-AUC: 0.877
2024-10-25 15:40 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:40 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 15:40 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:40 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 15:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 15:40 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:40 - INFO - ---------------------------------------------
2024-10-25 15:40 - INFO - ---------------------------------------------
2024-10-25 15:40 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 15:40 - INFO - 	 Train Loss: 0.068
2024-10-25 15:40 - INFO - 	 Val. Loss: 0.065
2024-10-25 15:40 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:40 - INFO - 	 PR-AUC: 0.866
2024-10-25 15:40 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:40 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 15:40 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:40 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 15:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 15:40 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:40 - INFO - ---------------------------------------------
2024-10-25 15:41 - INFO - ---------------------------------------------
2024-10-25 15:41 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 15:41 - INFO - 	 Train Loss: 0.067
2024-10-25 15:41 - INFO - 	 Val. Loss: 0.065
2024-10-25 15:41 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:41 - INFO - 	 PR-AUC: 0.864
2024-10-25 15:41 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:41 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 15:41 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:41 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 15:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 15:41 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:41 - INFO - ---------------------------------------------
2024-10-25 15:41 - INFO - ---------------------------------------------
2024-10-25 15:41 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 15:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98669
2024-10-25 15:41 - INFO - 	 Train Loss: 0.064
2024-10-25 15:41 - INFO - 	 Val. Loss: 0.063
2024-10-25 15:41 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:41 - INFO - 	 PR-AUC: 0.874
2024-10-25 15:41 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 15:41 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 15:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:41 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 15:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 15:41 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 15:41 - INFO - ---------------------------------------------
2024-10-25 15:42 - INFO - ---------------------------------------------
2024-10-25 15:42 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 15:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98694
2024-10-25 15:42 - INFO - 	 Train Loss: 0.063
2024-10-25 15:42 - INFO - 	 Val. Loss: 0.060
2024-10-25 15:42 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:42 - INFO - 	 PR-AUC: 0.889
2024-10-25 15:42 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 15:42 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:42 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:42 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 15:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 15:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-25 15:42 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 15:42 - INFO - ---------------------------------------------
2024-10-25 15:42 - INFO - ---------------------------------------------
2024-10-25 15:42 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 15:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9882
2024-10-25 15:42 - INFO - 	 Train Loss: 0.062
2024-10-25 15:42 - INFO - 	 Val. Loss: 0.059
2024-10-25 15:42 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:42 - INFO - 	 PR-AUC: 0.889
2024-10-25 15:42 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:42 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 15:42 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:42 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 15:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-25 15:42 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:42 - INFO - ---------------------------------------------
2024-10-25 15:44 - INFO - Fit the preprocessing pipeline
2024-10-25 15:44 - INFO - Training using device: cuda
2024-10-25 15:44 - INFO - Creating generators
2024-10-25 15:44 - INFO - The model has 651,257 trainable parameters
2024-10-25 15:44 - INFO - * Model:
2024-10-25 15:44 - INFO - * -----------
2024-10-25 15:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 15:44 - INFO - * -----------
2024-10-25 15:44 - INFO - Evaluating model based on: rocauc
2024-10-25 15:44 - INFO - Training..

2024-10-25 15:44 - INFO - ---------------------------------------------
2024-10-25 15:44 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 15:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97589
2024-10-25 15:44 - INFO - 	 Train Loss: 0.169
2024-10-25 15:44 - INFO - 	 Val. Loss: 0.088
2024-10-25 15:44 - INFO - 	 ROC-AUC: 0.976
2024-10-25 15:44 - INFO - 	 PR-AUC: 0.765
2024-10-25 15:44 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 15:44 - INFO - 	 Best Val. Loss: 0.088
2024-10-25 15:44 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 15:44 - INFO - 	 Best PR-AUC: 0.765
2024-10-25 15:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 15:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.747
2024-10-25 15:44 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 15:44 - INFO - ---------------------------------------------
2024-10-25 15:45 - INFO - ---------------------------------------------
2024-10-25 15:45 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 15:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98317
2024-10-25 15:45 - INFO - 	 Train Loss: 0.088
2024-10-25 15:45 - INFO - 	 Val. Loss: 0.073
2024-10-25 15:45 - INFO - 	 ROC-AUC: 0.983
2024-10-25 15:45 - INFO - 	 PR-AUC: 0.855
2024-10-25 15:45 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 15:45 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 15:45 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 15:45 - INFO - 	 Best PR-AUC: 0.855
2024-10-25 15:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 15:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 15:45 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 15:45 - INFO - ---------------------------------------------
2024-10-25 15:45 - INFO - ---------------------------------------------
2024-10-25 15:45 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 15:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98538
2024-10-25 15:45 - INFO - 	 Train Loss: 0.078
2024-10-25 15:45 - INFO - 	 Val. Loss: 0.067
2024-10-25 15:45 - INFO - 	 ROC-AUC: 0.985
2024-10-25 15:45 - INFO - 	 PR-AUC: 0.862
2024-10-25 15:45 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:45 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 15:45 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 15:45 - INFO - 	 Best PR-AUC: 0.862
2024-10-25 15:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 15:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-25 15:45 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:45 - INFO - ---------------------------------------------
2024-10-25 15:46 - INFO - ---------------------------------------------
2024-10-25 15:46 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 15:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98572
2024-10-25 15:46 - INFO - 	 Train Loss: 0.073
2024-10-25 15:46 - INFO - 	 Val. Loss: 0.066
2024-10-25 15:46 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:46 - INFO - 	 PR-AUC: 0.868
2024-10-25 15:46 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:46 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 15:46 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:46 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 15:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 15:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 15:46 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 15:46 - INFO - ---------------------------------------------
2024-10-25 15:47 - INFO - ---------------------------------------------
2024-10-25 15:47 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 15:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98637
2024-10-25 15:47 - INFO - 	 Train Loss: 0.070
2024-10-25 15:47 - INFO - 	 Val. Loss: 0.063
2024-10-25 15:47 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:47 - INFO - 	 PR-AUC: 0.878
2024-10-25 15:47 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 15:47 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 15:47 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 15:47 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 15:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 15:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-25 15:47 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 15:47 - INFO - ---------------------------------------------
2024-10-25 15:47 - INFO - ---------------------------------------------
2024-10-25 15:47 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 15:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98732
2024-10-25 15:47 - INFO - 	 Train Loss: 0.068
2024-10-25 15:47 - INFO - 	 Val. Loss: 0.060
2024-10-25 15:47 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:47 - INFO - 	 PR-AUC: 0.882
2024-10-25 15:47 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 15:47 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:47 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 15:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 15:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 15:47 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:47 - INFO - ---------------------------------------------
2024-10-25 15:48 - INFO - ---------------------------------------------
2024-10-25 15:48 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 15:48 - INFO - 	 Train Loss: 0.065
2024-10-25 15:48 - INFO - 	 Val. Loss: 0.061
2024-10-25 15:48 - INFO - 	 ROC-AUC: 0.987
2024-10-25 15:48 - INFO - 	 PR-AUC: 0.886
2024-10-25 15:48 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 15:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:48 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:48 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 15:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 15:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 15:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:48 - INFO - ---------------------------------------------
2024-10-25 15:48 - INFO - ---------------------------------------------
2024-10-25 15:48 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 15:48 - INFO - 	 Train Loss: 0.065
2024-10-25 15:48 - INFO - 	 Val. Loss: 0.064
2024-10-25 15:48 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:48 - INFO - 	 PR-AUC: 0.871
2024-10-25 15:48 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 15:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:48 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:48 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 15:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 15:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 15:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:48 - INFO - ---------------------------------------------
2024-10-25 15:49 - INFO - ---------------------------------------------
2024-10-25 15:49 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 15:49 - INFO - 	 Train Loss: 0.063
2024-10-25 15:49 - INFO - 	 Val. Loss: 0.061
2024-10-25 15:49 - INFO - 	 ROC-AUC: 0.986
2024-10-25 15:49 - INFO - 	 PR-AUC: 0.886
2024-10-25 15:49 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 15:49 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 15:49 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 15:49 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 15:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 15:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-25 15:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 15:49 - INFO - ---------------------------------------------
2024-10-25 15:49 - INFO - ---------------------------------------------
2024-10-25 15:49 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 15:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98789
2024-10-25 15:49 - INFO - 	 Train Loss: 0.062
2024-10-25 15:49 - INFO - 	 Val. Loss: 0.059
2024-10-25 15:49 - INFO - 	 ROC-AUC: 0.988
2024-10-25 15:49 - INFO - 	 PR-AUC: 0.893
2024-10-25 15:49 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 15:49 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 15:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 15:49 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 15:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 15:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 15:49 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 15:49 - INFO - ---------------------------------------------
