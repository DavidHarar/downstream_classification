2024-11-04 00:09 - INFO - Fit the preprocessing pipeline
2024-11-04 00:09 - INFO - Training using device: mps
2024-11-04 00:09 - INFO - Creating generators
2024-11-04 00:09 - INFO - The model has 651,257 trainable parameters
2024-11-04 00:09 - INFO - * Model:
2024-11-04 00:09 - INFO - * -----------
2024-11-04 00:09 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 00:09 - INFO - * -----------
2024-11-04 00:09 - INFO - Evaluating model based on: aucpr
2024-11-04 00:09 - INFO - Training..

2024-11-04 00:11 - INFO - ---------------------------------------------
2024-11-04 00:11 - INFO - Epoch: 01 | Time: 1m 42s
2024-11-04 00:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19441
2024-11-04 00:11 - INFO - 	 Train Loss: 0.255
2024-11-04 00:11 - INFO - 	 Val. Loss: 0.287
2024-11-04 00:11 - INFO - 	 ROC-AUC: 0.737
2024-11-04 00:11 - INFO - 	 PR-AUC: 0.194
2024-11-04 00:11 - INFO - 	 Recall for 0.4 precision: 0.096
2024-11-04 00:11 - INFO - 	 Best Val. Loss: 0.287
2024-11-04 00:11 - INFO - 	 Best ROC-AUC: 0.737
2024-11-04 00:11 - INFO - 	 Best PR-AUC: 0.194
2024-11-04 00:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.726
2024-11-04 00:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.124
2024-11-04 00:11 - INFO - 	 Best Recall for 0.4 precision: 0.096
2024-11-04 00:11 - INFO - ---------------------------------------------
2024-11-04 00:12 - INFO - ---------------------------------------------
2024-11-04 00:12 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 00:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25494
2024-11-04 00:12 - INFO - 	 Train Loss: 0.206
2024-11-04 00:12 - INFO - 	 Val. Loss: 0.239
2024-11-04 00:12 - INFO - 	 ROC-AUC: 0.769
2024-11-04 00:12 - INFO - 	 PR-AUC: 0.255
2024-11-04 00:12 - INFO - 	 Recall for 0.4 precision: 0.180
2024-11-04 00:12 - INFO - 	 Best Val. Loss: 0.239
2024-11-04 00:12 - INFO - 	 Best ROC-AUC: 0.769
2024-11-04 00:12 - INFO - 	 Best PR-AUC: 0.255
2024-11-04 00:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-04 00:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.124
2024-11-04 00:12 - INFO - 	 Best Recall for 0.4 precision: 0.180
2024-11-04 00:12 - INFO - ---------------------------------------------
2024-11-04 00:14 - INFO - ---------------------------------------------
2024-11-04 00:14 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-04 00:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26323
2024-11-04 00:14 - INFO - 	 Train Loss: 0.183
2024-11-04 00:14 - INFO - 	 Val. Loss: 0.211
2024-11-04 00:14 - INFO - 	 ROC-AUC: 0.788
2024-11-04 00:14 - INFO - 	 PR-AUC: 0.263
2024-11-04 00:14 - INFO - 	 Recall for 0.4 precision: 0.234
2024-11-04 00:14 - INFO - 	 Best Val. Loss: 0.211
2024-11-04 00:14 - INFO - 	 Best ROC-AUC: 0.788
2024-11-04 00:14 - INFO - 	 Best PR-AUC: 0.263
2024-11-04 00:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.741
2024-11-04 00:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 00:14 - INFO - 	 Best Recall for 0.4 precision: 0.234
2024-11-04 00:14 - INFO - ---------------------------------------------
2024-11-04 00:16 - INFO - ---------------------------------------------
2024-11-04 00:16 - INFO - Epoch: 04 | Time: 1m 48s
2024-11-04 00:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30598
2024-11-04 00:16 - INFO - 	 Train Loss: 0.170
2024-11-04 00:16 - INFO - 	 Val. Loss: 0.202
2024-11-04 00:16 - INFO - 	 ROC-AUC: 0.805
2024-11-04 00:16 - INFO - 	 PR-AUC: 0.306
2024-11-04 00:16 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-04 00:16 - INFO - 	 Best Val. Loss: 0.202
2024-11-04 00:16 - INFO - 	 Best ROC-AUC: 0.805
2024-11-04 00:16 - INFO - 	 Best PR-AUC: 0.306
2024-11-04 00:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-04 00:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-04 00:16 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-04 00:16 - INFO - ---------------------------------------------
2024-11-04 00:18 - INFO - ---------------------------------------------
2024-11-04 00:18 - INFO - Epoch: 05 | Time: 1m 47s
2024-11-04 00:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3798
2024-11-04 00:18 - INFO - 	 Train Loss: 0.160
2024-11-04 00:18 - INFO - 	 Val. Loss: 0.163
2024-11-04 00:18 - INFO - 	 ROC-AUC: 0.874
2024-11-04 00:18 - INFO - 	 PR-AUC: 0.380
2024-11-04 00:18 - INFO - 	 Recall for 0.4 precision: 0.400
2024-11-04 00:18 - INFO - 	 Best Val. Loss: 0.163
2024-11-04 00:18 - INFO - 	 Best ROC-AUC: 0.874
2024-11-04 00:18 - INFO - 	 Best PR-AUC: 0.380
2024-11-04 00:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.832
2024-11-04 00:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.204
2024-11-04 00:18 - INFO - 	 Best Recall for 0.4 precision: 0.400
2024-11-04 00:18 - INFO - ---------------------------------------------
2024-11-04 00:20 - INFO - ---------------------------------------------
2024-11-04 00:20 - INFO - Epoch: 06 | Time: 1m 48s
2024-11-04 00:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43541
2024-11-04 00:20 - INFO - 	 Train Loss: 0.138
2024-11-04 00:20 - INFO - 	 Val. Loss: 0.136
2024-11-04 00:20 - INFO - 	 ROC-AUC: 0.949
2024-11-04 00:20 - INFO - 	 PR-AUC: 0.435
2024-11-04 00:20 - INFO - 	 Recall for 0.4 precision: 0.660
2024-11-04 00:20 - INFO - 	 Best Val. Loss: 0.136
2024-11-04 00:20 - INFO - 	 Best ROC-AUC: 0.949
2024-11-04 00:20 - INFO - 	 Best PR-AUC: 0.435
2024-11-04 00:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.918
2024-11-04 00:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.294
2024-11-04 00:20 - INFO - 	 Best Recall for 0.4 precision: 0.660
2024-11-04 00:20 - INFO - ---------------------------------------------
2024-11-04 00:21 - INFO - ---------------------------------------------
2024-11-04 00:21 - INFO - Epoch: 07 | Time: 1m 49s
2024-11-04 00:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57376
2024-11-04 00:21 - INFO - 	 Train Loss: 0.119
2024-11-04 00:21 - INFO - 	 Val. Loss: 0.113
2024-11-04 00:21 - INFO - 	 ROC-AUC: 0.960
2024-11-04 00:21 - INFO - 	 PR-AUC: 0.574
2024-11-04 00:21 - INFO - 	 Recall for 0.4 precision: 0.816
2024-11-04 00:21 - INFO - 	 Best Val. Loss: 0.113
2024-11-04 00:21 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 00:21 - INFO - 	 Best PR-AUC: 0.574
2024-11-04 00:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-04 00:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.314
2024-11-04 00:21 - INFO - 	 Best Recall for 0.4 precision: 0.816
2024-11-04 00:21 - INFO - ---------------------------------------------
2024-11-04 00:23 - INFO - ---------------------------------------------
2024-11-04 00:23 - INFO - Epoch: 08 | Time: 1m 49s
2024-11-04 00:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61793
2024-11-04 00:23 - INFO - 	 Train Loss: 0.112
2024-11-04 00:23 - INFO - 	 Val. Loss: 0.096
2024-11-04 00:23 - INFO - 	 ROC-AUC: 0.968
2024-11-04 00:23 - INFO - 	 PR-AUC: 0.618
2024-11-04 00:23 - INFO - 	 Recall for 0.4 precision: 0.920
2024-11-04 00:23 - INFO - 	 Best Val. Loss: 0.096
2024-11-04 00:23 - INFO - 	 Best ROC-AUC: 0.968
2024-11-04 00:23 - INFO - 	 Best PR-AUC: 0.618
2024-11-04 00:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-04 00:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.412
2024-11-04 00:23 - INFO - 	 Best Recall for 0.4 precision: 0.920
2024-11-04 00:23 - INFO - ---------------------------------------------
2024-11-04 00:25 - INFO - ---------------------------------------------
2024-11-04 00:25 - INFO - Epoch: 09 | Time: 1m 49s
2024-11-04 00:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62336
2024-11-04 00:25 - INFO - 	 Train Loss: 0.105
2024-11-04 00:25 - INFO - 	 Val. Loss: 0.099
2024-11-04 00:25 - INFO - 	 ROC-AUC: 0.963
2024-11-04 00:25 - INFO - 	 PR-AUC: 0.623
2024-11-04 00:25 - INFO - 	 Recall for 0.4 precision: 0.909
2024-11-04 00:25 - INFO - 	 Best Val. Loss: 0.096
2024-11-04 00:25 - INFO - 	 Best ROC-AUC: 0.968
2024-11-04 00:25 - INFO - 	 Best PR-AUC: 0.623
2024-11-04 00:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-04 00:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.419
2024-11-04 00:25 - INFO - 	 Best Recall for 0.4 precision: 0.920
2024-11-04 00:25 - INFO - ---------------------------------------------
2024-11-04 00:27 - INFO - ---------------------------------------------
2024-11-04 00:27 - INFO - Epoch: 10 | Time: 1m 49s
2024-11-04 00:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63499
2024-11-04 00:27 - INFO - 	 Train Loss: 0.102
2024-11-04 00:27 - INFO - 	 Val. Loss: 0.100
2024-11-04 00:27 - INFO - 	 ROC-AUC: 0.970
2024-11-04 00:27 - INFO - 	 PR-AUC: 0.635
2024-11-04 00:27 - INFO - 	 Recall for 0.4 precision: 0.937
2024-11-04 00:27 - INFO - 	 Best Val. Loss: 0.096
2024-11-04 00:27 - INFO - 	 Best ROC-AUC: 0.970
2024-11-04 00:27 - INFO - 	 Best PR-AUC: 0.635
2024-11-04 00:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-04 00:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.413
2024-11-04 00:27 - INFO - 	 Best Recall for 0.4 precision: 0.937
2024-11-04 00:27 - INFO - ---------------------------------------------
2024-11-04 00:29 - INFO - Fit the preprocessing pipeline
2024-11-04 00:29 - INFO - Training using device: mps
2024-11-04 00:29 - INFO - Creating generators
2024-11-04 00:29 - INFO - The model has 651,257 trainable parameters
2024-11-04 00:29 - INFO - * Model:
2024-11-04 00:29 - INFO - * -----------
2024-11-04 00:29 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 00:29 - INFO - * -----------
2024-11-04 00:29 - INFO - Evaluating model based on: aucpr
2024-11-04 00:29 - INFO - Training..

2024-11-04 00:31 - INFO - ---------------------------------------------
2024-11-04 00:31 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 00:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08396
2024-11-04 00:31 - INFO - 	 Train Loss: 0.251
2024-11-04 00:31 - INFO - 	 Val. Loss: 0.300
2024-11-04 00:31 - INFO - 	 ROC-AUC: 0.657
2024-11-04 00:31 - INFO - 	 PR-AUC: 0.084
2024-11-04 00:31 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 00:31 - INFO - 	 Best Val. Loss: 0.300
2024-11-04 00:31 - INFO - 	 Best ROC-AUC: 0.657
2024-11-04 00:31 - INFO - 	 Best PR-AUC: 0.084
2024-11-04 00:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.679
2024-11-04 00:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.089
2024-11-04 00:31 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-04 00:31 - INFO - ---------------------------------------------
2024-11-04 00:33 - INFO - ---------------------------------------------
2024-11-04 00:33 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 00:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1946
2024-11-04 00:33 - INFO - 	 Train Loss: 0.205
2024-11-04 00:33 - INFO - 	 Val. Loss: 0.241
2024-11-04 00:33 - INFO - 	 ROC-AUC: 0.768
2024-11-04 00:33 - INFO - 	 PR-AUC: 0.195
2024-11-04 00:33 - INFO - 	 Recall for 0.4 precision: 0.137
2024-11-04 00:33 - INFO - 	 Best Val. Loss: 0.241
2024-11-04 00:33 - INFO - 	 Best ROC-AUC: 0.768
2024-11-04 00:33 - INFO - 	 Best PR-AUC: 0.195
2024-11-04 00:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-04 00:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-04 00:33 - INFO - 	 Best Recall for 0.4 precision: 0.137
2024-11-04 00:33 - INFO - ---------------------------------------------
2024-11-04 00:35 - INFO - ---------------------------------------------
2024-11-04 00:35 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-04 00:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25702
2024-11-04 00:35 - INFO - 	 Train Loss: 0.185
2024-11-04 00:35 - INFO - 	 Val. Loss: 0.196
2024-11-04 00:35 - INFO - 	 ROC-AUC: 0.821
2024-11-04 00:35 - INFO - 	 PR-AUC: 0.257
2024-11-04 00:35 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-04 00:35 - INFO - 	 Best Val. Loss: 0.196
2024-11-04 00:35 - INFO - 	 Best ROC-AUC: 0.821
2024-11-04 00:35 - INFO - 	 Best PR-AUC: 0.257
2024-11-04 00:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-04 00:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 00:35 - INFO - 	 Best Recall for 0.4 precision: 0.163
2024-11-04 00:35 - INFO - ---------------------------------------------
2024-11-04 00:36 - INFO - ---------------------------------------------
2024-11-04 00:36 - INFO - Epoch: 04 | Time: 1m 43s
2024-11-04 00:36 - INFO - 	 Train Loss: 0.169
2024-11-04 00:36 - INFO - 	 Val. Loss: 0.197
2024-11-04 00:36 - INFO - 	 ROC-AUC: 0.809
2024-11-04 00:36 - INFO - 	 PR-AUC: 0.256
2024-11-04 00:36 - INFO - 	 Recall for 0.4 precision: 0.228
2024-11-04 00:36 - INFO - 	 Best Val. Loss: 0.196
2024-11-04 00:36 - INFO - 	 Best ROC-AUC: 0.821
2024-11-04 00:36 - INFO - 	 Best PR-AUC: 0.257
2024-11-04 00:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.765
2024-11-04 00:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 00:36 - INFO - 	 Best Recall for 0.4 precision: 0.228
2024-11-04 00:36 - INFO - ---------------------------------------------
2024-11-04 00:38 - INFO - ---------------------------------------------
2024-11-04 00:38 - INFO - Epoch: 05 | Time: 1m 46s
2024-11-04 00:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29271
2024-11-04 00:38 - INFO - 	 Train Loss: 0.160
2024-11-04 00:38 - INFO - 	 Val. Loss: 0.189
2024-11-04 00:38 - INFO - 	 ROC-AUC: 0.827
2024-11-04 00:38 - INFO - 	 PR-AUC: 0.293
2024-11-04 00:38 - INFO - 	 Recall for 0.4 precision: 0.210
2024-11-04 00:38 - INFO - 	 Best Val. Loss: 0.189
2024-11-04 00:38 - INFO - 	 Best ROC-AUC: 0.827
2024-11-04 00:38 - INFO - 	 Best PR-AUC: 0.293
2024-11-04 00:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.771
2024-11-04 00:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-04 00:38 - INFO - 	 Best Recall for 0.4 precision: 0.228
2024-11-04 00:38 - INFO - ---------------------------------------------
2024-11-04 00:40 - INFO - ---------------------------------------------
2024-11-04 00:40 - INFO - Epoch: 06 | Time: 1m 46s
2024-11-04 00:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33068
2024-11-04 00:40 - INFO - 	 Train Loss: 0.158
2024-11-04 00:40 - INFO - 	 Val. Loss: 0.172
2024-11-04 00:40 - INFO - 	 ROC-AUC: 0.832
2024-11-04 00:40 - INFO - 	 PR-AUC: 0.331
2024-11-04 00:40 - INFO - 	 Recall for 0.4 precision: 0.348
2024-11-04 00:40 - INFO - 	 Best Val. Loss: 0.172
2024-11-04 00:40 - INFO - 	 Best ROC-AUC: 0.832
2024-11-04 00:40 - INFO - 	 Best PR-AUC: 0.331
2024-11-04 00:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-04 00:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.176
2024-11-04 00:40 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-04 00:40 - INFO - ---------------------------------------------
2024-11-04 00:42 - INFO - ---------------------------------------------
2024-11-04 00:42 - INFO - Epoch: 07 | Time: 1m 47s
2024-11-04 00:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41312
2024-11-04 00:42 - INFO - 	 Train Loss: 0.150
2024-11-04 00:42 - INFO - 	 Val. Loss: 0.143
2024-11-04 00:42 - INFO - 	 ROC-AUC: 0.926
2024-11-04 00:42 - INFO - 	 PR-AUC: 0.413
2024-11-04 00:42 - INFO - 	 Recall for 0.4 precision: 0.504
2024-11-04 00:42 - INFO - 	 Best Val. Loss: 0.143
2024-11-04 00:42 - INFO - 	 Best ROC-AUC: 0.926
2024-11-04 00:42 - INFO - 	 Best PR-AUC: 0.413
2024-11-04 00:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.875
2024-11-04 00:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.224
2024-11-04 00:42 - INFO - 	 Best Recall for 0.4 precision: 0.504
2024-11-04 00:42 - INFO - ---------------------------------------------
2024-11-04 00:43 - INFO - ---------------------------------------------
2024-11-04 00:43 - INFO - Epoch: 08 | Time: 1m 47s
2024-11-04 00:43 - INFO - 	 Train Loss: 0.130
2024-11-04 00:43 - INFO - 	 Val. Loss: 0.148
2024-11-04 00:43 - INFO - 	 ROC-AUC: 0.941
2024-11-04 00:43 - INFO - 	 PR-AUC: 0.337
2024-11-04 00:43 - INFO - 	 Recall for 0.4 precision: 0.039
2024-11-04 00:43 - INFO - 	 Best Val. Loss: 0.143
2024-11-04 00:43 - INFO - 	 Best ROC-AUC: 0.941
2024-11-04 00:43 - INFO - 	 Best PR-AUC: 0.413
2024-11-04 00:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.896
2024-11-04 00:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.224
2024-11-04 00:43 - INFO - 	 Best Recall for 0.4 precision: 0.504
2024-11-04 00:43 - INFO - ---------------------------------------------
2024-11-04 00:45 - INFO - ---------------------------------------------
2024-11-04 00:45 - INFO - Epoch: 09 | Time: 1m 47s
2024-11-04 00:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54859
2024-11-04 00:45 - INFO - 	 Train Loss: 0.122
2024-11-04 00:45 - INFO - 	 Val. Loss: 0.109
2024-11-04 00:45 - INFO - 	 ROC-AUC: 0.968
2024-11-04 00:45 - INFO - 	 PR-AUC: 0.549
2024-11-04 00:45 - INFO - 	 Recall for 0.4 precision: 0.855
2024-11-04 00:45 - INFO - 	 Best Val. Loss: 0.109
2024-11-04 00:45 - INFO - 	 Best ROC-AUC: 0.968
2024-11-04 00:45 - INFO - 	 Best PR-AUC: 0.549
2024-11-04 00:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-04 00:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.352
2024-11-04 00:45 - INFO - 	 Best Recall for 0.4 precision: 0.855
2024-11-04 00:45 - INFO - ---------------------------------------------
2024-11-04 00:47 - INFO - ---------------------------------------------
2024-11-04 00:47 - INFO - Epoch: 10 | Time: 1m 48s
2024-11-04 00:47 - INFO - 	 Train Loss: 0.110
2024-11-04 00:47 - INFO - 	 Val. Loss: 0.103
2024-11-04 00:47 - INFO - 	 ROC-AUC: 0.965
2024-11-04 00:47 - INFO - 	 PR-AUC: 0.544
2024-11-04 00:47 - INFO - 	 Recall for 0.4 precision: 0.875
2024-11-04 00:47 - INFO - 	 Best Val. Loss: 0.103
2024-11-04 00:47 - INFO - 	 Best ROC-AUC: 0.968
2024-11-04 00:47 - INFO - 	 Best PR-AUC: 0.549
2024-11-04 00:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-04 00:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.352
2024-11-04 00:47 - INFO - 	 Best Recall for 0.4 precision: 0.875
2024-11-04 00:47 - INFO - ---------------------------------------------
2024-11-04 00:50 - INFO - Fit the preprocessing pipeline
2024-11-04 00:50 - INFO - Training using device: mps
2024-11-04 00:50 - INFO - Creating generators
2024-11-04 00:50 - INFO - The model has 651,257 trainable parameters
2024-11-04 00:50 - INFO - * Model:
2024-11-04 00:50 - INFO - * -----------
2024-11-04 00:50 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 00:50 - INFO - * -----------
2024-11-04 00:50 - INFO - Evaluating model based on: aucpr
2024-11-04 00:50 - INFO - Training..

2024-11-04 00:51 - INFO - ---------------------------------------------
2024-11-04 00:51 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-04 00:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23533
2024-11-04 00:51 - INFO - 	 Train Loss: 0.252
2024-11-04 00:51 - INFO - 	 Val. Loss: 0.301
2024-11-04 00:51 - INFO - 	 ROC-AUC: 0.750
2024-11-04 00:51 - INFO - 	 PR-AUC: 0.235
2024-11-04 00:51 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-04 00:51 - INFO - 	 Best Val. Loss: 0.301
2024-11-04 00:51 - INFO - 	 Best ROC-AUC: 0.750
2024-11-04 00:51 - INFO - 	 Best PR-AUC: 0.235
2024-11-04 00:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.714
2024-11-04 00:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-04 00:51 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-04 00:51 - INFO - ---------------------------------------------
2024-11-04 00:53 - INFO - ---------------------------------------------
2024-11-04 00:53 - INFO - Epoch: 02 | Time: 1m 42s
2024-11-04 00:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23697
2024-11-04 00:53 - INFO - 	 Train Loss: 0.207
2024-11-04 00:53 - INFO - 	 Val. Loss: 0.243
2024-11-04 00:53 - INFO - 	 ROC-AUC: 0.764
2024-11-04 00:53 - INFO - 	 PR-AUC: 0.237
2024-11-04 00:53 - INFO - 	 Recall for 0.4 precision: 0.215
2024-11-04 00:53 - INFO - 	 Best Val. Loss: 0.243
2024-11-04 00:53 - INFO - 	 Best ROC-AUC: 0.764
2024-11-04 00:53 - INFO - 	 Best PR-AUC: 0.237
2024-11-04 00:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 00:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 00:53 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-04 00:53 - INFO - ---------------------------------------------
2024-11-04 00:55 - INFO - ---------------------------------------------
2024-11-04 00:55 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-04 00:55 - INFO - 	 Train Loss: 0.185
2024-11-04 00:55 - INFO - 	 Val. Loss: 0.220
2024-11-04 00:55 - INFO - 	 ROC-AUC: 0.768
2024-11-04 00:55 - INFO - 	 PR-AUC: 0.237
2024-11-04 00:55 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-04 00:55 - INFO - 	 Best Val. Loss: 0.220
2024-11-04 00:55 - INFO - 	 Best ROC-AUC: 0.768
2024-11-04 00:55 - INFO - 	 Best PR-AUC: 0.237
2024-11-04 00:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 00:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 00:55 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-04 00:55 - INFO - ---------------------------------------------
2024-11-04 00:56 - INFO - ---------------------------------------------
2024-11-04 00:56 - INFO - Epoch: 04 | Time: 1m 42s
2024-11-04 00:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29147
2024-11-04 00:56 - INFO - 	 Train Loss: 0.173
2024-11-04 00:56 - INFO - 	 Val. Loss: 0.198
2024-11-04 00:56 - INFO - 	 ROC-AUC: 0.784
2024-11-04 00:56 - INFO - 	 PR-AUC: 0.291
2024-11-04 00:56 - INFO - 	 Recall for 0.4 precision: 0.348
2024-11-04 00:56 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 00:56 - INFO - 	 Best ROC-AUC: 0.784
2024-11-04 00:56 - INFO - 	 Best PR-AUC: 0.291
2024-11-04 00:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 00:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 00:56 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-04 00:56 - INFO - ---------------------------------------------
2024-11-04 00:58 - INFO - ---------------------------------------------
2024-11-04 00:58 - INFO - Epoch: 05 | Time: 1m 44s
2024-11-04 00:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29511
2024-11-04 00:58 - INFO - 	 Train Loss: 0.163
2024-11-04 00:58 - INFO - 	 Val. Loss: 0.187
2024-11-04 00:58 - INFO - 	 ROC-AUC: 0.790
2024-11-04 00:58 - INFO - 	 PR-AUC: 0.295
2024-11-04 00:58 - INFO - 	 Recall for 0.4 precision: 0.338
2024-11-04 00:58 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 00:58 - INFO - 	 Best ROC-AUC: 0.790
2024-11-04 00:58 - INFO - 	 Best PR-AUC: 0.295
2024-11-04 00:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-04 00:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-04 00:58 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-04 00:58 - INFO - ---------------------------------------------
2024-11-04 01:00 - INFO - ---------------------------------------------
2024-11-04 01:00 - INFO - Epoch: 06 | Time: 1m 44s
2024-11-04 01:00 - INFO - 	 Train Loss: 0.158
2024-11-04 01:00 - INFO - 	 Val. Loss: 0.183
2024-11-04 01:00 - INFO - 	 ROC-AUC: 0.797
2024-11-04 01:00 - INFO - 	 PR-AUC: 0.292
2024-11-04 01:00 - INFO - 	 Recall for 0.4 precision: 0.328
2024-11-04 01:00 - INFO - 	 Best Val. Loss: 0.183
2024-11-04 01:00 - INFO - 	 Best ROC-AUC: 0.797
2024-11-04 01:00 - INFO - 	 Best PR-AUC: 0.295
2024-11-04 01:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-04 01:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-04 01:00 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-04 01:00 - INFO - ---------------------------------------------
2024-11-04 01:02 - INFO - ---------------------------------------------
2024-11-04 01:02 - INFO - Epoch: 07 | Time: 1m 44s
2024-11-04 01:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3341
2024-11-04 01:02 - INFO - 	 Train Loss: 0.154
2024-11-04 01:02 - INFO - 	 Val. Loss: 0.171
2024-11-04 01:02 - INFO - 	 ROC-AUC: 0.823
2024-11-04 01:02 - INFO - 	 PR-AUC: 0.334
2024-11-04 01:02 - INFO - 	 Recall for 0.4 precision: 0.361
2024-11-04 01:02 - INFO - 	 Best Val. Loss: 0.171
2024-11-04 01:02 - INFO - 	 Best ROC-AUC: 0.823
2024-11-04 01:02 - INFO - 	 Best PR-AUC: 0.334
2024-11-04 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-04 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 01:02 - INFO - 	 Best Recall for 0.4 precision: 0.361
2024-11-04 01:02 - INFO - ---------------------------------------------
2024-11-04 01:03 - INFO - ---------------------------------------------
2024-11-04 01:03 - INFO - Epoch: 08 | Time: 1m 45s
2024-11-04 01:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39122
2024-11-04 01:03 - INFO - 	 Train Loss: 0.148
2024-11-04 01:03 - INFO - 	 Val. Loss: 0.149
2024-11-04 01:03 - INFO - 	 ROC-AUC: 0.878
2024-11-04 01:03 - INFO - 	 PR-AUC: 0.391
2024-11-04 01:03 - INFO - 	 Recall for 0.4 precision: 0.455
2024-11-04 01:03 - INFO - 	 Best Val. Loss: 0.149
2024-11-04 01:03 - INFO - 	 Best ROC-AUC: 0.878
2024-11-04 01:03 - INFO - 	 Best PR-AUC: 0.391
2024-11-04 01:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.835
2024-11-04 01:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.206
2024-11-04 01:03 - INFO - 	 Best Recall for 0.4 precision: 0.455
2024-11-04 01:03 - INFO - ---------------------------------------------
2024-11-04 01:05 - INFO - ---------------------------------------------
2024-11-04 01:05 - INFO - Epoch: 09 | Time: 1m 46s
2024-11-04 01:05 - INFO - 	 Train Loss: 0.131
2024-11-04 01:05 - INFO - 	 Val. Loss: 0.170
2024-11-04 01:05 - INFO - 	 ROC-AUC: 0.902
2024-11-04 01:05 - INFO - 	 PR-AUC: 0.244
2024-11-04 01:05 - INFO - 	 Recall for 0.4 precision: 0.005
2024-11-04 01:05 - INFO - 	 Best Val. Loss: 0.149
2024-11-04 01:05 - INFO - 	 Best ROC-AUC: 0.902
2024-11-04 01:05 - INFO - 	 Best PR-AUC: 0.391
2024-11-04 01:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.860
2024-11-04 01:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.206
2024-11-04 01:05 - INFO - 	 Best Recall for 0.4 precision: 0.455
2024-11-04 01:05 - INFO - ---------------------------------------------
2024-11-04 01:07 - INFO - ---------------------------------------------
2024-11-04 01:07 - INFO - Epoch: 10 | Time: 1m 48s
2024-11-04 01:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42936
2024-11-04 01:07 - INFO - 	 Train Loss: 0.119
2024-11-04 01:07 - INFO - 	 Val. Loss: 0.111
2024-11-04 01:07 - INFO - 	 ROC-AUC: 0.957
2024-11-04 01:07 - INFO - 	 PR-AUC: 0.429
2024-11-04 01:07 - INFO - 	 Recall for 0.4 precision: 0.715
2024-11-04 01:07 - INFO - 	 Best Val. Loss: 0.111
2024-11-04 01:07 - INFO - 	 Best ROC-AUC: 0.957
2024-11-04 01:07 - INFO - 	 Best PR-AUC: 0.429
2024-11-04 01:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-04 01:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.341
2024-11-04 01:07 - INFO - 	 Best Recall for 0.4 precision: 0.715
2024-11-04 01:07 - INFO - ---------------------------------------------
2024-11-04 01:10 - INFO - Fit the preprocessing pipeline
2024-11-04 01:10 - INFO - Training using device: mps
2024-11-04 01:10 - INFO - Creating generators
2024-11-04 01:10 - INFO - The model has 651,257 trainable parameters
2024-11-04 01:10 - INFO - * Model:
2024-11-04 01:10 - INFO - * -----------
2024-11-04 01:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 01:10 - INFO - * -----------
2024-11-04 01:10 - INFO - Evaluating model based on: aucpr
2024-11-04 01:10 - INFO - Training..

2024-11-04 01:11 - INFO - ---------------------------------------------
2024-11-04 01:11 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 01:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10739
2024-11-04 01:11 - INFO - 	 Train Loss: 0.250
2024-11-04 01:11 - INFO - 	 Val. Loss: 0.284
2024-11-04 01:11 - INFO - 	 ROC-AUC: 0.689
2024-11-04 01:11 - INFO - 	 PR-AUC: 0.107
2024-11-04 01:11 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 01:11 - INFO - 	 Best Val. Loss: 0.284
2024-11-04 01:11 - INFO - 	 Best ROC-AUC: 0.689
2024-11-04 01:11 - INFO - 	 Best PR-AUC: 0.107
2024-11-04 01:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.659
2024-11-04 01:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.097
2024-11-04 01:11 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-04 01:11 - INFO - ---------------------------------------------
2024-11-04 01:13 - INFO - ---------------------------------------------
2024-11-04 01:13 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 01:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20169
2024-11-04 01:13 - INFO - 	 Train Loss: 0.203
2024-11-04 01:13 - INFO - 	 Val. Loss: 0.239
2024-11-04 01:13 - INFO - 	 ROC-AUC: 0.791
2024-11-04 01:13 - INFO - 	 PR-AUC: 0.202
2024-11-04 01:13 - INFO - 	 Recall for 0.4 precision: 0.117
2024-11-04 01:13 - INFO - 	 Best Val. Loss: 0.239
2024-11-04 01:13 - INFO - 	 Best ROC-AUC: 0.791
2024-11-04 01:13 - INFO - 	 Best PR-AUC: 0.202
2024-11-04 01:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.728
2024-11-04 01:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-04 01:13 - INFO - 	 Best Recall for 0.4 precision: 0.117
2024-11-04 01:13 - INFO - ---------------------------------------------
2024-11-04 01:15 - INFO - ---------------------------------------------
2024-11-04 01:15 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-04 01:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24695
2024-11-04 01:15 - INFO - 	 Train Loss: 0.181
2024-11-04 01:15 - INFO - 	 Val. Loss: 0.198
2024-11-04 01:15 - INFO - 	 ROC-AUC: 0.798
2024-11-04 01:15 - INFO - 	 PR-AUC: 0.247
2024-11-04 01:15 - INFO - 	 Recall for 0.4 precision: 0.029
2024-11-04 01:15 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 01:15 - INFO - 	 Best ROC-AUC: 0.798
2024-11-04 01:15 - INFO - 	 Best PR-AUC: 0.247
2024-11-04 01:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-04 01:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-04 01:15 - INFO - 	 Best Recall for 0.4 precision: 0.117
2024-11-04 01:15 - INFO - ---------------------------------------------
2024-11-04 01:17 - INFO - ---------------------------------------------
2024-11-04 01:17 - INFO - Epoch: 04 | Time: 1m 48s
2024-11-04 01:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26276
2024-11-04 01:17 - INFO - 	 Train Loss: 0.169
2024-11-04 01:17 - INFO - 	 Val. Loss: 0.189
2024-11-04 01:17 - INFO - 	 ROC-AUC: 0.816
2024-11-04 01:17 - INFO - 	 PR-AUC: 0.263
2024-11-04 01:17 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-04 01:17 - INFO - 	 Best Val. Loss: 0.189
2024-11-04 01:17 - INFO - 	 Best ROC-AUC: 0.816
2024-11-04 01:17 - INFO - 	 Best PR-AUC: 0.263
2024-11-04 01:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.766
2024-11-04 01:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-04 01:17 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-04 01:17 - INFO - ---------------------------------------------
2024-11-04 01:18 - INFO - ---------------------------------------------
2024-11-04 01:18 - INFO - Epoch: 05 | Time: 1m 47s
2024-11-04 01:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41223
2024-11-04 01:18 - INFO - 	 Train Loss: 0.156
2024-11-04 01:18 - INFO - 	 Val. Loss: 0.142
2024-11-04 01:18 - INFO - 	 ROC-AUC: 0.929
2024-11-04 01:18 - INFO - 	 PR-AUC: 0.412
2024-11-04 01:18 - INFO - 	 Recall for 0.4 precision: 0.507
2024-11-04 01:18 - INFO - 	 Best Val. Loss: 0.142
2024-11-04 01:18 - INFO - 	 Best ROC-AUC: 0.929
2024-11-04 01:18 - INFO - 	 Best PR-AUC: 0.412
2024-11-04 01:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.893
2024-11-04 01:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.246
2024-11-04 01:18 - INFO - 	 Best Recall for 0.4 precision: 0.507
2024-11-04 01:18 - INFO - ---------------------------------------------
2024-11-04 01:20 - INFO - ---------------------------------------------
2024-11-04 01:20 - INFO - Epoch: 06 | Time: 1m 47s
2024-11-04 01:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51603
2024-11-04 01:20 - INFO - 	 Train Loss: 0.133
2024-11-04 01:20 - INFO - 	 Val. Loss: 0.126
2024-11-04 01:20 - INFO - 	 ROC-AUC: 0.929
2024-11-04 01:20 - INFO - 	 PR-AUC: 0.516
2024-11-04 01:20 - INFO - 	 Recall for 0.4 precision: 0.787
2024-11-04 01:20 - INFO - 	 Best Val. Loss: 0.126
2024-11-04 01:20 - INFO - 	 Best ROC-AUC: 0.929
2024-11-04 01:20 - INFO - 	 Best PR-AUC: 0.516
2024-11-04 01:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.893
2024-11-04 01:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.281
2024-11-04 01:20 - INFO - 	 Best Recall for 0.4 precision: 0.787
2024-11-04 01:20 - INFO - ---------------------------------------------
2024-11-04 01:22 - INFO - ---------------------------------------------
2024-11-04 01:22 - INFO - Epoch: 07 | Time: 1m 47s
2024-11-04 01:22 - INFO - 	 Train Loss: 0.125
2024-11-04 01:22 - INFO - 	 Val. Loss: 0.170
2024-11-04 01:22 - INFO - 	 ROC-AUC: 0.924
2024-11-04 01:22 - INFO - 	 PR-AUC: 0.502
2024-11-04 01:22 - INFO - 	 Recall for 0.4 precision: 0.790
2024-11-04 01:22 - INFO - 	 Best Val. Loss: 0.126
2024-11-04 01:22 - INFO - 	 Best ROC-AUC: 0.929
2024-11-04 01:22 - INFO - 	 Best PR-AUC: 0.516
2024-11-04 01:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.893
2024-11-04 01:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.281
2024-11-04 01:22 - INFO - 	 Best Recall for 0.4 precision: 0.790
2024-11-04 01:22 - INFO - ---------------------------------------------
2024-11-04 01:24 - INFO - ---------------------------------------------
2024-11-04 01:24 - INFO - Epoch: 08 | Time: 1m 48s
2024-11-04 01:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56095
2024-11-04 01:24 - INFO - 	 Train Loss: 0.113
2024-11-04 01:24 - INFO - 	 Val. Loss: 0.114
2024-11-04 01:24 - INFO - 	 ROC-AUC: 0.951
2024-11-04 01:24 - INFO - 	 PR-AUC: 0.561
2024-11-04 01:24 - INFO - 	 Recall for 0.4 precision: 0.846
2024-11-04 01:24 - INFO - 	 Best Val. Loss: 0.114
2024-11-04 01:24 - INFO - 	 Best ROC-AUC: 0.951
2024-11-04 01:24 - INFO - 	 Best PR-AUC: 0.561
2024-11-04 01:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-04 01:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.343
2024-11-04 01:24 - INFO - 	 Best Recall for 0.4 precision: 0.846
2024-11-04 01:24 - INFO - ---------------------------------------------
2024-11-04 01:26 - INFO - ---------------------------------------------
2024-11-04 01:26 - INFO - Epoch: 09 | Time: 1m 48s
2024-11-04 01:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61257
2024-11-04 01:26 - INFO - 	 Train Loss: 0.105
2024-11-04 01:26 - INFO - 	 Val. Loss: 0.101
2024-11-04 01:26 - INFO - 	 ROC-AUC: 0.961
2024-11-04 01:26 - INFO - 	 PR-AUC: 0.613
2024-11-04 01:26 - INFO - 	 Recall for 0.4 precision: 0.920
2024-11-04 01:26 - INFO - 	 Best Val. Loss: 0.101
2024-11-04 01:26 - INFO - 	 Best ROC-AUC: 0.961
2024-11-04 01:26 - INFO - 	 Best PR-AUC: 0.613
2024-11-04 01:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-04 01:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.379
2024-11-04 01:26 - INFO - 	 Best Recall for 0.4 precision: 0.920
2024-11-04 01:26 - INFO - ---------------------------------------------
2024-11-04 01:27 - INFO - ---------------------------------------------
2024-11-04 01:27 - INFO - Epoch: 10 | Time: 1m 48s
2024-11-04 01:27 - INFO - 	 Train Loss: 0.102
2024-11-04 01:27 - INFO - 	 Val. Loss: 0.104
2024-11-04 01:27 - INFO - 	 ROC-AUC: 0.946
2024-11-04 01:27 - INFO - 	 PR-AUC: 0.588
2024-11-04 01:27 - INFO - 	 Recall for 0.4 precision: 0.860
2024-11-04 01:27 - INFO - 	 Best Val. Loss: 0.101
2024-11-04 01:27 - INFO - 	 Best ROC-AUC: 0.961
2024-11-04 01:27 - INFO - 	 Best PR-AUC: 0.613
2024-11-04 01:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-04 01:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.379
2024-11-04 01:27 - INFO - 	 Best Recall for 0.4 precision: 0.920
2024-11-04 01:27 - INFO - ---------------------------------------------
2024-11-04 01:30 - INFO - Fit the preprocessing pipeline
2024-11-04 01:30 - INFO - Training using device: mps
2024-11-04 01:30 - INFO - Creating generators
2024-11-04 01:30 - INFO - The model has 651,257 trainable parameters
2024-11-04 01:30 - INFO - * Model:
2024-11-04 01:30 - INFO - * -----------
2024-11-04 01:30 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 01:30 - INFO - * -----------
2024-11-04 01:30 - INFO - Evaluating model based on: aucpr
2024-11-04 01:30 - INFO - Training..

2024-11-04 01:32 - INFO - ---------------------------------------------
2024-11-04 01:32 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 01:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15717
2024-11-04 01:32 - INFO - 	 Train Loss: 0.247
2024-11-04 01:32 - INFO - 	 Val. Loss: 0.275
2024-11-04 01:32 - INFO - 	 ROC-AUC: 0.752
2024-11-04 01:32 - INFO - 	 PR-AUC: 0.157
2024-11-04 01:32 - INFO - 	 Recall for 0.4 precision: 0.020
2024-11-04 01:32 - INFO - 	 Best Val. Loss: 0.275
2024-11-04 01:32 - INFO - 	 Best ROC-AUC: 0.752
2024-11-04 01:32 - INFO - 	 Best PR-AUC: 0.157
2024-11-04 01:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-11-04 01:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.115
2024-11-04 01:32 - INFO - 	 Best Recall for 0.4 precision: 0.020
2024-11-04 01:32 - INFO - ---------------------------------------------
2024-11-04 01:33 - INFO - ---------------------------------------------
2024-11-04 01:33 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 01:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22001
2024-11-04 01:33 - INFO - 	 Train Loss: 0.203
2024-11-04 01:33 - INFO - 	 Val. Loss: 0.233
2024-11-04 01:33 - INFO - 	 ROC-AUC: 0.772
2024-11-04 01:33 - INFO - 	 PR-AUC: 0.220
2024-11-04 01:33 - INFO - 	 Recall for 0.4 precision: 0.133
2024-11-04 01:33 - INFO - 	 Best Val. Loss: 0.233
2024-11-04 01:33 - INFO - 	 Best ROC-AUC: 0.772
2024-11-04 01:33 - INFO - 	 Best PR-AUC: 0.220
2024-11-04 01:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.725
2024-11-04 01:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-04 01:33 - INFO - 	 Best Recall for 0.4 precision: 0.133
2024-11-04 01:33 - INFO - ---------------------------------------------
2024-11-04 01:35 - INFO - ---------------------------------------------
2024-11-04 01:35 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-04 01:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2405
2024-11-04 01:35 - INFO - 	 Train Loss: 0.184
2024-11-04 01:35 - INFO - 	 Val. Loss: 0.208
2024-11-04 01:35 - INFO - 	 ROC-AUC: 0.766
2024-11-04 01:35 - INFO - 	 PR-AUC: 0.241
2024-11-04 01:35 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-04 01:35 - INFO - 	 Best Val. Loss: 0.208
2024-11-04 01:35 - INFO - 	 Best ROC-AUC: 0.772
2024-11-04 01:35 - INFO - 	 Best PR-AUC: 0.241
2024-11-04 01:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.725
2024-11-04 01:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.130
2024-11-04 01:35 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-04 01:35 - INFO - ---------------------------------------------
2024-11-04 01:37 - INFO - ---------------------------------------------
2024-11-04 01:37 - INFO - Epoch: 04 | Time: 1m 41s
2024-11-04 01:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27673
2024-11-04 01:37 - INFO - 	 Train Loss: 0.171
2024-11-04 01:37 - INFO - 	 Val. Loss: 0.198
2024-11-04 01:37 - INFO - 	 ROC-AUC: 0.792
2024-11-04 01:37 - INFO - 	 PR-AUC: 0.277
2024-11-04 01:37 - INFO - 	 Recall for 0.4 precision: 0.255
2024-11-04 01:37 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 01:37 - INFO - 	 Best ROC-AUC: 0.792
2024-11-04 01:37 - INFO - 	 Best PR-AUC: 0.277
2024-11-04 01:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 01:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 01:37 - INFO - 	 Best Recall for 0.4 precision: 0.255
2024-11-04 01:37 - INFO - ---------------------------------------------
2024-11-04 01:39 - INFO - ---------------------------------------------
2024-11-04 01:39 - INFO - Epoch: 05 | Time: 1m 45s
2024-11-04 01:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29069
2024-11-04 01:39 - INFO - 	 Train Loss: 0.162
2024-11-04 01:39 - INFO - 	 Val. Loss: 0.177
2024-11-04 01:39 - INFO - 	 ROC-AUC: 0.808
2024-11-04 01:39 - INFO - 	 PR-AUC: 0.291
2024-11-04 01:39 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-04 01:39 - INFO - 	 Best Val. Loss: 0.177
2024-11-04 01:39 - INFO - 	 Best ROC-AUC: 0.808
2024-11-04 01:39 - INFO - 	 Best PR-AUC: 0.291
2024-11-04 01:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-04 01:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-04 01:39 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-04 01:39 - INFO - ---------------------------------------------
2024-11-04 01:40 - INFO - ---------------------------------------------
2024-11-04 01:40 - INFO - Epoch: 06 | Time: 1m 46s
2024-11-04 01:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30991
2024-11-04 01:40 - INFO - 	 Train Loss: 0.157
2024-11-04 01:40 - INFO - 	 Val. Loss: 0.177
2024-11-04 01:40 - INFO - 	 ROC-AUC: 0.820
2024-11-04 01:40 - INFO - 	 PR-AUC: 0.310
2024-11-04 01:40 - INFO - 	 Recall for 0.4 precision: 0.234
2024-11-04 01:40 - INFO - 	 Best Val. Loss: 0.177
2024-11-04 01:40 - INFO - 	 Best ROC-AUC: 0.820
2024-11-04 01:40 - INFO - 	 Best PR-AUC: 0.310
2024-11-04 01:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 01:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-04 01:40 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-04 01:40 - INFO - ---------------------------------------------
2024-11-04 01:42 - INFO - ---------------------------------------------
2024-11-04 01:42 - INFO - Epoch: 07 | Time: 1m 47s
2024-11-04 01:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3333
2024-11-04 01:42 - INFO - 	 Train Loss: 0.152
2024-11-04 01:42 - INFO - 	 Val. Loss: 0.159
2024-11-04 01:42 - INFO - 	 ROC-AUC: 0.856
2024-11-04 01:42 - INFO - 	 PR-AUC: 0.333
2024-11-04 01:42 - INFO - 	 Recall for 0.4 precision: 0.312
2024-11-04 01:42 - INFO - 	 Best Val. Loss: 0.159
2024-11-04 01:42 - INFO - 	 Best ROC-AUC: 0.856
2024-11-04 01:42 - INFO - 	 Best PR-AUC: 0.333
2024-11-04 01:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.787
2024-11-04 01:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 01:42 - INFO - 	 Best Recall for 0.4 precision: 0.312
2024-11-04 01:42 - INFO - ---------------------------------------------
2024-11-04 01:44 - INFO - ---------------------------------------------
2024-11-04 01:44 - INFO - Epoch: 08 | Time: 1m 47s
2024-11-04 01:44 - INFO - 	 Train Loss: 0.142
2024-11-04 01:44 - INFO - 	 Val. Loss: 0.165
2024-11-04 01:44 - INFO - 	 ROC-AUC: 0.857
2024-11-04 01:44 - INFO - 	 PR-AUC: 0.298
2024-11-04 01:44 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-04 01:44 - INFO - 	 Best Val. Loss: 0.159
2024-11-04 01:44 - INFO - 	 Best ROC-AUC: 0.857
2024-11-04 01:44 - INFO - 	 Best PR-AUC: 0.333
2024-11-04 01:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.804
2024-11-04 01:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 01:44 - INFO - 	 Best Recall for 0.4 precision: 0.312
2024-11-04 01:44 - INFO - ---------------------------------------------
2024-11-04 01:46 - INFO - ---------------------------------------------
2024-11-04 01:46 - INFO - Epoch: 09 | Time: 1m 47s
2024-11-04 01:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48852
2024-11-04 01:46 - INFO - 	 Train Loss: 0.128
2024-11-04 01:46 - INFO - 	 Val. Loss: 0.123
2024-11-04 01:46 - INFO - 	 ROC-AUC: 0.956
2024-11-04 01:46 - INFO - 	 PR-AUC: 0.489
2024-11-04 01:46 - INFO - 	 Recall for 0.4 precision: 0.712
2024-11-04 01:46 - INFO - 	 Best Val. Loss: 0.123
2024-11-04 01:46 - INFO - 	 Best ROC-AUC: 0.956
2024-11-04 01:46 - INFO - 	 Best PR-AUC: 0.489
2024-11-04 01:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-04 01:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.315
2024-11-04 01:46 - INFO - 	 Best Recall for 0.4 precision: 0.712
2024-11-04 01:46 - INFO - ---------------------------------------------
2024-11-04 01:48 - INFO - ---------------------------------------------
2024-11-04 01:48 - INFO - Epoch: 10 | Time: 1m 48s
2024-11-04 01:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53549
2024-11-04 01:48 - INFO - 	 Train Loss: 0.112
2024-11-04 01:48 - INFO - 	 Val. Loss: 0.108
2024-11-04 01:48 - INFO - 	 ROC-AUC: 0.962
2024-11-04 01:48 - INFO - 	 PR-AUC: 0.535
2024-11-04 01:48 - INFO - 	 Recall for 0.4 precision: 0.831
2024-11-04 01:48 - INFO - 	 Best Val. Loss: 0.108
2024-11-04 01:48 - INFO - 	 Best ROC-AUC: 0.962
2024-11-04 01:48 - INFO - 	 Best PR-AUC: 0.535
2024-11-04 01:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-04 01:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-04 01:48 - INFO - 	 Best Recall for 0.4 precision: 0.831
2024-11-04 01:48 - INFO - ---------------------------------------------
2024-11-04 01:50 - INFO - Fit the preprocessing pipeline
2024-11-04 01:50 - INFO - Training using device: mps
2024-11-04 01:50 - INFO - Creating generators
2024-11-04 01:50 - INFO - The model has 651,257 trainable parameters
2024-11-04 01:50 - INFO - * Model:
2024-11-04 01:50 - INFO - * -----------
2024-11-04 01:50 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 01:50 - INFO - * -----------
2024-11-04 01:50 - INFO - Evaluating model based on: aucpr
2024-11-04 01:50 - INFO - Training..

2024-11-04 01:52 - INFO - ---------------------------------------------
2024-11-04 01:52 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 01:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1931
2024-11-04 01:52 - INFO - 	 Train Loss: 0.250
2024-11-04 01:52 - INFO - 	 Val. Loss: 0.294
2024-11-04 01:52 - INFO - 	 ROC-AUC: 0.735
2024-11-04 01:52 - INFO - 	 PR-AUC: 0.193
2024-11-04 01:52 - INFO - 	 Recall for 0.4 precision: 0.075
2024-11-04 01:52 - INFO - 	 Best Val. Loss: 0.294
2024-11-04 01:52 - INFO - 	 Best ROC-AUC: 0.735
2024-11-04 01:52 - INFO - 	 Best PR-AUC: 0.193
2024-11-04 01:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.728
2024-11-04 01:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.130
2024-11-04 01:52 - INFO - 	 Best Recall for 0.4 precision: 0.075
2024-11-04 01:52 - INFO - ---------------------------------------------
2024-11-04 01:54 - INFO - ---------------------------------------------
2024-11-04 01:54 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 01:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19397
2024-11-04 01:54 - INFO - 	 Train Loss: 0.204
2024-11-04 01:54 - INFO - 	 Val. Loss: 0.239
2024-11-04 01:54 - INFO - 	 ROC-AUC: 0.758
2024-11-04 01:54 - INFO - 	 PR-AUC: 0.194
2024-11-04 01:54 - INFO - 	 Recall for 0.4 precision: 0.085
2024-11-04 01:54 - INFO - 	 Best Val. Loss: 0.239
2024-11-04 01:54 - INFO - 	 Best ROC-AUC: 0.758
2024-11-04 01:54 - INFO - 	 Best PR-AUC: 0.194
2024-11-04 01:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-04 01:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-04 01:54 - INFO - 	 Best Recall for 0.4 precision: 0.085
2024-11-04 01:54 - INFO - ---------------------------------------------
2024-11-04 01:55 - INFO - ---------------------------------------------
2024-11-04 01:55 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-04 01:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27018
2024-11-04 01:55 - INFO - 	 Train Loss: 0.184
2024-11-04 01:55 - INFO - 	 Val. Loss: 0.203
2024-11-04 01:55 - INFO - 	 ROC-AUC: 0.797
2024-11-04 01:55 - INFO - 	 PR-AUC: 0.270
2024-11-04 01:55 - INFO - 	 Recall for 0.4 precision: 0.315
2024-11-04 01:55 - INFO - 	 Best Val. Loss: 0.203
2024-11-04 01:55 - INFO - 	 Best ROC-AUC: 0.797
2024-11-04 01:55 - INFO - 	 Best PR-AUC: 0.270
2024-11-04 01:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.745
2024-11-04 01:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 01:55 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-04 01:55 - INFO - ---------------------------------------------
2024-11-04 01:57 - INFO - ---------------------------------------------
2024-11-04 01:57 - INFO - Epoch: 04 | Time: 1m 44s
2024-11-04 01:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28399
2024-11-04 01:57 - INFO - 	 Train Loss: 0.171
2024-11-04 01:57 - INFO - 	 Val. Loss: 0.197
2024-11-04 01:57 - INFO - 	 ROC-AUC: 0.793
2024-11-04 01:57 - INFO - 	 PR-AUC: 0.284
2024-11-04 01:57 - INFO - 	 Recall for 0.4 precision: 0.319
2024-11-04 01:57 - INFO - 	 Best Val. Loss: 0.197
2024-11-04 01:57 - INFO - 	 Best ROC-AUC: 0.797
2024-11-04 01:57 - INFO - 	 Best PR-AUC: 0.284
2024-11-04 01:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.745
2024-11-04 01:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 01:57 - INFO - 	 Best Recall for 0.4 precision: 0.319
2024-11-04 01:57 - INFO - ---------------------------------------------
2024-11-04 01:59 - INFO - ---------------------------------------------
2024-11-04 01:59 - INFO - Epoch: 05 | Time: 1m 46s
2024-11-04 01:59 - INFO - 	 Train Loss: 0.166
2024-11-04 01:59 - INFO - 	 Val. Loss: 0.197
2024-11-04 01:59 - INFO - 	 ROC-AUC: 0.787
2024-11-04 01:59 - INFO - 	 PR-AUC: 0.261
2024-11-04 01:59 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-04 01:59 - INFO - 	 Best Val. Loss: 0.197
2024-11-04 01:59 - INFO - 	 Best ROC-AUC: 0.797
2024-11-04 01:59 - INFO - 	 Best PR-AUC: 0.284
2024-11-04 01:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.745
2024-11-04 01:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 01:59 - INFO - 	 Best Recall for 0.4 precision: 0.319
2024-11-04 01:59 - INFO - ---------------------------------------------
2024-11-04 02:01 - INFO - ---------------------------------------------
2024-11-04 02:01 - INFO - Epoch: 06 | Time: 1m 47s
2024-11-04 02:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31564
2024-11-04 02:01 - INFO - 	 Train Loss: 0.164
2024-11-04 02:01 - INFO - 	 Val. Loss: 0.187
2024-11-04 02:01 - INFO - 	 ROC-AUC: 0.813
2024-11-04 02:01 - INFO - 	 PR-AUC: 0.316
2024-11-04 02:01 - INFO - 	 Recall for 0.4 precision: 0.325
2024-11-04 02:01 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 02:01 - INFO - 	 Best ROC-AUC: 0.813
2024-11-04 02:01 - INFO - 	 Best PR-AUC: 0.316
2024-11-04 02:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-04 02:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-04 02:01 - INFO - 	 Best Recall for 0.4 precision: 0.325
2024-11-04 02:01 - INFO - ---------------------------------------------
2024-11-04 02:02 - INFO - ---------------------------------------------
2024-11-04 02:02 - INFO - Epoch: 07 | Time: 1m 47s
2024-11-04 02:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31982
2024-11-04 02:02 - INFO - 	 Train Loss: 0.157
2024-11-04 02:02 - INFO - 	 Val. Loss: 0.175
2024-11-04 02:02 - INFO - 	 ROC-AUC: 0.807
2024-11-04 02:02 - INFO - 	 PR-AUC: 0.320
2024-11-04 02:02 - INFO - 	 Recall for 0.4 precision: 0.356
2024-11-04 02:02 - INFO - 	 Best Val. Loss: 0.175
2024-11-04 02:02 - INFO - 	 Best ROC-AUC: 0.813
2024-11-04 02:02 - INFO - 	 Best PR-AUC: 0.320
2024-11-04 02:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-04 02:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-04 02:02 - INFO - 	 Best Recall for 0.4 precision: 0.356
2024-11-04 02:02 - INFO - ---------------------------------------------
2024-11-04 02:04 - INFO - ---------------------------------------------
2024-11-04 02:04 - INFO - Epoch: 08 | Time: 1m 48s
2024-11-04 02:04 - INFO - 	 Train Loss: 0.152
2024-11-04 02:04 - INFO - 	 Val. Loss: 0.164
2024-11-04 02:04 - INFO - 	 ROC-AUC: 0.823
2024-11-04 02:04 - INFO - 	 PR-AUC: 0.314
2024-11-04 02:04 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-04 02:04 - INFO - 	 Best Val. Loss: 0.164
2024-11-04 02:04 - INFO - 	 Best ROC-AUC: 0.823
2024-11-04 02:04 - INFO - 	 Best PR-AUC: 0.320
2024-11-04 02:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-04 02:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-04 02:04 - INFO - 	 Best Recall for 0.4 precision: 0.356
2024-11-04 02:04 - INFO - ---------------------------------------------
2024-11-04 02:06 - INFO - ---------------------------------------------
2024-11-04 02:06 - INFO - Epoch: 09 | Time: 1m 48s
2024-11-04 02:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33017
2024-11-04 02:06 - INFO - 	 Train Loss: 0.149
2024-11-04 02:06 - INFO - 	 Val. Loss: 0.156
2024-11-04 02:06 - INFO - 	 ROC-AUC: 0.845
2024-11-04 02:06 - INFO - 	 PR-AUC: 0.330
2024-11-04 02:06 - INFO - 	 Recall for 0.4 precision: 0.325
2024-11-04 02:06 - INFO - 	 Best Val. Loss: 0.156
2024-11-04 02:06 - INFO - 	 Best ROC-AUC: 0.845
2024-11-04 02:06 - INFO - 	 Best PR-AUC: 0.330
2024-11-04 02:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.784
2024-11-04 02:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 02:06 - INFO - 	 Best Recall for 0.4 precision: 0.356
2024-11-04 02:06 - INFO - ---------------------------------------------
2024-11-04 02:08 - INFO - ---------------------------------------------
2024-11-04 02:08 - INFO - Epoch: 10 | Time: 1m 48s
2024-11-04 02:08 - INFO - 	 Train Loss: 0.148
2024-11-04 02:08 - INFO - 	 Val. Loss: 0.170
2024-11-04 02:08 - INFO - 	 ROC-AUC: 0.814
2024-11-04 02:08 - INFO - 	 PR-AUC: 0.272
2024-11-04 02:08 - INFO - 	 Recall for 0.4 precision: 0.207
2024-11-04 02:08 - INFO - 	 Best Val. Loss: 0.156
2024-11-04 02:08 - INFO - 	 Best ROC-AUC: 0.845
2024-11-04 02:08 - INFO - 	 Best PR-AUC: 0.330
2024-11-04 02:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.784
2024-11-04 02:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 02:08 - INFO - 	 Best Recall for 0.4 precision: 0.356
2024-11-04 02:08 - INFO - ---------------------------------------------
2024-11-04 02:11 - INFO - Fit the preprocessing pipeline
2024-11-04 02:11 - INFO - Training using device: mps
2024-11-04 02:11 - INFO - Creating generators
2024-11-04 02:11 - INFO - The model has 651,257 trainable parameters
2024-11-04 02:11 - INFO - * Model:
2024-11-04 02:11 - INFO - * -----------
2024-11-04 02:11 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 02:11 - INFO - * -----------
2024-11-04 02:11 - INFO - Evaluating model based on: aucpr
2024-11-04 02:11 - INFO - Training..

2024-11-04 02:12 - INFO - ---------------------------------------------
2024-11-04 02:12 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 02:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15402
2024-11-04 02:12 - INFO - 	 Train Loss: 0.253
2024-11-04 02:12 - INFO - 	 Val. Loss: 0.315
2024-11-04 02:12 - INFO - 	 ROC-AUC: 0.721
2024-11-04 02:12 - INFO - 	 PR-AUC: 0.154
2024-11-04 02:12 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-04 02:12 - INFO - 	 Best Val. Loss: 0.315
2024-11-04 02:12 - INFO - 	 Best ROC-AUC: 0.721
2024-11-04 02:12 - INFO - 	 Best PR-AUC: 0.154
2024-11-04 02:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.695
2024-11-04 02:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.117
2024-11-04 02:12 - INFO - 	 Best Recall for 0.4 precision: 0.013
2024-11-04 02:12 - INFO - ---------------------------------------------
2024-11-04 02:14 - INFO - ---------------------------------------------
2024-11-04 02:14 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-04 02:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23203
2024-11-04 02:14 - INFO - 	 Train Loss: 0.209
2024-11-04 02:14 - INFO - 	 Val. Loss: 0.232
2024-11-04 02:14 - INFO - 	 ROC-AUC: 0.765
2024-11-04 02:14 - INFO - 	 PR-AUC: 0.232
2024-11-04 02:14 - INFO - 	 Recall for 0.4 precision: 0.224
2024-11-04 02:14 - INFO - 	 Best Val. Loss: 0.232
2024-11-04 02:14 - INFO - 	 Best ROC-AUC: 0.765
2024-11-04 02:14 - INFO - 	 Best PR-AUC: 0.232
2024-11-04 02:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 02:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-04 02:14 - INFO - 	 Best Recall for 0.4 precision: 0.224
2024-11-04 02:14 - INFO - ---------------------------------------------
2024-11-04 02:16 - INFO - ---------------------------------------------
2024-11-04 02:16 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-04 02:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26336
2024-11-04 02:16 - INFO - 	 Train Loss: 0.181
2024-11-04 02:16 - INFO - 	 Val. Loss: 0.206
2024-11-04 02:16 - INFO - 	 ROC-AUC: 0.794
2024-11-04 02:16 - INFO - 	 PR-AUC: 0.263
2024-11-04 02:16 - INFO - 	 Recall for 0.4 precision: 0.250
2024-11-04 02:16 - INFO - 	 Best Val. Loss: 0.206
2024-11-04 02:16 - INFO - 	 Best ROC-AUC: 0.794
2024-11-04 02:16 - INFO - 	 Best PR-AUC: 0.263
2024-11-04 02:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-04 02:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 02:16 - INFO - 	 Best Recall for 0.4 precision: 0.250
2024-11-04 02:16 - INFO - ---------------------------------------------
2024-11-04 02:17 - INFO - ---------------------------------------------
2024-11-04 02:17 - INFO - Epoch: 04 | Time: 1m 42s
2024-11-04 02:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29577
2024-11-04 02:17 - INFO - 	 Train Loss: 0.168
2024-11-04 02:17 - INFO - 	 Val. Loss: 0.192
2024-11-04 02:17 - INFO - 	 ROC-AUC: 0.797
2024-11-04 02:17 - INFO - 	 PR-AUC: 0.296
2024-11-04 02:17 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-04 02:17 - INFO - 	 Best Val. Loss: 0.192
2024-11-04 02:17 - INFO - 	 Best ROC-AUC: 0.797
2024-11-04 02:17 - INFO - 	 Best PR-AUC: 0.296
2024-11-04 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.745
2024-11-04 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-04 02:17 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-04 02:17 - INFO - ---------------------------------------------
2024-11-04 02:19 - INFO - ---------------------------------------------
2024-11-04 02:19 - INFO - Epoch: 05 | Time: 1m 46s
2024-11-04 02:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29891
2024-11-04 02:19 - INFO - 	 Train Loss: 0.161
2024-11-04 02:19 - INFO - 	 Val. Loss: 0.182
2024-11-04 02:19 - INFO - 	 ROC-AUC: 0.801
2024-11-04 02:19 - INFO - 	 PR-AUC: 0.299
2024-11-04 02:19 - INFO - 	 Recall for 0.4 precision: 0.328
2024-11-04 02:19 - INFO - 	 Best Val. Loss: 0.182
2024-11-04 02:19 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 02:19 - INFO - 	 Best PR-AUC: 0.299
2024-11-04 02:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-04 02:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-04 02:19 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-04 02:19 - INFO - ---------------------------------------------
2024-11-04 02:21 - INFO - ---------------------------------------------
2024-11-04 02:21 - INFO - Epoch: 06 | Time: 1m 48s
2024-11-04 02:21 - INFO - 	 Train Loss: 0.159
2024-11-04 02:21 - INFO - 	 Val. Loss: 0.173
2024-11-04 02:21 - INFO - 	 ROC-AUC: 0.799
2024-11-04 02:21 - INFO - 	 PR-AUC: 0.270
2024-11-04 02:21 - INFO - 	 Recall for 0.4 precision: 0.233
2024-11-04 02:21 - INFO - 	 Best Val. Loss: 0.173
2024-11-04 02:21 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 02:21 - INFO - 	 Best PR-AUC: 0.299
2024-11-04 02:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-04 02:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-04 02:21 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-04 02:21 - INFO - ---------------------------------------------
2024-11-04 02:23 - INFO - ---------------------------------------------
2024-11-04 02:23 - INFO - Epoch: 07 | Time: 1m 49s
2024-11-04 02:23 - INFO - 	 Train Loss: 0.159
2024-11-04 02:23 - INFO - 	 Val. Loss: 0.172
2024-11-04 02:23 - INFO - 	 ROC-AUC: 0.797
2024-11-04 02:23 - INFO - 	 PR-AUC: 0.297
2024-11-04 02:23 - INFO - 	 Recall for 0.4 precision: 0.260
2024-11-04 02:23 - INFO - 	 Best Val. Loss: 0.172
2024-11-04 02:23 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 02:23 - INFO - 	 Best PR-AUC: 0.299
2024-11-04 02:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-04 02:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-04 02:23 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-04 02:23 - INFO - ---------------------------------------------
2024-11-04 02:25 - INFO - ---------------------------------------------
2024-11-04 02:25 - INFO - Epoch: 08 | Time: 1m 49s
2024-11-04 02:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31382
2024-11-04 02:25 - INFO - 	 Train Loss: 0.153
2024-11-04 02:25 - INFO - 	 Val. Loss: 0.163
2024-11-04 02:25 - INFO - 	 ROC-AUC: 0.811
2024-11-04 02:25 - INFO - 	 PR-AUC: 0.314
2024-11-04 02:25 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-04 02:25 - INFO - 	 Best Val. Loss: 0.163
2024-11-04 02:25 - INFO - 	 Best ROC-AUC: 0.811
2024-11-04 02:25 - INFO - 	 Best PR-AUC: 0.314
2024-11-04 02:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-04 02:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-04 02:25 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-04 02:25 - INFO - ---------------------------------------------
2024-11-04 02:26 - INFO - ---------------------------------------------
2024-11-04 02:26 - INFO - Epoch: 09 | Time: 1m 48s
2024-11-04 02:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36023
2024-11-04 02:26 - INFO - 	 Train Loss: 0.149
2024-11-04 02:26 - INFO - 	 Val. Loss: 0.155
2024-11-04 02:26 - INFO - 	 ROC-AUC: 0.884
2024-11-04 02:26 - INFO - 	 PR-AUC: 0.360
2024-11-04 02:26 - INFO - 	 Recall for 0.4 precision: 0.423
2024-11-04 02:26 - INFO - 	 Best Val. Loss: 0.155
2024-11-04 02:26 - INFO - 	 Best ROC-AUC: 0.884
2024-11-04 02:26 - INFO - 	 Best PR-AUC: 0.360
2024-11-04 02:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.848
2024-11-04 02:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.208
2024-11-04 02:26 - INFO - 	 Best Recall for 0.4 precision: 0.423
2024-11-04 02:26 - INFO - ---------------------------------------------
2024-11-04 02:28 - INFO - ---------------------------------------------
2024-11-04 02:28 - INFO - Epoch: 10 | Time: 1m 48s
2024-11-04 02:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42057
2024-11-04 02:28 - INFO - 	 Train Loss: 0.127
2024-11-04 02:28 - INFO - 	 Val. Loss: 0.149
2024-11-04 02:28 - INFO - 	 ROC-AUC: 0.942
2024-11-04 02:28 - INFO - 	 PR-AUC: 0.421
2024-11-04 02:28 - INFO - 	 Recall for 0.4 precision: 0.541
2024-11-04 02:28 - INFO - 	 Best Val. Loss: 0.149
2024-11-04 02:28 - INFO - 	 Best ROC-AUC: 0.942
2024-11-04 02:28 - INFO - 	 Best PR-AUC: 0.421
2024-11-04 02:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-04 02:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.299
2024-11-04 02:28 - INFO - 	 Best Recall for 0.4 precision: 0.541
2024-11-04 02:28 - INFO - ---------------------------------------------
2024-11-04 02:31 - INFO - Fit the preprocessing pipeline
2024-11-04 02:31 - INFO - Training using device: mps
2024-11-04 02:31 - INFO - Creating generators
2024-11-04 02:31 - INFO - The model has 651,257 trainable parameters
2024-11-04 02:31 - INFO - * Model:
2024-11-04 02:31 - INFO - * -----------
2024-11-04 02:31 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 02:31 - INFO - * -----------
2024-11-04 02:31 - INFO - Evaluating model based on: aucpr
2024-11-04 02:31 - INFO - Training..

2024-11-04 02:33 - INFO - ---------------------------------------------
2024-11-04 02:33 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-04 02:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16713
2024-11-04 02:33 - INFO - 	 Train Loss: 0.252
2024-11-04 02:33 - INFO - 	 Val. Loss: 0.295
2024-11-04 02:33 - INFO - 	 ROC-AUC: 0.729
2024-11-04 02:33 - INFO - 	 PR-AUC: 0.167
2024-11-04 02:33 - INFO - 	 Recall for 0.4 precision: 0.065
2024-11-04 02:33 - INFO - 	 Best Val. Loss: 0.295
2024-11-04 02:33 - INFO - 	 Best ROC-AUC: 0.729
2024-11-04 02:33 - INFO - 	 Best PR-AUC: 0.167
2024-11-04 02:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.702
2024-11-04 02:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-04 02:33 - INFO - 	 Best Recall for 0.4 precision: 0.065
2024-11-04 02:33 - INFO - ---------------------------------------------
2024-11-04 02:34 - INFO - ---------------------------------------------
2024-11-04 02:34 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 02:34 - INFO - 	 Train Loss: 0.208
2024-11-04 02:34 - INFO - 	 Val. Loss: 0.279
2024-11-04 02:34 - INFO - 	 ROC-AUC: 0.754
2024-11-04 02:34 - INFO - 	 PR-AUC: 0.150
2024-11-04 02:34 - INFO - 	 Recall for 0.4 precision: 0.015
2024-11-04 02:34 - INFO - 	 Best Val. Loss: 0.279
2024-11-04 02:34 - INFO - 	 Best ROC-AUC: 0.754
2024-11-04 02:34 - INFO - 	 Best PR-AUC: 0.167
2024-11-04 02:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.698
2024-11-04 02:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-04 02:34 - INFO - 	 Best Recall for 0.4 precision: 0.065
2024-11-04 02:34 - INFO - ---------------------------------------------
2024-11-04 02:36 - INFO - ---------------------------------------------
2024-11-04 02:36 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-04 02:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24136
2024-11-04 02:36 - INFO - 	 Train Loss: 0.187
2024-11-04 02:36 - INFO - 	 Val. Loss: 0.199
2024-11-04 02:36 - INFO - 	 ROC-AUC: 0.778
2024-11-04 02:36 - INFO - 	 PR-AUC: 0.241
2024-11-04 02:36 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-04 02:36 - INFO - 	 Best Val. Loss: 0.199
2024-11-04 02:36 - INFO - 	 Best ROC-AUC: 0.778
2024-11-04 02:36 - INFO - 	 Best PR-AUC: 0.241
2024-11-04 02:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-04 02:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-04 02:36 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 02:36 - INFO - ---------------------------------------------
2024-11-04 02:38 - INFO - ---------------------------------------------
2024-11-04 02:38 - INFO - Epoch: 04 | Time: 1m 43s
2024-11-04 02:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26227
2024-11-04 02:38 - INFO - 	 Train Loss: 0.169
2024-11-04 02:38 - INFO - 	 Val. Loss: 0.193
2024-11-04 02:38 - INFO - 	 ROC-AUC: 0.801
2024-11-04 02:38 - INFO - 	 PR-AUC: 0.262
2024-11-04 02:38 - INFO - 	 Recall for 0.4 precision: 0.224
2024-11-04 02:38 - INFO - 	 Best Val. Loss: 0.193
2024-11-04 02:38 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 02:38 - INFO - 	 Best PR-AUC: 0.262
2024-11-04 02:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-04 02:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-04 02:38 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 02:38 - INFO - ---------------------------------------------
2024-11-04 02:39 - INFO - ---------------------------------------------
2024-11-04 02:39 - INFO - Epoch: 05 | Time: 1m 45s
2024-11-04 02:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26965
2024-11-04 02:39 - INFO - 	 Train Loss: 0.164
2024-11-04 02:39 - INFO - 	 Val. Loss: 0.184
2024-11-04 02:39 - INFO - 	 ROC-AUC: 0.798
2024-11-04 02:39 - INFO - 	 PR-AUC: 0.270
2024-11-04 02:39 - INFO - 	 Recall for 0.4 precision: 0.228
2024-11-04 02:39 - INFO - 	 Best Val. Loss: 0.184
2024-11-04 02:39 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 02:39 - INFO - 	 Best PR-AUC: 0.270
2024-11-04 02:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-04 02:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-04 02:39 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 02:39 - INFO - ---------------------------------------------
2024-11-04 02:41 - INFO - ---------------------------------------------
2024-11-04 02:41 - INFO - Epoch: 06 | Time: 1m 46s
2024-11-04 02:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29811
2024-11-04 02:41 - INFO - 	 Train Loss: 0.157
2024-11-04 02:41 - INFO - 	 Val. Loss: 0.172
2024-11-04 02:41 - INFO - 	 ROC-AUC: 0.808
2024-11-04 02:41 - INFO - 	 PR-AUC: 0.298
2024-11-04 02:41 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-04 02:41 - INFO - 	 Best Val. Loss: 0.172
2024-11-04 02:41 - INFO - 	 Best ROC-AUC: 0.808
2024-11-04 02:41 - INFO - 	 Best PR-AUC: 0.298
2024-11-04 02:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.745
2024-11-04 02:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-04 02:41 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 02:41 - INFO - ---------------------------------------------
2024-11-04 02:43 - INFO - ---------------------------------------------
2024-11-04 02:43 - INFO - Epoch: 07 | Time: 1m 47s
2024-11-04 02:43 - INFO - 	 Train Loss: 0.155
2024-11-04 02:43 - INFO - 	 Val. Loss: 0.166
2024-11-04 02:43 - INFO - 	 ROC-AUC: 0.834
2024-11-04 02:43 - INFO - 	 PR-AUC: 0.295
2024-11-04 02:43 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-04 02:43 - INFO - 	 Best Val. Loss: 0.166
2024-11-04 02:43 - INFO - 	 Best ROC-AUC: 0.834
2024-11-04 02:43 - INFO - 	 Best PR-AUC: 0.298
2024-11-04 02:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-04 02:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-04 02:43 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 02:43 - INFO - ---------------------------------------------
2024-11-04 02:45 - INFO - ---------------------------------------------
2024-11-04 02:45 - INFO - Epoch: 08 | Time: 1m 47s
2024-11-04 02:45 - INFO - 	 Train Loss: 0.153
2024-11-04 02:45 - INFO - 	 Val. Loss: 0.165
2024-11-04 02:45 - INFO - 	 ROC-AUC: 0.811
2024-11-04 02:45 - INFO - 	 PR-AUC: 0.291
2024-11-04 02:45 - INFO - 	 Recall for 0.4 precision: 0.281
2024-11-04 02:45 - INFO - 	 Best Val. Loss: 0.165
2024-11-04 02:45 - INFO - 	 Best ROC-AUC: 0.834
2024-11-04 02:45 - INFO - 	 Best PR-AUC: 0.298
2024-11-04 02:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-04 02:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-04 02:45 - INFO - 	 Best Recall for 0.4 precision: 0.281
2024-11-04 02:45 - INFO - ---------------------------------------------
2024-11-04 02:47 - INFO - ---------------------------------------------
2024-11-04 02:47 - INFO - Epoch: 09 | Time: 1m 47s
2024-11-04 02:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31314
2024-11-04 02:47 - INFO - 	 Train Loss: 0.150
2024-11-04 02:47 - INFO - 	 Val. Loss: 0.162
2024-11-04 02:47 - INFO - 	 ROC-AUC: 0.821
2024-11-04 02:47 - INFO - 	 PR-AUC: 0.313
2024-11-04 02:47 - INFO - 	 Recall for 0.4 precision: 0.304
2024-11-04 02:47 - INFO - 	 Best Val. Loss: 0.162
2024-11-04 02:47 - INFO - 	 Best ROC-AUC: 0.834
2024-11-04 02:47 - INFO - 	 Best PR-AUC: 0.313
2024-11-04 02:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-04 02:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 02:47 - INFO - 	 Best Recall for 0.4 precision: 0.304
2024-11-04 02:47 - INFO - ---------------------------------------------
2024-11-04 02:48 - INFO - ---------------------------------------------
2024-11-04 02:48 - INFO - Epoch: 10 | Time: 1m 47s
2024-11-04 02:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31443
2024-11-04 02:48 - INFO - 	 Train Loss: 0.150
2024-11-04 02:48 - INFO - 	 Val. Loss: 0.160
2024-11-04 02:48 - INFO - 	 ROC-AUC: 0.838
2024-11-04 02:48 - INFO - 	 PR-AUC: 0.314
2024-11-04 02:48 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-04 02:48 - INFO - 	 Best Val. Loss: 0.160
2024-11-04 02:48 - INFO - 	 Best ROC-AUC: 0.838
2024-11-04 02:48 - INFO - 	 Best PR-AUC: 0.314
2024-11-04 02:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.766
2024-11-04 02:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-04 02:48 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-04 02:48 - INFO - ---------------------------------------------
2024-11-04 02:51 - INFO - Fit the preprocessing pipeline
2024-11-04 02:51 - INFO - Training using device: mps
2024-11-04 02:51 - INFO - Creating generators
2024-11-04 02:51 - INFO - The model has 651,257 trainable parameters
2024-11-04 02:51 - INFO - * Model:
2024-11-04 02:51 - INFO - * -----------
2024-11-04 02:51 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 02:51 - INFO - * -----------
2024-11-04 02:51 - INFO - Evaluating model based on: aucpr
2024-11-04 02:51 - INFO - Training..

2024-11-04 02:53 - INFO - ---------------------------------------------
2024-11-04 02:53 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-04 02:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17327
2024-11-04 02:53 - INFO - 	 Train Loss: 0.253
2024-11-04 02:53 - INFO - 	 Val. Loss: 0.297
2024-11-04 02:53 - INFO - 	 ROC-AUC: 0.743
2024-11-04 02:53 - INFO - 	 PR-AUC: 0.173
2024-11-04 02:53 - INFO - 	 Recall for 0.4 precision: 0.088
2024-11-04 02:53 - INFO - 	 Best Val. Loss: 0.297
2024-11-04 02:53 - INFO - 	 Best ROC-AUC: 0.743
2024-11-04 02:53 - INFO - 	 Best PR-AUC: 0.173
2024-11-04 02:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-04 02:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-04 02:53 - INFO - 	 Best Recall for 0.4 precision: 0.088
2024-11-04 02:53 - INFO - ---------------------------------------------
2024-11-04 02:54 - INFO - ---------------------------------------------
2024-11-04 02:54 - INFO - Epoch: 02 | Time: 1m 40s
2024-11-04 02:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20263
2024-11-04 02:54 - INFO - 	 Train Loss: 0.210
2024-11-04 02:54 - INFO - 	 Val. Loss: 0.258
2024-11-04 02:54 - INFO - 	 ROC-AUC: 0.737
2024-11-04 02:54 - INFO - 	 PR-AUC: 0.203
2024-11-04 02:54 - INFO - 	 Recall for 0.4 precision: 0.104
2024-11-04 02:54 - INFO - 	 Best Val. Loss: 0.258
2024-11-04 02:54 - INFO - 	 Best ROC-AUC: 0.743
2024-11-04 02:54 - INFO - 	 Best PR-AUC: 0.203
2024-11-04 02:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-04 02:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-04 02:54 - INFO - 	 Best Recall for 0.4 precision: 0.104
2024-11-04 02:54 - INFO - ---------------------------------------------
2024-11-04 02:56 - INFO - ---------------------------------------------
2024-11-04 02:56 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-04 02:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23183
2024-11-04 02:56 - INFO - 	 Train Loss: 0.187
2024-11-04 02:56 - INFO - 	 Val. Loss: 0.204
2024-11-04 02:56 - INFO - 	 ROC-AUC: 0.761
2024-11-04 02:56 - INFO - 	 PR-AUC: 0.232
2024-11-04 02:56 - INFO - 	 Recall for 0.4 precision: 0.166
2024-11-04 02:56 - INFO - 	 Best Val. Loss: 0.204
2024-11-04 02:56 - INFO - 	 Best ROC-AUC: 0.761
2024-11-04 02:56 - INFO - 	 Best PR-AUC: 0.232
2024-11-04 02:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-04 02:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-04 02:56 - INFO - 	 Best Recall for 0.4 precision: 0.166
2024-11-04 02:56 - INFO - ---------------------------------------------
2024-11-04 02:58 - INFO - ---------------------------------------------
2024-11-04 02:58 - INFO - Epoch: 04 | Time: 1m 44s
2024-11-04 02:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24272
2024-11-04 02:58 - INFO - 	 Train Loss: 0.173
2024-11-04 02:58 - INFO - 	 Val. Loss: 0.200
2024-11-04 02:58 - INFO - 	 ROC-AUC: 0.751
2024-11-04 02:58 - INFO - 	 PR-AUC: 0.243
2024-11-04 02:58 - INFO - 	 Recall for 0.4 precision: 0.185
2024-11-04 02:58 - INFO - 	 Best Val. Loss: 0.200
2024-11-04 02:58 - INFO - 	 Best ROC-AUC: 0.761
2024-11-04 02:58 - INFO - 	 Best PR-AUC: 0.243
2024-11-04 02:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-04 02:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-04 02:58 - INFO - 	 Best Recall for 0.4 precision: 0.185
2024-11-04 02:58 - INFO - ---------------------------------------------
2024-11-04 03:00 - INFO - ---------------------------------------------
2024-11-04 03:00 - INFO - Epoch: 05 | Time: 1m 46s
2024-11-04 03:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2577
2024-11-04 03:00 - INFO - 	 Train Loss: 0.165
2024-11-04 03:00 - INFO - 	 Val. Loss: 0.178
2024-11-04 03:00 - INFO - 	 ROC-AUC: 0.775
2024-11-04 03:00 - INFO - 	 PR-AUC: 0.258
2024-11-04 03:00 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-04 03:00 - INFO - 	 Best Val. Loss: 0.178
2024-11-04 03:00 - INFO - 	 Best ROC-AUC: 0.775
2024-11-04 03:00 - INFO - 	 Best PR-AUC: 0.258
2024-11-04 03:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-04 03:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 03:00 - INFO - 	 Best Recall for 0.4 precision: 0.185
2024-11-04 03:00 - INFO - ---------------------------------------------
2024-11-04 03:01 - INFO - ---------------------------------------------
2024-11-04 03:01 - INFO - Epoch: 06 | Time: 1m 47s
2024-11-04 03:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27156
2024-11-04 03:01 - INFO - 	 Train Loss: 0.159
2024-11-04 03:01 - INFO - 	 Val. Loss: 0.179
2024-11-04 03:01 - INFO - 	 ROC-AUC: 0.773
2024-11-04 03:01 - INFO - 	 PR-AUC: 0.272
2024-11-04 03:01 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-04 03:01 - INFO - 	 Best Val. Loss: 0.178
2024-11-04 03:01 - INFO - 	 Best ROC-AUC: 0.775
2024-11-04 03:01 - INFO - 	 Best PR-AUC: 0.272
2024-11-04 03:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-04 03:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-04 03:01 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-04 03:01 - INFO - ---------------------------------------------
2024-11-04 03:03 - INFO - ---------------------------------------------
2024-11-04 03:03 - INFO - Epoch: 07 | Time: 1m 47s
2024-11-04 03:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29303
2024-11-04 03:03 - INFO - 	 Train Loss: 0.154
2024-11-04 03:03 - INFO - 	 Val. Loss: 0.169
2024-11-04 03:03 - INFO - 	 ROC-AUC: 0.794
2024-11-04 03:03 - INFO - 	 PR-AUC: 0.293
2024-11-04 03:03 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-04 03:03 - INFO - 	 Best Val. Loss: 0.169
2024-11-04 03:03 - INFO - 	 Best ROC-AUC: 0.794
2024-11-04 03:03 - INFO - 	 Best PR-AUC: 0.293
2024-11-04 03:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-04 03:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 03:03 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 03:03 - INFO - ---------------------------------------------
2024-11-04 03:05 - INFO - ---------------------------------------------
2024-11-04 03:05 - INFO - Epoch: 08 | Time: 1m 47s
2024-11-04 03:05 - INFO - 	 Train Loss: 0.153
2024-11-04 03:05 - INFO - 	 Val. Loss: 0.168
2024-11-04 03:05 - INFO - 	 ROC-AUC: 0.794
2024-11-04 03:05 - INFO - 	 PR-AUC: 0.282
2024-11-04 03:05 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-04 03:05 - INFO - 	 Best Val. Loss: 0.168
2024-11-04 03:05 - INFO - 	 Best ROC-AUC: 0.794
2024-11-04 03:05 - INFO - 	 Best PR-AUC: 0.293
2024-11-04 03:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.752
2024-11-04 03:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 03:05 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 03:05 - INFO - ---------------------------------------------
2024-11-04 03:07 - INFO - ---------------------------------------------
2024-11-04 03:07 - INFO - Epoch: 09 | Time: 1m 48s
2024-11-04 03:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31184
2024-11-04 03:07 - INFO - 	 Train Loss: 0.151
2024-11-04 03:07 - INFO - 	 Val. Loss: 0.165
2024-11-04 03:07 - INFO - 	 ROC-AUC: 0.798
2024-11-04 03:07 - INFO - 	 PR-AUC: 0.312
2024-11-04 03:07 - INFO - 	 Recall for 0.4 precision: 0.268
2024-11-04 03:07 - INFO - 	 Best Val. Loss: 0.165
2024-11-04 03:07 - INFO - 	 Best ROC-AUC: 0.798
2024-11-04 03:07 - INFO - 	 Best PR-AUC: 0.312
2024-11-04 03:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 03:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 03:07 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-04 03:07 - INFO - ---------------------------------------------
2024-11-04 03:09 - INFO - ---------------------------------------------
2024-11-04 03:09 - INFO - Epoch: 10 | Time: 1m 48s
2024-11-04 03:09 - INFO - 	 Train Loss: 0.150
2024-11-04 03:09 - INFO - 	 Val. Loss: 0.160
2024-11-04 03:09 - INFO - 	 ROC-AUC: 0.812
2024-11-04 03:09 - INFO - 	 PR-AUC: 0.303
2024-11-04 03:09 - INFO - 	 Recall for 0.4 precision: 0.293
2024-11-04 03:09 - INFO - 	 Best Val. Loss: 0.160
2024-11-04 03:09 - INFO - 	 Best ROC-AUC: 0.812
2024-11-04 03:09 - INFO - 	 Best PR-AUC: 0.312
2024-11-04 03:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-04 03:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 03:09 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-04 03:09 - INFO - ---------------------------------------------
2024-11-04 03:11 - INFO - Fit the preprocessing pipeline
2024-11-04 03:11 - INFO - Training using device: mps
2024-11-04 03:11 - INFO - Creating generators
2024-11-04 03:11 - INFO - The model has 651,257 trainable parameters
2024-11-04 03:11 - INFO - * Model:
2024-11-04 03:11 - INFO - * -----------
2024-11-04 03:11 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 03:11 - INFO - * -----------
2024-11-04 03:11 - INFO - Evaluating model based on: aucpr
2024-11-04 03:11 - INFO - Training..

2024-11-04 03:13 - INFO - ---------------------------------------------
2024-11-04 03:13 - INFO - Epoch: 01 | Time: 1m 39s
2024-11-04 03:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15322
2024-11-04 03:13 - INFO - 	 Train Loss: 0.251
2024-11-04 03:13 - INFO - 	 Val. Loss: 0.290
2024-11-04 03:13 - INFO - 	 ROC-AUC: 0.739
2024-11-04 03:13 - INFO - 	 PR-AUC: 0.153
2024-11-04 03:13 - INFO - 	 Recall for 0.4 precision: 0.047
2024-11-04 03:13 - INFO - 	 Best Val. Loss: 0.290
2024-11-04 03:13 - INFO - 	 Best ROC-AUC: 0.739
2024-11-04 03:13 - INFO - 	 Best PR-AUC: 0.153
2024-11-04 03:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.690
2024-11-04 03:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.097
2024-11-04 03:13 - INFO - 	 Best Recall for 0.4 precision: 0.047
2024-11-04 03:13 - INFO - ---------------------------------------------
2024-11-04 03:15 - INFO - ---------------------------------------------
2024-11-04 03:15 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 03:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23377
2024-11-04 03:15 - INFO - 	 Train Loss: 0.205
2024-11-04 03:15 - INFO - 	 Val. Loss: 0.219
2024-11-04 03:15 - INFO - 	 ROC-AUC: 0.774
2024-11-04 03:15 - INFO - 	 PR-AUC: 0.234
2024-11-04 03:15 - INFO - 	 Recall for 0.4 precision: 0.182
2024-11-04 03:15 - INFO - 	 Best Val. Loss: 0.219
2024-11-04 03:15 - INFO - 	 Best ROC-AUC: 0.774
2024-11-04 03:15 - INFO - 	 Best PR-AUC: 0.234
2024-11-04 03:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.741
2024-11-04 03:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-04 03:15 - INFO - 	 Best Recall for 0.4 precision: 0.182
2024-11-04 03:15 - INFO - ---------------------------------------------
2024-11-04 03:16 - INFO - ---------------------------------------------
2024-11-04 03:16 - INFO - Epoch: 03 | Time: 1m 41s
2024-11-04 03:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26697
2024-11-04 03:16 - INFO - 	 Train Loss: 0.185
2024-11-04 03:16 - INFO - 	 Val. Loss: 0.205
2024-11-04 03:16 - INFO - 	 ROC-AUC: 0.784
2024-11-04 03:16 - INFO - 	 PR-AUC: 0.267
2024-11-04 03:16 - INFO - 	 Recall for 0.4 precision: 0.211
2024-11-04 03:16 - INFO - 	 Best Val. Loss: 0.205
2024-11-04 03:16 - INFO - 	 Best ROC-AUC: 0.784
2024-11-04 03:16 - INFO - 	 Best PR-AUC: 0.267
2024-11-04 03:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 03:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-04 03:16 - INFO - 	 Best Recall for 0.4 precision: 0.211
2024-11-04 03:16 - INFO - ---------------------------------------------
2024-11-04 03:18 - INFO - ---------------------------------------------
2024-11-04 03:18 - INFO - Epoch: 04 | Time: 1m 44s
2024-11-04 03:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28175
2024-11-04 03:18 - INFO - 	 Train Loss: 0.172
2024-11-04 03:18 - INFO - 	 Val. Loss: 0.187
2024-11-04 03:18 - INFO - 	 ROC-AUC: 0.792
2024-11-04 03:18 - INFO - 	 PR-AUC: 0.282
2024-11-04 03:18 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-04 03:18 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 03:18 - INFO - 	 Best ROC-AUC: 0.792
2024-11-04 03:18 - INFO - 	 Best PR-AUC: 0.282
2024-11-04 03:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-04 03:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-04 03:18 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-04 03:18 - INFO - ---------------------------------------------
2024-11-04 03:20 - INFO - ---------------------------------------------
2024-11-04 03:20 - INFO - Epoch: 05 | Time: 1m 46s
2024-11-04 03:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28609
2024-11-04 03:20 - INFO - 	 Train Loss: 0.163
2024-11-04 03:20 - INFO - 	 Val. Loss: 0.188
2024-11-04 03:20 - INFO - 	 ROC-AUC: 0.795
2024-11-04 03:20 - INFO - 	 PR-AUC: 0.286
2024-11-04 03:20 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-04 03:20 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 03:20 - INFO - 	 Best ROC-AUC: 0.795
2024-11-04 03:20 - INFO - 	 Best PR-AUC: 0.286
2024-11-04 03:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-04 03:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-04 03:20 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-04 03:20 - INFO - ---------------------------------------------
2024-11-04 03:22 - INFO - ---------------------------------------------
2024-11-04 03:22 - INFO - Epoch: 06 | Time: 1m 48s
2024-11-04 03:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3455
2024-11-04 03:22 - INFO - 	 Train Loss: 0.159
2024-11-04 03:22 - INFO - 	 Val. Loss: 0.166
2024-11-04 03:22 - INFO - 	 ROC-AUC: 0.844
2024-11-04 03:22 - INFO - 	 PR-AUC: 0.345
2024-11-04 03:22 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-04 03:22 - INFO - 	 Best Val. Loss: 0.166
2024-11-04 03:22 - INFO - 	 Best ROC-AUC: 0.844
2024-11-04 03:22 - INFO - 	 Best PR-AUC: 0.345
2024-11-04 03:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.795
2024-11-04 03:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.222
2024-11-04 03:22 - INFO - 	 Best Recall for 0.4 precision: 0.341
2024-11-04 03:22 - INFO - ---------------------------------------------
2024-11-04 03:24 - INFO - ---------------------------------------------
2024-11-04 03:24 - INFO - Epoch: 07 | Time: 1m 48s
2024-11-04 03:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38907
2024-11-04 03:24 - INFO - 	 Train Loss: 0.151
2024-11-04 03:24 - INFO - 	 Val. Loss: 0.147
2024-11-04 03:24 - INFO - 	 ROC-AUC: 0.898
2024-11-04 03:24 - INFO - 	 PR-AUC: 0.389
2024-11-04 03:24 - INFO - 	 Recall for 0.4 precision: 0.475
2024-11-04 03:24 - INFO - 	 Best Val. Loss: 0.147
2024-11-04 03:24 - INFO - 	 Best ROC-AUC: 0.898
2024-11-04 03:24 - INFO - 	 Best PR-AUC: 0.389
2024-11-04 03:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.849
2024-11-04 03:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.273
2024-11-04 03:24 - INFO - 	 Best Recall for 0.4 precision: 0.475
2024-11-04 03:24 - INFO - ---------------------------------------------
2024-11-04 03:25 - INFO - ---------------------------------------------
2024-11-04 03:25 - INFO - Epoch: 08 | Time: 1m 49s
2024-11-04 03:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5051
2024-11-04 03:25 - INFO - 	 Train Loss: 0.134
2024-11-04 03:25 - INFO - 	 Val. Loss: 0.114
2024-11-04 03:25 - INFO - 	 ROC-AUC: 0.964
2024-11-04 03:25 - INFO - 	 PR-AUC: 0.505
2024-11-04 03:25 - INFO - 	 Recall for 0.4 precision: 0.834
2024-11-04 03:25 - INFO - 	 Best Val. Loss: 0.114
2024-11-04 03:25 - INFO - 	 Best ROC-AUC: 0.964
2024-11-04 03:25 - INFO - 	 Best PR-AUC: 0.505
2024-11-04 03:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-04 03:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.398
2024-11-04 03:25 - INFO - 	 Best Recall for 0.4 precision: 0.834
2024-11-04 03:25 - INFO - ---------------------------------------------
2024-11-04 03:27 - INFO - ---------------------------------------------
2024-11-04 03:27 - INFO - Epoch: 09 | Time: 1m 49s
2024-11-04 03:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59171
2024-11-04 03:27 - INFO - 	 Train Loss: 0.117
2024-11-04 03:27 - INFO - 	 Val. Loss: 0.113
2024-11-04 03:27 - INFO - 	 ROC-AUC: 0.969
2024-11-04 03:27 - INFO - 	 PR-AUC: 0.592
2024-11-04 03:27 - INFO - 	 Recall for 0.4 precision: 0.919
2024-11-04 03:27 - INFO - 	 Best Val. Loss: 0.113
2024-11-04 03:27 - INFO - 	 Best ROC-AUC: 0.969
2024-11-04 03:27 - INFO - 	 Best PR-AUC: 0.592
2024-11-04 03:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-04 03:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-11-04 03:27 - INFO - 	 Best Recall for 0.4 precision: 0.919
2024-11-04 03:27 - INFO - ---------------------------------------------
2024-11-04 03:29 - INFO - ---------------------------------------------
2024-11-04 03:29 - INFO - Epoch: 10 | Time: 1m 49s
2024-11-04 03:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59354
2024-11-04 03:29 - INFO - 	 Train Loss: 0.107
2024-11-04 03:29 - INFO - 	 Val. Loss: 0.122
2024-11-04 03:29 - INFO - 	 ROC-AUC: 0.960
2024-11-04 03:29 - INFO - 	 PR-AUC: 0.594
2024-11-04 03:29 - INFO - 	 Recall for 0.4 precision: 0.889
2024-11-04 03:29 - INFO - 	 Best Val. Loss: 0.113
2024-11-04 03:29 - INFO - 	 Best ROC-AUC: 0.969
2024-11-04 03:29 - INFO - 	 Best PR-AUC: 0.594
2024-11-04 03:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-04 03:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-11-04 03:29 - INFO - 	 Best Recall for 0.4 precision: 0.919
2024-11-04 03:29 - INFO - ---------------------------------------------
2024-11-04 03:32 - INFO - Fit the preprocessing pipeline
2024-11-04 03:32 - INFO - Training using device: mps
2024-11-04 03:32 - INFO - Creating generators
2024-11-04 03:32 - INFO - The model has 651,257 trainable parameters
2024-11-04 03:32 - INFO - * Model:
2024-11-04 03:32 - INFO - * -----------
2024-11-04 03:32 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 03:32 - INFO - * -----------
2024-11-04 03:32 - INFO - Evaluating model based on: aucpr
2024-11-04 03:32 - INFO - Training..

2024-11-04 03:33 - INFO - ---------------------------------------------
2024-11-04 03:33 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 03:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18078
2024-11-04 03:33 - INFO - 	 Train Loss: 0.257
2024-11-04 03:33 - INFO - 	 Val. Loss: 0.304
2024-11-04 03:33 - INFO - 	 ROC-AUC: 0.744
2024-11-04 03:33 - INFO - 	 PR-AUC: 0.181
2024-11-04 03:33 - INFO - 	 Recall for 0.4 precision: 0.075
2024-11-04 03:33 - INFO - 	 Best Val. Loss: 0.304
2024-11-04 03:33 - INFO - 	 Best ROC-AUC: 0.744
2024-11-04 03:33 - INFO - 	 Best PR-AUC: 0.181
2024-11-04 03:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.681
2024-11-04 03:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.104
2024-11-04 03:33 - INFO - 	 Best Recall for 0.4 precision: 0.075
2024-11-04 03:33 - INFO - ---------------------------------------------
2024-11-04 03:35 - INFO - ---------------------------------------------
2024-11-04 03:35 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 03:35 - INFO - 	 Train Loss: 0.209
2024-11-04 03:35 - INFO - 	 Val. Loss: 0.233
2024-11-04 03:35 - INFO - 	 ROC-AUC: 0.726
2024-11-04 03:35 - INFO - 	 PR-AUC: 0.178
2024-11-04 03:35 - INFO - 	 Recall for 0.4 precision: 0.143
2024-11-04 03:35 - INFO - 	 Best Val. Loss: 0.233
2024-11-04 03:35 - INFO - 	 Best ROC-AUC: 0.744
2024-11-04 03:35 - INFO - 	 Best PR-AUC: 0.181
2024-11-04 03:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.681
2024-11-04 03:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.104
2024-11-04 03:35 - INFO - 	 Best Recall for 0.4 precision: 0.143
2024-11-04 03:35 - INFO - ---------------------------------------------
2024-11-04 03:37 - INFO - ---------------------------------------------
2024-11-04 03:37 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-04 03:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23212
2024-11-04 03:37 - INFO - 	 Train Loss: 0.192
2024-11-04 03:37 - INFO - 	 Val. Loss: 0.230
2024-11-04 03:37 - INFO - 	 ROC-AUC: 0.770
2024-11-04 03:37 - INFO - 	 PR-AUC: 0.232
2024-11-04 03:37 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-04 03:37 - INFO - 	 Best Val. Loss: 0.230
2024-11-04 03:37 - INFO - 	 Best ROC-AUC: 0.770
2024-11-04 03:37 - INFO - 	 Best PR-AUC: 0.232
2024-11-04 03:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.739
2024-11-04 03:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 03:37 - INFO - 	 Best Recall for 0.4 precision: 0.163
2024-11-04 03:37 - INFO - ---------------------------------------------
2024-11-04 03:39 - INFO - ---------------------------------------------
2024-11-04 03:39 - INFO - Epoch: 04 | Time: 1m 42s
2024-11-04 03:39 - INFO - 	 Train Loss: 0.174
2024-11-04 03:39 - INFO - 	 Val. Loss: 0.206
2024-11-04 03:39 - INFO - 	 ROC-AUC: 0.785
2024-11-04 03:39 - INFO - 	 PR-AUC: 0.226
2024-11-04 03:39 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-04 03:39 - INFO - 	 Best Val. Loss: 0.206
2024-11-04 03:39 - INFO - 	 Best ROC-AUC: 0.785
2024-11-04 03:39 - INFO - 	 Best PR-AUC: 0.232
2024-11-04 03:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-04 03:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 03:39 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-04 03:39 - INFO - ---------------------------------------------
2024-11-04 03:40 - INFO - ---------------------------------------------
2024-11-04 03:40 - INFO - Epoch: 05 | Time: 1m 44s
2024-11-04 03:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29639
2024-11-04 03:40 - INFO - 	 Train Loss: 0.166
2024-11-04 03:40 - INFO - 	 Val. Loss: 0.189
2024-11-04 03:40 - INFO - 	 ROC-AUC: 0.809
2024-11-04 03:40 - INFO - 	 PR-AUC: 0.296
2024-11-04 03:40 - INFO - 	 Recall for 0.4 precision: 0.270
2024-11-04 03:40 - INFO - 	 Best Val. Loss: 0.189
2024-11-04 03:40 - INFO - 	 Best ROC-AUC: 0.809
2024-11-04 03:40 - INFO - 	 Best PR-AUC: 0.296
2024-11-04 03:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-04 03:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-04 03:40 - INFO - 	 Best Recall for 0.4 precision: 0.270
2024-11-04 03:40 - INFO - ---------------------------------------------
2024-11-04 03:42 - INFO - ---------------------------------------------
2024-11-04 03:42 - INFO - Epoch: 06 | Time: 1m 45s
2024-11-04 03:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30553
2024-11-04 03:42 - INFO - 	 Train Loss: 0.159
2024-11-04 03:42 - INFO - 	 Val. Loss: 0.180
2024-11-04 03:42 - INFO - 	 ROC-AUC: 0.800
2024-11-04 03:42 - INFO - 	 PR-AUC: 0.306
2024-11-04 03:42 - INFO - 	 Recall for 0.4 precision: 0.328
2024-11-04 03:42 - INFO - 	 Best Val. Loss: 0.180
2024-11-04 03:42 - INFO - 	 Best ROC-AUC: 0.809
2024-11-04 03:42 - INFO - 	 Best PR-AUC: 0.306
2024-11-04 03:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-04 03:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-04 03:42 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-04 03:42 - INFO - ---------------------------------------------
2024-11-04 03:44 - INFO - ---------------------------------------------
2024-11-04 03:44 - INFO - Epoch: 07 | Time: 1m 46s
2024-11-04 03:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30798
2024-11-04 03:44 - INFO - 	 Train Loss: 0.155
2024-11-04 03:44 - INFO - 	 Val. Loss: 0.172
2024-11-04 03:44 - INFO - 	 ROC-AUC: 0.812
2024-11-04 03:44 - INFO - 	 PR-AUC: 0.308
2024-11-04 03:44 - INFO - 	 Recall for 0.4 precision: 0.358
2024-11-04 03:44 - INFO - 	 Best Val. Loss: 0.172
2024-11-04 03:44 - INFO - 	 Best ROC-AUC: 0.812
2024-11-04 03:44 - INFO - 	 Best PR-AUC: 0.308
2024-11-04 03:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-04 03:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-04 03:44 - INFO - 	 Best Recall for 0.4 precision: 0.358
2024-11-04 03:44 - INFO - ---------------------------------------------
2024-11-04 03:46 - INFO - ---------------------------------------------
2024-11-04 03:46 - INFO - Epoch: 08 | Time: 1m 49s
2024-11-04 03:46 - INFO - 	 Train Loss: 0.153
2024-11-04 03:46 - INFO - 	 Val. Loss: 0.172
2024-11-04 03:46 - INFO - 	 ROC-AUC: 0.809
2024-11-04 03:46 - INFO - 	 PR-AUC: 0.300
2024-11-04 03:46 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-04 03:46 - INFO - 	 Best Val. Loss: 0.172
2024-11-04 03:46 - INFO - 	 Best ROC-AUC: 0.812
2024-11-04 03:46 - INFO - 	 Best PR-AUC: 0.308
2024-11-04 03:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-04 03:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-04 03:46 - INFO - 	 Best Recall for 0.4 precision: 0.358
2024-11-04 03:46 - INFO - ---------------------------------------------
2024-11-04 03:47 - INFO - ---------------------------------------------
2024-11-04 03:47 - INFO - Epoch: 09 | Time: 1m 50s
2024-11-04 03:47 - INFO - 	 Train Loss: 0.151
2024-11-04 03:47 - INFO - 	 Val. Loss: 0.171
2024-11-04 03:47 - INFO - 	 ROC-AUC: 0.827
2024-11-04 03:47 - INFO - 	 PR-AUC: 0.293
2024-11-04 03:47 - INFO - 	 Recall for 0.4 precision: 0.304
2024-11-04 03:47 - INFO - 	 Best Val. Loss: 0.171
2024-11-04 03:47 - INFO - 	 Best ROC-AUC: 0.827
2024-11-04 03:47 - INFO - 	 Best PR-AUC: 0.308
2024-11-04 03:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-04 03:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-04 03:47 - INFO - 	 Best Recall for 0.4 precision: 0.358
2024-11-04 03:47 - INFO - ---------------------------------------------
2024-11-04 03:49 - INFO - ---------------------------------------------
2024-11-04 03:49 - INFO - Epoch: 10 | Time: 1m 49s
2024-11-04 03:49 - INFO - 	 Train Loss: 0.149
2024-11-04 03:49 - INFO - 	 Val. Loss: 0.164
2024-11-04 03:49 - INFO - 	 ROC-AUC: 0.827
2024-11-04 03:49 - INFO - 	 PR-AUC: 0.281
2024-11-04 03:49 - INFO - 	 Recall for 0.4 precision: 0.325
2024-11-04 03:49 - INFO - 	 Best Val. Loss: 0.164
2024-11-04 03:49 - INFO - 	 Best ROC-AUC: 0.827
2024-11-04 03:49 - INFO - 	 Best PR-AUC: 0.308
2024-11-04 03:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-04 03:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-04 03:49 - INFO - 	 Best Recall for 0.4 precision: 0.358
2024-11-04 03:49 - INFO - ---------------------------------------------
2024-11-04 03:52 - INFO - Fit the preprocessing pipeline
2024-11-04 03:52 - INFO - Training using device: mps
2024-11-04 03:52 - INFO - Creating generators
2024-11-04 03:52 - INFO - The model has 651,257 trainable parameters
2024-11-04 03:52 - INFO - * Model:
2024-11-04 03:52 - INFO - * -----------
2024-11-04 03:52 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 03:52 - INFO - * -----------
2024-11-04 03:52 - INFO - Evaluating model based on: aucpr
2024-11-04 03:52 - INFO - Training..

2024-11-04 03:54 - INFO - ---------------------------------------------
2024-11-04 03:54 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 03:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22179
2024-11-04 03:54 - INFO - 	 Train Loss: 0.256
2024-11-04 03:54 - INFO - 	 Val. Loss: 0.297
2024-11-04 03:54 - INFO - 	 ROC-AUC: 0.735
2024-11-04 03:54 - INFO - 	 PR-AUC: 0.222
2024-11-04 03:54 - INFO - 	 Recall for 0.4 precision: 0.133
2024-11-04 03:54 - INFO - 	 Best Val. Loss: 0.297
2024-11-04 03:54 - INFO - 	 Best ROC-AUC: 0.735
2024-11-04 03:54 - INFO - 	 Best PR-AUC: 0.222
2024-11-04 03:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.726
2024-11-04 03:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-04 03:54 - INFO - 	 Best Recall for 0.4 precision: 0.133
2024-11-04 03:54 - INFO - ---------------------------------------------
2024-11-04 03:55 - INFO - ---------------------------------------------
2024-11-04 03:55 - INFO - Epoch: 02 | Time: 1m 42s
2024-11-04 03:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23459
2024-11-04 03:55 - INFO - 	 Train Loss: 0.206
2024-11-04 03:55 - INFO - 	 Val. Loss: 0.255
2024-11-04 03:55 - INFO - 	 ROC-AUC: 0.750
2024-11-04 03:55 - INFO - 	 PR-AUC: 0.235
2024-11-04 03:55 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-04 03:55 - INFO - 	 Best Val. Loss: 0.255
2024-11-04 03:55 - INFO - 	 Best ROC-AUC: 0.750
2024-11-04 03:55 - INFO - 	 Best PR-AUC: 0.235
2024-11-04 03:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-04 03:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-04 03:55 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-04 03:55 - INFO - ---------------------------------------------
2024-11-04 03:57 - INFO - ---------------------------------------------
2024-11-04 03:57 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-04 03:57 - INFO - 	 Train Loss: 0.184
2024-11-04 03:57 - INFO - 	 Val. Loss: 0.227
2024-11-04 03:57 - INFO - 	 ROC-AUC: 0.760
2024-11-04 03:57 - INFO - 	 PR-AUC: 0.230
2024-11-04 03:57 - INFO - 	 Recall for 0.4 precision: 0.137
2024-11-04 03:57 - INFO - 	 Best Val. Loss: 0.227
2024-11-04 03:57 - INFO - 	 Best ROC-AUC: 0.760
2024-11-04 03:57 - INFO - 	 Best PR-AUC: 0.235
2024-11-04 03:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.704
2024-11-04 03:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-04 03:57 - INFO - 	 Best Recall for 0.4 precision: 0.231
2024-11-04 03:57 - INFO - ---------------------------------------------
2024-11-04 03:59 - INFO - ---------------------------------------------
2024-11-04 03:59 - INFO - Epoch: 04 | Time: 1m 43s
2024-11-04 03:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27395
2024-11-04 03:59 - INFO - 	 Train Loss: 0.170
2024-11-04 03:59 - INFO - 	 Val. Loss: 0.196
2024-11-04 03:59 - INFO - 	 ROC-AUC: 0.779
2024-11-04 03:59 - INFO - 	 PR-AUC: 0.274
2024-11-04 03:59 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-04 03:59 - INFO - 	 Best Val. Loss: 0.196
2024-11-04 03:59 - INFO - 	 Best ROC-AUC: 0.779
2024-11-04 03:59 - INFO - 	 Best PR-AUC: 0.274
2024-11-04 03:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-04 03:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 03:59 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-04 03:59 - INFO - ---------------------------------------------
2024-11-04 04:01 - INFO - ---------------------------------------------
2024-11-04 04:01 - INFO - Epoch: 05 | Time: 1m 45s
2024-11-04 04:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2793
2024-11-04 04:01 - INFO - 	 Train Loss: 0.163
2024-11-04 04:01 - INFO - 	 Val. Loss: 0.190
2024-11-04 04:01 - INFO - 	 ROC-AUC: 0.780
2024-11-04 04:01 - INFO - 	 PR-AUC: 0.279
2024-11-04 04:01 - INFO - 	 Recall for 0.4 precision: 0.302
2024-11-04 04:01 - INFO - 	 Best Val. Loss: 0.190
2024-11-04 04:01 - INFO - 	 Best ROC-AUC: 0.780
2024-11-04 04:01 - INFO - 	 Best PR-AUC: 0.279
2024-11-04 04:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 04:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-04 04:01 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-04 04:01 - INFO - ---------------------------------------------
2024-11-04 04:02 - INFO - ---------------------------------------------
2024-11-04 04:02 - INFO - Epoch: 06 | Time: 1m 47s
2024-11-04 04:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29241
2024-11-04 04:02 - INFO - 	 Train Loss: 0.158
2024-11-04 04:02 - INFO - 	 Val. Loss: 0.175
2024-11-04 04:02 - INFO - 	 ROC-AUC: 0.800
2024-11-04 04:02 - INFO - 	 PR-AUC: 0.292
2024-11-04 04:02 - INFO - 	 Recall for 0.4 precision: 0.302
2024-11-04 04:02 - INFO - 	 Best Val. Loss: 0.175
2024-11-04 04:02 - INFO - 	 Best ROC-AUC: 0.800
2024-11-04 04:02 - INFO - 	 Best PR-AUC: 0.292
2024-11-04 04:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-04 04:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-04 04:02 - INFO - 	 Best Recall for 0.4 precision: 0.302
2024-11-04 04:02 - INFO - ---------------------------------------------
2024-11-04 04:04 - INFO - ---------------------------------------------
2024-11-04 04:04 - INFO - Epoch: 07 | Time: 1m 48s
2024-11-04 04:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.323
2024-11-04 04:04 - INFO - 	 Train Loss: 0.154
2024-11-04 04:04 - INFO - 	 Val. Loss: 0.161
2024-11-04 04:04 - INFO - 	 ROC-AUC: 0.827
2024-11-04 04:04 - INFO - 	 PR-AUC: 0.323
2024-11-04 04:04 - INFO - 	 Recall for 0.4 precision: 0.317
2024-11-04 04:04 - INFO - 	 Best Val. Loss: 0.161
2024-11-04 04:04 - INFO - 	 Best ROC-AUC: 0.827
2024-11-04 04:04 - INFO - 	 Best PR-AUC: 0.323
2024-11-04 04:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.776
2024-11-04 04:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-04 04:04 - INFO - 	 Best Recall for 0.4 precision: 0.317
2024-11-04 04:04 - INFO - ---------------------------------------------
2024-11-04 04:06 - INFO - ---------------------------------------------
2024-11-04 04:06 - INFO - Epoch: 08 | Time: 1m 48s
2024-11-04 04:06 - INFO - 	 Train Loss: 0.152
2024-11-04 04:06 - INFO - 	 Val. Loss: 0.179
2024-11-04 04:06 - INFO - 	 ROC-AUC: 0.911
2024-11-04 04:06 - INFO - 	 PR-AUC: 0.304
2024-11-04 04:06 - INFO - 	 Recall for 0.4 precision: 0.319
2024-11-04 04:06 - INFO - 	 Best Val. Loss: 0.161
2024-11-04 04:06 - INFO - 	 Best ROC-AUC: 0.911
2024-11-04 04:06 - INFO - 	 Best PR-AUC: 0.323
2024-11-04 04:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.886
2024-11-04 04:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-04 04:06 - INFO - 	 Best Recall for 0.4 precision: 0.319
2024-11-04 04:06 - INFO - ---------------------------------------------
2024-11-04 04:08 - INFO - ---------------------------------------------
2024-11-04 04:08 - INFO - Epoch: 09 | Time: 1m 48s
2024-11-04 04:08 - INFO - 	 Train Loss: 0.129
2024-11-04 04:08 - INFO - 	 Val. Loss: 0.135
2024-11-04 04:08 - INFO - 	 ROC-AUC: 0.912
2024-11-04 04:08 - INFO - 	 PR-AUC: 0.303
2024-11-04 04:08 - INFO - 	 Recall for 0.4 precision: 0.137
2024-11-04 04:08 - INFO - 	 Best Val. Loss: 0.135
2024-11-04 04:08 - INFO - 	 Best ROC-AUC: 0.912
2024-11-04 04:08 - INFO - 	 Best PR-AUC: 0.323
2024-11-04 04:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-11-04 04:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-04 04:08 - INFO - 	 Best Recall for 0.4 precision: 0.319
2024-11-04 04:08 - INFO - ---------------------------------------------
2024-11-04 04:10 - INFO - ---------------------------------------------
2024-11-04 04:10 - INFO - Epoch: 10 | Time: 1m 48s
2024-11-04 04:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35883
2024-11-04 04:10 - INFO - 	 Train Loss: 0.114
2024-11-04 04:10 - INFO - 	 Val. Loss: 0.138
2024-11-04 04:10 - INFO - 	 ROC-AUC: 0.902
2024-11-04 04:10 - INFO - 	 PR-AUC: 0.359
2024-11-04 04:10 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-04 04:10 - INFO - 	 Best Val. Loss: 0.135
2024-11-04 04:10 - INFO - 	 Best ROC-AUC: 0.912
2024-11-04 04:10 - INFO - 	 Best PR-AUC: 0.359
2024-11-04 04:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-11-04 04:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.208
2024-11-04 04:10 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-04 04:10 - INFO - ---------------------------------------------
2024-11-04 04:12 - INFO - Fit the preprocessing pipeline
2024-11-04 04:12 - INFO - Training using device: mps
2024-11-04 04:12 - INFO - Creating generators
2024-11-04 04:12 - INFO - The model has 651,257 trainable parameters
2024-11-04 04:12 - INFO - * Model:
2024-11-04 04:12 - INFO - * -----------
2024-11-04 04:12 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 04:12 - INFO - * -----------
2024-11-04 04:12 - INFO - Evaluating model based on: aucpr
2024-11-04 04:12 - INFO - Training..

2024-11-04 04:14 - INFO - ---------------------------------------------
2024-11-04 04:14 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 04:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16834
2024-11-04 04:14 - INFO - 	 Train Loss: 0.253
2024-11-04 04:14 - INFO - 	 Val. Loss: 0.299
2024-11-04 04:14 - INFO - 	 ROC-AUC: 0.742
2024-11-04 04:14 - INFO - 	 PR-AUC: 0.168
2024-11-04 04:14 - INFO - 	 Recall for 0.4 precision: 0.042
2024-11-04 04:14 - INFO - 	 Best Val. Loss: 0.299
2024-11-04 04:14 - INFO - 	 Best ROC-AUC: 0.742
2024-11-04 04:14 - INFO - 	 Best PR-AUC: 0.168
2024-11-04 04:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-11-04 04:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.115
2024-11-04 04:14 - INFO - 	 Best Recall for 0.4 precision: 0.042
2024-11-04 04:14 - INFO - ---------------------------------------------
2024-11-04 04:16 - INFO - ---------------------------------------------
2024-11-04 04:16 - INFO - Epoch: 02 | Time: 1m 43s
2024-11-04 04:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21622
2024-11-04 04:16 - INFO - 	 Train Loss: 0.205
2024-11-04 04:16 - INFO - 	 Val. Loss: 0.232
2024-11-04 04:16 - INFO - 	 ROC-AUC: 0.762
2024-11-04 04:16 - INFO - 	 PR-AUC: 0.216
2024-11-04 04:16 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-04 04:16 - INFO - 	 Best Val. Loss: 0.232
2024-11-04 04:16 - INFO - 	 Best ROC-AUC: 0.762
2024-11-04 04:16 - INFO - 	 Best PR-AUC: 0.216
2024-11-04 04:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-04 04:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-04 04:16 - INFO - 	 Best Recall for 0.4 precision: 0.163
2024-11-04 04:16 - INFO - ---------------------------------------------
2024-11-04 04:17 - INFO - ---------------------------------------------
2024-11-04 04:17 - INFO - Epoch: 03 | Time: 1m 43s
2024-11-04 04:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23627
2024-11-04 04:17 - INFO - 	 Train Loss: 0.186
2024-11-04 04:17 - INFO - 	 Val. Loss: 0.225
2024-11-04 04:17 - INFO - 	 ROC-AUC: 0.743
2024-11-04 04:17 - INFO - 	 PR-AUC: 0.236
2024-11-04 04:17 - INFO - 	 Recall for 0.4 precision: 0.159
2024-11-04 04:17 - INFO - 	 Best Val. Loss: 0.225
2024-11-04 04:17 - INFO - 	 Best ROC-AUC: 0.762
2024-11-04 04:17 - INFO - 	 Best PR-AUC: 0.236
2024-11-04 04:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-04 04:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.124
2024-11-04 04:17 - INFO - 	 Best Recall for 0.4 precision: 0.163
2024-11-04 04:17 - INFO - ---------------------------------------------
2024-11-04 04:19 - INFO - ---------------------------------------------
2024-11-04 04:19 - INFO - Epoch: 04 | Time: 1m 43s
2024-11-04 04:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25209
2024-11-04 04:19 - INFO - 	 Train Loss: 0.176
2024-11-04 04:19 - INFO - 	 Val. Loss: 0.206
2024-11-04 04:19 - INFO - 	 ROC-AUC: 0.802
2024-11-04 04:19 - INFO - 	 PR-AUC: 0.252
2024-11-04 04:19 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-04 04:19 - INFO - 	 Best Val. Loss: 0.206
2024-11-04 04:19 - INFO - 	 Best ROC-AUC: 0.802
2024-11-04 04:19 - INFO - 	 Best PR-AUC: 0.252
2024-11-04 04:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-04 04:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.140
2024-11-04 04:19 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-04 04:19 - INFO - ---------------------------------------------
2024-11-04 04:21 - INFO - ---------------------------------------------
2024-11-04 04:21 - INFO - Epoch: 05 | Time: 1m 45s
2024-11-04 04:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30856
2024-11-04 04:21 - INFO - 	 Train Loss: 0.165
2024-11-04 04:21 - INFO - 	 Val. Loss: 0.187
2024-11-04 04:21 - INFO - 	 ROC-AUC: 0.811
2024-11-04 04:21 - INFO - 	 PR-AUC: 0.309
2024-11-04 04:21 - INFO - 	 Recall for 0.4 precision: 0.361
2024-11-04 04:21 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 04:21 - INFO - 	 Best ROC-AUC: 0.811
2024-11-04 04:21 - INFO - 	 Best PR-AUC: 0.309
2024-11-04 04:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.766
2024-11-04 04:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-04 04:21 - INFO - 	 Best Recall for 0.4 precision: 0.361
2024-11-04 04:21 - INFO - ---------------------------------------------
2024-11-04 04:23 - INFO - ---------------------------------------------
2024-11-04 04:23 - INFO - Epoch: 06 | Time: 1m 49s
2024-11-04 04:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31696
2024-11-04 04:23 - INFO - 	 Train Loss: 0.159
2024-11-04 04:23 - INFO - 	 Val. Loss: 0.171
2024-11-04 04:23 - INFO - 	 ROC-AUC: 0.820
2024-11-04 04:23 - INFO - 	 PR-AUC: 0.317
2024-11-04 04:23 - INFO - 	 Recall for 0.4 precision: 0.332
2024-11-04 04:23 - INFO - 	 Best Val. Loss: 0.171
2024-11-04 04:23 - INFO - 	 Best ROC-AUC: 0.820
2024-11-04 04:23 - INFO - 	 Best PR-AUC: 0.317
2024-11-04 04:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-04 04:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-04 04:23 - INFO - 	 Best Recall for 0.4 precision: 0.361
2024-11-04 04:23 - INFO - ---------------------------------------------
2024-11-04 04:25 - INFO - ---------------------------------------------
2024-11-04 04:25 - INFO - Epoch: 07 | Time: 1m 49s
2024-11-04 04:25 - INFO - 	 Train Loss: 0.151
2024-11-04 04:25 - INFO - 	 Val. Loss: 0.180
2024-11-04 04:25 - INFO - 	 ROC-AUC: 0.858
2024-11-04 04:25 - INFO - 	 PR-AUC: 0.307
2024-11-04 04:25 - INFO - 	 Recall for 0.4 precision: 0.364
2024-11-04 04:25 - INFO - 	 Best Val. Loss: 0.171
2024-11-04 04:25 - INFO - 	 Best ROC-AUC: 0.858
2024-11-04 04:25 - INFO - 	 Best PR-AUC: 0.317
2024-11-04 04:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.811
2024-11-04 04:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-04 04:25 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-04 04:25 - INFO - ---------------------------------------------
2024-11-04 04:26 - INFO - ---------------------------------------------
2024-11-04 04:26 - INFO - Epoch: 08 | Time: 1m 50s
2024-11-04 04:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3852
2024-11-04 04:26 - INFO - 	 Train Loss: 0.130
2024-11-04 04:26 - INFO - 	 Val. Loss: 0.129
2024-11-04 04:26 - INFO - 	 ROC-AUC: 0.943
2024-11-04 04:26 - INFO - 	 PR-AUC: 0.385
2024-11-04 04:26 - INFO - 	 Recall for 0.4 precision: 0.436
2024-11-04 04:26 - INFO - 	 Best Val. Loss: 0.129
2024-11-04 04:26 - INFO - 	 Best ROC-AUC: 0.943
2024-11-04 04:26 - INFO - 	 Best PR-AUC: 0.385
2024-11-04 04:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-04 04:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.256
2024-11-04 04:26 - INFO - 	 Best Recall for 0.4 precision: 0.436
2024-11-04 04:26 - INFO - ---------------------------------------------
2024-11-04 04:28 - INFO - ---------------------------------------------
2024-11-04 04:28 - INFO - Epoch: 09 | Time: 1m 49s
2024-11-04 04:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51693
2024-11-04 04:28 - INFO - 	 Train Loss: 0.117
2024-11-04 04:28 - INFO - 	 Val. Loss: 0.102
2024-11-04 04:28 - INFO - 	 ROC-AUC: 0.965
2024-11-04 04:28 - INFO - 	 PR-AUC: 0.517
2024-11-04 04:28 - INFO - 	 Recall for 0.4 precision: 0.881
2024-11-04 04:28 - INFO - 	 Best Val. Loss: 0.102
2024-11-04 04:28 - INFO - 	 Best ROC-AUC: 0.965
2024-11-04 04:28 - INFO - 	 Best PR-AUC: 0.517
2024-11-04 04:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-04 04:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.363
2024-11-04 04:28 - INFO - 	 Best Recall for 0.4 precision: 0.881
2024-11-04 04:28 - INFO - ---------------------------------------------
2024-11-04 04:30 - INFO - ---------------------------------------------
2024-11-04 04:30 - INFO - Epoch: 10 | Time: 1m 49s
2024-11-04 04:30 - INFO - 	 Train Loss: 0.106
2024-11-04 04:30 - INFO - 	 Val. Loss: 0.143
2024-11-04 04:30 - INFO - 	 ROC-AUC: 0.927
2024-11-04 04:30 - INFO - 	 PR-AUC: 0.323
2024-11-04 04:30 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-04 04:30 - INFO - 	 Best Val. Loss: 0.102
2024-11-04 04:30 - INFO - 	 Best ROC-AUC: 0.965
2024-11-04 04:30 - INFO - 	 Best PR-AUC: 0.517
2024-11-04 04:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-04 04:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.363
2024-11-04 04:30 - INFO - 	 Best Recall for 0.4 precision: 0.881
2024-11-04 04:30 - INFO - ---------------------------------------------
2024-11-04 04:33 - INFO - Fit the preprocessing pipeline
2024-11-04 04:33 - INFO - Training using device: mps
2024-11-04 04:33 - INFO - Creating generators
2024-11-04 04:33 - INFO - The model has 651,257 trainable parameters
2024-11-04 04:33 - INFO - * Model:
2024-11-04 04:33 - INFO - * -----------
2024-11-04 04:33 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 04:33 - INFO - * -----------
2024-11-04 04:33 - INFO - Evaluating model based on: aucpr
2024-11-04 04:33 - INFO - Training..

2024-11-04 04:34 - INFO - ---------------------------------------------
2024-11-04 04:34 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 04:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11102
2024-11-04 04:34 - INFO - 	 Train Loss: 0.255
2024-11-04 04:34 - INFO - 	 Val. Loss: 0.293
2024-11-04 04:34 - INFO - 	 ROC-AUC: 0.702
2024-11-04 04:34 - INFO - 	 PR-AUC: 0.111
2024-11-04 04:34 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 04:34 - INFO - 	 Best Val. Loss: 0.293
2024-11-04 04:34 - INFO - 	 Best ROC-AUC: 0.702
2024-11-04 04:34 - INFO - 	 Best PR-AUC: 0.111
2024-11-04 04:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.679
2024-11-04 04:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.087
2024-11-04 04:34 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-04 04:34 - INFO - ---------------------------------------------
2024-11-04 04:36 - INFO - ---------------------------------------------
2024-11-04 04:36 - INFO - Epoch: 02 | Time: 1m 42s
2024-11-04 04:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23988
2024-11-04 04:36 - INFO - 	 Train Loss: 0.205
2024-11-04 04:36 - INFO - 	 Val. Loss: 0.224
2024-11-04 04:36 - INFO - 	 ROC-AUC: 0.782
2024-11-04 04:36 - INFO - 	 PR-AUC: 0.240
2024-11-04 04:36 - INFO - 	 Recall for 0.4 precision: 0.140
2024-11-04 04:36 - INFO - 	 Best Val. Loss: 0.224
2024-11-04 04:36 - INFO - 	 Best ROC-AUC: 0.782
2024-11-04 04:36 - INFO - 	 Best PR-AUC: 0.240
2024-11-04 04:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-04 04:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 04:36 - INFO - 	 Best Recall for 0.4 precision: 0.140
2024-11-04 04:36 - INFO - ---------------------------------------------
2024-11-04 04:38 - INFO - ---------------------------------------------
2024-11-04 04:38 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-04 04:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24674
2024-11-04 04:38 - INFO - 	 Train Loss: 0.184
2024-11-04 04:38 - INFO - 	 Val. Loss: 0.205
2024-11-04 04:38 - INFO - 	 ROC-AUC: 0.774
2024-11-04 04:38 - INFO - 	 PR-AUC: 0.247
2024-11-04 04:38 - INFO - 	 Recall for 0.4 precision: 0.200
2024-11-04 04:38 - INFO - 	 Best Val. Loss: 0.205
2024-11-04 04:38 - INFO - 	 Best ROC-AUC: 0.782
2024-11-04 04:38 - INFO - 	 Best PR-AUC: 0.247
2024-11-04 04:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-04 04:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-04 04:38 - INFO - 	 Best Recall for 0.4 precision: 0.200
2024-11-04 04:38 - INFO - ---------------------------------------------
2024-11-04 04:40 - INFO - ---------------------------------------------
2024-11-04 04:40 - INFO - Epoch: 04 | Time: 1m 42s
2024-11-04 04:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27257
2024-11-04 04:40 - INFO - 	 Train Loss: 0.170
2024-11-04 04:40 - INFO - 	 Val. Loss: 0.187
2024-11-04 04:40 - INFO - 	 ROC-AUC: 0.787
2024-11-04 04:40 - INFO - 	 PR-AUC: 0.273
2024-11-04 04:40 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-04 04:40 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 04:40 - INFO - 	 Best ROC-AUC: 0.787
2024-11-04 04:40 - INFO - 	 Best PR-AUC: 0.273
2024-11-04 04:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 04:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-04 04:40 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-04 04:40 - INFO - ---------------------------------------------
2024-11-04 04:41 - INFO - ---------------------------------------------
2024-11-04 04:41 - INFO - Epoch: 05 | Time: 1m 45s
2024-11-04 04:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29598
2024-11-04 04:41 - INFO - 	 Train Loss: 0.162
2024-11-04 04:41 - INFO - 	 Val. Loss: 0.181
2024-11-04 04:41 - INFO - 	 ROC-AUC: 0.801
2024-11-04 04:41 - INFO - 	 PR-AUC: 0.296
2024-11-04 04:41 - INFO - 	 Recall for 0.4 precision: 0.299
2024-11-04 04:41 - INFO - 	 Best Val. Loss: 0.181
2024-11-04 04:41 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 04:41 - INFO - 	 Best PR-AUC: 0.296
2024-11-04 04:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-04 04:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-04 04:41 - INFO - 	 Best Recall for 0.4 precision: 0.299
2024-11-04 04:41 - INFO - ---------------------------------------------
2024-11-04 04:43 - INFO - ---------------------------------------------
2024-11-04 04:43 - INFO - Epoch: 06 | Time: 1m 45s
2024-11-04 04:43 - INFO - 	 Train Loss: 0.157
2024-11-04 04:43 - INFO - 	 Val. Loss: 0.176
2024-11-04 04:43 - INFO - 	 ROC-AUC: 0.793
2024-11-04 04:43 - INFO - 	 PR-AUC: 0.289
2024-11-04 04:43 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-04 04:43 - INFO - 	 Best Val. Loss: 0.176
2024-11-04 04:43 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 04:43 - INFO - 	 Best PR-AUC: 0.296
2024-11-04 04:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-04 04:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-04 04:43 - INFO - 	 Best Recall for 0.4 precision: 0.299
2024-11-04 04:43 - INFO - ---------------------------------------------
2024-11-04 04:45 - INFO - ---------------------------------------------
2024-11-04 04:45 - INFO - Epoch: 07 | Time: 1m 48s
2024-11-04 04:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34436
2024-11-04 04:45 - INFO - 	 Train Loss: 0.153
2024-11-04 04:45 - INFO - 	 Val. Loss: 0.162
2024-11-04 04:45 - INFO - 	 ROC-AUC: 0.851
2024-11-04 04:45 - INFO - 	 PR-AUC: 0.344
2024-11-04 04:45 - INFO - 	 Recall for 0.4 precision: 0.348
2024-11-04 04:45 - INFO - 	 Best Val. Loss: 0.162
2024-11-04 04:45 - INFO - 	 Best ROC-AUC: 0.851
2024-11-04 04:45 - INFO - 	 Best PR-AUC: 0.344
2024-11-04 04:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.799
2024-11-04 04:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.173
2024-11-04 04:45 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-04 04:45 - INFO - ---------------------------------------------
2024-11-04 04:47 - INFO - ---------------------------------------------
2024-11-04 04:47 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-04 04:47 - INFO - 	 Train Loss: 0.140
2024-11-04 04:47 - INFO - 	 Val. Loss: 0.184
2024-11-04 04:47 - INFO - 	 ROC-AUC: 0.910
2024-11-04 04:47 - INFO - 	 PR-AUC: 0.326
2024-11-04 04:47 - INFO - 	 Recall for 0.4 precision: 0.341
2024-11-04 04:47 - INFO - 	 Best Val. Loss: 0.162
2024-11-04 04:47 - INFO - 	 Best ROC-AUC: 0.910
2024-11-04 04:47 - INFO - 	 Best PR-AUC: 0.344
2024-11-04 04:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.889
2024-11-04 04:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.173
2024-11-04 04:47 - INFO - 	 Best Recall for 0.4 precision: 0.348
2024-11-04 04:47 - INFO - ---------------------------------------------
2024-11-04 04:49 - INFO - ---------------------------------------------
2024-11-04 04:49 - INFO - Epoch: 09 | Time: 1m 50s
2024-11-04 04:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52508
2024-11-04 04:49 - INFO - 	 Train Loss: 0.114
2024-11-04 04:49 - INFO - 	 Val. Loss: 0.115
2024-11-04 04:49 - INFO - 	 ROC-AUC: 0.962
2024-11-04 04:49 - INFO - 	 PR-AUC: 0.525
2024-11-04 04:49 - INFO - 	 Recall for 0.4 precision: 0.881
2024-11-04 04:49 - INFO - 	 Best Val. Loss: 0.115
2024-11-04 04:49 - INFO - 	 Best ROC-AUC: 0.962
2024-11-04 04:49 - INFO - 	 Best PR-AUC: 0.525
2024-11-04 04:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-04 04:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.375
2024-11-04 04:49 - INFO - 	 Best Recall for 0.4 precision: 0.881
2024-11-04 04:49 - INFO - ---------------------------------------------
2024-11-04 04:51 - INFO - ---------------------------------------------
2024-11-04 04:51 - INFO - Epoch: 10 | Time: 1m 49s
2024-11-04 04:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58416
2024-11-04 04:51 - INFO - 	 Train Loss: 0.108
2024-11-04 04:51 - INFO - 	 Val. Loss: 0.114
2024-11-04 04:51 - INFO - 	 ROC-AUC: 0.956
2024-11-04 04:51 - INFO - 	 PR-AUC: 0.584
2024-11-04 04:51 - INFO - 	 Recall for 0.4 precision: 0.891
2024-11-04 04:51 - INFO - 	 Best Val. Loss: 0.114
2024-11-04 04:51 - INFO - 	 Best ROC-AUC: 0.962
2024-11-04 04:51 - INFO - 	 Best PR-AUC: 0.584
2024-11-04 04:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-04 04:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.394
2024-11-04 04:51 - INFO - 	 Best Recall for 0.4 precision: 0.891
2024-11-04 04:51 - INFO - ---------------------------------------------
2024-11-04 04:53 - INFO - Fit the preprocessing pipeline
2024-11-04 04:53 - INFO - Training using device: mps
2024-11-04 04:53 - INFO - Creating generators
2024-11-04 04:53 - INFO - The model has 651,257 trainable parameters
2024-11-04 04:53 - INFO - * Model:
2024-11-04 04:53 - INFO - * -----------
2024-11-04 04:53 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 04:53 - INFO - * -----------
2024-11-04 04:53 - INFO - Evaluating model based on: aucpr
2024-11-04 04:53 - INFO - Training..

2024-11-04 04:55 - INFO - ---------------------------------------------
2024-11-04 04:55 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 04:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18247
2024-11-04 04:55 - INFO - 	 Train Loss: 0.252
2024-11-04 04:55 - INFO - 	 Val. Loss: 0.273
2024-11-04 04:55 - INFO - 	 ROC-AUC: 0.755
2024-11-04 04:55 - INFO - 	 PR-AUC: 0.182
2024-11-04 04:55 - INFO - 	 Recall for 0.4 precision: 0.068
2024-11-04 04:55 - INFO - 	 Best Val. Loss: 0.273
2024-11-04 04:55 - INFO - 	 Best ROC-AUC: 0.755
2024-11-04 04:55 - INFO - 	 Best PR-AUC: 0.182
2024-11-04 04:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-04 04:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-04 04:55 - INFO - 	 Best Recall for 0.4 precision: 0.068
2024-11-04 04:55 - INFO - ---------------------------------------------
2024-11-04 04:57 - INFO - ---------------------------------------------
2024-11-04 04:57 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 04:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24299
2024-11-04 04:57 - INFO - 	 Train Loss: 0.203
2024-11-04 04:57 - INFO - 	 Val. Loss: 0.236
2024-11-04 04:57 - INFO - 	 ROC-AUC: 0.770
2024-11-04 04:57 - INFO - 	 PR-AUC: 0.243
2024-11-04 04:57 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-04 04:57 - INFO - 	 Best Val. Loss: 0.236
2024-11-04 04:57 - INFO - 	 Best ROC-AUC: 0.770
2024-11-04 04:57 - INFO - 	 Best PR-AUC: 0.243
2024-11-04 04:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-04 04:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-04 04:57 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-04 04:57 - INFO - ---------------------------------------------
2024-11-04 04:58 - INFO - ---------------------------------------------
2024-11-04 04:58 - INFO - Epoch: 03 | Time: 1m 42s
2024-11-04 04:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25728
2024-11-04 04:58 - INFO - 	 Train Loss: 0.185
2024-11-04 04:58 - INFO - 	 Val. Loss: 0.206
2024-11-04 04:58 - INFO - 	 ROC-AUC: 0.789
2024-11-04 04:58 - INFO - 	 PR-AUC: 0.257
2024-11-04 04:58 - INFO - 	 Recall for 0.4 precision: 0.259
2024-11-04 04:58 - INFO - 	 Best Val. Loss: 0.206
2024-11-04 04:58 - INFO - 	 Best ROC-AUC: 0.789
2024-11-04 04:58 - INFO - 	 Best PR-AUC: 0.257
2024-11-04 04:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.741
2024-11-04 04:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 04:58 - INFO - 	 Best Recall for 0.4 precision: 0.259
2024-11-04 04:58 - INFO - ---------------------------------------------
2024-11-04 05:00 - INFO - ---------------------------------------------
2024-11-04 05:00 - INFO - Epoch: 04 | Time: 1m 42s
2024-11-04 05:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27435
2024-11-04 05:00 - INFO - 	 Train Loss: 0.171
2024-11-04 05:00 - INFO - 	 Val. Loss: 0.196
2024-11-04 05:00 - INFO - 	 ROC-AUC: 0.797
2024-11-04 05:00 - INFO - 	 PR-AUC: 0.274
2024-11-04 05:00 - INFO - 	 Recall for 0.4 precision: 0.195
2024-11-04 05:00 - INFO - 	 Best Val. Loss: 0.196
2024-11-04 05:00 - INFO - 	 Best ROC-AUC: 0.797
2024-11-04 05:00 - INFO - 	 Best PR-AUC: 0.274
2024-11-04 05:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-04 05:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-04 05:00 - INFO - 	 Best Recall for 0.4 precision: 0.259
2024-11-04 05:00 - INFO - ---------------------------------------------
2024-11-04 05:02 - INFO - ---------------------------------------------
2024-11-04 05:02 - INFO - Epoch: 05 | Time: 1m 47s
2024-11-04 05:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27917
2024-11-04 05:02 - INFO - 	 Train Loss: 0.162
2024-11-04 05:02 - INFO - 	 Val. Loss: 0.188
2024-11-04 05:02 - INFO - 	 ROC-AUC: 0.801
2024-11-04 05:02 - INFO - 	 PR-AUC: 0.279
2024-11-04 05:02 - INFO - 	 Recall for 0.4 precision: 0.215
2024-11-04 05:02 - INFO - 	 Best Val. Loss: 0.188
2024-11-04 05:02 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 05:02 - INFO - 	 Best PR-AUC: 0.279
2024-11-04 05:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-04 05:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 05:02 - INFO - 	 Best Recall for 0.4 precision: 0.259
2024-11-04 05:02 - INFO - ---------------------------------------------
2024-11-04 05:04 - INFO - ---------------------------------------------
2024-11-04 05:04 - INFO - Epoch: 06 | Time: 1m 47s
2024-11-04 05:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39708
2024-11-04 05:04 - INFO - 	 Train Loss: 0.153
2024-11-04 05:04 - INFO - 	 Val. Loss: 0.163
2024-11-04 05:04 - INFO - 	 ROC-AUC: 0.907
2024-11-04 05:04 - INFO - 	 PR-AUC: 0.397
2024-11-04 05:04 - INFO - 	 Recall for 0.4 precision: 0.472
2024-11-04 05:04 - INFO - 	 Best Val. Loss: 0.163
2024-11-04 05:04 - INFO - 	 Best ROC-AUC: 0.907
2024-11-04 05:04 - INFO - 	 Best PR-AUC: 0.397
2024-11-04 05:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.852
2024-11-04 05:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.190
2024-11-04 05:04 - INFO - 	 Best Recall for 0.4 precision: 0.472
2024-11-04 05:04 - INFO - ---------------------------------------------
2024-11-04 05:05 - INFO - ---------------------------------------------
2024-11-04 05:05 - INFO - Epoch: 07 | Time: 1m 48s
2024-11-04 05:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45151
2024-11-04 05:05 - INFO - 	 Train Loss: 0.130
2024-11-04 05:05 - INFO - 	 Val. Loss: 0.167
2024-11-04 05:05 - INFO - 	 ROC-AUC: 0.933
2024-11-04 05:05 - INFO - 	 PR-AUC: 0.452
2024-11-04 05:05 - INFO - 	 Recall for 0.4 precision: 0.582
2024-11-04 05:05 - INFO - 	 Best Val. Loss: 0.163
2024-11-04 05:05 - INFO - 	 Best ROC-AUC: 0.933
2024-11-04 05:05 - INFO - 	 Best PR-AUC: 0.452
2024-11-04 05:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.876
2024-11-04 05:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.240
2024-11-04 05:05 - INFO - 	 Best Recall for 0.4 precision: 0.582
2024-11-04 05:05 - INFO - ---------------------------------------------
2024-11-04 05:07 - INFO - ---------------------------------------------
2024-11-04 05:07 - INFO - Epoch: 08 | Time: 1m 48s
2024-11-04 05:07 - INFO - 	 Train Loss: 0.123
2024-11-04 05:07 - INFO - 	 Val. Loss: 0.128
2024-11-04 05:07 - INFO - 	 ROC-AUC: 0.951
2024-11-04 05:07 - INFO - 	 PR-AUC: 0.450
2024-11-04 05:07 - INFO - 	 Recall for 0.4 precision: 0.524
2024-11-04 05:07 - INFO - 	 Best Val. Loss: 0.128
2024-11-04 05:07 - INFO - 	 Best ROC-AUC: 0.951
2024-11-04 05:07 - INFO - 	 Best PR-AUC: 0.452
2024-11-04 05:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-04 05:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.240
2024-11-04 05:07 - INFO - 	 Best Recall for 0.4 precision: 0.582
2024-11-04 05:07 - INFO - ---------------------------------------------
2024-11-04 05:09 - INFO - ---------------------------------------------
2024-11-04 05:09 - INFO - Epoch: 09 | Time: 1m 49s
2024-11-04 05:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59678
2024-11-04 05:09 - INFO - 	 Train Loss: 0.114
2024-11-04 05:09 - INFO - 	 Val. Loss: 0.115
2024-11-04 05:09 - INFO - 	 ROC-AUC: 0.966
2024-11-04 05:09 - INFO - 	 PR-AUC: 0.597
2024-11-04 05:09 - INFO - 	 Recall for 0.4 precision: 0.842
2024-11-04 05:09 - INFO - 	 Best Val. Loss: 0.115
2024-11-04 05:09 - INFO - 	 Best ROC-AUC: 0.966
2024-11-04 05:09 - INFO - 	 Best PR-AUC: 0.597
2024-11-04 05:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-04 05:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.355
2024-11-04 05:09 - INFO - 	 Best Recall for 0.4 precision: 0.842
2024-11-04 05:09 - INFO - ---------------------------------------------
2024-11-04 05:11 - INFO - ---------------------------------------------
2024-11-04 05:11 - INFO - Epoch: 10 | Time: 1m 49s
2024-11-04 05:11 - INFO - 	 Train Loss: 0.108
2024-11-04 05:11 - INFO - 	 Val. Loss: 0.097
2024-11-04 05:11 - INFO - 	 ROC-AUC: 0.964
2024-11-04 05:11 - INFO - 	 PR-AUC: 0.572
2024-11-04 05:11 - INFO - 	 Recall for 0.4 precision: 0.891
2024-11-04 05:11 - INFO - 	 Best Val. Loss: 0.097
2024-11-04 05:11 - INFO - 	 Best ROC-AUC: 0.966
2024-11-04 05:11 - INFO - 	 Best PR-AUC: 0.597
2024-11-04 05:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-04 05:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.355
2024-11-04 05:11 - INFO - 	 Best Recall for 0.4 precision: 0.891
2024-11-04 05:11 - INFO - ---------------------------------------------
