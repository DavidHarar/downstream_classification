2024-11-03 12:49 - INFO - Fit the preprocessing pipeline
2024-11-03 12:49 - INFO - Training using device: mps
2024-11-03 12:49 - INFO - Creating generators
2024-11-03 12:49 - INFO - The model has 651,257 trainable parameters
2024-11-03 12:49 - INFO - * Model:
2024-11-03 12:49 - INFO - * -----------
2024-11-03 12:49 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 12:49 - INFO - * -----------
2024-11-03 12:49 - INFO - Evaluating model based on: aucpr
2024-11-03 12:49 - INFO - Training..

2024-11-03 12:51 - INFO - ---------------------------------------------
2024-11-03 12:51 - INFO - Epoch: 01 | Time: 1m 54s
2024-11-03 12:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19416
2024-11-03 12:51 - INFO - 	 Train Loss: 0.259
2024-11-03 12:51 - INFO - 	 Val. Loss: 0.308
2024-11-03 12:51 - INFO - 	 ROC-AUC: 0.724
2024-11-03 12:51 - INFO - 	 PR-AUC: 0.194
2024-11-03 12:51 - INFO - 	 Recall for 0.4 precision: 0.163
2024-11-03 12:51 - INFO - 	 Best Val. Loss: 0.308
2024-11-03 12:51 - INFO - 	 Best ROC-AUC: 0.724
2024-11-03 12:51 - INFO - 	 Best PR-AUC: 0.194
2024-11-03 12:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-11-03 12:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.120
2024-11-03 12:51 - INFO - 	 Best Recall for 0.4 precision: 0.163
2024-11-03 12:51 - INFO - ---------------------------------------------
2024-11-03 12:53 - INFO - ---------------------------------------------
2024-11-03 12:53 - INFO - Epoch: 02 | Time: 2m 2s
2024-11-03 12:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24878
2024-11-03 12:53 - INFO - 	 Train Loss: 0.208
2024-11-03 12:53 - INFO - 	 Val. Loss: 0.238
2024-11-03 12:53 - INFO - 	 ROC-AUC: 0.764
2024-11-03 12:53 - INFO - 	 PR-AUC: 0.249
2024-11-03 12:53 - INFO - 	 Recall for 0.4 precision: 0.195
2024-11-03 12:53 - INFO - 	 Best Val. Loss: 0.238
2024-11-03 12:53 - INFO - 	 Best ROC-AUC: 0.764
2024-11-03 12:53 - INFO - 	 Best PR-AUC: 0.249
2024-11-03 12:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-03 12:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-03 12:53 - INFO - 	 Best Recall for 0.4 precision: 0.195
2024-11-03 12:53 - INFO - ---------------------------------------------
2024-11-03 12:55 - INFO - ---------------------------------------------
2024-11-03 12:55 - INFO - Epoch: 03 | Time: 2m 3s
2024-11-03 12:55 - INFO - 	 Train Loss: 0.184
2024-11-03 12:55 - INFO - 	 Val. Loss: 0.211
2024-11-03 12:55 - INFO - 	 ROC-AUC: 0.782
2024-11-03 12:55 - INFO - 	 PR-AUC: 0.240
2024-11-03 12:55 - INFO - 	 Recall for 0.4 precision: 0.195
2024-11-03 12:55 - INFO - 	 Best Val. Loss: 0.211
2024-11-03 12:55 - INFO - 	 Best ROC-AUC: 0.782
2024-11-03 12:55 - INFO - 	 Best PR-AUC: 0.249
2024-11-03 12:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 12:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.125
2024-11-03 12:55 - INFO - 	 Best Recall for 0.4 precision: 0.195
2024-11-03 12:55 - INFO - ---------------------------------------------
2024-11-03 12:57 - INFO - ---------------------------------------------
2024-11-03 12:57 - INFO - Epoch: 04 | Time: 2m 4s
2024-11-03 12:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2894
2024-11-03 12:57 - INFO - 	 Train Loss: 0.169
2024-11-03 12:57 - INFO - 	 Val. Loss: 0.195
2024-11-03 12:57 - INFO - 	 ROC-AUC: 0.799
2024-11-03 12:57 - INFO - 	 PR-AUC: 0.289
2024-11-03 12:57 - INFO - 	 Recall for 0.4 precision: 0.332
2024-11-03 12:57 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 12:57 - INFO - 	 Best ROC-AUC: 0.799
2024-11-03 12:57 - INFO - 	 Best PR-AUC: 0.289
2024-11-03 12:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-03 12:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 12:57 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 12:57 - INFO - ---------------------------------------------
2024-11-03 12:59 - INFO - ---------------------------------------------
2024-11-03 12:59 - INFO - Epoch: 05 | Time: 2m 5s
2024-11-03 12:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29054
2024-11-03 12:59 - INFO - 	 Train Loss: 0.161
2024-11-03 12:59 - INFO - 	 Val. Loss: 0.183
2024-11-03 12:59 - INFO - 	 ROC-AUC: 0.794
2024-11-03 12:59 - INFO - 	 PR-AUC: 0.291
2024-11-03 12:59 - INFO - 	 Recall for 0.4 precision: 0.315
2024-11-03 12:59 - INFO - 	 Best Val. Loss: 0.183
2024-11-03 12:59 - INFO - 	 Best ROC-AUC: 0.799
2024-11-03 12:59 - INFO - 	 Best PR-AUC: 0.291
2024-11-03 12:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-03 12:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.139
2024-11-03 12:59 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 12:59 - INFO - ---------------------------------------------
2024-11-03 13:01 - INFO - ---------------------------------------------
2024-11-03 13:01 - INFO - Epoch: 06 | Time: 2m 5s
2024-11-03 13:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31306
2024-11-03 13:01 - INFO - 	 Train Loss: 0.156
2024-11-03 13:01 - INFO - 	 Val. Loss: 0.177
2024-11-03 13:01 - INFO - 	 ROC-AUC: 0.811
2024-11-03 13:01 - INFO - 	 PR-AUC: 0.313
2024-11-03 13:01 - INFO - 	 Recall for 0.4 precision: 0.374
2024-11-03 13:01 - INFO - 	 Best Val. Loss: 0.177
2024-11-03 13:01 - INFO - 	 Best ROC-AUC: 0.811
2024-11-03 13:01 - INFO - 	 Best PR-AUC: 0.313
2024-11-03 13:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-03 13:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 13:01 - INFO - 	 Best Recall for 0.4 precision: 0.374
2024-11-03 13:01 - INFO - ---------------------------------------------
2024-11-03 13:04 - INFO - ---------------------------------------------
2024-11-03 13:04 - INFO - Epoch: 07 | Time: 2m 5s
2024-11-03 13:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32066
2024-11-03 13:04 - INFO - 	 Train Loss: 0.153
2024-11-03 13:04 - INFO - 	 Val. Loss: 0.176
2024-11-03 13:04 - INFO - 	 ROC-AUC: 0.818
2024-11-03 13:04 - INFO - 	 PR-AUC: 0.321
2024-11-03 13:04 - INFO - 	 Recall for 0.4 precision: 0.317
2024-11-03 13:04 - INFO - 	 Best Val. Loss: 0.176
2024-11-03 13:04 - INFO - 	 Best ROC-AUC: 0.818
2024-11-03 13:04 - INFO - 	 Best PR-AUC: 0.321
2024-11-03 13:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.772
2024-11-03 13:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 13:04 - INFO - 	 Best Recall for 0.4 precision: 0.374
2024-11-03 13:04 - INFO - ---------------------------------------------
2024-11-03 13:06 - INFO - ---------------------------------------------
2024-11-03 13:06 - INFO - Epoch: 08 | Time: 2m 5s
2024-11-03 13:06 - INFO - 	 Train Loss: 0.151
2024-11-03 13:06 - INFO - 	 Val. Loss: 0.168
2024-11-03 13:06 - INFO - 	 ROC-AUC: 0.829
2024-11-03 13:06 - INFO - 	 PR-AUC: 0.314
2024-11-03 13:06 - INFO - 	 Recall for 0.4 precision: 0.338
2024-11-03 13:06 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 13:06 - INFO - 	 Best ROC-AUC: 0.829
2024-11-03 13:06 - INFO - 	 Best PR-AUC: 0.321
2024-11-03 13:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 13:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 13:06 - INFO - 	 Best Recall for 0.4 precision: 0.374
2024-11-03 13:06 - INFO - ---------------------------------------------
2024-11-03 13:08 - INFO - ---------------------------------------------
2024-11-03 13:08 - INFO - Epoch: 09 | Time: 2m 5s
2024-11-03 13:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3379
2024-11-03 13:08 - INFO - 	 Train Loss: 0.148
2024-11-03 13:08 - INFO - 	 Val. Loss: 0.162
2024-11-03 13:08 - INFO - 	 ROC-AUC: 0.838
2024-11-03 13:08 - INFO - 	 PR-AUC: 0.338
2024-11-03 13:08 - INFO - 	 Recall for 0.4 precision: 0.363
2024-11-03 13:08 - INFO - 	 Best Val. Loss: 0.162
2024-11-03 13:08 - INFO - 	 Best ROC-AUC: 0.838
2024-11-03 13:08 - INFO - 	 Best PR-AUC: 0.338
2024-11-03 13:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 13:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-03 13:08 - INFO - 	 Best Recall for 0.4 precision: 0.374
2024-11-03 13:08 - INFO - ---------------------------------------------
2024-11-03 13:10 - INFO - ---------------------------------------------
2024-11-03 13:10 - INFO - Epoch: 10 | Time: 2m 5s
2024-11-03 13:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38089
2024-11-03 13:10 - INFO - 	 Train Loss: 0.141
2024-11-03 13:10 - INFO - 	 Val. Loss: 0.161
2024-11-03 13:10 - INFO - 	 ROC-AUC: 0.901
2024-11-03 13:10 - INFO - 	 PR-AUC: 0.381
2024-11-03 13:10 - INFO - 	 Recall for 0.4 precision: 0.485
2024-11-03 13:10 - INFO - 	 Best Val. Loss: 0.161
2024-11-03 13:10 - INFO - 	 Best ROC-AUC: 0.901
2024-11-03 13:10 - INFO - 	 Best PR-AUC: 0.381
2024-11-03 13:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.875
2024-11-03 13:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.235
2024-11-03 13:10 - INFO - 	 Best Recall for 0.4 precision: 0.485
2024-11-03 13:10 - INFO - ---------------------------------------------
2024-11-03 13:13 - INFO - Fit the preprocessing pipeline
2024-11-03 13:13 - INFO - Training using device: mps
2024-11-03 13:13 - INFO - Creating generators
2024-11-03 13:13 - INFO - The model has 651,257 trainable parameters
2024-11-03 13:13 - INFO - * Model:
2024-11-03 13:13 - INFO - * -----------
2024-11-03 13:13 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 13:13 - INFO - * -----------
2024-11-03 13:13 - INFO - Evaluating model based on: aucpr
2024-11-03 13:13 - INFO - Training..

2024-11-03 13:14 - INFO - ---------------------------------------------
2024-11-03 13:14 - INFO - Epoch: 01 | Time: 1m 54s
2024-11-03 13:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19841
2024-11-03 13:14 - INFO - 	 Train Loss: 0.257
2024-11-03 13:14 - INFO - 	 Val. Loss: 0.285
2024-11-03 13:14 - INFO - 	 ROC-AUC: 0.740
2024-11-03 13:14 - INFO - 	 PR-AUC: 0.198
2024-11-03 13:14 - INFO - 	 Recall for 0.4 precision: 0.128
2024-11-03 13:14 - INFO - 	 Best Val. Loss: 0.285
2024-11-03 13:14 - INFO - 	 Best ROC-AUC: 0.740
2024-11-03 13:14 - INFO - 	 Best PR-AUC: 0.198
2024-11-03 13:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-03 13:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-03 13:14 - INFO - 	 Best Recall for 0.4 precision: 0.128
2024-11-03 13:14 - INFO - ---------------------------------------------
2024-11-03 13:17 - INFO - ---------------------------------------------
2024-11-03 13:17 - INFO - Epoch: 02 | Time: 2m 4s
2024-11-03 13:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24679
2024-11-03 13:17 - INFO - 	 Train Loss: 0.205
2024-11-03 13:17 - INFO - 	 Val. Loss: 0.231
2024-11-03 13:17 - INFO - 	 ROC-AUC: 0.778
2024-11-03 13:17 - INFO - 	 PR-AUC: 0.247
2024-11-03 13:17 - INFO - 	 Recall for 0.4 precision: 0.174
2024-11-03 13:17 - INFO - 	 Best Val. Loss: 0.231
2024-11-03 13:17 - INFO - 	 Best ROC-AUC: 0.778
2024-11-03 13:17 - INFO - 	 Best PR-AUC: 0.247
2024-11-03 13:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 13:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 13:17 - INFO - 	 Best Recall for 0.4 precision: 0.174
2024-11-03 13:17 - INFO - ---------------------------------------------
2024-11-03 13:19 - INFO - ---------------------------------------------
2024-11-03 13:19 - INFO - Epoch: 03 | Time: 2m 4s
2024-11-03 13:19 - INFO - 	 Train Loss: 0.185
2024-11-03 13:19 - INFO - 	 Val. Loss: 0.214
2024-11-03 13:19 - INFO - 	 ROC-AUC: 0.760
2024-11-03 13:19 - INFO - 	 PR-AUC: 0.223
2024-11-03 13:19 - INFO - 	 Recall for 0.4 precision: 0.124
2024-11-03 13:19 - INFO - 	 Best Val. Loss: 0.214
2024-11-03 13:19 - INFO - 	 Best ROC-AUC: 0.778
2024-11-03 13:19 - INFO - 	 Best PR-AUC: 0.247
2024-11-03 13:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-03 13:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 13:19 - INFO - 	 Best Recall for 0.4 precision: 0.174
2024-11-03 13:19 - INFO - ---------------------------------------------
2024-11-03 13:21 - INFO - ---------------------------------------------
2024-11-03 13:21 - INFO - Epoch: 04 | Time: 2m 4s
2024-11-03 13:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2561
2024-11-03 13:21 - INFO - 	 Train Loss: 0.170
2024-11-03 13:21 - INFO - 	 Val. Loss: 0.198
2024-11-03 13:21 - INFO - 	 ROC-AUC: 0.779
2024-11-03 13:21 - INFO - 	 PR-AUC: 0.256
2024-11-03 13:21 - INFO - 	 Recall for 0.4 precision: 0.205
2024-11-03 13:21 - INFO - 	 Best Val. Loss: 0.198
2024-11-03 13:21 - INFO - 	 Best ROC-AUC: 0.779
2024-11-03 13:21 - INFO - 	 Best PR-AUC: 0.256
2024-11-03 13:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-03 13:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-03 13:21 - INFO - 	 Best Recall for 0.4 precision: 0.205
2024-11-03 13:21 - INFO - ---------------------------------------------
2024-11-03 13:23 - INFO - ---------------------------------------------
2024-11-03 13:23 - INFO - Epoch: 05 | Time: 2m 5s
2024-11-03 13:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27954
2024-11-03 13:23 - INFO - 	 Train Loss: 0.160
2024-11-03 13:23 - INFO - 	 Val. Loss: 0.184
2024-11-03 13:23 - INFO - 	 ROC-AUC: 0.808
2024-11-03 13:23 - INFO - 	 PR-AUC: 0.280
2024-11-03 13:23 - INFO - 	 Recall for 0.4 precision: 0.195
2024-11-03 13:23 - INFO - 	 Best Val. Loss: 0.184
2024-11-03 13:23 - INFO - 	 Best ROC-AUC: 0.808
2024-11-03 13:23 - INFO - 	 Best PR-AUC: 0.280
2024-11-03 13:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 13:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 13:23 - INFO - 	 Best Recall for 0.4 precision: 0.205
2024-11-03 13:23 - INFO - ---------------------------------------------
2024-11-03 13:25 - INFO - ---------------------------------------------
2024-11-03 13:25 - INFO - Epoch: 06 | Time: 2m 4s
2024-11-03 13:25 - INFO - 	 Train Loss: 0.156
2024-11-03 13:25 - INFO - 	 Val. Loss: 0.179
2024-11-03 13:25 - INFO - 	 ROC-AUC: 0.797
2024-11-03 13:25 - INFO - 	 PR-AUC: 0.273
2024-11-03 13:25 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-03 13:25 - INFO - 	 Best Val. Loss: 0.179
2024-11-03 13:25 - INFO - 	 Best ROC-AUC: 0.808
2024-11-03 13:25 - INFO - 	 Best PR-AUC: 0.280
2024-11-03 13:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 13:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 13:25 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-03 13:25 - INFO - ---------------------------------------------
2024-11-03 13:27 - INFO - ---------------------------------------------
2024-11-03 13:27 - INFO - Epoch: 07 | Time: 2m 5s
2024-11-03 13:27 - INFO - 	 Train Loss: 0.153
2024-11-03 13:27 - INFO - 	 Val. Loss: 0.180
2024-11-03 13:27 - INFO - 	 ROC-AUC: 0.795
2024-11-03 13:27 - INFO - 	 PR-AUC: 0.278
2024-11-03 13:27 - INFO - 	 Recall for 0.4 precision: 0.309
2024-11-03 13:27 - INFO - 	 Best Val. Loss: 0.179
2024-11-03 13:27 - INFO - 	 Best ROC-AUC: 0.808
2024-11-03 13:27 - INFO - 	 Best PR-AUC: 0.280
2024-11-03 13:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 13:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-03 13:27 - INFO - 	 Best Recall for 0.4 precision: 0.309
2024-11-03 13:27 - INFO - ---------------------------------------------
2024-11-03 13:29 - INFO - ---------------------------------------------
2024-11-03 13:29 - INFO - Epoch: 08 | Time: 2m 6s
2024-11-03 13:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35928
2024-11-03 13:29 - INFO - 	 Train Loss: 0.148
2024-11-03 13:29 - INFO - 	 Val. Loss: 0.153
2024-11-03 13:29 - INFO - 	 ROC-AUC: 0.862
2024-11-03 13:29 - INFO - 	 PR-AUC: 0.359
2024-11-03 13:29 - INFO - 	 Recall for 0.4 precision: 0.413
2024-11-03 13:29 - INFO - 	 Best Val. Loss: 0.153
2024-11-03 13:29 - INFO - 	 Best ROC-AUC: 0.862
2024-11-03 13:29 - INFO - 	 Best PR-AUC: 0.359
2024-11-03 13:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.825
2024-11-03 13:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.201
2024-11-03 13:29 - INFO - 	 Best Recall for 0.4 precision: 0.413
2024-11-03 13:29 - INFO - ---------------------------------------------
2024-11-03 13:31 - INFO - ---------------------------------------------
2024-11-03 13:31 - INFO - Epoch: 09 | Time: 2m 5s
2024-11-03 13:31 - INFO - 	 Train Loss: 0.132
2024-11-03 13:31 - INFO - 	 Val. Loss: 0.186
2024-11-03 13:31 - INFO - 	 ROC-AUC: 0.933
2024-11-03 13:31 - INFO - 	 PR-AUC: 0.351
2024-11-03 13:31 - INFO - 	 Recall for 0.4 precision: 0.481
2024-11-03 13:31 - INFO - 	 Best Val. Loss: 0.153
2024-11-03 13:31 - INFO - 	 Best ROC-AUC: 0.933
2024-11-03 13:31 - INFO - 	 Best PR-AUC: 0.359
2024-11-03 13:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.920
2024-11-03 13:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.201
2024-11-03 13:31 - INFO - 	 Best Recall for 0.4 precision: 0.481
2024-11-03 13:31 - INFO - ---------------------------------------------
2024-11-03 13:33 - INFO - ---------------------------------------------
2024-11-03 13:33 - INFO - Epoch: 10 | Time: 2m 6s
2024-11-03 13:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54065
2024-11-03 13:33 - INFO - 	 Train Loss: 0.118
2024-11-03 13:33 - INFO - 	 Val. Loss: 0.111
2024-11-03 13:33 - INFO - 	 ROC-AUC: 0.965
2024-11-03 13:33 - INFO - 	 PR-AUC: 0.541
2024-11-03 13:33 - INFO - 	 Recall for 0.4 precision: 0.815
2024-11-03 13:33 - INFO - 	 Best Val. Loss: 0.111
2024-11-03 13:33 - INFO - 	 Best ROC-AUC: 0.965
2024-11-03 13:33 - INFO - 	 Best PR-AUC: 0.541
2024-11-03 13:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-03 13:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-11-03 13:33 - INFO - 	 Best Recall for 0.4 precision: 0.815
2024-11-03 13:33 - INFO - ---------------------------------------------
2024-11-03 13:36 - INFO - Fit the preprocessing pipeline
2024-11-03 13:36 - INFO - Training using device: mps
2024-11-03 13:36 - INFO - Creating generators
2024-11-03 13:36 - INFO - The model has 651,257 trainable parameters
2024-11-03 13:36 - INFO - * Model:
2024-11-03 13:36 - INFO - * -----------
2024-11-03 13:36 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 13:36 - INFO - * -----------
2024-11-03 13:36 - INFO - Evaluating model based on: aucpr
2024-11-03 13:36 - INFO - Training..

2024-11-03 13:38 - INFO - ---------------------------------------------
2024-11-03 13:38 - INFO - Epoch: 01 | Time: 1m 56s
2024-11-03 13:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16672
2024-11-03 13:38 - INFO - 	 Train Loss: 0.249
2024-11-03 13:38 - INFO - 	 Val. Loss: 0.309
2024-11-03 13:38 - INFO - 	 ROC-AUC: 0.724
2024-11-03 13:38 - INFO - 	 PR-AUC: 0.167
2024-11-03 13:38 - INFO - 	 Recall for 0.4 precision: 0.115
2024-11-03 13:38 - INFO - 	 Best Val. Loss: 0.309
2024-11-03 13:38 - INFO - 	 Best ROC-AUC: 0.724
2024-11-03 13:38 - INFO - 	 Best PR-AUC: 0.167
2024-11-03 13:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.699
2024-11-03 13:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.116
2024-11-03 13:38 - INFO - 	 Best Recall for 0.4 precision: 0.115
2024-11-03 13:38 - INFO - ---------------------------------------------
2024-11-03 13:40 - INFO - ---------------------------------------------
2024-11-03 13:40 - INFO - Epoch: 02 | Time: 2m 5s
2024-11-03 13:40 - INFO - 	 Train Loss: 0.208
2024-11-03 13:40 - INFO - 	 Val. Loss: 0.248
2024-11-03 13:40 - INFO - 	 ROC-AUC: 0.757
2024-11-03 13:40 - INFO - 	 PR-AUC: 0.146
2024-11-03 13:40 - INFO - 	 Recall for 0.4 precision: 0.018
2024-11-03 13:40 - INFO - 	 Best Val. Loss: 0.248
2024-11-03 13:40 - INFO - 	 Best ROC-AUC: 0.757
2024-11-03 13:40 - INFO - 	 Best PR-AUC: 0.167
2024-11-03 13:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-03 13:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.116
2024-11-03 13:40 - INFO - 	 Best Recall for 0.4 precision: 0.115
2024-11-03 13:40 - INFO - ---------------------------------------------
2024-11-03 13:42 - INFO - ---------------------------------------------
2024-11-03 13:42 - INFO - Epoch: 03 | Time: 2m 6s
2024-11-03 13:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20048
2024-11-03 13:42 - INFO - 	 Train Loss: 0.184
2024-11-03 13:42 - INFO - 	 Val. Loss: 0.222
2024-11-03 13:42 - INFO - 	 ROC-AUC: 0.793
2024-11-03 13:42 - INFO - 	 PR-AUC: 0.200
2024-11-03 13:42 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 13:42 - INFO - 	 Best Val. Loss: 0.222
2024-11-03 13:42 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 13:42 - INFO - 	 Best PR-AUC: 0.200
2024-11-03 13:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 13:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 13:42 - INFO - 	 Best Recall for 0.4 precision: 0.115
2024-11-03 13:42 - INFO - ---------------------------------------------
2024-11-03 13:44 - INFO - ---------------------------------------------
2024-11-03 13:44 - INFO - Epoch: 04 | Time: 2m 9s
2024-11-03 13:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26412
2024-11-03 13:44 - INFO - 	 Train Loss: 0.171
2024-11-03 13:44 - INFO - 	 Val. Loss: 0.196
2024-11-03 13:44 - INFO - 	 ROC-AUC: 0.806
2024-11-03 13:44 - INFO - 	 PR-AUC: 0.264
2024-11-03 13:44 - INFO - 	 Recall for 0.4 precision: 0.280
2024-11-03 13:44 - INFO - 	 Best Val. Loss: 0.196
2024-11-03 13:44 - INFO - 	 Best ROC-AUC: 0.806
2024-11-03 13:44 - INFO - 	 Best PR-AUC: 0.264
2024-11-03 13:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-03 13:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-03 13:44 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 13:44 - INFO - ---------------------------------------------
2024-11-03 13:47 - INFO - ---------------------------------------------
2024-11-03 13:47 - INFO - Epoch: 05 | Time: 2m 11s
2024-11-03 13:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2696
2024-11-03 13:47 - INFO - 	 Train Loss: 0.162
2024-11-03 13:47 - INFO - 	 Val. Loss: 0.186
2024-11-03 13:47 - INFO - 	 ROC-AUC: 0.814
2024-11-03 13:47 - INFO - 	 PR-AUC: 0.270
2024-11-03 13:47 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-03 13:47 - INFO - 	 Best Val. Loss: 0.186
2024-11-03 13:47 - INFO - 	 Best ROC-AUC: 0.814
2024-11-03 13:47 - INFO - 	 Best PR-AUC: 0.270
2024-11-03 13:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.788
2024-11-03 13:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-03 13:47 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 13:47 - INFO - ---------------------------------------------
2024-11-03 13:49 - INFO - ---------------------------------------------
2024-11-03 13:49 - INFO - Epoch: 06 | Time: 2m 12s
2024-11-03 13:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27449
2024-11-03 13:49 - INFO - 	 Train Loss: 0.157
2024-11-03 13:49 - INFO - 	 Val. Loss: 0.178
2024-11-03 13:49 - INFO - 	 ROC-AUC: 0.820
2024-11-03 13:49 - INFO - 	 PR-AUC: 0.274
2024-11-03 13:49 - INFO - 	 Recall for 0.4 precision: 0.249
2024-11-03 13:49 - INFO - 	 Best Val. Loss: 0.178
2024-11-03 13:49 - INFO - 	 Best ROC-AUC: 0.820
2024-11-03 13:49 - INFO - 	 Best PR-AUC: 0.274
2024-11-03 13:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-03 13:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 13:49 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-03 13:49 - INFO - ---------------------------------------------
2024-11-03 13:51 - INFO - ---------------------------------------------
2024-11-03 13:51 - INFO - Epoch: 07 | Time: 2m 13s
2024-11-03 13:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31895
2024-11-03 13:51 - INFO - 	 Train Loss: 0.153
2024-11-03 13:51 - INFO - 	 Val. Loss: 0.171
2024-11-03 13:51 - INFO - 	 ROC-AUC: 0.839
2024-11-03 13:51 - INFO - 	 PR-AUC: 0.319
2024-11-03 13:51 - INFO - 	 Recall for 0.4 precision: 0.384
2024-11-03 13:51 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 13:51 - INFO - 	 Best ROC-AUC: 0.839
2024-11-03 13:51 - INFO - 	 Best PR-AUC: 0.319
2024-11-03 13:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 13:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 13:51 - INFO - 	 Best Recall for 0.4 precision: 0.384
2024-11-03 13:51 - INFO - ---------------------------------------------
2024-11-03 13:53 - INFO - ---------------------------------------------
2024-11-03 13:53 - INFO - Epoch: 08 | Time: 2m 12s
2024-11-03 13:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3421
2024-11-03 13:53 - INFO - 	 Train Loss: 0.151
2024-11-03 13:53 - INFO - 	 Val. Loss: 0.179
2024-11-03 13:53 - INFO - 	 ROC-AUC: 0.857
2024-11-03 13:53 - INFO - 	 PR-AUC: 0.342
2024-11-03 13:53 - INFO - 	 Recall for 0.4 precision: 0.446
2024-11-03 13:53 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 13:53 - INFO - 	 Best ROC-AUC: 0.857
2024-11-03 13:53 - INFO - 	 Best PR-AUC: 0.342
2024-11-03 13:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.779
2024-11-03 13:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-03 13:53 - INFO - 	 Best Recall for 0.4 precision: 0.446
2024-11-03 13:53 - INFO - ---------------------------------------------
2024-11-03 13:55 - INFO - ---------------------------------------------
2024-11-03 13:55 - INFO - Epoch: 09 | Time: 2m 10s
2024-11-03 13:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3581
2024-11-03 13:55 - INFO - 	 Train Loss: 0.149
2024-11-03 13:55 - INFO - 	 Val. Loss: 0.150
2024-11-03 13:55 - INFO - 	 ROC-AUC: 0.855
2024-11-03 13:55 - INFO - 	 PR-AUC: 0.358
2024-11-03 13:55 - INFO - 	 Recall for 0.4 precision: 0.403
2024-11-03 13:55 - INFO - 	 Best Val. Loss: 0.150
2024-11-03 13:55 - INFO - 	 Best ROC-AUC: 0.857
2024-11-03 13:55 - INFO - 	 Best PR-AUC: 0.358
2024-11-03 13:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.779
2024-11-03 13:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-03 13:55 - INFO - 	 Best Recall for 0.4 precision: 0.446
2024-11-03 13:55 - INFO - ---------------------------------------------
2024-11-03 13:58 - INFO - ---------------------------------------------
2024-11-03 13:58 - INFO - Epoch: 10 | Time: 2m 5s
2024-11-03 13:58 - INFO - 	 Train Loss: 0.147
2024-11-03 13:58 - INFO - 	 Val. Loss: 0.147
2024-11-03 13:58 - INFO - 	 ROC-AUC: 0.882
2024-11-03 13:58 - INFO - 	 PR-AUC: 0.354
2024-11-03 13:58 - INFO - 	 Recall for 0.4 precision: 0.407
2024-11-03 13:58 - INFO - 	 Best Val. Loss: 0.147
2024-11-03 13:58 - INFO - 	 Best ROC-AUC: 0.882
2024-11-03 13:58 - INFO - 	 Best PR-AUC: 0.358
2024-11-03 13:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.797
2024-11-03 13:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-03 13:58 - INFO - 	 Best Recall for 0.4 precision: 0.446
2024-11-03 13:58 - INFO - ---------------------------------------------
2024-11-03 14:00 - INFO - Fit the preprocessing pipeline
2024-11-03 14:00 - INFO - Training using device: mps
2024-11-03 14:00 - INFO - Creating generators
2024-11-03 14:00 - INFO - The model has 651,257 trainable parameters
2024-11-03 14:00 - INFO - * Model:
2024-11-03 14:00 - INFO - * -----------
2024-11-03 14:00 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 14:00 - INFO - * -----------
2024-11-03 14:00 - INFO - Evaluating model based on: aucpr
2024-11-03 14:00 - INFO - Training..

2024-11-03 14:02 - INFO - ---------------------------------------------
2024-11-03 14:02 - INFO - Epoch: 01 | Time: 1m 51s
2024-11-03 14:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21887
2024-11-03 14:02 - INFO - 	 Train Loss: 0.251
2024-11-03 14:02 - INFO - 	 Val. Loss: 0.290
2024-11-03 14:02 - INFO - 	 ROC-AUC: 0.736
2024-11-03 14:02 - INFO - 	 PR-AUC: 0.219
2024-11-03 14:02 - INFO - 	 Recall for 0.4 precision: 0.198
2024-11-03 14:02 - INFO - 	 Best Val. Loss: 0.290
2024-11-03 14:02 - INFO - 	 Best ROC-AUC: 0.736
2024-11-03 14:02 - INFO - 	 Best PR-AUC: 0.219
2024-11-03 14:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.727
2024-11-03 14:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-03 14:02 - INFO - 	 Best Recall for 0.4 precision: 0.198
2024-11-03 14:02 - INFO - ---------------------------------------------
2024-11-03 14:04 - INFO - ---------------------------------------------
2024-11-03 14:04 - INFO - Epoch: 02 | Time: 2m 0s
2024-11-03 14:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23336
2024-11-03 14:04 - INFO - 	 Train Loss: 0.209
2024-11-03 14:04 - INFO - 	 Val. Loss: 0.249
2024-11-03 14:04 - INFO - 	 ROC-AUC: 0.766
2024-11-03 14:04 - INFO - 	 PR-AUC: 0.233
2024-11-03 14:04 - INFO - 	 Recall for 0.4 precision: 0.229
2024-11-03 14:04 - INFO - 	 Best Val. Loss: 0.249
2024-11-03 14:04 - INFO - 	 Best ROC-AUC: 0.766
2024-11-03 14:04 - INFO - 	 Best PR-AUC: 0.233
2024-11-03 14:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.733
2024-11-03 14:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-03 14:04 - INFO - 	 Best Recall for 0.4 precision: 0.229
2024-11-03 14:04 - INFO - ---------------------------------------------
2024-11-03 14:06 - INFO - ---------------------------------------------
2024-11-03 14:06 - INFO - Epoch: 03 | Time: 2m 5s
2024-11-03 14:06 - INFO - 	 Train Loss: 0.186
2024-11-03 14:06 - INFO - 	 Val. Loss: 0.215
2024-11-03 14:06 - INFO - 	 ROC-AUC: 0.765
2024-11-03 14:06 - INFO - 	 PR-AUC: 0.218
2024-11-03 14:06 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 14:06 - INFO - 	 Best Val. Loss: 0.215
2024-11-03 14:06 - INFO - 	 Best ROC-AUC: 0.766
2024-11-03 14:06 - INFO - 	 Best PR-AUC: 0.233
2024-11-03 14:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.733
2024-11-03 14:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-03 14:06 - INFO - 	 Best Recall for 0.4 precision: 0.229
2024-11-03 14:06 - INFO - ---------------------------------------------
2024-11-03 14:08 - INFO - ---------------------------------------------
2024-11-03 14:08 - INFO - Epoch: 04 | Time: 2m 4s
2024-11-03 14:08 - INFO - 	 Train Loss: 0.172
2024-11-03 14:08 - INFO - 	 Val. Loss: 0.197
2024-11-03 14:08 - INFO - 	 ROC-AUC: 0.775
2024-11-03 14:08 - INFO - 	 PR-AUC: 0.221
2024-11-03 14:08 - INFO - 	 Recall for 0.4 precision: 0.211
2024-11-03 14:08 - INFO - 	 Best Val. Loss: 0.197
2024-11-03 14:08 - INFO - 	 Best ROC-AUC: 0.775
2024-11-03 14:08 - INFO - 	 Best PR-AUC: 0.233
2024-11-03 14:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-03 14:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-03 14:08 - INFO - 	 Best Recall for 0.4 precision: 0.229
2024-11-03 14:08 - INFO - ---------------------------------------------
2024-11-03 14:10 - INFO - ---------------------------------------------
2024-11-03 14:10 - INFO - Epoch: 05 | Time: 2m 3s
2024-11-03 14:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27249
2024-11-03 14:10 - INFO - 	 Train Loss: 0.164
2024-11-03 14:10 - INFO - 	 Val. Loss: 0.182
2024-11-03 14:10 - INFO - 	 ROC-AUC: 0.812
2024-11-03 14:10 - INFO - 	 PR-AUC: 0.272
2024-11-03 14:10 - INFO - 	 Recall for 0.4 precision: 0.327
2024-11-03 14:10 - INFO - 	 Best Val. Loss: 0.182
2024-11-03 14:10 - INFO - 	 Best ROC-AUC: 0.812
2024-11-03 14:10 - INFO - 	 Best PR-AUC: 0.272
2024-11-03 14:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-03 14:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-03 14:10 - INFO - 	 Best Recall for 0.4 precision: 0.327
2024-11-03 14:10 - INFO - ---------------------------------------------
2024-11-03 14:12 - INFO - ---------------------------------------------
2024-11-03 14:12 - INFO - Epoch: 06 | Time: 2m 6s
2024-11-03 14:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33217
2024-11-03 14:12 - INFO - 	 Train Loss: 0.156
2024-11-03 14:12 - INFO - 	 Val. Loss: 0.145
2024-11-03 14:12 - INFO - 	 ROC-AUC: 0.875
2024-11-03 14:12 - INFO - 	 PR-AUC: 0.332
2024-11-03 14:12 - INFO - 	 Recall for 0.4 precision: 0.358
2024-11-03 14:12 - INFO - 	 Best Val. Loss: 0.145
2024-11-03 14:12 - INFO - 	 Best ROC-AUC: 0.875
2024-11-03 14:12 - INFO - 	 Best PR-AUC: 0.332
2024-11-03 14:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.823
2024-11-03 14:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.185
2024-11-03 14:12 - INFO - 	 Best Recall for 0.4 precision: 0.358
2024-11-03 14:12 - INFO - ---------------------------------------------
2024-11-03 14:15 - INFO - ---------------------------------------------
2024-11-03 14:15 - INFO - Epoch: 07 | Time: 2m 5s
2024-11-03 14:15 - INFO - 	 Train Loss: 0.144
2024-11-03 14:15 - INFO - 	 Val. Loss: 0.155
2024-11-03 14:15 - INFO - 	 ROC-AUC: 0.840
2024-11-03 14:15 - INFO - 	 PR-AUC: 0.285
2024-11-03 14:15 - INFO - 	 Recall for 0.4 precision: 0.223
2024-11-03 14:15 - INFO - 	 Best Val. Loss: 0.145
2024-11-03 14:15 - INFO - 	 Best ROC-AUC: 0.875
2024-11-03 14:15 - INFO - 	 Best PR-AUC: 0.332
2024-11-03 14:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.823
2024-11-03 14:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.185
2024-11-03 14:15 - INFO - 	 Best Recall for 0.4 precision: 0.358
2024-11-03 14:15 - INFO - ---------------------------------------------
2024-11-03 14:17 - INFO - ---------------------------------------------
2024-11-03 14:17 - INFO - Epoch: 08 | Time: 2m 6s
2024-11-03 14:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42926
2024-11-03 14:17 - INFO - 	 Train Loss: 0.130
2024-11-03 14:17 - INFO - 	 Val. Loss: 0.146
2024-11-03 14:17 - INFO - 	 ROC-AUC: 0.942
2024-11-03 14:17 - INFO - 	 PR-AUC: 0.429
2024-11-03 14:17 - INFO - 	 Recall for 0.4 precision: 0.793
2024-11-03 14:17 - INFO - 	 Best Val. Loss: 0.145
2024-11-03 14:17 - INFO - 	 Best ROC-AUC: 0.942
2024-11-03 14:17 - INFO - 	 Best PR-AUC: 0.429
2024-11-03 14:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-03 14:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.341
2024-11-03 14:17 - INFO - 	 Best Recall for 0.4 precision: 0.793
2024-11-03 14:17 - INFO - ---------------------------------------------
2024-11-03 14:19 - INFO - ---------------------------------------------
2024-11-03 14:19 - INFO - Epoch: 09 | Time: 2m 5s
2024-11-03 14:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46919
2024-11-03 14:19 - INFO - 	 Train Loss: 0.118
2024-11-03 14:19 - INFO - 	 Val. Loss: 0.107
2024-11-03 14:19 - INFO - 	 ROC-AUC: 0.957
2024-11-03 14:19 - INFO - 	 PR-AUC: 0.469
2024-11-03 14:19 - INFO - 	 Recall for 0.4 precision: 0.846
2024-11-03 14:19 - INFO - 	 Best Val. Loss: 0.107
2024-11-03 14:19 - INFO - 	 Best ROC-AUC: 0.957
2024-11-03 14:19 - INFO - 	 Best PR-AUC: 0.469
2024-11-03 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-03 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.393
2024-11-03 14:19 - INFO - 	 Best Recall for 0.4 precision: 0.846
2024-11-03 14:19 - INFO - ---------------------------------------------
2024-11-03 14:21 - INFO - ---------------------------------------------
2024-11-03 14:21 - INFO - Epoch: 10 | Time: 2m 5s
2024-11-03 14:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52867
2024-11-03 14:21 - INFO - 	 Train Loss: 0.108
2024-11-03 14:21 - INFO - 	 Val. Loss: 0.102
2024-11-03 14:21 - INFO - 	 ROC-AUC: 0.964
2024-11-03 14:21 - INFO - 	 PR-AUC: 0.529
2024-11-03 14:21 - INFO - 	 Recall for 0.4 precision: 0.902
2024-11-03 14:21 - INFO - 	 Best Val. Loss: 0.102
2024-11-03 14:21 - INFO - 	 Best ROC-AUC: 0.964
2024-11-03 14:21 - INFO - 	 Best PR-AUC: 0.529
2024-11-03 14:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-03 14:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.349
2024-11-03 14:21 - INFO - 	 Best Recall for 0.4 precision: 0.902
2024-11-03 14:21 - INFO - ---------------------------------------------
2024-11-03 14:24 - INFO - Fit the preprocessing pipeline
2024-11-03 14:24 - INFO - Training using device: mps
2024-11-03 14:24 - INFO - Creating generators
2024-11-03 14:24 - INFO - The model has 651,257 trainable parameters
2024-11-03 14:24 - INFO - * Model:
2024-11-03 14:24 - INFO - * -----------
2024-11-03 14:24 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 14:24 - INFO - * -----------
2024-11-03 14:24 - INFO - Evaluating model based on: aucpr
2024-11-03 14:24 - INFO - Training..

2024-11-03 14:25 - INFO - ---------------------------------------------
2024-11-03 14:25 - INFO - Epoch: 01 | Time: 1m 50s
2024-11-03 14:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24706
2024-11-03 14:25 - INFO - 	 Train Loss: 0.254
2024-11-03 14:25 - INFO - 	 Val. Loss: 0.281
2024-11-03 14:25 - INFO - 	 ROC-AUC: 0.758
2024-11-03 14:25 - INFO - 	 PR-AUC: 0.247
2024-11-03 14:25 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-03 14:25 - INFO - 	 Best Val. Loss: 0.281
2024-11-03 14:25 - INFO - 	 Best ROC-AUC: 0.758
2024-11-03 14:25 - INFO - 	 Best PR-AUC: 0.247
2024-11-03 14:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-03 14:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.119
2024-11-03 14:25 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-03 14:25 - INFO - ---------------------------------------------
2024-11-03 14:27 - INFO - ---------------------------------------------
2024-11-03 14:27 - INFO - Epoch: 02 | Time: 1m 59s
2024-11-03 14:27 - INFO - 	 Train Loss: 0.204
2024-11-03 14:27 - INFO - 	 Val. Loss: 0.233
2024-11-03 14:27 - INFO - 	 ROC-AUC: 0.761
2024-11-03 14:27 - INFO - 	 PR-AUC: 0.221
2024-11-03 14:27 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-03 14:27 - INFO - 	 Best Val. Loss: 0.233
2024-11-03 14:27 - INFO - 	 Best ROC-AUC: 0.761
2024-11-03 14:27 - INFO - 	 Best PR-AUC: 0.247
2024-11-03 14:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-03 14:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.119
2024-11-03 14:27 - INFO - 	 Best Recall for 0.4 precision: 0.263
2024-11-03 14:27 - INFO - ---------------------------------------------
2024-11-03 14:29 - INFO - ---------------------------------------------
2024-11-03 14:29 - INFO - Epoch: 03 | Time: 2m 0s
2024-11-03 14:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26374
2024-11-03 14:29 - INFO - 	 Train Loss: 0.184
2024-11-03 14:29 - INFO - 	 Val. Loss: 0.200
2024-11-03 14:29 - INFO - 	 ROC-AUC: 0.788
2024-11-03 14:29 - INFO - 	 PR-AUC: 0.264
2024-11-03 14:29 - INFO - 	 Recall for 0.4 precision: 0.268
2024-11-03 14:29 - INFO - 	 Best Val. Loss: 0.200
2024-11-03 14:29 - INFO - 	 Best ROC-AUC: 0.788
2024-11-03 14:29 - INFO - 	 Best PR-AUC: 0.264
2024-11-03 14:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-03 14:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 14:29 - INFO - 	 Best Recall for 0.4 precision: 0.268
2024-11-03 14:29 - INFO - ---------------------------------------------
2024-11-03 14:31 - INFO - ---------------------------------------------
2024-11-03 14:31 - INFO - Epoch: 04 | Time: 2m 0s
2024-11-03 14:31 - INFO - 	 Train Loss: 0.173
2024-11-03 14:31 - INFO - 	 Val. Loss: 0.195
2024-11-03 14:31 - INFO - 	 ROC-AUC: 0.791
2024-11-03 14:31 - INFO - 	 PR-AUC: 0.254
2024-11-03 14:31 - INFO - 	 Recall for 0.4 precision: 0.237
2024-11-03 14:31 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 14:31 - INFO - 	 Best ROC-AUC: 0.791
2024-11-03 14:31 - INFO - 	 Best PR-AUC: 0.264
2024-11-03 14:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-03 14:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 14:31 - INFO - 	 Best Recall for 0.4 precision: 0.268
2024-11-03 14:31 - INFO - ---------------------------------------------
2024-11-03 14:33 - INFO - ---------------------------------------------
2024-11-03 14:33 - INFO - Epoch: 05 | Time: 2m 0s
2024-11-03 14:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28803
2024-11-03 14:33 - INFO - 	 Train Loss: 0.165
2024-11-03 14:33 - INFO - 	 Val. Loss: 0.182
2024-11-03 14:33 - INFO - 	 ROC-AUC: 0.806
2024-11-03 14:33 - INFO - 	 PR-AUC: 0.288
2024-11-03 14:33 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-03 14:33 - INFO - 	 Best Val. Loss: 0.182
2024-11-03 14:33 - INFO - 	 Best ROC-AUC: 0.806
2024-11-03 14:33 - INFO - 	 Best PR-AUC: 0.288
2024-11-03 14:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 14:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 14:33 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-03 14:33 - INFO - ---------------------------------------------
2024-11-03 14:35 - INFO - ---------------------------------------------
2024-11-03 14:35 - INFO - Epoch: 06 | Time: 2m 1s
2024-11-03 14:35 - INFO - 	 Train Loss: 0.160
2024-11-03 14:35 - INFO - 	 Val. Loss: 0.177
2024-11-03 14:35 - INFO - 	 ROC-AUC: 0.804
2024-11-03 14:35 - INFO - 	 PR-AUC: 0.284
2024-11-03 14:35 - INFO - 	 Recall for 0.4 precision: 0.309
2024-11-03 14:35 - INFO - 	 Best Val. Loss: 0.177
2024-11-03 14:35 - INFO - 	 Best ROC-AUC: 0.806
2024-11-03 14:35 - INFO - 	 Best PR-AUC: 0.288
2024-11-03 14:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 14:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 14:35 - INFO - 	 Best Recall for 0.4 precision: 0.309
2024-11-03 14:35 - INFO - ---------------------------------------------
2024-11-03 14:37 - INFO - ---------------------------------------------
2024-11-03 14:37 - INFO - Epoch: 07 | Time: 2m 1s
2024-11-03 14:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31103
2024-11-03 14:37 - INFO - 	 Train Loss: 0.155
2024-11-03 14:37 - INFO - 	 Val. Loss: 0.172
2024-11-03 14:37 - INFO - 	 ROC-AUC: 0.803
2024-11-03 14:37 - INFO - 	 PR-AUC: 0.311
2024-11-03 14:37 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-03 14:37 - INFO - 	 Best Val. Loss: 0.172
2024-11-03 14:37 - INFO - 	 Best ROC-AUC: 0.806
2024-11-03 14:37 - INFO - 	 Best PR-AUC: 0.311
2024-11-03 14:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.777
2024-11-03 14:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-03 14:37 - INFO - 	 Best Recall for 0.4 precision: 0.309
2024-11-03 14:37 - INFO - ---------------------------------------------
2024-11-03 14:39 - INFO - ---------------------------------------------
2024-11-03 14:39 - INFO - Epoch: 08 | Time: 2m 1s
2024-11-03 14:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3299
2024-11-03 14:39 - INFO - 	 Train Loss: 0.152
2024-11-03 14:39 - INFO - 	 Val. Loss: 0.171
2024-11-03 14:39 - INFO - 	 ROC-AUC: 0.829
2024-11-03 14:39 - INFO - 	 PR-AUC: 0.330
2024-11-03 14:39 - INFO - 	 Recall for 0.4 precision: 0.367
2024-11-03 14:39 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 14:39 - INFO - 	 Best ROC-AUC: 0.829
2024-11-03 14:39 - INFO - 	 Best PR-AUC: 0.330
2024-11-03 14:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-03 14:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-03 14:39 - INFO - 	 Best Recall for 0.4 precision: 0.367
2024-11-03 14:39 - INFO - ---------------------------------------------
2024-11-03 14:41 - INFO - ---------------------------------------------
2024-11-03 14:41 - INFO - Epoch: 09 | Time: 2m 0s
2024-11-03 14:41 - INFO - 	 Train Loss: 0.143
2024-11-03 14:41 - INFO - 	 Val. Loss: 0.176
2024-11-03 14:41 - INFO - 	 ROC-AUC: 0.831
2024-11-03 14:41 - INFO - 	 PR-AUC: 0.216
2024-11-03 14:41 - INFO - 	 Recall for 0.4 precision: 0.146
2024-11-03 14:41 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 14:41 - INFO - 	 Best ROC-AUC: 0.831
2024-11-03 14:41 - INFO - 	 Best PR-AUC: 0.330
2024-11-03 14:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.838
2024-11-03 14:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-03 14:41 - INFO - 	 Best Recall for 0.4 precision: 0.367
2024-11-03 14:41 - INFO - ---------------------------------------------
2024-11-03 14:44 - INFO - ---------------------------------------------
2024-11-03 14:44 - INFO - Epoch: 10 | Time: 2m 0s
2024-11-03 14:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3359
2024-11-03 14:44 - INFO - 	 Train Loss: 0.125
2024-11-03 14:44 - INFO - 	 Val. Loss: 0.125
2024-11-03 14:44 - INFO - 	 ROC-AUC: 0.920
2024-11-03 14:44 - INFO - 	 PR-AUC: 0.336
2024-11-03 14:44 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-03 14:44 - INFO - 	 Best Val. Loss: 0.125
2024-11-03 14:44 - INFO - 	 Best ROC-AUC: 0.920
2024-11-03 14:44 - INFO - 	 Best PR-AUC: 0.336
2024-11-03 14:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-11-03 14:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.260
2024-11-03 14:44 - INFO - 	 Best Recall for 0.4 precision: 0.367
2024-11-03 14:44 - INFO - ---------------------------------------------
2024-11-03 14:46 - INFO - Fit the preprocessing pipeline
2024-11-03 14:46 - INFO - Training using device: mps
2024-11-03 14:46 - INFO - Creating generators
2024-11-03 14:46 - INFO - The model has 651,257 trainable parameters
2024-11-03 14:46 - INFO - * Model:
2024-11-03 14:46 - INFO - * -----------
2024-11-03 14:46 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 14:46 - INFO - * -----------
2024-11-03 14:46 - INFO - Evaluating model based on: aucpr
2024-11-03 14:46 - INFO - Training..

2024-11-03 14:48 - INFO - ---------------------------------------------
2024-11-03 14:48 - INFO - Epoch: 01 | Time: 1m 47s
2024-11-03 14:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11214
2024-11-03 14:48 - INFO - 	 Train Loss: 0.254
2024-11-03 14:48 - INFO - 	 Val. Loss: 0.285
2024-11-03 14:48 - INFO - 	 ROC-AUC: 0.746
2024-11-03 14:48 - INFO - 	 PR-AUC: 0.112
2024-11-03 14:48 - INFO - 	 Recall for 0.4 precision: 0.044
2024-11-03 14:48 - INFO - 	 Best Val. Loss: 0.285
2024-11-03 14:48 - INFO - 	 Best ROC-AUC: 0.746
2024-11-03 14:48 - INFO - 	 Best PR-AUC: 0.112
2024-11-03 14:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.727
2024-11-03 14:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.097
2024-11-03 14:48 - INFO - 	 Best Recall for 0.4 precision: 0.044
2024-11-03 14:48 - INFO - ---------------------------------------------
2024-11-03 14:50 - INFO - ---------------------------------------------
2024-11-03 14:50 - INFO - Epoch: 02 | Time: 1m 57s
2024-11-03 14:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16468
2024-11-03 14:50 - INFO - 	 Train Loss: 0.210
2024-11-03 14:50 - INFO - 	 Val. Loss: 0.264
2024-11-03 14:50 - INFO - 	 ROC-AUC: 0.761
2024-11-03 14:50 - INFO - 	 PR-AUC: 0.165
2024-11-03 14:50 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-03 14:50 - INFO - 	 Best Val. Loss: 0.264
2024-11-03 14:50 - INFO - 	 Best ROC-AUC: 0.761
2024-11-03 14:50 - INFO - 	 Best PR-AUC: 0.165
2024-11-03 14:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 14:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-03 14:50 - INFO - 	 Best Recall for 0.4 precision: 0.044
2024-11-03 14:50 - INFO - ---------------------------------------------
2024-11-03 14:52 - INFO - ---------------------------------------------
2024-11-03 14:52 - INFO - Epoch: 03 | Time: 1m 58s
2024-11-03 14:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22945
2024-11-03 14:52 - INFO - 	 Train Loss: 0.188
2024-11-03 14:52 - INFO - 	 Val. Loss: 0.205
2024-11-03 14:52 - INFO - 	 ROC-AUC: 0.788
2024-11-03 14:52 - INFO - 	 PR-AUC: 0.229
2024-11-03 14:52 - INFO - 	 Recall for 0.4 precision: 0.153
2024-11-03 14:52 - INFO - 	 Best Val. Loss: 0.205
2024-11-03 14:52 - INFO - 	 Best ROC-AUC: 0.788
2024-11-03 14:52 - INFO - 	 Best PR-AUC: 0.229
2024-11-03 14:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.779
2024-11-03 14:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 14:52 - INFO - 	 Best Recall for 0.4 precision: 0.153
2024-11-03 14:52 - INFO - ---------------------------------------------
2024-11-03 14:54 - INFO - ---------------------------------------------
2024-11-03 14:54 - INFO - Epoch: 04 | Time: 1m 58s
2024-11-03 14:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25849
2024-11-03 14:54 - INFO - 	 Train Loss: 0.172
2024-11-03 14:54 - INFO - 	 Val. Loss: 0.195
2024-11-03 14:54 - INFO - 	 ROC-AUC: 0.815
2024-11-03 14:54 - INFO - 	 PR-AUC: 0.258
2024-11-03 14:54 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-03 14:54 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 14:54 - INFO - 	 Best ROC-AUC: 0.815
2024-11-03 14:54 - INFO - 	 Best PR-AUC: 0.258
2024-11-03 14:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-03 14:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 14:54 - INFO - 	 Best Recall for 0.4 precision: 0.153
2024-11-03 14:54 - INFO - ---------------------------------------------
2024-11-03 14:56 - INFO - ---------------------------------------------
2024-11-03 14:56 - INFO - Epoch: 05 | Time: 1m 58s
2024-11-03 14:56 - INFO - 	 Train Loss: 0.162
2024-11-03 14:56 - INFO - 	 Val. Loss: 0.306
2024-11-03 14:56 - INFO - 	 ROC-AUC: 0.652
2024-11-03 14:56 - INFO - 	 PR-AUC: 0.100
2024-11-03 14:56 - INFO - 	 Recall for 0.4 precision: 0.018
2024-11-03 14:56 - INFO - 	 Best Val. Loss: 0.195
2024-11-03 14:56 - INFO - 	 Best ROC-AUC: 0.815
2024-11-03 14:56 - INFO - 	 Best PR-AUC: 0.258
2024-11-03 14:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.763
2024-11-03 14:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 14:56 - INFO - 	 Best Recall for 0.4 precision: 0.153
2024-11-03 14:56 - INFO - ---------------------------------------------
2024-11-03 14:58 - INFO - ---------------------------------------------
2024-11-03 14:58 - INFO - Epoch: 06 | Time: 1m 58s
2024-11-03 14:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27533
2024-11-03 14:58 - INFO - 	 Train Loss: 0.166
2024-11-03 14:58 - INFO - 	 Val. Loss: 0.186
2024-11-03 14:58 - INFO - 	 ROC-AUC: 0.839
2024-11-03 14:58 - INFO - 	 PR-AUC: 0.275
2024-11-03 14:58 - INFO - 	 Recall for 0.4 precision: 0.202
2024-11-03 14:58 - INFO - 	 Best Val. Loss: 0.186
2024-11-03 14:58 - INFO - 	 Best ROC-AUC: 0.839
2024-11-03 14:58 - INFO - 	 Best PR-AUC: 0.275
2024-11-03 14:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.792
2024-11-03 14:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-03 14:58 - INFO - 	 Best Recall for 0.4 precision: 0.202
2024-11-03 14:58 - INFO - ---------------------------------------------
2024-11-03 15:00 - INFO - ---------------------------------------------
2024-11-03 15:00 - INFO - Epoch: 07 | Time: 1m 58s
2024-11-03 15:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32326
2024-11-03 15:00 - INFO - 	 Train Loss: 0.155
2024-11-03 15:00 - INFO - 	 Val. Loss: 0.173
2024-11-03 15:00 - INFO - 	 ROC-AUC: 0.859
2024-11-03 15:00 - INFO - 	 PR-AUC: 0.323
2024-11-03 15:00 - INFO - 	 Recall for 0.4 precision: 0.325
2024-11-03 15:00 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 15:00 - INFO - 	 Best ROC-AUC: 0.859
2024-11-03 15:00 - INFO - 	 Best PR-AUC: 0.323
2024-11-03 15:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.800
2024-11-03 15:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 15:00 - INFO - 	 Best Recall for 0.4 precision: 0.325
2024-11-03 15:00 - INFO - ---------------------------------------------
2024-11-03 15:02 - INFO - ---------------------------------------------
2024-11-03 15:02 - INFO - Epoch: 08 | Time: 1m 58s
2024-11-03 15:02 - INFO - 	 Train Loss: 0.152
2024-11-03 15:02 - INFO - 	 Val. Loss: 0.209
2024-11-03 15:02 - INFO - 	 ROC-AUC: 0.878
2024-11-03 15:02 - INFO - 	 PR-AUC: 0.315
2024-11-03 15:02 - INFO - 	 Recall for 0.4 precision: 0.380
2024-11-03 15:02 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 15:02 - INFO - 	 Best ROC-AUC: 0.878
2024-11-03 15:02 - INFO - 	 Best PR-AUC: 0.323
2024-11-03 15:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.831
2024-11-03 15:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 15:02 - INFO - 	 Best Recall for 0.4 precision: 0.380
2024-11-03 15:02 - INFO - ---------------------------------------------
2024-11-03 15:04 - INFO - ---------------------------------------------
2024-11-03 15:04 - INFO - Epoch: 09 | Time: 1m 58s
2024-11-03 15:04 - INFO - 	 Train Loss: 0.148
2024-11-03 15:04 - INFO - 	 Val. Loss: 0.154
2024-11-03 15:04 - INFO - 	 ROC-AUC: 0.873
2024-11-03 15:04 - INFO - 	 PR-AUC: 0.299
2024-11-03 15:04 - INFO - 	 Recall for 0.4 precision: 0.241
2024-11-03 15:04 - INFO - 	 Best Val. Loss: 0.154
2024-11-03 15:04 - INFO - 	 Best ROC-AUC: 0.878
2024-11-03 15:04 - INFO - 	 Best PR-AUC: 0.323
2024-11-03 15:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.831
2024-11-03 15:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 15:04 - INFO - 	 Best Recall for 0.4 precision: 0.380
2024-11-03 15:04 - INFO - ---------------------------------------------
2024-11-03 15:06 - INFO - ---------------------------------------------
2024-11-03 15:06 - INFO - Epoch: 10 | Time: 1m 58s
2024-11-03 15:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35079
2024-11-03 15:06 - INFO - 	 Train Loss: 0.142
2024-11-03 15:06 - INFO - 	 Val. Loss: 0.138
2024-11-03 15:06 - INFO - 	 ROC-AUC: 0.884
2024-11-03 15:06 - INFO - 	 PR-AUC: 0.351
2024-11-03 15:06 - INFO - 	 Recall for 0.4 precision: 0.403
2024-11-03 15:06 - INFO - 	 Best Val. Loss: 0.138
2024-11-03 15:06 - INFO - 	 Best ROC-AUC: 0.884
2024-11-03 15:06 - INFO - 	 Best PR-AUC: 0.351
2024-11-03 15:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.830
2024-11-03 15:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 15:06 - INFO - 	 Best Recall for 0.4 precision: 0.403
2024-11-03 15:06 - INFO - ---------------------------------------------
2024-11-03 15:09 - INFO - Fit the preprocessing pipeline
2024-11-03 15:09 - INFO - Training using device: mps
2024-11-03 15:09 - INFO - Creating generators
2024-11-03 15:09 - INFO - The model has 651,257 trainable parameters
2024-11-03 15:09 - INFO - * Model:
2024-11-03 15:09 - INFO - * -----------
2024-11-03 15:09 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 15:09 - INFO - * -----------
2024-11-03 15:09 - INFO - Evaluating model based on: aucpr
2024-11-03 15:09 - INFO - Training..

2024-11-03 15:10 - INFO - ---------------------------------------------
2024-11-03 15:10 - INFO - Epoch: 01 | Time: 1m 45s
2024-11-03 15:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15471
2024-11-03 15:10 - INFO - 	 Train Loss: 0.253
2024-11-03 15:10 - INFO - 	 Val. Loss: 0.327
2024-11-03 15:10 - INFO - 	 ROC-AUC: 0.702
2024-11-03 15:10 - INFO - 	 PR-AUC: 0.155
2024-11-03 15:10 - INFO - 	 Recall for 0.4 precision: 0.088
2024-11-03 15:10 - INFO - 	 Best Val. Loss: 0.327
2024-11-03 15:10 - INFO - 	 Best ROC-AUC: 0.702
2024-11-03 15:10 - INFO - 	 Best PR-AUC: 0.155
2024-11-03 15:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.681
2024-11-03 15:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.111
2024-11-03 15:10 - INFO - 	 Best Recall for 0.4 precision: 0.088
2024-11-03 15:10 - INFO - ---------------------------------------------
2024-11-03 15:12 - INFO - ---------------------------------------------
2024-11-03 15:12 - INFO - Epoch: 02 | Time: 1m 57s
2024-11-03 15:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21122
2024-11-03 15:12 - INFO - 	 Train Loss: 0.208
2024-11-03 15:12 - INFO - 	 Val. Loss: 0.246
2024-11-03 15:12 - INFO - 	 ROC-AUC: 0.752
2024-11-03 15:12 - INFO - 	 PR-AUC: 0.211
2024-11-03 15:12 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-03 15:12 - INFO - 	 Best Val. Loss: 0.246
2024-11-03 15:12 - INFO - 	 Best ROC-AUC: 0.752
2024-11-03 15:12 - INFO - 	 Best PR-AUC: 0.211
2024-11-03 15:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-11-03 15:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.132
2024-11-03 15:12 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-03 15:12 - INFO - ---------------------------------------------
2024-11-03 15:14 - INFO - ---------------------------------------------
2024-11-03 15:14 - INFO - Epoch: 03 | Time: 1m 59s
2024-11-03 15:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22837
2024-11-03 15:14 - INFO - 	 Train Loss: 0.186
2024-11-03 15:14 - INFO - 	 Val. Loss: 0.213
2024-11-03 15:14 - INFO - 	 ROC-AUC: 0.776
2024-11-03 15:14 - INFO - 	 PR-AUC: 0.228
2024-11-03 15:14 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-03 15:14 - INFO - 	 Best Val. Loss: 0.213
2024-11-03 15:14 - INFO - 	 Best ROC-AUC: 0.776
2024-11-03 15:14 - INFO - 	 Best PR-AUC: 0.228
2024-11-03 15:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.727
2024-11-03 15:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-03 15:14 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-03 15:14 - INFO - ---------------------------------------------
2024-11-03 15:16 - INFO - ---------------------------------------------
2024-11-03 15:16 - INFO - Epoch: 04 | Time: 2m 0s
2024-11-03 15:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27804
2024-11-03 15:16 - INFO - 	 Train Loss: 0.173
2024-11-03 15:16 - INFO - 	 Val. Loss: 0.194
2024-11-03 15:16 - INFO - 	 ROC-AUC: 0.799
2024-11-03 15:16 - INFO - 	 PR-AUC: 0.278
2024-11-03 15:16 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-03 15:16 - INFO - 	 Best Val. Loss: 0.194
2024-11-03 15:16 - INFO - 	 Best ROC-AUC: 0.799
2024-11-03 15:16 - INFO - 	 Best PR-AUC: 0.278
2024-11-03 15:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-03 15:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-03 15:16 - INFO - 	 Best Recall for 0.4 precision: 0.273
2024-11-03 15:16 - INFO - ---------------------------------------------
2024-11-03 15:18 - INFO - ---------------------------------------------
2024-11-03 15:18 - INFO - Epoch: 05 | Time: 2m 0s
2024-11-03 15:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30337
2024-11-03 15:18 - INFO - 	 Train Loss: 0.164
2024-11-03 15:18 - INFO - 	 Val. Loss: 0.184
2024-11-03 15:18 - INFO - 	 ROC-AUC: 0.806
2024-11-03 15:18 - INFO - 	 PR-AUC: 0.303
2024-11-03 15:18 - INFO - 	 Recall for 0.4 precision: 0.367
2024-11-03 15:18 - INFO - 	 Best Val. Loss: 0.184
2024-11-03 15:18 - INFO - 	 Best ROC-AUC: 0.806
2024-11-03 15:18 - INFO - 	 Best PR-AUC: 0.303
2024-11-03 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.174
2024-11-03 15:18 - INFO - 	 Best Recall for 0.4 precision: 0.367
2024-11-03 15:18 - INFO - ---------------------------------------------
2024-11-03 15:21 - INFO - ---------------------------------------------
2024-11-03 15:21 - INFO - Epoch: 06 | Time: 2m 16s
2024-11-03 15:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32093
2024-11-03 15:21 - INFO - 	 Train Loss: 0.159
2024-11-03 15:21 - INFO - 	 Val. Loss: 0.170
2024-11-03 15:21 - INFO - 	 ROC-AUC: 0.832
2024-11-03 15:21 - INFO - 	 PR-AUC: 0.321
2024-11-03 15:21 - INFO - 	 Recall for 0.4 precision: 0.301
2024-11-03 15:21 - INFO - 	 Best Val. Loss: 0.170
2024-11-03 15:21 - INFO - 	 Best ROC-AUC: 0.832
2024-11-03 15:21 - INFO - 	 Best PR-AUC: 0.321
2024-11-03 15:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 15:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.166
2024-11-03 15:21 - INFO - 	 Best Recall for 0.4 precision: 0.367
2024-11-03 15:21 - INFO - ---------------------------------------------
2024-11-03 15:23 - INFO - ---------------------------------------------
2024-11-03 15:23 - INFO - Epoch: 07 | Time: 2m 9s
2024-11-03 15:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33358
2024-11-03 15:23 - INFO - 	 Train Loss: 0.155
2024-11-03 15:23 - INFO - 	 Val. Loss: 0.164
2024-11-03 15:23 - INFO - 	 ROC-AUC: 0.835
2024-11-03 15:23 - INFO - 	 PR-AUC: 0.334
2024-11-03 15:23 - INFO - 	 Recall for 0.4 precision: 0.315
2024-11-03 15:23 - INFO - 	 Best Val. Loss: 0.164
2024-11-03 15:23 - INFO - 	 Best ROC-AUC: 0.835
2024-11-03 15:23 - INFO - 	 Best PR-AUC: 0.334
2024-11-03 15:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 15:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-03 15:23 - INFO - 	 Best Recall for 0.4 precision: 0.367
2024-11-03 15:23 - INFO - ---------------------------------------------
2024-11-03 15:25 - INFO - ---------------------------------------------
2024-11-03 15:25 - INFO - Epoch: 08 | Time: 2m 2s
2024-11-03 15:25 - INFO - 	 Train Loss: 0.150
2024-11-03 15:25 - INFO - 	 Val. Loss: 0.154
2024-11-03 15:25 - INFO - 	 ROC-AUC: 0.846
2024-11-03 15:25 - INFO - 	 PR-AUC: 0.316
2024-11-03 15:25 - INFO - 	 Recall for 0.4 precision: 0.302
2024-11-03 15:25 - INFO - 	 Best Val. Loss: 0.154
2024-11-03 15:25 - INFO - 	 Best ROC-AUC: 0.846
2024-11-03 15:25 - INFO - 	 Best PR-AUC: 0.334
2024-11-03 15:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 15:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-03 15:25 - INFO - 	 Best Recall for 0.4 precision: 0.367
2024-11-03 15:25 - INFO - ---------------------------------------------
2024-11-03 15:27 - INFO - ---------------------------------------------
2024-11-03 15:27 - INFO - Epoch: 09 | Time: 2m 2s
2024-11-03 15:27 - INFO - 	 Train Loss: 0.149
2024-11-03 15:27 - INFO - 	 Val. Loss: 0.155
2024-11-03 15:27 - INFO - 	 ROC-AUC: 0.853
2024-11-03 15:27 - INFO - 	 PR-AUC: 0.328
2024-11-03 15:27 - INFO - 	 Recall for 0.4 precision: 0.270
2024-11-03 15:27 - INFO - 	 Best Val. Loss: 0.154
2024-11-03 15:27 - INFO - 	 Best ROC-AUC: 0.853
2024-11-03 15:27 - INFO - 	 Best PR-AUC: 0.334
2024-11-03 15:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.790
2024-11-03 15:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-03 15:27 - INFO - 	 Best Recall for 0.4 precision: 0.367
2024-11-03 15:27 - INFO - ---------------------------------------------
2024-11-03 15:29 - INFO - ---------------------------------------------
2024-11-03 15:29 - INFO - Epoch: 10 | Time: 2m 2s
2024-11-03 15:29 - INFO - 	 Train Loss: 0.147
2024-11-03 15:29 - INFO - 	 Val. Loss: 0.153
2024-11-03 15:29 - INFO - 	 ROC-AUC: 0.867
2024-11-03 15:29 - INFO - 	 PR-AUC: 0.323
2024-11-03 15:29 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-03 15:29 - INFO - 	 Best Val. Loss: 0.153
2024-11-03 15:29 - INFO - 	 Best ROC-AUC: 0.867
2024-11-03 15:29 - INFO - 	 Best PR-AUC: 0.334
2024-11-03 15:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.791
2024-11-03 15:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-03 15:29 - INFO - 	 Best Recall for 0.4 precision: 0.367
2024-11-03 15:29 - INFO - ---------------------------------------------
2024-11-03 15:32 - INFO - Fit the preprocessing pipeline
2024-11-03 15:32 - INFO - Training using device: mps
2024-11-03 15:32 - INFO - Creating generators
2024-11-03 15:32 - INFO - The model has 651,257 trainable parameters
2024-11-03 15:32 - INFO - * Model:
2024-11-03 15:32 - INFO - * -----------
2024-11-03 15:32 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 15:32 - INFO - * -----------
2024-11-03 15:32 - INFO - Evaluating model based on: aucpr
2024-11-03 15:32 - INFO - Training..

2024-11-03 15:33 - INFO - ---------------------------------------------
2024-11-03 15:33 - INFO - Epoch: 01 | Time: 1m 48s
2024-11-03 15:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23633
2024-11-03 15:33 - INFO - 	 Train Loss: 0.256
2024-11-03 15:33 - INFO - 	 Val. Loss: 0.312
2024-11-03 15:33 - INFO - 	 ROC-AUC: 0.743
2024-11-03 15:33 - INFO - 	 PR-AUC: 0.236
2024-11-03 15:33 - INFO - 	 Recall for 0.4 precision: 0.250
2024-11-03 15:33 - INFO - 	 Best Val. Loss: 0.312
2024-11-03 15:33 - INFO - 	 Best ROC-AUC: 0.743
2024-11-03 15:33 - INFO - 	 Best PR-AUC: 0.236
2024-11-03 15:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-11-03 15:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.120
2024-11-03 15:33 - INFO - 	 Best Recall for 0.4 precision: 0.250
2024-11-03 15:33 - INFO - ---------------------------------------------
2024-11-03 15:35 - INFO - ---------------------------------------------
2024-11-03 15:35 - INFO - Epoch: 02 | Time: 1m 58s
2024-11-03 15:35 - INFO - 	 Train Loss: 0.206
2024-11-03 15:35 - INFO - 	 Val. Loss: 0.242
2024-11-03 15:35 - INFO - 	 ROC-AUC: 0.773
2024-11-03 15:35 - INFO - 	 PR-AUC: 0.224
2024-11-03 15:35 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-03 15:35 - INFO - 	 Best Val. Loss: 0.242
2024-11-03 15:35 - INFO - 	 Best ROC-AUC: 0.773
2024-11-03 15:35 - INFO - 	 Best PR-AUC: 0.236
2024-11-03 15:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.731
2024-11-03 15:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.120
2024-11-03 15:35 - INFO - 	 Best Recall for 0.4 precision: 0.250
2024-11-03 15:35 - INFO - ---------------------------------------------
2024-11-03 15:37 - INFO - ---------------------------------------------
2024-11-03 15:37 - INFO - Epoch: 03 | Time: 2m 0s
2024-11-03 15:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26134
2024-11-03 15:37 - INFO - 	 Train Loss: 0.185
2024-11-03 15:37 - INFO - 	 Val. Loss: 0.222
2024-11-03 15:37 - INFO - 	 ROC-AUC: 0.765
2024-11-03 15:37 - INFO - 	 PR-AUC: 0.261
2024-11-03 15:37 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-03 15:37 - INFO - 	 Best Val. Loss: 0.222
2024-11-03 15:37 - INFO - 	 Best ROC-AUC: 0.773
2024-11-03 15:37 - INFO - 	 Best PR-AUC: 0.261
2024-11-03 15:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.731
2024-11-03 15:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 15:37 - INFO - 	 Best Recall for 0.4 precision: 0.289
2024-11-03 15:37 - INFO - ---------------------------------------------
2024-11-03 15:39 - INFO - ---------------------------------------------
2024-11-03 15:39 - INFO - Epoch: 04 | Time: 2m 0s
2024-11-03 15:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2851
2024-11-03 15:39 - INFO - 	 Train Loss: 0.172
2024-11-03 15:39 - INFO - 	 Val. Loss: 0.201
2024-11-03 15:39 - INFO - 	 ROC-AUC: 0.787
2024-11-03 15:39 - INFO - 	 PR-AUC: 0.285
2024-11-03 15:39 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-03 15:39 - INFO - 	 Best Val. Loss: 0.201
2024-11-03 15:39 - INFO - 	 Best ROC-AUC: 0.787
2024-11-03 15:39 - INFO - 	 Best PR-AUC: 0.285
2024-11-03 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-03 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-03 15:39 - INFO - 	 Best Recall for 0.4 precision: 0.306
2024-11-03 15:39 - INFO - ---------------------------------------------
2024-11-03 15:41 - INFO - ---------------------------------------------
2024-11-03 15:41 - INFO - Epoch: 05 | Time: 2m 1s
2024-11-03 15:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29519
2024-11-03 15:41 - INFO - 	 Train Loss: 0.163
2024-11-03 15:41 - INFO - 	 Val. Loss: 0.191
2024-11-03 15:41 - INFO - 	 ROC-AUC: 0.784
2024-11-03 15:41 - INFO - 	 PR-AUC: 0.295
2024-11-03 15:41 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-03 15:41 - INFO - 	 Best Val. Loss: 0.191
2024-11-03 15:41 - INFO - 	 Best ROC-AUC: 0.787
2024-11-03 15:41 - INFO - 	 Best PR-AUC: 0.295
2024-11-03 15:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-03 15:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 15:41 - INFO - 	 Best Recall for 0.4 precision: 0.306
2024-11-03 15:41 - INFO - ---------------------------------------------
2024-11-03 15:43 - INFO - ---------------------------------------------
2024-11-03 15:43 - INFO - Epoch: 06 | Time: 2m 2s
2024-11-03 15:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32238
2024-11-03 15:43 - INFO - 	 Train Loss: 0.158
2024-11-03 15:43 - INFO - 	 Val. Loss: 0.177
2024-11-03 15:43 - INFO - 	 ROC-AUC: 0.809
2024-11-03 15:43 - INFO - 	 PR-AUC: 0.322
2024-11-03 15:43 - INFO - 	 Recall for 0.4 precision: 0.382
2024-11-03 15:43 - INFO - 	 Best Val. Loss: 0.177
2024-11-03 15:43 - INFO - 	 Best ROC-AUC: 0.809
2024-11-03 15:43 - INFO - 	 Best PR-AUC: 0.322
2024-11-03 15:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-03 15:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 15:43 - INFO - 	 Best Recall for 0.4 precision: 0.382
2024-11-03 15:43 - INFO - ---------------------------------------------
2024-11-03 15:46 - INFO - ---------------------------------------------
2024-11-03 15:46 - INFO - Epoch: 07 | Time: 2m 1s
2024-11-03 15:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33075
2024-11-03 15:46 - INFO - 	 Train Loss: 0.154
2024-11-03 15:46 - INFO - 	 Val. Loss: 0.171
2024-11-03 15:46 - INFO - 	 ROC-AUC: 0.815
2024-11-03 15:46 - INFO - 	 PR-AUC: 0.331
2024-11-03 15:46 - INFO - 	 Recall for 0.4 precision: 0.371
2024-11-03 15:46 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 15:46 - INFO - 	 Best ROC-AUC: 0.815
2024-11-03 15:46 - INFO - 	 Best PR-AUC: 0.331
2024-11-03 15:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-03 15:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 15:46 - INFO - 	 Best Recall for 0.4 precision: 0.382
2024-11-03 15:46 - INFO - ---------------------------------------------
2024-11-03 15:48 - INFO - ---------------------------------------------
2024-11-03 15:48 - INFO - Epoch: 08 | Time: 2m 0s
2024-11-03 15:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33817
2024-11-03 15:48 - INFO - 	 Train Loss: 0.151
2024-11-03 15:48 - INFO - 	 Val. Loss: 0.171
2024-11-03 15:48 - INFO - 	 ROC-AUC: 0.824
2024-11-03 15:48 - INFO - 	 PR-AUC: 0.338
2024-11-03 15:48 - INFO - 	 Recall for 0.4 precision: 0.376
2024-11-03 15:48 - INFO - 	 Best Val. Loss: 0.171
2024-11-03 15:48 - INFO - 	 Best ROC-AUC: 0.824
2024-11-03 15:48 - INFO - 	 Best PR-AUC: 0.338
2024-11-03 15:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-03 15:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-03 15:48 - INFO - 	 Best Recall for 0.4 precision: 0.382
2024-11-03 15:48 - INFO - ---------------------------------------------
2024-11-03 15:50 - INFO - ---------------------------------------------
2024-11-03 15:50 - INFO - Epoch: 09 | Time: 2m 0s
2024-11-03 15:50 - INFO - 	 Train Loss: 0.151
2024-11-03 15:50 - INFO - 	 Val. Loss: 0.166
2024-11-03 15:50 - INFO - 	 ROC-AUC: 0.829
2024-11-03 15:50 - INFO - 	 PR-AUC: 0.335
2024-11-03 15:50 - INFO - 	 Recall for 0.4 precision: 0.393
2024-11-03 15:50 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 15:50 - INFO - 	 Best ROC-AUC: 0.829
2024-11-03 15:50 - INFO - 	 Best PR-AUC: 0.338
2024-11-03 15:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 15:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-03 15:50 - INFO - 	 Best Recall for 0.4 precision: 0.393
2024-11-03 15:50 - INFO - ---------------------------------------------
2024-11-03 15:52 - INFO - ---------------------------------------------
2024-11-03 15:52 - INFO - Epoch: 10 | Time: 2m 1s
2024-11-03 15:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34233
2024-11-03 15:52 - INFO - 	 Train Loss: 0.147
2024-11-03 15:52 - INFO - 	 Val. Loss: 0.152
2024-11-03 15:52 - INFO - 	 ROC-AUC: 0.868
2024-11-03 15:52 - INFO - 	 PR-AUC: 0.342
2024-11-03 15:52 - INFO - 	 Recall for 0.4 precision: 0.439
2024-11-03 15:52 - INFO - 	 Best Val. Loss: 0.152
2024-11-03 15:52 - INFO - 	 Best ROC-AUC: 0.868
2024-11-03 15:52 - INFO - 	 Best PR-AUC: 0.342
2024-11-03 15:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.797
2024-11-03 15:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 15:52 - INFO - 	 Best Recall for 0.4 precision: 0.439
2024-11-03 15:52 - INFO - ---------------------------------------------
2024-11-03 15:54 - INFO - Fit the preprocessing pipeline
2024-11-03 15:54 - INFO - Training using device: mps
2024-11-03 15:54 - INFO - Creating generators
2024-11-03 15:54 - INFO - The model has 651,257 trainable parameters
2024-11-03 15:54 - INFO - * Model:
2024-11-03 15:54 - INFO - * -----------
2024-11-03 15:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 15:54 - INFO - * -----------
2024-11-03 15:54 - INFO - Evaluating model based on: aucpr
2024-11-03 15:54 - INFO - Training..

2024-11-03 15:56 - INFO - ---------------------------------------------
2024-11-03 15:56 - INFO - Epoch: 01 | Time: 1m 52s
2024-11-03 15:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18503
2024-11-03 15:56 - INFO - 	 Train Loss: 0.254
2024-11-03 15:56 - INFO - 	 Val. Loss: 0.299
2024-11-03 15:56 - INFO - 	 ROC-AUC: 0.743
2024-11-03 15:56 - INFO - 	 PR-AUC: 0.185
2024-11-03 15:56 - INFO - 	 Recall for 0.4 precision: 0.068
2024-11-03 15:56 - INFO - 	 Best Val. Loss: 0.299
2024-11-03 15:56 - INFO - 	 Best ROC-AUC: 0.743
2024-11-03 15:56 - INFO - 	 Best PR-AUC: 0.185
2024-11-03 15:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.728
2024-11-03 15:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.128
2024-11-03 15:56 - INFO - 	 Best Recall for 0.4 precision: 0.068
2024-11-03 15:56 - INFO - ---------------------------------------------
2024-11-03 15:58 - INFO - ---------------------------------------------
2024-11-03 15:58 - INFO - Epoch: 02 | Time: 2m 3s
2024-11-03 15:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23148
2024-11-03 15:58 - INFO - 	 Train Loss: 0.209
2024-11-03 15:58 - INFO - 	 Val. Loss: 0.239
2024-11-03 15:58 - INFO - 	 ROC-AUC: 0.750
2024-11-03 15:58 - INFO - 	 PR-AUC: 0.231
2024-11-03 15:58 - INFO - 	 Recall for 0.4 precision: 0.153
2024-11-03 15:58 - INFO - 	 Best Val. Loss: 0.239
2024-11-03 15:58 - INFO - 	 Best ROC-AUC: 0.750
2024-11-03 15:58 - INFO - 	 Best PR-AUC: 0.231
2024-11-03 15:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.718
2024-11-03 15:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.138
2024-11-03 15:58 - INFO - 	 Best Recall for 0.4 precision: 0.153
2024-11-03 15:58 - INFO - ---------------------------------------------
2024-11-03 16:00 - INFO - ---------------------------------------------
2024-11-03 16:00 - INFO - Epoch: 03 | Time: 2m 3s
2024-11-03 16:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23858
2024-11-03 16:00 - INFO - 	 Train Loss: 0.186
2024-11-03 16:00 - INFO - 	 Val. Loss: 0.214
2024-11-03 16:00 - INFO - 	 ROC-AUC: 0.759
2024-11-03 16:00 - INFO - 	 PR-AUC: 0.239
2024-11-03 16:00 - INFO - 	 Recall for 0.4 precision: 0.180
2024-11-03 16:00 - INFO - 	 Best Val. Loss: 0.214
2024-11-03 16:00 - INFO - 	 Best ROC-AUC: 0.759
2024-11-03 16:00 - INFO - 	 Best PR-AUC: 0.239
2024-11-03 16:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.733
2024-11-03 16:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-03 16:00 - INFO - 	 Best Recall for 0.4 precision: 0.180
2024-11-03 16:00 - INFO - ---------------------------------------------
2024-11-03 16:02 - INFO - ---------------------------------------------
2024-11-03 16:02 - INFO - Epoch: 04 | Time: 2m 3s
2024-11-03 16:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27581
2024-11-03 16:02 - INFO - 	 Train Loss: 0.173
2024-11-03 16:02 - INFO - 	 Val. Loss: 0.199
2024-11-03 16:02 - INFO - 	 ROC-AUC: 0.768
2024-11-03 16:02 - INFO - 	 PR-AUC: 0.276
2024-11-03 16:02 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-03 16:02 - INFO - 	 Best Val. Loss: 0.199
2024-11-03 16:02 - INFO - 	 Best ROC-AUC: 0.768
2024-11-03 16:02 - INFO - 	 Best PR-AUC: 0.276
2024-11-03 16:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-03 16:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 16:02 - INFO - 	 Best Recall for 0.4 precision: 0.273
2024-11-03 16:02 - INFO - ---------------------------------------------
2024-11-03 16:04 - INFO - ---------------------------------------------
2024-11-03 16:04 - INFO - Epoch: 05 | Time: 2m 3s
2024-11-03 16:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30711
2024-11-03 16:04 - INFO - 	 Train Loss: 0.165
2024-11-03 16:04 - INFO - 	 Val. Loss: 0.184
2024-11-03 16:04 - INFO - 	 ROC-AUC: 0.793
2024-11-03 16:04 - INFO - 	 PR-AUC: 0.307
2024-11-03 16:04 - INFO - 	 Recall for 0.4 precision: 0.312
2024-11-03 16:04 - INFO - 	 Best Val. Loss: 0.184
2024-11-03 16:04 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 16:04 - INFO - 	 Best PR-AUC: 0.307
2024-11-03 16:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-03 16:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 16:04 - INFO - 	 Best Recall for 0.4 precision: 0.312
2024-11-03 16:04 - INFO - ---------------------------------------------
2024-11-03 16:06 - INFO - ---------------------------------------------
2024-11-03 16:06 - INFO - Epoch: 06 | Time: 2m 3s
2024-11-03 16:06 - INFO - 	 Train Loss: 0.158
2024-11-03 16:06 - INFO - 	 Val. Loss: 0.179
2024-11-03 16:06 - INFO - 	 ROC-AUC: 0.782
2024-11-03 16:06 - INFO - 	 PR-AUC: 0.286
2024-11-03 16:06 - INFO - 	 Recall for 0.4 precision: 0.289
2024-11-03 16:06 - INFO - 	 Best Val. Loss: 0.179
2024-11-03 16:06 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 16:06 - INFO - 	 Best PR-AUC: 0.307
2024-11-03 16:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-03 16:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 16:06 - INFO - 	 Best Recall for 0.4 precision: 0.312
2024-11-03 16:06 - INFO - ---------------------------------------------
2024-11-03 16:09 - INFO - ---------------------------------------------
2024-11-03 16:09 - INFO - Epoch: 07 | Time: 2m 5s
2024-11-03 16:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32088
2024-11-03 16:09 - INFO - 	 Train Loss: 0.155
2024-11-03 16:09 - INFO - 	 Val. Loss: 0.170
2024-11-03 16:09 - INFO - 	 ROC-AUC: 0.800
2024-11-03 16:09 - INFO - 	 PR-AUC: 0.321
2024-11-03 16:09 - INFO - 	 Recall for 0.4 precision: 0.351
2024-11-03 16:09 - INFO - 	 Best Val. Loss: 0.170
2024-11-03 16:09 - INFO - 	 Best ROC-AUC: 0.800
2024-11-03 16:09 - INFO - 	 Best PR-AUC: 0.321
2024-11-03 16:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-03 16:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 16:09 - INFO - 	 Best Recall for 0.4 precision: 0.351
2024-11-03 16:09 - INFO - ---------------------------------------------
2024-11-03 16:11 - INFO - ---------------------------------------------
2024-11-03 16:11 - INFO - Epoch: 08 | Time: 2m 3s
2024-11-03 16:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32568
2024-11-03 16:11 - INFO - 	 Train Loss: 0.152
2024-11-03 16:11 - INFO - 	 Val. Loss: 0.168
2024-11-03 16:11 - INFO - 	 ROC-AUC: 0.800
2024-11-03 16:11 - INFO - 	 PR-AUC: 0.326
2024-11-03 16:11 - INFO - 	 Recall for 0.4 precision: 0.340
2024-11-03 16:11 - INFO - 	 Best Val. Loss: 0.168
2024-11-03 16:11 - INFO - 	 Best ROC-AUC: 0.800
2024-11-03 16:11 - INFO - 	 Best PR-AUC: 0.326
2024-11-03 16:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-03 16:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-03 16:11 - INFO - 	 Best Recall for 0.4 precision: 0.351
2024-11-03 16:11 - INFO - ---------------------------------------------
2024-11-03 16:13 - INFO - ---------------------------------------------
2024-11-03 16:13 - INFO - Epoch: 09 | Time: 2m 3s
2024-11-03 16:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35998
2024-11-03 16:13 - INFO - 	 Train Loss: 0.149
2024-11-03 16:13 - INFO - 	 Val. Loss: 0.159
2024-11-03 16:13 - INFO - 	 ROC-AUC: 0.821
2024-11-03 16:13 - INFO - 	 PR-AUC: 0.360
2024-11-03 16:13 - INFO - 	 Recall for 0.4 precision: 0.374
2024-11-03 16:13 - INFO - 	 Best Val. Loss: 0.159
2024-11-03 16:13 - INFO - 	 Best ROC-AUC: 0.821
2024-11-03 16:13 - INFO - 	 Best PR-AUC: 0.360
2024-11-03 16:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.781
2024-11-03 16:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 16:13 - INFO - 	 Best Recall for 0.4 precision: 0.374
2024-11-03 16:13 - INFO - ---------------------------------------------
2024-11-03 16:15 - INFO - ---------------------------------------------
2024-11-03 16:15 - INFO - Epoch: 10 | Time: 2m 3s
2024-11-03 16:15 - INFO - 	 Train Loss: 0.147
2024-11-03 16:15 - INFO - 	 Val. Loss: 0.153
2024-11-03 16:15 - INFO - 	 ROC-AUC: 0.847
2024-11-03 16:15 - INFO - 	 PR-AUC: 0.359
2024-11-03 16:15 - INFO - 	 Recall for 0.4 precision: 0.418
2024-11-03 16:15 - INFO - 	 Best Val. Loss: 0.153
2024-11-03 16:15 - INFO - 	 Best ROC-AUC: 0.847
2024-11-03 16:15 - INFO - 	 Best PR-AUC: 0.360
2024-11-03 16:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.791
2024-11-03 16:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 16:15 - INFO - 	 Best Recall for 0.4 precision: 0.418
2024-11-03 16:15 - INFO - ---------------------------------------------
2024-11-03 16:17 - INFO - Fit the preprocessing pipeline
2024-11-03 16:17 - INFO - Training using device: mps
2024-11-03 16:17 - INFO - Creating generators
2024-11-03 16:17 - INFO - The model has 651,257 trainable parameters
2024-11-03 16:17 - INFO - * Model:
2024-11-03 16:17 - INFO - * -----------
2024-11-03 16:17 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 16:17 - INFO - * -----------
2024-11-03 16:17 - INFO - Evaluating model based on: aucpr
2024-11-03 16:17 - INFO - Training..

2024-11-03 16:19 - INFO - ---------------------------------------------
2024-11-03 16:19 - INFO - Epoch: 01 | Time: 1m 50s
2024-11-03 16:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14532
2024-11-03 16:19 - INFO - 	 Train Loss: 0.258
2024-11-03 16:19 - INFO - 	 Val. Loss: 0.306
2024-11-03 16:19 - INFO - 	 ROC-AUC: 0.729
2024-11-03 16:19 - INFO - 	 PR-AUC: 0.145
2024-11-03 16:19 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-03 16:19 - INFO - 	 Best Val. Loss: 0.306
2024-11-03 16:19 - INFO - 	 Best ROC-AUC: 0.729
2024-11-03 16:19 - INFO - 	 Best PR-AUC: 0.145
2024-11-03 16:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.642
2024-11-03 16:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.075
2024-11-03 16:19 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-03 16:19 - INFO - ---------------------------------------------
2024-11-03 16:21 - INFO - ---------------------------------------------
2024-11-03 16:21 - INFO - Epoch: 02 | Time: 2m 0s
2024-11-03 16:21 - INFO - 	 Train Loss: 0.213
2024-11-03 16:21 - INFO - 	 Val. Loss: 0.233
2024-11-03 16:21 - INFO - 	 ROC-AUC: 0.726
2024-11-03 16:21 - INFO - 	 PR-AUC: 0.127
2024-11-03 16:21 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-03 16:21 - INFO - 	 Best Val. Loss: 0.233
2024-11-03 16:21 - INFO - 	 Best ROC-AUC: 0.729
2024-11-03 16:21 - INFO - 	 Best PR-AUC: 0.145
2024-11-03 16:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.642
2024-11-03 16:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.075
2024-11-03 16:21 - INFO - 	 Best Recall for 0.4 precision: 0.010
2024-11-03 16:21 - INFO - ---------------------------------------------
2024-11-03 16:23 - INFO - ---------------------------------------------
2024-11-03 16:23 - INFO - Epoch: 03 | Time: 2m 0s
2024-11-03 16:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21133
2024-11-03 16:23 - INFO - 	 Train Loss: 0.186
2024-11-03 16:23 - INFO - 	 Val. Loss: 0.212
2024-11-03 16:23 - INFO - 	 ROC-AUC: 0.792
2024-11-03 16:23 - INFO - 	 PR-AUC: 0.211
2024-11-03 16:23 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-03 16:23 - INFO - 	 Best Val. Loss: 0.212
2024-11-03 16:23 - INFO - 	 Best ROC-AUC: 0.792
2024-11-03 16:23 - INFO - 	 Best PR-AUC: 0.211
2024-11-03 16:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.740
2024-11-03 16:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 16:23 - INFO - 	 Best Recall for 0.4 precision: 0.026
2024-11-03 16:23 - INFO - ---------------------------------------------
2024-11-03 16:25 - INFO - ---------------------------------------------
2024-11-03 16:25 - INFO - Epoch: 04 | Time: 2m 0s
2024-11-03 16:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25418
2024-11-03 16:25 - INFO - 	 Train Loss: 0.173
2024-11-03 16:25 - INFO - 	 Val. Loss: 0.189
2024-11-03 16:25 - INFO - 	 ROC-AUC: 0.821
2024-11-03 16:25 - INFO - 	 PR-AUC: 0.254
2024-11-03 16:25 - INFO - 	 Recall for 0.4 precision: 0.208
2024-11-03 16:25 - INFO - 	 Best Val. Loss: 0.189
2024-11-03 16:25 - INFO - 	 Best ROC-AUC: 0.821
2024-11-03 16:25 - INFO - 	 Best PR-AUC: 0.254
2024-11-03 16:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-03 16:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-03 16:25 - INFO - 	 Best Recall for 0.4 precision: 0.208
2024-11-03 16:25 - INFO - ---------------------------------------------
2024-11-03 16:27 - INFO - ---------------------------------------------
2024-11-03 16:27 - INFO - Epoch: 05 | Time: 2m 2s
2024-11-03 16:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29426
2024-11-03 16:27 - INFO - 	 Train Loss: 0.160
2024-11-03 16:27 - INFO - 	 Val. Loss: 0.180
2024-11-03 16:27 - INFO - 	 ROC-AUC: 0.844
2024-11-03 16:27 - INFO - 	 PR-AUC: 0.294
2024-11-03 16:27 - INFO - 	 Recall for 0.4 precision: 0.250
2024-11-03 16:27 - INFO - 	 Best Val. Loss: 0.180
2024-11-03 16:27 - INFO - 	 Best ROC-AUC: 0.844
2024-11-03 16:27 - INFO - 	 Best PR-AUC: 0.294
2024-11-03 16:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-03 16:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.172
2024-11-03 16:27 - INFO - 	 Best Recall for 0.4 precision: 0.250
2024-11-03 16:27 - INFO - ---------------------------------------------
2024-11-03 16:29 - INFO - ---------------------------------------------
2024-11-03 16:29 - INFO - Epoch: 06 | Time: 2m 1s
2024-11-03 16:29 - INFO - 	 Train Loss: 0.160
2024-11-03 16:29 - INFO - 	 Val. Loss: 0.166
2024-11-03 16:29 - INFO - 	 ROC-AUC: 0.854
2024-11-03 16:29 - INFO - 	 PR-AUC: 0.275
2024-11-03 16:29 - INFO - 	 Recall for 0.4 precision: 0.185
2024-11-03 16:29 - INFO - 	 Best Val. Loss: 0.166
2024-11-03 16:29 - INFO - 	 Best ROC-AUC: 0.854
2024-11-03 16:29 - INFO - 	 Best PR-AUC: 0.294
2024-11-03 16:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.793
2024-11-03 16:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.172
2024-11-03 16:29 - INFO - 	 Best Recall for 0.4 precision: 0.250
2024-11-03 16:29 - INFO - ---------------------------------------------
2024-11-03 16:31 - INFO - ---------------------------------------------
2024-11-03 16:31 - INFO - Epoch: 07 | Time: 2m 1s
2024-11-03 16:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31016
2024-11-03 16:31 - INFO - 	 Train Loss: 0.154
2024-11-03 16:31 - INFO - 	 Val. Loss: 0.159
2024-11-03 16:31 - INFO - 	 ROC-AUC: 0.859
2024-11-03 16:31 - INFO - 	 PR-AUC: 0.310
2024-11-03 16:31 - INFO - 	 Recall for 0.4 precision: 0.299
2024-11-03 16:31 - INFO - 	 Best Val. Loss: 0.159
2024-11-03 16:31 - INFO - 	 Best ROC-AUC: 0.859
2024-11-03 16:31 - INFO - 	 Best PR-AUC: 0.310
2024-11-03 16:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.803
2024-11-03 16:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.186
2024-11-03 16:31 - INFO - 	 Best Recall for 0.4 precision: 0.299
2024-11-03 16:31 - INFO - ---------------------------------------------
2024-11-03 16:34 - INFO - ---------------------------------------------
2024-11-03 16:34 - INFO - Epoch: 08 | Time: 2m 3s
2024-11-03 16:34 - INFO - 	 Train Loss: 0.149
2024-11-03 16:34 - INFO - 	 Val. Loss: 0.160
2024-11-03 16:34 - INFO - 	 ROC-AUC: 0.847
2024-11-03 16:34 - INFO - 	 PR-AUC: 0.268
2024-11-03 16:34 - INFO - 	 Recall for 0.4 precision: 0.130
2024-11-03 16:34 - INFO - 	 Best Val. Loss: 0.159
2024-11-03 16:34 - INFO - 	 Best ROC-AUC: 0.859
2024-11-03 16:34 - INFO - 	 Best PR-AUC: 0.310
2024-11-03 16:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.803
2024-11-03 16:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.186
2024-11-03 16:34 - INFO - 	 Best Recall for 0.4 precision: 0.299
2024-11-03 16:34 - INFO - ---------------------------------------------
2024-11-03 16:36 - INFO - ---------------------------------------------
2024-11-03 16:36 - INFO - Epoch: 09 | Time: 2m 3s
2024-11-03 16:36 - INFO - 	 Train Loss: 0.143
2024-11-03 16:36 - INFO - 	 Val. Loss: 0.283
2024-11-03 16:36 - INFO - 	 ROC-AUC: 0.773
2024-11-03 16:36 - INFO - 	 PR-AUC: 0.120
2024-11-03 16:36 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-03 16:36 - INFO - 	 Best Val. Loss: 0.159
2024-11-03 16:36 - INFO - 	 Best ROC-AUC: 0.859
2024-11-03 16:36 - INFO - 	 Best PR-AUC: 0.310
2024-11-03 16:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.803
2024-11-03 16:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.186
2024-11-03 16:36 - INFO - 	 Best Recall for 0.4 precision: 0.299
2024-11-03 16:36 - INFO - ---------------------------------------------
2024-11-03 16:38 - INFO - ---------------------------------------------
2024-11-03 16:38 - INFO - Epoch: 10 | Time: 2m 1s
2024-11-03 16:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60608
2024-11-03 16:38 - INFO - 	 Train Loss: 0.132
2024-11-03 16:38 - INFO - 	 Val. Loss: 0.112
2024-11-03 16:38 - INFO - 	 ROC-AUC: 0.969
2024-11-03 16:38 - INFO - 	 PR-AUC: 0.606
2024-11-03 16:38 - INFO - 	 Recall for 0.4 precision: 0.915
2024-11-03 16:38 - INFO - 	 Best Val. Loss: 0.112
2024-11-03 16:38 - INFO - 	 Best ROC-AUC: 0.969
2024-11-03 16:38 - INFO - 	 Best PR-AUC: 0.606
2024-11-03 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-03 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.368
2024-11-03 16:38 - INFO - 	 Best Recall for 0.4 precision: 0.915
2024-11-03 16:38 - INFO - ---------------------------------------------
2024-11-03 16:40 - INFO - Fit the preprocessing pipeline
2024-11-03 16:40 - INFO - Training using device: mps
2024-11-03 16:40 - INFO - Creating generators
2024-11-03 16:40 - INFO - The model has 651,257 trainable parameters
2024-11-03 16:40 - INFO - * Model:
2024-11-03 16:40 - INFO - * -----------
2024-11-03 16:40 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 16:40 - INFO - * -----------
2024-11-03 16:40 - INFO - Evaluating model based on: aucpr
2024-11-03 16:40 - INFO - Training..

2024-11-03 16:42 - INFO - ---------------------------------------------
2024-11-03 16:42 - INFO - Epoch: 01 | Time: 1m 47s
2024-11-03 16:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09329
2024-11-03 16:42 - INFO - 	 Train Loss: 0.258
2024-11-03 16:42 - INFO - 	 Val. Loss: 0.299
2024-11-03 16:42 - INFO - 	 ROC-AUC: 0.697
2024-11-03 16:42 - INFO - 	 PR-AUC: 0.093
2024-11-03 16:42 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-03 16:42 - INFO - 	 Best Val. Loss: 0.299
2024-11-03 16:42 - INFO - 	 Best ROC-AUC: 0.697
2024-11-03 16:42 - INFO - 	 Best PR-AUC: 0.093
2024-11-03 16:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.639
2024-11-03 16:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.068
2024-11-03 16:42 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-03 16:42 - INFO - ---------------------------------------------
2024-11-03 16:44 - INFO - ---------------------------------------------
2024-11-03 16:44 - INFO - Epoch: 02 | Time: 1m 56s
2024-11-03 16:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22355
2024-11-03 16:44 - INFO - 	 Train Loss: 0.213
2024-11-03 16:44 - INFO - 	 Val. Loss: 0.253
2024-11-03 16:44 - INFO - 	 ROC-AUC: 0.750
2024-11-03 16:44 - INFO - 	 PR-AUC: 0.224
2024-11-03 16:44 - INFO - 	 Recall for 0.4 precision: 0.174
2024-11-03 16:44 - INFO - 	 Best Val. Loss: 0.253
2024-11-03 16:44 - INFO - 	 Best ROC-AUC: 0.750
2024-11-03 16:44 - INFO - 	 Best PR-AUC: 0.224
2024-11-03 16:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-11-03 16:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.119
2024-11-03 16:44 - INFO - 	 Best Recall for 0.4 precision: 0.174
2024-11-03 16:44 - INFO - ---------------------------------------------
2024-11-03 16:46 - INFO - ---------------------------------------------
2024-11-03 16:46 - INFO - Epoch: 03 | Time: 1m 58s
2024-11-03 16:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2638
2024-11-03 16:46 - INFO - 	 Train Loss: 0.189
2024-11-03 16:46 - INFO - 	 Val. Loss: 0.216
2024-11-03 16:46 - INFO - 	 ROC-AUC: 0.769
2024-11-03 16:46 - INFO - 	 PR-AUC: 0.264
2024-11-03 16:46 - INFO - 	 Recall for 0.4 precision: 0.254
2024-11-03 16:46 - INFO - 	 Best Val. Loss: 0.216
2024-11-03 16:46 - INFO - 	 Best ROC-AUC: 0.769
2024-11-03 16:46 - INFO - 	 Best PR-AUC: 0.264
2024-11-03 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-03 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-03 16:46 - INFO - 	 Best Recall for 0.4 precision: 0.254
2024-11-03 16:46 - INFO - ---------------------------------------------
2024-11-03 16:48 - INFO - ---------------------------------------------
2024-11-03 16:48 - INFO - Epoch: 04 | Time: 1m 59s
2024-11-03 16:48 - INFO - 	 Train Loss: 0.173
2024-11-03 16:48 - INFO - 	 Val. Loss: 0.200
2024-11-03 16:48 - INFO - 	 ROC-AUC: 0.790
2024-11-03 16:48 - INFO - 	 PR-AUC: 0.259
2024-11-03 16:48 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-03 16:48 - INFO - 	 Best Val. Loss: 0.200
2024-11-03 16:48 - INFO - 	 Best ROC-AUC: 0.790
2024-11-03 16:48 - INFO - 	 Best PR-AUC: 0.264
2024-11-03 16:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-03 16:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-03 16:48 - INFO - 	 Best Recall for 0.4 precision: 0.254
2024-11-03 16:48 - INFO - ---------------------------------------------
2024-11-03 16:50 - INFO - ---------------------------------------------
2024-11-03 16:50 - INFO - Epoch: 05 | Time: 1m 58s
2024-11-03 16:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28005
2024-11-03 16:50 - INFO - 	 Train Loss: 0.164
2024-11-03 16:50 - INFO - 	 Val. Loss: 0.181
2024-11-03 16:50 - INFO - 	 ROC-AUC: 0.809
2024-11-03 16:50 - INFO - 	 PR-AUC: 0.280
2024-11-03 16:50 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-03 16:50 - INFO - 	 Best Val. Loss: 0.181
2024-11-03 16:50 - INFO - 	 Best ROC-AUC: 0.809
2024-11-03 16:50 - INFO - 	 Best PR-AUC: 0.280
2024-11-03 16:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 16:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 16:50 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-03 16:50 - INFO - ---------------------------------------------
2024-11-03 16:52 - INFO - ---------------------------------------------
2024-11-03 16:52 - INFO - Epoch: 06 | Time: 1m 58s
2024-11-03 16:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29784
2024-11-03 16:52 - INFO - 	 Train Loss: 0.157
2024-11-03 16:52 - INFO - 	 Val. Loss: 0.173
2024-11-03 16:52 - INFO - 	 ROC-AUC: 0.806
2024-11-03 16:52 - INFO - 	 PR-AUC: 0.298
2024-11-03 16:52 - INFO - 	 Recall for 0.4 precision: 0.332
2024-11-03 16:52 - INFO - 	 Best Val. Loss: 0.173
2024-11-03 16:52 - INFO - 	 Best ROC-AUC: 0.809
2024-11-03 16:52 - INFO - 	 Best PR-AUC: 0.298
2024-11-03 16:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-03 16:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 16:52 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 16:52 - INFO - ---------------------------------------------
2024-11-03 16:54 - INFO - ---------------------------------------------
2024-11-03 16:54 - INFO - Epoch: 07 | Time: 1m 58s
2024-11-03 16:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29815
2024-11-03 16:54 - INFO - 	 Train Loss: 0.154
2024-11-03 16:54 - INFO - 	 Val. Loss: 0.161
2024-11-03 16:54 - INFO - 	 ROC-AUC: 0.820
2024-11-03 16:54 - INFO - 	 PR-AUC: 0.298
2024-11-03 16:54 - INFO - 	 Recall for 0.4 precision: 0.299
2024-11-03 16:54 - INFO - 	 Best Val. Loss: 0.161
2024-11-03 16:54 - INFO - 	 Best ROC-AUC: 0.820
2024-11-03 16:54 - INFO - 	 Best PR-AUC: 0.298
2024-11-03 16:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-03 16:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-03 16:54 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-03 16:54 - INFO - ---------------------------------------------
2024-11-03 16:56 - INFO - ---------------------------------------------
2024-11-03 16:56 - INFO - Epoch: 08 | Time: 1m 59s
2024-11-03 16:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30764
2024-11-03 16:56 - INFO - 	 Train Loss: 0.151
2024-11-03 16:56 - INFO - 	 Val. Loss: 0.160
2024-11-03 16:56 - INFO - 	 ROC-AUC: 0.831
2024-11-03 16:56 - INFO - 	 PR-AUC: 0.308
2024-11-03 16:56 - INFO - 	 Recall for 0.4 precision: 0.335
2024-11-03 16:56 - INFO - 	 Best Val. Loss: 0.160
2024-11-03 16:56 - INFO - 	 Best ROC-AUC: 0.831
2024-11-03 16:56 - INFO - 	 Best PR-AUC: 0.308
2024-11-03 16:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-03 16:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 16:56 - INFO - 	 Best Recall for 0.4 precision: 0.335
2024-11-03 16:56 - INFO - ---------------------------------------------
2024-11-03 16:58 - INFO - ---------------------------------------------
2024-11-03 16:58 - INFO - Epoch: 09 | Time: 2m 1s
2024-11-03 16:58 - INFO - 	 Train Loss: 0.149
2024-11-03 16:58 - INFO - 	 Val. Loss: 0.155
2024-11-03 16:58 - INFO - 	 ROC-AUC: 0.845
2024-11-03 16:58 - INFO - 	 PR-AUC: 0.297
2024-11-03 16:58 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-03 16:58 - INFO - 	 Best Val. Loss: 0.155
2024-11-03 16:58 - INFO - 	 Best ROC-AUC: 0.845
2024-11-03 16:58 - INFO - 	 Best PR-AUC: 0.308
2024-11-03 16:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.776
2024-11-03 16:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-03 16:58 - INFO - 	 Best Recall for 0.4 precision: 0.335
2024-11-03 16:58 - INFO - ---------------------------------------------
2024-11-03 17:00 - INFO - ---------------------------------------------
2024-11-03 17:00 - INFO - Epoch: 10 | Time: 2m 1s
2024-11-03 17:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34612
2024-11-03 17:00 - INFO - 	 Train Loss: 0.147
2024-11-03 17:00 - INFO - 	 Val. Loss: 0.146
2024-11-03 17:00 - INFO - 	 ROC-AUC: 0.869
2024-11-03 17:00 - INFO - 	 PR-AUC: 0.346
2024-11-03 17:00 - INFO - 	 Recall for 0.4 precision: 0.315
2024-11-03 17:00 - INFO - 	 Best Val. Loss: 0.146
2024-11-03 17:00 - INFO - 	 Best ROC-AUC: 0.869
2024-11-03 17:00 - INFO - 	 Best PR-AUC: 0.346
2024-11-03 17:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.798
2024-11-03 17:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-03 17:00 - INFO - 	 Best Recall for 0.4 precision: 0.335
2024-11-03 17:00 - INFO - ---------------------------------------------
2024-11-03 17:03 - INFO - Fit the preprocessing pipeline
2024-11-03 17:03 - INFO - Training using device: mps
2024-11-03 17:03 - INFO - Creating generators
2024-11-03 17:03 - INFO - The model has 651,257 trainable parameters
2024-11-03 17:03 - INFO - * Model:
2024-11-03 17:03 - INFO - * -----------
2024-11-03 17:03 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 17:03 - INFO - * -----------
2024-11-03 17:03 - INFO - Evaluating model based on: aucpr
2024-11-03 17:03 - INFO - Training..

2024-11-03 17:05 - INFO - ---------------------------------------------
2024-11-03 17:05 - INFO - Epoch: 01 | Time: 1m 45s
2024-11-03 17:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.184
2024-11-03 17:05 - INFO - 	 Train Loss: 0.250
2024-11-03 17:05 - INFO - 	 Val. Loss: 0.297
2024-11-03 17:05 - INFO - 	 ROC-AUC: 0.746
2024-11-03 17:05 - INFO - 	 PR-AUC: 0.184
2024-11-03 17:05 - INFO - 	 Recall for 0.4 precision: 0.117
2024-11-03 17:05 - INFO - 	 Best Val. Loss: 0.297
2024-11-03 17:05 - INFO - 	 Best ROC-AUC: 0.746
2024-11-03 17:05 - INFO - 	 Best PR-AUC: 0.184
2024-11-03 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.708
2024-11-03 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.117
2024-11-03 17:05 - INFO - 	 Best Recall for 0.4 precision: 0.117
2024-11-03 17:05 - INFO - ---------------------------------------------
2024-11-03 17:07 - INFO - ---------------------------------------------
2024-11-03 17:07 - INFO - Epoch: 02 | Time: 1m 56s
2024-11-03 17:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23751
2024-11-03 17:07 - INFO - 	 Train Loss: 0.206
2024-11-03 17:07 - INFO - 	 Val. Loss: 0.233
2024-11-03 17:07 - INFO - 	 ROC-AUC: 0.773
2024-11-03 17:07 - INFO - 	 PR-AUC: 0.238
2024-11-03 17:07 - INFO - 	 Recall for 0.4 precision: 0.185
2024-11-03 17:07 - INFO - 	 Best Val. Loss: 0.233
2024-11-03 17:07 - INFO - 	 Best ROC-AUC: 0.773
2024-11-03 17:07 - INFO - 	 Best PR-AUC: 0.238
2024-11-03 17:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-03 17:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-03 17:07 - INFO - 	 Best Recall for 0.4 precision: 0.185
2024-11-03 17:07 - INFO - ---------------------------------------------
2024-11-03 17:08 - INFO - ---------------------------------------------
2024-11-03 17:08 - INFO - Epoch: 03 | Time: 1m 56s
2024-11-03 17:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25259
2024-11-03 17:08 - INFO - 	 Train Loss: 0.184
2024-11-03 17:08 - INFO - 	 Val. Loss: 0.216
2024-11-03 17:08 - INFO - 	 ROC-AUC: 0.791
2024-11-03 17:08 - INFO - 	 PR-AUC: 0.253
2024-11-03 17:08 - INFO - 	 Recall for 0.4 precision: 0.221
2024-11-03 17:08 - INFO - 	 Best Val. Loss: 0.216
2024-11-03 17:08 - INFO - 	 Best ROC-AUC: 0.791
2024-11-03 17:08 - INFO - 	 Best PR-AUC: 0.253
2024-11-03 17:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-03 17:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.140
2024-11-03 17:08 - INFO - 	 Best Recall for 0.4 precision: 0.221
2024-11-03 17:08 - INFO - ---------------------------------------------
2024-11-03 17:10 - INFO - ---------------------------------------------
2024-11-03 17:10 - INFO - Epoch: 04 | Time: 1m 57s
2024-11-03 17:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28661
2024-11-03 17:10 - INFO - 	 Train Loss: 0.171
2024-11-03 17:10 - INFO - 	 Val. Loss: 0.203
2024-11-03 17:10 - INFO - 	 ROC-AUC: 0.794
2024-11-03 17:10 - INFO - 	 PR-AUC: 0.287
2024-11-03 17:10 - INFO - 	 Recall for 0.4 precision: 0.333
2024-11-03 17:10 - INFO - 	 Best Val. Loss: 0.203
2024-11-03 17:10 - INFO - 	 Best ROC-AUC: 0.794
2024-11-03 17:10 - INFO - 	 Best PR-AUC: 0.287
2024-11-03 17:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 17:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 17:10 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-03 17:10 - INFO - ---------------------------------------------
2024-11-03 17:12 - INFO - ---------------------------------------------
2024-11-03 17:12 - INFO - Epoch: 05 | Time: 1m 59s
2024-11-03 17:12 - INFO - 	 Train Loss: 0.162
2024-11-03 17:12 - INFO - 	 Val. Loss: 0.181
2024-11-03 17:12 - INFO - 	 ROC-AUC: 0.815
2024-11-03 17:12 - INFO - 	 PR-AUC: 0.276
2024-11-03 17:12 - INFO - 	 Recall for 0.4 precision: 0.223
2024-11-03 17:12 - INFO - 	 Best Val. Loss: 0.181
2024-11-03 17:12 - INFO - 	 Best ROC-AUC: 0.815
2024-11-03 17:12 - INFO - 	 Best PR-AUC: 0.287
2024-11-03 17:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-03 17:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-03 17:12 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-03 17:12 - INFO - ---------------------------------------------
2024-11-03 17:14 - INFO - ---------------------------------------------
2024-11-03 17:14 - INFO - Epoch: 06 | Time: 1m 58s
2024-11-03 17:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31577
2024-11-03 17:14 - INFO - 	 Train Loss: 0.158
2024-11-03 17:14 - INFO - 	 Val. Loss: 0.177
2024-11-03 17:14 - INFO - 	 ROC-AUC: 0.828
2024-11-03 17:14 - INFO - 	 PR-AUC: 0.316
2024-11-03 17:14 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-03 17:14 - INFO - 	 Best Val. Loss: 0.177
2024-11-03 17:14 - INFO - 	 Best ROC-AUC: 0.828
2024-11-03 17:14 - INFO - 	 Best PR-AUC: 0.316
2024-11-03 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.783
2024-11-03 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-03 17:14 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-03 17:14 - INFO - ---------------------------------------------
2024-11-03 17:16 - INFO - ---------------------------------------------
2024-11-03 17:16 - INFO - Epoch: 07 | Time: 1m 59s
2024-11-03 17:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32174
2024-11-03 17:16 - INFO - 	 Train Loss: 0.152
2024-11-03 17:16 - INFO - 	 Val. Loss: 0.165
2024-11-03 17:16 - INFO - 	 ROC-AUC: 0.832
2024-11-03 17:16 - INFO - 	 PR-AUC: 0.322
2024-11-03 17:16 - INFO - 	 Recall for 0.4 precision: 0.319
2024-11-03 17:16 - INFO - 	 Best Val. Loss: 0.165
2024-11-03 17:16 - INFO - 	 Best ROC-AUC: 0.832
2024-11-03 17:16 - INFO - 	 Best PR-AUC: 0.322
2024-11-03 17:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.791
2024-11-03 17:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.176
2024-11-03 17:16 - INFO - 	 Best Recall for 0.4 precision: 0.333
2024-11-03 17:16 - INFO - ---------------------------------------------
2024-11-03 17:18 - INFO - ---------------------------------------------
2024-11-03 17:18 - INFO - Epoch: 08 | Time: 2m 0s
2024-11-03 17:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36562
2024-11-03 17:18 - INFO - 	 Train Loss: 0.146
2024-11-03 17:18 - INFO - 	 Val. Loss: 0.141
2024-11-03 17:18 - INFO - 	 ROC-AUC: 0.915
2024-11-03 17:18 - INFO - 	 PR-AUC: 0.366
2024-11-03 17:18 - INFO - 	 Recall for 0.4 precision: 0.493
2024-11-03 17:18 - INFO - 	 Best Val. Loss: 0.141
2024-11-03 17:18 - INFO - 	 Best ROC-AUC: 0.915
2024-11-03 17:18 - INFO - 	 Best PR-AUC: 0.366
2024-11-03 17:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.874
2024-11-03 17:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.232
2024-11-03 17:18 - INFO - 	 Best Recall for 0.4 precision: 0.493
2024-11-03 17:18 - INFO - ---------------------------------------------
2024-11-03 17:20 - INFO - ---------------------------------------------
2024-11-03 17:20 - INFO - Epoch: 09 | Time: 1m 59s
2024-11-03 17:20 - INFO - 	 Train Loss: 0.133
2024-11-03 17:20 - INFO - 	 Val. Loss: 0.129
2024-11-03 17:20 - INFO - 	 ROC-AUC: 0.911
2024-11-03 17:20 - INFO - 	 PR-AUC: 0.331
2024-11-03 17:20 - INFO - 	 Recall for 0.4 precision: 0.233
2024-11-03 17:20 - INFO - 	 Best Val. Loss: 0.129
2024-11-03 17:20 - INFO - 	 Best ROC-AUC: 0.915
2024-11-03 17:20 - INFO - 	 Best PR-AUC: 0.366
2024-11-03 17:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.874
2024-11-03 17:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.232
2024-11-03 17:20 - INFO - 	 Best Recall for 0.4 precision: 0.493
2024-11-03 17:20 - INFO - ---------------------------------------------
2024-11-03 17:22 - INFO - ---------------------------------------------
2024-11-03 17:22 - INFO - Epoch: 10 | Time: 1m 58s
2024-11-03 17:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51495
2024-11-03 17:22 - INFO - 	 Train Loss: 0.120
2024-11-03 17:22 - INFO - 	 Val. Loss: 0.108
2024-11-03 17:22 - INFO - 	 ROC-AUC: 0.966
2024-11-03 17:22 - INFO - 	 PR-AUC: 0.515
2024-11-03 17:22 - INFO - 	 Recall for 0.4 precision: 0.842
2024-11-03 17:22 - INFO - 	 Best Val. Loss: 0.108
2024-11-03 17:22 - INFO - 	 Best ROC-AUC: 0.966
2024-11-03 17:22 - INFO - 	 Best PR-AUC: 0.515
2024-11-03 17:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-03 17:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.379
2024-11-03 17:22 - INFO - 	 Best Recall for 0.4 precision: 0.842
2024-11-03 17:22 - INFO - ---------------------------------------------
2024-11-03 17:25 - INFO - Fit the preprocessing pipeline
2024-11-03 17:25 - INFO - Training using device: mps
2024-11-03 17:25 - INFO - Creating generators
2024-11-03 17:25 - INFO - The model has 651,257 trainable parameters
2024-11-03 17:25 - INFO - * Model:
2024-11-03 17:25 - INFO - * -----------
2024-11-03 17:25 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 17:25 - INFO - * -----------
2024-11-03 17:25 - INFO - Evaluating model based on: aucpr
2024-11-03 17:25 - INFO - Training..

2024-11-03 17:27 - INFO - ---------------------------------------------
2024-11-03 17:27 - INFO - Epoch: 01 | Time: 1m 45s
2024-11-03 17:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19093
2024-11-03 17:27 - INFO - 	 Train Loss: 0.256
2024-11-03 17:27 - INFO - 	 Val. Loss: 0.298
2024-11-03 17:27 - INFO - 	 ROC-AUC: 0.728
2024-11-03 17:27 - INFO - 	 PR-AUC: 0.191
2024-11-03 17:27 - INFO - 	 Recall for 0.4 precision: 0.127
2024-11-03 17:27 - INFO - 	 Best Val. Loss: 0.298
2024-11-03 17:27 - INFO - 	 Best ROC-AUC: 0.728
2024-11-03 17:27 - INFO - 	 Best PR-AUC: 0.191
2024-11-03 17:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-11-03 17:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.111
2024-11-03 17:27 - INFO - 	 Best Recall for 0.4 precision: 0.127
2024-11-03 17:27 - INFO - ---------------------------------------------
2024-11-03 17:29 - INFO - ---------------------------------------------
2024-11-03 17:29 - INFO - Epoch: 02 | Time: 1m 57s
2024-11-03 17:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25087
2024-11-03 17:29 - INFO - 	 Train Loss: 0.207
2024-11-03 17:29 - INFO - 	 Val. Loss: 0.228
2024-11-03 17:29 - INFO - 	 ROC-AUC: 0.767
2024-11-03 17:29 - INFO - 	 PR-AUC: 0.251
2024-11-03 17:29 - INFO - 	 Recall for 0.4 precision: 0.267
2024-11-03 17:29 - INFO - 	 Best Val. Loss: 0.228
2024-11-03 17:29 - INFO - 	 Best ROC-AUC: 0.767
2024-11-03 17:29 - INFO - 	 Best PR-AUC: 0.251
2024-11-03 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-03 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 17:29 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 17:29 - INFO - ---------------------------------------------
2024-11-03 17:31 - INFO - ---------------------------------------------
2024-11-03 17:31 - INFO - Epoch: 03 | Time: 1m 58s
2024-11-03 17:31 - INFO - 	 Train Loss: 0.186
2024-11-03 17:31 - INFO - 	 Val. Loss: 0.212
2024-11-03 17:31 - INFO - 	 ROC-AUC: 0.770
2024-11-03 17:31 - INFO - 	 PR-AUC: 0.224
2024-11-03 17:31 - INFO - 	 Recall for 0.4 precision: 0.200
2024-11-03 17:31 - INFO - 	 Best Val. Loss: 0.212
2024-11-03 17:31 - INFO - 	 Best ROC-AUC: 0.770
2024-11-03 17:31 - INFO - 	 Best PR-AUC: 0.251
2024-11-03 17:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-03 17:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-03 17:31 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 17:31 - INFO - ---------------------------------------------
2024-11-03 17:33 - INFO - ---------------------------------------------
2024-11-03 17:33 - INFO - Epoch: 04 | Time: 2m 3s
2024-11-03 17:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26365
2024-11-03 17:33 - INFO - 	 Train Loss: 0.173
2024-11-03 17:33 - INFO - 	 Val. Loss: 0.192
2024-11-03 17:33 - INFO - 	 ROC-AUC: 0.804
2024-11-03 17:33 - INFO - 	 PR-AUC: 0.264
2024-11-03 17:33 - INFO - 	 Recall for 0.4 precision: 0.228
2024-11-03 17:33 - INFO - 	 Best Val. Loss: 0.192
2024-11-03 17:33 - INFO - 	 Best ROC-AUC: 0.804
2024-11-03 17:33 - INFO - 	 Best PR-AUC: 0.264
2024-11-03 17:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-03 17:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.163
2024-11-03 17:33 - INFO - 	 Best Recall for 0.4 precision: 0.267
2024-11-03 17:33 - INFO - ---------------------------------------------
2024-11-03 17:35 - INFO - ---------------------------------------------
2024-11-03 17:35 - INFO - Epoch: 05 | Time: 2m 1s
2024-11-03 17:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29172
2024-11-03 17:35 - INFO - 	 Train Loss: 0.163
2024-11-03 17:35 - INFO - 	 Val. Loss: 0.186
2024-11-03 17:35 - INFO - 	 ROC-AUC: 0.813
2024-11-03 17:35 - INFO - 	 PR-AUC: 0.292
2024-11-03 17:35 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-03 17:35 - INFO - 	 Best Val. Loss: 0.186
2024-11-03 17:35 - INFO - 	 Best ROC-AUC: 0.813
2024-11-03 17:35 - INFO - 	 Best PR-AUC: 0.292
2024-11-03 17:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.755
2024-11-03 17:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 17:35 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-03 17:35 - INFO - ---------------------------------------------
2024-11-03 17:37 - INFO - ---------------------------------------------
2024-11-03 17:37 - INFO - Epoch: 06 | Time: 2m 4s
2024-11-03 17:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32041
2024-11-03 17:37 - INFO - 	 Train Loss: 0.158
2024-11-03 17:37 - INFO - 	 Val. Loss: 0.172
2024-11-03 17:37 - INFO - 	 ROC-AUC: 0.814
2024-11-03 17:37 - INFO - 	 PR-AUC: 0.320
2024-11-03 17:37 - INFO - 	 Recall for 0.4 precision: 0.385
2024-11-03 17:37 - INFO - 	 Best Val. Loss: 0.172
2024-11-03 17:37 - INFO - 	 Best ROC-AUC: 0.814
2024-11-03 17:37 - INFO - 	 Best PR-AUC: 0.320
2024-11-03 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-03 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 17:37 - INFO - 	 Best Recall for 0.4 precision: 0.385
2024-11-03 17:37 - INFO - ---------------------------------------------
2024-11-03 17:39 - INFO - ---------------------------------------------
2024-11-03 17:39 - INFO - Epoch: 07 | Time: 2m 3s
2024-11-03 17:39 - INFO - 	 Train Loss: 0.154
2024-11-03 17:39 - INFO - 	 Val. Loss: 0.150
2024-11-03 17:39 - INFO - 	 ROC-AUC: 0.865
2024-11-03 17:39 - INFO - 	 PR-AUC: 0.274
2024-11-03 17:39 - INFO - 	 Recall for 0.4 precision: 0.211
2024-11-03 17:39 - INFO - 	 Best Val. Loss: 0.150
2024-11-03 17:39 - INFO - 	 Best ROC-AUC: 0.865
2024-11-03 17:39 - INFO - 	 Best PR-AUC: 0.320
2024-11-03 17:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.809
2024-11-03 17:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 17:39 - INFO - 	 Best Recall for 0.4 precision: 0.385
2024-11-03 17:39 - INFO - ---------------------------------------------
2024-11-03 17:41 - INFO - ---------------------------------------------
2024-11-03 17:41 - INFO - Epoch: 08 | Time: 2m 2s
2024-11-03 17:41 - INFO - 	 Train Loss: 0.148
2024-11-03 17:41 - INFO - 	 Val. Loss: 0.143
2024-11-03 17:41 - INFO - 	 ROC-AUC: 0.864
2024-11-03 17:41 - INFO - 	 PR-AUC: 0.297
2024-11-03 17:41 - INFO - 	 Recall for 0.4 precision: 0.224
2024-11-03 17:41 - INFO - 	 Best Val. Loss: 0.143
2024-11-03 17:41 - INFO - 	 Best ROC-AUC: 0.865
2024-11-03 17:41 - INFO - 	 Best PR-AUC: 0.320
2024-11-03 17:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.809
2024-11-03 17:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-03 17:41 - INFO - 	 Best Recall for 0.4 precision: 0.385
2024-11-03 17:41 - INFO - ---------------------------------------------
2024-11-03 17:43 - INFO - ---------------------------------------------
2024-11-03 17:43 - INFO - Epoch: 09 | Time: 2m 0s
2024-11-03 17:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3209
2024-11-03 17:43 - INFO - 	 Train Loss: 0.141
2024-11-03 17:43 - INFO - 	 Val. Loss: 0.135
2024-11-03 17:43 - INFO - 	 ROC-AUC: 0.897
2024-11-03 17:43 - INFO - 	 PR-AUC: 0.321
2024-11-03 17:43 - INFO - 	 Recall for 0.4 precision: 0.127
2024-11-03 17:43 - INFO - 	 Best Val. Loss: 0.135
2024-11-03 17:43 - INFO - 	 Best ROC-AUC: 0.897
2024-11-03 17:43 - INFO - 	 Best PR-AUC: 0.321
2024-11-03 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.869
2024-11-03 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.233
2024-11-03 17:43 - INFO - 	 Best Recall for 0.4 precision: 0.385
2024-11-03 17:43 - INFO - ---------------------------------------------
2024-11-03 17:45 - INFO - ---------------------------------------------
2024-11-03 17:45 - INFO - Epoch: 10 | Time: 1m 59s
2024-11-03 17:45 - INFO - 	 Train Loss: 0.125
2024-11-03 17:45 - INFO - 	 Val. Loss: 0.146
2024-11-03 17:45 - INFO - 	 ROC-AUC: 0.887
2024-11-03 17:45 - INFO - 	 PR-AUC: 0.274
2024-11-03 17:45 - INFO - 	 Recall for 0.4 precision: 0.081
2024-11-03 17:45 - INFO - 	 Best Val. Loss: 0.135
2024-11-03 17:45 - INFO - 	 Best ROC-AUC: 0.897
2024-11-03 17:45 - INFO - 	 Best PR-AUC: 0.321
2024-11-03 17:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.869
2024-11-03 17:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.233
2024-11-03 17:45 - INFO - 	 Best Recall for 0.4 precision: 0.385
2024-11-03 17:45 - INFO - ---------------------------------------------
2024-11-03 17:48 - INFO - Fit the preprocessing pipeline
2024-11-03 17:48 - INFO - Training using device: mps
2024-11-03 17:48 - INFO - Creating generators
2024-11-03 17:48 - INFO - The model has 651,257 trainable parameters
2024-11-03 17:48 - INFO - * Model:
2024-11-03 17:48 - INFO - * -----------
2024-11-03 17:48 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 17:48 - INFO - * -----------
2024-11-03 17:48 - INFO - Evaluating model based on: aucpr
2024-11-03 17:48 - INFO - Training..

2024-11-03 17:50 - INFO - ---------------------------------------------
2024-11-03 17:50 - INFO - Epoch: 01 | Time: 1m 46s
2024-11-03 17:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.0947
2024-11-03 17:50 - INFO - 	 Train Loss: 0.255
2024-11-03 17:50 - INFO - 	 Val. Loss: 0.295
2024-11-03 17:50 - INFO - 	 ROC-AUC: 0.693
2024-11-03 17:50 - INFO - 	 PR-AUC: 0.095
2024-11-03 17:50 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-03 17:50 - INFO - 	 Best Val. Loss: 0.295
2024-11-03 17:50 - INFO - 	 Best ROC-AUC: 0.693
2024-11-03 17:50 - INFO - 	 Best PR-AUC: 0.095
2024-11-03 17:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.635
2024-11-03 17:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.071
2024-11-03 17:50 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-03 17:50 - INFO - ---------------------------------------------
2024-11-03 17:52 - INFO - ---------------------------------------------
2024-11-03 17:52 - INFO - Epoch: 02 | Time: 1m 56s
2024-11-03 17:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14037
2024-11-03 17:52 - INFO - 	 Train Loss: 0.213
2024-11-03 17:52 - INFO - 	 Val. Loss: 0.276
2024-11-03 17:52 - INFO - 	 ROC-AUC: 0.720
2024-11-03 17:52 - INFO - 	 PR-AUC: 0.140
2024-11-03 17:52 - INFO - 	 Recall for 0.4 precision: 0.042
2024-11-03 17:52 - INFO - 	 Best Val. Loss: 0.276
2024-11-03 17:52 - INFO - 	 Best ROC-AUC: 0.720
2024-11-03 17:52 - INFO - 	 Best PR-AUC: 0.140
2024-11-03 17:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.692
2024-11-03 17:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-03 17:52 - INFO - 	 Best Recall for 0.4 precision: 0.042
2024-11-03 17:52 - INFO - ---------------------------------------------
2024-11-03 17:53 - INFO - ---------------------------------------------
2024-11-03 17:53 - INFO - Epoch: 03 | Time: 1m 56s
2024-11-03 17:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21189
2024-11-03 17:53 - INFO - 	 Train Loss: 0.192
2024-11-03 17:53 - INFO - 	 Val. Loss: 0.225
2024-11-03 17:53 - INFO - 	 ROC-AUC: 0.757
2024-11-03 17:53 - INFO - 	 PR-AUC: 0.212
2024-11-03 17:53 - INFO - 	 Recall for 0.4 precision: 0.166
2024-11-03 17:53 - INFO - 	 Best Val. Loss: 0.225
2024-11-03 17:53 - INFO - 	 Best ROC-AUC: 0.757
2024-11-03 17:53 - INFO - 	 Best PR-AUC: 0.212
2024-11-03 17:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.721
2024-11-03 17:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-03 17:53 - INFO - 	 Best Recall for 0.4 precision: 0.166
2024-11-03 17:53 - INFO - ---------------------------------------------
2024-11-03 17:55 - INFO - ---------------------------------------------
2024-11-03 17:55 - INFO - Epoch: 04 | Time: 1m 57s
2024-11-03 17:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24899
2024-11-03 17:55 - INFO - 	 Train Loss: 0.174
2024-11-03 17:55 - INFO - 	 Val. Loss: 0.200
2024-11-03 17:55 - INFO - 	 ROC-AUC: 0.776
2024-11-03 17:55 - INFO - 	 PR-AUC: 0.249
2024-11-03 17:55 - INFO - 	 Recall for 0.4 precision: 0.208
2024-11-03 17:55 - INFO - 	 Best Val. Loss: 0.200
2024-11-03 17:55 - INFO - 	 Best ROC-AUC: 0.776
2024-11-03 17:55 - INFO - 	 Best PR-AUC: 0.249
2024-11-03 17:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-03 17:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-03 17:55 - INFO - 	 Best Recall for 0.4 precision: 0.208
2024-11-03 17:55 - INFO - ---------------------------------------------
2024-11-03 17:57 - INFO - ---------------------------------------------
2024-11-03 17:57 - INFO - Epoch: 05 | Time: 1m 57s
2024-11-03 17:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28531
2024-11-03 17:57 - INFO - 	 Train Loss: 0.164
2024-11-03 17:57 - INFO - 	 Val. Loss: 0.193
2024-11-03 17:57 - INFO - 	 ROC-AUC: 0.792
2024-11-03 17:57 - INFO - 	 PR-AUC: 0.285
2024-11-03 17:57 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-03 17:57 - INFO - 	 Best Val. Loss: 0.193
2024-11-03 17:57 - INFO - 	 Best ROC-AUC: 0.792
2024-11-03 17:57 - INFO - 	 Best PR-AUC: 0.285
2024-11-03 17:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-03 17:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 17:57 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-03 17:57 - INFO - ---------------------------------------------
2024-11-03 17:59 - INFO - ---------------------------------------------
2024-11-03 17:59 - INFO - Epoch: 06 | Time: 1m 58s
2024-11-03 17:59 - INFO - 	 Train Loss: 0.158
2024-11-03 17:59 - INFO - 	 Val. Loss: 0.181
2024-11-03 17:59 - INFO - 	 ROC-AUC: 0.793
2024-11-03 17:59 - INFO - 	 PR-AUC: 0.278
2024-11-03 17:59 - INFO - 	 Recall for 0.4 precision: 0.325
2024-11-03 17:59 - INFO - 	 Best Val. Loss: 0.181
2024-11-03 17:59 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 17:59 - INFO - 	 Best PR-AUC: 0.285
2024-11-03 17:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-03 17:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-03 17:59 - INFO - 	 Best Recall for 0.4 precision: 0.325
2024-11-03 17:59 - INFO - ---------------------------------------------
2024-11-03 18:01 - INFO - ---------------------------------------------
2024-11-03 18:01 - INFO - Epoch: 07 | Time: 1m 59s
2024-11-03 18:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30415
2024-11-03 18:01 - INFO - 	 Train Loss: 0.154
2024-11-03 18:01 - INFO - 	 Val. Loss: 0.170
2024-11-03 18:01 - INFO - 	 ROC-AUC: 0.818
2024-11-03 18:01 - INFO - 	 PR-AUC: 0.304
2024-11-03 18:01 - INFO - 	 Recall for 0.4 precision: 0.364
2024-11-03 18:01 - INFO - 	 Best Val. Loss: 0.170
2024-11-03 18:01 - INFO - 	 Best ROC-AUC: 0.818
2024-11-03 18:01 - INFO - 	 Best PR-AUC: 0.304
2024-11-03 18:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.766
2024-11-03 18:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.161
2024-11-03 18:01 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 18:01 - INFO - ---------------------------------------------
2024-11-03 18:03 - INFO - ---------------------------------------------
2024-11-03 18:03 - INFO - Epoch: 08 | Time: 1m 59s
2024-11-03 18:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3042
2024-11-03 18:03 - INFO - 	 Train Loss: 0.151
2024-11-03 18:03 - INFO - 	 Val. Loss: 0.169
2024-11-03 18:03 - INFO - 	 ROC-AUC: 0.817
2024-11-03 18:03 - INFO - 	 PR-AUC: 0.304
2024-11-03 18:03 - INFO - 	 Recall for 0.4 precision: 0.220
2024-11-03 18:03 - INFO - 	 Best Val. Loss: 0.169
2024-11-03 18:03 - INFO - 	 Best ROC-AUC: 0.818
2024-11-03 18:03 - INFO - 	 Best PR-AUC: 0.304
2024-11-03 18:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.766
2024-11-03 18:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 18:03 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 18:03 - INFO - ---------------------------------------------
2024-11-03 18:05 - INFO - ---------------------------------------------
2024-11-03 18:05 - INFO - Epoch: 09 | Time: 2m 0s
2024-11-03 18:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32395
2024-11-03 18:05 - INFO - 	 Train Loss: 0.149
2024-11-03 18:05 - INFO - 	 Val. Loss: 0.159
2024-11-03 18:05 - INFO - 	 ROC-AUC: 0.823
2024-11-03 18:05 - INFO - 	 PR-AUC: 0.324
2024-11-03 18:05 - INFO - 	 Recall for 0.4 precision: 0.309
2024-11-03 18:05 - INFO - 	 Best Val. Loss: 0.159
2024-11-03 18:05 - INFO - 	 Best ROC-AUC: 0.823
2024-11-03 18:05 - INFO - 	 Best PR-AUC: 0.324
2024-11-03 18:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.773
2024-11-03 18:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-03 18:05 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 18:05 - INFO - ---------------------------------------------
2024-11-03 18:07 - INFO - ---------------------------------------------
2024-11-03 18:07 - INFO - Epoch: 10 | Time: 1m 59s
2024-11-03 18:07 - INFO - 	 Train Loss: 0.147
2024-11-03 18:07 - INFO - 	 Val. Loss: 0.165
2024-11-03 18:07 - INFO - 	 ROC-AUC: 0.823
2024-11-03 18:07 - INFO - 	 PR-AUC: 0.313
2024-11-03 18:07 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-03 18:07 - INFO - 	 Best Val. Loss: 0.159
2024-11-03 18:07 - INFO - 	 Best ROC-AUC: 0.823
2024-11-03 18:07 - INFO - 	 Best PR-AUC: 0.324
2024-11-03 18:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-03 18:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-03 18:07 - INFO - 	 Best Recall for 0.4 precision: 0.364
2024-11-03 18:07 - INFO - ---------------------------------------------
2024-11-03 18:10 - INFO - Fit the preprocessing pipeline
2024-11-03 18:10 - INFO - Training using device: mps
2024-11-03 18:10 - INFO - Creating generators
2024-11-03 18:10 - INFO - The model has 651,257 trainable parameters
2024-11-03 18:10 - INFO - * Model:
2024-11-03 18:10 - INFO - * -----------
2024-11-03 18:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-03 18:10 - INFO - * -----------
2024-11-03 18:10 - INFO - Evaluating model based on: aucpr
2024-11-03 18:10 - INFO - Training..

2024-11-03 18:12 - INFO - ---------------------------------------------
2024-11-03 18:12 - INFO - Epoch: 01 | Time: 1m 47s
2024-11-03 18:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17843
2024-11-03 18:12 - INFO - 	 Train Loss: 0.251
2024-11-03 18:12 - INFO - 	 Val. Loss: 0.281
2024-11-03 18:12 - INFO - 	 ROC-AUC: 0.743
2024-11-03 18:12 - INFO - 	 PR-AUC: 0.178
2024-11-03 18:12 - INFO - 	 Recall for 0.4 precision: 0.052
2024-11-03 18:12 - INFO - 	 Best Val. Loss: 0.281
2024-11-03 18:12 - INFO - 	 Best ROC-AUC: 0.743
2024-11-03 18:12 - INFO - 	 Best PR-AUC: 0.178
2024-11-03 18:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.733
2024-11-03 18:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-03 18:12 - INFO - 	 Best Recall for 0.4 precision: 0.052
2024-11-03 18:12 - INFO - ---------------------------------------------
2024-11-03 18:14 - INFO - ---------------------------------------------
2024-11-03 18:14 - INFO - Epoch: 02 | Time: 1m 59s
2024-11-03 18:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2339
2024-11-03 18:14 - INFO - 	 Train Loss: 0.204
2024-11-03 18:14 - INFO - 	 Val. Loss: 0.237
2024-11-03 18:14 - INFO - 	 ROC-AUC: 0.772
2024-11-03 18:14 - INFO - 	 PR-AUC: 0.234
2024-11-03 18:14 - INFO - 	 Recall for 0.4 precision: 0.236
2024-11-03 18:14 - INFO - 	 Best Val. Loss: 0.237
2024-11-03 18:14 - INFO - 	 Best ROC-AUC: 0.772
2024-11-03 18:14 - INFO - 	 Best PR-AUC: 0.234
2024-11-03 18:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-03 18:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-03 18:14 - INFO - 	 Best Recall for 0.4 precision: 0.236
2024-11-03 18:14 - INFO - ---------------------------------------------
2024-11-03 18:16 - INFO - ---------------------------------------------
2024-11-03 18:16 - INFO - Epoch: 03 | Time: 1m 59s
2024-11-03 18:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23494
2024-11-03 18:16 - INFO - 	 Train Loss: 0.185
2024-11-03 18:16 - INFO - 	 Val. Loss: 0.210
2024-11-03 18:16 - INFO - 	 ROC-AUC: 0.768
2024-11-03 18:16 - INFO - 	 PR-AUC: 0.235
2024-11-03 18:16 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-03 18:16 - INFO - 	 Best Val. Loss: 0.210
2024-11-03 18:16 - INFO - 	 Best ROC-AUC: 0.772
2024-11-03 18:16 - INFO - 	 Best PR-AUC: 0.235
2024-11-03 18:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-03 18:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-03 18:16 - INFO - 	 Best Recall for 0.4 precision: 0.236
2024-11-03 18:16 - INFO - ---------------------------------------------
2024-11-03 18:18 - INFO - ---------------------------------------------
2024-11-03 18:18 - INFO - Epoch: 04 | Time: 2m 0s
2024-11-03 18:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27017
2024-11-03 18:18 - INFO - 	 Train Loss: 0.172
2024-11-03 18:18 - INFO - 	 Val. Loss: 0.191
2024-11-03 18:18 - INFO - 	 ROC-AUC: 0.793
2024-11-03 18:18 - INFO - 	 PR-AUC: 0.270
2024-11-03 18:18 - INFO - 	 Recall for 0.4 precision: 0.237
2024-11-03 18:18 - INFO - 	 Best Val. Loss: 0.191
2024-11-03 18:18 - INFO - 	 Best ROC-AUC: 0.793
2024-11-03 18:18 - INFO - 	 Best PR-AUC: 0.270
2024-11-03 18:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-03 18:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-03 18:18 - INFO - 	 Best Recall for 0.4 precision: 0.237
2024-11-03 18:18 - INFO - ---------------------------------------------
2024-11-03 18:20 - INFO - ---------------------------------------------
2024-11-03 18:20 - INFO - Epoch: 05 | Time: 2m 1s
2024-11-03 18:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28824
2024-11-03 18:20 - INFO - 	 Train Loss: 0.161
2024-11-03 18:20 - INFO - 	 Val. Loss: 0.174
2024-11-03 18:20 - INFO - 	 ROC-AUC: 0.812
2024-11-03 18:20 - INFO - 	 PR-AUC: 0.288
2024-11-03 18:20 - INFO - 	 Recall for 0.4 precision: 0.286
2024-11-03 18:20 - INFO - 	 Best Val. Loss: 0.174
2024-11-03 18:20 - INFO - 	 Best ROC-AUC: 0.812
2024-11-03 18:20 - INFO - 	 Best PR-AUC: 0.288
2024-11-03 18:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.776
2024-11-03 18:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 18:20 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-03 18:20 - INFO - ---------------------------------------------
2024-11-03 18:22 - INFO - ---------------------------------------------
2024-11-03 18:22 - INFO - Epoch: 06 | Time: 2m 2s
2024-11-03 18:22 - INFO - 	 Train Loss: 0.156
2024-11-03 18:22 - INFO - 	 Val. Loss: 0.178
2024-11-03 18:22 - INFO - 	 ROC-AUC: 0.828
2024-11-03 18:22 - INFO - 	 PR-AUC: 0.278
2024-11-03 18:22 - INFO - 	 Recall for 0.4 precision: 0.207
2024-11-03 18:22 - INFO - 	 Best Val. Loss: 0.174
2024-11-03 18:22 - INFO - 	 Best ROC-AUC: 0.828
2024-11-03 18:22 - INFO - 	 Best PR-AUC: 0.288
2024-11-03 18:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-03 18:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-03 18:22 - INFO - 	 Best Recall for 0.4 precision: 0.286
2024-11-03 18:22 - INFO - ---------------------------------------------
2024-11-03 18:24 - INFO - ---------------------------------------------
2024-11-03 18:24 - INFO - Epoch: 07 | Time: 2m 0s
2024-11-03 18:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37331
2024-11-03 18:24 - INFO - 	 Train Loss: 0.152
2024-11-03 18:24 - INFO - 	 Val. Loss: 0.148
2024-11-03 18:24 - INFO - 	 ROC-AUC: 0.906
2024-11-03 18:24 - INFO - 	 PR-AUC: 0.373
2024-11-03 18:24 - INFO - 	 Recall for 0.4 precision: 0.454
2024-11-03 18:24 - INFO - 	 Best Val. Loss: 0.148
2024-11-03 18:24 - INFO - 	 Best ROC-AUC: 0.906
2024-11-03 18:24 - INFO - 	 Best PR-AUC: 0.373
2024-11-03 18:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.843
2024-11-03 18:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.185
2024-11-03 18:24 - INFO - 	 Best Recall for 0.4 precision: 0.454
2024-11-03 18:24 - INFO - ---------------------------------------------
2024-11-03 18:26 - INFO - ---------------------------------------------
2024-11-03 18:26 - INFO - Epoch: 08 | Time: 2m 0s
2024-11-03 18:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50486
2024-11-03 18:26 - INFO - 	 Train Loss: 0.135
2024-11-03 18:26 - INFO - 	 Val. Loss: 0.118
2024-11-03 18:26 - INFO - 	 ROC-AUC: 0.963
2024-11-03 18:26 - INFO - 	 PR-AUC: 0.505
2024-11-03 18:26 - INFO - 	 Recall for 0.4 precision: 0.771
2024-11-03 18:26 - INFO - 	 Best Val. Loss: 0.118
2024-11-03 18:26 - INFO - 	 Best ROC-AUC: 0.963
2024-11-03 18:26 - INFO - 	 Best PR-AUC: 0.505
2024-11-03 18:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-03 18:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.321
2024-11-03 18:26 - INFO - 	 Best Recall for 0.4 precision: 0.771
2024-11-03 18:26 - INFO - ---------------------------------------------
2024-11-03 18:28 - INFO - ---------------------------------------------
2024-11-03 18:28 - INFO - Epoch: 09 | Time: 2m 1s
2024-11-03 18:28 - INFO - 	 Train Loss: 0.118
2024-11-03 18:28 - INFO - 	 Val. Loss: 0.227
2024-11-03 18:28 - INFO - 	 ROC-AUC: 0.883
2024-11-03 18:28 - INFO - 	 PR-AUC: 0.256
2024-11-03 18:28 - INFO - 	 Recall for 0.4 precision: 0.104
2024-11-03 18:28 - INFO - 	 Best Val. Loss: 0.118
2024-11-03 18:28 - INFO - 	 Best ROC-AUC: 0.963
2024-11-03 18:28 - INFO - 	 Best PR-AUC: 0.505
2024-11-03 18:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-03 18:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.321
2024-11-03 18:28 - INFO - 	 Best Recall for 0.4 precision: 0.771
2024-11-03 18:28 - INFO - ---------------------------------------------
2024-11-03 18:30 - INFO - ---------------------------------------------
2024-11-03 18:30 - INFO - Epoch: 10 | Time: 2m 0s
2024-11-03 18:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54923
2024-11-03 18:30 - INFO - 	 Train Loss: 0.111
2024-11-03 18:30 - INFO - 	 Val. Loss: 0.112
2024-11-03 18:30 - INFO - 	 ROC-AUC: 0.959
2024-11-03 18:30 - INFO - 	 PR-AUC: 0.549
2024-11-03 18:30 - INFO - 	 Recall for 0.4 precision: 0.885
2024-11-03 18:30 - INFO - 	 Best Val. Loss: 0.112
2024-11-03 18:30 - INFO - 	 Best ROC-AUC: 0.963
2024-11-03 18:30 - INFO - 	 Best PR-AUC: 0.549
2024-11-03 18:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-03 18:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.347
2024-11-03 18:30 - INFO - 	 Best Recall for 0.4 precision: 0.885
2024-11-03 18:30 - INFO - ---------------------------------------------
