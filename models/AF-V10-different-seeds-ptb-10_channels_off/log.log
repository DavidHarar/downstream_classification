2024-10-13 20:17 - INFO - Fit the preprocessing pipeline
2024-10-13 20:17 - INFO - Training using device: cuda
2024-10-13 20:17 - INFO - Creating generators
2024-10-13 20:17 - INFO - The model has 651,257 trainable parameters
2024-10-13 20:17 - INFO - * Model:
2024-10-13 20:17 - INFO - * -----------
2024-10-13 20:17 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 20:17 - INFO - * -----------
2024-10-13 20:17 - INFO - Evaluating model based on: rocauc
2024-10-13 20:17 - INFO - Training..

2024-10-13 20:18 - INFO - ---------------------------------------------
2024-10-13 20:18 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-13 20:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9668
2024-10-13 20:18 - INFO - 	 Train Loss: 0.198
2024-10-13 20:18 - INFO - 	 Val. Loss: 0.106
2024-10-13 20:18 - INFO - 	 ROC-AUC: 0.967
2024-10-13 20:18 - INFO - 	 PR-AUC: 0.666
2024-10-13 20:18 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 20:18 - INFO - 	 Best Val. Loss: 0.106
2024-10-13 20:18 - INFO - 	 Best ROC-AUC: 0.967
2024-10-13 20:18 - INFO - 	 Best PR-AUC: 0.666
2024-10-13 20:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-13 20:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.672
2024-10-13 20:18 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-13 20:18 - INFO - ---------------------------------------------
2024-10-13 20:18 - INFO - ---------------------------------------------
2024-10-13 20:18 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 20:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96768
2024-10-13 20:18 - INFO - 	 Train Loss: 0.114
2024-10-13 20:18 - INFO - 	 Val. Loss: 0.115
2024-10-13 20:18 - INFO - 	 ROC-AUC: 0.968
2024-10-13 20:18 - INFO - 	 PR-AUC: 0.681
2024-10-13 20:18 - INFO - 	 Recall for 0.4 precision: 0.931
2024-10-13 20:18 - INFO - 	 Best Val. Loss: 0.106
2024-10-13 20:18 - INFO - 	 Best ROC-AUC: 0.968
2024-10-13 20:18 - INFO - 	 Best PR-AUC: 0.681
2024-10-13 20:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-13 20:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.653
2024-10-13 20:18 - INFO - 	 Best Recall for 0.4 precision: 0.931
2024-10-13 20:18 - INFO - ---------------------------------------------
2024-10-13 20:19 - INFO - ---------------------------------------------
2024-10-13 20:19 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 20:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97239
2024-10-13 20:19 - INFO - 	 Train Loss: 0.101
2024-10-13 20:19 - INFO - 	 Val. Loss: 0.096
2024-10-13 20:19 - INFO - 	 ROC-AUC: 0.972
2024-10-13 20:19 - INFO - 	 PR-AUC: 0.759
2024-10-13 20:19 - INFO - 	 Recall for 0.4 precision: 0.958
2024-10-13 20:19 - INFO - 	 Best Val. Loss: 0.096
2024-10-13 20:19 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 20:19 - INFO - 	 Best PR-AUC: 0.759
2024-10-13 20:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-13 20:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-13 20:19 - INFO - 	 Best Recall for 0.4 precision: 0.958
2024-10-13 20:19 - INFO - ---------------------------------------------
2024-10-13 20:20 - INFO - ---------------------------------------------
2024-10-13 20:20 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 20:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97366
2024-10-13 20:20 - INFO - 	 Train Loss: 0.097
2024-10-13 20:20 - INFO - 	 Val. Loss: 0.090
2024-10-13 20:20 - INFO - 	 ROC-AUC: 0.974
2024-10-13 20:20 - INFO - 	 PR-AUC: 0.775
2024-10-13 20:20 - INFO - 	 Recall for 0.4 precision: 0.953
2024-10-13 20:20 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 20:20 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 20:20 - INFO - 	 Best PR-AUC: 0.775
2024-10-13 20:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 20:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-10-13 20:20 - INFO - 	 Best Recall for 0.4 precision: 0.958
2024-10-13 20:20 - INFO - ---------------------------------------------
2024-10-13 20:20 - INFO - ---------------------------------------------
2024-10-13 20:20 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 20:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97919
2024-10-13 20:20 - INFO - 	 Train Loss: 0.093
2024-10-13 20:20 - INFO - 	 Val. Loss: 0.085
2024-10-13 20:20 - INFO - 	 ROC-AUC: 0.979
2024-10-13 20:20 - INFO - 	 PR-AUC: 0.813
2024-10-13 20:20 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 20:20 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 20:20 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 20:20 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 20:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 20:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 20:20 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 20:20 - INFO - ---------------------------------------------
2024-10-13 20:21 - INFO - ---------------------------------------------
2024-10-13 20:21 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 20:21 - INFO - 	 Train Loss: 0.089
2024-10-13 20:21 - INFO - 	 Val. Loss: 0.081
2024-10-13 20:21 - INFO - 	 ROC-AUC: 0.978
2024-10-13 20:21 - INFO - 	 PR-AUC: 0.810
2024-10-13 20:21 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 20:21 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 20:21 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 20:21 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 20:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 20:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 20:21 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 20:21 - INFO - ---------------------------------------------
2024-10-13 20:21 - INFO - ---------------------------------------------
2024-10-13 20:21 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 20:21 - INFO - 	 Train Loss: 0.087
2024-10-13 20:21 - INFO - 	 Val. Loss: 0.082
2024-10-13 20:21 - INFO - 	 ROC-AUC: 0.978
2024-10-13 20:21 - INFO - 	 PR-AUC: 0.809
2024-10-13 20:21 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 20:21 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 20:21 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 20:21 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 20:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 20:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 20:21 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 20:21 - INFO - ---------------------------------------------
2024-10-13 20:22 - INFO - ---------------------------------------------
2024-10-13 20:22 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 20:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98012
2024-10-13 20:22 - INFO - 	 Train Loss: 0.085
2024-10-13 20:22 - INFO - 	 Val. Loss: 0.079
2024-10-13 20:22 - INFO - 	 ROC-AUC: 0.980
2024-10-13 20:22 - INFO - 	 PR-AUC: 0.811
2024-10-13 20:22 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 20:22 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 20:22 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 20:22 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 20:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 20:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-13 20:22 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 20:22 - INFO - ---------------------------------------------
2024-10-13 20:22 - INFO - ---------------------------------------------
2024-10-13 20:22 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 20:22 - INFO - 	 Train Loss: 0.086
2024-10-13 20:22 - INFO - 	 Val. Loss: 0.078
2024-10-13 20:22 - INFO - 	 ROC-AUC: 0.980
2024-10-13 20:22 - INFO - 	 PR-AUC: 0.839
2024-10-13 20:22 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 20:22 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 20:22 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 20:22 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 20:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 20:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 20:22 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 20:22 - INFO - ---------------------------------------------
2024-10-13 20:23 - INFO - ---------------------------------------------
2024-10-13 20:23 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 20:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98291
2024-10-13 20:23 - INFO - 	 Train Loss: 0.084
2024-10-13 20:23 - INFO - 	 Val. Loss: 0.074
2024-10-13 20:23 - INFO - 	 ROC-AUC: 0.983
2024-10-13 20:23 - INFO - 	 PR-AUC: 0.835
2024-10-13 20:23 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 20:23 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 20:23 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 20:23 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 20:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 20:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 20:23 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 20:23 - INFO - ---------------------------------------------
2024-10-13 20:24 - INFO - Fit the preprocessing pipeline
2024-10-13 20:24 - INFO - Training using device: cuda
2024-10-13 20:24 - INFO - Creating generators
2024-10-13 20:24 - INFO - The model has 651,257 trainable parameters
2024-10-13 20:24 - INFO - * Model:
2024-10-13 20:24 - INFO - * -----------
2024-10-13 20:24 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 20:24 - INFO - * -----------
2024-10-13 20:24 - INFO - Evaluating model based on: rocauc
2024-10-13 20:24 - INFO - Training..

2024-10-13 20:25 - INFO - ---------------------------------------------
2024-10-13 20:25 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 20:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95063
2024-10-13 20:25 - INFO - 	 Train Loss: 0.197
2024-10-13 20:25 - INFO - 	 Val. Loss: 0.128
2024-10-13 20:25 - INFO - 	 ROC-AUC: 0.951
2024-10-13 20:25 - INFO - 	 PR-AUC: 0.607
2024-10-13 20:25 - INFO - 	 Recall for 0.4 precision: 0.850
2024-10-13 20:25 - INFO - 	 Best Val. Loss: 0.128
2024-10-13 20:25 - INFO - 	 Best ROC-AUC: 0.951
2024-10-13 20:25 - INFO - 	 Best PR-AUC: 0.607
2024-10-13 20:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-10-13 20:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.613
2024-10-13 20:25 - INFO - 	 Best Recall for 0.4 precision: 0.850
2024-10-13 20:25 - INFO - ---------------------------------------------
2024-10-13 20:25 - INFO - ---------------------------------------------
2024-10-13 20:25 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 20:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97117
2024-10-13 20:25 - INFO - 	 Train Loss: 0.114
2024-10-13 20:25 - INFO - 	 Val. Loss: 0.105
2024-10-13 20:25 - INFO - 	 ROC-AUC: 0.971
2024-10-13 20:25 - INFO - 	 PR-AUC: 0.713
2024-10-13 20:25 - INFO - 	 Recall for 0.4 precision: 0.956
2024-10-13 20:25 - INFO - 	 Best Val. Loss: 0.105
2024-10-13 20:25 - INFO - 	 Best ROC-AUC: 0.971
2024-10-13 20:25 - INFO - 	 Best PR-AUC: 0.713
2024-10-13 20:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-13 20:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.718
2024-10-13 20:25 - INFO - 	 Best Recall for 0.4 precision: 0.956
2024-10-13 20:25 - INFO - ---------------------------------------------
2024-10-13 20:26 - INFO - ---------------------------------------------
2024-10-13 20:26 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 20:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97959
2024-10-13 20:26 - INFO - 	 Train Loss: 0.101
2024-10-13 20:26 - INFO - 	 Val. Loss: 0.082
2024-10-13 20:26 - INFO - 	 ROC-AUC: 0.980
2024-10-13 20:26 - INFO - 	 PR-AUC: 0.796
2024-10-13 20:26 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 20:26 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 20:26 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 20:26 - INFO - 	 Best PR-AUC: 0.796
2024-10-13 20:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 20:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-13 20:26 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:26 - INFO - ---------------------------------------------
2024-10-13 20:26 - INFO - ---------------------------------------------
2024-10-13 20:26 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 20:26 - INFO - 	 Train Loss: 0.095
2024-10-13 20:26 - INFO - 	 Val. Loss: 0.088
2024-10-13 20:26 - INFO - 	 ROC-AUC: 0.976
2024-10-13 20:26 - INFO - 	 PR-AUC: 0.799
2024-10-13 20:26 - INFO - 	 Recall for 0.4 precision: 0.955
2024-10-13 20:26 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 20:26 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 20:26 - INFO - 	 Best PR-AUC: 0.799
2024-10-13 20:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 20:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-13 20:26 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:26 - INFO - ---------------------------------------------
2024-10-13 20:27 - INFO - ---------------------------------------------
2024-10-13 20:27 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 20:27 - INFO - 	 Train Loss: 0.091
2024-10-13 20:27 - INFO - 	 Val. Loss: 0.087
2024-10-13 20:27 - INFO - 	 ROC-AUC: 0.977
2024-10-13 20:27 - INFO - 	 PR-AUC: 0.798
2024-10-13 20:27 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 20:27 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 20:27 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 20:27 - INFO - 	 Best PR-AUC: 0.799
2024-10-13 20:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 20:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-13 20:27 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:27 - INFO - ---------------------------------------------
2024-10-13 20:28 - INFO - ---------------------------------------------
2024-10-13 20:28 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 20:28 - INFO - 	 Train Loss: 0.090
2024-10-13 20:28 - INFO - 	 Val. Loss: 0.082
2024-10-13 20:28 - INFO - 	 ROC-AUC: 0.978
2024-10-13 20:28 - INFO - 	 PR-AUC: 0.810
2024-10-13 20:28 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 20:28 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 20:28 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 20:28 - INFO - 	 Best PR-AUC: 0.810
2024-10-13 20:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 20:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 20:28 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:28 - INFO - ---------------------------------------------
2024-10-13 20:28 - INFO - ---------------------------------------------
2024-10-13 20:28 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 20:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98011
2024-10-13 20:28 - INFO - 	 Train Loss: 0.087
2024-10-13 20:28 - INFO - 	 Val. Loss: 0.078
2024-10-13 20:28 - INFO - 	 ROC-AUC: 0.980
2024-10-13 20:28 - INFO - 	 PR-AUC: 0.850
2024-10-13 20:28 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 20:28 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 20:28 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 20:28 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 20:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 20:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-13 20:28 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:28 - INFO - ---------------------------------------------
2024-10-13 20:29 - INFO - ---------------------------------------------
2024-10-13 20:29 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 20:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98098
2024-10-13 20:29 - INFO - 	 Train Loss: 0.085
2024-10-13 20:29 - INFO - 	 Val. Loss: 0.076
2024-10-13 20:29 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:29 - INFO - 	 PR-AUC: 0.827
2024-10-13 20:29 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 20:29 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:29 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 20:29 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 20:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 20:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-13 20:29 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:29 - INFO - ---------------------------------------------
2024-10-13 20:29 - INFO - ---------------------------------------------
2024-10-13 20:29 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 20:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98176
2024-10-13 20:29 - INFO - 	 Train Loss: 0.084
2024-10-13 20:29 - INFO - 	 Val. Loss: 0.076
2024-10-13 20:29 - INFO - 	 ROC-AUC: 0.982
2024-10-13 20:29 - INFO - 	 PR-AUC: 0.840
2024-10-13 20:29 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 20:29 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:29 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:29 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 20:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 20:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-13 20:29 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:29 - INFO - ---------------------------------------------
2024-10-13 20:30 - INFO - ---------------------------------------------
2024-10-13 20:30 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 20:30 - INFO - 	 Train Loss: 0.082
2024-10-13 20:30 - INFO - 	 Val. Loss: 0.075
2024-10-13 20:30 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:30 - INFO - 	 PR-AUC: 0.824
2024-10-13 20:30 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 20:30 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 20:30 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:30 - INFO - 	 Best PR-AUC: 0.850
2024-10-13 20:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 20:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-13 20:30 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 20:30 - INFO - ---------------------------------------------
2024-10-13 20:31 - INFO - Fit the preprocessing pipeline
2024-10-13 20:31 - INFO - Training using device: cuda
2024-10-13 20:31 - INFO - Creating generators
2024-10-13 20:31 - INFO - The model has 651,257 trainable parameters
2024-10-13 20:31 - INFO - * Model:
2024-10-13 20:31 - INFO - * -----------
2024-10-13 20:31 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 20:31 - INFO - * -----------
2024-10-13 20:31 - INFO - Evaluating model based on: rocauc
2024-10-13 20:31 - INFO - Training..

2024-10-13 20:32 - INFO - ---------------------------------------------
2024-10-13 20:32 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 20:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9422
2024-10-13 20:32 - INFO - 	 Train Loss: 0.219
2024-10-13 20:32 - INFO - 	 Val. Loss: 0.172
2024-10-13 20:32 - INFO - 	 ROC-AUC: 0.942
2024-10-13 20:32 - INFO - 	 PR-AUC: 0.551
2024-10-13 20:32 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 20:32 - INFO - 	 Best Val. Loss: 0.172
2024-10-13 20:32 - INFO - 	 Best ROC-AUC: 0.942
2024-10-13 20:32 - INFO - 	 Best PR-AUC: 0.551
2024-10-13 20:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-10-13 20:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.579
2024-10-13 20:32 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-13 20:32 - INFO - ---------------------------------------------
2024-10-13 20:32 - INFO - ---------------------------------------------
2024-10-13 20:32 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 20:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96857
2024-10-13 20:32 - INFO - 	 Train Loss: 0.118
2024-10-13 20:32 - INFO - 	 Val. Loss: 0.107
2024-10-13 20:32 - INFO - 	 ROC-AUC: 0.969
2024-10-13 20:32 - INFO - 	 PR-AUC: 0.693
2024-10-13 20:32 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 20:32 - INFO - 	 Best Val. Loss: 0.107
2024-10-13 20:32 - INFO - 	 Best ROC-AUC: 0.969
2024-10-13 20:32 - INFO - 	 Best PR-AUC: 0.693
2024-10-13 20:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 20:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-10-13 20:32 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-13 20:32 - INFO - ---------------------------------------------
2024-10-13 20:33 - INFO - ---------------------------------------------
2024-10-13 20:33 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 20:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97554
2024-10-13 20:33 - INFO - 	 Train Loss: 0.102
2024-10-13 20:33 - INFO - 	 Val. Loss: 0.089
2024-10-13 20:33 - INFO - 	 ROC-AUC: 0.976
2024-10-13 20:33 - INFO - 	 PR-AUC: 0.761
2024-10-13 20:33 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 20:33 - INFO - 	 Best Val. Loss: 0.089
2024-10-13 20:33 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 20:33 - INFO - 	 Best PR-AUC: 0.761
2024-10-13 20:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-13 20:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-13 20:33 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 20:33 - INFO - ---------------------------------------------
2024-10-13 20:33 - INFO - ---------------------------------------------
2024-10-13 20:33 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 20:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97917
2024-10-13 20:33 - INFO - 	 Train Loss: 0.094
2024-10-13 20:33 - INFO - 	 Val. Loss: 0.083
2024-10-13 20:33 - INFO - 	 ROC-AUC: 0.979
2024-10-13 20:33 - INFO - 	 PR-AUC: 0.813
2024-10-13 20:33 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 20:33 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 20:33 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 20:33 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 20:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 20:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-13 20:33 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 20:33 - INFO - ---------------------------------------------
2024-10-13 20:34 - INFO - ---------------------------------------------
2024-10-13 20:34 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 20:34 - INFO - 	 Train Loss: 0.091
2024-10-13 20:34 - INFO - 	 Val. Loss: 0.084
2024-10-13 20:34 - INFO - 	 ROC-AUC: 0.978
2024-10-13 20:34 - INFO - 	 PR-AUC: 0.806
2024-10-13 20:34 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 20:34 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 20:34 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 20:34 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 20:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 20:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-13 20:34 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:34 - INFO - ---------------------------------------------
2024-10-13 20:34 - INFO - ---------------------------------------------
2024-10-13 20:34 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 20:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9806
2024-10-13 20:34 - INFO - 	 Train Loss: 0.088
2024-10-13 20:34 - INFO - 	 Val. Loss: 0.080
2024-10-13 20:34 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:34 - INFO - 	 PR-AUC: 0.826
2024-10-13 20:34 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 20:34 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 20:34 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 20:34 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 20:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 20:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 20:34 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 20:34 - INFO - ---------------------------------------------
2024-10-13 20:35 - INFO - ---------------------------------------------
2024-10-13 20:35 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 20:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98096
2024-10-13 20:35 - INFO - 	 Train Loss: 0.086
2024-10-13 20:35 - INFO - 	 Val. Loss: 0.076
2024-10-13 20:35 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:35 - INFO - 	 PR-AUC: 0.824
2024-10-13 20:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 20:35 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:35 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 20:35 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 20:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 20:35 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:35 - INFO - ---------------------------------------------
2024-10-13 20:36 - INFO - ---------------------------------------------
2024-10-13 20:36 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 20:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98235
2024-10-13 20:36 - INFO - 	 Train Loss: 0.084
2024-10-13 20:36 - INFO - 	 Val. Loss: 0.075
2024-10-13 20:36 - INFO - 	 ROC-AUC: 0.982
2024-10-13 20:36 - INFO - 	 PR-AUC: 0.834
2024-10-13 20:36 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 20:36 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 20:36 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:36 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 20:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 20:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-13 20:36 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:36 - INFO - ---------------------------------------------
2024-10-13 20:36 - INFO - ---------------------------------------------
2024-10-13 20:36 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 20:36 - INFO - 	 Train Loss: 0.083
2024-10-13 20:36 - INFO - 	 Val. Loss: 0.072
2024-10-13 20:36 - INFO - 	 ROC-AUC: 0.982
2024-10-13 20:36 - INFO - 	 PR-AUC: 0.833
2024-10-13 20:36 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 20:36 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 20:36 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:36 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 20:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 20:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-13 20:36 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:36 - INFO - ---------------------------------------------
2024-10-13 20:37 - INFO - ---------------------------------------------
2024-10-13 20:37 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 20:37 - INFO - 	 Train Loss: 0.083
2024-10-13 20:37 - INFO - 	 Val. Loss: 0.073
2024-10-13 20:37 - INFO - 	 ROC-AUC: 0.982
2024-10-13 20:37 - INFO - 	 PR-AUC: 0.833
2024-10-13 20:37 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 20:37 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 20:37 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:37 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 20:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 20:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-13 20:37 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:37 - INFO - ---------------------------------------------
2024-10-13 20:38 - INFO - Fit the preprocessing pipeline
2024-10-13 20:38 - INFO - Training using device: cuda
2024-10-13 20:38 - INFO - Creating generators
2024-10-13 20:38 - INFO - The model has 651,257 trainable parameters
2024-10-13 20:38 - INFO - * Model:
2024-10-13 20:38 - INFO - * -----------
2024-10-13 20:38 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 20:38 - INFO - * -----------
2024-10-13 20:38 - INFO - Evaluating model based on: rocauc
2024-10-13 20:38 - INFO - Training..

2024-10-13 20:39 - INFO - ---------------------------------------------
2024-10-13 20:39 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 20:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9556
2024-10-13 20:39 - INFO - 	 Train Loss: 0.197
2024-10-13 20:39 - INFO - 	 Val. Loss: 0.126
2024-10-13 20:39 - INFO - 	 ROC-AUC: 0.956
2024-10-13 20:39 - INFO - 	 PR-AUC: 0.606
2024-10-13 20:39 - INFO - 	 Recall for 0.4 precision: 0.893
2024-10-13 20:39 - INFO - 	 Best Val. Loss: 0.126
2024-10-13 20:39 - INFO - 	 Best ROC-AUC: 0.956
2024-10-13 20:39 - INFO - 	 Best PR-AUC: 0.606
2024-10-13 20:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-10-13 20:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.618
2024-10-13 20:39 - INFO - 	 Best Recall for 0.4 precision: 0.893
2024-10-13 20:39 - INFO - ---------------------------------------------
2024-10-13 20:39 - INFO - ---------------------------------------------
2024-10-13 20:39 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 20:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9706
2024-10-13 20:39 - INFO - 	 Train Loss: 0.112
2024-10-13 20:39 - INFO - 	 Val. Loss: 0.102
2024-10-13 20:39 - INFO - 	 ROC-AUC: 0.971
2024-10-13 20:39 - INFO - 	 PR-AUC: 0.755
2024-10-13 20:39 - INFO - 	 Recall for 0.4 precision: 0.953
2024-10-13 20:39 - INFO - 	 Best Val. Loss: 0.102
2024-10-13 20:39 - INFO - 	 Best ROC-AUC: 0.971
2024-10-13 20:39 - INFO - 	 Best PR-AUC: 0.755
2024-10-13 20:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 20:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.731
2024-10-13 20:39 - INFO - 	 Best Recall for 0.4 precision: 0.953
2024-10-13 20:39 - INFO - ---------------------------------------------
2024-10-13 20:40 - INFO - ---------------------------------------------
2024-10-13 20:40 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 20:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9741
2024-10-13 20:40 - INFO - 	 Train Loss: 0.101
2024-10-13 20:40 - INFO - 	 Val. Loss: 0.090
2024-10-13 20:40 - INFO - 	 ROC-AUC: 0.974
2024-10-13 20:40 - INFO - 	 PR-AUC: 0.796
2024-10-13 20:40 - INFO - 	 Recall for 0.4 precision: 0.957
2024-10-13 20:40 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 20:40 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 20:40 - INFO - 	 Best PR-AUC: 0.796
2024-10-13 20:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 20:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.752
2024-10-13 20:40 - INFO - 	 Best Recall for 0.4 precision: 0.957
2024-10-13 20:40 - INFO - ---------------------------------------------
2024-10-13 20:40 - INFO - ---------------------------------------------
2024-10-13 20:40 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 20:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97648
2024-10-13 20:40 - INFO - 	 Train Loss: 0.095
2024-10-13 20:40 - INFO - 	 Val. Loss: 0.087
2024-10-13 20:40 - INFO - 	 ROC-AUC: 0.976
2024-10-13 20:40 - INFO - 	 PR-AUC: 0.801
2024-10-13 20:40 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 20:40 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 20:40 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 20:40 - INFO - 	 Best PR-AUC: 0.801
2024-10-13 20:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 20:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-13 20:40 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 20:40 - INFO - ---------------------------------------------
2024-10-13 20:41 - INFO - ---------------------------------------------
2024-10-13 20:41 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 20:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98156
2024-10-13 20:41 - INFO - 	 Train Loss: 0.091
2024-10-13 20:41 - INFO - 	 Val. Loss: 0.076
2024-10-13 20:41 - INFO - 	 ROC-AUC: 0.982
2024-10-13 20:41 - INFO - 	 PR-AUC: 0.831
2024-10-13 20:41 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 20:41 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:41 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:41 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 20:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-13 20:41 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:41 - INFO - ---------------------------------------------
2024-10-13 20:41 - INFO - ---------------------------------------------
2024-10-13 20:41 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 20:41 - INFO - 	 Train Loss: 0.090
2024-10-13 20:41 - INFO - 	 Val. Loss: 0.079
2024-10-13 20:41 - INFO - 	 ROC-AUC: 0.980
2024-10-13 20:41 - INFO - 	 PR-AUC: 0.821
2024-10-13 20:41 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 20:41 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:41 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:41 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 20:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-13 20:41 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:41 - INFO - ---------------------------------------------
2024-10-13 20:42 - INFO - ---------------------------------------------
2024-10-13 20:42 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 20:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98159
2024-10-13 20:42 - INFO - 	 Train Loss: 0.086
2024-10-13 20:42 - INFO - 	 Val. Loss: 0.077
2024-10-13 20:42 - INFO - 	 ROC-AUC: 0.982
2024-10-13 20:42 - INFO - 	 PR-AUC: 0.830
2024-10-13 20:42 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 20:42 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:42 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:42 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 20:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 20:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-13 20:42 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:42 - INFO - ---------------------------------------------
2024-10-13 20:42 - INFO - ---------------------------------------------
2024-10-13 20:42 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 20:42 - INFO - 	 Train Loss: 0.085
2024-10-13 20:42 - INFO - 	 Val. Loss: 0.081
2024-10-13 20:42 - INFO - 	 ROC-AUC: 0.979
2024-10-13 20:42 - INFO - 	 PR-AUC: 0.820
2024-10-13 20:42 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 20:42 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:42 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:42 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 20:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 20:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-13 20:42 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:42 - INFO - ---------------------------------------------
2024-10-13 20:43 - INFO - ---------------------------------------------
2024-10-13 20:43 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 20:43 - INFO - 	 Train Loss: 0.083
2024-10-13 20:43 - INFO - 	 Val. Loss: 0.076
2024-10-13 20:43 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:43 - INFO - 	 PR-AUC: 0.839
2024-10-13 20:43 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 20:43 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 20:43 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:43 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 20:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 20:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-13 20:43 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:43 - INFO - ---------------------------------------------
2024-10-13 20:43 - INFO - ---------------------------------------------
2024-10-13 20:43 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 20:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98268
2024-10-13 20:43 - INFO - 	 Train Loss: 0.083
2024-10-13 20:43 - INFO - 	 Val. Loss: 0.072
2024-10-13 20:43 - INFO - 	 ROC-AUC: 0.983
2024-10-13 20:43 - INFO - 	 PR-AUC: 0.834
2024-10-13 20:43 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 20:43 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 20:43 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 20:43 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 20:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 20:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-13 20:43 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 20:43 - INFO - ---------------------------------------------
2024-10-13 20:45 - INFO - Fit the preprocessing pipeline
2024-10-13 20:45 - INFO - Training using device: cuda
2024-10-13 20:45 - INFO - Creating generators
2024-10-13 20:45 - INFO - The model has 651,257 trainable parameters
2024-10-13 20:45 - INFO - * Model:
2024-10-13 20:45 - INFO - * -----------
2024-10-13 20:45 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 20:45 - INFO - * -----------
2024-10-13 20:45 - INFO - Evaluating model based on: rocauc
2024-10-13 20:45 - INFO - Training..

2024-10-13 20:46 - INFO - ---------------------------------------------
2024-10-13 20:46 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 20:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94617
2024-10-13 20:46 - INFO - 	 Train Loss: 0.210
2024-10-13 20:46 - INFO - 	 Val. Loss: 0.134
2024-10-13 20:46 - INFO - 	 ROC-AUC: 0.946
2024-10-13 20:46 - INFO - 	 PR-AUC: 0.611
2024-10-13 20:46 - INFO - 	 Recall for 0.4 precision: 0.841
2024-10-13 20:46 - INFO - 	 Best Val. Loss: 0.134
2024-10-13 20:46 - INFO - 	 Best ROC-AUC: 0.946
2024-10-13 20:46 - INFO - 	 Best PR-AUC: 0.611
2024-10-13 20:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-10-13 20:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.591
2024-10-13 20:46 - INFO - 	 Best Recall for 0.4 precision: 0.841
2024-10-13 20:46 - INFO - ---------------------------------------------
2024-10-13 20:46 - INFO - ---------------------------------------------
2024-10-13 20:46 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 20:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97297
2024-10-13 20:46 - INFO - 	 Train Loss: 0.117
2024-10-13 20:46 - INFO - 	 Val. Loss: 0.101
2024-10-13 20:46 - INFO - 	 ROC-AUC: 0.973
2024-10-13 20:46 - INFO - 	 PR-AUC: 0.754
2024-10-13 20:46 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 20:46 - INFO - 	 Best Val. Loss: 0.101
2024-10-13 20:46 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 20:46 - INFO - 	 Best PR-AUC: 0.754
2024-10-13 20:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 20:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-10-13 20:46 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 20:46 - INFO - ---------------------------------------------
2024-10-13 20:47 - INFO - ---------------------------------------------
2024-10-13 20:47 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 20:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97741
2024-10-13 20:47 - INFO - 	 Train Loss: 0.103
2024-10-13 20:47 - INFO - 	 Val. Loss: 0.085
2024-10-13 20:47 - INFO - 	 ROC-AUC: 0.977
2024-10-13 20:47 - INFO - 	 PR-AUC: 0.805
2024-10-13 20:47 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 20:47 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 20:47 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 20:47 - INFO - 	 Best PR-AUC: 0.805
2024-10-13 20:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 20:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-13 20:47 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 20:47 - INFO - ---------------------------------------------
2024-10-13 20:47 - INFO - ---------------------------------------------
2024-10-13 20:47 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 20:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97863
2024-10-13 20:47 - INFO - 	 Train Loss: 0.095
2024-10-13 20:47 - INFO - 	 Val. Loss: 0.083
2024-10-13 20:47 - INFO - 	 ROC-AUC: 0.979
2024-10-13 20:47 - INFO - 	 PR-AUC: 0.823
2024-10-13 20:47 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 20:47 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 20:47 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 20:47 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 20:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 20:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-13 20:47 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 20:47 - INFO - ---------------------------------------------
2024-10-13 20:48 - INFO - ---------------------------------------------
2024-10-13 20:48 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 20:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97896
2024-10-13 20:48 - INFO - 	 Train Loss: 0.090
2024-10-13 20:48 - INFO - 	 Val. Loss: 0.081
2024-10-13 20:48 - INFO - 	 ROC-AUC: 0.979
2024-10-13 20:48 - INFO - 	 PR-AUC: 0.818
2024-10-13 20:48 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 20:48 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 20:48 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 20:48 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 20:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-13 20:48 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 20:48 - INFO - ---------------------------------------------
2024-10-13 20:48 - INFO - ---------------------------------------------
2024-10-13 20:48 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 20:48 - INFO - 	 Train Loss: 0.089
2024-10-13 20:48 - INFO - 	 Val. Loss: 0.091
2024-10-13 20:48 - INFO - 	 ROC-AUC: 0.978
2024-10-13 20:48 - INFO - 	 PR-AUC: 0.825
2024-10-13 20:48 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 20:48 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 20:48 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 20:48 - INFO - 	 Best PR-AUC: 0.825
2024-10-13 20:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-13 20:48 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:48 - INFO - ---------------------------------------------
2024-10-13 20:49 - INFO - ---------------------------------------------
2024-10-13 20:49 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 20:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97917
2024-10-13 20:49 - INFO - 	 Train Loss: 0.086
2024-10-13 20:49 - INFO - 	 Val. Loss: 0.085
2024-10-13 20:49 - INFO - 	 ROC-AUC: 0.979
2024-10-13 20:49 - INFO - 	 PR-AUC: 0.821
2024-10-13 20:49 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 20:49 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 20:49 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 20:49 - INFO - 	 Best PR-AUC: 0.825
2024-10-13 20:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 20:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-13 20:49 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:49 - INFO - ---------------------------------------------
2024-10-13 20:49 - INFO - ---------------------------------------------
2024-10-13 20:49 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 20:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98208
2024-10-13 20:49 - INFO - 	 Train Loss: 0.086
2024-10-13 20:49 - INFO - 	 Val. Loss: 0.074
2024-10-13 20:49 - INFO - 	 ROC-AUC: 0.982
2024-10-13 20:49 - INFO - 	 PR-AUC: 0.843
2024-10-13 20:49 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 20:49 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 20:49 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:49 - INFO - 	 Best PR-AUC: 0.843
2024-10-13 20:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 20:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 20:49 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:49 - INFO - ---------------------------------------------
2024-10-13 20:50 - INFO - ---------------------------------------------
2024-10-13 20:50 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 20:50 - INFO - 	 Train Loss: 0.084
2024-10-13 20:50 - INFO - 	 Val. Loss: 0.076
2024-10-13 20:50 - INFO - 	 ROC-AUC: 0.980
2024-10-13 20:50 - INFO - 	 PR-AUC: 0.838
2024-10-13 20:50 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 20:50 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 20:50 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:50 - INFO - 	 Best PR-AUC: 0.843
2024-10-13 20:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 20:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 20:50 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 20:50 - INFO - ---------------------------------------------
2024-10-13 20:50 - INFO - ---------------------------------------------
2024-10-13 20:50 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 20:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98211
2024-10-13 20:50 - INFO - 	 Train Loss: 0.083
2024-10-13 20:50 - INFO - 	 Val. Loss: 0.073
2024-10-13 20:50 - INFO - 	 ROC-AUC: 0.982
2024-10-13 20:50 - INFO - 	 PR-AUC: 0.838
2024-10-13 20:50 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 20:50 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 20:50 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 20:50 - INFO - 	 Best PR-AUC: 0.843
2024-10-13 20:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-13 20:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 20:50 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 20:50 - INFO - ---------------------------------------------
2024-10-13 20:52 - INFO - Fit the preprocessing pipeline
2024-10-13 20:52 - INFO - Training using device: cuda
2024-10-13 20:52 - INFO - Creating generators
2024-10-13 20:52 - INFO - The model has 651,257 trainable parameters
2024-10-13 20:52 - INFO - * Model:
2024-10-13 20:52 - INFO - * -----------
2024-10-13 20:52 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 20:52 - INFO - * -----------
2024-10-13 20:52 - INFO - Evaluating model based on: rocauc
2024-10-13 20:52 - INFO - Training..

2024-10-13 20:53 - INFO - ---------------------------------------------
2024-10-13 20:53 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 20:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94021
2024-10-13 20:53 - INFO - 	 Train Loss: 0.213
2024-10-13 20:53 - INFO - 	 Val. Loss: 0.156
2024-10-13 20:53 - INFO - 	 ROC-AUC: 0.940
2024-10-13 20:53 - INFO - 	 PR-AUC: 0.568
2024-10-13 20:53 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 20:53 - INFO - 	 Best Val. Loss: 0.156
2024-10-13 20:53 - INFO - 	 Best ROC-AUC: 0.940
2024-10-13 20:53 - INFO - 	 Best PR-AUC: 0.568
2024-10-13 20:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-10-13 20:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.565
2024-10-13 20:53 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-13 20:53 - INFO - ---------------------------------------------
2024-10-13 20:53 - INFO - ---------------------------------------------
2024-10-13 20:53 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 20:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96664
2024-10-13 20:53 - INFO - 	 Train Loss: 0.120
2024-10-13 20:53 - INFO - 	 Val. Loss: 0.110
2024-10-13 20:53 - INFO - 	 ROC-AUC: 0.967
2024-10-13 20:53 - INFO - 	 PR-AUC: 0.692
2024-10-13 20:53 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-13 20:53 - INFO - 	 Best Val. Loss: 0.110
2024-10-13 20:53 - INFO - 	 Best ROC-AUC: 0.967
2024-10-13 20:53 - INFO - 	 Best PR-AUC: 0.692
2024-10-13 20:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 20:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.671
2024-10-13 20:53 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-13 20:53 - INFO - ---------------------------------------------
2024-10-13 20:54 - INFO - ---------------------------------------------
2024-10-13 20:54 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 20:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97504
2024-10-13 20:54 - INFO - 	 Train Loss: 0.102
2024-10-13 20:54 - INFO - 	 Val. Loss: 0.091
2024-10-13 20:54 - INFO - 	 ROC-AUC: 0.975
2024-10-13 20:54 - INFO - 	 PR-AUC: 0.754
2024-10-13 20:54 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 20:54 - INFO - 	 Best Val. Loss: 0.091
2024-10-13 20:54 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 20:54 - INFO - 	 Best PR-AUC: 0.754
2024-10-13 20:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 20:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.715
2024-10-13 20:54 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 20:54 - INFO - ---------------------------------------------
2024-10-13 20:54 - INFO - ---------------------------------------------
2024-10-13 20:54 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 20:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97786
2024-10-13 20:54 - INFO - 	 Train Loss: 0.097
2024-10-13 20:54 - INFO - 	 Val. Loss: 0.083
2024-10-13 20:54 - INFO - 	 ROC-AUC: 0.978
2024-10-13 20:54 - INFO - 	 PR-AUC: 0.798
2024-10-13 20:54 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 20:54 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 20:54 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 20:54 - INFO - 	 Best PR-AUC: 0.798
2024-10-13 20:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 20:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-13 20:54 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 20:54 - INFO - ---------------------------------------------
2024-10-13 20:55 - INFO - ---------------------------------------------
2024-10-13 20:55 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 20:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97841
2024-10-13 20:55 - INFO - 	 Train Loss: 0.092
2024-10-13 20:55 - INFO - 	 Val. Loss: 0.086
2024-10-13 20:55 - INFO - 	 ROC-AUC: 0.978
2024-10-13 20:55 - INFO - 	 PR-AUC: 0.800
2024-10-13 20:55 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 20:55 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 20:55 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 20:55 - INFO - 	 Best PR-AUC: 0.800
2024-10-13 20:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 20:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-10-13 20:55 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 20:55 - INFO - ---------------------------------------------
2024-10-13 20:55 - INFO - ---------------------------------------------
2024-10-13 20:55 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 20:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97958
2024-10-13 20:55 - INFO - 	 Train Loss: 0.088
2024-10-13 20:55 - INFO - 	 Val. Loss: 0.079
2024-10-13 20:55 - INFO - 	 ROC-AUC: 0.980
2024-10-13 20:55 - INFO - 	 PR-AUC: 0.814
2024-10-13 20:55 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 20:55 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 20:55 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 20:55 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 20:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 20:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-13 20:55 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 20:55 - INFO - ---------------------------------------------
2024-10-13 20:56 - INFO - ---------------------------------------------
2024-10-13 20:56 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 20:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98074
2024-10-13 20:56 - INFO - 	 Train Loss: 0.088
2024-10-13 20:56 - INFO - 	 Val. Loss: 0.081
2024-10-13 20:56 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:56 - INFO - 	 PR-AUC: 0.815
2024-10-13 20:56 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 20:56 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 20:56 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 20:56 - INFO - 	 Best PR-AUC: 0.815
2024-10-13 20:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 20:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-13 20:56 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 20:56 - INFO - ---------------------------------------------
2024-10-13 20:56 - INFO - ---------------------------------------------
2024-10-13 20:56 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 20:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98112
2024-10-13 20:56 - INFO - 	 Train Loss: 0.085
2024-10-13 20:56 - INFO - 	 Val. Loss: 0.077
2024-10-13 20:56 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:56 - INFO - 	 PR-AUC: 0.839
2024-10-13 20:56 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 20:56 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 20:56 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 20:56 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 20:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 20:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-13 20:56 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 20:56 - INFO - ---------------------------------------------
2024-10-13 20:57 - INFO - ---------------------------------------------
2024-10-13 20:57 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 20:57 - INFO - 	 Train Loss: 0.084
2024-10-13 20:57 - INFO - 	 Val. Loss: 0.083
2024-10-13 20:57 - INFO - 	 ROC-AUC: 0.981
2024-10-13 20:57 - INFO - 	 PR-AUC: 0.831
2024-10-13 20:57 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 20:57 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 20:57 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 20:57 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 20:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 20:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-13 20:57 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 20:57 - INFO - ---------------------------------------------
2024-10-13 20:57 - INFO - ---------------------------------------------
2024-10-13 20:57 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 20:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98399
2024-10-13 20:57 - INFO - 	 Train Loss: 0.082
2024-10-13 20:57 - INFO - 	 Val. Loss: 0.070
2024-10-13 20:57 - INFO - 	 ROC-AUC: 0.984
2024-10-13 20:57 - INFO - 	 PR-AUC: 0.840
2024-10-13 20:57 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 20:57 - INFO - 	 Best Val. Loss: 0.070
2024-10-13 20:57 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 20:57 - INFO - 	 Best PR-AUC: 0.840
2024-10-13 20:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 20:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-13 20:57 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 20:57 - INFO - ---------------------------------------------
2024-10-13 20:59 - INFO - Fit the preprocessing pipeline
2024-10-13 20:59 - INFO - Training using device: cuda
2024-10-13 20:59 - INFO - Creating generators
2024-10-13 20:59 - INFO - The model has 651,257 trainable parameters
2024-10-13 20:59 - INFO - * Model:
2024-10-13 20:59 - INFO - * -----------
2024-10-13 20:59 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 20:59 - INFO - * -----------
2024-10-13 20:59 - INFO - Evaluating model based on: rocauc
2024-10-13 20:59 - INFO - Training..

2024-10-13 20:59 - INFO - ---------------------------------------------
2024-10-13 20:59 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 20:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94763
2024-10-13 20:59 - INFO - 	 Train Loss: 0.209
2024-10-13 20:59 - INFO - 	 Val. Loss: 0.130
2024-10-13 20:59 - INFO - 	 ROC-AUC: 0.948
2024-10-13 20:59 - INFO - 	 PR-AUC: 0.601
2024-10-13 20:59 - INFO - 	 Recall for 0.4 precision: 0.858
2024-10-13 20:59 - INFO - 	 Best Val. Loss: 0.130
2024-10-13 20:59 - INFO - 	 Best ROC-AUC: 0.948
2024-10-13 20:59 - INFO - 	 Best PR-AUC: 0.601
2024-10-13 20:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-10-13 20:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.614
2024-10-13 20:59 - INFO - 	 Best Recall for 0.4 precision: 0.858
2024-10-13 20:59 - INFO - ---------------------------------------------
2024-10-13 21:00 - INFO - ---------------------------------------------
2024-10-13 21:00 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 21:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97332
2024-10-13 21:00 - INFO - 	 Train Loss: 0.114
2024-10-13 21:00 - INFO - 	 Val. Loss: 0.093
2024-10-13 21:00 - INFO - 	 ROC-AUC: 0.973
2024-10-13 21:00 - INFO - 	 PR-AUC: 0.743
2024-10-13 21:00 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 21:00 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 21:00 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 21:00 - INFO - 	 Best PR-AUC: 0.743
2024-10-13 21:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-13 21:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-13 21:00 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:00 - INFO - ---------------------------------------------
2024-10-13 21:01 - INFO - ---------------------------------------------
2024-10-13 21:01 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 21:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97361
2024-10-13 21:01 - INFO - 	 Train Loss: 0.101
2024-10-13 21:01 - INFO - 	 Val. Loss: 0.107
2024-10-13 21:01 - INFO - 	 ROC-AUC: 0.974
2024-10-13 21:01 - INFO - 	 PR-AUC: 0.771
2024-10-13 21:01 - INFO - 	 Recall for 0.4 precision: 0.950
2024-10-13 21:01 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 21:01 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 21:01 - INFO - 	 Best PR-AUC: 0.771
2024-10-13 21:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 21:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.744
2024-10-13 21:01 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:01 - INFO - ---------------------------------------------
2024-10-13 21:01 - INFO - ---------------------------------------------
2024-10-13 21:01 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 21:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9779
2024-10-13 21:01 - INFO - 	 Train Loss: 0.094
2024-10-13 21:01 - INFO - 	 Val. Loss: 0.085
2024-10-13 21:01 - INFO - 	 ROC-AUC: 0.978
2024-10-13 21:01 - INFO - 	 PR-AUC: 0.795
2024-10-13 21:01 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 21:01 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 21:01 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 21:01 - INFO - 	 Best PR-AUC: 0.795
2024-10-13 21:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 21:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-13 21:01 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:01 - INFO - ---------------------------------------------
2024-10-13 21:02 - INFO - ---------------------------------------------
2024-10-13 21:02 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 21:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97883
2024-10-13 21:02 - INFO - 	 Train Loss: 0.090
2024-10-13 21:02 - INFO - 	 Val. Loss: 0.082
2024-10-13 21:02 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:02 - INFO - 	 PR-AUC: 0.803
2024-10-13 21:02 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 21:02 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 21:02 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:02 - INFO - 	 Best PR-AUC: 0.803
2024-10-13 21:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-13 21:02 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 21:02 - INFO - ---------------------------------------------
2024-10-13 21:02 - INFO - ---------------------------------------------
2024-10-13 21:02 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 21:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98144
2024-10-13 21:02 - INFO - 	 Train Loss: 0.089
2024-10-13 21:02 - INFO - 	 Val. Loss: 0.074
2024-10-13 21:02 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:02 - INFO - 	 PR-AUC: 0.839
2024-10-13 21:02 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 21:02 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:02 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:02 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 21:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 21:02 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 21:02 - INFO - ---------------------------------------------
2024-10-13 21:03 - INFO - ---------------------------------------------
2024-10-13 21:03 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 21:03 - INFO - 	 Train Loss: 0.088
2024-10-13 21:03 - INFO - 	 Val. Loss: 0.079
2024-10-13 21:03 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:03 - INFO - 	 PR-AUC: 0.814
2024-10-13 21:03 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 21:03 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:03 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:03 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 21:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 21:03 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 21:03 - INFO - ---------------------------------------------
2024-10-13 21:03 - INFO - ---------------------------------------------
2024-10-13 21:03 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 21:03 - INFO - 	 Train Loss: 0.085
2024-10-13 21:03 - INFO - 	 Val. Loss: 0.087
2024-10-13 21:03 - INFO - 	 ROC-AUC: 0.974
2024-10-13 21:03 - INFO - 	 PR-AUC: 0.797
2024-10-13 21:03 - INFO - 	 Recall for 0.4 precision: 0.941
2024-10-13 21:03 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:03 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:03 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 21:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 21:03 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 21:03 - INFO - ---------------------------------------------
2024-10-13 21:04 - INFO - ---------------------------------------------
2024-10-13 21:04 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 21:04 - INFO - 	 Train Loss: 0.085
2024-10-13 21:04 - INFO - 	 Val. Loss: 0.077
2024-10-13 21:04 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:04 - INFO - 	 PR-AUC: 0.822
2024-10-13 21:04 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 21:04 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:04 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:04 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 21:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 21:04 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 21:04 - INFO - ---------------------------------------------
2024-10-13 21:04 - INFO - ---------------------------------------------
2024-10-13 21:04 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 21:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98242
2024-10-13 21:04 - INFO - 	 Train Loss: 0.083
2024-10-13 21:04 - INFO - 	 Val. Loss: 0.076
2024-10-13 21:04 - INFO - 	 ROC-AUC: 0.982
2024-10-13 21:04 - INFO - 	 PR-AUC: 0.832
2024-10-13 21:04 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 21:04 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:04 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 21:04 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 21:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-13 21:04 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 21:04 - INFO - ---------------------------------------------
2024-10-13 21:06 - INFO - Fit the preprocessing pipeline
2024-10-13 21:06 - INFO - Training using device: cuda
2024-10-13 21:06 - INFO - Creating generators
2024-10-13 21:06 - INFO - The model has 651,257 trainable parameters
2024-10-13 21:06 - INFO - * Model:
2024-10-13 21:06 - INFO - * -----------
2024-10-13 21:06 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 21:06 - INFO - * -----------
2024-10-13 21:06 - INFO - Evaluating model based on: rocauc
2024-10-13 21:06 - INFO - Training..

2024-10-13 21:06 - INFO - ---------------------------------------------
2024-10-13 21:06 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 21:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94785
2024-10-13 21:06 - INFO - 	 Train Loss: 0.205
2024-10-13 21:06 - INFO - 	 Val. Loss: 0.121
2024-10-13 21:06 - INFO - 	 ROC-AUC: 0.948
2024-10-13 21:06 - INFO - 	 PR-AUC: 0.651
2024-10-13 21:06 - INFO - 	 Recall for 0.4 precision: 0.860
2024-10-13 21:06 - INFO - 	 Best Val. Loss: 0.121
2024-10-13 21:06 - INFO - 	 Best ROC-AUC: 0.948
2024-10-13 21:06 - INFO - 	 Best PR-AUC: 0.651
2024-10-13 21:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-10-13 21:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.618
2024-10-13 21:06 - INFO - 	 Best Recall for 0.4 precision: 0.860
2024-10-13 21:06 - INFO - ---------------------------------------------
2024-10-13 21:07 - INFO - ---------------------------------------------
2024-10-13 21:07 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 21:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97354
2024-10-13 21:07 - INFO - 	 Train Loss: 0.115
2024-10-13 21:07 - INFO - 	 Val. Loss: 0.100
2024-10-13 21:07 - INFO - 	 ROC-AUC: 0.974
2024-10-13 21:07 - INFO - 	 PR-AUC: 0.729
2024-10-13 21:07 - INFO - 	 Recall for 0.4 precision: 0.958
2024-10-13 21:07 - INFO - 	 Best Val. Loss: 0.100
2024-10-13 21:07 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 21:07 - INFO - 	 Best PR-AUC: 0.729
2024-10-13 21:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 21:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.729
2024-10-13 21:07 - INFO - 	 Best Recall for 0.4 precision: 0.958
2024-10-13 21:07 - INFO - ---------------------------------------------
2024-10-13 21:07 - INFO - ---------------------------------------------
2024-10-13 21:07 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 21:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97367
2024-10-13 21:07 - INFO - 	 Train Loss: 0.104
2024-10-13 21:07 - INFO - 	 Val. Loss: 0.098
2024-10-13 21:07 - INFO - 	 ROC-AUC: 0.974
2024-10-13 21:07 - INFO - 	 PR-AUC: 0.767
2024-10-13 21:07 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-13 21:07 - INFO - 	 Best Val. Loss: 0.098
2024-10-13 21:07 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 21:07 - INFO - 	 Best PR-AUC: 0.767
2024-10-13 21:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 21:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.757
2024-10-13 21:07 - INFO - 	 Best Recall for 0.4 precision: 0.958
2024-10-13 21:07 - INFO - ---------------------------------------------
2024-10-13 21:08 - INFO - ---------------------------------------------
2024-10-13 21:08 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 21:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97725
2024-10-13 21:08 - INFO - 	 Train Loss: 0.095
2024-10-13 21:08 - INFO - 	 Val. Loss: 0.086
2024-10-13 21:08 - INFO - 	 ROC-AUC: 0.977
2024-10-13 21:08 - INFO - 	 PR-AUC: 0.788
2024-10-13 21:08 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:08 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 21:08 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 21:08 - INFO - 	 Best PR-AUC: 0.788
2024-10-13 21:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 21:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.768
2024-10-13 21:08 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:08 - INFO - ---------------------------------------------
2024-10-13 21:09 - INFO - ---------------------------------------------
2024-10-13 21:09 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 21:09 - INFO - 	 Train Loss: 0.091
2024-10-13 21:09 - INFO - 	 Val. Loss: 0.084
2024-10-13 21:09 - INFO - 	 ROC-AUC: 0.976
2024-10-13 21:09 - INFO - 	 PR-AUC: 0.787
2024-10-13 21:09 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 21:09 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 21:09 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 21:09 - INFO - 	 Best PR-AUC: 0.788
2024-10-13 21:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 21:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.768
2024-10-13 21:09 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:09 - INFO - ---------------------------------------------
2024-10-13 21:09 - INFO - ---------------------------------------------
2024-10-13 21:09 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 21:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97887
2024-10-13 21:09 - INFO - 	 Train Loss: 0.090
2024-10-13 21:09 - INFO - 	 Val. Loss: 0.080
2024-10-13 21:09 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:09 - INFO - 	 PR-AUC: 0.813
2024-10-13 21:09 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 21:09 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 21:09 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:09 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 21:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 21:09 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:09 - INFO - ---------------------------------------------
2024-10-13 21:10 - INFO - ---------------------------------------------
2024-10-13 21:10 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 21:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97946
2024-10-13 21:10 - INFO - 	 Train Loss: 0.086
2024-10-13 21:10 - INFO - 	 Val. Loss: 0.080
2024-10-13 21:10 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:10 - INFO - 	 PR-AUC: 0.807
2024-10-13 21:10 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:10 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 21:10 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:10 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 21:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 21:10 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:10 - INFO - ---------------------------------------------
2024-10-13 21:10 - INFO - ---------------------------------------------
2024-10-13 21:10 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 21:10 - INFO - 	 Train Loss: 0.085
2024-10-13 21:10 - INFO - 	 Val. Loss: 0.080
2024-10-13 21:10 - INFO - 	 ROC-AUC: 0.978
2024-10-13 21:10 - INFO - 	 PR-AUC: 0.820
2024-10-13 21:10 - INFO - 	 Recall for 0.4 precision: 0.960
2024-10-13 21:10 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 21:10 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:10 - INFO - 	 Best PR-AUC: 0.820
2024-10-13 21:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 21:10 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:10 - INFO - ---------------------------------------------
2024-10-13 21:11 - INFO - ---------------------------------------------
2024-10-13 21:11 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 21:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98127
2024-10-13 21:11 - INFO - 	 Train Loss: 0.083
2024-10-13 21:11 - INFO - 	 Val. Loss: 0.074
2024-10-13 21:11 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:11 - INFO - 	 PR-AUC: 0.838
2024-10-13 21:11 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 21:11 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:11 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:11 - INFO - 	 Best PR-AUC: 0.838
2024-10-13 21:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-13 21:11 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 21:11 - INFO - ---------------------------------------------
2024-10-13 21:11 - INFO - ---------------------------------------------
2024-10-13 21:11 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 21:11 - INFO - 	 Train Loss: 0.082
2024-10-13 21:11 - INFO - 	 Val. Loss: 0.077
2024-10-13 21:11 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:11 - INFO - 	 PR-AUC: 0.825
2024-10-13 21:11 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 21:11 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:11 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:11 - INFO - 	 Best PR-AUC: 0.838
2024-10-13 21:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-13 21:11 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 21:11 - INFO - ---------------------------------------------
2024-10-13 21:13 - INFO - Fit the preprocessing pipeline
2024-10-13 21:13 - INFO - Training using device: cuda
2024-10-13 21:13 - INFO - Creating generators
2024-10-13 21:13 - INFO - The model has 651,257 trainable parameters
2024-10-13 21:13 - INFO - * Model:
2024-10-13 21:13 - INFO - * -----------
2024-10-13 21:13 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 21:13 - INFO - * -----------
2024-10-13 21:13 - INFO - Evaluating model based on: rocauc
2024-10-13 21:13 - INFO - Training..

2024-10-13 21:13 - INFO - ---------------------------------------------
2024-10-13 21:13 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 21:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95328
2024-10-13 21:13 - INFO - 	 Train Loss: 0.199
2024-10-13 21:13 - INFO - 	 Val. Loss: 0.137
2024-10-13 21:13 - INFO - 	 ROC-AUC: 0.953
2024-10-13 21:13 - INFO - 	 PR-AUC: 0.613
2024-10-13 21:13 - INFO - 	 Recall for 0.4 precision: 0.858
2024-10-13 21:13 - INFO - 	 Best Val. Loss: 0.137
2024-10-13 21:13 - INFO - 	 Best ROC-AUC: 0.953
2024-10-13 21:13 - INFO - 	 Best PR-AUC: 0.613
2024-10-13 21:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-10-13 21:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.615
2024-10-13 21:13 - INFO - 	 Best Recall for 0.4 precision: 0.858
2024-10-13 21:13 - INFO - ---------------------------------------------
2024-10-13 21:14 - INFO - ---------------------------------------------
2024-10-13 21:14 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 21:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97153
2024-10-13 21:14 - INFO - 	 Train Loss: 0.114
2024-10-13 21:14 - INFO - 	 Val. Loss: 0.094
2024-10-13 21:14 - INFO - 	 ROC-AUC: 0.972
2024-10-13 21:14 - INFO - 	 PR-AUC: 0.737
2024-10-13 21:14 - INFO - 	 Recall for 0.4 precision: 0.947
2024-10-13 21:14 - INFO - 	 Best Val. Loss: 0.094
2024-10-13 21:14 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 21:14 - INFO - 	 Best PR-AUC: 0.737
2024-10-13 21:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-13 21:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.743
2024-10-13 21:14 - INFO - 	 Best Recall for 0.4 precision: 0.947
2024-10-13 21:14 - INFO - ---------------------------------------------
2024-10-13 21:14 - INFO - ---------------------------------------------
2024-10-13 21:14 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 21:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97771
2024-10-13 21:14 - INFO - 	 Train Loss: 0.101
2024-10-13 21:14 - INFO - 	 Val. Loss: 0.088
2024-10-13 21:14 - INFO - 	 ROC-AUC: 0.978
2024-10-13 21:14 - INFO - 	 PR-AUC: 0.790
2024-10-13 21:14 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 21:14 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 21:14 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 21:14 - INFO - 	 Best PR-AUC: 0.790
2024-10-13 21:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 21:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-10-13 21:14 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 21:14 - INFO - ---------------------------------------------
2024-10-13 21:15 - INFO - ---------------------------------------------
2024-10-13 21:15 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 21:15 - INFO - 	 Train Loss: 0.095
2024-10-13 21:15 - INFO - 	 Val. Loss: 0.090
2024-10-13 21:15 - INFO - 	 ROC-AUC: 0.974
2024-10-13 21:15 - INFO - 	 PR-AUC: 0.774
2024-10-13 21:15 - INFO - 	 Recall for 0.4 precision: 0.956
2024-10-13 21:15 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 21:15 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 21:15 - INFO - 	 Best PR-AUC: 0.790
2024-10-13 21:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 21:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-10-13 21:15 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 21:15 - INFO - ---------------------------------------------
2024-10-13 21:15 - INFO - ---------------------------------------------
2024-10-13 21:15 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 21:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97851
2024-10-13 21:15 - INFO - 	 Train Loss: 0.092
2024-10-13 21:15 - INFO - 	 Val. Loss: 0.083
2024-10-13 21:15 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:15 - INFO - 	 PR-AUC: 0.803
2024-10-13 21:15 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 21:15 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 21:15 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:15 - INFO - 	 Best PR-AUC: 0.803
2024-10-13 21:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 21:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-13 21:15 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 21:15 - INFO - ---------------------------------------------
2024-10-13 21:16 - INFO - ---------------------------------------------
2024-10-13 21:16 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 21:16 - INFO - 	 Train Loss: 0.088
2024-10-13 21:16 - INFO - 	 Val. Loss: 0.082
2024-10-13 21:16 - INFO - 	 ROC-AUC: 0.978
2024-10-13 21:16 - INFO - 	 PR-AUC: 0.799
2024-10-13 21:16 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:16 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 21:16 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:16 - INFO - 	 Best PR-AUC: 0.803
2024-10-13 21:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 21:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-13 21:16 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:16 - INFO - ---------------------------------------------
2024-10-13 21:17 - INFO - ---------------------------------------------
2024-10-13 21:17 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 21:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98113
2024-10-13 21:17 - INFO - 	 Train Loss: 0.087
2024-10-13 21:17 - INFO - 	 Val. Loss: 0.078
2024-10-13 21:17 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:17 - INFO - 	 PR-AUC: 0.824
2024-10-13 21:17 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:17 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 21:17 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:17 - INFO - 	 Best PR-AUC: 0.824
2024-10-13 21:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-13 21:17 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:17 - INFO - ---------------------------------------------
2024-10-13 21:17 - INFO - ---------------------------------------------
2024-10-13 21:17 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 21:17 - INFO - 	 Train Loss: 0.085
2024-10-13 21:17 - INFO - 	 Val. Loss: 0.075
2024-10-13 21:17 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:17 - INFO - 	 PR-AUC: 0.829
2024-10-13 21:17 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 21:17 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 21:17 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:17 - INFO - 	 Best PR-AUC: 0.829
2024-10-13 21:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-13 21:17 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 21:17 - INFO - ---------------------------------------------
2024-10-13 21:18 - INFO - ---------------------------------------------
2024-10-13 21:18 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 21:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98253
2024-10-13 21:18 - INFO - 	 Train Loss: 0.085
2024-10-13 21:18 - INFO - 	 Val. Loss: 0.074
2024-10-13 21:18 - INFO - 	 ROC-AUC: 0.983
2024-10-13 21:18 - INFO - 	 PR-AUC: 0.838
2024-10-13 21:18 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:18 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:18 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 21:18 - INFO - 	 Best PR-AUC: 0.838
2024-10-13 21:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 21:18 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 21:18 - INFO - ---------------------------------------------
2024-10-13 21:18 - INFO - ---------------------------------------------
2024-10-13 21:18 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 21:18 - INFO - 	 Train Loss: 0.083
2024-10-13 21:18 - INFO - 	 Val. Loss: 0.075
2024-10-13 21:18 - INFO - 	 ROC-AUC: 0.982
2024-10-13 21:18 - INFO - 	 PR-AUC: 0.830
2024-10-13 21:18 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 21:18 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:18 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 21:18 - INFO - 	 Best PR-AUC: 0.838
2024-10-13 21:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 21:18 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 21:18 - INFO - ---------------------------------------------
2024-10-13 21:20 - INFO - Fit the preprocessing pipeline
2024-10-13 21:20 - INFO - Training using device: cuda
2024-10-13 21:20 - INFO - Creating generators
2024-10-13 21:20 - INFO - The model has 651,257 trainable parameters
2024-10-13 21:20 - INFO - * Model:
2024-10-13 21:20 - INFO - * -----------
2024-10-13 21:20 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 21:20 - INFO - * -----------
2024-10-13 21:20 - INFO - Evaluating model based on: rocauc
2024-10-13 21:20 - INFO - Training..

2024-10-13 21:20 - INFO - ---------------------------------------------
2024-10-13 21:20 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 21:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95174
2024-10-13 21:20 - INFO - 	 Train Loss: 0.196
2024-10-13 21:20 - INFO - 	 Val. Loss: 0.132
2024-10-13 21:20 - INFO - 	 ROC-AUC: 0.952
2024-10-13 21:20 - INFO - 	 PR-AUC: 0.585
2024-10-13 21:20 - INFO - 	 Recall for 0.4 precision: 0.878
2024-10-13 21:20 - INFO - 	 Best Val. Loss: 0.132
2024-10-13 21:20 - INFO - 	 Best ROC-AUC: 0.952
2024-10-13 21:20 - INFO - 	 Best PR-AUC: 0.585
2024-10-13 21:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-10-13 21:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.617
2024-10-13 21:20 - INFO - 	 Best Recall for 0.4 precision: 0.878
2024-10-13 21:20 - INFO - ---------------------------------------------
2024-10-13 21:21 - INFO - ---------------------------------------------
2024-10-13 21:21 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 21:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96725
2024-10-13 21:21 - INFO - 	 Train Loss: 0.113
2024-10-13 21:21 - INFO - 	 Val. Loss: 0.117
2024-10-13 21:21 - INFO - 	 ROC-AUC: 0.967
2024-10-13 21:21 - INFO - 	 PR-AUC: 0.707
2024-10-13 21:21 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-13 21:21 - INFO - 	 Best Val. Loss: 0.117
2024-10-13 21:21 - INFO - 	 Best ROC-AUC: 0.967
2024-10-13 21:21 - INFO - 	 Best PR-AUC: 0.707
2024-10-13 21:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-13 21:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.708
2024-10-13 21:21 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-13 21:21 - INFO - ---------------------------------------------
2024-10-13 21:21 - INFO - ---------------------------------------------
2024-10-13 21:21 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 21:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97769
2024-10-13 21:21 - INFO - 	 Train Loss: 0.101
2024-10-13 21:21 - INFO - 	 Val. Loss: 0.085
2024-10-13 21:21 - INFO - 	 ROC-AUC: 0.978
2024-10-13 21:21 - INFO - 	 PR-AUC: 0.788
2024-10-13 21:21 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 21:21 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 21:21 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 21:21 - INFO - 	 Best PR-AUC: 0.788
2024-10-13 21:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 21:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.767
2024-10-13 21:21 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:21 - INFO - ---------------------------------------------
2024-10-13 21:22 - INFO - ---------------------------------------------
2024-10-13 21:22 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 21:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97839
2024-10-13 21:22 - INFO - 	 Train Loss: 0.096
2024-10-13 21:22 - INFO - 	 Val. Loss: 0.085
2024-10-13 21:22 - INFO - 	 ROC-AUC: 0.978
2024-10-13 21:22 - INFO - 	 PR-AUC: 0.800
2024-10-13 21:22 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 21:22 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 21:22 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 21:22 - INFO - 	 Best PR-AUC: 0.800
2024-10-13 21:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 21:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-10-13 21:22 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:22 - INFO - ---------------------------------------------
2024-10-13 21:22 - INFO - ---------------------------------------------
2024-10-13 21:22 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 21:22 - INFO - 	 Train Loss: 0.093
2024-10-13 21:22 - INFO - 	 Val. Loss: 0.086
2024-10-13 21:22 - INFO - 	 ROC-AUC: 0.977
2024-10-13 21:22 - INFO - 	 PR-AUC: 0.787
2024-10-13 21:22 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 21:22 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 21:22 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 21:22 - INFO - 	 Best PR-AUC: 0.800
2024-10-13 21:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 21:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-10-13 21:22 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:22 - INFO - ---------------------------------------------
2024-10-13 21:23 - INFO - ---------------------------------------------
2024-10-13 21:23 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 21:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98115
2024-10-13 21:23 - INFO - 	 Train Loss: 0.088
2024-10-13 21:23 - INFO - 	 Val. Loss: 0.077
2024-10-13 21:23 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:23 - INFO - 	 PR-AUC: 0.829
2024-10-13 21:23 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 21:23 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 21:23 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:23 - INFO - 	 Best PR-AUC: 0.829
2024-10-13 21:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 21:23 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:23 - INFO - ---------------------------------------------
2024-10-13 21:23 - INFO - ---------------------------------------------
2024-10-13 21:23 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 21:23 - INFO - 	 Train Loss: 0.087
2024-10-13 21:23 - INFO - 	 Val. Loss: 0.079
2024-10-13 21:23 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:23 - INFO - 	 PR-AUC: 0.816
2024-10-13 21:23 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 21:23 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 21:23 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:23 - INFO - 	 Best PR-AUC: 0.829
2024-10-13 21:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 21:23 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:23 - INFO - ---------------------------------------------
2024-10-13 21:24 - INFO - ---------------------------------------------
2024-10-13 21:24 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 21:24 - INFO - 	 Train Loss: 0.085
2024-10-13 21:24 - INFO - 	 Val. Loss: 0.077
2024-10-13 21:24 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:24 - INFO - 	 PR-AUC: 0.824
2024-10-13 21:24 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 21:24 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 21:24 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:24 - INFO - 	 Best PR-AUC: 0.829
2024-10-13 21:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 21:24 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 21:24 - INFO - ---------------------------------------------
2024-10-13 21:25 - INFO - ---------------------------------------------
2024-10-13 21:25 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 21:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98172
2024-10-13 21:25 - INFO - 	 Train Loss: 0.085
2024-10-13 21:25 - INFO - 	 Val. Loss: 0.075
2024-10-13 21:25 - INFO - 	 ROC-AUC: 0.982
2024-10-13 21:25 - INFO - 	 PR-AUC: 0.832
2024-10-13 21:25 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:25 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 21:25 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 21:25 - INFO - 	 Best PR-AUC: 0.832
2024-10-13 21:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 21:25 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 21:25 - INFO - ---------------------------------------------
2024-10-13 21:25 - INFO - ---------------------------------------------
2024-10-13 21:25 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 21:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98297
2024-10-13 21:25 - INFO - 	 Train Loss: 0.081
2024-10-13 21:25 - INFO - 	 Val. Loss: 0.071
2024-10-13 21:25 - INFO - 	 ROC-AUC: 0.983
2024-10-13 21:25 - INFO - 	 PR-AUC: 0.847
2024-10-13 21:25 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 21:25 - INFO - 	 Best Val. Loss: 0.071
2024-10-13 21:25 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 21:25 - INFO - 	 Best PR-AUC: 0.847
2024-10-13 21:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-13 21:25 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 21:25 - INFO - ---------------------------------------------
2024-10-13 21:27 - INFO - Fit the preprocessing pipeline
2024-10-13 21:27 - INFO - Training using device: cuda
2024-10-13 21:27 - INFO - Creating generators
2024-10-13 21:27 - INFO - The model has 651,257 trainable parameters
2024-10-13 21:27 - INFO - * Model:
2024-10-13 21:27 - INFO - * -----------
2024-10-13 21:27 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 21:27 - INFO - * -----------
2024-10-13 21:27 - INFO - Evaluating model based on: rocauc
2024-10-13 21:27 - INFO - Training..

2024-10-13 21:27 - INFO - ---------------------------------------------
2024-10-13 21:27 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 21:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94161
2024-10-13 21:27 - INFO - 	 Train Loss: 0.209
2024-10-13 21:27 - INFO - 	 Val. Loss: 0.133
2024-10-13 21:27 - INFO - 	 ROC-AUC: 0.942
2024-10-13 21:27 - INFO - 	 PR-AUC: 0.571
2024-10-13 21:27 - INFO - 	 Recall for 0.4 precision: 0.845
2024-10-13 21:27 - INFO - 	 Best Val. Loss: 0.133
2024-10-13 21:27 - INFO - 	 Best ROC-AUC: 0.942
2024-10-13 21:27 - INFO - 	 Best PR-AUC: 0.571
2024-10-13 21:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-10-13 21:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.580
2024-10-13 21:27 - INFO - 	 Best Recall for 0.4 precision: 0.845
2024-10-13 21:27 - INFO - ---------------------------------------------
2024-10-13 21:28 - INFO - ---------------------------------------------
2024-10-13 21:28 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 21:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97232
2024-10-13 21:28 - INFO - 	 Train Loss: 0.117
2024-10-13 21:28 - INFO - 	 Val. Loss: 0.106
2024-10-13 21:28 - INFO - 	 ROC-AUC: 0.972
2024-10-13 21:28 - INFO - 	 PR-AUC: 0.748
2024-10-13 21:28 - INFO - 	 Recall for 0.4 precision: 0.952
2024-10-13 21:28 - INFO - 	 Best Val. Loss: 0.106
2024-10-13 21:28 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 21:28 - INFO - 	 Best PR-AUC: 0.748
2024-10-13 21:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 21:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-13 21:28 - INFO - 	 Best Recall for 0.4 precision: 0.952
2024-10-13 21:28 - INFO - ---------------------------------------------
2024-10-13 21:28 - INFO - ---------------------------------------------
2024-10-13 21:28 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 21:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97517
2024-10-13 21:28 - INFO - 	 Train Loss: 0.103
2024-10-13 21:28 - INFO - 	 Val. Loss: 0.093
2024-10-13 21:28 - INFO - 	 ROC-AUC: 0.975
2024-10-13 21:28 - INFO - 	 PR-AUC: 0.778
2024-10-13 21:28 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 21:28 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 21:28 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 21:28 - INFO - 	 Best PR-AUC: 0.778
2024-10-13 21:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 21:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-13 21:28 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 21:28 - INFO - ---------------------------------------------
2024-10-13 21:29 - INFO - ---------------------------------------------
2024-10-13 21:29 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 21:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97633
2024-10-13 21:29 - INFO - 	 Train Loss: 0.097
2024-10-13 21:29 - INFO - 	 Val. Loss: 0.087
2024-10-13 21:29 - INFO - 	 ROC-AUC: 0.976
2024-10-13 21:29 - INFO - 	 PR-AUC: 0.780
2024-10-13 21:29 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 21:29 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 21:29 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 21:29 - INFO - 	 Best PR-AUC: 0.780
2024-10-13 21:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 21:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-13 21:29 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 21:29 - INFO - ---------------------------------------------
2024-10-13 21:29 - INFO - ---------------------------------------------
2024-10-13 21:29 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 21:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9791
2024-10-13 21:29 - INFO - 	 Train Loss: 0.090
2024-10-13 21:29 - INFO - 	 Val. Loss: 0.084
2024-10-13 21:29 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:29 - INFO - 	 PR-AUC: 0.814
2024-10-13 21:29 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 21:29 - INFO - 	 Best Val. Loss: 0.084
2024-10-13 21:29 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:29 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 21:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-13 21:29 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:29 - INFO - ---------------------------------------------
2024-10-13 21:30 - INFO - ---------------------------------------------
2024-10-13 21:30 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 21:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98045
2024-10-13 21:30 - INFO - 	 Train Loss: 0.089
2024-10-13 21:30 - INFO - 	 Val. Loss: 0.076
2024-10-13 21:30 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:30 - INFO - 	 PR-AUC: 0.827
2024-10-13 21:30 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 21:30 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 21:30 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 21:30 - INFO - 	 Best PR-AUC: 0.827
2024-10-13 21:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-13 21:30 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:30 - INFO - ---------------------------------------------
2024-10-13 21:30 - INFO - ---------------------------------------------
2024-10-13 21:30 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 21:30 - INFO - 	 Train Loss: 0.086
2024-10-13 21:30 - INFO - 	 Val. Loss: 0.076
2024-10-13 21:30 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:30 - INFO - 	 PR-AUC: 0.833
2024-10-13 21:30 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 21:30 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 21:30 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 21:30 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 21:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-13 21:30 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 21:30 - INFO - ---------------------------------------------
2024-10-13 21:31 - INFO - ---------------------------------------------
2024-10-13 21:31 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 21:31 - INFO - 	 Train Loss: 0.085
2024-10-13 21:31 - INFO - 	 Val. Loss: 0.079
2024-10-13 21:31 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:31 - INFO - 	 PR-AUC: 0.818
2024-10-13 21:31 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:31 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 21:31 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 21:31 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 21:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-13 21:31 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 21:31 - INFO - ---------------------------------------------
2024-10-13 21:32 - INFO - ---------------------------------------------
2024-10-13 21:32 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 21:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98091
2024-10-13 21:32 - INFO - 	 Train Loss: 0.083
2024-10-13 21:32 - INFO - 	 Val. Loss: 0.077
2024-10-13 21:32 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:32 - INFO - 	 PR-AUC: 0.832
2024-10-13 21:32 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 21:32 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 21:32 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:32 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 21:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-13 21:32 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 21:32 - INFO - ---------------------------------------------
2024-10-13 21:32 - INFO - ---------------------------------------------
2024-10-13 21:32 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 21:32 - INFO - 	 Train Loss: 0.082
2024-10-13 21:32 - INFO - 	 Val. Loss: 0.076
2024-10-13 21:32 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:32 - INFO - 	 PR-AUC: 0.822
2024-10-13 21:32 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 21:32 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 21:32 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:32 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 21:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-13 21:32 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 21:32 - INFO - ---------------------------------------------
2024-10-13 21:34 - INFO - Fit the preprocessing pipeline
2024-10-13 21:34 - INFO - Training using device: cuda
2024-10-13 21:34 - INFO - Creating generators
2024-10-13 21:34 - INFO - The model has 651,257 trainable parameters
2024-10-13 21:34 - INFO - * Model:
2024-10-13 21:34 - INFO - * -----------
2024-10-13 21:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 21:34 - INFO - * -----------
2024-10-13 21:34 - INFO - Evaluating model based on: rocauc
2024-10-13 21:34 - INFO - Training..

2024-10-13 21:34 - INFO - ---------------------------------------------
2024-10-13 21:34 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 21:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95788
2024-10-13 21:34 - INFO - 	 Train Loss: 0.201
2024-10-13 21:34 - INFO - 	 Val. Loss: 0.133
2024-10-13 21:34 - INFO - 	 ROC-AUC: 0.958
2024-10-13 21:34 - INFO - 	 PR-AUC: 0.607
2024-10-13 21:34 - INFO - 	 Recall for 0.4 precision: 0.903
2024-10-13 21:34 - INFO - 	 Best Val. Loss: 0.133
2024-10-13 21:34 - INFO - 	 Best ROC-AUC: 0.958
2024-10-13 21:34 - INFO - 	 Best PR-AUC: 0.607
2024-10-13 21:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-10-13 21:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.620
2024-10-13 21:34 - INFO - 	 Best Recall for 0.4 precision: 0.903
2024-10-13 21:34 - INFO - ---------------------------------------------
2024-10-13 21:35 - INFO - ---------------------------------------------
2024-10-13 21:35 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 21:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97123
2024-10-13 21:35 - INFO - 	 Train Loss: 0.115
2024-10-13 21:35 - INFO - 	 Val. Loss: 0.100
2024-10-13 21:35 - INFO - 	 ROC-AUC: 0.971
2024-10-13 21:35 - INFO - 	 PR-AUC: 0.757
2024-10-13 21:35 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-13 21:35 - INFO - 	 Best Val. Loss: 0.100
2024-10-13 21:35 - INFO - 	 Best ROC-AUC: 0.971
2024-10-13 21:35 - INFO - 	 Best PR-AUC: 0.757
2024-10-13 21:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 21:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-10-13 21:35 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-13 21:35 - INFO - ---------------------------------------------
2024-10-13 21:35 - INFO - ---------------------------------------------
2024-10-13 21:35 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 21:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97513
2024-10-13 21:35 - INFO - 	 Train Loss: 0.102
2024-10-13 21:35 - INFO - 	 Val. Loss: 0.088
2024-10-13 21:35 - INFO - 	 ROC-AUC: 0.975
2024-10-13 21:35 - INFO - 	 PR-AUC: 0.778
2024-10-13 21:35 - INFO - 	 Recall for 0.4 precision: 0.958
2024-10-13 21:35 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 21:35 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 21:35 - INFO - 	 Best PR-AUC: 0.778
2024-10-13 21:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 21:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-10-13 21:35 - INFO - 	 Best Recall for 0.4 precision: 0.958
2024-10-13 21:35 - INFO - ---------------------------------------------
2024-10-13 21:36 - INFO - ---------------------------------------------
2024-10-13 21:36 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 21:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97639
2024-10-13 21:36 - INFO - 	 Train Loss: 0.094
2024-10-13 21:36 - INFO - 	 Val. Loss: 0.087
2024-10-13 21:36 - INFO - 	 ROC-AUC: 0.976
2024-10-13 21:36 - INFO - 	 PR-AUC: 0.791
2024-10-13 21:36 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 21:36 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 21:36 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 21:36 - INFO - 	 Best PR-AUC: 0.791
2024-10-13 21:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-13 21:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-13 21:36 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 21:36 - INFO - ---------------------------------------------
2024-10-13 21:36 - INFO - ---------------------------------------------
2024-10-13 21:36 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 21:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97801
2024-10-13 21:36 - INFO - 	 Train Loss: 0.092
2024-10-13 21:36 - INFO - 	 Val. Loss: 0.082
2024-10-13 21:36 - INFO - 	 ROC-AUC: 0.978
2024-10-13 21:36 - INFO - 	 PR-AUC: 0.811
2024-10-13 21:36 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 21:36 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 21:36 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 21:36 - INFO - 	 Best PR-AUC: 0.811
2024-10-13 21:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 21:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-13 21:36 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:36 - INFO - ---------------------------------------------
2024-10-13 21:37 - INFO - ---------------------------------------------
2024-10-13 21:37 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 21:37 - INFO - 	 Train Loss: 0.088
2024-10-13 21:37 - INFO - 	 Val. Loss: 0.086
2024-10-13 21:37 - INFO - 	 ROC-AUC: 0.977
2024-10-13 21:37 - INFO - 	 PR-AUC: 0.807
2024-10-13 21:37 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 21:37 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 21:37 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 21:37 - INFO - 	 Best PR-AUC: 0.811
2024-10-13 21:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 21:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-13 21:37 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:37 - INFO - ---------------------------------------------
2024-10-13 21:37 - INFO - ---------------------------------------------
2024-10-13 21:37 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 21:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97968
2024-10-13 21:37 - INFO - 	 Train Loss: 0.088
2024-10-13 21:37 - INFO - 	 Val. Loss: 0.080
2024-10-13 21:37 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:37 - INFO - 	 PR-AUC: 0.827
2024-10-13 21:37 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 21:37 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 21:37 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 21:37 - INFO - 	 Best PR-AUC: 0.827
2024-10-13 21:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 21:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-13 21:37 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 21:37 - INFO - ---------------------------------------------
2024-10-13 21:38 - INFO - ---------------------------------------------
2024-10-13 21:38 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 21:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98049
2024-10-13 21:38 - INFO - 	 Train Loss: 0.085
2024-10-13 21:38 - INFO - 	 Val. Loss: 0.076
2024-10-13 21:38 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:38 - INFO - 	 PR-AUC: 0.825
2024-10-13 21:38 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 21:38 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 21:38 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 21:38 - INFO - 	 Best PR-AUC: 0.827
2024-10-13 21:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-13 21:38 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 21:38 - INFO - ---------------------------------------------
2024-10-13 21:38 - INFO - ---------------------------------------------
2024-10-13 21:38 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 21:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98277
2024-10-13 21:38 - INFO - 	 Train Loss: 0.085
2024-10-13 21:38 - INFO - 	 Val. Loss: 0.074
2024-10-13 21:38 - INFO - 	 ROC-AUC: 0.983
2024-10-13 21:38 - INFO - 	 PR-AUC: 0.835
2024-10-13 21:38 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 21:38 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:38 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 21:38 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 21:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 21:38 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 21:38 - INFO - ---------------------------------------------
2024-10-13 21:39 - INFO - ---------------------------------------------
2024-10-13 21:39 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 21:39 - INFO - 	 Train Loss: 0.084
2024-10-13 21:39 - INFO - 	 Val. Loss: 0.077
2024-10-13 21:39 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:39 - INFO - 	 PR-AUC: 0.835
2024-10-13 21:39 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 21:39 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:39 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 21:39 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 21:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 21:39 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 21:39 - INFO - ---------------------------------------------
2024-10-13 21:40 - INFO - Fit the preprocessing pipeline
2024-10-13 21:40 - INFO - Training using device: cuda
2024-10-13 21:40 - INFO - Creating generators
2024-10-13 21:40 - INFO - The model has 651,257 trainable parameters
2024-10-13 21:40 - INFO - * Model:
2024-10-13 21:40 - INFO - * -----------
2024-10-13 21:40 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 21:40 - INFO - * -----------
2024-10-13 21:40 - INFO - Evaluating model based on: rocauc
2024-10-13 21:40 - INFO - Training..

2024-10-13 21:41 - INFO - ---------------------------------------------
2024-10-13 21:41 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 21:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94745
2024-10-13 21:41 - INFO - 	 Train Loss: 0.206
2024-10-13 21:41 - INFO - 	 Val. Loss: 0.129
2024-10-13 21:41 - INFO - 	 ROC-AUC: 0.947
2024-10-13 21:41 - INFO - 	 PR-AUC: 0.600
2024-10-13 21:41 - INFO - 	 Recall for 0.4 precision: 0.858
2024-10-13 21:41 - INFO - 	 Best Val. Loss: 0.129
2024-10-13 21:41 - INFO - 	 Best ROC-AUC: 0.947
2024-10-13 21:41 - INFO - 	 Best PR-AUC: 0.600
2024-10-13 21:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-10-13 21:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.614
2024-10-13 21:41 - INFO - 	 Best Recall for 0.4 precision: 0.858
2024-10-13 21:41 - INFO - ---------------------------------------------
2024-10-13 21:41 - INFO - ---------------------------------------------
2024-10-13 21:41 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 21:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97322
2024-10-13 21:41 - INFO - 	 Train Loss: 0.114
2024-10-13 21:41 - INFO - 	 Val. Loss: 0.093
2024-10-13 21:41 - INFO - 	 ROC-AUC: 0.973
2024-10-13 21:41 - INFO - 	 PR-AUC: 0.769
2024-10-13 21:41 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-13 21:41 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 21:41 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 21:41 - INFO - 	 Best PR-AUC: 0.769
2024-10-13 21:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 21:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.752
2024-10-13 21:41 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-13 21:41 - INFO - ---------------------------------------------
2024-10-13 21:42 - INFO - ---------------------------------------------
2024-10-13 21:42 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 21:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97614
2024-10-13 21:42 - INFO - 	 Train Loss: 0.102
2024-10-13 21:42 - INFO - 	 Val. Loss: 0.091
2024-10-13 21:42 - INFO - 	 ROC-AUC: 0.976
2024-10-13 21:42 - INFO - 	 PR-AUC: 0.791
2024-10-13 21:42 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 21:42 - INFO - 	 Best Val. Loss: 0.091
2024-10-13 21:42 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 21:42 - INFO - 	 Best PR-AUC: 0.791
2024-10-13 21:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 21:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-13 21:42 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 21:42 - INFO - ---------------------------------------------
2024-10-13 21:43 - INFO - ---------------------------------------------
2024-10-13 21:43 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 21:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97698
2024-10-13 21:43 - INFO - 	 Train Loss: 0.096
2024-10-13 21:43 - INFO - 	 Val. Loss: 0.083
2024-10-13 21:43 - INFO - 	 ROC-AUC: 0.977
2024-10-13 21:43 - INFO - 	 PR-AUC: 0.814
2024-10-13 21:43 - INFO - 	 Recall for 0.4 precision: 0.960
2024-10-13 21:43 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 21:43 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 21:43 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 21:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 21:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.780
2024-10-13 21:43 - INFO - 	 Best Recall for 0.4 precision: 0.960
2024-10-13 21:43 - INFO - ---------------------------------------------
2024-10-13 21:43 - INFO - ---------------------------------------------
2024-10-13 21:43 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 21:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97856
2024-10-13 21:43 - INFO - 	 Train Loss: 0.092
2024-10-13 21:43 - INFO - 	 Val. Loss: 0.084
2024-10-13 21:43 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:43 - INFO - 	 PR-AUC: 0.824
2024-10-13 21:43 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 21:43 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 21:43 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:43 - INFO - 	 Best PR-AUC: 0.824
2024-10-13 21:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 21:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-13 21:43 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 21:43 - INFO - ---------------------------------------------
2024-10-13 21:44 - INFO - ---------------------------------------------
2024-10-13 21:44 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 21:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97976
2024-10-13 21:44 - INFO - 	 Train Loss: 0.090
2024-10-13 21:44 - INFO - 	 Val. Loss: 0.079
2024-10-13 21:44 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:44 - INFO - 	 PR-AUC: 0.816
2024-10-13 21:44 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:44 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 21:44 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 21:44 - INFO - 	 Best PR-AUC: 0.824
2024-10-13 21:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 21:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-13 21:44 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:44 - INFO - ---------------------------------------------
2024-10-13 21:44 - INFO - ---------------------------------------------
2024-10-13 21:44 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 21:44 - INFO - 	 Train Loss: 0.087
2024-10-13 21:44 - INFO - 	 Val. Loss: 0.079
2024-10-13 21:44 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:44 - INFO - 	 PR-AUC: 0.825
2024-10-13 21:44 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 21:44 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 21:44 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 21:44 - INFO - 	 Best PR-AUC: 0.825
2024-10-13 21:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 21:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-13 21:44 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:44 - INFO - ---------------------------------------------
2024-10-13 21:45 - INFO - ---------------------------------------------
2024-10-13 21:45 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 21:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98097
2024-10-13 21:45 - INFO - 	 Train Loss: 0.086
2024-10-13 21:45 - INFO - 	 Val. Loss: 0.076
2024-10-13 21:45 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:45 - INFO - 	 PR-AUC: 0.834
2024-10-13 21:45 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:45 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 21:45 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:45 - INFO - 	 Best PR-AUC: 0.834
2024-10-13 21:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-13 21:45 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:45 - INFO - ---------------------------------------------
2024-10-13 21:45 - INFO - ---------------------------------------------
2024-10-13 21:45 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 21:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98171
2024-10-13 21:45 - INFO - 	 Train Loss: 0.085
2024-10-13 21:45 - INFO - 	 Val. Loss: 0.075
2024-10-13 21:45 - INFO - 	 ROC-AUC: 0.982
2024-10-13 21:45 - INFO - 	 PR-AUC: 0.837
2024-10-13 21:45 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:45 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 21:45 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 21:45 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 21:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 21:45 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:45 - INFO - ---------------------------------------------
2024-10-13 21:46 - INFO - ---------------------------------------------
2024-10-13 21:46 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 21:46 - INFO - 	 Train Loss: 0.083
2024-10-13 21:46 - INFO - 	 Val. Loss: 0.075
2024-10-13 21:46 - INFO - 	 ROC-AUC: 0.982
2024-10-13 21:46 - INFO - 	 PR-AUC: 0.831
2024-10-13 21:46 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:46 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 21:46 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 21:46 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 21:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 21:46 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:46 - INFO - ---------------------------------------------
2024-10-13 21:47 - INFO - Fit the preprocessing pipeline
2024-10-13 21:47 - INFO - Training using device: cuda
2024-10-13 21:47 - INFO - Creating generators
2024-10-13 21:47 - INFO - The model has 651,257 trainable parameters
2024-10-13 21:47 - INFO - * Model:
2024-10-13 21:47 - INFO - * -----------
2024-10-13 21:47 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 21:47 - INFO - * -----------
2024-10-13 21:47 - INFO - Evaluating model based on: rocauc
2024-10-13 21:47 - INFO - Training..

2024-10-13 21:48 - INFO - ---------------------------------------------
2024-10-13 21:48 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 21:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95723
2024-10-13 21:48 - INFO - 	 Train Loss: 0.199
2024-10-13 21:48 - INFO - 	 Val. Loss: 0.123
2024-10-13 21:48 - INFO - 	 ROC-AUC: 0.957
2024-10-13 21:48 - INFO - 	 PR-AUC: 0.631
2024-10-13 21:48 - INFO - 	 Recall for 0.4 precision: 0.893
2024-10-13 21:48 - INFO - 	 Best Val. Loss: 0.123
2024-10-13 21:48 - INFO - 	 Best ROC-AUC: 0.957
2024-10-13 21:48 - INFO - 	 Best PR-AUC: 0.631
2024-10-13 21:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-10-13 21:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.649
2024-10-13 21:48 - INFO - 	 Best Recall for 0.4 precision: 0.893
2024-10-13 21:48 - INFO - ---------------------------------------------
2024-10-13 21:48 - INFO - ---------------------------------------------
2024-10-13 21:48 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 21:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97261
2024-10-13 21:48 - INFO - 	 Train Loss: 0.112
2024-10-13 21:48 - INFO - 	 Val. Loss: 0.097
2024-10-13 21:48 - INFO - 	 ROC-AUC: 0.973
2024-10-13 21:48 - INFO - 	 PR-AUC: 0.767
2024-10-13 21:48 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 21:48 - INFO - 	 Best Val. Loss: 0.097
2024-10-13 21:48 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 21:48 - INFO - 	 Best PR-AUC: 0.767
2024-10-13 21:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 21:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-10-13 21:48 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 21:48 - INFO - ---------------------------------------------
2024-10-13 21:49 - INFO - ---------------------------------------------
2024-10-13 21:49 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 21:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97584
2024-10-13 21:49 - INFO - 	 Train Loss: 0.100
2024-10-13 21:49 - INFO - 	 Val. Loss: 0.085
2024-10-13 21:49 - INFO - 	 ROC-AUC: 0.976
2024-10-13 21:49 - INFO - 	 PR-AUC: 0.796
2024-10-13 21:49 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 21:49 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 21:49 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 21:49 - INFO - 	 Best PR-AUC: 0.796
2024-10-13 21:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 21:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-13 21:49 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 21:49 - INFO - ---------------------------------------------
2024-10-13 21:50 - INFO - ---------------------------------------------
2024-10-13 21:50 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 21:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97864
2024-10-13 21:50 - INFO - 	 Train Loss: 0.093
2024-10-13 21:50 - INFO - 	 Val. Loss: 0.081
2024-10-13 21:50 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:50 - INFO - 	 PR-AUC: 0.810
2024-10-13 21:50 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 21:50 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 21:50 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:50 - INFO - 	 Best PR-AUC: 0.810
2024-10-13 21:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 21:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-13 21:50 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 21:50 - INFO - ---------------------------------------------
2024-10-13 21:50 - INFO - ---------------------------------------------
2024-10-13 21:50 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 21:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98006
2024-10-13 21:50 - INFO - 	 Train Loss: 0.091
2024-10-13 21:50 - INFO - 	 Val. Loss: 0.079
2024-10-13 21:50 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:50 - INFO - 	 PR-AUC: 0.820
2024-10-13 21:50 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:50 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 21:50 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 21:50 - INFO - 	 Best PR-AUC: 0.820
2024-10-13 21:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 21:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-13 21:50 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 21:50 - INFO - ---------------------------------------------
2024-10-13 21:51 - INFO - ---------------------------------------------
2024-10-13 21:51 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 21:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98138
2024-10-13 21:51 - INFO - 	 Train Loss: 0.087
2024-10-13 21:51 - INFO - 	 Val. Loss: 0.074
2024-10-13 21:51 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:51 - INFO - 	 PR-AUC: 0.847
2024-10-13 21:51 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 21:51 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:51 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:51 - INFO - 	 Best PR-AUC: 0.847
2024-10-13 21:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-13 21:51 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 21:51 - INFO - ---------------------------------------------
2024-10-13 21:51 - INFO - ---------------------------------------------
2024-10-13 21:51 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 21:51 - INFO - 	 Train Loss: 0.086
2024-10-13 21:51 - INFO - 	 Val. Loss: 0.081
2024-10-13 21:51 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:51 - INFO - 	 PR-AUC: 0.828
2024-10-13 21:51 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 21:51 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:51 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:51 - INFO - 	 Best PR-AUC: 0.847
2024-10-13 21:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 21:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-13 21:51 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 21:51 - INFO - ---------------------------------------------
2024-10-13 21:52 - INFO - ---------------------------------------------
2024-10-13 21:52 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 21:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98221
2024-10-13 21:52 - INFO - 	 Train Loss: 0.084
2024-10-13 21:52 - INFO - 	 Val. Loss: 0.073
2024-10-13 21:52 - INFO - 	 ROC-AUC: 0.982
2024-10-13 21:52 - INFO - 	 PR-AUC: 0.851
2024-10-13 21:52 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 21:52 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 21:52 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 21:52 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 21:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 21:52 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 21:52 - INFO - ---------------------------------------------
2024-10-13 21:52 - INFO - ---------------------------------------------
2024-10-13 21:52 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 21:52 - INFO - 	 Train Loss: 0.083
2024-10-13 21:52 - INFO - 	 Val. Loss: 0.078
2024-10-13 21:52 - INFO - 	 ROC-AUC: 0.980
2024-10-13 21:52 - INFO - 	 PR-AUC: 0.834
2024-10-13 21:52 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 21:52 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 21:52 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 21:52 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 21:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 21:52 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 21:52 - INFO - ---------------------------------------------
2024-10-13 21:53 - INFO - ---------------------------------------------
2024-10-13 21:53 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 21:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98295
2024-10-13 21:53 - INFO - 	 Train Loss: 0.082
2024-10-13 21:53 - INFO - 	 Val. Loss: 0.075
2024-10-13 21:53 - INFO - 	 ROC-AUC: 0.983
2024-10-13 21:53 - INFO - 	 PR-AUC: 0.840
2024-10-13 21:53 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 21:53 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 21:53 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 21:53 - INFO - 	 Best PR-AUC: 0.851
2024-10-13 21:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 21:53 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 21:53 - INFO - ---------------------------------------------
2024-10-13 21:54 - INFO - Fit the preprocessing pipeline
2024-10-13 21:54 - INFO - Training using device: cuda
2024-10-13 21:54 - INFO - Creating generators
2024-10-13 21:54 - INFO - The model has 651,257 trainable parameters
2024-10-13 21:54 - INFO - * Model:
2024-10-13 21:54 - INFO - * -----------
2024-10-13 21:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 21:54 - INFO - * -----------
2024-10-13 21:54 - INFO - Evaluating model based on: rocauc
2024-10-13 21:54 - INFO - Training..

2024-10-13 21:55 - INFO - ---------------------------------------------
2024-10-13 21:55 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 21:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94795
2024-10-13 21:55 - INFO - 	 Train Loss: 0.209
2024-10-13 21:55 - INFO - 	 Val. Loss: 0.127
2024-10-13 21:55 - INFO - 	 ROC-AUC: 0.948
2024-10-13 21:55 - INFO - 	 PR-AUC: 0.618
2024-10-13 21:55 - INFO - 	 Recall for 0.4 precision: 0.846
2024-10-13 21:55 - INFO - 	 Best Val. Loss: 0.127
2024-10-13 21:55 - INFO - 	 Best ROC-AUC: 0.948
2024-10-13 21:55 - INFO - 	 Best PR-AUC: 0.618
2024-10-13 21:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-10-13 21:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.605
2024-10-13 21:55 - INFO - 	 Best Recall for 0.4 precision: 0.846
2024-10-13 21:55 - INFO - ---------------------------------------------
2024-10-13 21:55 - INFO - ---------------------------------------------
2024-10-13 21:55 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 21:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96867
2024-10-13 21:55 - INFO - 	 Train Loss: 0.114
2024-10-13 21:55 - INFO - 	 Val. Loss: 0.098
2024-10-13 21:55 - INFO - 	 ROC-AUC: 0.969
2024-10-13 21:55 - INFO - 	 PR-AUC: 0.744
2024-10-13 21:55 - INFO - 	 Recall for 0.4 precision: 0.945
2024-10-13 21:55 - INFO - 	 Best Val. Loss: 0.098
2024-10-13 21:55 - INFO - 	 Best ROC-AUC: 0.969
2024-10-13 21:55 - INFO - 	 Best PR-AUC: 0.744
2024-10-13 21:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-13 21:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.734
2024-10-13 21:55 - INFO - 	 Best Recall for 0.4 precision: 0.945
2024-10-13 21:55 - INFO - ---------------------------------------------
2024-10-13 21:56 - INFO - ---------------------------------------------
2024-10-13 21:56 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 21:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97683
2024-10-13 21:56 - INFO - 	 Train Loss: 0.101
2024-10-13 21:56 - INFO - 	 Val. Loss: 0.085
2024-10-13 21:56 - INFO - 	 ROC-AUC: 0.977
2024-10-13 21:56 - INFO - 	 PR-AUC: 0.794
2024-10-13 21:56 - INFO - 	 Recall for 0.4 precision: 0.962
2024-10-13 21:56 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 21:56 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 21:56 - INFO - 	 Best PR-AUC: 0.794
2024-10-13 21:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 21:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-13 21:56 - INFO - 	 Best Recall for 0.4 precision: 0.962
2024-10-13 21:56 - INFO - ---------------------------------------------
2024-10-13 21:57 - INFO - ---------------------------------------------
2024-10-13 21:57 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 21:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97882
2024-10-13 21:57 - INFO - 	 Train Loss: 0.096
2024-10-13 21:57 - INFO - 	 Val. Loss: 0.086
2024-10-13 21:57 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:57 - INFO - 	 PR-AUC: 0.804
2024-10-13 21:57 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 21:57 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 21:57 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:57 - INFO - 	 Best PR-AUC: 0.804
2024-10-13 21:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 21:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-13 21:57 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 21:57 - INFO - ---------------------------------------------
2024-10-13 21:57 - INFO - ---------------------------------------------
2024-10-13 21:57 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 21:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97888
2024-10-13 21:57 - INFO - 	 Train Loss: 0.091
2024-10-13 21:57 - INFO - 	 Val. Loss: 0.082
2024-10-13 21:57 - INFO - 	 ROC-AUC: 0.979
2024-10-13 21:57 - INFO - 	 PR-AUC: 0.809
2024-10-13 21:57 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 21:57 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 21:57 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:57 - INFO - 	 Best PR-AUC: 0.809
2024-10-13 21:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 21:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-13 21:57 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 21:57 - INFO - ---------------------------------------------
2024-10-13 21:58 - INFO - ---------------------------------------------
2024-10-13 21:58 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 21:58 - INFO - 	 Train Loss: 0.089
2024-10-13 21:58 - INFO - 	 Val. Loss: 0.082
2024-10-13 21:58 - INFO - 	 ROC-AUC: 0.977
2024-10-13 21:58 - INFO - 	 PR-AUC: 0.795
2024-10-13 21:58 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 21:58 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 21:58 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 21:58 - INFO - 	 Best PR-AUC: 0.809
2024-10-13 21:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 21:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-13 21:58 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 21:58 - INFO - ---------------------------------------------
2024-10-13 21:58 - INFO - ---------------------------------------------
2024-10-13 21:58 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 21:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9808
2024-10-13 21:58 - INFO - 	 Train Loss: 0.087
2024-10-13 21:58 - INFO - 	 Val. Loss: 0.078
2024-10-13 21:58 - INFO - 	 ROC-AUC: 0.981
2024-10-13 21:58 - INFO - 	 PR-AUC: 0.819
2024-10-13 21:58 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:58 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 21:58 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 21:58 - INFO - 	 Best PR-AUC: 0.819
2024-10-13 21:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 21:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-13 21:58 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 21:58 - INFO - ---------------------------------------------
2024-10-13 21:59 - INFO - ---------------------------------------------
2024-10-13 21:59 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 21:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98161
2024-10-13 21:59 - INFO - 	 Train Loss: 0.086
2024-10-13 21:59 - INFO - 	 Val. Loss: 0.074
2024-10-13 21:59 - INFO - 	 ROC-AUC: 0.982
2024-10-13 21:59 - INFO - 	 PR-AUC: 0.841
2024-10-13 21:59 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 21:59 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:59 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 21:59 - INFO - 	 Best PR-AUC: 0.841
2024-10-13 21:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-13 21:59 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 21:59 - INFO - ---------------------------------------------
2024-10-13 21:59 - INFO - ---------------------------------------------
2024-10-13 21:59 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 21:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98205
2024-10-13 21:59 - INFO - 	 Train Loss: 0.084
2024-10-13 21:59 - INFO - 	 Val. Loss: 0.074
2024-10-13 21:59 - INFO - 	 ROC-AUC: 0.982
2024-10-13 21:59 - INFO - 	 PR-AUC: 0.839
2024-10-13 21:59 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 21:59 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 21:59 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 21:59 - INFO - 	 Best PR-AUC: 0.841
2024-10-13 21:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 21:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-13 21:59 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 21:59 - INFO - ---------------------------------------------
2024-10-13 22:00 - INFO - ---------------------------------------------
2024-10-13 22:00 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 22:00 - INFO - 	 Train Loss: 0.081
2024-10-13 22:00 - INFO - 	 Val. Loss: 0.077
2024-10-13 22:00 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:00 - INFO - 	 PR-AUC: 0.846
2024-10-13 22:00 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 22:00 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 22:00 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:00 - INFO - 	 Best PR-AUC: 0.846
2024-10-13 22:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-13 22:00 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:00 - INFO - ---------------------------------------------
2024-10-13 22:01 - INFO - Fit the preprocessing pipeline
2024-10-13 22:01 - INFO - Training using device: cuda
2024-10-13 22:01 - INFO - Creating generators
2024-10-13 22:01 - INFO - The model has 651,257 trainable parameters
2024-10-13 22:01 - INFO - * Model:
2024-10-13 22:01 - INFO - * -----------
2024-10-13 22:01 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 22:01 - INFO - * -----------
2024-10-13 22:01 - INFO - Evaluating model based on: rocauc
2024-10-13 22:01 - INFO - Training..

2024-10-13 22:02 - INFO - ---------------------------------------------
2024-10-13 22:02 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 22:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95806
2024-10-13 22:02 - INFO - 	 Train Loss: 0.203
2024-10-13 22:02 - INFO - 	 Val. Loss: 0.115
2024-10-13 22:02 - INFO - 	 ROC-AUC: 0.958
2024-10-13 22:02 - INFO - 	 PR-AUC: 0.631
2024-10-13 22:02 - INFO - 	 Recall for 0.4 precision: 0.893
2024-10-13 22:02 - INFO - 	 Best Val. Loss: 0.115
2024-10-13 22:02 - INFO - 	 Best ROC-AUC: 0.958
2024-10-13 22:02 - INFO - 	 Best PR-AUC: 0.631
2024-10-13 22:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-13 22:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.652
2024-10-13 22:02 - INFO - 	 Best Recall for 0.4 precision: 0.893
2024-10-13 22:02 - INFO - ---------------------------------------------
2024-10-13 22:02 - INFO - ---------------------------------------------
2024-10-13 22:02 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 22:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97236
2024-10-13 22:02 - INFO - 	 Train Loss: 0.112
2024-10-13 22:02 - INFO - 	 Val. Loss: 0.095
2024-10-13 22:02 - INFO - 	 ROC-AUC: 0.972
2024-10-13 22:02 - INFO - 	 PR-AUC: 0.751
2024-10-13 22:02 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-13 22:02 - INFO - 	 Best Val. Loss: 0.095
2024-10-13 22:02 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 22:02 - INFO - 	 Best PR-AUC: 0.751
2024-10-13 22:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-13 22:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.748
2024-10-13 22:02 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-13 22:02 - INFO - ---------------------------------------------
2024-10-13 22:03 - INFO - ---------------------------------------------
2024-10-13 22:03 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 22:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97709
2024-10-13 22:03 - INFO - 	 Train Loss: 0.100
2024-10-13 22:03 - INFO - 	 Val. Loss: 0.092
2024-10-13 22:03 - INFO - 	 ROC-AUC: 0.977
2024-10-13 22:03 - INFO - 	 PR-AUC: 0.770
2024-10-13 22:03 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 22:03 - INFO - 	 Best Val. Loss: 0.092
2024-10-13 22:03 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 22:03 - INFO - 	 Best PR-AUC: 0.770
2024-10-13 22:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 22:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-13 22:03 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 22:03 - INFO - ---------------------------------------------
2024-10-13 22:03 - INFO - ---------------------------------------------
2024-10-13 22:03 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 22:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97951
2024-10-13 22:03 - INFO - 	 Train Loss: 0.093
2024-10-13 22:03 - INFO - 	 Val. Loss: 0.081
2024-10-13 22:03 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:03 - INFO - 	 PR-AUC: 0.803
2024-10-13 22:03 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 22:03 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 22:03 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 22:03 - INFO - 	 Best PR-AUC: 0.803
2024-10-13 22:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 22:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-13 22:03 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:03 - INFO - ---------------------------------------------
2024-10-13 22:04 - INFO - ---------------------------------------------
2024-10-13 22:04 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 22:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97992
2024-10-13 22:04 - INFO - 	 Train Loss: 0.091
2024-10-13 22:04 - INFO - 	 Val. Loss: 0.083
2024-10-13 22:04 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:04 - INFO - 	 PR-AUC: 0.817
2024-10-13 22:04 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 22:04 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 22:04 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 22:04 - INFO - 	 Best PR-AUC: 0.817
2024-10-13 22:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 22:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-13 22:04 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:04 - INFO - ---------------------------------------------
2024-10-13 22:05 - INFO - ---------------------------------------------
2024-10-13 22:05 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 22:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98007
2024-10-13 22:05 - INFO - 	 Train Loss: 0.088
2024-10-13 22:05 - INFO - 	 Val. Loss: 0.078
2024-10-13 22:05 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:05 - INFO - 	 PR-AUC: 0.814
2024-10-13 22:05 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 22:05 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 22:05 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 22:05 - INFO - 	 Best PR-AUC: 0.817
2024-10-13 22:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-13 22:05 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:05 - INFO - ---------------------------------------------
2024-10-13 22:05 - INFO - ---------------------------------------------
2024-10-13 22:05 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 22:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98012
2024-10-13 22:05 - INFO - 	 Train Loss: 0.087
2024-10-13 22:05 - INFO - 	 Val. Loss: 0.082
2024-10-13 22:05 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:05 - INFO - 	 PR-AUC: 0.827
2024-10-13 22:05 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 22:05 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 22:05 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 22:05 - INFO - 	 Best PR-AUC: 0.827
2024-10-13 22:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 22:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-13 22:05 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:05 - INFO - ---------------------------------------------
2024-10-13 22:06 - INFO - ---------------------------------------------
2024-10-13 22:06 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 22:06 - INFO - 	 Train Loss: 0.086
2024-10-13 22:06 - INFO - 	 Val. Loss: 0.079
2024-10-13 22:06 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:06 - INFO - 	 PR-AUC: 0.817
2024-10-13 22:06 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:06 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 22:06 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 22:06 - INFO - 	 Best PR-AUC: 0.827
2024-10-13 22:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 22:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-10-13 22:06 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:06 - INFO - ---------------------------------------------
2024-10-13 22:06 - INFO - ---------------------------------------------
2024-10-13 22:06 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 22:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98104
2024-10-13 22:06 - INFO - 	 Train Loss: 0.084
2024-10-13 22:06 - INFO - 	 Val. Loss: 0.085
2024-10-13 22:06 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:06 - INFO - 	 PR-AUC: 0.831
2024-10-13 22:06 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:06 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 22:06 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:06 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 22:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-13 22:06 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:06 - INFO - ---------------------------------------------
2024-10-13 22:07 - INFO - ---------------------------------------------
2024-10-13 22:07 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 22:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98243
2024-10-13 22:07 - INFO - 	 Train Loss: 0.084
2024-10-13 22:07 - INFO - 	 Val. Loss: 0.078
2024-10-13 22:07 - INFO - 	 ROC-AUC: 0.982
2024-10-13 22:07 - INFO - 	 PR-AUC: 0.835
2024-10-13 22:07 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 22:07 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 22:07 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:07 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 22:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-13 22:07 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:07 - INFO - ---------------------------------------------
2024-10-13 22:08 - INFO - Fit the preprocessing pipeline
2024-10-13 22:08 - INFO - Training using device: cuda
2024-10-13 22:08 - INFO - Creating generators
2024-10-13 22:08 - INFO - The model has 651,257 trainable parameters
2024-10-13 22:08 - INFO - * Model:
2024-10-13 22:08 - INFO - * -----------
2024-10-13 22:08 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 22:08 - INFO - * -----------
2024-10-13 22:08 - INFO - Evaluating model based on: rocauc
2024-10-13 22:08 - INFO - Training..

2024-10-13 22:09 - INFO - ---------------------------------------------
2024-10-13 22:09 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 22:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95711
2024-10-13 22:09 - INFO - 	 Train Loss: 0.213
2024-10-13 22:09 - INFO - 	 Val. Loss: 0.115
2024-10-13 22:09 - INFO - 	 ROC-AUC: 0.957
2024-10-13 22:09 - INFO - 	 PR-AUC: 0.653
2024-10-13 22:09 - INFO - 	 Recall for 0.4 precision: 0.880
2024-10-13 22:09 - INFO - 	 Best Val. Loss: 0.115
2024-10-13 22:09 - INFO - 	 Best ROC-AUC: 0.957
2024-10-13 22:09 - INFO - 	 Best PR-AUC: 0.653
2024-10-13 22:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-10-13 22:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.659
2024-10-13 22:09 - INFO - 	 Best Recall for 0.4 precision: 0.880
2024-10-13 22:09 - INFO - ---------------------------------------------
2024-10-13 22:09 - INFO - ---------------------------------------------
2024-10-13 22:09 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-13 22:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97499
2024-10-13 22:09 - INFO - 	 Train Loss: 0.115
2024-10-13 22:09 - INFO - 	 Val. Loss: 0.094
2024-10-13 22:09 - INFO - 	 ROC-AUC: 0.975
2024-10-13 22:09 - INFO - 	 PR-AUC: 0.774
2024-10-13 22:09 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 22:09 - INFO - 	 Best Val. Loss: 0.094
2024-10-13 22:09 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 22:09 - INFO - 	 Best PR-AUC: 0.774
2024-10-13 22:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 22:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.749
2024-10-13 22:09 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 22:09 - INFO - ---------------------------------------------
2024-10-13 22:10 - INFO - ---------------------------------------------
2024-10-13 22:10 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 22:10 - INFO - 	 Train Loss: 0.100
2024-10-13 22:10 - INFO - 	 Val. Loss: 0.090
2024-10-13 22:10 - INFO - 	 ROC-AUC: 0.973
2024-10-13 22:10 - INFO - 	 PR-AUC: 0.781
2024-10-13 22:10 - INFO - 	 Recall for 0.4 precision: 0.958
2024-10-13 22:10 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 22:10 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 22:10 - INFO - 	 Best PR-AUC: 0.781
2024-10-13 22:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 22:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.746
2024-10-13 22:10 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 22:10 - INFO - ---------------------------------------------
2024-10-13 22:10 - INFO - ---------------------------------------------
2024-10-13 22:10 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 22:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97895
2024-10-13 22:10 - INFO - 	 Train Loss: 0.095
2024-10-13 22:10 - INFO - 	 Val. Loss: 0.083
2024-10-13 22:10 - INFO - 	 ROC-AUC: 0.979
2024-10-13 22:10 - INFO - 	 PR-AUC: 0.808
2024-10-13 22:10 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 22:10 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 22:10 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 22:10 - INFO - 	 Best PR-AUC: 0.808
2024-10-13 22:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 22:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.771
2024-10-13 22:10 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 22:10 - INFO - ---------------------------------------------
2024-10-13 22:11 - INFO - ---------------------------------------------
2024-10-13 22:11 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 22:11 - INFO - 	 Train Loss: 0.091
2024-10-13 22:11 - INFO - 	 Val. Loss: 0.082
2024-10-13 22:11 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:11 - INFO - 	 PR-AUC: 0.805
2024-10-13 22:11 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 22:11 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 22:11 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 22:11 - INFO - 	 Best PR-AUC: 0.808
2024-10-13 22:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 22:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.771
2024-10-13 22:11 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 22:11 - INFO - ---------------------------------------------
2024-10-13 22:11 - INFO - ---------------------------------------------
2024-10-13 22:11 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 22:11 - INFO - 	 Train Loss: 0.089
2024-10-13 22:11 - INFO - 	 Val. Loss: 0.081
2024-10-13 22:11 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:11 - INFO - 	 PR-AUC: 0.810
2024-10-13 22:11 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 22:11 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 22:11 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 22:11 - INFO - 	 Best PR-AUC: 0.810
2024-10-13 22:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 22:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-13 22:11 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 22:11 - INFO - ---------------------------------------------
2024-10-13 22:12 - INFO - ---------------------------------------------
2024-10-13 22:12 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 22:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98272
2024-10-13 22:12 - INFO - 	 Train Loss: 0.086
2024-10-13 22:12 - INFO - 	 Val. Loss: 0.072
2024-10-13 22:12 - INFO - 	 ROC-AUC: 0.983
2024-10-13 22:12 - INFO - 	 PR-AUC: 0.836
2024-10-13 22:12 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 22:12 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 22:12 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 22:12 - INFO - 	 Best PR-AUC: 0.836
2024-10-13 22:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-13 22:12 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 22:12 - INFO - ---------------------------------------------
2024-10-13 22:13 - INFO - ---------------------------------------------
2024-10-13 22:13 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 22:13 - INFO - 	 Train Loss: 0.083
2024-10-13 22:13 - INFO - 	 Val. Loss: 0.074
2024-10-13 22:13 - INFO - 	 ROC-AUC: 0.982
2024-10-13 22:13 - INFO - 	 PR-AUC: 0.854
2024-10-13 22:13 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:13 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 22:13 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 22:13 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 22:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-13 22:13 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 22:13 - INFO - ---------------------------------------------
2024-10-13 22:13 - INFO - ---------------------------------------------
2024-10-13 22:13 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 22:13 - INFO - 	 Train Loss: 0.085
2024-10-13 22:13 - INFO - 	 Val. Loss: 0.074
2024-10-13 22:13 - INFO - 	 ROC-AUC: 0.982
2024-10-13 22:13 - INFO - 	 PR-AUC: 0.841
2024-10-13 22:13 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 22:13 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 22:13 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 22:13 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 22:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-13 22:13 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:13 - INFO - ---------------------------------------------
2024-10-13 22:14 - INFO - ---------------------------------------------
2024-10-13 22:14 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 22:14 - INFO - 	 Train Loss: 0.082
2024-10-13 22:14 - INFO - 	 Val. Loss: 0.076
2024-10-13 22:14 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:14 - INFO - 	 PR-AUC: 0.830
2024-10-13 22:14 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 22:14 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 22:14 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 22:14 - INFO - 	 Best PR-AUC: 0.854
2024-10-13 22:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-13 22:14 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:14 - INFO - ---------------------------------------------
2024-10-13 22:15 - INFO - Fit the preprocessing pipeline
2024-10-13 22:15 - INFO - Training using device: cuda
2024-10-13 22:15 - INFO - Creating generators
2024-10-13 22:15 - INFO - The model has 651,257 trainable parameters
2024-10-13 22:15 - INFO - * Model:
2024-10-13 22:15 - INFO - * -----------
2024-10-13 22:15 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 22:15 - INFO - * -----------
2024-10-13 22:15 - INFO - Evaluating model based on: rocauc
2024-10-13 22:15 - INFO - Training..

2024-10-13 22:16 - INFO - ---------------------------------------------
2024-10-13 22:16 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 22:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95948
2024-10-13 22:16 - INFO - 	 Train Loss: 0.205
2024-10-13 22:16 - INFO - 	 Val. Loss: 0.117
2024-10-13 22:16 - INFO - 	 ROC-AUC: 0.959
2024-10-13 22:16 - INFO - 	 PR-AUC: 0.631
2024-10-13 22:16 - INFO - 	 Recall for 0.4 precision: 0.894
2024-10-13 22:16 - INFO - 	 Best Val. Loss: 0.117
2024-10-13 22:16 - INFO - 	 Best ROC-AUC: 0.959
2024-10-13 22:16 - INFO - 	 Best PR-AUC: 0.631
2024-10-13 22:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-13 22:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.650
2024-10-13 22:16 - INFO - 	 Best Recall for 0.4 precision: 0.894
2024-10-13 22:16 - INFO - ---------------------------------------------
2024-10-13 22:16 - INFO - ---------------------------------------------
2024-10-13 22:16 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 22:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97203
2024-10-13 22:16 - INFO - 	 Train Loss: 0.113
2024-10-13 22:16 - INFO - 	 Val. Loss: 0.093
2024-10-13 22:16 - INFO - 	 ROC-AUC: 0.972
2024-10-13 22:16 - INFO - 	 PR-AUC: 0.744
2024-10-13 22:16 - INFO - 	 Recall for 0.4 precision: 0.955
2024-10-13 22:16 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 22:16 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 22:16 - INFO - 	 Best PR-AUC: 0.744
2024-10-13 22:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 22:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-10-13 22:16 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-13 22:16 - INFO - ---------------------------------------------
2024-10-13 22:17 - INFO - ---------------------------------------------
2024-10-13 22:17 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 22:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97659
2024-10-13 22:17 - INFO - 	 Train Loss: 0.102
2024-10-13 22:17 - INFO - 	 Val. Loss: 0.087
2024-10-13 22:17 - INFO - 	 ROC-AUC: 0.977
2024-10-13 22:17 - INFO - 	 PR-AUC: 0.781
2024-10-13 22:17 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 22:17 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 22:17 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 22:17 - INFO - 	 Best PR-AUC: 0.781
2024-10-13 22:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 22:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.770
2024-10-13 22:17 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 22:17 - INFO - ---------------------------------------------
2024-10-13 22:17 - INFO - ---------------------------------------------
2024-10-13 22:17 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 22:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97787
2024-10-13 22:17 - INFO - 	 Train Loss: 0.096
2024-10-13 22:17 - INFO - 	 Val. Loss: 0.086
2024-10-13 22:17 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:17 - INFO - 	 PR-AUC: 0.791
2024-10-13 22:17 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 22:17 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 22:17 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 22:17 - INFO - 	 Best PR-AUC: 0.791
2024-10-13 22:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 22:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-10-13 22:17 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 22:17 - INFO - ---------------------------------------------
2024-10-13 22:18 - INFO - ---------------------------------------------
2024-10-13 22:18 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 22:18 - INFO - 	 Train Loss: 0.092
2024-10-13 22:18 - INFO - 	 Val. Loss: 0.083
2024-10-13 22:18 - INFO - 	 ROC-AUC: 0.977
2024-10-13 22:18 - INFO - 	 PR-AUC: 0.795
2024-10-13 22:18 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 22:18 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 22:18 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 22:18 - INFO - 	 Best PR-AUC: 0.795
2024-10-13 22:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-13 22:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-13 22:18 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 22:18 - INFO - ---------------------------------------------
2024-10-13 22:18 - INFO - ---------------------------------------------
2024-10-13 22:18 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 22:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98074
2024-10-13 22:18 - INFO - 	 Train Loss: 0.090
2024-10-13 22:18 - INFO - 	 Val. Loss: 0.078
2024-10-13 22:18 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:18 - INFO - 	 PR-AUC: 0.814
2024-10-13 22:18 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:18 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 22:18 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:18 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 22:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-13 22:18 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 22:18 - INFO - ---------------------------------------------
2024-10-13 22:19 - INFO - ---------------------------------------------
2024-10-13 22:19 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 22:19 - INFO - 	 Train Loss: 0.087
2024-10-13 22:19 - INFO - 	 Val. Loss: 0.086
2024-10-13 22:19 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:19 - INFO - 	 PR-AUC: 0.805
2024-10-13 22:19 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 22:19 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 22:19 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:19 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 22:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-13 22:19 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 22:19 - INFO - ---------------------------------------------
2024-10-13 22:19 - INFO - ---------------------------------------------
2024-10-13 22:19 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 22:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98265
2024-10-13 22:19 - INFO - 	 Train Loss: 0.086
2024-10-13 22:19 - INFO - 	 Val. Loss: 0.076
2024-10-13 22:19 - INFO - 	 ROC-AUC: 0.983
2024-10-13 22:19 - INFO - 	 PR-AUC: 0.841
2024-10-13 22:19 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:19 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 22:19 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 22:19 - INFO - 	 Best PR-AUC: 0.841
2024-10-13 22:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-13 22:19 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 22:19 - INFO - ---------------------------------------------
2024-10-13 22:20 - INFO - ---------------------------------------------
2024-10-13 22:20 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 22:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98291
2024-10-13 22:20 - INFO - 	 Train Loss: 0.083
2024-10-13 22:20 - INFO - 	 Val. Loss: 0.074
2024-10-13 22:20 - INFO - 	 ROC-AUC: 0.983
2024-10-13 22:20 - INFO - 	 PR-AUC: 0.834
2024-10-13 22:20 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 22:20 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 22:20 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 22:20 - INFO - 	 Best PR-AUC: 0.841
2024-10-13 22:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-13 22:20 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:20 - INFO - ---------------------------------------------
2024-10-13 22:20 - INFO - ---------------------------------------------
2024-10-13 22:20 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 22:20 - INFO - 	 Train Loss: 0.083
2024-10-13 22:20 - INFO - 	 Val. Loss: 0.076
2024-10-13 22:20 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:20 - INFO - 	 PR-AUC: 0.832
2024-10-13 22:20 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:20 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 22:20 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 22:20 - INFO - 	 Best PR-AUC: 0.841
2024-10-13 22:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-13 22:20 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:20 - INFO - ---------------------------------------------
2024-10-13 22:22 - INFO - Fit the preprocessing pipeline
2024-10-13 22:22 - INFO - Training using device: cuda
2024-10-13 22:22 - INFO - Creating generators
2024-10-13 22:22 - INFO - The model has 651,257 trainable parameters
2024-10-13 22:22 - INFO - * Model:
2024-10-13 22:22 - INFO - * -----------
2024-10-13 22:22 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 22:22 - INFO - * -----------
2024-10-13 22:22 - INFO - Evaluating model based on: rocauc
2024-10-13 22:22 - INFO - Training..

2024-10-13 22:23 - INFO - ---------------------------------------------
2024-10-13 22:23 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 22:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94332
2024-10-13 22:23 - INFO - 	 Train Loss: 0.205
2024-10-13 22:23 - INFO - 	 Val. Loss: 0.173
2024-10-13 22:23 - INFO - 	 ROC-AUC: 0.943
2024-10-13 22:23 - INFO - 	 PR-AUC: 0.533
2024-10-13 22:23 - INFO - 	 Recall for 0.4 precision: 0.817
2024-10-13 22:23 - INFO - 	 Best Val. Loss: 0.173
2024-10-13 22:23 - INFO - 	 Best ROC-AUC: 0.943
2024-10-13 22:23 - INFO - 	 Best PR-AUC: 0.533
2024-10-13 22:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-10-13 22:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.586
2024-10-13 22:23 - INFO - 	 Best Recall for 0.4 precision: 0.817
2024-10-13 22:23 - INFO - ---------------------------------------------
2024-10-13 22:23 - INFO - ---------------------------------------------
2024-10-13 22:23 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 22:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97314
2024-10-13 22:23 - INFO - 	 Train Loss: 0.113
2024-10-13 22:23 - INFO - 	 Val. Loss: 0.094
2024-10-13 22:23 - INFO - 	 ROC-AUC: 0.973
2024-10-13 22:23 - INFO - 	 PR-AUC: 0.758
2024-10-13 22:23 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 22:23 - INFO - 	 Best Val. Loss: 0.094
2024-10-13 22:23 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 22:23 - INFO - 	 Best PR-AUC: 0.758
2024-10-13 22:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 22:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-10-13 22:23 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 22:23 - INFO - ---------------------------------------------
2024-10-13 22:24 - INFO - ---------------------------------------------
2024-10-13 22:24 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 22:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97591
2024-10-13 22:24 - INFO - 	 Train Loss: 0.102
2024-10-13 22:24 - INFO - 	 Val. Loss: 0.092
2024-10-13 22:24 - INFO - 	 ROC-AUC: 0.976
2024-10-13 22:24 - INFO - 	 PR-AUC: 0.775
2024-10-13 22:24 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:24 - INFO - 	 Best Val. Loss: 0.092
2024-10-13 22:24 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 22:24 - INFO - 	 Best PR-AUC: 0.775
2024-10-13 22:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-13 22:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.761
2024-10-13 22:24 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 22:24 - INFO - ---------------------------------------------
2024-10-13 22:24 - INFO - ---------------------------------------------
2024-10-13 22:24 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 22:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97622
2024-10-13 22:24 - INFO - 	 Train Loss: 0.094
2024-10-13 22:24 - INFO - 	 Val. Loss: 0.088
2024-10-13 22:24 - INFO - 	 ROC-AUC: 0.976
2024-10-13 22:24 - INFO - 	 PR-AUC: 0.801
2024-10-13 22:24 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 22:24 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 22:24 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 22:24 - INFO - 	 Best PR-AUC: 0.801
2024-10-13 22:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-13 22:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-10-13 22:24 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 22:24 - INFO - ---------------------------------------------
2024-10-13 22:25 - INFO - ---------------------------------------------
2024-10-13 22:25 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 22:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9786
2024-10-13 22:25 - INFO - 	 Train Loss: 0.092
2024-10-13 22:25 - INFO - 	 Val. Loss: 0.080
2024-10-13 22:25 - INFO - 	 ROC-AUC: 0.979
2024-10-13 22:25 - INFO - 	 PR-AUC: 0.814
2024-10-13 22:25 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 22:25 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 22:25 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 22:25 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 22:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-10-13 22:25 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 22:25 - INFO - ---------------------------------------------
2024-10-13 22:25 - INFO - ---------------------------------------------
2024-10-13 22:25 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 22:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97961
2024-10-13 22:25 - INFO - 	 Train Loss: 0.088
2024-10-13 22:25 - INFO - 	 Val. Loss: 0.080
2024-10-13 22:25 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:25 - INFO - 	 PR-AUC: 0.814
2024-10-13 22:25 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 22:25 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 22:25 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 22:25 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 22:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-13 22:25 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 22:25 - INFO - ---------------------------------------------
2024-10-13 22:26 - INFO - ---------------------------------------------
2024-10-13 22:26 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 22:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98213
2024-10-13 22:26 - INFO - 	 Train Loss: 0.086
2024-10-13 22:26 - INFO - 	 Val. Loss: 0.075
2024-10-13 22:26 - INFO - 	 ROC-AUC: 0.982
2024-10-13 22:26 - INFO - 	 PR-AUC: 0.837
2024-10-13 22:26 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 22:26 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 22:26 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:26 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 22:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-13 22:26 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 22:26 - INFO - ---------------------------------------------
2024-10-13 22:26 - INFO - ---------------------------------------------
2024-10-13 22:26 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 22:26 - INFO - 	 Train Loss: 0.084
2024-10-13 22:26 - INFO - 	 Val. Loss: 0.079
2024-10-13 22:26 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:26 - INFO - 	 PR-AUC: 0.819
2024-10-13 22:26 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 22:26 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 22:26 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:26 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 22:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-13 22:26 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:26 - INFO - ---------------------------------------------
2024-10-13 22:27 - INFO - ---------------------------------------------
2024-10-13 22:27 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 22:27 - INFO - 	 Train Loss: 0.084
2024-10-13 22:27 - INFO - 	 Val. Loss: 0.077
2024-10-13 22:27 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:27 - INFO - 	 PR-AUC: 0.828
2024-10-13 22:27 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 22:27 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 22:27 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:27 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 22:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-13 22:27 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:27 - INFO - ---------------------------------------------
2024-10-13 22:27 - INFO - ---------------------------------------------
2024-10-13 22:27 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 22:27 - INFO - 	 Train Loss: 0.081
2024-10-13 22:27 - INFO - 	 Val. Loss: 0.075
2024-10-13 22:27 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:27 - INFO - 	 PR-AUC: 0.834
2024-10-13 22:27 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:27 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 22:27 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:27 - INFO - 	 Best PR-AUC: 0.837
2024-10-13 22:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-13 22:27 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:27 - INFO - ---------------------------------------------
2024-10-13 22:29 - INFO - Fit the preprocessing pipeline
2024-10-13 22:29 - INFO - Training using device: cuda
2024-10-13 22:29 - INFO - Creating generators
2024-10-13 22:29 - INFO - The model has 651,257 trainable parameters
2024-10-13 22:29 - INFO - * Model:
2024-10-13 22:29 - INFO - * -----------
2024-10-13 22:29 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 22:29 - INFO - * -----------
2024-10-13 22:29 - INFO - Evaluating model based on: rocauc
2024-10-13 22:29 - INFO - Training..

2024-10-13 22:29 - INFO - ---------------------------------------------
2024-10-13 22:29 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 22:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96337
2024-10-13 22:29 - INFO - 	 Train Loss: 0.197
2024-10-13 22:29 - INFO - 	 Val. Loss: 0.111
2024-10-13 22:29 - INFO - 	 ROC-AUC: 0.963
2024-10-13 22:29 - INFO - 	 PR-AUC: 0.689
2024-10-13 22:29 - INFO - 	 Recall for 0.4 precision: 0.921
2024-10-13 22:29 - INFO - 	 Best Val. Loss: 0.111
2024-10-13 22:29 - INFO - 	 Best ROC-AUC: 0.963
2024-10-13 22:29 - INFO - 	 Best PR-AUC: 0.689
2024-10-13 22:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-10-13 22:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.679
2024-10-13 22:29 - INFO - 	 Best Recall for 0.4 precision: 0.921
2024-10-13 22:29 - INFO - ---------------------------------------------
2024-10-13 22:30 - INFO - ---------------------------------------------
2024-10-13 22:30 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 22:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97337
2024-10-13 22:30 - INFO - 	 Train Loss: 0.112
2024-10-13 22:30 - INFO - 	 Val. Loss: 0.102
2024-10-13 22:30 - INFO - 	 ROC-AUC: 0.973
2024-10-13 22:30 - INFO - 	 PR-AUC: 0.763
2024-10-13 22:30 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-13 22:30 - INFO - 	 Best Val. Loss: 0.102
2024-10-13 22:30 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 22:30 - INFO - 	 Best PR-AUC: 0.763
2024-10-13 22:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-13 22:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.722
2024-10-13 22:30 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-13 22:30 - INFO - ---------------------------------------------
2024-10-13 22:30 - INFO - ---------------------------------------------
2024-10-13 22:30 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 22:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97777
2024-10-13 22:30 - INFO - 	 Train Loss: 0.097
2024-10-13 22:30 - INFO - 	 Val. Loss: 0.085
2024-10-13 22:30 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:30 - INFO - 	 PR-AUC: 0.791
2024-10-13 22:30 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 22:30 - INFO - 	 Best Val. Loss: 0.085
2024-10-13 22:30 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 22:30 - INFO - 	 Best PR-AUC: 0.791
2024-10-13 22:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 22:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.767
2024-10-13 22:30 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 22:30 - INFO - ---------------------------------------------
2024-10-13 22:31 - INFO - ---------------------------------------------
2024-10-13 22:31 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 22:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97827
2024-10-13 22:31 - INFO - 	 Train Loss: 0.094
2024-10-13 22:31 - INFO - 	 Val. Loss: 0.083
2024-10-13 22:31 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:31 - INFO - 	 PR-AUC: 0.791
2024-10-13 22:31 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 22:31 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 22:31 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 22:31 - INFO - 	 Best PR-AUC: 0.791
2024-10-13 22:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 22:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.767
2024-10-13 22:31 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 22:31 - INFO - ---------------------------------------------
2024-10-13 22:32 - INFO - ---------------------------------------------
2024-10-13 22:32 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 22:32 - INFO - 	 Train Loss: 0.092
2024-10-13 22:32 - INFO - 	 Val. Loss: 0.085
2024-10-13 22:32 - INFO - 	 ROC-AUC: 0.976
2024-10-13 22:32 - INFO - 	 PR-AUC: 0.795
2024-10-13 22:32 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 22:32 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 22:32 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 22:32 - INFO - 	 Best PR-AUC: 0.795
2024-10-13 22:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 22:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-13 22:32 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 22:32 - INFO - ---------------------------------------------
2024-10-13 22:32 - INFO - ---------------------------------------------
2024-10-13 22:32 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 22:32 - INFO - 	 Train Loss: 0.090
2024-10-13 22:32 - INFO - 	 Val. Loss: 0.082
2024-10-13 22:32 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:32 - INFO - 	 PR-AUC: 0.831
2024-10-13 22:32 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 22:32 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 22:32 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 22:32 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 22:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 22:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-13 22:32 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-13 22:32 - INFO - ---------------------------------------------
2024-10-13 22:33 - INFO - ---------------------------------------------
2024-10-13 22:33 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 22:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98139
2024-10-13 22:33 - INFO - 	 Train Loss: 0.088
2024-10-13 22:33 - INFO - 	 Val. Loss: 0.079
2024-10-13 22:33 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:33 - INFO - 	 PR-AUC: 0.827
2024-10-13 22:33 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 22:33 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 22:33 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:33 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 22:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-13 22:33 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:33 - INFO - ---------------------------------------------
2024-10-13 22:33 - INFO - ---------------------------------------------
2024-10-13 22:33 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 22:33 - INFO - 	 Train Loss: 0.084
2024-10-13 22:33 - INFO - 	 Val. Loss: 0.080
2024-10-13 22:33 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:33 - INFO - 	 PR-AUC: 0.827
2024-10-13 22:33 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 22:33 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 22:33 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:33 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 22:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-13 22:33 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:33 - INFO - ---------------------------------------------
2024-10-13 22:34 - INFO - ---------------------------------------------
2024-10-13 22:34 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 22:34 - INFO - 	 Train Loss: 0.083
2024-10-13 22:34 - INFO - 	 Val. Loss: 0.077
2024-10-13 22:34 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:34 - INFO - 	 PR-AUC: 0.822
2024-10-13 22:34 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 22:34 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 22:34 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:34 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 22:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-13 22:34 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:34 - INFO - ---------------------------------------------
2024-10-13 22:34 - INFO - ---------------------------------------------
2024-10-13 22:34 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 22:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98236
2024-10-13 22:34 - INFO - 	 Train Loss: 0.083
2024-10-13 22:34 - INFO - 	 Val. Loss: 0.074
2024-10-13 22:34 - INFO - 	 ROC-AUC: 0.982
2024-10-13 22:34 - INFO - 	 PR-AUC: 0.835
2024-10-13 22:34 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 22:34 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 22:34 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:34 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 22:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 22:34 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:34 - INFO - ---------------------------------------------
2024-10-13 22:36 - INFO - Fit the preprocessing pipeline
2024-10-13 22:36 - INFO - Training using device: cuda
2024-10-13 22:36 - INFO - Creating generators
2024-10-13 22:36 - INFO - The model has 651,257 trainable parameters
2024-10-13 22:36 - INFO - * Model:
2024-10-13 22:36 - INFO - * -----------
2024-10-13 22:36 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 22:36 - INFO - * -----------
2024-10-13 22:36 - INFO - Evaluating model based on: rocauc
2024-10-13 22:36 - INFO - Training..

2024-10-13 22:36 - INFO - ---------------------------------------------
2024-10-13 22:36 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 22:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95182
2024-10-13 22:36 - INFO - 	 Train Loss: 0.203
2024-10-13 22:36 - INFO - 	 Val. Loss: 0.124
2024-10-13 22:36 - INFO - 	 ROC-AUC: 0.952
2024-10-13 22:36 - INFO - 	 PR-AUC: 0.597
2024-10-13 22:36 - INFO - 	 Recall for 0.4 precision: 0.870
2024-10-13 22:36 - INFO - 	 Best Val. Loss: 0.124
2024-10-13 22:36 - INFO - 	 Best ROC-AUC: 0.952
2024-10-13 22:36 - INFO - 	 Best PR-AUC: 0.597
2024-10-13 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-10-13 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.620
2024-10-13 22:36 - INFO - 	 Best Recall for 0.4 precision: 0.870
2024-10-13 22:36 - INFO - ---------------------------------------------
2024-10-13 22:37 - INFO - ---------------------------------------------
2024-10-13 22:37 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 22:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97425
2024-10-13 22:37 - INFO - 	 Train Loss: 0.112
2024-10-13 22:37 - INFO - 	 Val. Loss: 0.090
2024-10-13 22:37 - INFO - 	 ROC-AUC: 0.974
2024-10-13 22:37 - INFO - 	 PR-AUC: 0.765
2024-10-13 22:37 - INFO - 	 Recall for 0.4 precision: 0.956
2024-10-13 22:37 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 22:37 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 22:37 - INFO - 	 Best PR-AUC: 0.765
2024-10-13 22:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 22:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.759
2024-10-13 22:37 - INFO - 	 Best Recall for 0.4 precision: 0.956
2024-10-13 22:37 - INFO - ---------------------------------------------
2024-10-13 22:37 - INFO - ---------------------------------------------
2024-10-13 22:37 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 22:37 - INFO - 	 Train Loss: 0.101
2024-10-13 22:37 - INFO - 	 Val. Loss: 0.091
2024-10-13 22:37 - INFO - 	 ROC-AUC: 0.974
2024-10-13 22:37 - INFO - 	 PR-AUC: 0.759
2024-10-13 22:37 - INFO - 	 Recall for 0.4 precision: 0.956
2024-10-13 22:37 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 22:37 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 22:37 - INFO - 	 Best PR-AUC: 0.765
2024-10-13 22:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 22:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.759
2024-10-13 22:37 - INFO - 	 Best Recall for 0.4 precision: 0.956
2024-10-13 22:37 - INFO - ---------------------------------------------
2024-10-13 22:38 - INFO - ---------------------------------------------
2024-10-13 22:38 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 22:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97857
2024-10-13 22:38 - INFO - 	 Train Loss: 0.096
2024-10-13 22:38 - INFO - 	 Val. Loss: 0.083
2024-10-13 22:38 - INFO - 	 ROC-AUC: 0.979
2024-10-13 22:38 - INFO - 	 PR-AUC: 0.811
2024-10-13 22:38 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 22:38 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 22:38 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 22:38 - INFO - 	 Best PR-AUC: 0.811
2024-10-13 22:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-13 22:38 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 22:38 - INFO - ---------------------------------------------
2024-10-13 22:38 - INFO - ---------------------------------------------
2024-10-13 22:38 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 22:38 - INFO - 	 Train Loss: 0.091
2024-10-13 22:38 - INFO - 	 Val. Loss: 0.089
2024-10-13 22:38 - INFO - 	 ROC-AUC: 0.975
2024-10-13 22:38 - INFO - 	 PR-AUC: 0.774
2024-10-13 22:38 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 22:38 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 22:38 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 22:38 - INFO - 	 Best PR-AUC: 0.811
2024-10-13 22:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-13 22:38 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 22:38 - INFO - ---------------------------------------------
2024-10-13 22:39 - INFO - ---------------------------------------------
2024-10-13 22:39 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 22:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98109
2024-10-13 22:39 - INFO - 	 Train Loss: 0.090
2024-10-13 22:39 - INFO - 	 Val. Loss: 0.082
2024-10-13 22:39 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:39 - INFO - 	 PR-AUC: 0.812
2024-10-13 22:39 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 22:39 - INFO - 	 Best Val. Loss: 0.082
2024-10-13 22:39 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:39 - INFO - 	 Best PR-AUC: 0.812
2024-10-13 22:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-13 22:39 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 22:39 - INFO - ---------------------------------------------
2024-10-13 22:40 - INFO - ---------------------------------------------
2024-10-13 22:40 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 22:40 - INFO - 	 Train Loss: 0.087
2024-10-13 22:40 - INFO - 	 Val. Loss: 0.081
2024-10-13 22:40 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:40 - INFO - 	 PR-AUC: 0.802
2024-10-13 22:40 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 22:40 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 22:40 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:40 - INFO - 	 Best PR-AUC: 0.812
2024-10-13 22:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-13 22:40 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 22:40 - INFO - ---------------------------------------------
2024-10-13 22:40 - INFO - ---------------------------------------------
2024-10-13 22:40 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 22:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98172
2024-10-13 22:40 - INFO - 	 Train Loss: 0.086
2024-10-13 22:40 - INFO - 	 Val. Loss: 0.075
2024-10-13 22:40 - INFO - 	 ROC-AUC: 0.982
2024-10-13 22:40 - INFO - 	 PR-AUC: 0.835
2024-10-13 22:40 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 22:40 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 22:40 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:40 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 22:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 22:40 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 22:40 - INFO - ---------------------------------------------
2024-10-13 22:41 - INFO - ---------------------------------------------
2024-10-13 22:41 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 22:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98181
2024-10-13 22:41 - INFO - 	 Train Loss: 0.085
2024-10-13 22:41 - INFO - 	 Val. Loss: 0.075
2024-10-13 22:41 - INFO - 	 ROC-AUC: 0.982
2024-10-13 22:41 - INFO - 	 PR-AUC: 0.829
2024-10-13 22:41 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:41 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 22:41 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:41 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 22:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 22:41 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 22:41 - INFO - ---------------------------------------------
2024-10-13 22:41 - INFO - ---------------------------------------------
2024-10-13 22:41 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 22:41 - INFO - 	 Train Loss: 0.083
2024-10-13 22:41 - INFO - 	 Val. Loss: 0.076
2024-10-13 22:41 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:41 - INFO - 	 PR-AUC: 0.830
2024-10-13 22:41 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-13 22:41 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 22:41 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:41 - INFO - 	 Best PR-AUC: 0.835
2024-10-13 22:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 22:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 22:41 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-13 22:41 - INFO - ---------------------------------------------
2024-10-13 22:43 - INFO - Fit the preprocessing pipeline
2024-10-13 22:43 - INFO - Training using device: cuda
2024-10-13 22:43 - INFO - Creating generators
2024-10-13 22:43 - INFO - The model has 651,257 trainable parameters
2024-10-13 22:43 - INFO - * Model:
2024-10-13 22:43 - INFO - * -----------
2024-10-13 22:43 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 22:43 - INFO - * -----------
2024-10-13 22:43 - INFO - Evaluating model based on: rocauc
2024-10-13 22:43 - INFO - Training..

2024-10-13 22:43 - INFO - ---------------------------------------------
2024-10-13 22:43 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 22:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96072
2024-10-13 22:43 - INFO - 	 Train Loss: 0.200
2024-10-13 22:43 - INFO - 	 Val. Loss: 0.128
2024-10-13 22:43 - INFO - 	 ROC-AUC: 0.961
2024-10-13 22:43 - INFO - 	 PR-AUC: 0.623
2024-10-13 22:43 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 22:43 - INFO - 	 Best Val. Loss: 0.128
2024-10-13 22:43 - INFO - 	 Best ROC-AUC: 0.961
2024-10-13 22:43 - INFO - 	 Best PR-AUC: 0.623
2024-10-13 22:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-10-13 22:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.643
2024-10-13 22:43 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-13 22:43 - INFO - ---------------------------------------------
2024-10-13 22:44 - INFO - ---------------------------------------------
2024-10-13 22:44 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 22:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96906
2024-10-13 22:44 - INFO - 	 Train Loss: 0.112
2024-10-13 22:44 - INFO - 	 Val. Loss: 0.114
2024-10-13 22:44 - INFO - 	 ROC-AUC: 0.969
2024-10-13 22:44 - INFO - 	 PR-AUC: 0.736
2024-10-13 22:44 - INFO - 	 Recall for 0.4 precision: 0.950
2024-10-13 22:44 - INFO - 	 Best Val. Loss: 0.114
2024-10-13 22:44 - INFO - 	 Best ROC-AUC: 0.969
2024-10-13 22:44 - INFO - 	 Best PR-AUC: 0.736
2024-10-13 22:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-13 22:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.706
2024-10-13 22:44 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-13 22:44 - INFO - ---------------------------------------------
2024-10-13 22:44 - INFO - ---------------------------------------------
2024-10-13 22:44 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 22:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97517
2024-10-13 22:44 - INFO - 	 Train Loss: 0.100
2024-10-13 22:44 - INFO - 	 Val. Loss: 0.088
2024-10-13 22:44 - INFO - 	 ROC-AUC: 0.975
2024-10-13 22:44 - INFO - 	 PR-AUC: 0.774
2024-10-13 22:44 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 22:44 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 22:44 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 22:44 - INFO - 	 Best PR-AUC: 0.774
2024-10-13 22:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 22:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.745
2024-10-13 22:44 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 22:44 - INFO - ---------------------------------------------
2024-10-13 22:45 - INFO - ---------------------------------------------
2024-10-13 22:45 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 22:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97678
2024-10-13 22:45 - INFO - 	 Train Loss: 0.095
2024-10-13 22:45 - INFO - 	 Val. Loss: 0.087
2024-10-13 22:45 - INFO - 	 ROC-AUC: 0.977
2024-10-13 22:45 - INFO - 	 PR-AUC: 0.789
2024-10-13 22:45 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-13 22:45 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 22:45 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 22:45 - INFO - 	 Best PR-AUC: 0.789
2024-10-13 22:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-13 22:45 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-13 22:45 - INFO - ---------------------------------------------
2024-10-13 22:45 - INFO - ---------------------------------------------
2024-10-13 22:45 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 22:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97974
2024-10-13 22:45 - INFO - 	 Train Loss: 0.091
2024-10-13 22:45 - INFO - 	 Val. Loss: 0.078
2024-10-13 22:45 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:45 - INFO - 	 PR-AUC: 0.809
2024-10-13 22:45 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:45 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 22:45 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 22:45 - INFO - 	 Best PR-AUC: 0.809
2024-10-13 22:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 22:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-13 22:45 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 22:45 - INFO - ---------------------------------------------
2024-10-13 22:46 - INFO - ---------------------------------------------
2024-10-13 22:46 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 22:46 - INFO - 	 Train Loss: 0.087
2024-10-13 22:46 - INFO - 	 Val. Loss: 0.079
2024-10-13 22:46 - INFO - 	 ROC-AUC: 0.979
2024-10-13 22:46 - INFO - 	 PR-AUC: 0.811
2024-10-13 22:46 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 22:46 - INFO - 	 Best Val. Loss: 0.078
2024-10-13 22:46 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 22:46 - INFO - 	 Best PR-AUC: 0.811
2024-10-13 22:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 22:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-13 22:46 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 22:46 - INFO - ---------------------------------------------
2024-10-13 22:46 - INFO - ---------------------------------------------
2024-10-13 22:46 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 22:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9808
2024-10-13 22:46 - INFO - 	 Train Loss: 0.085
2024-10-13 22:46 - INFO - 	 Val. Loss: 0.077
2024-10-13 22:46 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:46 - INFO - 	 PR-AUC: 0.821
2024-10-13 22:46 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:46 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 22:46 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:46 - INFO - 	 Best PR-AUC: 0.821
2024-10-13 22:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-13 22:46 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 22:46 - INFO - ---------------------------------------------
2024-10-13 22:47 - INFO - ---------------------------------------------
2024-10-13 22:47 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 22:47 - INFO - 	 Train Loss: 0.085
2024-10-13 22:47 - INFO - 	 Val. Loss: 0.078
2024-10-13 22:47 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:47 - INFO - 	 PR-AUC: 0.830
2024-10-13 22:47 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:47 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 22:47 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:47 - INFO - 	 Best PR-AUC: 0.830
2024-10-13 22:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-13 22:47 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 22:47 - INFO - ---------------------------------------------
2024-10-13 22:47 - INFO - ---------------------------------------------
2024-10-13 22:47 - INFO - Epoch: 09 | Time: 0m 33s
2024-10-13 22:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98385
2024-10-13 22:47 - INFO - 	 Train Loss: 0.083
2024-10-13 22:47 - INFO - 	 Val. Loss: 0.072
2024-10-13 22:47 - INFO - 	 ROC-AUC: 0.984
2024-10-13 22:47 - INFO - 	 PR-AUC: 0.832
2024-10-13 22:47 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 22:47 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 22:47 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 22:47 - INFO - 	 Best PR-AUC: 0.832
2024-10-13 22:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 22:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 22:47 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:47 - INFO - ---------------------------------------------
2024-10-13 22:48 - INFO - ---------------------------------------------
2024-10-13 22:48 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 22:48 - INFO - 	 Train Loss: 0.082
2024-10-13 22:48 - INFO - 	 Val. Loss: 0.080
2024-10-13 22:48 - INFO - 	 ROC-AUC: 0.980
2024-10-13 22:48 - INFO - 	 PR-AUC: 0.810
2024-10-13 22:48 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 22:48 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 22:48 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 22:48 - INFO - 	 Best PR-AUC: 0.832
2024-10-13 22:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 22:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 22:48 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 22:48 - INFO - ---------------------------------------------
2024-10-13 22:49 - INFO - Fit the preprocessing pipeline
2024-10-13 22:49 - INFO - Training using device: cuda
2024-10-13 22:49 - INFO - Creating generators
2024-10-13 22:50 - INFO - The model has 651,257 trainable parameters
2024-10-13 22:50 - INFO - * Model:
2024-10-13 22:50 - INFO - * -----------
2024-10-13 22:50 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 22:50 - INFO - * -----------
2024-10-13 22:50 - INFO - Evaluating model based on: rocauc
2024-10-13 22:50 - INFO - Training..

2024-10-13 22:50 - INFO - ---------------------------------------------
2024-10-13 22:50 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 22:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95514
2024-10-13 22:50 - INFO - 	 Train Loss: 0.206
2024-10-13 22:50 - INFO - 	 Val. Loss: 0.126
2024-10-13 22:50 - INFO - 	 ROC-AUC: 0.955
2024-10-13 22:50 - INFO - 	 PR-AUC: 0.602
2024-10-13 22:50 - INFO - 	 Recall for 0.4 precision: 0.893
2024-10-13 22:50 - INFO - 	 Best Val. Loss: 0.126
2024-10-13 22:50 - INFO - 	 Best ROC-AUC: 0.955
2024-10-13 22:50 - INFO - 	 Best PR-AUC: 0.602
2024-10-13 22:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-10-13 22:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.621
2024-10-13 22:50 - INFO - 	 Best Recall for 0.4 precision: 0.893
2024-10-13 22:50 - INFO - ---------------------------------------------
2024-10-13 22:51 - INFO - ---------------------------------------------
2024-10-13 22:51 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 22:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9692
2024-10-13 22:51 - INFO - 	 Train Loss: 0.116
2024-10-13 22:51 - INFO - 	 Val. Loss: 0.103
2024-10-13 22:51 - INFO - 	 ROC-AUC: 0.969
2024-10-13 22:51 - INFO - 	 PR-AUC: 0.711
2024-10-13 22:51 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-13 22:51 - INFO - 	 Best Val. Loss: 0.103
2024-10-13 22:51 - INFO - 	 Best ROC-AUC: 0.969
2024-10-13 22:51 - INFO - 	 Best PR-AUC: 0.711
2024-10-13 22:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 22:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.733
2024-10-13 22:51 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-13 22:51 - INFO - ---------------------------------------------
2024-10-13 22:51 - INFO - ---------------------------------------------
2024-10-13 22:51 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 22:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97528
2024-10-13 22:51 - INFO - 	 Train Loss: 0.101
2024-10-13 22:51 - INFO - 	 Val. Loss: 0.088
2024-10-13 22:51 - INFO - 	 ROC-AUC: 0.975
2024-10-13 22:51 - INFO - 	 PR-AUC: 0.762
2024-10-13 22:51 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 22:51 - INFO - 	 Best Val. Loss: 0.088
2024-10-13 22:51 - INFO - 	 Best ROC-AUC: 0.975
2024-10-13 22:51 - INFO - 	 Best PR-AUC: 0.762
2024-10-13 22:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 22:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-10-13 22:51 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 22:51 - INFO - ---------------------------------------------
2024-10-13 22:52 - INFO - ---------------------------------------------
2024-10-13 22:52 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 22:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97844
2024-10-13 22:52 - INFO - 	 Train Loss: 0.095
2024-10-13 22:52 - INFO - 	 Val. Loss: 0.083
2024-10-13 22:52 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:52 - INFO - 	 PR-AUC: 0.798
2024-10-13 22:52 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 22:52 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 22:52 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 22:52 - INFO - 	 Best PR-AUC: 0.798
2024-10-13 22:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 22:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-10-13 22:52 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-13 22:52 - INFO - ---------------------------------------------
2024-10-13 22:52 - INFO - ---------------------------------------------
2024-10-13 22:52 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 22:52 - INFO - 	 Train Loss: 0.092
2024-10-13 22:52 - INFO - 	 Val. Loss: 0.084
2024-10-13 22:52 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:52 - INFO - 	 PR-AUC: 0.795
2024-10-13 22:52 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:52 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 22:52 - INFO - 	 Best ROC-AUC: 0.978
2024-10-13 22:52 - INFO - 	 Best PR-AUC: 0.798
2024-10-13 22:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 22:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-10-13 22:52 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 22:52 - INFO - ---------------------------------------------
2024-10-13 22:53 - INFO - ---------------------------------------------
2024-10-13 22:53 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 22:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98071
2024-10-13 22:53 - INFO - 	 Train Loss: 0.089
2024-10-13 22:53 - INFO - 	 Val. Loss: 0.077
2024-10-13 22:53 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:53 - INFO - 	 PR-AUC: 0.833
2024-10-13 22:53 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 22:53 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 22:53 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:53 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-13 22:53 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:53 - INFO - ---------------------------------------------
2024-10-13 22:53 - INFO - ---------------------------------------------
2024-10-13 22:53 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 22:53 - INFO - 	 Train Loss: 0.086
2024-10-13 22:53 - INFO - 	 Val. Loss: 0.083
2024-10-13 22:53 - INFO - 	 ROC-AUC: 0.978
2024-10-13 22:53 - INFO - 	 PR-AUC: 0.803
2024-10-13 22:53 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 22:53 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 22:53 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:53 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-13 22:53 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:53 - INFO - ---------------------------------------------
2024-10-13 22:54 - INFO - ---------------------------------------------
2024-10-13 22:54 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 22:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98141
2024-10-13 22:54 - INFO - 	 Train Loss: 0.086
2024-10-13 22:54 - INFO - 	 Val. Loss: 0.075
2024-10-13 22:54 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:54 - INFO - 	 PR-AUC: 0.848
2024-10-13 22:54 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 22:54 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 22:54 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:54 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 22:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 22:54 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:54 - INFO - ---------------------------------------------
2024-10-13 22:54 - INFO - ---------------------------------------------
2024-10-13 22:54 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 22:54 - INFO - 	 Train Loss: 0.083
2024-10-13 22:54 - INFO - 	 Val. Loss: 0.075
2024-10-13 22:54 - INFO - 	 ROC-AUC: 0.981
2024-10-13 22:54 - INFO - 	 PR-AUC: 0.822
2024-10-13 22:54 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-13 22:54 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 22:54 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 22:54 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 22:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 22:54 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:54 - INFO - ---------------------------------------------
2024-10-13 22:55 - INFO - ---------------------------------------------
2024-10-13 22:55 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 22:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98156
2024-10-13 22:55 - INFO - 	 Train Loss: 0.082
2024-10-13 22:55 - INFO - 	 Val. Loss: 0.074
2024-10-13 22:55 - INFO - 	 ROC-AUC: 0.982
2024-10-13 22:55 - INFO - 	 PR-AUC: 0.846
2024-10-13 22:55 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 22:55 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 22:55 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 22:55 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 22:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 22:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 22:55 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 22:55 - INFO - ---------------------------------------------
2024-10-13 22:56 - INFO - Fit the preprocessing pipeline
2024-10-13 22:56 - INFO - Training using device: cuda
2024-10-13 22:56 - INFO - Creating generators
2024-10-13 22:56 - INFO - The model has 651,257 trainable parameters
2024-10-13 22:56 - INFO - * Model:
2024-10-13 22:56 - INFO - * -----------
2024-10-13 22:56 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 22:56 - INFO - * -----------
2024-10-13 22:56 - INFO - Evaluating model based on: rocauc
2024-10-13 22:56 - INFO - Training..

2024-10-13 22:57 - INFO - ---------------------------------------------
2024-10-13 22:57 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 22:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96168
2024-10-13 22:57 - INFO - 	 Train Loss: 0.204
2024-10-13 22:57 - INFO - 	 Val. Loss: 0.117
2024-10-13 22:57 - INFO - 	 ROC-AUC: 0.962
2024-10-13 22:57 - INFO - 	 PR-AUC: 0.628
2024-10-13 22:57 - INFO - 	 Recall for 0.4 precision: 0.913
2024-10-13 22:57 - INFO - 	 Best Val. Loss: 0.117
2024-10-13 22:57 - INFO - 	 Best ROC-AUC: 0.962
2024-10-13 22:57 - INFO - 	 Best PR-AUC: 0.628
2024-10-13 22:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-13 22:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.650
2024-10-13 22:57 - INFO - 	 Best Recall for 0.4 precision: 0.913
2024-10-13 22:57 - INFO - ---------------------------------------------
2024-10-13 22:57 - INFO - ---------------------------------------------
2024-10-13 22:57 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 22:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97035
2024-10-13 22:57 - INFO - 	 Train Loss: 0.114
2024-10-13 22:57 - INFO - 	 Val. Loss: 0.101
2024-10-13 22:57 - INFO - 	 ROC-AUC: 0.970
2024-10-13 22:57 - INFO - 	 PR-AUC: 0.712
2024-10-13 22:57 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-13 22:57 - INFO - 	 Best Val. Loss: 0.101
2024-10-13 22:57 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 22:57 - INFO - 	 Best PR-AUC: 0.712
2024-10-13 22:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 22:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.705
2024-10-13 22:57 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-13 22:57 - INFO - ---------------------------------------------
2024-10-13 22:58 - INFO - ---------------------------------------------
2024-10-13 22:58 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 22:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97346
2024-10-13 22:58 - INFO - 	 Train Loss: 0.102
2024-10-13 22:58 - INFO - 	 Val. Loss: 0.093
2024-10-13 22:58 - INFO - 	 ROC-AUC: 0.973
2024-10-13 22:58 - INFO - 	 PR-AUC: 0.771
2024-10-13 22:58 - INFO - 	 Recall for 0.4 precision: 0.953
2024-10-13 22:58 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 22:58 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 22:58 - INFO - 	 Best PR-AUC: 0.771
2024-10-13 22:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 22:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.740
2024-10-13 22:58 - INFO - 	 Best Recall for 0.4 precision: 0.953
2024-10-13 22:58 - INFO - ---------------------------------------------
2024-10-13 22:59 - INFO - ---------------------------------------------
2024-10-13 22:59 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 22:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97412
2024-10-13 22:59 - INFO - 	 Train Loss: 0.095
2024-10-13 22:59 - INFO - 	 Val. Loss: 0.090
2024-10-13 22:59 - INFO - 	 ROC-AUC: 0.974
2024-10-13 22:59 - INFO - 	 PR-AUC: 0.780
2024-10-13 22:59 - INFO - 	 Recall for 0.4 precision: 0.957
2024-10-13 22:59 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 22:59 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 22:59 - INFO - 	 Best PR-AUC: 0.780
2024-10-13 22:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-13 22:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.756
2024-10-13 22:59 - INFO - 	 Best Recall for 0.4 precision: 0.957
2024-10-13 22:59 - INFO - ---------------------------------------------
2024-10-13 22:59 - INFO - ---------------------------------------------
2024-10-13 22:59 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 22:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97862
2024-10-13 22:59 - INFO - 	 Train Loss: 0.093
2024-10-13 22:59 - INFO - 	 Val. Loss: 0.083
2024-10-13 22:59 - INFO - 	 ROC-AUC: 0.979
2024-10-13 22:59 - INFO - 	 PR-AUC: 0.817
2024-10-13 22:59 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 22:59 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 22:59 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 22:59 - INFO - 	 Best PR-AUC: 0.817
2024-10-13 22:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 22:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.792
2024-10-13 22:59 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 22:59 - INFO - ---------------------------------------------
2024-10-13 23:00 - INFO - ---------------------------------------------
2024-10-13 23:00 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 23:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97922
2024-10-13 23:00 - INFO - 	 Train Loss: 0.089
2024-10-13 23:00 - INFO - 	 Val. Loss: 0.084
2024-10-13 23:00 - INFO - 	 ROC-AUC: 0.979
2024-10-13 23:00 - INFO - 	 PR-AUC: 0.820
2024-10-13 23:00 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:00 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 23:00 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 23:00 - INFO - 	 Best PR-AUC: 0.820
2024-10-13 23:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-13 23:00 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 23:00 - INFO - ---------------------------------------------
2024-10-13 23:00 - INFO - ---------------------------------------------
2024-10-13 23:00 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 23:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98257
2024-10-13 23:00 - INFO - 	 Train Loss: 0.087
2024-10-13 23:00 - INFO - 	 Val. Loss: 0.073
2024-10-13 23:00 - INFO - 	 ROC-AUC: 0.983
2024-10-13 23:00 - INFO - 	 PR-AUC: 0.829
2024-10-13 23:00 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 23:00 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 23:00 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 23:00 - INFO - 	 Best PR-AUC: 0.829
2024-10-13 23:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 23:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 23:00 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:00 - INFO - ---------------------------------------------
2024-10-13 23:01 - INFO - ---------------------------------------------
2024-10-13 23:01 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 23:01 - INFO - 	 Train Loss: 0.085
2024-10-13 23:01 - INFO - 	 Val. Loss: 0.077
2024-10-13 23:01 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:01 - INFO - 	 PR-AUC: 0.829
2024-10-13 23:01 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 23:01 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 23:01 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 23:01 - INFO - 	 Best PR-AUC: 0.829
2024-10-13 23:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 23:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-13 23:01 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:01 - INFO - ---------------------------------------------
2024-10-13 23:01 - INFO - ---------------------------------------------
2024-10-13 23:01 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 23:01 - INFO - 	 Train Loss: 0.085
2024-10-13 23:01 - INFO - 	 Val. Loss: 0.076
2024-10-13 23:01 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:01 - INFO - 	 PR-AUC: 0.831
2024-10-13 23:01 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 23:01 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 23:01 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 23:01 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 23:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 23:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 23:01 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:01 - INFO - ---------------------------------------------
2024-10-13 23:02 - INFO - ---------------------------------------------
2024-10-13 23:02 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 23:02 - INFO - 	 Train Loss: 0.084
2024-10-13 23:02 - INFO - 	 Val. Loss: 0.075
2024-10-13 23:02 - INFO - 	 ROC-AUC: 0.982
2024-10-13 23:02 - INFO - 	 PR-AUC: 0.818
2024-10-13 23:02 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 23:02 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 23:02 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 23:02 - INFO - 	 Best PR-AUC: 0.831
2024-10-13 23:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 23:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-13 23:02 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 23:02 - INFO - ---------------------------------------------
2024-10-13 23:03 - INFO - Fit the preprocessing pipeline
2024-10-13 23:03 - INFO - Training using device: cuda
2024-10-13 23:03 - INFO - Creating generators
2024-10-13 23:03 - INFO - The model has 651,257 trainable parameters
2024-10-13 23:03 - INFO - * Model:
2024-10-13 23:03 - INFO - * -----------
2024-10-13 23:03 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 23:03 - INFO - * -----------
2024-10-13 23:03 - INFO - Evaluating model based on: rocauc
2024-10-13 23:03 - INFO - Training..

2024-10-13 23:04 - INFO - ---------------------------------------------
2024-10-13 23:04 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-13 23:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95764
2024-10-13 23:04 - INFO - 	 Train Loss: 0.210
2024-10-13 23:04 - INFO - 	 Val. Loss: 0.117
2024-10-13 23:04 - INFO - 	 ROC-AUC: 0.958
2024-10-13 23:04 - INFO - 	 PR-AUC: 0.636
2024-10-13 23:04 - INFO - 	 Recall for 0.4 precision: 0.900
2024-10-13 23:04 - INFO - 	 Best Val. Loss: 0.117
2024-10-13 23:04 - INFO - 	 Best ROC-AUC: 0.958
2024-10-13 23:04 - INFO - 	 Best PR-AUC: 0.636
2024-10-13 23:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-10-13 23:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-10-13 23:04 - INFO - 	 Best Recall for 0.4 precision: 0.900
2024-10-13 23:04 - INFO - ---------------------------------------------
2024-10-13 23:04 - INFO - ---------------------------------------------
2024-10-13 23:04 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 23:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96974
2024-10-13 23:04 - INFO - 	 Train Loss: 0.117
2024-10-13 23:04 - INFO - 	 Val. Loss: 0.108
2024-10-13 23:04 - INFO - 	 ROC-AUC: 0.970
2024-10-13 23:04 - INFO - 	 PR-AUC: 0.746
2024-10-13 23:04 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-13 23:04 - INFO - 	 Best Val. Loss: 0.108
2024-10-13 23:04 - INFO - 	 Best ROC-AUC: 0.970
2024-10-13 23:04 - INFO - 	 Best PR-AUC: 0.746
2024-10-13 23:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-13 23:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.709
2024-10-13 23:04 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-13 23:04 - INFO - ---------------------------------------------
2024-10-13 23:05 - INFO - ---------------------------------------------
2024-10-13 23:05 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 23:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97634
2024-10-13 23:05 - INFO - 	 Train Loss: 0.101
2024-10-13 23:05 - INFO - 	 Val. Loss: 0.089
2024-10-13 23:05 - INFO - 	 ROC-AUC: 0.976
2024-10-13 23:05 - INFO - 	 PR-AUC: 0.806
2024-10-13 23:05 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 23:05 - INFO - 	 Best Val. Loss: 0.089
2024-10-13 23:05 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 23:05 - INFO - 	 Best PR-AUC: 0.806
2024-10-13 23:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 23:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-10-13 23:05 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 23:05 - INFO - ---------------------------------------------
2024-10-13 23:05 - INFO - ---------------------------------------------
2024-10-13 23:05 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 23:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97725
2024-10-13 23:05 - INFO - 	 Train Loss: 0.097
2024-10-13 23:05 - INFO - 	 Val. Loss: 0.083
2024-10-13 23:05 - INFO - 	 ROC-AUC: 0.977
2024-10-13 23:05 - INFO - 	 PR-AUC: 0.793
2024-10-13 23:05 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 23:05 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 23:05 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 23:05 - INFO - 	 Best PR-AUC: 0.806
2024-10-13 23:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 23:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-10-13 23:05 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 23:05 - INFO - ---------------------------------------------
2024-10-13 23:06 - INFO - ---------------------------------------------
2024-10-13 23:06 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 23:06 - INFO - 	 Train Loss: 0.090
2024-10-13 23:06 - INFO - 	 Val. Loss: 0.087
2024-10-13 23:06 - INFO - 	 ROC-AUC: 0.975
2024-10-13 23:06 - INFO - 	 PR-AUC: 0.801
2024-10-13 23:06 - INFO - 	 Recall for 0.4 precision: 0.962
2024-10-13 23:06 - INFO - 	 Best Val. Loss: 0.083
2024-10-13 23:06 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 23:06 - INFO - 	 Best PR-AUC: 0.806
2024-10-13 23:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 23:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-10-13 23:06 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 23:06 - INFO - ---------------------------------------------
2024-10-13 23:07 - INFO - ---------------------------------------------
2024-10-13 23:07 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 23:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97955
2024-10-13 23:07 - INFO - 	 Train Loss: 0.089
2024-10-13 23:07 - INFO - 	 Val. Loss: 0.081
2024-10-13 23:07 - INFO - 	 ROC-AUC: 0.980
2024-10-13 23:07 - INFO - 	 PR-AUC: 0.805
2024-10-13 23:07 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:07 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 23:07 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 23:07 - INFO - 	 Best PR-AUC: 0.806
2024-10-13 23:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-10-13 23:07 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 23:07 - INFO - ---------------------------------------------
2024-10-13 23:07 - INFO - ---------------------------------------------
2024-10-13 23:07 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 23:07 - INFO - 	 Train Loss: 0.087
2024-10-13 23:07 - INFO - 	 Val. Loss: 0.085
2024-10-13 23:07 - INFO - 	 ROC-AUC: 0.979
2024-10-13 23:07 - INFO - 	 PR-AUC: 0.813
2024-10-13 23:07 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 23:07 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 23:07 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 23:07 - INFO - 	 Best PR-AUC: 0.813
2024-10-13 23:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-13 23:07 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 23:07 - INFO - ---------------------------------------------
2024-10-13 23:08 - INFO - ---------------------------------------------
2024-10-13 23:08 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 23:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98021
2024-10-13 23:08 - INFO - 	 Train Loss: 0.086
2024-10-13 23:08 - INFO - 	 Val. Loss: 0.079
2024-10-13 23:08 - INFO - 	 ROC-AUC: 0.980
2024-10-13 23:08 - INFO - 	 PR-AUC: 0.832
2024-10-13 23:08 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 23:08 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 23:08 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 23:08 - INFO - 	 Best PR-AUC: 0.832
2024-10-13 23:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-13 23:08 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 23:08 - INFO - ---------------------------------------------
2024-10-13 23:08 - INFO - ---------------------------------------------
2024-10-13 23:08 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 23:08 - INFO - 	 Train Loss: 0.083
2024-10-13 23:08 - INFO - 	 Val. Loss: 0.084
2024-10-13 23:08 - INFO - 	 ROC-AUC: 0.980
2024-10-13 23:08 - INFO - 	 PR-AUC: 0.831
2024-10-13 23:08 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 23:08 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 23:08 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 23:08 - INFO - 	 Best PR-AUC: 0.832
2024-10-13 23:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-13 23:08 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 23:08 - INFO - ---------------------------------------------
2024-10-13 23:09 - INFO - ---------------------------------------------
2024-10-13 23:09 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 23:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98227
2024-10-13 23:09 - INFO - 	 Train Loss: 0.083
2024-10-13 23:09 - INFO - 	 Val. Loss: 0.075
2024-10-13 23:09 - INFO - 	 ROC-AUC: 0.982
2024-10-13 23:09 - INFO - 	 PR-AUC: 0.845
2024-10-13 23:09 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 23:09 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 23:09 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 23:09 - INFO - 	 Best PR-AUC: 0.845
2024-10-13 23:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-13 23:09 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:09 - INFO - ---------------------------------------------
2024-10-13 23:10 - INFO - Fit the preprocessing pipeline
2024-10-13 23:10 - INFO - Training using device: cuda
2024-10-13 23:10 - INFO - Creating generators
2024-10-13 23:10 - INFO - The model has 651,257 trainable parameters
2024-10-13 23:10 - INFO - * Model:
2024-10-13 23:10 - INFO - * -----------
2024-10-13 23:10 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 23:10 - INFO - * -----------
2024-10-13 23:10 - INFO - Evaluating model based on: rocauc
2024-10-13 23:10 - INFO - Training..

2024-10-13 23:11 - INFO - ---------------------------------------------
2024-10-13 23:11 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 23:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94952
2024-10-13 23:11 - INFO - 	 Train Loss: 0.218
2024-10-13 23:11 - INFO - 	 Val. Loss: 0.132
2024-10-13 23:11 - INFO - 	 ROC-AUC: 0.950
2024-10-13 23:11 - INFO - 	 PR-AUC: 0.575
2024-10-13 23:11 - INFO - 	 Recall for 0.4 precision: 0.866
2024-10-13 23:11 - INFO - 	 Best Val. Loss: 0.132
2024-10-13 23:11 - INFO - 	 Best ROC-AUC: 0.950
2024-10-13 23:11 - INFO - 	 Best PR-AUC: 0.575
2024-10-13 23:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-10-13 23:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.610
2024-10-13 23:11 - INFO - 	 Best Recall for 0.4 precision: 0.866
2024-10-13 23:11 - INFO - ---------------------------------------------
2024-10-13 23:11 - INFO - ---------------------------------------------
2024-10-13 23:11 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 23:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96676
2024-10-13 23:11 - INFO - 	 Train Loss: 0.119
2024-10-13 23:11 - INFO - 	 Val. Loss: 0.144
2024-10-13 23:11 - INFO - 	 ROC-AUC: 0.967
2024-10-13 23:11 - INFO - 	 PR-AUC: 0.720
2024-10-13 23:11 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-13 23:11 - INFO - 	 Best Val. Loss: 0.132
2024-10-13 23:11 - INFO - 	 Best ROC-AUC: 0.967
2024-10-13 23:11 - INFO - 	 Best PR-AUC: 0.720
2024-10-13 23:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-13 23:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.690
2024-10-13 23:11 - INFO - 	 Best Recall for 0.4 precision: 0.938
2024-10-13 23:11 - INFO - ---------------------------------------------
2024-10-13 23:12 - INFO - ---------------------------------------------
2024-10-13 23:12 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 23:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9735
2024-10-13 23:12 - INFO - 	 Train Loss: 0.100
2024-10-13 23:12 - INFO - 	 Val. Loss: 0.093
2024-10-13 23:12 - INFO - 	 ROC-AUC: 0.973
2024-10-13 23:12 - INFO - 	 PR-AUC: 0.767
2024-10-13 23:12 - INFO - 	 Recall for 0.4 precision: 0.957
2024-10-13 23:12 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 23:12 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 23:12 - INFO - 	 Best PR-AUC: 0.767
2024-10-13 23:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-13 23:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.757
2024-10-13 23:12 - INFO - 	 Best Recall for 0.4 precision: 0.957
2024-10-13 23:12 - INFO - ---------------------------------------------
2024-10-13 23:12 - INFO - ---------------------------------------------
2024-10-13 23:12 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-13 23:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98008
2024-10-13 23:12 - INFO - 	 Train Loss: 0.097
2024-10-13 23:12 - INFO - 	 Val. Loss: 0.080
2024-10-13 23:12 - INFO - 	 ROC-AUC: 0.980
2024-10-13 23:12 - INFO - 	 PR-AUC: 0.814
2024-10-13 23:12 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:12 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 23:12 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 23:12 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 23:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-13 23:12 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 23:12 - INFO - ---------------------------------------------
2024-10-13 23:13 - INFO - ---------------------------------------------
2024-10-13 23:13 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-13 23:13 - INFO - 	 Train Loss: 0.090
2024-10-13 23:13 - INFO - 	 Val. Loss: 0.097
2024-10-13 23:13 - INFO - 	 ROC-AUC: 0.978
2024-10-13 23:13 - INFO - 	 PR-AUC: 0.811
2024-10-13 23:13 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 23:13 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 23:13 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 23:13 - INFO - 	 Best PR-AUC: 0.814
2024-10-13 23:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-13 23:13 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 23:13 - INFO - ---------------------------------------------
2024-10-13 23:13 - INFO - ---------------------------------------------
2024-10-13 23:13 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-13 23:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98136
2024-10-13 23:13 - INFO - 	 Train Loss: 0.089
2024-10-13 23:13 - INFO - 	 Val. Loss: 0.076
2024-10-13 23:13 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:13 - INFO - 	 PR-AUC: 0.826
2024-10-13 23:13 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:13 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 23:13 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 23:13 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 23:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 23:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-13 23:13 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 23:13 - INFO - ---------------------------------------------
2024-10-13 23:14 - INFO - ---------------------------------------------
2024-10-13 23:14 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-13 23:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98174
2024-10-13 23:14 - INFO - 	 Train Loss: 0.086
2024-10-13 23:14 - INFO - 	 Val. Loss: 0.075
2024-10-13 23:14 - INFO - 	 ROC-AUC: 0.982
2024-10-13 23:14 - INFO - 	 PR-AUC: 0.838
2024-10-13 23:14 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 23:14 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 23:14 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 23:14 - INFO - 	 Best PR-AUC: 0.838
2024-10-13 23:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 23:14 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-13 23:14 - INFO - ---------------------------------------------
2024-10-13 23:14 - INFO - ---------------------------------------------
2024-10-13 23:14 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-13 23:14 - INFO - 	 Train Loss: 0.086
2024-10-13 23:14 - INFO - 	 Val. Loss: 0.078
2024-10-13 23:14 - INFO - 	 ROC-AUC: 0.980
2024-10-13 23:14 - INFO - 	 PR-AUC: 0.826
2024-10-13 23:14 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 23:14 - INFO - 	 Best Val. Loss: 0.075
2024-10-13 23:14 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 23:14 - INFO - 	 Best PR-AUC: 0.838
2024-10-13 23:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 23:14 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 23:14 - INFO - ---------------------------------------------
2024-10-13 23:15 - INFO - ---------------------------------------------
2024-10-13 23:15 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 23:15 - INFO - 	 Train Loss: 0.084
2024-10-13 23:15 - INFO - 	 Val. Loss: 0.074
2024-10-13 23:15 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:15 - INFO - 	 PR-AUC: 0.839
2024-10-13 23:15 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 23:15 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 23:15 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 23:15 - INFO - 	 Best PR-AUC: 0.839
2024-10-13 23:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 23:15 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 23:15 - INFO - ---------------------------------------------
2024-10-13 23:15 - INFO - ---------------------------------------------
2024-10-13 23:15 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-13 23:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98238
2024-10-13 23:15 - INFO - 	 Train Loss: 0.083
2024-10-13 23:15 - INFO - 	 Val. Loss: 0.073
2024-10-13 23:15 - INFO - 	 ROC-AUC: 0.982
2024-10-13 23:15 - INFO - 	 PR-AUC: 0.848
2024-10-13 23:15 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 23:15 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 23:15 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 23:15 - INFO - 	 Best PR-AUC: 0.848
2024-10-13 23:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 23:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-13 23:15 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 23:15 - INFO - ---------------------------------------------
2024-10-13 23:17 - INFO - Fit the preprocessing pipeline
2024-10-13 23:17 - INFO - Training using device: cuda
2024-10-13 23:17 - INFO - Creating generators
2024-10-13 23:17 - INFO - The model has 651,257 trainable parameters
2024-10-13 23:17 - INFO - * Model:
2024-10-13 23:17 - INFO - * -----------
2024-10-13 23:17 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 23:17 - INFO - * -----------
2024-10-13 23:17 - INFO - Evaluating model based on: rocauc
2024-10-13 23:17 - INFO - Training..

2024-10-13 23:18 - INFO - ---------------------------------------------
2024-10-13 23:18 - INFO - Epoch: 01 | Time: 0m 33s
2024-10-13 23:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9633
2024-10-13 23:18 - INFO - 	 Train Loss: 0.196
2024-10-13 23:18 - INFO - 	 Val. Loss: 0.109
2024-10-13 23:18 - INFO - 	 ROC-AUC: 0.963
2024-10-13 23:18 - INFO - 	 PR-AUC: 0.678
2024-10-13 23:18 - INFO - 	 Recall for 0.4 precision: 0.925
2024-10-13 23:18 - INFO - 	 Best Val. Loss: 0.109
2024-10-13 23:18 - INFO - 	 Best ROC-AUC: 0.963
2024-10-13 23:18 - INFO - 	 Best PR-AUC: 0.678
2024-10-13 23:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-13 23:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.669
2024-10-13 23:18 - INFO - 	 Best Recall for 0.4 precision: 0.925
2024-10-13 23:18 - INFO - ---------------------------------------------
2024-10-13 23:18 - INFO - ---------------------------------------------
2024-10-13 23:18 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-13 23:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97198
2024-10-13 23:18 - INFO - 	 Train Loss: 0.112
2024-10-13 23:18 - INFO - 	 Val. Loss: 0.093
2024-10-13 23:18 - INFO - 	 ROC-AUC: 0.972
2024-10-13 23:18 - INFO - 	 PR-AUC: 0.761
2024-10-13 23:18 - INFO - 	 Recall for 0.4 precision: 0.955
2024-10-13 23:18 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 23:18 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 23:18 - INFO - 	 Best PR-AUC: 0.761
2024-10-13 23:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 23:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-10-13 23:18 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-13 23:18 - INFO - ---------------------------------------------
2024-10-13 23:19 - INFO - ---------------------------------------------
2024-10-13 23:19 - INFO - Epoch: 03 | Time: 0m 33s
2024-10-13 23:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97582
2024-10-13 23:19 - INFO - 	 Train Loss: 0.101
2024-10-13 23:19 - INFO - 	 Val. Loss: 0.087
2024-10-13 23:19 - INFO - 	 ROC-AUC: 0.976
2024-10-13 23:19 - INFO - 	 PR-AUC: 0.764
2024-10-13 23:19 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-13 23:19 - INFO - 	 Best Val. Loss: 0.087
2024-10-13 23:19 - INFO - 	 Best ROC-AUC: 0.976
2024-10-13 23:19 - INFO - 	 Best PR-AUC: 0.764
2024-10-13 23:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 23:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-10-13 23:19 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 23:19 - INFO - ---------------------------------------------
2024-10-13 23:19 - INFO - ---------------------------------------------
2024-10-13 23:19 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 23:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97917
2024-10-13 23:19 - INFO - 	 Train Loss: 0.096
2024-10-13 23:19 - INFO - 	 Val. Loss: 0.081
2024-10-13 23:19 - INFO - 	 ROC-AUC: 0.979
2024-10-13 23:19 - INFO - 	 PR-AUC: 0.805
2024-10-13 23:19 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 23:19 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 23:19 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 23:19 - INFO - 	 Best PR-AUC: 0.805
2024-10-13 23:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 23:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.780
2024-10-13 23:19 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-13 23:19 - INFO - ---------------------------------------------
2024-10-13 23:20 - INFO - ---------------------------------------------
2024-10-13 23:20 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 23:20 - INFO - 	 Train Loss: 0.091
2024-10-13 23:20 - INFO - 	 Val. Loss: 0.088
2024-10-13 23:20 - INFO - 	 ROC-AUC: 0.979
2024-10-13 23:20 - INFO - 	 PR-AUC: 0.823
2024-10-13 23:20 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 23:20 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 23:20 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 23:20 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 23:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 23:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-13 23:20 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 23:20 - INFO - ---------------------------------------------
2024-10-13 23:20 - INFO - ---------------------------------------------
2024-10-13 23:20 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 23:20 - INFO - 	 Train Loss: 0.088
2024-10-13 23:20 - INFO - 	 Val. Loss: 0.087
2024-10-13 23:20 - INFO - 	 ROC-AUC: 0.977
2024-10-13 23:20 - INFO - 	 PR-AUC: 0.781
2024-10-13 23:20 - INFO - 	 Recall for 0.4 precision: 0.962
2024-10-13 23:20 - INFO - 	 Best Val. Loss: 0.081
2024-10-13 23:20 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 23:20 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 23:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 23:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-13 23:20 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 23:20 - INFO - ---------------------------------------------
2024-10-13 23:21 - INFO - ---------------------------------------------
2024-10-13 23:21 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 23:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97965
2024-10-13 23:21 - INFO - 	 Train Loss: 0.086
2024-10-13 23:21 - INFO - 	 Val. Loss: 0.079
2024-10-13 23:21 - INFO - 	 ROC-AUC: 0.980
2024-10-13 23:21 - INFO - 	 PR-AUC: 0.815
2024-10-13 23:21 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 23:21 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 23:21 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 23:21 - INFO - 	 Best PR-AUC: 0.823
2024-10-13 23:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 23:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-13 23:21 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-13 23:21 - INFO - ---------------------------------------------
2024-10-13 23:21 - INFO - ---------------------------------------------
2024-10-13 23:21 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 23:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9814
2024-10-13 23:21 - INFO - 	 Train Loss: 0.085
2024-10-13 23:21 - INFO - 	 Val. Loss: 0.082
2024-10-13 23:21 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:21 - INFO - 	 PR-AUC: 0.828
2024-10-13 23:21 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 23:21 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 23:21 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 23:21 - INFO - 	 Best PR-AUC: 0.828
2024-10-13 23:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-13 23:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-13 23:21 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:21 - INFO - ---------------------------------------------
2024-10-13 23:22 - INFO - ---------------------------------------------
2024-10-13 23:22 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 23:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98176
2024-10-13 23:22 - INFO - 	 Train Loss: 0.083
2024-10-13 23:22 - INFO - 	 Val. Loss: 0.077
2024-10-13 23:22 - INFO - 	 ROC-AUC: 0.982
2024-10-13 23:22 - INFO - 	 PR-AUC: 0.823
2024-10-13 23:22 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:22 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 23:22 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 23:22 - INFO - 	 Best PR-AUC: 0.828
2024-10-13 23:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 23:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-13 23:22 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:22 - INFO - ---------------------------------------------
2024-10-13 23:22 - INFO - ---------------------------------------------
2024-10-13 23:22 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 23:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98242
2024-10-13 23:22 - INFO - 	 Train Loss: 0.083
2024-10-13 23:22 - INFO - 	 Val. Loss: 0.073
2024-10-13 23:22 - INFO - 	 ROC-AUC: 0.982
2024-10-13 23:22 - INFO - 	 PR-AUC: 0.845
2024-10-13 23:22 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-13 23:22 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 23:22 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 23:22 - INFO - 	 Best PR-AUC: 0.845
2024-10-13 23:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-13 23:22 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:22 - INFO - ---------------------------------------------
2024-10-13 23:24 - INFO - Fit the preprocessing pipeline
2024-10-13 23:24 - INFO - Training using device: cuda
2024-10-13 23:24 - INFO - Creating generators
2024-10-13 23:24 - INFO - The model has 651,257 trainable parameters
2024-10-13 23:24 - INFO - * Model:
2024-10-13 23:24 - INFO - * -----------
2024-10-13 23:24 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 23:24 - INFO - * -----------
2024-10-13 23:24 - INFO - Evaluating model based on: rocauc
2024-10-13 23:24 - INFO - Training..

2024-10-13 23:25 - INFO - ---------------------------------------------
2024-10-13 23:25 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 23:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95939
2024-10-13 23:25 - INFO - 	 Train Loss: 0.201
2024-10-13 23:25 - INFO - 	 Val. Loss: 0.115
2024-10-13 23:25 - INFO - 	 ROC-AUC: 0.959
2024-10-13 23:25 - INFO - 	 PR-AUC: 0.638
2024-10-13 23:25 - INFO - 	 Recall for 0.4 precision: 0.902
2024-10-13 23:25 - INFO - 	 Best Val. Loss: 0.115
2024-10-13 23:25 - INFO - 	 Best ROC-AUC: 0.959
2024-10-13 23:25 - INFO - 	 Best PR-AUC: 0.638
2024-10-13 23:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-13 23:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.632
2024-10-13 23:25 - INFO - 	 Best Recall for 0.4 precision: 0.902
2024-10-13 23:25 - INFO - ---------------------------------------------
2024-10-13 23:25 - INFO - ---------------------------------------------
2024-10-13 23:25 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 23:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97369
2024-10-13 23:25 - INFO - 	 Train Loss: 0.115
2024-10-13 23:25 - INFO - 	 Val. Loss: 0.093
2024-10-13 23:25 - INFO - 	 ROC-AUC: 0.974
2024-10-13 23:25 - INFO - 	 PR-AUC: 0.767
2024-10-13 23:25 - INFO - 	 Recall for 0.4 precision: 0.956
2024-10-13 23:25 - INFO - 	 Best Val. Loss: 0.093
2024-10-13 23:25 - INFO - 	 Best ROC-AUC: 0.974
2024-10-13 23:25 - INFO - 	 Best PR-AUC: 0.767
2024-10-13 23:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-13 23:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.748
2024-10-13 23:25 - INFO - 	 Best Recall for 0.4 precision: 0.956
2024-10-13 23:25 - INFO - ---------------------------------------------
2024-10-13 23:26 - INFO - ---------------------------------------------
2024-10-13 23:26 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 23:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97674
2024-10-13 23:26 - INFO - 	 Train Loss: 0.103
2024-10-13 23:26 - INFO - 	 Val. Loss: 0.086
2024-10-13 23:26 - INFO - 	 ROC-AUC: 0.977
2024-10-13 23:26 - INFO - 	 PR-AUC: 0.802
2024-10-13 23:26 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-13 23:26 - INFO - 	 Best Val. Loss: 0.086
2024-10-13 23:26 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 23:26 - INFO - 	 Best PR-AUC: 0.802
2024-10-13 23:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 23:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-13 23:26 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-13 23:26 - INFO - ---------------------------------------------
2024-10-13 23:26 - INFO - ---------------------------------------------
2024-10-13 23:26 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 23:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97864
2024-10-13 23:26 - INFO - 	 Train Loss: 0.094
2024-10-13 23:26 - INFO - 	 Val. Loss: 0.080
2024-10-13 23:26 - INFO - 	 ROC-AUC: 0.979
2024-10-13 23:26 - INFO - 	 PR-AUC: 0.820
2024-10-13 23:26 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:26 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 23:26 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 23:26 - INFO - 	 Best PR-AUC: 0.820
2024-10-13 23:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 23:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 23:26 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 23:26 - INFO - ---------------------------------------------
2024-10-13 23:27 - INFO - ---------------------------------------------
2024-10-13 23:27 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 23:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97967
2024-10-13 23:27 - INFO - 	 Train Loss: 0.090
2024-10-13 23:27 - INFO - 	 Val. Loss: 0.080
2024-10-13 23:27 - INFO - 	 ROC-AUC: 0.980
2024-10-13 23:27 - INFO - 	 PR-AUC: 0.820
2024-10-13 23:27 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 23:27 - INFO - 	 Best Val. Loss: 0.080
2024-10-13 23:27 - INFO - 	 Best ROC-AUC: 0.980
2024-10-13 23:27 - INFO - 	 Best PR-AUC: 0.820
2024-10-13 23:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-13 23:27 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-13 23:27 - INFO - ---------------------------------------------
2024-10-13 23:27 - INFO - ---------------------------------------------
2024-10-13 23:27 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 23:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98157
2024-10-13 23:27 - INFO - 	 Train Loss: 0.088
2024-10-13 23:27 - INFO - 	 Val. Loss: 0.077
2024-10-13 23:27 - INFO - 	 ROC-AUC: 0.982
2024-10-13 23:27 - INFO - 	 PR-AUC: 0.826
2024-10-13 23:27 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 23:27 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 23:27 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 23:27 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 23:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 23:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-13 23:27 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 23:27 - INFO - ---------------------------------------------
2024-10-13 23:28 - INFO - ---------------------------------------------
2024-10-13 23:28 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 23:28 - INFO - 	 Train Loss: 0.086
2024-10-13 23:28 - INFO - 	 Val. Loss: 0.078
2024-10-13 23:28 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:28 - INFO - 	 PR-AUC: 0.827
2024-10-13 23:28 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:28 - INFO - 	 Best Val. Loss: 0.077
2024-10-13 23:28 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 23:28 - INFO - 	 Best PR-AUC: 0.827
2024-10-13 23:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-13 23:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-13 23:28 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 23:28 - INFO - ---------------------------------------------
2024-10-13 23:28 - INFO - ---------------------------------------------
2024-10-13 23:28 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 23:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9837
2024-10-13 23:28 - INFO - 	 Train Loss: 0.085
2024-10-13 23:28 - INFO - 	 Val. Loss: 0.073
2024-10-13 23:28 - INFO - 	 ROC-AUC: 0.984
2024-10-13 23:28 - INFO - 	 PR-AUC: 0.856
2024-10-13 23:28 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 23:28 - INFO - 	 Best Val. Loss: 0.073
2024-10-13 23:28 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 23:28 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 23:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 23:28 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 23:28 - INFO - ---------------------------------------------
2024-10-13 23:29 - INFO - ---------------------------------------------
2024-10-13 23:29 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-13 23:29 - INFO - 	 Train Loss: 0.083
2024-10-13 23:29 - INFO - 	 Val. Loss: 0.072
2024-10-13 23:29 - INFO - 	 ROC-AUC: 0.982
2024-10-13 23:29 - INFO - 	 PR-AUC: 0.850
2024-10-13 23:29 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 23:29 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 23:29 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 23:29 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 23:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 23:29 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 23:29 - INFO - ---------------------------------------------
2024-10-13 23:29 - INFO - ---------------------------------------------
2024-10-13 23:29 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 23:29 - INFO - 	 Train Loss: 0.081
2024-10-13 23:29 - INFO - 	 Val. Loss: 0.075
2024-10-13 23:29 - INFO - 	 ROC-AUC: 0.982
2024-10-13 23:29 - INFO - 	 PR-AUC: 0.831
2024-10-13 23:29 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-13 23:29 - INFO - 	 Best Val. Loss: 0.072
2024-10-13 23:29 - INFO - 	 Best ROC-AUC: 0.984
2024-10-13 23:29 - INFO - 	 Best PR-AUC: 0.856
2024-10-13 23:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-13 23:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-13 23:29 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 23:29 - INFO - ---------------------------------------------
2024-10-13 23:31 - INFO - Fit the preprocessing pipeline
2024-10-13 23:31 - INFO - Training using device: cuda
2024-10-13 23:31 - INFO - Creating generators
2024-10-13 23:31 - INFO - The model has 651,257 trainable parameters
2024-10-13 23:31 - INFO - * Model:
2024-10-13 23:31 - INFO - * -----------
2024-10-13 23:31 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 23:31 - INFO - * -----------
2024-10-13 23:31 - INFO - Evaluating model based on: rocauc
2024-10-13 23:31 - INFO - Training..

2024-10-13 23:31 - INFO - ---------------------------------------------
2024-10-13 23:31 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 23:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95384
2024-10-13 23:31 - INFO - 	 Train Loss: 0.206
2024-10-13 23:31 - INFO - 	 Val. Loss: 0.125
2024-10-13 23:31 - INFO - 	 ROC-AUC: 0.954
2024-10-13 23:31 - INFO - 	 PR-AUC: 0.596
2024-10-13 23:31 - INFO - 	 Recall for 0.4 precision: 0.871
2024-10-13 23:31 - INFO - 	 Best Val. Loss: 0.125
2024-10-13 23:31 - INFO - 	 Best ROC-AUC: 0.954
2024-10-13 23:31 - INFO - 	 Best PR-AUC: 0.596
2024-10-13 23:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-10-13 23:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.646
2024-10-13 23:31 - INFO - 	 Best Recall for 0.4 precision: 0.871
2024-10-13 23:31 - INFO - ---------------------------------------------
2024-10-13 23:32 - INFO - ---------------------------------------------
2024-10-13 23:32 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 23:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97316
2024-10-13 23:32 - INFO - 	 Train Loss: 0.114
2024-10-13 23:32 - INFO - 	 Val. Loss: 0.094
2024-10-13 23:32 - INFO - 	 ROC-AUC: 0.973
2024-10-13 23:32 - INFO - 	 PR-AUC: 0.746
2024-10-13 23:32 - INFO - 	 Recall for 0.4 precision: 0.957
2024-10-13 23:32 - INFO - 	 Best Val. Loss: 0.094
2024-10-13 23:32 - INFO - 	 Best ROC-AUC: 0.973
2024-10-13 23:32 - INFO - 	 Best PR-AUC: 0.746
2024-10-13 23:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-13 23:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.760
2024-10-13 23:32 - INFO - 	 Best Recall for 0.4 precision: 0.957
2024-10-13 23:32 - INFO - ---------------------------------------------
2024-10-13 23:33 - INFO - ---------------------------------------------
2024-10-13 23:33 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-13 23:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97716
2024-10-13 23:33 - INFO - 	 Train Loss: 0.102
2024-10-13 23:33 - INFO - 	 Val. Loss: 0.090
2024-10-13 23:33 - INFO - 	 ROC-AUC: 0.977
2024-10-13 23:33 - INFO - 	 PR-AUC: 0.799
2024-10-13 23:33 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-13 23:33 - INFO - 	 Best Val. Loss: 0.090
2024-10-13 23:33 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 23:33 - INFO - 	 Best PR-AUC: 0.799
2024-10-13 23:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-13 23:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.769
2024-10-13 23:33 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-13 23:33 - INFO - ---------------------------------------------
2024-10-13 23:33 - INFO - ---------------------------------------------
2024-10-13 23:33 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 23:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98267
2024-10-13 23:33 - INFO - 	 Train Loss: 0.095
2024-10-13 23:33 - INFO - 	 Val. Loss: 0.076
2024-10-13 23:33 - INFO - 	 ROC-AUC: 0.983
2024-10-13 23:33 - INFO - 	 PR-AUC: 0.827
2024-10-13 23:33 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-13 23:33 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 23:33 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 23:33 - INFO - 	 Best PR-AUC: 0.827
2024-10-13 23:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-10-13 23:33 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:33 - INFO - ---------------------------------------------
2024-10-13 23:34 - INFO - ---------------------------------------------
2024-10-13 23:34 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-13 23:34 - INFO - 	 Train Loss: 0.090
2024-10-13 23:34 - INFO - 	 Val. Loss: 0.082
2024-10-13 23:34 - INFO - 	 ROC-AUC: 0.978
2024-10-13 23:34 - INFO - 	 PR-AUC: 0.793
2024-10-13 23:34 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 23:34 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 23:34 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 23:34 - INFO - 	 Best PR-AUC: 0.827
2024-10-13 23:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-10-13 23:34 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:34 - INFO - ---------------------------------------------
2024-10-13 23:34 - INFO - ---------------------------------------------
2024-10-13 23:34 - INFO - Epoch: 06 | Time: 0m 33s
2024-10-13 23:34 - INFO - 	 Train Loss: 0.089
2024-10-13 23:34 - INFO - 	 Val. Loss: 0.077
2024-10-13 23:34 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:34 - INFO - 	 PR-AUC: 0.833
2024-10-13 23:34 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:34 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 23:34 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 23:34 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 23:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 23:34 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:34 - INFO - ---------------------------------------------
2024-10-13 23:35 - INFO - ---------------------------------------------
2024-10-13 23:35 - INFO - Epoch: 07 | Time: 0m 36s
2024-10-13 23:35 - INFO - 	 Train Loss: 0.085
2024-10-13 23:35 - INFO - 	 Val. Loss: 0.078
2024-10-13 23:35 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:35 - INFO - 	 PR-AUC: 0.826
2024-10-13 23:35 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:35 - INFO - 	 Best Val. Loss: 0.076
2024-10-13 23:35 - INFO - 	 Best ROC-AUC: 0.983
2024-10-13 23:35 - INFO - 	 Best PR-AUC: 0.833
2024-10-13 23:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-13 23:35 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-13 23:35 - INFO - ---------------------------------------------
2024-10-13 23:37 - INFO - Fit the preprocessing pipeline
2024-10-13 23:37 - INFO - Training using device: cuda
2024-10-13 23:37 - INFO - Creating generators
2024-10-13 23:37 - INFO - The model has 651,257 trainable parameters
2024-10-13 23:37 - INFO - * Model:
2024-10-13 23:37 - INFO - * -----------
2024-10-13 23:37 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 23:37 - INFO - * -----------
2024-10-13 23:37 - INFO - Evaluating model based on: rocauc
2024-10-13 23:37 - INFO - Training..

2024-10-13 23:38 - INFO - ---------------------------------------------
2024-10-13 23:38 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 23:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95774
2024-10-13 23:38 - INFO - 	 Train Loss: 0.199
2024-10-13 23:38 - INFO - 	 Val. Loss: 0.146
2024-10-13 23:38 - INFO - 	 ROC-AUC: 0.958
2024-10-13 23:38 - INFO - 	 PR-AUC: 0.642
2024-10-13 23:38 - INFO - 	 Recall for 0.4 precision: 0.895
2024-10-13 23:38 - INFO - 	 Best Val. Loss: 0.146
2024-10-13 23:38 - INFO - 	 Best ROC-AUC: 0.958
2024-10-13 23:38 - INFO - 	 Best PR-AUC: 0.642
2024-10-13 23:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-10-13 23:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.634
2024-10-13 23:38 - INFO - 	 Best Recall for 0.4 precision: 0.895
2024-10-13 23:38 - INFO - ---------------------------------------------
2024-10-13 23:38 - INFO - ---------------------------------------------
2024-10-13 23:38 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-13 23:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97234
2024-10-13 23:38 - INFO - 	 Train Loss: 0.115
2024-10-13 23:38 - INFO - 	 Val. Loss: 0.098
2024-10-13 23:38 - INFO - 	 ROC-AUC: 0.972
2024-10-13 23:38 - INFO - 	 PR-AUC: 0.764
2024-10-13 23:38 - INFO - 	 Recall for 0.4 precision: 0.955
2024-10-13 23:38 - INFO - 	 Best Val. Loss: 0.098
2024-10-13 23:38 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 23:38 - INFO - 	 Best PR-AUC: 0.764
2024-10-13 23:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 23:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-13 23:38 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-13 23:38 - INFO - ---------------------------------------------
2024-10-13 23:39 - INFO - ---------------------------------------------
2024-10-13 23:39 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 23:39 - INFO - 	 Train Loss: 0.103
2024-10-13 23:39 - INFO - 	 Val. Loss: 0.106
2024-10-13 23:39 - INFO - 	 ROC-AUC: 0.962
2024-10-13 23:39 - INFO - 	 PR-AUC: 0.713
2024-10-13 23:39 - INFO - 	 Recall for 0.4 precision: 0.906
2024-10-13 23:39 - INFO - 	 Best Val. Loss: 0.098
2024-10-13 23:39 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 23:39 - INFO - 	 Best PR-AUC: 0.764
2024-10-13 23:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 23:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-13 23:39 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-13 23:39 - INFO - ---------------------------------------------
2024-10-13 23:39 - INFO - ---------------------------------------------
2024-10-13 23:39 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-13 23:39 - INFO - 	 Train Loss: 0.096
2024-10-13 23:39 - INFO - 	 Val. Loss: 0.109
2024-10-13 23:39 - INFO - 	 ROC-AUC: 0.963
2024-10-13 23:39 - INFO - 	 PR-AUC: 0.727
2024-10-13 23:39 - INFO - 	 Recall for 0.4 precision: 0.923
2024-10-13 23:39 - INFO - 	 Best Val. Loss: 0.098
2024-10-13 23:39 - INFO - 	 Best ROC-AUC: 0.972
2024-10-13 23:39 - INFO - 	 Best PR-AUC: 0.764
2024-10-13 23:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-13 23:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-13 23:39 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-13 23:39 - INFO - ---------------------------------------------
2024-10-13 23:40 - INFO - ---------------------------------------------
2024-10-13 23:40 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-13 23:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9773
2024-10-13 23:40 - INFO - 	 Train Loss: 0.093
2024-10-13 23:40 - INFO - 	 Val. Loss: 0.101
2024-10-13 23:40 - INFO - 	 ROC-AUC: 0.977
2024-10-13 23:40 - INFO - 	 PR-AUC: 0.800
2024-10-13 23:40 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-13 23:40 - INFO - 	 Best Val. Loss: 0.098
2024-10-13 23:40 - INFO - 	 Best ROC-AUC: 0.977
2024-10-13 23:40 - INFO - 	 Best PR-AUC: 0.800
2024-10-13 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-13 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.777
2024-10-13 23:40 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-13 23:40 - INFO - ---------------------------------------------
2024-10-13 23:40 - INFO - ---------------------------------------------
2024-10-13 23:40 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-13 23:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97866
2024-10-13 23:40 - INFO - 	 Train Loss: 0.091
2024-10-13 23:40 - INFO - 	 Val. Loss: 0.079
2024-10-13 23:40 - INFO - 	 ROC-AUC: 0.979
2024-10-13 23:40 - INFO - 	 PR-AUC: 0.826
2024-10-13 23:40 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:40 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 23:40 - INFO - 	 Best ROC-AUC: 0.979
2024-10-13 23:40 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-13 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-13 23:40 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-13 23:40 - INFO - ---------------------------------------------
2024-10-13 23:41 - INFO - ---------------------------------------------
2024-10-13 23:41 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-13 23:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98096
2024-10-13 23:41 - INFO - 	 Train Loss: 0.088
2024-10-13 23:41 - INFO - 	 Val. Loss: 0.092
2024-10-13 23:41 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:41 - INFO - 	 PR-AUC: 0.819
2024-10-13 23:41 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-13 23:41 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 23:41 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 23:41 - INFO - 	 Best PR-AUC: 0.826
2024-10-13 23:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-13 23:41 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 23:41 - INFO - ---------------------------------------------
2024-10-13 23:41 - INFO - ---------------------------------------------
2024-10-13 23:41 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-13 23:41 - INFO - 	 Train Loss: 0.087
2024-10-13 23:41 - INFO - 	 Val. Loss: 0.087
2024-10-13 23:41 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:41 - INFO - 	 PR-AUC: 0.843
2024-10-13 23:41 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-13 23:41 - INFO - 	 Best Val. Loss: 0.079
2024-10-13 23:41 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 23:41 - INFO - 	 Best PR-AUC: 0.843
2024-10-13 23:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 23:41 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 23:41 - INFO - ---------------------------------------------
2024-10-13 23:42 - INFO - ---------------------------------------------
2024-10-13 23:42 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-13 23:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98124
2024-10-13 23:42 - INFO - 	 Train Loss: 0.087
2024-10-13 23:42 - INFO - 	 Val. Loss: 0.074
2024-10-13 23:42 - INFO - 	 ROC-AUC: 0.981
2024-10-13 23:42 - INFO - 	 PR-AUC: 0.839
2024-10-13 23:42 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-13 23:42 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 23:42 - INFO - 	 Best ROC-AUC: 0.981
2024-10-13 23:42 - INFO - 	 Best PR-AUC: 0.843
2024-10-13 23:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-13 23:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 23:42 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 23:42 - INFO - ---------------------------------------------
2024-10-13 23:42 - INFO - ---------------------------------------------
2024-10-13 23:42 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-13 23:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98164
2024-10-13 23:42 - INFO - 	 Train Loss: 0.084
2024-10-13 23:42 - INFO - 	 Val. Loss: 0.075
2024-10-13 23:42 - INFO - 	 ROC-AUC: 0.982
2024-10-13 23:42 - INFO - 	 PR-AUC: 0.831
2024-10-13 23:42 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-13 23:42 - INFO - 	 Best Val. Loss: 0.074
2024-10-13 23:42 - INFO - 	 Best ROC-AUC: 0.982
2024-10-13 23:42 - INFO - 	 Best PR-AUC: 0.843
2024-10-13 23:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-13 23:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-13 23:42 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-13 23:42 - INFO - ---------------------------------------------
