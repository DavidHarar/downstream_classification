2024-10-12 16:32 - INFO - Fit the preprocessing pipeline
2024-10-12 16:32 - INFO - Training using device: cuda
2024-10-12 16:32 - INFO - Creating generators
2024-10-12 16:32 - INFO - The model has 651,257 trainable parameters
2024-10-12 16:32 - INFO - * Model:
2024-10-12 16:32 - INFO - * -----------
2024-10-12 16:32 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 16:32 - INFO - * -----------
2024-10-12 16:32 - INFO - Evaluating model based on: rocauc
2024-10-12 16:32 - INFO - Training..

2024-10-12 16:33 - INFO - ---------------------------------------------
2024-10-12 16:33 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 16:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97786
2024-10-12 16:33 - INFO - 	 Train Loss: 0.158
2024-10-12 16:33 - INFO - 	 Val. Loss: 0.082
2024-10-12 16:33 - INFO - 	 ROC-AUC: 0.978
2024-10-12 16:33 - INFO - 	 PR-AUC: 0.820
2024-10-12 16:33 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-12 16:33 - INFO - 	 Best Val. Loss: 0.082
2024-10-12 16:33 - INFO - 	 Best ROC-AUC: 0.978
2024-10-12 16:33 - INFO - 	 Best PR-AUC: 0.820
2024-10-12 16:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-12 16:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-12 16:33 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-12 16:33 - INFO - ---------------------------------------------
2024-10-12 16:33 - INFO - ---------------------------------------------
2024-10-12 16:33 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 16:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98456
2024-10-12 16:33 - INFO - 	 Train Loss: 0.083
2024-10-12 16:33 - INFO - 	 Val. Loss: 0.073
2024-10-12 16:33 - INFO - 	 ROC-AUC: 0.985
2024-10-12 16:33 - INFO - 	 PR-AUC: 0.871
2024-10-12 16:33 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 16:33 - INFO - 	 Best Val. Loss: 0.073
2024-10-12 16:33 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 16:33 - INFO - 	 Best PR-AUC: 0.871
2024-10-12 16:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 16:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-12 16:33 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 16:33 - INFO - ---------------------------------------------
2024-10-12 16:34 - INFO - ---------------------------------------------
2024-10-12 16:34 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-12 16:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98658
2024-10-12 16:34 - INFO - 	 Train Loss: 0.071
2024-10-12 16:34 - INFO - 	 Val. Loss: 0.066
2024-10-12 16:34 - INFO - 	 ROC-AUC: 0.987
2024-10-12 16:34 - INFO - 	 PR-AUC: 0.874
2024-10-12 16:34 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 16:34 - INFO - 	 Best Val. Loss: 0.066
2024-10-12 16:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 16:34 - INFO - 	 Best PR-AUC: 0.874
2024-10-12 16:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-12 16:34 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 16:34 - INFO - ---------------------------------------------
2024-10-12 16:34 - INFO - ---------------------------------------------
2024-10-12 16:34 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 16:34 - INFO - 	 Train Loss: 0.066
2024-10-12 16:34 - INFO - 	 Val. Loss: 0.066
2024-10-12 16:34 - INFO - 	 ROC-AUC: 0.986
2024-10-12 16:34 - INFO - 	 PR-AUC: 0.867
2024-10-12 16:34 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 16:34 - INFO - 	 Best Val. Loss: 0.066
2024-10-12 16:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 16:34 - INFO - 	 Best PR-AUC: 0.874
2024-10-12 16:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-12 16:34 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 16:34 - INFO - ---------------------------------------------
2024-10-12 16:35 - INFO - ---------------------------------------------
2024-10-12 16:35 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-12 16:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98713
2024-10-12 16:35 - INFO - 	 Train Loss: 0.063
2024-10-12 16:35 - INFO - 	 Val. Loss: 0.065
2024-10-12 16:35 - INFO - 	 ROC-AUC: 0.987
2024-10-12 16:35 - INFO - 	 PR-AUC: 0.872
2024-10-12 16:35 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 16:35 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 16:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 16:35 - INFO - 	 Best PR-AUC: 0.874
2024-10-12 16:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-12 16:35 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 16:35 - INFO - ---------------------------------------------
2024-10-12 16:36 - INFO - ---------------------------------------------
2024-10-12 16:36 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 16:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98784
2024-10-12 16:36 - INFO - 	 Train Loss: 0.060
2024-10-12 16:36 - INFO - 	 Val. Loss: 0.060
2024-10-12 16:36 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:36 - INFO - 	 PR-AUC: 0.878
2024-10-12 16:36 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 16:36 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 16:36 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:36 - INFO - 	 Best PR-AUC: 0.878
2024-10-12 16:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-12 16:36 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 16:36 - INFO - ---------------------------------------------
2024-10-12 16:36 - INFO - ---------------------------------------------
2024-10-12 16:36 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-12 16:36 - INFO - 	 Train Loss: 0.058
2024-10-12 16:36 - INFO - 	 Val. Loss: 0.061
2024-10-12 16:36 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:36 - INFO - 	 PR-AUC: 0.884
2024-10-12 16:36 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 16:36 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 16:36 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:36 - INFO - 	 Best PR-AUC: 0.884
2024-10-12 16:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-12 16:36 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 16:36 - INFO - ---------------------------------------------
2024-10-12 16:37 - INFO - ---------------------------------------------
2024-10-12 16:37 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-12 16:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98892
2024-10-12 16:37 - INFO - 	 Train Loss: 0.056
2024-10-12 16:37 - INFO - 	 Val. Loss: 0.057
2024-10-12 16:37 - INFO - 	 ROC-AUC: 0.989
2024-10-12 16:37 - INFO - 	 PR-AUC: 0.890
2024-10-12 16:37 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 16:37 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 16:37 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 16:37 - INFO - 	 Best PR-AUC: 0.890
2024-10-12 16:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-12 16:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:37 - INFO - ---------------------------------------------
2024-10-12 16:37 - INFO - ---------------------------------------------
2024-10-12 16:37 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 16:37 - INFO - 	 Train Loss: 0.055
2024-10-12 16:37 - INFO - 	 Val. Loss: 0.058
2024-10-12 16:37 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:37 - INFO - 	 PR-AUC: 0.891
2024-10-12 16:37 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 16:37 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 16:37 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 16:37 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 16:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-12 16:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:37 - INFO - ---------------------------------------------
2024-10-12 16:38 - INFO - ---------------------------------------------
2024-10-12 16:38 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 16:38 - INFO - 	 Train Loss: 0.053
2024-10-12 16:38 - INFO - 	 Val. Loss: 0.060
2024-10-12 16:38 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:38 - INFO - 	 PR-AUC: 0.886
2024-10-12 16:38 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 16:38 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 16:38 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 16:38 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-12 16:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:38 - INFO - ---------------------------------------------
2024-10-12 16:39 - INFO - Fit the preprocessing pipeline
2024-10-12 16:39 - INFO - Training using device: cuda
2024-10-12 16:39 - INFO - Creating generators
2024-10-12 16:39 - INFO - The model has 651,257 trainable parameters
2024-10-12 16:39 - INFO - * Model:
2024-10-12 16:39 - INFO - * -----------
2024-10-12 16:39 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 16:39 - INFO - * -----------
2024-10-12 16:39 - INFO - Evaluating model based on: rocauc
2024-10-12 16:39 - INFO - Training..

2024-10-12 16:40 - INFO - ---------------------------------------------
2024-10-12 16:40 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 16:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97996
2024-10-12 16:40 - INFO - 	 Train Loss: 0.155
2024-10-12 16:40 - INFO - 	 Val. Loss: 0.080
2024-10-12 16:40 - INFO - 	 ROC-AUC: 0.980
2024-10-12 16:40 - INFO - 	 PR-AUC: 0.813
2024-10-12 16:40 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-12 16:40 - INFO - 	 Best Val. Loss: 0.080
2024-10-12 16:40 - INFO - 	 Best ROC-AUC: 0.980
2024-10-12 16:40 - INFO - 	 Best PR-AUC: 0.813
2024-10-12 16:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-12 16:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-12 16:40 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-12 16:40 - INFO - ---------------------------------------------
2024-10-12 16:40 - INFO - ---------------------------------------------
2024-10-12 16:40 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 16:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98362
2024-10-12 16:40 - INFO - 	 Train Loss: 0.083
2024-10-12 16:40 - INFO - 	 Val. Loss: 0.073
2024-10-12 16:40 - INFO - 	 ROC-AUC: 0.984
2024-10-12 16:40 - INFO - 	 PR-AUC: 0.845
2024-10-12 16:40 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-12 16:40 - INFO - 	 Best Val. Loss: 0.073
2024-10-12 16:40 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 16:40 - INFO - 	 Best PR-AUC: 0.845
2024-10-12 16:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 16:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-12 16:40 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-12 16:40 - INFO - ---------------------------------------------
2024-10-12 16:41 - INFO - ---------------------------------------------
2024-10-12 16:41 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 16:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98711
2024-10-12 16:41 - INFO - 	 Train Loss: 0.071
2024-10-12 16:41 - INFO - 	 Val. Loss: 0.066
2024-10-12 16:41 - INFO - 	 ROC-AUC: 0.987
2024-10-12 16:41 - INFO - 	 PR-AUC: 0.872
2024-10-12 16:41 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 16:41 - INFO - 	 Best Val. Loss: 0.066
2024-10-12 16:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 16:41 - INFO - 	 Best PR-AUC: 0.872
2024-10-12 16:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 16:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-12 16:41 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 16:41 - INFO - ---------------------------------------------
2024-10-12 16:41 - INFO - ---------------------------------------------
2024-10-12 16:41 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 16:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98771
2024-10-12 16:41 - INFO - 	 Train Loss: 0.066
2024-10-12 16:41 - INFO - 	 Val. Loss: 0.063
2024-10-12 16:41 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:41 - INFO - 	 PR-AUC: 0.884
2024-10-12 16:41 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 16:41 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 16:41 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:41 - INFO - 	 Best PR-AUC: 0.884
2024-10-12 16:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-12 16:41 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:41 - INFO - ---------------------------------------------
2024-10-12 16:42 - INFO - ---------------------------------------------
2024-10-12 16:42 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 16:42 - INFO - 	 Train Loss: 0.063
2024-10-12 16:42 - INFO - 	 Val. Loss: 0.063
2024-10-12 16:42 - INFO - 	 ROC-AUC: 0.987
2024-10-12 16:42 - INFO - 	 PR-AUC: 0.884
2024-10-12 16:42 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 16:42 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 16:42 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:42 - INFO - 	 Best PR-AUC: 0.884
2024-10-12 16:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-12 16:42 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:42 - INFO - ---------------------------------------------
2024-10-12 16:42 - INFO - ---------------------------------------------
2024-10-12 16:42 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 16:42 - INFO - 	 Train Loss: 0.060
2024-10-12 16:42 - INFO - 	 Val. Loss: 0.062
2024-10-12 16:42 - INFO - 	 ROC-AUC: 0.986
2024-10-12 16:42 - INFO - 	 PR-AUC: 0.885
2024-10-12 16:42 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 16:42 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 16:42 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:42 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 16:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-12 16:42 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:42 - INFO - ---------------------------------------------
2024-10-12 16:43 - INFO - ---------------------------------------------
2024-10-12 16:43 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 16:43 - INFO - 	 Train Loss: 0.058
2024-10-12 16:43 - INFO - 	 Val. Loss: 0.060
2024-10-12 16:43 - INFO - 	 ROC-AUC: 0.987
2024-10-12 16:43 - INFO - 	 PR-AUC: 0.895
2024-10-12 16:43 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 16:43 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 16:43 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:43 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 16:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-12 16:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:43 - INFO - ---------------------------------------------
2024-10-12 16:43 - INFO - ---------------------------------------------
2024-10-12 16:43 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 16:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98799
2024-10-12 16:43 - INFO - 	 Train Loss: 0.057
2024-10-12 16:43 - INFO - 	 Val. Loss: 0.058
2024-10-12 16:43 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:43 - INFO - 	 PR-AUC: 0.893
2024-10-12 16:43 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 16:43 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 16:43 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:43 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 16:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-12 16:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:43 - INFO - ---------------------------------------------
2024-10-12 16:44 - INFO - ---------------------------------------------
2024-10-12 16:44 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 16:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98832
2024-10-12 16:44 - INFO - 	 Train Loss: 0.055
2024-10-12 16:44 - INFO - 	 Val. Loss: 0.058
2024-10-12 16:44 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:44 - INFO - 	 PR-AUC: 0.899
2024-10-12 16:44 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 16:44 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 16:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:44 - INFO - 	 Best PR-AUC: 0.899
2024-10-12 16:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-12 16:44 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:44 - INFO - ---------------------------------------------
2024-10-12 16:44 - INFO - ---------------------------------------------
2024-10-12 16:44 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 16:44 - INFO - 	 Train Loss: 0.053
2024-10-12 16:44 - INFO - 	 Val. Loss: 0.059
2024-10-12 16:44 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:44 - INFO - 	 PR-AUC: 0.897
2024-10-12 16:44 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 16:44 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 16:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:44 - INFO - 	 Best PR-AUC: 0.899
2024-10-12 16:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-12 16:44 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:44 - INFO - ---------------------------------------------
2024-10-12 16:46 - INFO - Fit the preprocessing pipeline
2024-10-12 16:46 - INFO - Training using device: cuda
2024-10-12 16:46 - INFO - Creating generators
2024-10-12 16:46 - INFO - The model has 651,257 trainable parameters
2024-10-12 16:46 - INFO - * Model:
2024-10-12 16:46 - INFO - * -----------
2024-10-12 16:46 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 16:46 - INFO - * -----------
2024-10-12 16:46 - INFO - Evaluating model based on: rocauc
2024-10-12 16:46 - INFO - Training..

2024-10-12 16:46 - INFO - ---------------------------------------------
2024-10-12 16:46 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 16:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97862
2024-10-12 16:46 - INFO - 	 Train Loss: 0.159
2024-10-12 16:46 - INFO - 	 Val. Loss: 0.088
2024-10-12 16:46 - INFO - 	 ROC-AUC: 0.979
2024-10-12 16:46 - INFO - 	 PR-AUC: 0.800
2024-10-12 16:46 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-12 16:46 - INFO - 	 Best Val. Loss: 0.088
2024-10-12 16:46 - INFO - 	 Best ROC-AUC: 0.979
2024-10-12 16:46 - INFO - 	 Best PR-AUC: 0.800
2024-10-12 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-12 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-12 16:46 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-12 16:46 - INFO - ---------------------------------------------
2024-10-12 16:47 - INFO - ---------------------------------------------
2024-10-12 16:47 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 16:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98495
2024-10-12 16:47 - INFO - 	 Train Loss: 0.081
2024-10-12 16:47 - INFO - 	 Val. Loss: 0.067
2024-10-12 16:47 - INFO - 	 ROC-AUC: 0.985
2024-10-12 16:47 - INFO - 	 PR-AUC: 0.872
2024-10-12 16:47 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 16:47 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 16:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 16:47 - INFO - 	 Best PR-AUC: 0.872
2024-10-12 16:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 16:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-12 16:47 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 16:47 - INFO - ---------------------------------------------
2024-10-12 16:48 - INFO - ---------------------------------------------
2024-10-12 16:48 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 16:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98693
2024-10-12 16:48 - INFO - 	 Train Loss: 0.071
2024-10-12 16:48 - INFO - 	 Val. Loss: 0.068
2024-10-12 16:48 - INFO - 	 ROC-AUC: 0.987
2024-10-12 16:48 - INFO - 	 PR-AUC: 0.880
2024-10-12 16:48 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 16:48 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 16:48 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 16:48 - INFO - 	 Best PR-AUC: 0.880
2024-10-12 16:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 16:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-12 16:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:48 - INFO - ---------------------------------------------
2024-10-12 16:48 - INFO - ---------------------------------------------
2024-10-12 16:48 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 16:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98751
2024-10-12 16:48 - INFO - 	 Train Loss: 0.066
2024-10-12 16:48 - INFO - 	 Val. Loss: 0.065
2024-10-12 16:48 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:48 - INFO - 	 PR-AUC: 0.885
2024-10-12 16:48 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 16:48 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 16:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:48 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 16:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-12 16:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:48 - INFO - ---------------------------------------------
2024-10-12 16:49 - INFO - ---------------------------------------------
2024-10-12 16:49 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 16:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9876
2024-10-12 16:49 - INFO - 	 Train Loss: 0.064
2024-10-12 16:49 - INFO - 	 Val. Loss: 0.064
2024-10-12 16:49 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:49 - INFO - 	 PR-AUC: 0.881
2024-10-12 16:49 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 16:49 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 16:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:49 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 16:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-12 16:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:49 - INFO - ---------------------------------------------
2024-10-12 16:49 - INFO - ---------------------------------------------
2024-10-12 16:49 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 16:49 - INFO - 	 Train Loss: 0.060
2024-10-12 16:49 - INFO - 	 Val. Loss: 0.069
2024-10-12 16:49 - INFO - 	 ROC-AUC: 0.987
2024-10-12 16:49 - INFO - 	 PR-AUC: 0.873
2024-10-12 16:49 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 16:49 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 16:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:49 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 16:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-12 16:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:49 - INFO - ---------------------------------------------
2024-10-12 16:50 - INFO - ---------------------------------------------
2024-10-12 16:50 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 16:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9884
2024-10-12 16:50 - INFO - 	 Train Loss: 0.059
2024-10-12 16:50 - INFO - 	 Val. Loss: 0.060
2024-10-12 16:50 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:50 - INFO - 	 PR-AUC: 0.888
2024-10-12 16:50 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 16:50 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 16:50 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:50 - INFO - 	 Best PR-AUC: 0.888
2024-10-12 16:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-12 16:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:50 - INFO - ---------------------------------------------
2024-10-12 16:50 - INFO - ---------------------------------------------
2024-10-12 16:50 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 16:50 - INFO - 	 Train Loss: 0.056
2024-10-12 16:50 - INFO - 	 Val. Loss: 0.062
2024-10-12 16:50 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:50 - INFO - 	 PR-AUC: 0.894
2024-10-12 16:50 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 16:50 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 16:50 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:50 - INFO - 	 Best PR-AUC: 0.894
2024-10-12 16:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-12 16:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:50 - INFO - ---------------------------------------------
2024-10-12 16:51 - INFO - ---------------------------------------------
2024-10-12 16:51 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 16:51 - INFO - 	 Train Loss: 0.056
2024-10-12 16:51 - INFO - 	 Val. Loss: 0.059
2024-10-12 16:51 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:51 - INFO - 	 PR-AUC: 0.891
2024-10-12 16:51 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 16:51 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 16:51 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:51 - INFO - 	 Best PR-AUC: 0.894
2024-10-12 16:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-12 16:51 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:51 - INFO - ---------------------------------------------
2024-10-12 16:51 - INFO - ---------------------------------------------
2024-10-12 16:51 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 16:51 - INFO - 	 Train Loss: 0.054
2024-10-12 16:51 - INFO - 	 Val. Loss: 0.064
2024-10-12 16:51 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:51 - INFO - 	 PR-AUC: 0.893
2024-10-12 16:51 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 16:51 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 16:51 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:51 - INFO - 	 Best PR-AUC: 0.894
2024-10-12 16:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-12 16:51 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:51 - INFO - ---------------------------------------------
2024-10-12 16:53 - INFO - Fit the preprocessing pipeline
2024-10-12 16:53 - INFO - Training using device: cuda
2024-10-12 16:53 - INFO - Creating generators
2024-10-12 16:53 - INFO - The model has 651,257 trainable parameters
2024-10-12 16:53 - INFO - * Model:
2024-10-12 16:53 - INFO - * -----------
2024-10-12 16:53 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 16:53 - INFO - * -----------
2024-10-12 16:53 - INFO - Evaluating model based on: rocauc
2024-10-12 16:53 - INFO - Training..

2024-10-12 16:53 - INFO - ---------------------------------------------
2024-10-12 16:53 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 16:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98078
2024-10-12 16:53 - INFO - 	 Train Loss: 0.154
2024-10-12 16:53 - INFO - 	 Val. Loss: 0.079
2024-10-12 16:53 - INFO - 	 ROC-AUC: 0.981
2024-10-12 16:53 - INFO - 	 PR-AUC: 0.818
2024-10-12 16:53 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-12 16:53 - INFO - 	 Best Val. Loss: 0.079
2024-10-12 16:53 - INFO - 	 Best ROC-AUC: 0.981
2024-10-12 16:53 - INFO - 	 Best PR-AUC: 0.818
2024-10-12 16:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-12 16:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.792
2024-10-12 16:53 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-12 16:53 - INFO - ---------------------------------------------
2024-10-12 16:54 - INFO - ---------------------------------------------
2024-10-12 16:54 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 16:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9835
2024-10-12 16:54 - INFO - 	 Train Loss: 0.081
2024-10-12 16:54 - INFO - 	 Val. Loss: 0.072
2024-10-12 16:54 - INFO - 	 ROC-AUC: 0.983
2024-10-12 16:54 - INFO - 	 PR-AUC: 0.857
2024-10-12 16:54 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 16:54 - INFO - 	 Best Val. Loss: 0.072
2024-10-12 16:54 - INFO - 	 Best ROC-AUC: 0.983
2024-10-12 16:54 - INFO - 	 Best PR-AUC: 0.857
2024-10-12 16:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 16:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-12 16:54 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 16:54 - INFO - ---------------------------------------------
2024-10-12 16:54 - INFO - ---------------------------------------------
2024-10-12 16:54 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 16:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98559
2024-10-12 16:54 - INFO - 	 Train Loss: 0.072
2024-10-12 16:54 - INFO - 	 Val. Loss: 0.067
2024-10-12 16:54 - INFO - 	 ROC-AUC: 0.986
2024-10-12 16:54 - INFO - 	 PR-AUC: 0.870
2024-10-12 16:54 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 16:54 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 16:54 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 16:54 - INFO - 	 Best PR-AUC: 0.870
2024-10-12 16:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 16:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-12 16:54 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 16:54 - INFO - ---------------------------------------------
2024-10-12 16:55 - INFO - ---------------------------------------------
2024-10-12 16:55 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 16:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98593
2024-10-12 16:55 - INFO - 	 Train Loss: 0.067
2024-10-12 16:55 - INFO - 	 Val. Loss: 0.065
2024-10-12 16:55 - INFO - 	 ROC-AUC: 0.986
2024-10-12 16:55 - INFO - 	 PR-AUC: 0.864
2024-10-12 16:55 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 16:55 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 16:55 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 16:55 - INFO - 	 Best PR-AUC: 0.870
2024-10-12 16:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-12 16:55 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 16:55 - INFO - ---------------------------------------------
2024-10-12 16:55 - INFO - ---------------------------------------------
2024-10-12 16:55 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 16:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98756
2024-10-12 16:55 - INFO - 	 Train Loss: 0.064
2024-10-12 16:55 - INFO - 	 Val. Loss: 0.060
2024-10-12 16:55 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:55 - INFO - 	 PR-AUC: 0.884
2024-10-12 16:55 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 16:55 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 16:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:55 - INFO - 	 Best PR-AUC: 0.884
2024-10-12 16:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-12 16:55 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 16:55 - INFO - ---------------------------------------------
2024-10-12 16:56 - INFO - ---------------------------------------------
2024-10-12 16:56 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 16:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98818
2024-10-12 16:56 - INFO - 	 Train Loss: 0.061
2024-10-12 16:56 - INFO - 	 Val. Loss: 0.059
2024-10-12 16:56 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:56 - INFO - 	 PR-AUC: 0.887
2024-10-12 16:56 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 16:56 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 16:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:56 - INFO - 	 Best PR-AUC: 0.887
2024-10-12 16:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 16:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-12 16:56 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:56 - INFO - ---------------------------------------------
2024-10-12 16:56 - INFO - ---------------------------------------------
2024-10-12 16:56 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 16:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98848
2024-10-12 16:56 - INFO - 	 Train Loss: 0.058
2024-10-12 16:56 - INFO - 	 Val. Loss: 0.058
2024-10-12 16:56 - INFO - 	 ROC-AUC: 0.988
2024-10-12 16:56 - INFO - 	 PR-AUC: 0.895
2024-10-12 16:56 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 16:56 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 16:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 16:56 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 16:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-12 16:56 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 16:56 - INFO - ---------------------------------------------
2024-10-12 16:57 - INFO - ---------------------------------------------
2024-10-12 16:57 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 16:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98927
2024-10-12 16:57 - INFO - 	 Train Loss: 0.056
2024-10-12 16:57 - INFO - 	 Val. Loss: 0.055
2024-10-12 16:57 - INFO - 	 ROC-AUC: 0.989
2024-10-12 16:57 - INFO - 	 PR-AUC: 0.903
2024-10-12 16:57 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-12 16:57 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 16:57 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 16:57 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 16:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-12 16:57 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 16:57 - INFO - ---------------------------------------------
2024-10-12 16:58 - INFO - ---------------------------------------------
2024-10-12 16:58 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 16:58 - INFO - 	 Train Loss: 0.055
2024-10-12 16:58 - INFO - 	 Val. Loss: 0.058
2024-10-12 16:58 - INFO - 	 ROC-AUC: 0.989
2024-10-12 16:58 - INFO - 	 PR-AUC: 0.896
2024-10-12 16:58 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 16:58 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 16:58 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 16:58 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 16:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-12 16:58 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 16:58 - INFO - ---------------------------------------------
2024-10-12 16:58 - INFO - ---------------------------------------------
2024-10-12 16:58 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 16:58 - INFO - 	 Train Loss: 0.053
2024-10-12 16:58 - INFO - 	 Val. Loss: 0.058
2024-10-12 16:58 - INFO - 	 ROC-AUC: 0.989
2024-10-12 16:58 - INFO - 	 PR-AUC: 0.896
2024-10-12 16:58 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 16:58 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 16:58 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 16:58 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 16:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 16:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-12 16:58 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 16:58 - INFO - ---------------------------------------------
2024-10-12 16:59 - INFO - Fit the preprocessing pipeline
2024-10-12 16:59 - INFO - Training using device: cuda
2024-10-12 16:59 - INFO - Creating generators
2024-10-12 17:00 - INFO - The model has 651,257 trainable parameters
2024-10-12 17:00 - INFO - * Model:
2024-10-12 17:00 - INFO - * -----------
2024-10-12 17:00 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 17:00 - INFO - * -----------
2024-10-12 17:00 - INFO - Evaluating model based on: rocauc
2024-10-12 17:00 - INFO - Training..

2024-10-12 17:00 - INFO - ---------------------------------------------
2024-10-12 17:00 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 17:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98067
2024-10-12 17:00 - INFO - 	 Train Loss: 0.156
2024-10-12 17:00 - INFO - 	 Val. Loss: 0.078
2024-10-12 17:00 - INFO - 	 ROC-AUC: 0.981
2024-10-12 17:00 - INFO - 	 PR-AUC: 0.831
2024-10-12 17:00 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-12 17:00 - INFO - 	 Best Val. Loss: 0.078
2024-10-12 17:00 - INFO - 	 Best ROC-AUC: 0.981
2024-10-12 17:00 - INFO - 	 Best PR-AUC: 0.831
2024-10-12 17:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-12 17:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-12 17:00 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-12 17:00 - INFO - ---------------------------------------------
2024-10-12 17:01 - INFO - ---------------------------------------------
2024-10-12 17:01 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 17:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9855
2024-10-12 17:01 - INFO - 	 Train Loss: 0.083
2024-10-12 17:01 - INFO - 	 Val. Loss: 0.065
2024-10-12 17:01 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:01 - INFO - 	 PR-AUC: 0.877
2024-10-12 17:01 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 17:01 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 17:01 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 17:01 - INFO - 	 Best PR-AUC: 0.877
2024-10-12 17:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-12 17:01 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 17:01 - INFO - ---------------------------------------------
2024-10-12 17:01 - INFO - ---------------------------------------------
2024-10-12 17:01 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 17:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98661
2024-10-12 17:01 - INFO - 	 Train Loss: 0.072
2024-10-12 17:01 - INFO - 	 Val. Loss: 0.062
2024-10-12 17:01 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:01 - INFO - 	 PR-AUC: 0.884
2024-10-12 17:01 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 17:01 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 17:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:01 - INFO - 	 Best PR-AUC: 0.884
2024-10-12 17:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-12 17:01 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 17:01 - INFO - ---------------------------------------------
2024-10-12 17:02 - INFO - ---------------------------------------------
2024-10-12 17:02 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-12 17:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98682
2024-10-12 17:02 - INFO - 	 Train Loss: 0.066
2024-10-12 17:02 - INFO - 	 Val. Loss: 0.060
2024-10-12 17:02 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:02 - INFO - 	 PR-AUC: 0.889
2024-10-12 17:02 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:02 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:02 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:02 - INFO - 	 Best PR-AUC: 0.889
2024-10-12 17:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 17:02 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:02 - INFO - ---------------------------------------------
2024-10-12 17:02 - INFO - ---------------------------------------------
2024-10-12 17:02 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 17:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98764
2024-10-12 17:02 - INFO - 	 Train Loss: 0.063
2024-10-12 17:02 - INFO - 	 Val. Loss: 0.059
2024-10-12 17:02 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:02 - INFO - 	 PR-AUC: 0.895
2024-10-12 17:02 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:02 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:02 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:02 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 17:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 17:02 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:02 - INFO - ---------------------------------------------
2024-10-12 17:03 - INFO - ---------------------------------------------
2024-10-12 17:03 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 17:03 - INFO - 	 Train Loss: 0.060
2024-10-12 17:03 - INFO - 	 Val. Loss: 0.061
2024-10-12 17:03 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:03 - INFO - 	 PR-AUC: 0.885
2024-10-12 17:03 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 17:03 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:03 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:03 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 17:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 17:03 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:03 - INFO - ---------------------------------------------
2024-10-12 17:03 - INFO - ---------------------------------------------
2024-10-12 17:03 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-12 17:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98833
2024-10-12 17:03 - INFO - 	 Train Loss: 0.058
2024-10-12 17:03 - INFO - 	 Val. Loss: 0.057
2024-10-12 17:03 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:03 - INFO - 	 PR-AUC: 0.900
2024-10-12 17:03 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:03 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 17:03 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:03 - INFO - 	 Best PR-AUC: 0.900
2024-10-12 17:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-12 17:03 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:03 - INFO - ---------------------------------------------
2024-10-12 17:04 - INFO - ---------------------------------------------
2024-10-12 17:04 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 17:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98837
2024-10-12 17:04 - INFO - 	 Train Loss: 0.057
2024-10-12 17:04 - INFO - 	 Val. Loss: 0.057
2024-10-12 17:04 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:04 - INFO - 	 PR-AUC: 0.898
2024-10-12 17:04 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:04 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 17:04 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:04 - INFO - 	 Best PR-AUC: 0.900
2024-10-12 17:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-12 17:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:04 - INFO - ---------------------------------------------
2024-10-12 17:04 - INFO - ---------------------------------------------
2024-10-12 17:04 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-12 17:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98878
2024-10-12 17:04 - INFO - 	 Train Loss: 0.056
2024-10-12 17:04 - INFO - 	 Val. Loss: 0.056
2024-10-12 17:04 - INFO - 	 ROC-AUC: 0.989
2024-10-12 17:04 - INFO - 	 PR-AUC: 0.898
2024-10-12 17:04 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 17:04 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 17:04 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:04 - INFO - 	 Best PR-AUC: 0.900
2024-10-12 17:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-12 17:04 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 17:04 - INFO - ---------------------------------------------
2024-10-12 17:05 - INFO - ---------------------------------------------
2024-10-12 17:05 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-12 17:05 - INFO - 	 Train Loss: 0.053
2024-10-12 17:05 - INFO - 	 Val. Loss: 0.057
2024-10-12 17:05 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:05 - INFO - 	 PR-AUC: 0.900
2024-10-12 17:05 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:05 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 17:05 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:05 - INFO - 	 Best PR-AUC: 0.900
2024-10-12 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-10-12 17:05 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 17:05 - INFO - ---------------------------------------------
2024-10-12 17:06 - INFO - Fit the preprocessing pipeline
2024-10-12 17:06 - INFO - Training using device: cuda
2024-10-12 17:06 - INFO - Creating generators
2024-10-12 17:06 - INFO - The model has 651,257 trainable parameters
2024-10-12 17:06 - INFO - * Model:
2024-10-12 17:06 - INFO - * -----------
2024-10-12 17:06 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 17:06 - INFO - * -----------
2024-10-12 17:06 - INFO - Evaluating model based on: rocauc
2024-10-12 17:06 - INFO - Training..

2024-10-12 17:07 - INFO - ---------------------------------------------
2024-10-12 17:07 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 17:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97427
2024-10-12 17:07 - INFO - 	 Train Loss: 0.162
2024-10-12 17:07 - INFO - 	 Val. Loss: 0.093
2024-10-12 17:07 - INFO - 	 ROC-AUC: 0.974
2024-10-12 17:07 - INFO - 	 PR-AUC: 0.769
2024-10-12 17:07 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-12 17:07 - INFO - 	 Best Val. Loss: 0.093
2024-10-12 17:07 - INFO - 	 Best ROC-AUC: 0.974
2024-10-12 17:07 - INFO - 	 Best PR-AUC: 0.769
2024-10-12 17:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-12 17:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.739
2024-10-12 17:07 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-12 17:07 - INFO - ---------------------------------------------
2024-10-12 17:07 - INFO - ---------------------------------------------
2024-10-12 17:07 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 17:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98427
2024-10-12 17:07 - INFO - 	 Train Loss: 0.085
2024-10-12 17:07 - INFO - 	 Val. Loss: 0.074
2024-10-12 17:07 - INFO - 	 ROC-AUC: 0.984
2024-10-12 17:07 - INFO - 	 PR-AUC: 0.859
2024-10-12 17:07 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:07 - INFO - 	 Best Val. Loss: 0.074
2024-10-12 17:07 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 17:07 - INFO - 	 Best PR-AUC: 0.859
2024-10-12 17:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 17:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-12 17:07 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:07 - INFO - ---------------------------------------------
2024-10-12 17:08 - INFO - ---------------------------------------------
2024-10-12 17:08 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 17:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9862
2024-10-12 17:08 - INFO - 	 Train Loss: 0.074
2024-10-12 17:08 - INFO - 	 Val. Loss: 0.065
2024-10-12 17:08 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:08 - INFO - 	 PR-AUC: 0.877
2024-10-12 17:08 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 17:08 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 17:08 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 17:08 - INFO - 	 Best PR-AUC: 0.877
2024-10-12 17:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-12 17:08 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:08 - INFO - ---------------------------------------------
2024-10-12 17:09 - INFO - ---------------------------------------------
2024-10-12 17:09 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 17:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98782
2024-10-12 17:09 - INFO - 	 Train Loss: 0.067
2024-10-12 17:09 - INFO - 	 Val. Loss: 0.066
2024-10-12 17:09 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:09 - INFO - 	 PR-AUC: 0.891
2024-10-12 17:09 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:09 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 17:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:09 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 17:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-12 17:09 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:09 - INFO - ---------------------------------------------
2024-10-12 17:09 - INFO - ---------------------------------------------
2024-10-12 17:09 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 17:09 - INFO - 	 Train Loss: 0.064
2024-10-12 17:09 - INFO - 	 Val. Loss: 0.062
2024-10-12 17:09 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:09 - INFO - 	 PR-AUC: 0.890
2024-10-12 17:09 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:09 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 17:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:09 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 17:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-12 17:09 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:09 - INFO - ---------------------------------------------
2024-10-12 17:10 - INFO - ---------------------------------------------
2024-10-12 17:10 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 17:10 - INFO - 	 Train Loss: 0.061
2024-10-12 17:10 - INFO - 	 Val. Loss: 0.061
2024-10-12 17:10 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:10 - INFO - 	 PR-AUC: 0.881
2024-10-12 17:10 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 17:10 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 17:10 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:10 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 17:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-12 17:10 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:10 - INFO - ---------------------------------------------
2024-10-12 17:10 - INFO - ---------------------------------------------
2024-10-12 17:10 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-12 17:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98806
2024-10-12 17:10 - INFO - 	 Train Loss: 0.059
2024-10-12 17:10 - INFO - 	 Val. Loss: 0.060
2024-10-12 17:10 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:10 - INFO - 	 PR-AUC: 0.892
2024-10-12 17:10 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:10 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:10 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:10 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 17:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-12 17:10 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:10 - INFO - ---------------------------------------------
2024-10-12 17:11 - INFO - ---------------------------------------------
2024-10-12 17:11 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 17:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98942
2024-10-12 17:11 - INFO - 	 Train Loss: 0.056
2024-10-12 17:11 - INFO - 	 Val. Loss: 0.056
2024-10-12 17:11 - INFO - 	 ROC-AUC: 0.989
2024-10-12 17:11 - INFO - 	 PR-AUC: 0.903
2024-10-12 17:11 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-12 17:11 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 17:11 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:11 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 17:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 17:11 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 17:11 - INFO - ---------------------------------------------
2024-10-12 17:11 - INFO - ---------------------------------------------
2024-10-12 17:11 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 17:11 - INFO - 	 Train Loss: 0.054
2024-10-12 17:11 - INFO - 	 Val. Loss: 0.062
2024-10-12 17:11 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:11 - INFO - 	 PR-AUC: 0.894
2024-10-12 17:11 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:11 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 17:11 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:11 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 17:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 17:11 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 17:11 - INFO - ---------------------------------------------
2024-10-12 17:12 - INFO - ---------------------------------------------
2024-10-12 17:12 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 17:12 - INFO - 	 Train Loss: 0.054
2024-10-12 17:12 - INFO - 	 Val. Loss: 0.055
2024-10-12 17:12 - INFO - 	 ROC-AUC: 0.989
2024-10-12 17:12 - INFO - 	 PR-AUC: 0.903
2024-10-12 17:12 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-12 17:12 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 17:12 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:12 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 17:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 17:12 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-12 17:12 - INFO - ---------------------------------------------
2024-10-12 17:13 - INFO - Fit the preprocessing pipeline
2024-10-12 17:13 - INFO - Training using device: cuda
2024-10-12 17:13 - INFO - Creating generators
2024-10-12 17:13 - INFO - The model has 651,257 trainable parameters
2024-10-12 17:13 - INFO - * Model:
2024-10-12 17:13 - INFO - * -----------
2024-10-12 17:13 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 17:13 - INFO - * -----------
2024-10-12 17:13 - INFO - Evaluating model based on: rocauc
2024-10-12 17:13 - INFO - Training..

2024-10-12 17:14 - INFO - ---------------------------------------------
2024-10-12 17:14 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 17:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97936
2024-10-12 17:14 - INFO - 	 Train Loss: 0.155
2024-10-12 17:14 - INFO - 	 Val. Loss: 0.080
2024-10-12 17:14 - INFO - 	 ROC-AUC: 0.979
2024-10-12 17:14 - INFO - 	 PR-AUC: 0.817
2024-10-12 17:14 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-12 17:14 - INFO - 	 Best Val. Loss: 0.080
2024-10-12 17:14 - INFO - 	 Best ROC-AUC: 0.979
2024-10-12 17:14 - INFO - 	 Best PR-AUC: 0.817
2024-10-12 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-12 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-10-12 17:14 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-12 17:14 - INFO - ---------------------------------------------
2024-10-12 17:14 - INFO - ---------------------------------------------
2024-10-12 17:14 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-12 17:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9843
2024-10-12 17:14 - INFO - 	 Train Loss: 0.081
2024-10-12 17:14 - INFO - 	 Val. Loss: 0.069
2024-10-12 17:14 - INFO - 	 ROC-AUC: 0.984
2024-10-12 17:14 - INFO - 	 PR-AUC: 0.858
2024-10-12 17:14 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-12 17:14 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 17:14 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 17:14 - INFO - 	 Best PR-AUC: 0.858
2024-10-12 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-12 17:14 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-12 17:14 - INFO - ---------------------------------------------
2024-10-12 17:15 - INFO - ---------------------------------------------
2024-10-12 17:15 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 17:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98644
2024-10-12 17:15 - INFO - 	 Train Loss: 0.071
2024-10-12 17:15 - INFO - 	 Val. Loss: 0.064
2024-10-12 17:15 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:15 - INFO - 	 PR-AUC: 0.874
2024-10-12 17:15 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:15 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 17:15 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 17:15 - INFO - 	 Best PR-AUC: 0.874
2024-10-12 17:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-12 17:15 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:15 - INFO - ---------------------------------------------
2024-10-12 17:15 - INFO - ---------------------------------------------
2024-10-12 17:15 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 17:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98706
2024-10-12 17:15 - INFO - 	 Train Loss: 0.066
2024-10-12 17:15 - INFO - 	 Val. Loss: 0.063
2024-10-12 17:15 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:15 - INFO - 	 PR-AUC: 0.876
2024-10-12 17:15 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:15 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 17:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:15 - INFO - 	 Best PR-AUC: 0.876
2024-10-12 17:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 17:15 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:15 - INFO - ---------------------------------------------
2024-10-12 17:16 - INFO - ---------------------------------------------
2024-10-12 17:16 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 17:16 - INFO - 	 Train Loss: 0.063
2024-10-12 17:16 - INFO - 	 Val. Loss: 0.062
2024-10-12 17:16 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:16 - INFO - 	 PR-AUC: 0.878
2024-10-12 17:16 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:16 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 17:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:16 - INFO - 	 Best PR-AUC: 0.878
2024-10-12 17:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-12 17:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:16 - INFO - ---------------------------------------------
2024-10-12 17:16 - INFO - ---------------------------------------------
2024-10-12 17:16 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 17:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98797
2024-10-12 17:16 - INFO - 	 Train Loss: 0.060
2024-10-12 17:16 - INFO - 	 Val. Loss: 0.061
2024-10-12 17:16 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:16 - INFO - 	 PR-AUC: 0.884
2024-10-12 17:16 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:16 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 17:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:16 - INFO - 	 Best PR-AUC: 0.884
2024-10-12 17:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-12 17:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:16 - INFO - ---------------------------------------------
2024-10-12 17:17 - INFO - ---------------------------------------------
2024-10-12 17:17 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 17:17 - INFO - 	 Train Loss: 0.057
2024-10-12 17:17 - INFO - 	 Val. Loss: 0.062
2024-10-12 17:17 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:17 - INFO - 	 PR-AUC: 0.883
2024-10-12 17:17 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 17:17 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 17:17 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:17 - INFO - 	 Best PR-AUC: 0.884
2024-10-12 17:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-12 17:17 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:17 - INFO - ---------------------------------------------
2024-10-12 17:17 - INFO - ---------------------------------------------
2024-10-12 17:17 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 17:17 - INFO - 	 Train Loss: 0.055
2024-10-12 17:17 - INFO - 	 Val. Loss: 0.059
2024-10-12 17:17 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:17 - INFO - 	 PR-AUC: 0.892
2024-10-12 17:17 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:17 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:17 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:17 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 17:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-12 17:17 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:17 - INFO - ---------------------------------------------
2024-10-12 17:18 - INFO - ---------------------------------------------
2024-10-12 17:18 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 17:18 - INFO - 	 Train Loss: 0.054
2024-10-12 17:18 - INFO - 	 Val. Loss: 0.063
2024-10-12 17:18 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:18 - INFO - 	 PR-AUC: 0.886
2024-10-12 17:18 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:18 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:18 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:18 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 17:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-12 17:18 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:18 - INFO - ---------------------------------------------
2024-10-12 17:20 - INFO - Fit the preprocessing pipeline
2024-10-12 17:20 - INFO - Training using device: cuda
2024-10-12 17:20 - INFO - Creating generators
2024-10-12 17:20 - INFO - The model has 651,257 trainable parameters
2024-10-12 17:20 - INFO - * Model:
2024-10-12 17:20 - INFO - * -----------
2024-10-12 17:20 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 17:20 - INFO - * -----------
2024-10-12 17:20 - INFO - Evaluating model based on: rocauc
2024-10-12 17:20 - INFO - Training..

2024-10-12 17:21 - INFO - ---------------------------------------------
2024-10-12 17:21 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 17:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97676
2024-10-12 17:21 - INFO - 	 Train Loss: 0.155
2024-10-12 17:21 - INFO - 	 Val. Loss: 0.117
2024-10-12 17:21 - INFO - 	 ROC-AUC: 0.977
2024-10-12 17:21 - INFO - 	 PR-AUC: 0.782
2024-10-12 17:21 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-12 17:21 - INFO - 	 Best Val. Loss: 0.117
2024-10-12 17:21 - INFO - 	 Best ROC-AUC: 0.977
2024-10-12 17:21 - INFO - 	 Best PR-AUC: 0.782
2024-10-12 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-12 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.747
2024-10-12 17:21 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-12 17:21 - INFO - ---------------------------------------------
2024-10-12 17:21 - INFO - ---------------------------------------------
2024-10-12 17:21 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 17:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98171
2024-10-12 17:21 - INFO - 	 Train Loss: 0.083
2024-10-12 17:21 - INFO - 	 Val. Loss: 0.074
2024-10-12 17:21 - INFO - 	 ROC-AUC: 0.982
2024-10-12 17:21 - INFO - 	 PR-AUC: 0.843
2024-10-12 17:21 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-12 17:21 - INFO - 	 Best Val. Loss: 0.074
2024-10-12 17:21 - INFO - 	 Best ROC-AUC: 0.982
2024-10-12 17:21 - INFO - 	 Best PR-AUC: 0.843
2024-10-12 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-12 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-12 17:21 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-12 17:21 - INFO - ---------------------------------------------
2024-10-12 17:22 - INFO - ---------------------------------------------
2024-10-12 17:22 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-12 17:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98619
2024-10-12 17:22 - INFO - 	 Train Loss: 0.072
2024-10-12 17:22 - INFO - 	 Val. Loss: 0.064
2024-10-12 17:22 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:22 - INFO - 	 PR-AUC: 0.868
2024-10-12 17:22 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:22 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 17:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 17:22 - INFO - 	 Best PR-AUC: 0.868
2024-10-12 17:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-12 17:22 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:22 - INFO - ---------------------------------------------
2024-10-12 17:22 - INFO - ---------------------------------------------
2024-10-12 17:22 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 17:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98732
2024-10-12 17:22 - INFO - 	 Train Loss: 0.067
2024-10-12 17:22 - INFO - 	 Val. Loss: 0.061
2024-10-12 17:22 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:22 - INFO - 	 PR-AUC: 0.882
2024-10-12 17:22 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:22 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 17:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:22 - INFO - 	 Best PR-AUC: 0.882
2024-10-12 17:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-12 17:22 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:22 - INFO - ---------------------------------------------
2024-10-12 17:23 - INFO - ---------------------------------------------
2024-10-12 17:23 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 17:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98755
2024-10-12 17:23 - INFO - 	 Train Loss: 0.062
2024-10-12 17:23 - INFO - 	 Val. Loss: 0.060
2024-10-12 17:23 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:23 - INFO - 	 PR-AUC: 0.883
2024-10-12 17:23 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:23 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:23 - INFO - 	 Best PR-AUC: 0.883
2024-10-12 17:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 17:23 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:23 - INFO - ---------------------------------------------
2024-10-12 17:23 - INFO - ---------------------------------------------
2024-10-12 17:23 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-12 17:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98814
2024-10-12 17:23 - INFO - 	 Train Loss: 0.060
2024-10-12 17:23 - INFO - 	 Val. Loss: 0.059
2024-10-12 17:23 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:23 - INFO - 	 PR-AUC: 0.897
2024-10-12 17:23 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:23 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:23 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 17:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 17:23 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:23 - INFO - ---------------------------------------------
2024-10-12 17:24 - INFO - ---------------------------------------------
2024-10-12 17:24 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-12 17:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98821
2024-10-12 17:24 - INFO - 	 Train Loss: 0.057
2024-10-12 17:24 - INFO - 	 Val. Loss: 0.060
2024-10-12 17:24 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:24 - INFO - 	 PR-AUC: 0.892
2024-10-12 17:24 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 17:24 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:24 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 17:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 17:24 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:24 - INFO - ---------------------------------------------
2024-10-12 17:24 - INFO - ---------------------------------------------
2024-10-12 17:24 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-12 17:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98837
2024-10-12 17:24 - INFO - 	 Train Loss: 0.055
2024-10-12 17:24 - INFO - 	 Val. Loss: 0.059
2024-10-12 17:24 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:24 - INFO - 	 PR-AUC: 0.891
2024-10-12 17:24 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:24 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:24 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 17:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 17:24 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:24 - INFO - ---------------------------------------------
2024-10-12 17:25 - INFO - ---------------------------------------------
2024-10-12 17:25 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 17:25 - INFO - 	 Train Loss: 0.054
2024-10-12 17:25 - INFO - 	 Val. Loss: 0.059
2024-10-12 17:25 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:25 - INFO - 	 PR-AUC: 0.892
2024-10-12 17:25 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:25 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:25 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 17:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 17:25 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:25 - INFO - ---------------------------------------------
2024-10-12 17:25 - INFO - ---------------------------------------------
2024-10-12 17:25 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-12 17:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9886
2024-10-12 17:25 - INFO - 	 Train Loss: 0.054
2024-10-12 17:25 - INFO - 	 Val. Loss: 0.058
2024-10-12 17:25 - INFO - 	 ROC-AUC: 0.989
2024-10-12 17:25 - INFO - 	 PR-AUC: 0.902
2024-10-12 17:25 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 17:25 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 17:25 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:25 - INFO - 	 Best PR-AUC: 0.902
2024-10-12 17:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-12 17:25 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 17:25 - INFO - ---------------------------------------------
2024-10-12 17:27 - INFO - Fit the preprocessing pipeline
2024-10-12 17:27 - INFO - Training using device: cuda
2024-10-12 17:27 - INFO - Creating generators
2024-10-12 17:27 - INFO - The model has 651,257 trainable parameters
2024-10-12 17:27 - INFO - * Model:
2024-10-12 17:27 - INFO - * -----------
2024-10-12 17:27 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 17:27 - INFO - * -----------
2024-10-12 17:27 - INFO - Evaluating model based on: rocauc
2024-10-12 17:27 - INFO - Training..

2024-10-12 17:27 - INFO - ---------------------------------------------
2024-10-12 17:27 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 17:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98065
2024-10-12 17:27 - INFO - 	 Train Loss: 0.153
2024-10-12 17:27 - INFO - 	 Val. Loss: 0.078
2024-10-12 17:27 - INFO - 	 ROC-AUC: 0.981
2024-10-12 17:27 - INFO - 	 PR-AUC: 0.820
2024-10-12 17:27 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-12 17:27 - INFO - 	 Best Val. Loss: 0.078
2024-10-12 17:27 - INFO - 	 Best ROC-AUC: 0.981
2024-10-12 17:27 - INFO - 	 Best PR-AUC: 0.820
2024-10-12 17:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-12 17:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.792
2024-10-12 17:27 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-12 17:27 - INFO - ---------------------------------------------
2024-10-12 17:28 - INFO - ---------------------------------------------
2024-10-12 17:28 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 17:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98471
2024-10-12 17:28 - INFO - 	 Train Loss: 0.081
2024-10-12 17:28 - INFO - 	 Val. Loss: 0.068
2024-10-12 17:28 - INFO - 	 ROC-AUC: 0.985
2024-10-12 17:28 - INFO - 	 PR-AUC: 0.868
2024-10-12 17:28 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 17:28 - INFO - 	 Best Val. Loss: 0.068
2024-10-12 17:28 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 17:28 - INFO - 	 Best PR-AUC: 0.868
2024-10-12 17:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-12 17:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-12 17:28 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 17:28 - INFO - ---------------------------------------------
2024-10-12 17:28 - INFO - ---------------------------------------------
2024-10-12 17:28 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 17:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98602
2024-10-12 17:28 - INFO - 	 Train Loss: 0.072
2024-10-12 17:28 - INFO - 	 Val. Loss: 0.068
2024-10-12 17:28 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:28 - INFO - 	 PR-AUC: 0.864
2024-10-12 17:28 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 17:28 - INFO - 	 Best Val. Loss: 0.068
2024-10-12 17:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 17:28 - INFO - 	 Best PR-AUC: 0.868
2024-10-12 17:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 17:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-12 17:28 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 17:28 - INFO - ---------------------------------------------
2024-10-12 17:29 - INFO - ---------------------------------------------
2024-10-12 17:29 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-12 17:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9862
2024-10-12 17:29 - INFO - 	 Train Loss: 0.067
2024-10-12 17:29 - INFO - 	 Val. Loss: 0.068
2024-10-12 17:29 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:29 - INFO - 	 PR-AUC: 0.869
2024-10-12 17:29 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 17:29 - INFO - 	 Best Val. Loss: 0.068
2024-10-12 17:29 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 17:29 - INFO - 	 Best PR-AUC: 0.869
2024-10-12 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-12 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-12 17:29 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 17:29 - INFO - ---------------------------------------------
2024-10-12 17:30 - INFO - ---------------------------------------------
2024-10-12 17:30 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-12 17:30 - INFO - 	 Train Loss: 0.064
2024-10-12 17:30 - INFO - 	 Val. Loss: 0.066
2024-10-12 17:30 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:30 - INFO - 	 PR-AUC: 0.875
2024-10-12 17:30 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:30 - INFO - 	 Best Val. Loss: 0.066
2024-10-12 17:30 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 17:30 - INFO - 	 Best PR-AUC: 0.875
2024-10-12 17:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-12 17:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-12 17:30 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:30 - INFO - ---------------------------------------------
2024-10-12 17:30 - INFO - ---------------------------------------------
2024-10-12 17:30 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 17:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98751
2024-10-12 17:30 - INFO - 	 Train Loss: 0.060
2024-10-12 17:30 - INFO - 	 Val. Loss: 0.063
2024-10-12 17:30 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:30 - INFO - 	 PR-AUC: 0.885
2024-10-12 17:30 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:30 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 17:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:30 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 17:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 17:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 17:30 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:30 - INFO - ---------------------------------------------
2024-10-12 17:31 - INFO - ---------------------------------------------
2024-10-12 17:31 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 17:31 - INFO - 	 Train Loss: 0.059
2024-10-12 17:31 - INFO - 	 Val. Loss: 0.064
2024-10-12 17:31 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:31 - INFO - 	 PR-AUC: 0.878
2024-10-12 17:31 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 17:31 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 17:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:31 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 17:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 17:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 17:31 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:31 - INFO - ---------------------------------------------
2024-10-12 17:31 - INFO - ---------------------------------------------
2024-10-12 17:31 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 17:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98825
2024-10-12 17:31 - INFO - 	 Train Loss: 0.057
2024-10-12 17:31 - INFO - 	 Val. Loss: 0.062
2024-10-12 17:31 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:31 - INFO - 	 PR-AUC: 0.888
2024-10-12 17:31 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:31 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 17:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:31 - INFO - 	 Best PR-AUC: 0.888
2024-10-12 17:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 17:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 17:31 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:31 - INFO - ---------------------------------------------
2024-10-12 17:32 - INFO - ---------------------------------------------
2024-10-12 17:32 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 17:32 - INFO - 	 Train Loss: 0.055
2024-10-12 17:32 - INFO - 	 Val. Loss: 0.060
2024-10-12 17:32 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:32 - INFO - 	 PR-AUC: 0.893
2024-10-12 17:32 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 17:32 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:32 - INFO - 	 Best PR-AUC: 0.893
2024-10-12 17:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 17:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-12 17:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:32 - INFO - ---------------------------------------------
2024-10-12 17:32 - INFO - ---------------------------------------------
2024-10-12 17:32 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 17:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98898
2024-10-12 17:32 - INFO - 	 Train Loss: 0.053
2024-10-12 17:32 - INFO - 	 Val. Loss: 0.059
2024-10-12 17:32 - INFO - 	 ROC-AUC: 0.989
2024-10-12 17:32 - INFO - 	 PR-AUC: 0.895
2024-10-12 17:32 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-12 17:32 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:32 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 17:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-12 17:32 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 17:32 - INFO - ---------------------------------------------
2024-10-12 17:34 - INFO - Fit the preprocessing pipeline
2024-10-12 17:34 - INFO - Training using device: cuda
2024-10-12 17:34 - INFO - Creating generators
2024-10-12 17:34 - INFO - The model has 651,257 trainable parameters
2024-10-12 17:34 - INFO - * Model:
2024-10-12 17:34 - INFO - * -----------
2024-10-12 17:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 17:34 - INFO - * -----------
2024-10-12 17:34 - INFO - Evaluating model based on: rocauc
2024-10-12 17:34 - INFO - Training..

2024-10-12 17:34 - INFO - ---------------------------------------------
2024-10-12 17:34 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 17:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97994
2024-10-12 17:34 - INFO - 	 Train Loss: 0.151
2024-10-12 17:34 - INFO - 	 Val. Loss: 0.081
2024-10-12 17:34 - INFO - 	 ROC-AUC: 0.980
2024-10-12 17:34 - INFO - 	 PR-AUC: 0.814
2024-10-12 17:34 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-12 17:34 - INFO - 	 Best Val. Loss: 0.081
2024-10-12 17:34 - INFO - 	 Best ROC-AUC: 0.980
2024-10-12 17:34 - INFO - 	 Best PR-AUC: 0.814
2024-10-12 17:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-12 17:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-10-12 17:34 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-12 17:34 - INFO - ---------------------------------------------
2024-10-12 17:35 - INFO - ---------------------------------------------
2024-10-12 17:35 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 17:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98314
2024-10-12 17:35 - INFO - 	 Train Loss: 0.082
2024-10-12 17:35 - INFO - 	 Val. Loss: 0.073
2024-10-12 17:35 - INFO - 	 ROC-AUC: 0.983
2024-10-12 17:35 - INFO - 	 PR-AUC: 0.845
2024-10-12 17:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 17:35 - INFO - 	 Best Val. Loss: 0.073
2024-10-12 17:35 - INFO - 	 Best ROC-AUC: 0.983
2024-10-12 17:35 - INFO - 	 Best PR-AUC: 0.845
2024-10-12 17:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 17:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-12 17:35 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 17:35 - INFO - ---------------------------------------------
2024-10-12 17:35 - INFO - ---------------------------------------------
2024-10-12 17:35 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 17:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98496
2024-10-12 17:35 - INFO - 	 Train Loss: 0.072
2024-10-12 17:35 - INFO - 	 Val. Loss: 0.069
2024-10-12 17:35 - INFO - 	 ROC-AUC: 0.985
2024-10-12 17:35 - INFO - 	 PR-AUC: 0.868
2024-10-12 17:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 17:35 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 17:35 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 17:35 - INFO - 	 Best PR-AUC: 0.868
2024-10-12 17:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-12 17:35 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 17:35 - INFO - ---------------------------------------------
2024-10-12 17:36 - INFO - ---------------------------------------------
2024-10-12 17:36 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 17:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9856
2024-10-12 17:36 - INFO - 	 Train Loss: 0.068
2024-10-12 17:36 - INFO - 	 Val. Loss: 0.067
2024-10-12 17:36 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:36 - INFO - 	 PR-AUC: 0.871
2024-10-12 17:36 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:36 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 17:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 17:36 - INFO - 	 Best PR-AUC: 0.871
2024-10-12 17:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-12 17:36 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:36 - INFO - ---------------------------------------------
2024-10-12 17:36 - INFO - ---------------------------------------------
2024-10-12 17:36 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-12 17:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98731
2024-10-12 17:36 - INFO - 	 Train Loss: 0.063
2024-10-12 17:36 - INFO - 	 Val. Loss: 0.062
2024-10-12 17:36 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:36 - INFO - 	 PR-AUC: 0.886
2024-10-12 17:36 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:36 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 17:36 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:36 - INFO - 	 Best PR-AUC: 0.886
2024-10-12 17:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-12 17:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:36 - INFO - ---------------------------------------------
2024-10-12 17:37 - INFO - ---------------------------------------------
2024-10-12 17:37 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 17:37 - INFO - 	 Train Loss: 0.059
2024-10-12 17:37 - INFO - 	 Val. Loss: 0.061
2024-10-12 17:37 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:37 - INFO - 	 PR-AUC: 0.888
2024-10-12 17:37 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 17:37 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 17:37 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:37 - INFO - 	 Best PR-AUC: 0.888
2024-10-12 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-12 17:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:37 - INFO - ---------------------------------------------
2024-10-12 17:37 - INFO - ---------------------------------------------
2024-10-12 17:37 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 17:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98823
2024-10-12 17:37 - INFO - 	 Train Loss: 0.058
2024-10-12 17:37 - INFO - 	 Val. Loss: 0.060
2024-10-12 17:37 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:37 - INFO - 	 PR-AUC: 0.895
2024-10-12 17:37 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 17:37 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:37 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 17:37 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 17:37 - INFO - ---------------------------------------------
2024-10-12 17:38 - INFO - ---------------------------------------------
2024-10-12 17:38 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 17:38 - INFO - 	 Train Loss: 0.056
2024-10-12 17:38 - INFO - 	 Val. Loss: 0.060
2024-10-12 17:38 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:38 - INFO - 	 PR-AUC: 0.893
2024-10-12 17:38 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:38 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:38 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 17:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 17:38 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 17:38 - INFO - ---------------------------------------------
2024-10-12 17:39 - INFO - ---------------------------------------------
2024-10-12 17:39 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-12 17:39 - INFO - 	 Train Loss: 0.054
2024-10-12 17:39 - INFO - 	 Val. Loss: 0.060
2024-10-12 17:39 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:39 - INFO - 	 PR-AUC: 0.896
2024-10-12 17:39 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:39 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:39 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 17:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-12 17:39 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 17:39 - INFO - ---------------------------------------------
2024-10-12 17:39 - INFO - ---------------------------------------------
2024-10-12 17:39 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 17:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9884
2024-10-12 17:39 - INFO - 	 Train Loss: 0.053
2024-10-12 17:39 - INFO - 	 Val. Loss: 0.059
2024-10-12 17:39 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:39 - INFO - 	 PR-AUC: 0.904
2024-10-12 17:39 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:39 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:39 - INFO - 	 Best PR-AUC: 0.904
2024-10-12 17:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-12 17:39 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 17:39 - INFO - ---------------------------------------------
2024-10-12 17:41 - INFO - Fit the preprocessing pipeline
2024-10-12 17:41 - INFO - Training using device: cuda
2024-10-12 17:41 - INFO - Creating generators
2024-10-12 17:41 - INFO - The model has 651,257 trainable parameters
2024-10-12 17:41 - INFO - * Model:
2024-10-12 17:41 - INFO - * -----------
2024-10-12 17:41 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 17:41 - INFO - * -----------
2024-10-12 17:41 - INFO - Evaluating model based on: rocauc
2024-10-12 17:41 - INFO - Training..

2024-10-12 17:41 - INFO - ---------------------------------------------
2024-10-12 17:41 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 17:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97975
2024-10-12 17:41 - INFO - 	 Train Loss: 0.150
2024-10-12 17:41 - INFO - 	 Val. Loss: 0.077
2024-10-12 17:41 - INFO - 	 ROC-AUC: 0.980
2024-10-12 17:41 - INFO - 	 PR-AUC: 0.838
2024-10-12 17:41 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-12 17:41 - INFO - 	 Best Val. Loss: 0.077
2024-10-12 17:41 - INFO - 	 Best ROC-AUC: 0.980
2024-10-12 17:41 - INFO - 	 Best PR-AUC: 0.838
2024-10-12 17:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-12 17:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-12 17:41 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-12 17:41 - INFO - ---------------------------------------------
2024-10-12 17:42 - INFO - ---------------------------------------------
2024-10-12 17:42 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-12 17:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98441
2024-10-12 17:42 - INFO - 	 Train Loss: 0.081
2024-10-12 17:42 - INFO - 	 Val. Loss: 0.069
2024-10-12 17:42 - INFO - 	 ROC-AUC: 0.984
2024-10-12 17:42 - INFO - 	 PR-AUC: 0.862
2024-10-12 17:42 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:42 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 17:42 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 17:42 - INFO - 	 Best PR-AUC: 0.862
2024-10-12 17:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-12 17:42 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:42 - INFO - ---------------------------------------------
2024-10-12 17:42 - INFO - ---------------------------------------------
2024-10-12 17:42 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-12 17:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98501
2024-10-12 17:42 - INFO - 	 Train Loss: 0.071
2024-10-12 17:42 - INFO - 	 Val. Loss: 0.068
2024-10-12 17:42 - INFO - 	 ROC-AUC: 0.985
2024-10-12 17:42 - INFO - 	 PR-AUC: 0.867
2024-10-12 17:42 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:42 - INFO - 	 Best Val. Loss: 0.068
2024-10-12 17:42 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 17:42 - INFO - 	 Best PR-AUC: 0.867
2024-10-12 17:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-12 17:42 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:42 - INFO - ---------------------------------------------
2024-10-12 17:43 - INFO - ---------------------------------------------
2024-10-12 17:43 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 17:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98593
2024-10-12 17:43 - INFO - 	 Train Loss: 0.066
2024-10-12 17:43 - INFO - 	 Val. Loss: 0.065
2024-10-12 17:43 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:43 - INFO - 	 PR-AUC: 0.871
2024-10-12 17:43 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:43 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 17:43 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 17:43 - INFO - 	 Best PR-AUC: 0.871
2024-10-12 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-12 17:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:43 - INFO - ---------------------------------------------
2024-10-12 17:43 - INFO - ---------------------------------------------
2024-10-12 17:43 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 17:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98709
2024-10-12 17:43 - INFO - 	 Train Loss: 0.062
2024-10-12 17:43 - INFO - 	 Val. Loss: 0.060
2024-10-12 17:43 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:43 - INFO - 	 PR-AUC: 0.892
2024-10-12 17:43 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:43 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:43 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:43 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-12 17:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:43 - INFO - ---------------------------------------------
2024-10-12 17:44 - INFO - ---------------------------------------------
2024-10-12 17:44 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 17:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9876
2024-10-12 17:44 - INFO - 	 Train Loss: 0.059
2024-10-12 17:44 - INFO - 	 Val. Loss: 0.063
2024-10-12 17:44 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:44 - INFO - 	 PR-AUC: 0.892
2024-10-12 17:44 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:44 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:44 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 17:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-12 17:44 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:44 - INFO - ---------------------------------------------
2024-10-12 17:44 - INFO - ---------------------------------------------
2024-10-12 17:44 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 17:44 - INFO - 	 Train Loss: 0.057
2024-10-12 17:44 - INFO - 	 Val. Loss: 0.065
2024-10-12 17:44 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:44 - INFO - 	 PR-AUC: 0.887
2024-10-12 17:44 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 17:44 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:44 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 17:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-12 17:44 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:44 - INFO - ---------------------------------------------
2024-10-12 17:45 - INFO - ---------------------------------------------
2024-10-12 17:45 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 17:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98773
2024-10-12 17:45 - INFO - 	 Train Loss: 0.056
2024-10-12 17:45 - INFO - 	 Val. Loss: 0.061
2024-10-12 17:45 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:45 - INFO - 	 PR-AUC: 0.905
2024-10-12 17:45 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:45 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 17:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:45 - INFO - 	 Best PR-AUC: 0.905
2024-10-12 17:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-12 17:45 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:45 - INFO - ---------------------------------------------
2024-10-12 17:45 - INFO - ---------------------------------------------
2024-10-12 17:45 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 17:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98847
2024-10-12 17:45 - INFO - 	 Train Loss: 0.054
2024-10-12 17:45 - INFO - 	 Val. Loss: 0.058
2024-10-12 17:45 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:45 - INFO - 	 PR-AUC: 0.900
2024-10-12 17:45 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:45 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 17:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:45 - INFO - 	 Best PR-AUC: 0.905
2024-10-12 17:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-12 17:45 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:45 - INFO - ---------------------------------------------
2024-10-12 17:46 - INFO - ---------------------------------------------
2024-10-12 17:46 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 17:46 - INFO - 	 Train Loss: 0.053
2024-10-12 17:46 - INFO - 	 Val. Loss: 0.057
2024-10-12 17:46 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:46 - INFO - 	 PR-AUC: 0.905
2024-10-12 17:46 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 17:46 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 17:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:46 - INFO - 	 Best PR-AUC: 0.905
2024-10-12 17:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 17:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-10-12 17:46 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:46 - INFO - ---------------------------------------------
2024-10-12 17:47 - INFO - Fit the preprocessing pipeline
2024-10-12 17:47 - INFO - Training using device: cuda
2024-10-12 17:47 - INFO - Creating generators
2024-10-12 17:47 - INFO - The model has 651,257 trainable parameters
2024-10-12 17:47 - INFO - * Model:
2024-10-12 17:47 - INFO - * -----------
2024-10-12 17:47 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 17:47 - INFO - * -----------
2024-10-12 17:47 - INFO - Evaluating model based on: rocauc
2024-10-12 17:47 - INFO - Training..

2024-10-12 17:48 - INFO - ---------------------------------------------
2024-10-12 17:48 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 17:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97914
2024-10-12 17:48 - INFO - 	 Train Loss: 0.150
2024-10-12 17:48 - INFO - 	 Val. Loss: 0.083
2024-10-12 17:48 - INFO - 	 ROC-AUC: 0.979
2024-10-12 17:48 - INFO - 	 PR-AUC: 0.836
2024-10-12 17:48 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-12 17:48 - INFO - 	 Best Val. Loss: 0.083
2024-10-12 17:48 - INFO - 	 Best ROC-AUC: 0.979
2024-10-12 17:48 - INFO - 	 Best PR-AUC: 0.836
2024-10-12 17:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-12 17:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-12 17:48 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-12 17:48 - INFO - ---------------------------------------------
2024-10-12 17:49 - INFO - ---------------------------------------------
2024-10-12 17:49 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-12 17:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98532
2024-10-12 17:49 - INFO - 	 Train Loss: 0.080
2024-10-12 17:49 - INFO - 	 Val. Loss: 0.070
2024-10-12 17:49 - INFO - 	 ROC-AUC: 0.985
2024-10-12 17:49 - INFO - 	 PR-AUC: 0.865
2024-10-12 17:49 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 17:49 - INFO - 	 Best Val. Loss: 0.070
2024-10-12 17:49 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 17:49 - INFO - 	 Best PR-AUC: 0.865
2024-10-12 17:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 17:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-12 17:49 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 17:49 - INFO - ---------------------------------------------
2024-10-12 17:49 - INFO - ---------------------------------------------
2024-10-12 17:49 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 17:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9862
2024-10-12 17:49 - INFO - 	 Train Loss: 0.070
2024-10-12 17:49 - INFO - 	 Val. Loss: 0.066
2024-10-12 17:49 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:49 - INFO - 	 PR-AUC: 0.875
2024-10-12 17:49 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 17:49 - INFO - 	 Best Val. Loss: 0.066
2024-10-12 17:49 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 17:49 - INFO - 	 Best PR-AUC: 0.875
2024-10-12 17:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 17:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-12 17:49 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 17:49 - INFO - ---------------------------------------------
2024-10-12 17:50 - INFO - ---------------------------------------------
2024-10-12 17:50 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 17:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98726
2024-10-12 17:50 - INFO - 	 Train Loss: 0.066
2024-10-12 17:50 - INFO - 	 Val. Loss: 0.061
2024-10-12 17:50 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:50 - INFO - 	 PR-AUC: 0.876
2024-10-12 17:50 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 17:50 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 17:50 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:50 - INFO - 	 Best PR-AUC: 0.876
2024-10-12 17:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-12 17:50 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 17:50 - INFO - ---------------------------------------------
2024-10-12 17:50 - INFO - ---------------------------------------------
2024-10-12 17:50 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 17:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98862
2024-10-12 17:50 - INFO - 	 Train Loss: 0.063
2024-10-12 17:50 - INFO - 	 Val. Loss: 0.059
2024-10-12 17:50 - INFO - 	 ROC-AUC: 0.989
2024-10-12 17:50 - INFO - 	 PR-AUC: 0.897
2024-10-12 17:50 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:50 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:50 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:50 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 17:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-12 17:50 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 17:50 - INFO - ---------------------------------------------
2024-10-12 17:51 - INFO - ---------------------------------------------
2024-10-12 17:51 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 17:51 - INFO - 	 Train Loss: 0.059
2024-10-12 17:51 - INFO - 	 Val. Loss: 0.063
2024-10-12 17:51 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:51 - INFO - 	 PR-AUC: 0.874
2024-10-12 17:51 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:51 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:51 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-12 17:51 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 17:51 - INFO - ---------------------------------------------
2024-10-12 17:51 - INFO - ---------------------------------------------
2024-10-12 17:51 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 17:51 - INFO - 	 Train Loss: 0.058
2024-10-12 17:51 - INFO - 	 Val. Loss: 0.061
2024-10-12 17:51 - INFO - 	 ROC-AUC: 0.989
2024-10-12 17:51 - INFO - 	 PR-AUC: 0.885
2024-10-12 17:51 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 17:51 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:51 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-12 17:51 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 17:51 - INFO - ---------------------------------------------
2024-10-12 17:52 - INFO - ---------------------------------------------
2024-10-12 17:52 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-12 17:52 - INFO - 	 Train Loss: 0.056
2024-10-12 17:52 - INFO - 	 Val. Loss: 0.062
2024-10-12 17:52 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:52 - INFO - 	 PR-AUC: 0.887
2024-10-12 17:52 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 17:52 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:52 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 17:52 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 17:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-12 17:52 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 17:52 - INFO - ---------------------------------------------
2024-10-12 17:54 - INFO - Fit the preprocessing pipeline
2024-10-12 17:54 - INFO - Training using device: cuda
2024-10-12 17:54 - INFO - Creating generators
2024-10-12 17:54 - INFO - The model has 651,257 trainable parameters
2024-10-12 17:54 - INFO - * Model:
2024-10-12 17:54 - INFO - * -----------
2024-10-12 17:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 17:54 - INFO - * -----------
2024-10-12 17:54 - INFO - Evaluating model based on: rocauc
2024-10-12 17:54 - INFO - Training..

2024-10-12 17:54 - INFO - ---------------------------------------------
2024-10-12 17:54 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 17:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97417
2024-10-12 17:54 - INFO - 	 Train Loss: 0.159
2024-10-12 17:54 - INFO - 	 Val. Loss: 0.090
2024-10-12 17:54 - INFO - 	 ROC-AUC: 0.974
2024-10-12 17:54 - INFO - 	 PR-AUC: 0.771
2024-10-12 17:54 - INFO - 	 Recall for 0.4 precision: 0.948
2024-10-12 17:54 - INFO - 	 Best Val. Loss: 0.090
2024-10-12 17:54 - INFO - 	 Best ROC-AUC: 0.974
2024-10-12 17:54 - INFO - 	 Best PR-AUC: 0.771
2024-10-12 17:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-12 17:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.742
2024-10-12 17:54 - INFO - 	 Best Recall for 0.4 precision: 0.948
2024-10-12 17:54 - INFO - ---------------------------------------------
2024-10-12 17:55 - INFO - ---------------------------------------------
2024-10-12 17:55 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-12 17:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98431
2024-10-12 17:55 - INFO - 	 Train Loss: 0.085
2024-10-12 17:55 - INFO - 	 Val. Loss: 0.069
2024-10-12 17:55 - INFO - 	 ROC-AUC: 0.984
2024-10-12 17:55 - INFO - 	 PR-AUC: 0.854
2024-10-12 17:55 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:55 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 17:55 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 17:55 - INFO - 	 Best PR-AUC: 0.854
2024-10-12 17:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 17:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-12 17:55 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:55 - INFO - ---------------------------------------------
2024-10-12 17:55 - INFO - ---------------------------------------------
2024-10-12 17:55 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 17:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98653
2024-10-12 17:55 - INFO - 	 Train Loss: 0.073
2024-10-12 17:55 - INFO - 	 Val. Loss: 0.064
2024-10-12 17:55 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:55 - INFO - 	 PR-AUC: 0.873
2024-10-12 17:55 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:55 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 17:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:55 - INFO - 	 Best PR-AUC: 0.873
2024-10-12 17:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 17:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-12 17:55 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:55 - INFO - ---------------------------------------------
2024-10-12 17:56 - INFO - ---------------------------------------------
2024-10-12 17:56 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-12 17:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98727
2024-10-12 17:56 - INFO - 	 Train Loss: 0.067
2024-10-12 17:56 - INFO - 	 Val. Loss: 0.062
2024-10-12 17:56 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:56 - INFO - 	 PR-AUC: 0.891
2024-10-12 17:56 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 17:56 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 17:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:56 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 17:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-12 17:56 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:56 - INFO - ---------------------------------------------
2024-10-12 17:56 - INFO - ---------------------------------------------
2024-10-12 17:56 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 17:56 - INFO - 	 Train Loss: 0.064
2024-10-12 17:56 - INFO - 	 Val. Loss: 0.062
2024-10-12 17:56 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:56 - INFO - 	 PR-AUC: 0.881
2024-10-12 17:56 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 17:56 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 17:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 17:56 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 17:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 17:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-12 17:56 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:56 - INFO - ---------------------------------------------
2024-10-12 17:57 - INFO - ---------------------------------------------
2024-10-12 17:57 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 17:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9881
2024-10-12 17:57 - INFO - 	 Train Loss: 0.061
2024-10-12 17:57 - INFO - 	 Val. Loss: 0.059
2024-10-12 17:57 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:57 - INFO - 	 PR-AUC: 0.894
2024-10-12 17:57 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 17:57 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:57 - INFO - 	 Best PR-AUC: 0.894
2024-10-12 17:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-12 17:57 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:57 - INFO - ---------------------------------------------
2024-10-12 17:57 - INFO - ---------------------------------------------
2024-10-12 17:57 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 17:57 - INFO - 	 Train Loss: 0.059
2024-10-12 17:57 - INFO - 	 Val. Loss: 0.061
2024-10-12 17:57 - INFO - 	 ROC-AUC: 0.986
2024-10-12 17:57 - INFO - 	 PR-AUC: 0.891
2024-10-12 17:57 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 17:57 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:57 - INFO - 	 Best PR-AUC: 0.894
2024-10-12 17:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-12 17:57 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:57 - INFO - ---------------------------------------------
2024-10-12 17:58 - INFO - ---------------------------------------------
2024-10-12 17:58 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 17:58 - INFO - 	 Train Loss: 0.056
2024-10-12 17:58 - INFO - 	 Val. Loss: 0.063
2024-10-12 17:58 - INFO - 	 ROC-AUC: 0.987
2024-10-12 17:58 - INFO - 	 PR-AUC: 0.886
2024-10-12 17:58 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 17:58 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 17:58 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:58 - INFO - 	 Best PR-AUC: 0.894
2024-10-12 17:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-12 17:58 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 17:58 - INFO - ---------------------------------------------
2024-10-12 17:59 - INFO - ---------------------------------------------
2024-10-12 17:59 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 17:59 - INFO - 	 Train Loss: 0.055
2024-10-12 17:59 - INFO - 	 Val. Loss: 0.058
2024-10-12 17:59 - INFO - 	 ROC-AUC: 0.988
2024-10-12 17:59 - INFO - 	 PR-AUC: 0.895
2024-10-12 17:59 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-12 17:59 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 17:59 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 17:59 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 17:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 17:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-12 17:59 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 17:59 - INFO - ---------------------------------------------
2024-10-12 18:01 - INFO - Fit the preprocessing pipeline
2024-10-12 18:01 - INFO - Training using device: cuda
2024-10-12 18:01 - INFO - Creating generators
2024-10-12 18:01 - INFO - The model has 651,257 trainable parameters
2024-10-12 18:01 - INFO - * Model:
2024-10-12 18:01 - INFO - * -----------
2024-10-12 18:01 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 18:01 - INFO - * -----------
2024-10-12 18:01 - INFO - Evaluating model based on: rocauc
2024-10-12 18:01 - INFO - Training..

2024-10-12 18:01 - INFO - ---------------------------------------------
2024-10-12 18:01 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 18:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97572
2024-10-12 18:01 - INFO - 	 Train Loss: 0.144
2024-10-12 18:01 - INFO - 	 Val. Loss: 0.101
2024-10-12 18:01 - INFO - 	 ROC-AUC: 0.976
2024-10-12 18:01 - INFO - 	 PR-AUC: 0.784
2024-10-12 18:01 - INFO - 	 Recall for 0.4 precision: 0.955
2024-10-12 18:01 - INFO - 	 Best Val. Loss: 0.101
2024-10-12 18:01 - INFO - 	 Best ROC-AUC: 0.976
2024-10-12 18:01 - INFO - 	 Best PR-AUC: 0.784
2024-10-12 18:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-12 18:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.771
2024-10-12 18:01 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-12 18:01 - INFO - ---------------------------------------------
2024-10-12 18:02 - INFO - ---------------------------------------------
2024-10-12 18:02 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 18:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98521
2024-10-12 18:02 - INFO - 	 Train Loss: 0.080
2024-10-12 18:02 - INFO - 	 Val. Loss: 0.067
2024-10-12 18:02 - INFO - 	 ROC-AUC: 0.985
2024-10-12 18:02 - INFO - 	 PR-AUC: 0.870
2024-10-12 18:02 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 18:02 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 18:02 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 18:02 - INFO - 	 Best PR-AUC: 0.870
2024-10-12 18:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-12 18:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-12 18:02 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 18:02 - INFO - ---------------------------------------------
2024-10-12 18:02 - INFO - ---------------------------------------------
2024-10-12 18:02 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 18:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98556
2024-10-12 18:02 - INFO - 	 Train Loss: 0.070
2024-10-12 18:02 - INFO - 	 Val. Loss: 0.068
2024-10-12 18:02 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:02 - INFO - 	 PR-AUC: 0.871
2024-10-12 18:02 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 18:02 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 18:02 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 18:02 - INFO - 	 Best PR-AUC: 0.871
2024-10-12 18:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-12 18:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-12 18:02 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 18:02 - INFO - ---------------------------------------------
2024-10-12 18:03 - INFO - ---------------------------------------------
2024-10-12 18:03 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 18:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9871
2024-10-12 18:03 - INFO - 	 Train Loss: 0.067
2024-10-12 18:03 - INFO - 	 Val. Loss: 0.063
2024-10-12 18:03 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:03 - INFO - 	 PR-AUC: 0.877
2024-10-12 18:03 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:03 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 18:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:03 - INFO - 	 Best PR-AUC: 0.877
2024-10-12 18:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-12 18:03 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:03 - INFO - ---------------------------------------------
2024-10-12 18:03 - INFO - ---------------------------------------------
2024-10-12 18:03 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 18:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98744
2024-10-12 18:03 - INFO - 	 Train Loss: 0.063
2024-10-12 18:03 - INFO - 	 Val. Loss: 0.060
2024-10-12 18:03 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:03 - INFO - 	 PR-AUC: 0.888
2024-10-12 18:03 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:03 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 18:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:03 - INFO - 	 Best PR-AUC: 0.888
2024-10-12 18:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-12 18:03 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:03 - INFO - ---------------------------------------------
2024-10-12 18:04 - INFO - ---------------------------------------------
2024-10-12 18:04 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 18:04 - INFO - 	 Train Loss: 0.059
2024-10-12 18:04 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:04 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:04 - INFO - 	 PR-AUC: 0.873
2024-10-12 18:04 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 18:04 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 18:04 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:04 - INFO - 	 Best PR-AUC: 0.888
2024-10-12 18:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-12 18:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:04 - INFO - ---------------------------------------------
2024-10-12 18:04 - INFO - ---------------------------------------------
2024-10-12 18:04 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-12 18:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98781
2024-10-12 18:04 - INFO - 	 Train Loss: 0.057
2024-10-12 18:04 - INFO - 	 Val. Loss: 0.059
2024-10-12 18:04 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:04 - INFO - 	 PR-AUC: 0.888
2024-10-12 18:04 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 18:04 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:04 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:04 - INFO - 	 Best PR-AUC: 0.888
2024-10-12 18:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-12 18:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:04 - INFO - ---------------------------------------------
2024-10-12 18:05 - INFO - ---------------------------------------------
2024-10-12 18:05 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 18:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98886
2024-10-12 18:05 - INFO - 	 Train Loss: 0.054
2024-10-12 18:05 - INFO - 	 Val. Loss: 0.057
2024-10-12 18:05 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:05 - INFO - 	 PR-AUC: 0.896
2024-10-12 18:05 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:05 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 18:05 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:05 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 18:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 18:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-12 18:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:05 - INFO - ---------------------------------------------
2024-10-12 18:05 - INFO - ---------------------------------------------
2024-10-12 18:05 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-12 18:05 - INFO - 	 Train Loss: 0.053
2024-10-12 18:05 - INFO - 	 Val. Loss: 0.058
2024-10-12 18:05 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:05 - INFO - 	 PR-AUC: 0.896
2024-10-12 18:05 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 18:05 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 18:05 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:05 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 18:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 18:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 18:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:05 - INFO - ---------------------------------------------
2024-10-12 18:06 - INFO - ---------------------------------------------
2024-10-12 18:06 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 18:06 - INFO - 	 Train Loss: 0.052
2024-10-12 18:06 - INFO - 	 Val. Loss: 0.056
2024-10-12 18:06 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:06 - INFO - 	 PR-AUC: 0.894
2024-10-12 18:06 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:06 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 18:06 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:06 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 18:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 18:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 18:06 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:06 - INFO - ---------------------------------------------
2024-10-12 18:07 - INFO - Fit the preprocessing pipeline
2024-10-12 18:07 - INFO - Training using device: cuda
2024-10-12 18:07 - INFO - Creating generators
2024-10-12 18:07 - INFO - The model has 651,257 trainable parameters
2024-10-12 18:07 - INFO - * Model:
2024-10-12 18:07 - INFO - * -----------
2024-10-12 18:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 18:07 - INFO - * -----------
2024-10-12 18:07 - INFO - Evaluating model based on: rocauc
2024-10-12 18:07 - INFO - Training..

2024-10-12 18:08 - INFO - ---------------------------------------------
2024-10-12 18:08 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 18:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98071
2024-10-12 18:08 - INFO - 	 Train Loss: 0.150
2024-10-12 18:08 - INFO - 	 Val. Loss: 0.077
2024-10-12 18:08 - INFO - 	 ROC-AUC: 0.981
2024-10-12 18:08 - INFO - 	 PR-AUC: 0.830
2024-10-12 18:08 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-12 18:08 - INFO - 	 Best Val. Loss: 0.077
2024-10-12 18:08 - INFO - 	 Best ROC-AUC: 0.981
2024-10-12 18:08 - INFO - 	 Best PR-AUC: 0.830
2024-10-12 18:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-12 18:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-10-12 18:08 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-12 18:08 - INFO - ---------------------------------------------
2024-10-12 18:08 - INFO - ---------------------------------------------
2024-10-12 18:08 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 18:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98488
2024-10-12 18:08 - INFO - 	 Train Loss: 0.082
2024-10-12 18:08 - INFO - 	 Val. Loss: 0.070
2024-10-12 18:08 - INFO - 	 ROC-AUC: 0.985
2024-10-12 18:08 - INFO - 	 PR-AUC: 0.864
2024-10-12 18:08 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 18:08 - INFO - 	 Best Val. Loss: 0.070
2024-10-12 18:08 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 18:08 - INFO - 	 Best PR-AUC: 0.864
2024-10-12 18:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 18:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-12 18:08 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 18:08 - INFO - ---------------------------------------------
2024-10-12 18:09 - INFO - ---------------------------------------------
2024-10-12 18:09 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 18:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98494
2024-10-12 18:09 - INFO - 	 Train Loss: 0.071
2024-10-12 18:09 - INFO - 	 Val. Loss: 0.071
2024-10-12 18:09 - INFO - 	 ROC-AUC: 0.985
2024-10-12 18:09 - INFO - 	 PR-AUC: 0.864
2024-10-12 18:09 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:09 - INFO - 	 Best Val. Loss: 0.070
2024-10-12 18:09 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 18:09 - INFO - 	 Best PR-AUC: 0.864
2024-10-12 18:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-12 18:09 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:09 - INFO - ---------------------------------------------
2024-10-12 18:10 - INFO - ---------------------------------------------
2024-10-12 18:10 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 18:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98665
2024-10-12 18:10 - INFO - 	 Train Loss: 0.067
2024-10-12 18:10 - INFO - 	 Val. Loss: 0.064
2024-10-12 18:10 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:10 - INFO - 	 PR-AUC: 0.882
2024-10-12 18:10 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 18:10 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 18:10 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:10 - INFO - 	 Best PR-AUC: 0.882
2024-10-12 18:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-12 18:10 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:10 - INFO - ---------------------------------------------
2024-10-12 18:10 - INFO - ---------------------------------------------
2024-10-12 18:10 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 18:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98666
2024-10-12 18:10 - INFO - 	 Train Loss: 0.062
2024-10-12 18:10 - INFO - 	 Val. Loss: 0.065
2024-10-12 18:10 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:10 - INFO - 	 PR-AUC: 0.872
2024-10-12 18:10 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 18:10 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 18:10 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:10 - INFO - 	 Best PR-AUC: 0.882
2024-10-12 18:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-12 18:10 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:10 - INFO - ---------------------------------------------
2024-10-12 18:11 - INFO - ---------------------------------------------
2024-10-12 18:11 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 18:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98742
2024-10-12 18:11 - INFO - 	 Train Loss: 0.061
2024-10-12 18:11 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:11 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:11 - INFO - 	 PR-AUC: 0.878
2024-10-12 18:11 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:11 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:11 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:11 - INFO - 	 Best PR-AUC: 0.882
2024-10-12 18:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-12 18:11 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:11 - INFO - ---------------------------------------------
2024-10-12 18:11 - INFO - ---------------------------------------------
2024-10-12 18:11 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 18:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98791
2024-10-12 18:11 - INFO - 	 Train Loss: 0.059
2024-10-12 18:11 - INFO - 	 Val. Loss: 0.061
2024-10-12 18:11 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:11 - INFO - 	 PR-AUC: 0.881
2024-10-12 18:11 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:11 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 18:11 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:11 - INFO - 	 Best PR-AUC: 0.882
2024-10-12 18:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-12 18:11 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:11 - INFO - ---------------------------------------------
2024-10-12 18:12 - INFO - ---------------------------------------------
2024-10-12 18:12 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 18:12 - INFO - 	 Train Loss: 0.057
2024-10-12 18:12 - INFO - 	 Val. Loss: 0.064
2024-10-12 18:12 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:12 - INFO - 	 PR-AUC: 0.886
2024-10-12 18:12 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 18:12 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 18:12 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:12 - INFO - 	 Best PR-AUC: 0.886
2024-10-12 18:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-12 18:12 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:12 - INFO - ---------------------------------------------
2024-10-12 18:12 - INFO - ---------------------------------------------
2024-10-12 18:12 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 18:12 - INFO - 	 Train Loss: 0.055
2024-10-12 18:12 - INFO - 	 Val. Loss: 0.060
2024-10-12 18:12 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:12 - INFO - 	 PR-AUC: 0.895
2024-10-12 18:12 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:12 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 18:12 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:12 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 18:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-12 18:12 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:12 - INFO - ---------------------------------------------
2024-10-12 18:13 - INFO - ---------------------------------------------
2024-10-12 18:13 - INFO - Epoch: 10 | Time: 0m 33s
2024-10-12 18:13 - INFO - 	 Train Loss: 0.053
2024-10-12 18:13 - INFO - 	 Val. Loss: 0.063
2024-10-12 18:13 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:13 - INFO - 	 PR-AUC: 0.888
2024-10-12 18:13 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:13 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 18:13 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:13 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 18:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-12 18:13 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:13 - INFO - ---------------------------------------------
2024-10-12 18:14 - INFO - Fit the preprocessing pipeline
2024-10-12 18:14 - INFO - Training using device: cuda
2024-10-12 18:14 - INFO - Creating generators
2024-10-12 18:14 - INFO - The model has 651,257 trainable parameters
2024-10-12 18:14 - INFO - * Model:
2024-10-12 18:14 - INFO - * -----------
2024-10-12 18:14 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 18:14 - INFO - * -----------
2024-10-12 18:14 - INFO - Evaluating model based on: rocauc
2024-10-12 18:14 - INFO - Training..

2024-10-12 18:15 - INFO - ---------------------------------------------
2024-10-12 18:15 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 18:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97793
2024-10-12 18:15 - INFO - 	 Train Loss: 0.151
2024-10-12 18:15 - INFO - 	 Val. Loss: 0.083
2024-10-12 18:15 - INFO - 	 ROC-AUC: 0.978
2024-10-12 18:15 - INFO - 	 PR-AUC: 0.815
2024-10-12 18:15 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-12 18:15 - INFO - 	 Best Val. Loss: 0.083
2024-10-12 18:15 - INFO - 	 Best ROC-AUC: 0.978
2024-10-12 18:15 - INFO - 	 Best PR-AUC: 0.815
2024-10-12 18:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-12 18:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-10-12 18:15 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-12 18:15 - INFO - ---------------------------------------------
2024-10-12 18:15 - INFO - ---------------------------------------------
2024-10-12 18:15 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-12 18:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98438
2024-10-12 18:15 - INFO - 	 Train Loss: 0.082
2024-10-12 18:15 - INFO - 	 Val. Loss: 0.069
2024-10-12 18:15 - INFO - 	 ROC-AUC: 0.984
2024-10-12 18:15 - INFO - 	 PR-AUC: 0.859
2024-10-12 18:15 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-12 18:15 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 18:15 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 18:15 - INFO - 	 Best PR-AUC: 0.859
2024-10-12 18:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 18:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-12 18:15 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-12 18:15 - INFO - ---------------------------------------------
2024-10-12 18:16 - INFO - ---------------------------------------------
2024-10-12 18:16 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-12 18:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98636
2024-10-12 18:16 - INFO - 	 Train Loss: 0.071
2024-10-12 18:16 - INFO - 	 Val. Loss: 0.066
2024-10-12 18:16 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:16 - INFO - 	 PR-AUC: 0.872
2024-10-12 18:16 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 18:16 - INFO - 	 Best Val. Loss: 0.066
2024-10-12 18:16 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 18:16 - INFO - 	 Best PR-AUC: 0.872
2024-10-12 18:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 18:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-12 18:16 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 18:16 - INFO - ---------------------------------------------
2024-10-12 18:16 - INFO - ---------------------------------------------
2024-10-12 18:16 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 18:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98745
2024-10-12 18:16 - INFO - 	 Train Loss: 0.066
2024-10-12 18:16 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:16 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:16 - INFO - 	 PR-AUC: 0.876
2024-10-12 18:16 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 18:16 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:16 - INFO - 	 Best PR-AUC: 0.876
2024-10-12 18:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-12 18:16 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:16 - INFO - ---------------------------------------------
2024-10-12 18:17 - INFO - ---------------------------------------------
2024-10-12 18:17 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 18:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98814
2024-10-12 18:17 - INFO - 	 Train Loss: 0.062
2024-10-12 18:17 - INFO - 	 Val. Loss: 0.059
2024-10-12 18:17 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:17 - INFO - 	 PR-AUC: 0.891
2024-10-12 18:17 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 18:17 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:17 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:17 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 18:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-12 18:17 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:17 - INFO - ---------------------------------------------
2024-10-12 18:18 - INFO - ---------------------------------------------
2024-10-12 18:18 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 18:18 - INFO - 	 Train Loss: 0.060
2024-10-12 18:18 - INFO - 	 Val. Loss: 0.064
2024-10-12 18:18 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:18 - INFO - 	 PR-AUC: 0.887
2024-10-12 18:18 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 18:18 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:18 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:18 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 18:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-12 18:18 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:18 - INFO - ---------------------------------------------
2024-10-12 18:18 - INFO - ---------------------------------------------
2024-10-12 18:18 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 18:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98871
2024-10-12 18:18 - INFO - 	 Train Loss: 0.058
2024-10-12 18:18 - INFO - 	 Val. Loss: 0.061
2024-10-12 18:18 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:18 - INFO - 	 PR-AUC: 0.897
2024-10-12 18:18 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:18 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:18 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:18 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 18:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 18:18 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:18 - INFO - ---------------------------------------------
2024-10-12 18:19 - INFO - ---------------------------------------------
2024-10-12 18:19 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 18:19 - INFO - 	 Train Loss: 0.056
2024-10-12 18:19 - INFO - 	 Val. Loss: 0.060
2024-10-12 18:19 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:19 - INFO - 	 PR-AUC: 0.891
2024-10-12 18:19 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:19 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:19 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:19 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 18:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 18:19 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:19 - INFO - ---------------------------------------------
2024-10-12 18:19 - INFO - ---------------------------------------------
2024-10-12 18:19 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 18:19 - INFO - 	 Train Loss: 0.055
2024-10-12 18:19 - INFO - 	 Val. Loss: 0.060
2024-10-12 18:19 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:19 - INFO - 	 PR-AUC: 0.891
2024-10-12 18:19 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 18:19 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:19 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:19 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 18:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 18:19 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:19 - INFO - ---------------------------------------------
2024-10-12 18:20 - INFO - ---------------------------------------------
2024-10-12 18:20 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-12 18:20 - INFO - 	 Train Loss: 0.053
2024-10-12 18:20 - INFO - 	 Val. Loss: 0.060
2024-10-12 18:20 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:20 - INFO - 	 PR-AUC: 0.889
2024-10-12 18:20 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 18:20 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:20 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:20 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 18:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 18:20 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:20 - INFO - ---------------------------------------------
2024-10-12 18:21 - INFO - Fit the preprocessing pipeline
2024-10-12 18:21 - INFO - Training using device: cuda
2024-10-12 18:21 - INFO - Creating generators
2024-10-12 18:21 - INFO - The model has 651,257 trainable parameters
2024-10-12 18:21 - INFO - * Model:
2024-10-12 18:21 - INFO - * -----------
2024-10-12 18:21 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 18:21 - INFO - * -----------
2024-10-12 18:21 - INFO - Evaluating model based on: rocauc
2024-10-12 18:21 - INFO - Training..

2024-10-12 18:22 - INFO - ---------------------------------------------
2024-10-12 18:22 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 18:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97962
2024-10-12 18:22 - INFO - 	 Train Loss: 0.145
2024-10-12 18:22 - INFO - 	 Val. Loss: 0.090
2024-10-12 18:22 - INFO - 	 ROC-AUC: 0.980
2024-10-12 18:22 - INFO - 	 PR-AUC: 0.805
2024-10-12 18:22 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-12 18:22 - INFO - 	 Best Val. Loss: 0.090
2024-10-12 18:22 - INFO - 	 Best ROC-AUC: 0.980
2024-10-12 18:22 - INFO - 	 Best PR-AUC: 0.805
2024-10-12 18:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-12 18:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-12 18:22 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-12 18:22 - INFO - ---------------------------------------------
2024-10-12 18:22 - INFO - ---------------------------------------------
2024-10-12 18:22 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 18:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98534
2024-10-12 18:22 - INFO - 	 Train Loss: 0.081
2024-10-12 18:22 - INFO - 	 Val. Loss: 0.072
2024-10-12 18:22 - INFO - 	 ROC-AUC: 0.985
2024-10-12 18:22 - INFO - 	 PR-AUC: 0.872
2024-10-12 18:22 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 18:22 - INFO - 	 Best Val. Loss: 0.072
2024-10-12 18:22 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 18:22 - INFO - 	 Best PR-AUC: 0.872
2024-10-12 18:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 18:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-12 18:22 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 18:22 - INFO - ---------------------------------------------
2024-10-12 18:23 - INFO - ---------------------------------------------
2024-10-12 18:23 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 18:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98711
2024-10-12 18:23 - INFO - 	 Train Loss: 0.071
2024-10-12 18:23 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:23 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:23 - INFO - 	 PR-AUC: 0.875
2024-10-12 18:23 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:23 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:23 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:23 - INFO - 	 Best PR-AUC: 0.875
2024-10-12 18:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 18:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-12 18:23 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:23 - INFO - ---------------------------------------------
2024-10-12 18:23 - INFO - ---------------------------------------------
2024-10-12 18:23 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-12 18:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98812
2024-10-12 18:23 - INFO - 	 Train Loss: 0.066
2024-10-12 18:23 - INFO - 	 Val. Loss: 0.061
2024-10-12 18:23 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:23 - INFO - 	 PR-AUC: 0.883
2024-10-12 18:23 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:23 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 18:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:23 - INFO - 	 Best PR-AUC: 0.883
2024-10-12 18:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-12 18:23 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:23 - INFO - ---------------------------------------------
2024-10-12 18:24 - INFO - ---------------------------------------------
2024-10-12 18:24 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 18:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98896
2024-10-12 18:24 - INFO - 	 Train Loss: 0.061
2024-10-12 18:24 - INFO - 	 Val. Loss: 0.059
2024-10-12 18:24 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:24 - INFO - 	 PR-AUC: 0.896
2024-10-12 18:24 - INFO - 	 Recall for 0.4 precision: 0.983
2024-10-12 18:24 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:24 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:24 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 18:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 18:24 - INFO - 	 Best Recall for 0.4 precision: 0.983
2024-10-12 18:24 - INFO - ---------------------------------------------
2024-10-12 18:24 - INFO - ---------------------------------------------
2024-10-12 18:24 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 18:24 - INFO - 	 Train Loss: 0.060
2024-10-12 18:24 - INFO - 	 Val. Loss: 0.058
2024-10-12 18:24 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:24 - INFO - 	 PR-AUC: 0.894
2024-10-12 18:24 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-12 18:24 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 18:24 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:24 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 18:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 18:24 - INFO - 	 Best Recall for 0.4 precision: 0.983
2024-10-12 18:24 - INFO - ---------------------------------------------
2024-10-12 18:25 - INFO - ---------------------------------------------
2024-10-12 18:25 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 18:25 - INFO - 	 Train Loss: 0.058
2024-10-12 18:25 - INFO - 	 Val. Loss: 0.056
2024-10-12 18:25 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:25 - INFO - 	 PR-AUC: 0.894
2024-10-12 18:25 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:25 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 18:25 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:25 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 18:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 18:25 - INFO - 	 Best Recall for 0.4 precision: 0.983
2024-10-12 18:25 - INFO - ---------------------------------------------
2024-10-12 18:25 - INFO - ---------------------------------------------
2024-10-12 18:25 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 18:25 - INFO - 	 Train Loss: 0.055
2024-10-12 18:25 - INFO - 	 Val. Loss: 0.057
2024-10-12 18:25 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:25 - INFO - 	 PR-AUC: 0.894
2024-10-12 18:25 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:25 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 18:25 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:25 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 18:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 18:25 - INFO - 	 Best Recall for 0.4 precision: 0.983
2024-10-12 18:25 - INFO - ---------------------------------------------
2024-10-12 18:27 - INFO - Fit the preprocessing pipeline
2024-10-12 18:27 - INFO - Training using device: cuda
2024-10-12 18:27 - INFO - Creating generators
2024-10-12 18:28 - INFO - The model has 651,257 trainable parameters
2024-10-12 18:28 - INFO - * Model:
2024-10-12 18:28 - INFO - * -----------
2024-10-12 18:28 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 18:28 - INFO - * -----------
2024-10-12 18:28 - INFO - Evaluating model based on: rocauc
2024-10-12 18:28 - INFO - Training..

2024-10-12 18:28 - INFO - ---------------------------------------------
2024-10-12 18:28 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 18:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97707
2024-10-12 18:28 - INFO - 	 Train Loss: 0.151
2024-10-12 18:28 - INFO - 	 Val. Loss: 0.085
2024-10-12 18:28 - INFO - 	 ROC-AUC: 0.977
2024-10-12 18:28 - INFO - 	 PR-AUC: 0.799
2024-10-12 18:28 - INFO - 	 Recall for 0.4 precision: 0.960
2024-10-12 18:28 - INFO - 	 Best Val. Loss: 0.085
2024-10-12 18:28 - INFO - 	 Best ROC-AUC: 0.977
2024-10-12 18:28 - INFO - 	 Best PR-AUC: 0.799
2024-10-12 18:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-12 18:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.792
2024-10-12 18:28 - INFO - 	 Best Recall for 0.4 precision: 0.960
2024-10-12 18:28 - INFO - ---------------------------------------------
2024-10-12 18:29 - INFO - ---------------------------------------------
2024-10-12 18:29 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-12 18:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98506
2024-10-12 18:29 - INFO - 	 Train Loss: 0.083
2024-10-12 18:29 - INFO - 	 Val. Loss: 0.078
2024-10-12 18:29 - INFO - 	 ROC-AUC: 0.985
2024-10-12 18:29 - INFO - 	 PR-AUC: 0.863
2024-10-12 18:29 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 18:29 - INFO - 	 Best Val. Loss: 0.078
2024-10-12 18:29 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 18:29 - INFO - 	 Best PR-AUC: 0.863
2024-10-12 18:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 18:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-12 18:29 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:29 - INFO - ---------------------------------------------
2024-10-12 18:29 - INFO - ---------------------------------------------
2024-10-12 18:29 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-12 18:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98533
2024-10-12 18:29 - INFO - 	 Train Loss: 0.072
2024-10-12 18:29 - INFO - 	 Val. Loss: 0.068
2024-10-12 18:29 - INFO - 	 ROC-AUC: 0.985
2024-10-12 18:29 - INFO - 	 PR-AUC: 0.873
2024-10-12 18:29 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 18:29 - INFO - 	 Best Val. Loss: 0.068
2024-10-12 18:29 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 18:29 - INFO - 	 Best PR-AUC: 0.873
2024-10-12 18:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-12 18:29 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:29 - INFO - ---------------------------------------------
2024-10-12 18:30 - INFO - ---------------------------------------------
2024-10-12 18:30 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 18:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98758
2024-10-12 18:30 - INFO - 	 Train Loss: 0.067
2024-10-12 18:30 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:30 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:30 - INFO - 	 PR-AUC: 0.882
2024-10-12 18:30 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 18:30 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:30 - INFO - 	 Best PR-AUC: 0.882
2024-10-12 18:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-12 18:30 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:30 - INFO - ---------------------------------------------
2024-10-12 18:30 - INFO - ---------------------------------------------
2024-10-12 18:30 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 18:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98829
2024-10-12 18:30 - INFO - 	 Train Loss: 0.064
2024-10-12 18:30 - INFO - 	 Val. Loss: 0.063
2024-10-12 18:30 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:30 - INFO - 	 PR-AUC: 0.890
2024-10-12 18:30 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 18:30 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:30 - INFO - 	 Best PR-AUC: 0.890
2024-10-12 18:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-12 18:30 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:30 - INFO - ---------------------------------------------
2024-10-12 18:31 - INFO - ---------------------------------------------
2024-10-12 18:31 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 18:31 - INFO - 	 Train Loss: 0.060
2024-10-12 18:31 - INFO - 	 Val. Loss: 0.068
2024-10-12 18:31 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:31 - INFO - 	 PR-AUC: 0.889
2024-10-12 18:31 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 18:31 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:31 - INFO - 	 Best PR-AUC: 0.890
2024-10-12 18:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-12 18:31 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:31 - INFO - ---------------------------------------------
2024-10-12 18:31 - INFO - ---------------------------------------------
2024-10-12 18:31 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 18:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98832
2024-10-12 18:31 - INFO - 	 Train Loss: 0.059
2024-10-12 18:31 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:31 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:31 - INFO - 	 PR-AUC: 0.898
2024-10-12 18:31 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:31 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:31 - INFO - 	 Best PR-AUC: 0.898
2024-10-12 18:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-12 18:31 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:31 - INFO - ---------------------------------------------
2024-10-12 18:32 - INFO - ---------------------------------------------
2024-10-12 18:32 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 18:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98874
2024-10-12 18:32 - INFO - 	 Train Loss: 0.057
2024-10-12 18:32 - INFO - 	 Val. Loss: 0.060
2024-10-12 18:32 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:32 - INFO - 	 PR-AUC: 0.898
2024-10-12 18:32 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:32 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 18:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:32 - INFO - 	 Best PR-AUC: 0.898
2024-10-12 18:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-12 18:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:32 - INFO - ---------------------------------------------
2024-10-12 18:32 - INFO - ---------------------------------------------
2024-10-12 18:32 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 18:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98876
2024-10-12 18:32 - INFO - 	 Train Loss: 0.056
2024-10-12 18:32 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:32 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:32 - INFO - 	 PR-AUC: 0.902
2024-10-12 18:32 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:32 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 18:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:32 - INFO - 	 Best PR-AUC: 0.902
2024-10-12 18:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-12 18:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:32 - INFO - ---------------------------------------------
2024-10-12 18:33 - INFO - ---------------------------------------------
2024-10-12 18:33 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 18:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98964
2024-10-12 18:33 - INFO - 	 Train Loss: 0.054
2024-10-12 18:33 - INFO - 	 Val. Loss: 0.057
2024-10-12 18:33 - INFO - 	 ROC-AUC: 0.990
2024-10-12 18:33 - INFO - 	 PR-AUC: 0.912
2024-10-12 18:33 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 18:33 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 18:33 - INFO - 	 Best ROC-AUC: 0.990
2024-10-12 18:33 - INFO - 	 Best PR-AUC: 0.912
2024-10-12 18:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-12 18:33 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:33 - INFO - ---------------------------------------------
2024-10-12 18:34 - INFO - Fit the preprocessing pipeline
2024-10-12 18:34 - INFO - Training using device: cuda
2024-10-12 18:34 - INFO - Creating generators
2024-10-12 18:34 - INFO - The model has 651,257 trainable parameters
2024-10-12 18:34 - INFO - * Model:
2024-10-12 18:34 - INFO - * -----------
2024-10-12 18:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 18:34 - INFO - * -----------
2024-10-12 18:34 - INFO - Evaluating model based on: rocauc
2024-10-12 18:34 - INFO - Training..

2024-10-12 18:35 - INFO - ---------------------------------------------
2024-10-12 18:35 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 18:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97609
2024-10-12 18:35 - INFO - 	 Train Loss: 0.148
2024-10-12 18:35 - INFO - 	 Val. Loss: 0.090
2024-10-12 18:35 - INFO - 	 ROC-AUC: 0.976
2024-10-12 18:35 - INFO - 	 PR-AUC: 0.815
2024-10-12 18:35 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-12 18:35 - INFO - 	 Best Val. Loss: 0.090
2024-10-12 18:35 - INFO - 	 Best ROC-AUC: 0.976
2024-10-12 18:35 - INFO - 	 Best PR-AUC: 0.815
2024-10-12 18:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-12 18:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-12 18:35 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-12 18:35 - INFO - ---------------------------------------------
2024-10-12 18:36 - INFO - ---------------------------------------------
2024-10-12 18:36 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 18:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98559
2024-10-12 18:36 - INFO - 	 Train Loss: 0.083
2024-10-12 18:36 - INFO - 	 Val. Loss: 0.072
2024-10-12 18:36 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:36 - INFO - 	 PR-AUC: 0.873
2024-10-12 18:36 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 18:36 - INFO - 	 Best Val. Loss: 0.072
2024-10-12 18:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 18:36 - INFO - 	 Best PR-AUC: 0.873
2024-10-12 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-12 18:36 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 18:36 - INFO - ---------------------------------------------
2024-10-12 18:36 - INFO - ---------------------------------------------
2024-10-12 18:36 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 18:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98708
2024-10-12 18:36 - INFO - 	 Train Loss: 0.072
2024-10-12 18:36 - INFO - 	 Val. Loss: 0.065
2024-10-12 18:36 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:36 - INFO - 	 PR-AUC: 0.888
2024-10-12 18:36 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 18:36 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 18:36 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:36 - INFO - 	 Best PR-AUC: 0.888
2024-10-12 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-12 18:36 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 18:36 - INFO - ---------------------------------------------
2024-10-12 18:37 - INFO - ---------------------------------------------
2024-10-12 18:37 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 18:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98789
2024-10-12 18:37 - INFO - 	 Train Loss: 0.067
2024-10-12 18:37 - INFO - 	 Val. Loss: 0.063
2024-10-12 18:37 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:37 - INFO - 	 PR-AUC: 0.880
2024-10-12 18:37 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 18:37 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 18:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:37 - INFO - 	 Best PR-AUC: 0.888
2024-10-12 18:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-12 18:37 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:37 - INFO - ---------------------------------------------
2024-10-12 18:37 - INFO - ---------------------------------------------
2024-10-12 18:37 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 18:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98811
2024-10-12 18:37 - INFO - 	 Train Loss: 0.062
2024-10-12 18:37 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:37 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:37 - INFO - 	 PR-AUC: 0.882
2024-10-12 18:37 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:37 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:37 - INFO - 	 Best PR-AUC: 0.888
2024-10-12 18:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-12 18:37 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:37 - INFO - ---------------------------------------------
2024-10-12 18:38 - INFO - ---------------------------------------------
2024-10-12 18:38 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 18:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98929
2024-10-12 18:38 - INFO - 	 Train Loss: 0.061
2024-10-12 18:38 - INFO - 	 Val. Loss: 0.059
2024-10-12 18:38 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:38 - INFO - 	 PR-AUC: 0.896
2024-10-12 18:38 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 18:38 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:38 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:38 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 18:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 18:38 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:38 - INFO - ---------------------------------------------
2024-10-12 18:38 - INFO - ---------------------------------------------
2024-10-12 18:38 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 18:38 - INFO - 	 Train Loss: 0.058
2024-10-12 18:38 - INFO - 	 Val. Loss: 0.064
2024-10-12 18:38 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:38 - INFO - 	 PR-AUC: 0.899
2024-10-12 18:38 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:38 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:38 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:38 - INFO - 	 Best PR-AUC: 0.899
2024-10-12 18:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 18:38 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:38 - INFO - ---------------------------------------------
2024-10-12 18:39 - INFO - ---------------------------------------------
2024-10-12 18:39 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 18:39 - INFO - 	 Train Loss: 0.055
2024-10-12 18:39 - INFO - 	 Val. Loss: 0.058
2024-10-12 18:39 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:39 - INFO - 	 PR-AUC: 0.898
2024-10-12 18:39 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:39 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 18:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:39 - INFO - 	 Best PR-AUC: 0.899
2024-10-12 18:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 18:39 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:39 - INFO - ---------------------------------------------
2024-10-12 18:39 - INFO - ---------------------------------------------
2024-10-12 18:39 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 18:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98977
2024-10-12 18:39 - INFO - 	 Train Loss: 0.053
2024-10-12 18:39 - INFO - 	 Val. Loss: 0.056
2024-10-12 18:39 - INFO - 	 ROC-AUC: 0.990
2024-10-12 18:39 - INFO - 	 PR-AUC: 0.911
2024-10-12 18:39 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:39 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 18:39 - INFO - 	 Best ROC-AUC: 0.990
2024-10-12 18:39 - INFO - 	 Best PR-AUC: 0.911
2024-10-12 18:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-12 18:39 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:39 - INFO - ---------------------------------------------
2024-10-12 18:40 - INFO - ---------------------------------------------
2024-10-12 18:40 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 18:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98982
2024-10-12 18:40 - INFO - 	 Train Loss: 0.053
2024-10-12 18:40 - INFO - 	 Val. Loss: 0.059
2024-10-12 18:40 - INFO - 	 ROC-AUC: 0.990
2024-10-12 18:40 - INFO - 	 PR-AUC: 0.901
2024-10-12 18:40 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:40 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 18:40 - INFO - 	 Best ROC-AUC: 0.990
2024-10-12 18:40 - INFO - 	 Best PR-AUC: 0.911
2024-10-12 18:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-12 18:40 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:40 - INFO - ---------------------------------------------
2024-10-12 18:41 - INFO - Fit the preprocessing pipeline
2024-10-12 18:41 - INFO - Training using device: cuda
2024-10-12 18:41 - INFO - Creating generators
2024-10-12 18:41 - INFO - The model has 651,257 trainable parameters
2024-10-12 18:41 - INFO - * Model:
2024-10-12 18:41 - INFO - * -----------
2024-10-12 18:41 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 18:41 - INFO - * -----------
2024-10-12 18:41 - INFO - Evaluating model based on: rocauc
2024-10-12 18:41 - INFO - Training..

2024-10-12 18:42 - INFO - ---------------------------------------------
2024-10-12 18:42 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 18:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97958
2024-10-12 18:42 - INFO - 	 Train Loss: 0.151
2024-10-12 18:42 - INFO - 	 Val. Loss: 0.082
2024-10-12 18:42 - INFO - 	 ROC-AUC: 0.980
2024-10-12 18:42 - INFO - 	 PR-AUC: 0.810
2024-10-12 18:42 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-12 18:42 - INFO - 	 Best Val. Loss: 0.082
2024-10-12 18:42 - INFO - 	 Best ROC-AUC: 0.980
2024-10-12 18:42 - INFO - 	 Best PR-AUC: 0.810
2024-10-12 18:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-12 18:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-12 18:42 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-12 18:42 - INFO - ---------------------------------------------
2024-10-12 18:42 - INFO - ---------------------------------------------
2024-10-12 18:42 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 18:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98621
2024-10-12 18:42 - INFO - 	 Train Loss: 0.083
2024-10-12 18:42 - INFO - 	 Val. Loss: 0.069
2024-10-12 18:42 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:42 - INFO - 	 PR-AUC: 0.870
2024-10-12 18:42 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:42 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 18:42 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 18:42 - INFO - 	 Best PR-AUC: 0.870
2024-10-12 18:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 18:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-12 18:42 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:42 - INFO - ---------------------------------------------
2024-10-12 18:43 - INFO - ---------------------------------------------
2024-10-12 18:43 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 18:43 - INFO - 	 Train Loss: 0.072
2024-10-12 18:43 - INFO - 	 Val. Loss: 0.065
2024-10-12 18:43 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:43 - INFO - 	 PR-AUC: 0.867
2024-10-12 18:43 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:43 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 18:43 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 18:43 - INFO - 	 Best PR-AUC: 0.870
2024-10-12 18:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 18:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-12 18:43 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:43 - INFO - ---------------------------------------------
2024-10-12 18:43 - INFO - ---------------------------------------------
2024-10-12 18:43 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 18:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9868
2024-10-12 18:43 - INFO - 	 Train Loss: 0.066
2024-10-12 18:43 - INFO - 	 Val. Loss: 0.064
2024-10-12 18:43 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:43 - INFO - 	 PR-AUC: 0.879
2024-10-12 18:43 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:43 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 18:43 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:43 - INFO - 	 Best PR-AUC: 0.879
2024-10-12 18:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 18:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-12 18:43 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:43 - INFO - ---------------------------------------------
2024-10-12 18:44 - INFO - ---------------------------------------------
2024-10-12 18:44 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-12 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98731
2024-10-12 18:44 - INFO - 	 Train Loss: 0.063
2024-10-12 18:44 - INFO - 	 Val. Loss: 0.061
2024-10-12 18:44 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:44 - INFO - 	 PR-AUC: 0.886
2024-10-12 18:44 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 18:44 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 18:44 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:44 - INFO - 	 Best PR-AUC: 0.886
2024-10-12 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-12 18:44 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:44 - INFO - ---------------------------------------------
2024-10-12 18:44 - INFO - ---------------------------------------------
2024-10-12 18:44 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98759
2024-10-12 18:44 - INFO - 	 Train Loss: 0.059
2024-10-12 18:44 - INFO - 	 Val. Loss: 0.061
2024-10-12 18:44 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:44 - INFO - 	 PR-AUC: 0.887
2024-10-12 18:44 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 18:44 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 18:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:44 - INFO - 	 Best PR-AUC: 0.887
2024-10-12 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-12 18:44 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:44 - INFO - ---------------------------------------------
2024-10-12 18:45 - INFO - ---------------------------------------------
2024-10-12 18:45 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-12 18:45 - INFO - 	 Train Loss: 0.059
2024-10-12 18:45 - INFO - 	 Val. Loss: 0.063
2024-10-12 18:45 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:45 - INFO - 	 PR-AUC: 0.881
2024-10-12 18:45 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-12 18:45 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 18:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:45 - INFO - 	 Best PR-AUC: 0.887
2024-10-12 18:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-12 18:45 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:45 - INFO - ---------------------------------------------
2024-10-12 18:46 - INFO - ---------------------------------------------
2024-10-12 18:46 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 18:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98817
2024-10-12 18:46 - INFO - 	 Train Loss: 0.055
2024-10-12 18:46 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:46 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:46 - INFO - 	 PR-AUC: 0.892
2024-10-12 18:46 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:46 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 18:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:46 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 18:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-12 18:46 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:46 - INFO - ---------------------------------------------
2024-10-12 18:46 - INFO - ---------------------------------------------
2024-10-12 18:46 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 18:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98879
2024-10-12 18:46 - INFO - 	 Train Loss: 0.055
2024-10-12 18:46 - INFO - 	 Val. Loss: 0.060
2024-10-12 18:46 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:46 - INFO - 	 PR-AUC: 0.889
2024-10-12 18:46 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 18:46 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 18:46 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:46 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 18:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-12 18:46 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 18:46 - INFO - ---------------------------------------------
2024-10-12 18:47 - INFO - ---------------------------------------------
2024-10-12 18:47 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 18:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98939
2024-10-12 18:47 - INFO - 	 Train Loss: 0.054
2024-10-12 18:47 - INFO - 	 Val. Loss: 0.057
2024-10-12 18:47 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:47 - INFO - 	 PR-AUC: 0.901
2024-10-12 18:47 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 18:47 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 18:47 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:47 - INFO - 	 Best PR-AUC: 0.901
2024-10-12 18:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 18:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-10-12 18:47 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:47 - INFO - ---------------------------------------------
2024-10-12 18:48 - INFO - Fit the preprocessing pipeline
2024-10-12 18:48 - INFO - Training using device: cuda
2024-10-12 18:48 - INFO - Creating generators
2024-10-12 18:48 - INFO - The model has 651,257 trainable parameters
2024-10-12 18:48 - INFO - * Model:
2024-10-12 18:48 - INFO - * -----------
2024-10-12 18:48 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 18:48 - INFO - * -----------
2024-10-12 18:48 - INFO - Evaluating model based on: rocauc
2024-10-12 18:48 - INFO - Training..

2024-10-12 18:49 - INFO - ---------------------------------------------
2024-10-12 18:49 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 18:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96269
2024-10-12 18:49 - INFO - 	 Train Loss: 0.154
2024-10-12 18:49 - INFO - 	 Val. Loss: 0.110
2024-10-12 18:49 - INFO - 	 ROC-AUC: 0.963
2024-10-12 18:49 - INFO - 	 PR-AUC: 0.747
2024-10-12 18:49 - INFO - 	 Recall for 0.4 precision: 0.916
2024-10-12 18:49 - INFO - 	 Best Val. Loss: 0.110
2024-10-12 18:49 - INFO - 	 Best ROC-AUC: 0.963
2024-10-12 18:49 - INFO - 	 Best PR-AUC: 0.747
2024-10-12 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-10-12 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-10-12 18:49 - INFO - 	 Best Recall for 0.4 precision: 0.916
2024-10-12 18:49 - INFO - ---------------------------------------------
2024-10-12 18:49 - INFO - ---------------------------------------------
2024-10-12 18:49 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-12 18:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98578
2024-10-12 18:49 - INFO - 	 Train Loss: 0.083
2024-10-12 18:49 - INFO - 	 Val. Loss: 0.065
2024-10-12 18:49 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:49 - INFO - 	 PR-AUC: 0.879
2024-10-12 18:49 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:49 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 18:49 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 18:49 - INFO - 	 Best PR-AUC: 0.879
2024-10-12 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-12 18:49 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:49 - INFO - ---------------------------------------------
2024-10-12 18:50 - INFO - ---------------------------------------------
2024-10-12 18:50 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 18:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98632
2024-10-12 18:50 - INFO - 	 Train Loss: 0.072
2024-10-12 18:50 - INFO - 	 Val. Loss: 0.065
2024-10-12 18:50 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:50 - INFO - 	 PR-AUC: 0.874
2024-10-12 18:50 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 18:50 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 18:50 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 18:50 - INFO - 	 Best PR-AUC: 0.879
2024-10-12 18:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-12 18:50 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:50 - INFO - ---------------------------------------------
2024-10-12 18:50 - INFO - ---------------------------------------------
2024-10-12 18:50 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 18:50 - INFO - 	 Train Loss: 0.067
2024-10-12 18:50 - INFO - 	 Val. Loss: 0.069
2024-10-12 18:50 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:50 - INFO - 	 PR-AUC: 0.873
2024-10-12 18:50 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 18:50 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 18:50 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 18:50 - INFO - 	 Best PR-AUC: 0.879
2024-10-12 18:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-12 18:50 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:50 - INFO - ---------------------------------------------
2024-10-12 18:51 - INFO - ---------------------------------------------
2024-10-12 18:51 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 18:51 - INFO - 	 Train Loss: 0.063
2024-10-12 18:51 - INFO - 	 Val. Loss: 0.064
2024-10-12 18:51 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:51 - INFO - 	 PR-AUC: 0.878
2024-10-12 18:51 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 18:51 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 18:51 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 18:51 - INFO - 	 Best PR-AUC: 0.879
2024-10-12 18:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 18:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-12 18:51 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:51 - INFO - ---------------------------------------------
2024-10-12 18:51 - INFO - ---------------------------------------------
2024-10-12 18:51 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 18:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98725
2024-10-12 18:51 - INFO - 	 Train Loss: 0.061
2024-10-12 18:51 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:51 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:51 - INFO - 	 PR-AUC: 0.889
2024-10-12 18:51 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 18:51 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:51 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:51 - INFO - 	 Best PR-AUC: 0.889
2024-10-12 18:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-12 18:51 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 18:51 - INFO - ---------------------------------------------
2024-10-12 18:52 - INFO - ---------------------------------------------
2024-10-12 18:52 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 18:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98826
2024-10-12 18:52 - INFO - 	 Train Loss: 0.058
2024-10-12 18:52 - INFO - 	 Val. Loss: 0.059
2024-10-12 18:52 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:52 - INFO - 	 PR-AUC: 0.896
2024-10-12 18:52 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 18:52 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 18:52 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 18:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 18:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-12 18:52 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 18:52 - INFO - ---------------------------------------------
2024-10-12 18:52 - INFO - ---------------------------------------------
2024-10-12 18:52 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-12 18:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9892
2024-10-12 18:52 - INFO - 	 Train Loss: 0.057
2024-10-12 18:52 - INFO - 	 Val. Loss: 0.059
2024-10-12 18:52 - INFO - 	 ROC-AUC: 0.989
2024-10-12 18:52 - INFO - 	 PR-AUC: 0.897
2024-10-12 18:52 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 18:52 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:52 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:52 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 18:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 18:52 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:52 - INFO - ---------------------------------------------
2024-10-12 18:53 - INFO - ---------------------------------------------
2024-10-12 18:53 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 18:53 - INFO - 	 Train Loss: 0.054
2024-10-12 18:53 - INFO - 	 Val. Loss: 0.063
2024-10-12 18:53 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:53 - INFO - 	 PR-AUC: 0.887
2024-10-12 18:53 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 18:53 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:53 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:53 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 18:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 18:53 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:53 - INFO - ---------------------------------------------
2024-10-12 18:53 - INFO - ---------------------------------------------
2024-10-12 18:53 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 18:53 - INFO - 	 Train Loss: 0.053
2024-10-12 18:53 - INFO - 	 Val. Loss: 0.060
2024-10-12 18:53 - INFO - 	 ROC-AUC: 0.988
2024-10-12 18:53 - INFO - 	 PR-AUC: 0.894
2024-10-12 18:53 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:53 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 18:53 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 18:53 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 18:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 18:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 18:53 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 18:53 - INFO - ---------------------------------------------
2024-10-12 18:55 - INFO - Fit the preprocessing pipeline
2024-10-12 18:55 - INFO - Training using device: cuda
2024-10-12 18:55 - INFO - Creating generators
2024-10-12 18:55 - INFO - The model has 651,257 trainable parameters
2024-10-12 18:55 - INFO - * Model:
2024-10-12 18:55 - INFO - * -----------
2024-10-12 18:55 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 18:55 - INFO - * -----------
2024-10-12 18:55 - INFO - Evaluating model based on: rocauc
2024-10-12 18:55 - INFO - Training..

2024-10-12 18:55 - INFO - ---------------------------------------------
2024-10-12 18:55 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 18:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98263
2024-10-12 18:55 - INFO - 	 Train Loss: 0.157
2024-10-12 18:55 - INFO - 	 Val. Loss: 0.074
2024-10-12 18:55 - INFO - 	 ROC-AUC: 0.983
2024-10-12 18:55 - INFO - 	 PR-AUC: 0.855
2024-10-12 18:55 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-12 18:55 - INFO - 	 Best Val. Loss: 0.074
2024-10-12 18:55 - INFO - 	 Best ROC-AUC: 0.983
2024-10-12 18:55 - INFO - 	 Best PR-AUC: 0.855
2024-10-12 18:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-12 18:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-12 18:55 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-12 18:55 - INFO - ---------------------------------------------
2024-10-12 18:56 - INFO - ---------------------------------------------
2024-10-12 18:56 - INFO - Epoch: 02 | Time: 0m 33s
2024-10-12 18:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98689
2024-10-12 18:56 - INFO - 	 Train Loss: 0.080
2024-10-12 18:56 - INFO - 	 Val. Loss: 0.062
2024-10-12 18:56 - INFO - 	 ROC-AUC: 0.987
2024-10-12 18:56 - INFO - 	 PR-AUC: 0.881
2024-10-12 18:56 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-12 18:56 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:56 - INFO - 	 Best PR-AUC: 0.881
2024-10-12 18:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 18:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-12 18:56 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 18:56 - INFO - ---------------------------------------------
2024-10-12 18:57 - INFO - ---------------------------------------------
2024-10-12 18:57 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-12 18:57 - INFO - 	 Train Loss: 0.071
2024-10-12 18:57 - INFO - 	 Val. Loss: 0.069
2024-10-12 18:57 - INFO - 	 ROC-AUC: 0.984
2024-10-12 18:57 - INFO - 	 PR-AUC: 0.866
2024-10-12 18:57 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 18:57 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:57 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:57 - INFO - 	 Best PR-AUC: 0.881
2024-10-12 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-12 18:57 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 18:57 - INFO - ---------------------------------------------
2024-10-12 18:57 - INFO - ---------------------------------------------
2024-10-12 18:57 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-12 18:57 - INFO - 	 Train Loss: 0.066
2024-10-12 18:57 - INFO - 	 Val. Loss: 0.069
2024-10-12 18:57 - INFO - 	 ROC-AUC: 0.984
2024-10-12 18:57 - INFO - 	 PR-AUC: 0.867
2024-10-12 18:57 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 18:57 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:57 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:57 - INFO - 	 Best PR-AUC: 0.881
2024-10-12 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-12 18:57 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 18:57 - INFO - ---------------------------------------------
2024-10-12 18:58 - INFO - ---------------------------------------------
2024-10-12 18:58 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-12 18:58 - INFO - 	 Train Loss: 0.062
2024-10-12 18:58 - INFO - 	 Val. Loss: 0.064
2024-10-12 18:58 - INFO - 	 ROC-AUC: 0.986
2024-10-12 18:58 - INFO - 	 PR-AUC: 0.881
2024-10-12 18:58 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 18:58 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 18:58 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 18:58 - INFO - 	 Best PR-AUC: 0.881
2024-10-12 18:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 18:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-12 18:58 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 18:58 - INFO - ---------------------------------------------
2024-10-12 19:00 - INFO - Fit the preprocessing pipeline
2024-10-12 19:00 - INFO - Training using device: cuda
2024-10-12 19:00 - INFO - Creating generators
2024-10-12 19:00 - INFO - The model has 651,257 trainable parameters
2024-10-12 19:00 - INFO - * Model:
2024-10-12 19:00 - INFO - * -----------
2024-10-12 19:00 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 19:00 - INFO - * -----------
2024-10-12 19:00 - INFO - Evaluating model based on: rocauc
2024-10-12 19:00 - INFO - Training..

2024-10-12 19:00 - INFO - ---------------------------------------------
2024-10-12 19:00 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-12 19:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.971
2024-10-12 19:00 - INFO - 	 Train Loss: 0.162
2024-10-12 19:00 - INFO - 	 Val. Loss: 0.101
2024-10-12 19:00 - INFO - 	 ROC-AUC: 0.971
2024-10-12 19:00 - INFO - 	 PR-AUC: 0.758
2024-10-12 19:00 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-12 19:00 - INFO - 	 Best Val. Loss: 0.101
2024-10-12 19:00 - INFO - 	 Best ROC-AUC: 0.971
2024-10-12 19:00 - INFO - 	 Best PR-AUC: 0.758
2024-10-12 19:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-12 19:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.745
2024-10-12 19:00 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-12 19:00 - INFO - ---------------------------------------------
2024-10-12 19:01 - INFO - ---------------------------------------------
2024-10-12 19:01 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 19:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98467
2024-10-12 19:01 - INFO - 	 Train Loss: 0.083
2024-10-12 19:01 - INFO - 	 Val. Loss: 0.070
2024-10-12 19:01 - INFO - 	 ROC-AUC: 0.985
2024-10-12 19:01 - INFO - 	 PR-AUC: 0.854
2024-10-12 19:01 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:01 - INFO - 	 Best Val. Loss: 0.070
2024-10-12 19:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 19:01 - INFO - 	 Best PR-AUC: 0.854
2024-10-12 19:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-12 19:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-12 19:01 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 19:01 - INFO - ---------------------------------------------
2024-10-12 19:01 - INFO - ---------------------------------------------
2024-10-12 19:01 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 19:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98524
2024-10-12 19:01 - INFO - 	 Train Loss: 0.072
2024-10-12 19:01 - INFO - 	 Val. Loss: 0.069
2024-10-12 19:01 - INFO - 	 ROC-AUC: 0.985
2024-10-12 19:01 - INFO - 	 PR-AUC: 0.864
2024-10-12 19:01 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 19:01 - INFO - 	 Best Val. Loss: 0.069
2024-10-12 19:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 19:01 - INFO - 	 Best PR-AUC: 0.864
2024-10-12 19:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 19:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-12 19:01 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 19:01 - INFO - ---------------------------------------------
2024-10-12 19:02 - INFO - ---------------------------------------------
2024-10-12 19:02 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 19:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98643
2024-10-12 19:02 - INFO - 	 Train Loss: 0.066
2024-10-12 19:02 - INFO - 	 Val. Loss: 0.066
2024-10-12 19:02 - INFO - 	 ROC-AUC: 0.986
2024-10-12 19:02 - INFO - 	 PR-AUC: 0.872
2024-10-12 19:02 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 19:02 - INFO - 	 Best Val. Loss: 0.066
2024-10-12 19:02 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 19:02 - INFO - 	 Best PR-AUC: 0.872
2024-10-12 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-12 19:02 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 19:02 - INFO - ---------------------------------------------
2024-10-12 19:02 - INFO - ---------------------------------------------
2024-10-12 19:02 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 19:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98732
2024-10-12 19:02 - INFO - 	 Train Loss: 0.063
2024-10-12 19:02 - INFO - 	 Val. Loss: 0.063
2024-10-12 19:02 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:02 - INFO - 	 PR-AUC: 0.879
2024-10-12 19:02 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:02 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 19:02 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 19:02 - INFO - 	 Best PR-AUC: 0.879
2024-10-12 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 19:02 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 19:02 - INFO - ---------------------------------------------
2024-10-12 19:03 - INFO - ---------------------------------------------
2024-10-12 19:03 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 19:03 - INFO - 	 Train Loss: 0.061
2024-10-12 19:03 - INFO - 	 Val. Loss: 0.061
2024-10-12 19:03 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:03 - INFO - 	 PR-AUC: 0.888
2024-10-12 19:03 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 19:03 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 19:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 19:03 - INFO - 	 Best PR-AUC: 0.888
2024-10-12 19:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-12 19:03 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 19:03 - INFO - ---------------------------------------------
2024-10-12 19:04 - INFO - ---------------------------------------------
2024-10-12 19:04 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 19:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98753
2024-10-12 19:04 - INFO - 	 Train Loss: 0.058
2024-10-12 19:04 - INFO - 	 Val. Loss: 0.060
2024-10-12 19:04 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:04 - INFO - 	 PR-AUC: 0.889
2024-10-12 19:04 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:04 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 19:04 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:04 - INFO - 	 Best PR-AUC: 0.889
2024-10-12 19:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 19:04 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 19:04 - INFO - ---------------------------------------------
2024-10-12 19:04 - INFO - ---------------------------------------------
2024-10-12 19:04 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 19:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98795
2024-10-12 19:04 - INFO - 	 Train Loss: 0.057
2024-10-12 19:04 - INFO - 	 Val. Loss: 0.060
2024-10-12 19:04 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:04 - INFO - 	 PR-AUC: 0.887
2024-10-12 19:04 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:04 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 19:04 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:04 - INFO - 	 Best PR-AUC: 0.889
2024-10-12 19:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 19:04 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 19:04 - INFO - ---------------------------------------------
2024-10-12 19:05 - INFO - ---------------------------------------------
2024-10-12 19:05 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 19:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98847
2024-10-12 19:05 - INFO - 	 Train Loss: 0.055
2024-10-12 19:05 - INFO - 	 Val. Loss: 0.058
2024-10-12 19:05 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:05 - INFO - 	 PR-AUC: 0.887
2024-10-12 19:05 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:05 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 19:05 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:05 - INFO - 	 Best PR-AUC: 0.889
2024-10-12 19:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 19:05 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 19:05 - INFO - ---------------------------------------------
2024-10-12 19:05 - INFO - ---------------------------------------------
2024-10-12 19:05 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 19:05 - INFO - 	 Train Loss: 0.054
2024-10-12 19:05 - INFO - 	 Val. Loss: 0.060
2024-10-12 19:05 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:05 - INFO - 	 PR-AUC: 0.889
2024-10-12 19:05 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 19:05 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 19:05 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:05 - INFO - 	 Best PR-AUC: 0.889
2024-10-12 19:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-12 19:05 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 19:05 - INFO - ---------------------------------------------
2024-10-12 19:07 - INFO - Fit the preprocessing pipeline
2024-10-12 19:07 - INFO - Training using device: cuda
2024-10-12 19:07 - INFO - Creating generators
2024-10-12 19:07 - INFO - The model has 651,257 trainable parameters
2024-10-12 19:07 - INFO - * Model:
2024-10-12 19:07 - INFO - * -----------
2024-10-12 19:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 19:07 - INFO - * -----------
2024-10-12 19:07 - INFO - Evaluating model based on: rocauc
2024-10-12 19:07 - INFO - Training..

2024-10-12 19:07 - INFO - ---------------------------------------------
2024-10-12 19:07 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 19:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97653
2024-10-12 19:07 - INFO - 	 Train Loss: 0.156
2024-10-12 19:07 - INFO - 	 Val. Loss: 0.086
2024-10-12 19:07 - INFO - 	 ROC-AUC: 0.977
2024-10-12 19:07 - INFO - 	 PR-AUC: 0.800
2024-10-12 19:07 - INFO - 	 Recall for 0.4 precision: 0.960
2024-10-12 19:07 - INFO - 	 Best Val. Loss: 0.086
2024-10-12 19:07 - INFO - 	 Best ROC-AUC: 0.977
2024-10-12 19:07 - INFO - 	 Best PR-AUC: 0.800
2024-10-12 19:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-12 19:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-12 19:07 - INFO - 	 Best Recall for 0.4 precision: 0.960
2024-10-12 19:07 - INFO - ---------------------------------------------
2024-10-12 19:08 - INFO - ---------------------------------------------
2024-10-12 19:08 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 19:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98469
2024-10-12 19:08 - INFO - 	 Train Loss: 0.083
2024-10-12 19:08 - INFO - 	 Val. Loss: 0.070
2024-10-12 19:08 - INFO - 	 ROC-AUC: 0.985
2024-10-12 19:08 - INFO - 	 PR-AUC: 0.862
2024-10-12 19:08 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 19:08 - INFO - 	 Best Val. Loss: 0.070
2024-10-12 19:08 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 19:08 - INFO - 	 Best PR-AUC: 0.862
2024-10-12 19:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 19:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-12 19:08 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 19:08 - INFO - ---------------------------------------------
2024-10-12 19:08 - INFO - ---------------------------------------------
2024-10-12 19:08 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 19:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98658
2024-10-12 19:08 - INFO - 	 Train Loss: 0.073
2024-10-12 19:08 - INFO - 	 Val. Loss: 0.063
2024-10-12 19:08 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:08 - INFO - 	 PR-AUC: 0.880
2024-10-12 19:08 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 19:08 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 19:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 19:08 - INFO - 	 Best PR-AUC: 0.880
2024-10-12 19:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-12 19:08 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 19:08 - INFO - ---------------------------------------------
2024-10-12 19:09 - INFO - ---------------------------------------------
2024-10-12 19:09 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 19:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98818
2024-10-12 19:09 - INFO - 	 Train Loss: 0.068
2024-10-12 19:09 - INFO - 	 Val. Loss: 0.059
2024-10-12 19:09 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:09 - INFO - 	 PR-AUC: 0.885
2024-10-12 19:09 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 19:09 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 19:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:09 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 19:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-12 19:09 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 19:09 - INFO - ---------------------------------------------
2024-10-12 19:09 - INFO - ---------------------------------------------
2024-10-12 19:09 - INFO - Epoch: 05 | Time: 0m 33s
2024-10-12 19:09 - INFO - 	 Train Loss: 0.065
2024-10-12 19:09 - INFO - 	 Val. Loss: 0.063
2024-10-12 19:09 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:09 - INFO - 	 PR-AUC: 0.876
2024-10-12 19:09 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-12 19:09 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 19:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:09 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 19:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-12 19:09 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 19:09 - INFO - ---------------------------------------------
2024-10-12 19:10 - INFO - ---------------------------------------------
2024-10-12 19:10 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 19:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98837
2024-10-12 19:10 - INFO - 	 Train Loss: 0.061
2024-10-12 19:10 - INFO - 	 Val. Loss: 0.060
2024-10-12 19:10 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:10 - INFO - 	 PR-AUC: 0.883
2024-10-12 19:10 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:10 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 19:10 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:10 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 19:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-12 19:10 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 19:10 - INFO - ---------------------------------------------
2024-10-12 19:10 - INFO - ---------------------------------------------
2024-10-12 19:10 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 19:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98888
2024-10-12 19:10 - INFO - 	 Train Loss: 0.059
2024-10-12 19:10 - INFO - 	 Val. Loss: 0.057
2024-10-12 19:10 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:10 - INFO - 	 PR-AUC: 0.896
2024-10-12 19:10 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-12 19:10 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 19:10 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:10 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 19:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-12 19:10 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 19:10 - INFO - ---------------------------------------------
2024-10-12 19:11 - INFO - ---------------------------------------------
2024-10-12 19:11 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 19:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98907
2024-10-12 19:11 - INFO - 	 Train Loss: 0.058
2024-10-12 19:11 - INFO - 	 Val. Loss: 0.056
2024-10-12 19:11 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:11 - INFO - 	 PR-AUC: 0.898
2024-10-12 19:11 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 19:11 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 19:11 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:11 - INFO - 	 Best PR-AUC: 0.898
2024-10-12 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-12 19:11 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 19:11 - INFO - ---------------------------------------------
2024-10-12 19:11 - INFO - ---------------------------------------------
2024-10-12 19:11 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 19:11 - INFO - 	 Train Loss: 0.055
2024-10-12 19:11 - INFO - 	 Val. Loss: 0.056
2024-10-12 19:11 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:11 - INFO - 	 PR-AUC: 0.906
2024-10-12 19:11 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:11 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 19:11 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:11 - INFO - 	 Best PR-AUC: 0.906
2024-10-12 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 19:11 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 19:11 - INFO - ---------------------------------------------
2024-10-12 19:12 - INFO - ---------------------------------------------
2024-10-12 19:12 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 19:12 - INFO - 	 Train Loss: 0.053
2024-10-12 19:12 - INFO - 	 Val. Loss: 0.058
2024-10-12 19:12 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:12 - INFO - 	 PR-AUC: 0.898
2024-10-12 19:12 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:12 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 19:12 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:12 - INFO - 	 Best PR-AUC: 0.906
2024-10-12 19:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-12 19:12 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 19:12 - INFO - ---------------------------------------------
2024-10-12 19:13 - INFO - Fit the preprocessing pipeline
2024-10-12 19:13 - INFO - Training using device: cuda
2024-10-12 19:13 - INFO - Creating generators
2024-10-12 19:13 - INFO - The model has 651,257 trainable parameters
2024-10-12 19:13 - INFO - * Model:
2024-10-12 19:13 - INFO - * -----------
2024-10-12 19:13 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 19:13 - INFO - * -----------
2024-10-12 19:13 - INFO - Evaluating model based on: rocauc
2024-10-12 19:13 - INFO - Training..

2024-10-12 19:14 - INFO - ---------------------------------------------
2024-10-12 19:14 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 19:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97608
2024-10-12 19:14 - INFO - 	 Train Loss: 0.152
2024-10-12 19:14 - INFO - 	 Val. Loss: 0.089
2024-10-12 19:14 - INFO - 	 ROC-AUC: 0.976
2024-10-12 19:14 - INFO - 	 PR-AUC: 0.814
2024-10-12 19:14 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-12 19:14 - INFO - 	 Best Val. Loss: 0.089
2024-10-12 19:14 - INFO - 	 Best ROC-AUC: 0.976
2024-10-12 19:14 - INFO - 	 Best PR-AUC: 0.814
2024-10-12 19:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-12 19:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.780
2024-10-12 19:14 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-12 19:14 - INFO - ---------------------------------------------
2024-10-12 19:15 - INFO - ---------------------------------------------
2024-10-12 19:15 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-12 19:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98413
2024-10-12 19:15 - INFO - 	 Train Loss: 0.081
2024-10-12 19:15 - INFO - 	 Val. Loss: 0.071
2024-10-12 19:15 - INFO - 	 ROC-AUC: 0.984
2024-10-12 19:15 - INFO - 	 PR-AUC: 0.862
2024-10-12 19:15 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 19:15 - INFO - 	 Best Val. Loss: 0.071
2024-10-12 19:15 - INFO - 	 Best ROC-AUC: 0.984
2024-10-12 19:15 - INFO - 	 Best PR-AUC: 0.862
2024-10-12 19:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-12 19:15 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 19:15 - INFO - ---------------------------------------------
2024-10-12 19:15 - INFO - ---------------------------------------------
2024-10-12 19:15 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-12 19:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98663
2024-10-12 19:15 - INFO - 	 Train Loss: 0.071
2024-10-12 19:15 - INFO - 	 Val. Loss: 0.065
2024-10-12 19:15 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:15 - INFO - 	 PR-AUC: 0.876
2024-10-12 19:15 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:15 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 19:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 19:15 - INFO - 	 Best PR-AUC: 0.876
2024-10-12 19:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-12 19:15 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:15 - INFO - ---------------------------------------------
2024-10-12 19:16 - INFO - ---------------------------------------------
2024-10-12 19:16 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 19:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98732
2024-10-12 19:16 - INFO - 	 Train Loss: 0.066
2024-10-12 19:16 - INFO - 	 Val. Loss: 0.062
2024-10-12 19:16 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:16 - INFO - 	 PR-AUC: 0.885
2024-10-12 19:16 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:16 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 19:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 19:16 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 19:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:16 - INFO - ---------------------------------------------
2024-10-12 19:16 - INFO - ---------------------------------------------
2024-10-12 19:16 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-12 19:16 - INFO - 	 Train Loss: 0.062
2024-10-12 19:16 - INFO - 	 Val. Loss: 0.064
2024-10-12 19:16 - INFO - 	 ROC-AUC: 0.986
2024-10-12 19:16 - INFO - 	 PR-AUC: 0.885
2024-10-12 19:16 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:16 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 19:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 19:16 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-12 19:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:16 - INFO - ---------------------------------------------
2024-10-12 19:17 - INFO - ---------------------------------------------
2024-10-12 19:17 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 19:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98903
2024-10-12 19:17 - INFO - 	 Train Loss: 0.059
2024-10-12 19:17 - INFO - 	 Val. Loss: 0.055
2024-10-12 19:17 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:17 - INFO - 	 PR-AUC: 0.903
2024-10-12 19:17 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:17 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 19:17 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:17 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 19:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-12 19:17 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:17 - INFO - ---------------------------------------------
2024-10-12 19:17 - INFO - ---------------------------------------------
2024-10-12 19:17 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 19:17 - INFO - 	 Train Loss: 0.058
2024-10-12 19:17 - INFO - 	 Val. Loss: 0.059
2024-10-12 19:17 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:17 - INFO - 	 PR-AUC: 0.897
2024-10-12 19:17 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:17 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 19:17 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:17 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 19:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-12 19:17 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:17 - INFO - ---------------------------------------------
2024-10-12 19:18 - INFO - ---------------------------------------------
2024-10-12 19:18 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 19:18 - INFO - 	 Train Loss: 0.055
2024-10-12 19:18 - INFO - 	 Val. Loss: 0.060
2024-10-12 19:18 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:18 - INFO - 	 PR-AUC: 0.896
2024-10-12 19:18 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 19:18 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 19:18 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:18 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-12 19:18 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:18 - INFO - ---------------------------------------------
2024-10-12 19:18 - INFO - ---------------------------------------------
2024-10-12 19:18 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 19:18 - INFO - 	 Train Loss: 0.054
2024-10-12 19:18 - INFO - 	 Val. Loss: 0.062
2024-10-12 19:18 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:18 - INFO - 	 PR-AUC: 0.890
2024-10-12 19:18 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:18 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 19:18 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:18 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-12 19:18 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:18 - INFO - ---------------------------------------------
2024-10-12 19:20 - INFO - Fit the preprocessing pipeline
2024-10-12 19:20 - INFO - Training using device: cuda
2024-10-12 19:20 - INFO - Creating generators
2024-10-12 19:20 - INFO - The model has 651,257 trainable parameters
2024-10-12 19:20 - INFO - * Model:
2024-10-12 19:20 - INFO - * -----------
2024-10-12 19:20 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 19:20 - INFO - * -----------
2024-10-12 19:20 - INFO - Evaluating model based on: rocauc
2024-10-12 19:20 - INFO - Training..

2024-10-12 19:21 - INFO - ---------------------------------------------
2024-10-12 19:21 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 19:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97865
2024-10-12 19:21 - INFO - 	 Train Loss: 0.158
2024-10-12 19:21 - INFO - 	 Val. Loss: 0.083
2024-10-12 19:21 - INFO - 	 ROC-AUC: 0.979
2024-10-12 19:21 - INFO - 	 PR-AUC: 0.819
2024-10-12 19:21 - INFO - 	 Recall for 0.4 precision: 0.957
2024-10-12 19:21 - INFO - 	 Best Val. Loss: 0.083
2024-10-12 19:21 - INFO - 	 Best ROC-AUC: 0.979
2024-10-12 19:21 - INFO - 	 Best PR-AUC: 0.819
2024-10-12 19:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-12 19:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-12 19:21 - INFO - 	 Best Recall for 0.4 precision: 0.957
2024-10-12 19:21 - INFO - ---------------------------------------------
2024-10-12 19:21 - INFO - ---------------------------------------------
2024-10-12 19:21 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 19:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98497
2024-10-12 19:21 - INFO - 	 Train Loss: 0.083
2024-10-12 19:21 - INFO - 	 Val. Loss: 0.067
2024-10-12 19:21 - INFO - 	 ROC-AUC: 0.985
2024-10-12 19:21 - INFO - 	 PR-AUC: 0.870
2024-10-12 19:21 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-12 19:21 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 19:21 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 19:21 - INFO - 	 Best PR-AUC: 0.870
2024-10-12 19:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-12 19:21 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-12 19:21 - INFO - ---------------------------------------------
2024-10-12 19:22 - INFO - ---------------------------------------------
2024-10-12 19:22 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 19:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98647
2024-10-12 19:22 - INFO - 	 Train Loss: 0.071
2024-10-12 19:22 - INFO - 	 Val. Loss: 0.065
2024-10-12 19:22 - INFO - 	 ROC-AUC: 0.986
2024-10-12 19:22 - INFO - 	 PR-AUC: 0.876
2024-10-12 19:22 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 19:22 - INFO - 	 Best Val. Loss: 0.065
2024-10-12 19:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 19:22 - INFO - 	 Best PR-AUC: 0.876
2024-10-12 19:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-12 19:22 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 19:22 - INFO - ---------------------------------------------
2024-10-12 19:22 - INFO - ---------------------------------------------
2024-10-12 19:22 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 19:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98659
2024-10-12 19:22 - INFO - 	 Train Loss: 0.067
2024-10-12 19:22 - INFO - 	 Val. Loss: 0.064
2024-10-12 19:22 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:22 - INFO - 	 PR-AUC: 0.882
2024-10-12 19:22 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 19:22 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 19:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 19:22 - INFO - 	 Best PR-AUC: 0.882
2024-10-12 19:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-12 19:22 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-12 19:22 - INFO - ---------------------------------------------
2024-10-12 19:23 - INFO - ---------------------------------------------
2024-10-12 19:23 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 19:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98758
2024-10-12 19:23 - INFO - 	 Train Loss: 0.063
2024-10-12 19:23 - INFO - 	 Val. Loss: 0.062
2024-10-12 19:23 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:23 - INFO - 	 PR-AUC: 0.889
2024-10-12 19:23 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:23 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 19:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:23 - INFO - 	 Best PR-AUC: 0.889
2024-10-12 19:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-12 19:23 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 19:23 - INFO - ---------------------------------------------
2024-10-12 19:23 - INFO - ---------------------------------------------
2024-10-12 19:23 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 19:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98905
2024-10-12 19:23 - INFO - 	 Train Loss: 0.060
2024-10-12 19:23 - INFO - 	 Val. Loss: 0.060
2024-10-12 19:23 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:23 - INFO - 	 PR-AUC: 0.893
2024-10-12 19:23 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-12 19:23 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 19:23 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:23 - INFO - 	 Best PR-AUC: 0.893
2024-10-12 19:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-12 19:23 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-12 19:23 - INFO - ---------------------------------------------
2024-10-12 19:24 - INFO - ---------------------------------------------
2024-10-12 19:24 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 19:24 - INFO - 	 Train Loss: 0.056
2024-10-12 19:24 - INFO - 	 Val. Loss: 0.061
2024-10-12 19:24 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:24 - INFO - 	 PR-AUC: 0.895
2024-10-12 19:24 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:24 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 19:24 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:24 - INFO - 	 Best PR-AUC: 0.895
2024-10-12 19:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-12 19:24 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-12 19:24 - INFO - ---------------------------------------------
2024-10-12 19:25 - INFO - ---------------------------------------------
2024-10-12 19:25 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-12 19:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98913
2024-10-12 19:25 - INFO - 	 Train Loss: 0.054
2024-10-12 19:25 - INFO - 	 Val. Loss: 0.057
2024-10-12 19:25 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:25 - INFO - 	 PR-AUC: 0.902
2024-10-12 19:25 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:25 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 19:25 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:25 - INFO - 	 Best PR-AUC: 0.902
2024-10-12 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-12 19:25 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-12 19:25 - INFO - ---------------------------------------------
2024-10-12 19:25 - INFO - ---------------------------------------------
2024-10-12 19:25 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 19:25 - INFO - 	 Train Loss: 0.054
2024-10-12 19:25 - INFO - 	 Val. Loss: 0.059
2024-10-12 19:25 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:25 - INFO - 	 PR-AUC: 0.905
2024-10-12 19:25 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 19:25 - INFO - 	 Best Val. Loss: 0.057
2024-10-12 19:25 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:25 - INFO - 	 Best PR-AUC: 0.905
2024-10-12 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-12 19:25 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-12 19:25 - INFO - ---------------------------------------------
2024-10-12 19:26 - INFO - ---------------------------------------------
2024-10-12 19:26 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 19:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98945
2024-10-12 19:26 - INFO - 	 Train Loss: 0.053
2024-10-12 19:26 - INFO - 	 Val. Loss: 0.056
2024-10-12 19:26 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:26 - INFO - 	 PR-AUC: 0.907
2024-10-12 19:26 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:26 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 19:26 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:26 - INFO - 	 Best PR-AUC: 0.907
2024-10-12 19:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-12 19:26 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-12 19:26 - INFO - ---------------------------------------------
2024-10-12 19:27 - INFO - Fit the preprocessing pipeline
2024-10-12 19:27 - INFO - Training using device: cuda
2024-10-12 19:27 - INFO - Creating generators
2024-10-12 19:27 - INFO - The model has 651,257 trainable parameters
2024-10-12 19:27 - INFO - * Model:
2024-10-12 19:27 - INFO - * -----------
2024-10-12 19:27 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 19:27 - INFO - * -----------
2024-10-12 19:27 - INFO - Evaluating model based on: rocauc
2024-10-12 19:27 - INFO - Training..

2024-10-12 19:28 - INFO - ---------------------------------------------
2024-10-12 19:28 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 19:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97998
2024-10-12 19:28 - INFO - 	 Train Loss: 0.156
2024-10-12 19:28 - INFO - 	 Val. Loss: 0.078
2024-10-12 19:28 - INFO - 	 ROC-AUC: 0.980
2024-10-12 19:28 - INFO - 	 PR-AUC: 0.829
2024-10-12 19:28 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-12 19:28 - INFO - 	 Best Val. Loss: 0.078
2024-10-12 19:28 - INFO - 	 Best ROC-AUC: 0.980
2024-10-12 19:28 - INFO - 	 Best PR-AUC: 0.829
2024-10-12 19:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-12 19:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-12 19:28 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-12 19:28 - INFO - ---------------------------------------------
2024-10-12 19:28 - INFO - ---------------------------------------------
2024-10-12 19:28 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 19:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98468
2024-10-12 19:28 - INFO - 	 Train Loss: 0.082
2024-10-12 19:28 - INFO - 	 Val. Loss: 0.068
2024-10-12 19:28 - INFO - 	 ROC-AUC: 0.985
2024-10-12 19:28 - INFO - 	 PR-AUC: 0.849
2024-10-12 19:28 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:28 - INFO - 	 Best Val. Loss: 0.068
2024-10-12 19:28 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 19:28 - INFO - 	 Best PR-AUC: 0.849
2024-10-12 19:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-12 19:28 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 19:28 - INFO - ---------------------------------------------
2024-10-12 19:29 - INFO - ---------------------------------------------
2024-10-12 19:29 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-12 19:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98689
2024-10-12 19:29 - INFO - 	 Train Loss: 0.072
2024-10-12 19:29 - INFO - 	 Val. Loss: 0.063
2024-10-12 19:29 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:29 - INFO - 	 PR-AUC: 0.872
2024-10-12 19:29 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 19:29 - INFO - 	 Best Val. Loss: 0.063
2024-10-12 19:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 19:29 - INFO - 	 Best PR-AUC: 0.872
2024-10-12 19:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-12 19:29 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 19:29 - INFO - ---------------------------------------------
2024-10-12 19:29 - INFO - ---------------------------------------------
2024-10-12 19:29 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-12 19:29 - INFO - 	 Train Loss: 0.068
2024-10-12 19:29 - INFO - 	 Val. Loss: 0.062
2024-10-12 19:29 - INFO - 	 ROC-AUC: 0.986
2024-10-12 19:29 - INFO - 	 PR-AUC: 0.882
2024-10-12 19:29 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 19:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 19:29 - INFO - 	 Best PR-AUC: 0.882
2024-10-12 19:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-12 19:29 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 19:29 - INFO - ---------------------------------------------
2024-10-12 19:30 - INFO - ---------------------------------------------
2024-10-12 19:30 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-12 19:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98765
2024-10-12 19:30 - INFO - 	 Train Loss: 0.064
2024-10-12 19:30 - INFO - 	 Val. Loss: 0.059
2024-10-12 19:30 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:30 - INFO - 	 PR-AUC: 0.891
2024-10-12 19:30 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 19:30 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 19:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:30 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 19:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-12 19:30 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 19:30 - INFO - ---------------------------------------------
2024-10-12 19:30 - INFO - ---------------------------------------------
2024-10-12 19:30 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 19:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98869
2024-10-12 19:30 - INFO - 	 Train Loss: 0.060
2024-10-12 19:30 - INFO - 	 Val. Loss: 0.056
2024-10-12 19:30 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:30 - INFO - 	 PR-AUC: 0.905
2024-10-12 19:30 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:30 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 19:30 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:30 - INFO - 	 Best PR-AUC: 0.905
2024-10-12 19:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-12 19:30 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 19:30 - INFO - ---------------------------------------------
2024-10-12 19:31 - INFO - ---------------------------------------------
2024-10-12 19:31 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 19:31 - INFO - 	 Train Loss: 0.058
2024-10-12 19:31 - INFO - 	 Val. Loss: 0.056
2024-10-12 19:31 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:31 - INFO - 	 PR-AUC: 0.903
2024-10-12 19:31 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:31 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 19:31 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:31 - INFO - 	 Best PR-AUC: 0.905
2024-10-12 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-12 19:31 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 19:31 - INFO - ---------------------------------------------
2024-10-12 19:31 - INFO - ---------------------------------------------
2024-10-12 19:31 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 19:31 - INFO - 	 Train Loss: 0.056
2024-10-12 19:31 - INFO - 	 Val. Loss: 0.059
2024-10-12 19:31 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:31 - INFO - 	 PR-AUC: 0.897
2024-10-12 19:31 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:31 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 19:31 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:31 - INFO - 	 Best PR-AUC: 0.905
2024-10-12 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-12 19:31 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 19:31 - INFO - ---------------------------------------------
2024-10-12 19:32 - INFO - ---------------------------------------------
2024-10-12 19:32 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 19:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.99006
2024-10-12 19:32 - INFO - 	 Train Loss: 0.055
2024-10-12 19:32 - INFO - 	 Val. Loss: 0.057
2024-10-12 19:32 - INFO - 	 ROC-AUC: 0.990
2024-10-12 19:32 - INFO - 	 PR-AUC: 0.908
2024-10-12 19:32 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-12 19:32 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 19:32 - INFO - 	 Best ROC-AUC: 0.990
2024-10-12 19:32 - INFO - 	 Best PR-AUC: 0.908
2024-10-12 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-12 19:32 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-12 19:32 - INFO - ---------------------------------------------
2024-10-12 19:32 - INFO - ---------------------------------------------
2024-10-12 19:32 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 19:32 - INFO - 	 Train Loss: 0.054
2024-10-12 19:32 - INFO - 	 Val. Loss: 0.059
2024-10-12 19:32 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:32 - INFO - 	 PR-AUC: 0.892
2024-10-12 19:32 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:32 - INFO - 	 Best Val. Loss: 0.056
2024-10-12 19:32 - INFO - 	 Best ROC-AUC: 0.990
2024-10-12 19:32 - INFO - 	 Best PR-AUC: 0.908
2024-10-12 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-12 19:32 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-12 19:32 - INFO - ---------------------------------------------
2024-10-12 19:34 - INFO - Fit the preprocessing pipeline
2024-10-12 19:34 - INFO - Training using device: cuda
2024-10-12 19:34 - INFO - Creating generators
2024-10-12 19:34 - INFO - The model has 651,257 trainable parameters
2024-10-12 19:34 - INFO - * Model:
2024-10-12 19:34 - INFO - * -----------
2024-10-12 19:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 19:34 - INFO - * -----------
2024-10-12 19:34 - INFO - Evaluating model based on: rocauc
2024-10-12 19:34 - INFO - Training..

2024-10-12 19:35 - INFO - ---------------------------------------------
2024-10-12 19:35 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 19:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97913
2024-10-12 19:35 - INFO - 	 Train Loss: 0.164
2024-10-12 19:35 - INFO - 	 Val. Loss: 0.082
2024-10-12 19:35 - INFO - 	 ROC-AUC: 0.979
2024-10-12 19:35 - INFO - 	 PR-AUC: 0.807
2024-10-12 19:35 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-12 19:35 - INFO - 	 Best Val. Loss: 0.082
2024-10-12 19:35 - INFO - 	 Best ROC-AUC: 0.979
2024-10-12 19:35 - INFO - 	 Best PR-AUC: 0.807
2024-10-12 19:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-12 19:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-12 19:35 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-12 19:35 - INFO - ---------------------------------------------
2024-10-12 19:35 - INFO - ---------------------------------------------
2024-10-12 19:35 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 19:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98548
2024-10-12 19:35 - INFO - 	 Train Loss: 0.084
2024-10-12 19:35 - INFO - 	 Val. Loss: 0.067
2024-10-12 19:35 - INFO - 	 ROC-AUC: 0.985
2024-10-12 19:35 - INFO - 	 PR-AUC: 0.863
2024-10-12 19:35 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-12 19:35 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 19:35 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 19:35 - INFO - 	 Best PR-AUC: 0.863
2024-10-12 19:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-12 19:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-12 19:35 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-12 19:35 - INFO - ---------------------------------------------
2024-10-12 19:36 - INFO - ---------------------------------------------
2024-10-12 19:36 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 19:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98564
2024-10-12 19:36 - INFO - 	 Train Loss: 0.073
2024-10-12 19:36 - INFO - 	 Val. Loss: 0.067
2024-10-12 19:36 - INFO - 	 ROC-AUC: 0.986
2024-10-12 19:36 - INFO - 	 PR-AUC: 0.865
2024-10-12 19:36 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 19:36 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 19:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 19:36 - INFO - 	 Best PR-AUC: 0.865
2024-10-12 19:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-12 19:36 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 19:36 - INFO - ---------------------------------------------
2024-10-12 19:36 - INFO - ---------------------------------------------
2024-10-12 19:36 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 19:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98583
2024-10-12 19:36 - INFO - 	 Train Loss: 0.068
2024-10-12 19:36 - INFO - 	 Val. Loss: 0.067
2024-10-12 19:36 - INFO - 	 ROC-AUC: 0.986
2024-10-12 19:36 - INFO - 	 PR-AUC: 0.861
2024-10-12 19:36 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 19:36 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 19:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 19:36 - INFO - 	 Best PR-AUC: 0.865
2024-10-12 19:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 19:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-12 19:36 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 19:36 - INFO - ---------------------------------------------
2024-10-12 19:37 - INFO - ---------------------------------------------
2024-10-12 19:37 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-12 19:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98724
2024-10-12 19:37 - INFO - 	 Train Loss: 0.064
2024-10-12 19:37 - INFO - 	 Val. Loss: 0.061
2024-10-12 19:37 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:37 - INFO - 	 PR-AUC: 0.885
2024-10-12 19:37 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 19:37 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 19:37 - INFO - 	 Best ROC-AUC: 0.987
2024-10-12 19:37 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 19:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-12 19:37 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 19:37 - INFO - ---------------------------------------------
2024-10-12 19:37 - INFO - ---------------------------------------------
2024-10-12 19:37 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 19:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98765
2024-10-12 19:37 - INFO - 	 Train Loss: 0.061
2024-10-12 19:37 - INFO - 	 Val. Loss: 0.061
2024-10-12 19:37 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:37 - INFO - 	 PR-AUC: 0.882
2024-10-12 19:37 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:37 - INFO - 	 Best Val. Loss: 0.061
2024-10-12 19:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:37 - INFO - 	 Best PR-AUC: 0.885
2024-10-12 19:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-12 19:37 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 19:37 - INFO - ---------------------------------------------
2024-10-12 19:38 - INFO - ---------------------------------------------
2024-10-12 19:38 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 19:38 - INFO - 	 Train Loss: 0.058
2024-10-12 19:38 - INFO - 	 Val. Loss: 0.060
2024-10-12 19:38 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:38 - INFO - 	 PR-AUC: 0.892
2024-10-12 19:38 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-12 19:38 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 19:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:38 - INFO - 	 Best PR-AUC: 0.892
2024-10-12 19:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-12 19:38 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 19:38 - INFO - ---------------------------------------------
2024-10-12 19:38 - INFO - ---------------------------------------------
2024-10-12 19:38 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 19:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98875
2024-10-12 19:38 - INFO - 	 Train Loss: 0.056
2024-10-12 19:38 - INFO - 	 Val. Loss: 0.058
2024-10-12 19:38 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:38 - INFO - 	 PR-AUC: 0.898
2024-10-12 19:38 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:38 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 19:38 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:38 - INFO - 	 Best PR-AUC: 0.898
2024-10-12 19:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-12 19:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:38 - INFO - ---------------------------------------------
2024-10-12 19:39 - INFO - ---------------------------------------------
2024-10-12 19:39 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 19:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98928
2024-10-12 19:39 - INFO - 	 Train Loss: 0.054
2024-10-12 19:39 - INFO - 	 Val. Loss: 0.055
2024-10-12 19:39 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:39 - INFO - 	 PR-AUC: 0.903
2024-10-12 19:39 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:39 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 19:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:39 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-12 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-12 19:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:39 - INFO - ---------------------------------------------
2024-10-12 19:39 - INFO - ---------------------------------------------
2024-10-12 19:39 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 19:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98942
2024-10-12 19:39 - INFO - 	 Train Loss: 0.053
2024-10-12 19:39 - INFO - 	 Val. Loss: 0.058
2024-10-12 19:39 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:39 - INFO - 	 PR-AUC: 0.896
2024-10-12 19:39 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-12 19:39 - INFO - 	 Best Val. Loss: 0.055
2024-10-12 19:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:39 - INFO - 	 Best PR-AUC: 0.903
2024-10-12 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-12 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-12 19:39 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-12 19:39 - INFO - ---------------------------------------------
2024-10-12 19:41 - INFO - Fit the preprocessing pipeline
2024-10-12 19:41 - INFO - Training using device: cuda
2024-10-12 19:41 - INFO - Creating generators
2024-10-12 19:41 - INFO - The model has 651,257 trainable parameters
2024-10-12 19:41 - INFO - * Model:
2024-10-12 19:41 - INFO - * -----------
2024-10-12 19:41 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 19:41 - INFO - * -----------
2024-10-12 19:41 - INFO - Evaluating model based on: rocauc
2024-10-12 19:41 - INFO - Training..

2024-10-12 19:41 - INFO - ---------------------------------------------
2024-10-12 19:41 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 19:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97924
2024-10-12 19:41 - INFO - 	 Train Loss: 0.154
2024-10-12 19:41 - INFO - 	 Val. Loss: 0.079
2024-10-12 19:41 - INFO - 	 ROC-AUC: 0.979
2024-10-12 19:41 - INFO - 	 PR-AUC: 0.833
2024-10-12 19:41 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-12 19:41 - INFO - 	 Best Val. Loss: 0.079
2024-10-12 19:41 - INFO - 	 Best ROC-AUC: 0.979
2024-10-12 19:41 - INFO - 	 Best PR-AUC: 0.833
2024-10-12 19:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-12 19:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-12 19:41 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-12 19:41 - INFO - ---------------------------------------------
2024-10-12 19:42 - INFO - ---------------------------------------------
2024-10-12 19:42 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 19:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98483
2024-10-12 19:42 - INFO - 	 Train Loss: 0.083
2024-10-12 19:42 - INFO - 	 Val. Loss: 0.075
2024-10-12 19:42 - INFO - 	 ROC-AUC: 0.985
2024-10-12 19:42 - INFO - 	 PR-AUC: 0.859
2024-10-12 19:42 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 19:42 - INFO - 	 Best Val. Loss: 0.075
2024-10-12 19:42 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 19:42 - INFO - 	 Best PR-AUC: 0.859
2024-10-12 19:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-12 19:42 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-12 19:42 - INFO - ---------------------------------------------
2024-10-12 19:42 - INFO - ---------------------------------------------
2024-10-12 19:42 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 19:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9862
2024-10-12 19:42 - INFO - 	 Train Loss: 0.070
2024-10-12 19:42 - INFO - 	 Val. Loss: 0.074
2024-10-12 19:42 - INFO - 	 ROC-AUC: 0.986
2024-10-12 19:42 - INFO - 	 PR-AUC: 0.866
2024-10-12 19:42 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 19:42 - INFO - 	 Best Val. Loss: 0.074
2024-10-12 19:42 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 19:42 - INFO - 	 Best PR-AUC: 0.866
2024-10-12 19:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-12 19:42 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-12 19:42 - INFO - ---------------------------------------------
2024-10-12 19:43 - INFO - ---------------------------------------------
2024-10-12 19:43 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 19:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98852
2024-10-12 19:43 - INFO - 	 Train Loss: 0.066
2024-10-12 19:43 - INFO - 	 Val. Loss: 0.062
2024-10-12 19:43 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:43 - INFO - 	 PR-AUC: 0.883
2024-10-12 19:43 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:43 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 19:43 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:43 - INFO - 	 Best PR-AUC: 0.883
2024-10-12 19:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-12 19:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:43 - INFO - ---------------------------------------------
2024-10-12 19:44 - INFO - ---------------------------------------------
2024-10-12 19:44 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 19:44 - INFO - 	 Train Loss: 0.062
2024-10-12 19:44 - INFO - 	 Val. Loss: 0.062
2024-10-12 19:44 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:44 - INFO - 	 PR-AUC: 0.878
2024-10-12 19:44 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:44 - INFO - 	 Best Val. Loss: 0.062
2024-10-12 19:44 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:44 - INFO - 	 Best PR-AUC: 0.883
2024-10-12 19:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-12 19:44 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:44 - INFO - ---------------------------------------------
2024-10-12 19:44 - INFO - ---------------------------------------------
2024-10-12 19:44 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 19:44 - INFO - 	 Train Loss: 0.060
2024-10-12 19:44 - INFO - 	 Val. Loss: 0.060
2024-10-12 19:44 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:44 - INFO - 	 PR-AUC: 0.891
2024-10-12 19:44 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:44 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 19:44 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:44 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 19:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-12 19:44 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:44 - INFO - ---------------------------------------------
2024-10-12 19:45 - INFO - ---------------------------------------------
2024-10-12 19:45 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 19:45 - INFO - 	 Train Loss: 0.057
2024-10-12 19:45 - INFO - 	 Val. Loss: 0.061
2024-10-12 19:45 - INFO - 	 ROC-AUC: 0.987
2024-10-12 19:45 - INFO - 	 PR-AUC: 0.891
2024-10-12 19:45 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 19:45 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 19:45 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:45 - INFO - 	 Best PR-AUC: 0.891
2024-10-12 19:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-12 19:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-12 19:45 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:45 - INFO - ---------------------------------------------
2024-10-12 19:47 - INFO - Fit the preprocessing pipeline
2024-10-12 19:47 - INFO - Training using device: cuda
2024-10-12 19:47 - INFO - Creating generators
2024-10-12 19:47 - INFO - The model has 651,257 trainable parameters
2024-10-12 19:47 - INFO - * Model:
2024-10-12 19:47 - INFO - * -----------
2024-10-12 19:47 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-12 19:47 - INFO - * -----------
2024-10-12 19:47 - INFO - Evaluating model based on: rocauc
2024-10-12 19:47 - INFO - Training..

2024-10-12 19:47 - INFO - ---------------------------------------------
2024-10-12 19:47 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-12 19:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97417
2024-10-12 19:47 - INFO - 	 Train Loss: 0.157
2024-10-12 19:47 - INFO - 	 Val. Loss: 0.096
2024-10-12 19:47 - INFO - 	 ROC-AUC: 0.974
2024-10-12 19:47 - INFO - 	 PR-AUC: 0.800
2024-10-12 19:47 - INFO - 	 Recall for 0.4 precision: 0.950
2024-10-12 19:47 - INFO - 	 Best Val. Loss: 0.096
2024-10-12 19:47 - INFO - 	 Best ROC-AUC: 0.974
2024-10-12 19:47 - INFO - 	 Best PR-AUC: 0.800
2024-10-12 19:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-12 19:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-12 19:47 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-12 19:47 - INFO - ---------------------------------------------
2024-10-12 19:48 - INFO - ---------------------------------------------
2024-10-12 19:48 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-12 19:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98543
2024-10-12 19:48 - INFO - 	 Train Loss: 0.085
2024-10-12 19:48 - INFO - 	 Val. Loss: 0.067
2024-10-12 19:48 - INFO - 	 ROC-AUC: 0.985
2024-10-12 19:48 - INFO - 	 PR-AUC: 0.868
2024-10-12 19:48 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:48 - INFO - 	 Best Val. Loss: 0.067
2024-10-12 19:48 - INFO - 	 Best ROC-AUC: 0.985
2024-10-12 19:48 - INFO - 	 Best PR-AUC: 0.868
2024-10-12 19:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-12 19:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-12 19:48 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 19:48 - INFO - ---------------------------------------------
2024-10-12 19:48 - INFO - ---------------------------------------------
2024-10-12 19:48 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-12 19:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98628
2024-10-12 19:48 - INFO - 	 Train Loss: 0.073
2024-10-12 19:48 - INFO - 	 Val. Loss: 0.064
2024-10-12 19:48 - INFO - 	 ROC-AUC: 0.986
2024-10-12 19:48 - INFO - 	 PR-AUC: 0.881
2024-10-12 19:48 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-12 19:48 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 19:48 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 19:48 - INFO - 	 Best PR-AUC: 0.881
2024-10-12 19:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 19:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-12 19:48 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-12 19:48 - INFO - ---------------------------------------------
2024-10-12 19:49 - INFO - ---------------------------------------------
2024-10-12 19:49 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-12 19:49 - INFO - 	 Train Loss: 0.068
2024-10-12 19:49 - INFO - 	 Val. Loss: 0.064
2024-10-12 19:49 - INFO - 	 ROC-AUC: 0.986
2024-10-12 19:49 - INFO - 	 PR-AUC: 0.876
2024-10-12 19:49 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:49 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 19:49 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 19:49 - INFO - 	 Best PR-AUC: 0.881
2024-10-12 19:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-12 19:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-12 19:49 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 19:49 - INFO - ---------------------------------------------
2024-10-12 19:49 - INFO - ---------------------------------------------
2024-10-12 19:49 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-12 19:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98634
2024-10-12 19:49 - INFO - 	 Train Loss: 0.064
2024-10-12 19:49 - INFO - 	 Val. Loss: 0.065
2024-10-12 19:49 - INFO - 	 ROC-AUC: 0.986
2024-10-12 19:49 - INFO - 	 PR-AUC: 0.886
2024-10-12 19:49 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-12 19:49 - INFO - 	 Best Val. Loss: 0.064
2024-10-12 19:49 - INFO - 	 Best ROC-AUC: 0.986
2024-10-12 19:49 - INFO - 	 Best PR-AUC: 0.886
2024-10-12 19:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-12 19:49 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-12 19:49 - INFO - ---------------------------------------------
2024-10-12 19:50 - INFO - ---------------------------------------------
2024-10-12 19:50 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-12 19:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98793
2024-10-12 19:50 - INFO - 	 Train Loss: 0.063
2024-10-12 19:50 - INFO - 	 Val. Loss: 0.060
2024-10-12 19:50 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:50 - INFO - 	 PR-AUC: 0.894
2024-10-12 19:50 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-12 19:50 - INFO - 	 Best Val. Loss: 0.060
2024-10-12 19:50 - INFO - 	 Best ROC-AUC: 0.988
2024-10-12 19:50 - INFO - 	 Best PR-AUC: 0.894
2024-10-12 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-12 19:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-12 19:50 - INFO - ---------------------------------------------
2024-10-12 19:50 - INFO - ---------------------------------------------
2024-10-12 19:50 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-12 19:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98871
2024-10-12 19:50 - INFO - 	 Train Loss: 0.058
2024-10-12 19:50 - INFO - 	 Val. Loss: 0.059
2024-10-12 19:50 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:50 - INFO - 	 PR-AUC: 0.896
2024-10-12 19:50 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-12 19:50 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 19:50 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:50 - INFO - 	 Best PR-AUC: 0.896
2024-10-12 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-12 19:50 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 19:50 - INFO - ---------------------------------------------
2024-10-12 19:51 - INFO - ---------------------------------------------
2024-10-12 19:51 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-12 19:51 - INFO - 	 Train Loss: 0.057
2024-10-12 19:51 - INFO - 	 Val. Loss: 0.061
2024-10-12 19:51 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:51 - INFO - 	 PR-AUC: 0.897
2024-10-12 19:51 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 19:51 - INFO - 	 Best Val. Loss: 0.059
2024-10-12 19:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:51 - INFO - 	 Best PR-AUC: 0.897
2024-10-12 19:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-12 19:51 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 19:51 - INFO - ---------------------------------------------
2024-10-12 19:51 - INFO - ---------------------------------------------
2024-10-12 19:51 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-12 19:51 - INFO - 	 Train Loss: 0.055
2024-10-12 19:51 - INFO - 	 Val. Loss: 0.058
2024-10-12 19:51 - INFO - 	 ROC-AUC: 0.988
2024-10-12 19:51 - INFO - 	 PR-AUC: 0.899
2024-10-12 19:51 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-12 19:51 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 19:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:51 - INFO - 	 Best PR-AUC: 0.899
2024-10-12 19:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 19:51 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 19:51 - INFO - ---------------------------------------------
2024-10-12 19:52 - INFO - ---------------------------------------------
2024-10-12 19:52 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-12 19:52 - INFO - 	 Train Loss: 0.053
2024-10-12 19:52 - INFO - 	 Val. Loss: 0.058
2024-10-12 19:52 - INFO - 	 ROC-AUC: 0.989
2024-10-12 19:52 - INFO - 	 PR-AUC: 0.894
2024-10-12 19:52 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-12 19:52 - INFO - 	 Best Val. Loss: 0.058
2024-10-12 19:52 - INFO - 	 Best ROC-AUC: 0.989
2024-10-12 19:52 - INFO - 	 Best PR-AUC: 0.899
2024-10-12 19:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-12 19:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-12 19:52 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-12 19:52 - INFO - ---------------------------------------------
