2024-10-13 23:44 - INFO - Fit the preprocessing pipeline
2024-10-13 23:44 - INFO - Training using device: cuda
2024-10-13 23:44 - INFO - Creating generators
2024-10-13 23:44 - INFO - The model has 651,257 trainable parameters
2024-10-13 23:44 - INFO - * Model:
2024-10-13 23:44 - INFO - * -----------
2024-10-13 23:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 23:44 - INFO - * -----------
2024-10-13 23:44 - INFO - Evaluating model based on: rocauc
2024-10-13 23:44 - INFO - Training..

2024-10-13 23:45 - INFO - ---------------------------------------------
2024-10-13 23:45 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-13 23:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.91848
2024-10-13 23:45 - INFO - 	 Train Loss: 0.229
2024-10-13 23:45 - INFO - 	 Val. Loss: 0.165
2024-10-13 23:45 - INFO - 	 ROC-AUC: 0.918
2024-10-13 23:45 - INFO - 	 PR-AUC: 0.472
2024-10-13 23:45 - INFO - 	 Recall for 0.4 precision: 0.714
2024-10-13 23:45 - INFO - 	 Best Val. Loss: 0.165
2024-10-13 23:45 - INFO - 	 Best ROC-AUC: 0.918
2024-10-13 23:45 - INFO - 	 Best PR-AUC: 0.472
2024-10-13 23:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.901
2024-10-13 23:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.487
2024-10-13 23:45 - INFO - 	 Best Recall for 0.4 precision: 0.714
2024-10-13 23:45 - INFO - ---------------------------------------------
2024-10-13 23:45 - INFO - ---------------------------------------------
2024-10-13 23:45 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-13 23:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95479
2024-10-13 23:45 - INFO - 	 Train Loss: 0.142
2024-10-13 23:45 - INFO - 	 Val. Loss: 0.126
2024-10-13 23:45 - INFO - 	 ROC-AUC: 0.955
2024-10-13 23:45 - INFO - 	 PR-AUC: 0.601
2024-10-13 23:45 - INFO - 	 Recall for 0.4 precision: 0.885
2024-10-13 23:45 - INFO - 	 Best Val. Loss: 0.126
2024-10-13 23:45 - INFO - 	 Best ROC-AUC: 0.955
2024-10-13 23:45 - INFO - 	 Best PR-AUC: 0.601
2024-10-13 23:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-10-13 23:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.596
2024-10-13 23:45 - INFO - 	 Best Recall for 0.4 precision: 0.885
2024-10-13 23:45 - INFO - ---------------------------------------------
2024-10-13 23:46 - INFO - ---------------------------------------------
2024-10-13 23:46 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-13 23:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96436
2024-10-13 23:46 - INFO - 	 Train Loss: 0.128
2024-10-13 23:46 - INFO - 	 Val. Loss: 0.106
2024-10-13 23:46 - INFO - 	 ROC-AUC: 0.964
2024-10-13 23:46 - INFO - 	 PR-AUC: 0.679
2024-10-13 23:46 - INFO - 	 Recall for 0.4 precision: 0.925
2024-10-13 23:46 - INFO - 	 Best Val. Loss: 0.106
2024-10-13 23:46 - INFO - 	 Best ROC-AUC: 0.964
2024-10-13 23:46 - INFO - 	 Best PR-AUC: 0.679
2024-10-13 23:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-13 23:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.693
2024-10-13 23:46 - INFO - 	 Best Recall for 0.4 precision: 0.925
2024-10-13 23:46 - INFO - ---------------------------------------------
2024-10-13 23:46 - INFO - ---------------------------------------------
2024-10-13 23:46 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-13 23:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96503
2024-10-13 23:46 - INFO - 	 Train Loss: 0.121
2024-10-13 23:46 - INFO - 	 Val. Loss: 0.105
2024-10-13 23:46 - INFO - 	 ROC-AUC: 0.965
2024-10-13 23:46 - INFO - 	 PR-AUC: 0.694
2024-10-13 23:46 - INFO - 	 Recall for 0.4 precision: 0.924
2024-10-13 23:46 - INFO - 	 Best Val. Loss: 0.105
2024-10-13 23:46 - INFO - 	 Best ROC-AUC: 0.965
2024-10-13 23:46 - INFO - 	 Best PR-AUC: 0.694
2024-10-13 23:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-13 23:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.717
2024-10-13 23:46 - INFO - 	 Best Recall for 0.4 precision: 0.925
2024-10-13 23:46 - INFO - ---------------------------------------------
2024-10-13 23:47 - INFO - ---------------------------------------------
2024-10-13 23:47 - INFO - Epoch: 05 | Time: 0m 35s
2024-10-13 23:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96666
2024-10-13 23:47 - INFO - 	 Train Loss: 0.117
2024-10-13 23:47 - INFO - 	 Val. Loss: 0.106
2024-10-13 23:47 - INFO - 	 ROC-AUC: 0.967
2024-10-13 23:47 - INFO - 	 PR-AUC: 0.703
2024-10-13 23:47 - INFO - 	 Recall for 0.4 precision: 0.920
2024-10-13 23:47 - INFO - 	 Best Val. Loss: 0.105
2024-10-13 23:47 - INFO - 	 Best ROC-AUC: 0.967
2024-10-13 23:47 - INFO - 	 Best PR-AUC: 0.703
2024-10-13 23:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 23:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.711
2024-10-13 23:47 - INFO - 	 Best Recall for 0.4 precision: 0.925
2024-10-13 23:47 - INFO - ---------------------------------------------
2024-10-13 23:48 - INFO - ---------------------------------------------
2024-10-13 23:48 - INFO - Epoch: 06 | Time: 0m 40s
2024-10-13 23:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96813
2024-10-13 23:48 - INFO - 	 Train Loss: 0.114
2024-10-13 23:48 - INFO - 	 Val. Loss: 0.099
2024-10-13 23:48 - INFO - 	 ROC-AUC: 0.968
2024-10-13 23:48 - INFO - 	 PR-AUC: 0.739
2024-10-13 23:48 - INFO - 	 Recall for 0.4 precision: 0.936
2024-10-13 23:48 - INFO - 	 Best Val. Loss: 0.099
2024-10-13 23:48 - INFO - 	 Best ROC-AUC: 0.968
2024-10-13 23:48 - INFO - 	 Best PR-AUC: 0.739
2024-10-13 23:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 23:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.710
2024-10-13 23:48 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-13 23:48 - INFO - ---------------------------------------------
2024-10-13 23:48 - INFO - ---------------------------------------------
2024-10-13 23:48 - INFO - Epoch: 07 | Time: 0m 47s
2024-10-13 23:48 - INFO - 	 Train Loss: 0.112
2024-10-13 23:48 - INFO - 	 Val. Loss: 0.104
2024-10-13 23:48 - INFO - 	 ROC-AUC: 0.968
2024-10-13 23:48 - INFO - 	 PR-AUC: 0.726
2024-10-13 23:48 - INFO - 	 Recall for 0.4 precision: 0.930
2024-10-13 23:48 - INFO - 	 Best Val. Loss: 0.099
2024-10-13 23:48 - INFO - 	 Best ROC-AUC: 0.968
2024-10-13 23:48 - INFO - 	 Best PR-AUC: 0.739
2024-10-13 23:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 23:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.710
2024-10-13 23:48 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-13 23:48 - INFO - ---------------------------------------------
2024-10-13 23:49 - INFO - ---------------------------------------------
2024-10-13 23:49 - INFO - Epoch: 08 | Time: 1m 2s
2024-10-13 23:49 - INFO - 	 Train Loss: 0.108
2024-10-13 23:49 - INFO - 	 Val. Loss: 0.108
2024-10-13 23:49 - INFO - 	 ROC-AUC: 0.965
2024-10-13 23:49 - INFO - 	 PR-AUC: 0.667
2024-10-13 23:49 - INFO - 	 Recall for 0.4 precision: 0.933
2024-10-13 23:49 - INFO - 	 Best Val. Loss: 0.099
2024-10-13 23:49 - INFO - 	 Best ROC-AUC: 0.968
2024-10-13 23:49 - INFO - 	 Best PR-AUC: 0.739
2024-10-13 23:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 23:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.710
2024-10-13 23:49 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-13 23:49 - INFO - ---------------------------------------------
2024-10-13 23:51 - INFO - ---------------------------------------------
2024-10-13 23:51 - INFO - Epoch: 09 | Time: 1m 6s
2024-10-13 23:51 - INFO - 	 Train Loss: 0.108
2024-10-13 23:51 - INFO - 	 Val. Loss: 0.099
2024-10-13 23:51 - INFO - 	 ROC-AUC: 0.968
2024-10-13 23:51 - INFO - 	 PR-AUC: 0.741
2024-10-13 23:51 - INFO - 	 Recall for 0.4 precision: 0.950
2024-10-13 23:51 - INFO - 	 Best Val. Loss: 0.099
2024-10-13 23:51 - INFO - 	 Best ROC-AUC: 0.968
2024-10-13 23:51 - INFO - 	 Best PR-AUC: 0.741
2024-10-13 23:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-13 23:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.714
2024-10-13 23:51 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-13 23:51 - INFO - ---------------------------------------------
2024-10-13 23:52 - INFO - ---------------------------------------------
2024-10-13 23:52 - INFO - Epoch: 10 | Time: 1m 0s
2024-10-13 23:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97138
2024-10-13 23:52 - INFO - 	 Train Loss: 0.107
2024-10-13 23:52 - INFO - 	 Val. Loss: 0.096
2024-10-13 23:52 - INFO - 	 ROC-AUC: 0.971
2024-10-13 23:52 - INFO - 	 PR-AUC: 0.760
2024-10-13 23:52 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-13 23:52 - INFO - 	 Best Val. Loss: 0.096
2024-10-13 23:52 - INFO - 	 Best ROC-AUC: 0.971
2024-10-13 23:52 - INFO - 	 Best PR-AUC: 0.760
2024-10-13 23:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-13 23:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.737
2024-10-13 23:52 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-13 23:52 - INFO - ---------------------------------------------
2024-10-13 23:54 - INFO - Fit the preprocessing pipeline
2024-10-13 23:54 - INFO - Training using device: cuda
2024-10-13 23:54 - INFO - Creating generators
2024-10-13 23:54 - INFO - The model has 651,257 trainable parameters
2024-10-13 23:54 - INFO - * Model:
2024-10-13 23:54 - INFO - * -----------
2024-10-13 23:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-13 23:54 - INFO - * -----------
2024-10-13 23:54 - INFO - Evaluating model based on: rocauc
2024-10-13 23:54 - INFO - Training..

2024-10-13 23:55 - INFO - ---------------------------------------------
2024-10-13 23:55 - INFO - Epoch: 01 | Time: 0m 53s
2024-10-13 23:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92244
2024-10-13 23:55 - INFO - 	 Train Loss: 0.218
2024-10-13 23:55 - INFO - 	 Val. Loss: 0.188
2024-10-13 23:55 - INFO - 	 ROC-AUC: 0.922
2024-10-13 23:55 - INFO - 	 PR-AUC: 0.501
2024-10-13 23:55 - INFO - 	 Recall for 0.4 precision: 0.701
2024-10-13 23:55 - INFO - 	 Best Val. Loss: 0.188
2024-10-13 23:55 - INFO - 	 Best ROC-AUC: 0.922
2024-10-13 23:55 - INFO - 	 Best PR-AUC: 0.501
2024-10-13 23:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.920
2024-10-13 23:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.506
2024-10-13 23:55 - INFO - 	 Best Recall for 0.4 precision: 0.701
2024-10-13 23:55 - INFO - ---------------------------------------------
2024-10-13 23:56 - INFO - ---------------------------------------------
2024-10-13 23:56 - INFO - Epoch: 02 | Time: 0m 53s
2024-10-13 23:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95448
2024-10-13 23:56 - INFO - 	 Train Loss: 0.139
2024-10-13 23:56 - INFO - 	 Val. Loss: 0.126
2024-10-13 23:56 - INFO - 	 ROC-AUC: 0.954
2024-10-13 23:56 - INFO - 	 PR-AUC: 0.615
2024-10-13 23:56 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-13 23:56 - INFO - 	 Best Val. Loss: 0.126
2024-10-13 23:56 - INFO - 	 Best ROC-AUC: 0.954
2024-10-13 23:56 - INFO - 	 Best PR-AUC: 0.615
2024-10-13 23:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-10-13 23:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.610
2024-10-13 23:56 - INFO - 	 Best Recall for 0.4 precision: 0.701
2024-10-13 23:56 - INFO - ---------------------------------------------
2024-10-13 23:57 - INFO - ---------------------------------------------
2024-10-13 23:57 - INFO - Epoch: 03 | Time: 0m 55s
2024-10-13 23:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96499
2024-10-13 23:57 - INFO - 	 Train Loss: 0.125
2024-10-13 23:57 - INFO - 	 Val. Loss: 0.106
2024-10-13 23:57 - INFO - 	 ROC-AUC: 0.965
2024-10-13 23:57 - INFO - 	 PR-AUC: 0.671
2024-10-13 23:57 - INFO - 	 Recall for 0.4 precision: 0.927
2024-10-13 23:57 - INFO - 	 Best Val. Loss: 0.106
2024-10-13 23:57 - INFO - 	 Best ROC-AUC: 0.965
2024-10-13 23:57 - INFO - 	 Best PR-AUC: 0.671
2024-10-13 23:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-13 23:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.698
2024-10-13 23:57 - INFO - 	 Best Recall for 0.4 precision: 0.927
2024-10-13 23:57 - INFO - ---------------------------------------------
2024-10-13 23:57 - INFO - ---------------------------------------------
2024-10-13 23:57 - INFO - Epoch: 04 | Time: 0m 48s
2024-10-13 23:57 - INFO - 	 Train Loss: 0.119
2024-10-13 23:57 - INFO - 	 Val. Loss: 0.112
2024-10-13 23:57 - INFO - 	 ROC-AUC: 0.961
2024-10-13 23:57 - INFO - 	 PR-AUC: 0.679
2024-10-13 23:57 - INFO - 	 Recall for 0.4 precision: 0.914
2024-10-13 23:57 - INFO - 	 Best Val. Loss: 0.106
2024-10-13 23:57 - INFO - 	 Best ROC-AUC: 0.965
2024-10-13 23:57 - INFO - 	 Best PR-AUC: 0.679
2024-10-13 23:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-13 23:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.672
2024-10-13 23:57 - INFO - 	 Best Recall for 0.4 precision: 0.927
2024-10-13 23:57 - INFO - ---------------------------------------------
2024-10-13 23:58 - INFO - ---------------------------------------------
2024-10-13 23:58 - INFO - Epoch: 05 | Time: 0m 48s
2024-10-13 23:58 - INFO - 	 Train Loss: 0.115
2024-10-13 23:58 - INFO - 	 Val. Loss: 0.105
2024-10-13 23:58 - INFO - 	 ROC-AUC: 0.965
2024-10-13 23:58 - INFO - 	 PR-AUC: 0.706
2024-10-13 23:58 - INFO - 	 Recall for 0.4 precision: 0.926
2024-10-13 23:58 - INFO - 	 Best Val. Loss: 0.105
2024-10-13 23:58 - INFO - 	 Best ROC-AUC: 0.965
2024-10-13 23:58 - INFO - 	 Best PR-AUC: 0.706
2024-10-13 23:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-13 23:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.719
2024-10-13 23:58 - INFO - 	 Best Recall for 0.4 precision: 0.927
2024-10-13 23:58 - INFO - ---------------------------------------------
2024-10-13 23:59 - INFO - ---------------------------------------------
2024-10-13 23:59 - INFO - Epoch: 06 | Time: 1m 1s
2024-10-13 23:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96781
2024-10-13 23:59 - INFO - 	 Train Loss: 0.113
2024-10-13 23:59 - INFO - 	 Val. Loss: 0.101
2024-10-13 23:59 - INFO - 	 ROC-AUC: 0.968
2024-10-13 23:59 - INFO - 	 PR-AUC: 0.722
2024-10-13 23:59 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-13 23:59 - INFO - 	 Best Val. Loss: 0.101
2024-10-13 23:59 - INFO - 	 Best ROC-AUC: 0.968
2024-10-13 23:59 - INFO - 	 Best PR-AUC: 0.722
2024-10-13 23:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-13 23:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.735
2024-10-13 23:59 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-13 23:59 - INFO - ---------------------------------------------
2024-10-14 00:00 - INFO - ---------------------------------------------
2024-10-14 00:00 - INFO - Epoch: 07 | Time: 1m 4s
2024-10-14 00:00 - INFO - 	 Train Loss: 0.109
2024-10-14 00:00 - INFO - 	 Val. Loss: 0.102
2024-10-14 00:00 - INFO - 	 ROC-AUC: 0.966
2024-10-14 00:00 - INFO - 	 PR-AUC: 0.716
2024-10-14 00:00 - INFO - 	 Recall for 0.4 precision: 0.929
2024-10-14 00:00 - INFO - 	 Best Val. Loss: 0.101
2024-10-14 00:00 - INFO - 	 Best ROC-AUC: 0.968
2024-10-14 00:00 - INFO - 	 Best PR-AUC: 0.722
2024-10-14 00:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 00:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.735
2024-10-14 00:00 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-14 00:00 - INFO - ---------------------------------------------
2024-10-14 00:02 - INFO - ---------------------------------------------
2024-10-14 00:02 - INFO - Epoch: 08 | Time: 1m 15s
2024-10-14 00:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97017
2024-10-14 00:02 - INFO - 	 Train Loss: 0.108
2024-10-14 00:02 - INFO - 	 Val. Loss: 0.098
2024-10-14 00:02 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:02 - INFO - 	 PR-AUC: 0.726
2024-10-14 00:02 - INFO - 	 Recall for 0.4 precision: 0.946
2024-10-14 00:02 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 00:02 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:02 - INFO - 	 Best PR-AUC: 0.726
2024-10-14 00:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-14 00:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-14 00:02 - INFO - 	 Best Recall for 0.4 precision: 0.946
2024-10-14 00:02 - INFO - ---------------------------------------------
2024-10-14 00:03 - INFO - ---------------------------------------------
2024-10-14 00:03 - INFO - Epoch: 09 | Time: 1m 18s
2024-10-14 00:03 - INFO - 	 Train Loss: 0.107
2024-10-14 00:03 - INFO - 	 Val. Loss: 0.099
2024-10-14 00:03 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:03 - INFO - 	 PR-AUC: 0.716
2024-10-14 00:03 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-14 00:03 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 00:03 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:03 - INFO - 	 Best PR-AUC: 0.726
2024-10-14 00:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-14 00:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-14 00:03 - INFO - 	 Best Recall for 0.4 precision: 0.946
2024-10-14 00:03 - INFO - ---------------------------------------------
2024-10-14 00:04 - INFO - ---------------------------------------------
2024-10-14 00:04 - INFO - Epoch: 10 | Time: 0m 57s
2024-10-14 00:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97032
2024-10-14 00:04 - INFO - 	 Train Loss: 0.106
2024-10-14 00:04 - INFO - 	 Val. Loss: 0.098
2024-10-14 00:04 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:04 - INFO - 	 PR-AUC: 0.726
2024-10-14 00:04 - INFO - 	 Recall for 0.4 precision: 0.947
2024-10-14 00:04 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 00:04 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:04 - INFO - 	 Best PR-AUC: 0.726
2024-10-14 00:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 00:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-10-14 00:04 - INFO - 	 Best Recall for 0.4 precision: 0.947
2024-10-14 00:04 - INFO - ---------------------------------------------
2024-10-14 00:06 - INFO - Fit the preprocessing pipeline
2024-10-14 00:06 - INFO - Training using device: cuda
2024-10-14 00:06 - INFO - Creating generators
2024-10-14 00:06 - INFO - The model has 651,257 trainable parameters
2024-10-14 00:06 - INFO - * Model:
2024-10-14 00:06 - INFO - * -----------
2024-10-14 00:06 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 00:06 - INFO - * -----------
2024-10-14 00:06 - INFO - Evaluating model based on: rocauc
2024-10-14 00:06 - INFO - Training..

2024-10-14 00:07 - INFO - ---------------------------------------------
2024-10-14 00:07 - INFO - Epoch: 01 | Time: 0m 44s
2024-10-14 00:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92181
2024-10-14 00:07 - INFO - 	 Train Loss: 0.228
2024-10-14 00:07 - INFO - 	 Val. Loss: 0.182
2024-10-14 00:07 - INFO - 	 ROC-AUC: 0.922
2024-10-14 00:07 - INFO - 	 PR-AUC: 0.454
2024-10-14 00:07 - INFO - 	 Recall for 0.4 precision: 0.697
2024-10-14 00:07 - INFO - 	 Best Val. Loss: 0.182
2024-10-14 00:07 - INFO - 	 Best ROC-AUC: 0.922
2024-10-14 00:07 - INFO - 	 Best PR-AUC: 0.454
2024-10-14 00:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.915
2024-10-14 00:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.472
2024-10-14 00:07 - INFO - 	 Best Recall for 0.4 precision: 0.697
2024-10-14 00:07 - INFO - ---------------------------------------------
2024-10-14 00:08 - INFO - ---------------------------------------------
2024-10-14 00:08 - INFO - Epoch: 02 | Time: 0m 44s
2024-10-14 00:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95114
2024-10-14 00:08 - INFO - 	 Train Loss: 0.143
2024-10-14 00:08 - INFO - 	 Val. Loss: 0.124
2024-10-14 00:08 - INFO - 	 ROC-AUC: 0.951
2024-10-14 00:08 - INFO - 	 PR-AUC: 0.603
2024-10-14 00:08 - INFO - 	 Recall for 0.4 precision: 0.852
2024-10-14 00:08 - INFO - 	 Best Val. Loss: 0.124
2024-10-14 00:08 - INFO - 	 Best ROC-AUC: 0.951
2024-10-14 00:08 - INFO - 	 Best PR-AUC: 0.603
2024-10-14 00:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-10-14 00:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.623
2024-10-14 00:08 - INFO - 	 Best Recall for 0.4 precision: 0.852
2024-10-14 00:08 - INFO - ---------------------------------------------
2024-10-14 00:08 - INFO - ---------------------------------------------
2024-10-14 00:08 - INFO - Epoch: 03 | Time: 0m 44s
2024-10-14 00:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9582
2024-10-14 00:08 - INFO - 	 Train Loss: 0.127
2024-10-14 00:08 - INFO - 	 Val. Loss: 0.119
2024-10-14 00:08 - INFO - 	 ROC-AUC: 0.958
2024-10-14 00:08 - INFO - 	 PR-AUC: 0.661
2024-10-14 00:08 - INFO - 	 Recall for 0.4 precision: 0.895
2024-10-14 00:08 - INFO - 	 Best Val. Loss: 0.119
2024-10-14 00:08 - INFO - 	 Best ROC-AUC: 0.958
2024-10-14 00:08 - INFO - 	 Best PR-AUC: 0.661
2024-10-14 00:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-14 00:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.676
2024-10-14 00:08 - INFO - 	 Best Recall for 0.4 precision: 0.895
2024-10-14 00:08 - INFO - ---------------------------------------------
2024-10-14 00:09 - INFO - ---------------------------------------------
2024-10-14 00:09 - INFO - Epoch: 04 | Time: 0m 44s
2024-10-14 00:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96754
2024-10-14 00:09 - INFO - 	 Train Loss: 0.120
2024-10-14 00:09 - INFO - 	 Val. Loss: 0.107
2024-10-14 00:09 - INFO - 	 ROC-AUC: 0.968
2024-10-14 00:09 - INFO - 	 PR-AUC: 0.727
2024-10-14 00:09 - INFO - 	 Recall for 0.4 precision: 0.933
2024-10-14 00:09 - INFO - 	 Best Val. Loss: 0.107
2024-10-14 00:09 - INFO - 	 Best ROC-AUC: 0.968
2024-10-14 00:09 - INFO - 	 Best PR-AUC: 0.727
2024-10-14 00:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-14 00:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.705
2024-10-14 00:09 - INFO - 	 Best Recall for 0.4 precision: 0.933
2024-10-14 00:09 - INFO - ---------------------------------------------
2024-10-14 00:10 - INFO - ---------------------------------------------
2024-10-14 00:10 - INFO - Epoch: 05 | Time: 0m 44s
2024-10-14 00:10 - INFO - 	 Train Loss: 0.116
2024-10-14 00:10 - INFO - 	 Val. Loss: 0.105
2024-10-14 00:10 - INFO - 	 ROC-AUC: 0.965
2024-10-14 00:10 - INFO - 	 PR-AUC: 0.697
2024-10-14 00:10 - INFO - 	 Recall for 0.4 precision: 0.924
2024-10-14 00:10 - INFO - 	 Best Val. Loss: 0.105
2024-10-14 00:10 - INFO - 	 Best ROC-AUC: 0.968
2024-10-14 00:10 - INFO - 	 Best PR-AUC: 0.727
2024-10-14 00:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-14 00:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.705
2024-10-14 00:10 - INFO - 	 Best Recall for 0.4 precision: 0.933
2024-10-14 00:10 - INFO - ---------------------------------------------
2024-10-14 00:10 - INFO - ---------------------------------------------
2024-10-14 00:10 - INFO - Epoch: 06 | Time: 0m 43s
2024-10-14 00:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96762
2024-10-14 00:10 - INFO - 	 Train Loss: 0.113
2024-10-14 00:10 - INFO - 	 Val. Loss: 0.104
2024-10-14 00:10 - INFO - 	 ROC-AUC: 0.968
2024-10-14 00:10 - INFO - 	 PR-AUC: 0.739
2024-10-14 00:10 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-14 00:10 - INFO - 	 Best Val. Loss: 0.104
2024-10-14 00:10 - INFO - 	 Best ROC-AUC: 0.968
2024-10-14 00:10 - INFO - 	 Best PR-AUC: 0.739
2024-10-14 00:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 00:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-14 00:10 - INFO - 	 Best Recall for 0.4 precision: 0.934
2024-10-14 00:10 - INFO - ---------------------------------------------
2024-10-14 00:11 - INFO - ---------------------------------------------
2024-10-14 00:11 - INFO - Epoch: 07 | Time: 0m 38s
2024-10-14 00:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96967
2024-10-14 00:11 - INFO - 	 Train Loss: 0.110
2024-10-14 00:11 - INFO - 	 Val. Loss: 0.100
2024-10-14 00:11 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:11 - INFO - 	 PR-AUC: 0.757
2024-10-14 00:11 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-14 00:11 - INFO - 	 Best Val. Loss: 0.100
2024-10-14 00:11 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:11 - INFO - 	 Best PR-AUC: 0.757
2024-10-14 00:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-14 00:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-14 00:11 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-14 00:11 - INFO - ---------------------------------------------
2024-10-14 00:12 - INFO - ---------------------------------------------
2024-10-14 00:12 - INFO - Epoch: 08 | Time: 0m 44s
2024-10-14 00:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97163
2024-10-14 00:12 - INFO - 	 Train Loss: 0.109
2024-10-14 00:12 - INFO - 	 Val. Loss: 0.097
2024-10-14 00:12 - INFO - 	 ROC-AUC: 0.972
2024-10-14 00:12 - INFO - 	 PR-AUC: 0.737
2024-10-14 00:12 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-14 00:12 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 00:12 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 00:12 - INFO - 	 Best PR-AUC: 0.757
2024-10-14 00:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 00:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-14 00:12 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-14 00:12 - INFO - ---------------------------------------------
2024-10-14 00:13 - INFO - ---------------------------------------------
2024-10-14 00:13 - INFO - Epoch: 09 | Time: 0m 43s
2024-10-14 00:13 - INFO - 	 Train Loss: 0.107
2024-10-14 00:13 - INFO - 	 Val. Loss: 0.100
2024-10-14 00:13 - INFO - 	 ROC-AUC: 0.968
2024-10-14 00:13 - INFO - 	 PR-AUC: 0.711
2024-10-14 00:13 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-14 00:13 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 00:13 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 00:13 - INFO - 	 Best PR-AUC: 0.757
2024-10-14 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-14 00:13 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-14 00:13 - INFO - ---------------------------------------------
2024-10-14 00:13 - INFO - ---------------------------------------------
2024-10-14 00:13 - INFO - Epoch: 10 | Time: 0m 44s
2024-10-14 00:13 - INFO - 	 Train Loss: 0.106
2024-10-14 00:13 - INFO - 	 Val. Loss: 0.095
2024-10-14 00:13 - INFO - 	 ROC-AUC: 0.971
2024-10-14 00:13 - INFO - 	 PR-AUC: 0.751
2024-10-14 00:13 - INFO - 	 Recall for 0.4 precision: 0.941
2024-10-14 00:13 - INFO - 	 Best Val. Loss: 0.095
2024-10-14 00:13 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 00:13 - INFO - 	 Best PR-AUC: 0.757
2024-10-14 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-14 00:13 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-14 00:13 - INFO - ---------------------------------------------
2024-10-14 00:16 - INFO - Fit the preprocessing pipeline
2024-10-14 00:16 - INFO - Training using device: cuda
2024-10-14 00:16 - INFO - Creating generators
2024-10-14 00:16 - INFO - The model has 651,257 trainable parameters
2024-10-14 00:16 - INFO - * Model:
2024-10-14 00:16 - INFO - * -----------
2024-10-14 00:16 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 00:16 - INFO - * -----------
2024-10-14 00:16 - INFO - Evaluating model based on: rocauc
2024-10-14 00:16 - INFO - Training..

2024-10-14 00:16 - INFO - ---------------------------------------------
2024-10-14 00:16 - INFO - Epoch: 01 | Time: 0m 44s
2024-10-14 00:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92936
2024-10-14 00:16 - INFO - 	 Train Loss: 0.225
2024-10-14 00:16 - INFO - 	 Val. Loss: 0.149
2024-10-14 00:16 - INFO - 	 ROC-AUC: 0.929
2024-10-14 00:16 - INFO - 	 PR-AUC: 0.455
2024-10-14 00:16 - INFO - 	 Recall for 0.4 precision: 0.732
2024-10-14 00:16 - INFO - 	 Best Val. Loss: 0.149
2024-10-14 00:16 - INFO - 	 Best ROC-AUC: 0.929
2024-10-14 00:16 - INFO - 	 Best PR-AUC: 0.455
2024-10-14 00:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-10-14 00:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.484
2024-10-14 00:16 - INFO - 	 Best Recall for 0.4 precision: 0.732
2024-10-14 00:16 - INFO - ---------------------------------------------
2024-10-14 00:17 - INFO - ---------------------------------------------
2024-10-14 00:17 - INFO - Epoch: 02 | Time: 0m 44s
2024-10-14 00:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94887
2024-10-14 00:17 - INFO - 	 Train Loss: 0.139
2024-10-14 00:17 - INFO - 	 Val. Loss: 0.124
2024-10-14 00:17 - INFO - 	 ROC-AUC: 0.949
2024-10-14 00:17 - INFO - 	 PR-AUC: 0.597
2024-10-14 00:17 - INFO - 	 Recall for 0.4 precision: 0.860
2024-10-14 00:17 - INFO - 	 Best Val. Loss: 0.124
2024-10-14 00:17 - INFO - 	 Best ROC-AUC: 0.949
2024-10-14 00:17 - INFO - 	 Best PR-AUC: 0.597
2024-10-14 00:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-10-14 00:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.588
2024-10-14 00:17 - INFO - 	 Best Recall for 0.4 precision: 0.860
2024-10-14 00:17 - INFO - ---------------------------------------------
2024-10-14 00:18 - INFO - ---------------------------------------------
2024-10-14 00:18 - INFO - Epoch: 03 | Time: 0m 44s
2024-10-14 00:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95959
2024-10-14 00:18 - INFO - 	 Train Loss: 0.125
2024-10-14 00:18 - INFO - 	 Val. Loss: 0.117
2024-10-14 00:18 - INFO - 	 ROC-AUC: 0.960
2024-10-14 00:18 - INFO - 	 PR-AUC: 0.675
2024-10-14 00:18 - INFO - 	 Recall for 0.4 precision: 0.915
2024-10-14 00:18 - INFO - 	 Best Val. Loss: 0.117
2024-10-14 00:18 - INFO - 	 Best ROC-AUC: 0.960
2024-10-14 00:18 - INFO - 	 Best PR-AUC: 0.675
2024-10-14 00:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-14 00:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.667
2024-10-14 00:18 - INFO - 	 Best Recall for 0.4 precision: 0.915
2024-10-14 00:18 - INFO - ---------------------------------------------
2024-10-14 00:19 - INFO - ---------------------------------------------
2024-10-14 00:19 - INFO - Epoch: 04 | Time: 0m 44s
2024-10-14 00:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96763
2024-10-14 00:19 - INFO - 	 Train Loss: 0.120
2024-10-14 00:19 - INFO - 	 Val. Loss: 0.102
2024-10-14 00:19 - INFO - 	 ROC-AUC: 0.968
2024-10-14 00:19 - INFO - 	 PR-AUC: 0.717
2024-10-14 00:19 - INFO - 	 Recall for 0.4 precision: 0.930
2024-10-14 00:19 - INFO - 	 Best Val. Loss: 0.102
2024-10-14 00:19 - INFO - 	 Best ROC-AUC: 0.968
2024-10-14 00:19 - INFO - 	 Best PR-AUC: 0.717
2024-10-14 00:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-14 00:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.717
2024-10-14 00:19 - INFO - 	 Best Recall for 0.4 precision: 0.930
2024-10-14 00:19 - INFO - ---------------------------------------------
2024-10-14 00:19 - INFO - ---------------------------------------------
2024-10-14 00:19 - INFO - Epoch: 05 | Time: 0m 44s
2024-10-14 00:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96763
2024-10-14 00:19 - INFO - 	 Train Loss: 0.114
2024-10-14 00:19 - INFO - 	 Val. Loss: 0.102
2024-10-14 00:19 - INFO - 	 ROC-AUC: 0.968
2024-10-14 00:19 - INFO - 	 PR-AUC: 0.729
2024-10-14 00:19 - INFO - 	 Recall for 0.4 precision: 0.929
2024-10-14 00:19 - INFO - 	 Best Val. Loss: 0.102
2024-10-14 00:19 - INFO - 	 Best ROC-AUC: 0.968
2024-10-14 00:19 - INFO - 	 Best PR-AUC: 0.729
2024-10-14 00:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-14 00:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.736
2024-10-14 00:19 - INFO - 	 Best Recall for 0.4 precision: 0.930
2024-10-14 00:19 - INFO - ---------------------------------------------
2024-10-14 00:20 - INFO - ---------------------------------------------
2024-10-14 00:20 - INFO - Epoch: 06 | Time: 0m 44s
2024-10-14 00:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96957
2024-10-14 00:20 - INFO - 	 Train Loss: 0.111
2024-10-14 00:20 - INFO - 	 Val. Loss: 0.097
2024-10-14 00:20 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:20 - INFO - 	 PR-AUC: 0.738
2024-10-14 00:20 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-14 00:20 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 00:20 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:20 - INFO - 	 Best PR-AUC: 0.738
2024-10-14 00:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 00:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-10-14 00:20 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-14 00:20 - INFO - ---------------------------------------------
2024-10-14 00:21 - INFO - ---------------------------------------------
2024-10-14 00:21 - INFO - Epoch: 07 | Time: 0m 43s
2024-10-14 00:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96989
2024-10-14 00:21 - INFO - 	 Train Loss: 0.110
2024-10-14 00:21 - INFO - 	 Val. Loss: 0.098
2024-10-14 00:21 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:21 - INFO - 	 PR-AUC: 0.733
2024-10-14 00:21 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-14 00:21 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 00:21 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:21 - INFO - 	 Best PR-AUC: 0.738
2024-10-14 00:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-10-14 00:21 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-14 00:21 - INFO - ---------------------------------------------
2024-10-14 00:22 - INFO - ---------------------------------------------
2024-10-14 00:22 - INFO - Epoch: 08 | Time: 0m 43s
2024-10-14 00:22 - INFO - 	 Train Loss: 0.107
2024-10-14 00:22 - INFO - 	 Val. Loss: 0.102
2024-10-14 00:22 - INFO - 	 ROC-AUC: 0.969
2024-10-14 00:22 - INFO - 	 PR-AUC: 0.728
2024-10-14 00:22 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-14 00:22 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 00:22 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:22 - INFO - 	 Best PR-AUC: 0.738
2024-10-14 00:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-10-14 00:22 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 00:22 - INFO - ---------------------------------------------
2024-10-14 00:22 - INFO - ---------------------------------------------
2024-10-14 00:22 - INFO - Epoch: 09 | Time: 0m 37s
2024-10-14 00:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96997
2024-10-14 00:22 - INFO - 	 Train Loss: 0.106
2024-10-14 00:22 - INFO - 	 Val. Loss: 0.096
2024-10-14 00:22 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:22 - INFO - 	 PR-AUC: 0.748
2024-10-14 00:22 - INFO - 	 Recall for 0.4 precision: 0.940
2024-10-14 00:22 - INFO - 	 Best Val. Loss: 0.096
2024-10-14 00:22 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:22 - INFO - 	 Best PR-AUC: 0.748
2024-10-14 00:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-10-14 00:22 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 00:22 - INFO - ---------------------------------------------
2024-10-14 00:23 - INFO - ---------------------------------------------
2024-10-14 00:23 - INFO - Epoch: 10 | Time: 0m 44s
2024-10-14 00:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97245
2024-10-14 00:23 - INFO - 	 Train Loss: 0.105
2024-10-14 00:23 - INFO - 	 Val. Loss: 0.095
2024-10-14 00:23 - INFO - 	 ROC-AUC: 0.972
2024-10-14 00:23 - INFO - 	 PR-AUC: 0.737
2024-10-14 00:23 - INFO - 	 Recall for 0.4 precision: 0.950
2024-10-14 00:23 - INFO - 	 Best Val. Loss: 0.095
2024-10-14 00:23 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 00:23 - INFO - 	 Best PR-AUC: 0.748
2024-10-14 00:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 00:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-10-14 00:23 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-14 00:23 - INFO - ---------------------------------------------
2024-10-14 00:25 - INFO - Fit the preprocessing pipeline
2024-10-14 00:25 - INFO - Training using device: cuda
2024-10-14 00:25 - INFO - Creating generators
2024-10-14 00:25 - INFO - The model has 651,257 trainable parameters
2024-10-14 00:25 - INFO - * Model:
2024-10-14 00:25 - INFO - * -----------
2024-10-14 00:25 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 00:25 - INFO - * -----------
2024-10-14 00:25 - INFO - Evaluating model based on: rocauc
2024-10-14 00:25 - INFO - Training..

2024-10-14 00:26 - INFO - ---------------------------------------------
2024-10-14 00:26 - INFO - Epoch: 01 | Time: 0m 44s
2024-10-14 00:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9168
2024-10-14 00:26 - INFO - 	 Train Loss: 0.232
2024-10-14 00:26 - INFO - 	 Val. Loss: 0.173
2024-10-14 00:26 - INFO - 	 ROC-AUC: 0.917
2024-10-14 00:26 - INFO - 	 PR-AUC: 0.450
2024-10-14 00:26 - INFO - 	 Recall for 0.4 precision: 0.726
2024-10-14 00:26 - INFO - 	 Best Val. Loss: 0.173
2024-10-14 00:26 - INFO - 	 Best ROC-AUC: 0.917
2024-10-14 00:26 - INFO - 	 Best PR-AUC: 0.450
2024-10-14 00:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-10-14 00:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.462
2024-10-14 00:26 - INFO - 	 Best Recall for 0.4 precision: 0.726
2024-10-14 00:26 - INFO - ---------------------------------------------
2024-10-14 00:27 - INFO - ---------------------------------------------
2024-10-14 00:27 - INFO - Epoch: 02 | Time: 0m 45s
2024-10-14 00:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95984
2024-10-14 00:27 - INFO - 	 Train Loss: 0.141
2024-10-14 00:27 - INFO - 	 Val. Loss: 0.116
2024-10-14 00:27 - INFO - 	 ROC-AUC: 0.960
2024-10-14 00:27 - INFO - 	 PR-AUC: 0.641
2024-10-14 00:27 - INFO - 	 Recall for 0.4 precision: 0.896
2024-10-14 00:27 - INFO - 	 Best Val. Loss: 0.116
2024-10-14 00:27 - INFO - 	 Best ROC-AUC: 0.960
2024-10-14 00:27 - INFO - 	 Best PR-AUC: 0.641
2024-10-14 00:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-14 00:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-10-14 00:27 - INFO - 	 Best Recall for 0.4 precision: 0.896
2024-10-14 00:27 - INFO - ---------------------------------------------
2024-10-14 00:27 - INFO - ---------------------------------------------
2024-10-14 00:27 - INFO - Epoch: 03 | Time: 0m 44s
2024-10-14 00:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9619
2024-10-14 00:27 - INFO - 	 Train Loss: 0.126
2024-10-14 00:27 - INFO - 	 Val. Loss: 0.109
2024-10-14 00:27 - INFO - 	 ROC-AUC: 0.962
2024-10-14 00:27 - INFO - 	 PR-AUC: 0.685
2024-10-14 00:27 - INFO - 	 Recall for 0.4 precision: 0.908
2024-10-14 00:27 - INFO - 	 Best Val. Loss: 0.109
2024-10-14 00:27 - INFO - 	 Best ROC-AUC: 0.962
2024-10-14 00:27 - INFO - 	 Best PR-AUC: 0.685
2024-10-14 00:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-14 00:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.681
2024-10-14 00:27 - INFO - 	 Best Recall for 0.4 precision: 0.908
2024-10-14 00:27 - INFO - ---------------------------------------------
2024-10-14 00:28 - INFO - ---------------------------------------------
2024-10-14 00:28 - INFO - Epoch: 04 | Time: 0m 44s
2024-10-14 00:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96475
2024-10-14 00:28 - INFO - 	 Train Loss: 0.120
2024-10-14 00:28 - INFO - 	 Val. Loss: 0.104
2024-10-14 00:28 - INFO - 	 ROC-AUC: 0.965
2024-10-14 00:28 - INFO - 	 PR-AUC: 0.705
2024-10-14 00:28 - INFO - 	 Recall for 0.4 precision: 0.916
2024-10-14 00:28 - INFO - 	 Best Val. Loss: 0.104
2024-10-14 00:28 - INFO - 	 Best ROC-AUC: 0.965
2024-10-14 00:28 - INFO - 	 Best PR-AUC: 0.705
2024-10-14 00:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-14 00:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.707
2024-10-14 00:28 - INFO - 	 Best Recall for 0.4 precision: 0.916
2024-10-14 00:28 - INFO - ---------------------------------------------
2024-10-14 00:29 - INFO - ---------------------------------------------
2024-10-14 00:29 - INFO - Epoch: 05 | Time: 0m 44s
2024-10-14 00:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96538
2024-10-14 00:29 - INFO - 	 Train Loss: 0.116
2024-10-14 00:29 - INFO - 	 Val. Loss: 0.107
2024-10-14 00:29 - INFO - 	 ROC-AUC: 0.965
2024-10-14 00:29 - INFO - 	 PR-AUC: 0.699
2024-10-14 00:29 - INFO - 	 Recall for 0.4 precision: 0.920
2024-10-14 00:29 - INFO - 	 Best Val. Loss: 0.104
2024-10-14 00:29 - INFO - 	 Best ROC-AUC: 0.965
2024-10-14 00:29 - INFO - 	 Best PR-AUC: 0.705
2024-10-14 00:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-14 00:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.707
2024-10-14 00:29 - INFO - 	 Best Recall for 0.4 precision: 0.920
2024-10-14 00:29 - INFO - ---------------------------------------------
2024-10-14 00:30 - INFO - ---------------------------------------------
2024-10-14 00:30 - INFO - Epoch: 06 | Time: 0m 44s
2024-10-14 00:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96865
2024-10-14 00:30 - INFO - 	 Train Loss: 0.114
2024-10-14 00:30 - INFO - 	 Val. Loss: 0.099
2024-10-14 00:30 - INFO - 	 ROC-AUC: 0.969
2024-10-14 00:30 - INFO - 	 PR-AUC: 0.733
2024-10-14 00:30 - INFO - 	 Recall for 0.4 precision: 0.940
2024-10-14 00:30 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 00:30 - INFO - 	 Best ROC-AUC: 0.969
2024-10-14 00:30 - INFO - 	 Best PR-AUC: 0.733
2024-10-14 00:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.745
2024-10-14 00:30 - INFO - 	 Best Recall for 0.4 precision: 0.940
2024-10-14 00:30 - INFO - ---------------------------------------------
2024-10-14 00:30 - INFO - ---------------------------------------------
2024-10-14 00:30 - INFO - Epoch: 07 | Time: 0m 44s
2024-10-14 00:30 - INFO - 	 Train Loss: 0.111
2024-10-14 00:30 - INFO - 	 Val. Loss: 0.100
2024-10-14 00:30 - INFO - 	 ROC-AUC: 0.968
2024-10-14 00:30 - INFO - 	 PR-AUC: 0.726
2024-10-14 00:30 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-14 00:30 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 00:30 - INFO - 	 Best ROC-AUC: 0.969
2024-10-14 00:30 - INFO - 	 Best PR-AUC: 0.733
2024-10-14 00:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.745
2024-10-14 00:30 - INFO - 	 Best Recall for 0.4 precision: 0.940
2024-10-14 00:30 - INFO - ---------------------------------------------
2024-10-14 00:31 - INFO - ---------------------------------------------
2024-10-14 00:31 - INFO - Epoch: 08 | Time: 0m 43s
2024-10-14 00:31 - INFO - 	 Train Loss: 0.109
2024-10-14 00:31 - INFO - 	 Val. Loss: 0.102
2024-10-14 00:31 - INFO - 	 ROC-AUC: 0.967
2024-10-14 00:31 - INFO - 	 PR-AUC: 0.724
2024-10-14 00:31 - INFO - 	 Recall for 0.4 precision: 0.925
2024-10-14 00:31 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 00:31 - INFO - 	 Best ROC-AUC: 0.969
2024-10-14 00:31 - INFO - 	 Best PR-AUC: 0.733
2024-10-14 00:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.745
2024-10-14 00:31 - INFO - 	 Best Recall for 0.4 precision: 0.940
2024-10-14 00:31 - INFO - ---------------------------------------------
2024-10-14 00:32 - INFO - ---------------------------------------------
2024-10-14 00:32 - INFO - Epoch: 09 | Time: 0m 43s
2024-10-14 00:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97055
2024-10-14 00:32 - INFO - 	 Train Loss: 0.108
2024-10-14 00:32 - INFO - 	 Val. Loss: 0.100
2024-10-14 00:32 - INFO - 	 ROC-AUC: 0.971
2024-10-14 00:32 - INFO - 	 PR-AUC: 0.713
2024-10-14 00:32 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-14 00:32 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 00:32 - INFO - 	 Best ROC-AUC: 0.971
2024-10-14 00:32 - INFO - 	 Best PR-AUC: 0.733
2024-10-14 00:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.745
2024-10-14 00:32 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 00:32 - INFO - ---------------------------------------------
2024-10-14 00:33 - INFO - ---------------------------------------------
2024-10-14 00:33 - INFO - Epoch: 10 | Time: 0m 42s
2024-10-14 00:33 - INFO - 	 Train Loss: 0.105
2024-10-14 00:33 - INFO - 	 Val. Loss: 0.102
2024-10-14 00:33 - INFO - 	 ROC-AUC: 0.968
2024-10-14 00:33 - INFO - 	 PR-AUC: 0.705
2024-10-14 00:33 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-14 00:33 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 00:33 - INFO - 	 Best ROC-AUC: 0.971
2024-10-14 00:33 - INFO - 	 Best PR-AUC: 0.733
2024-10-14 00:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.745
2024-10-14 00:33 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 00:33 - INFO - ---------------------------------------------
2024-10-14 00:35 - INFO - Fit the preprocessing pipeline
2024-10-14 00:35 - INFO - Training using device: cuda
2024-10-14 00:35 - INFO - Creating generators
2024-10-14 00:35 - INFO - The model has 651,257 trainable parameters
2024-10-14 00:35 - INFO - * Model:
2024-10-14 00:35 - INFO - * -----------
2024-10-14 00:35 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 00:35 - INFO - * -----------
2024-10-14 00:35 - INFO - Evaluating model based on: rocauc
2024-10-14 00:35 - INFO - Training..

2024-10-14 00:35 - INFO - ---------------------------------------------
2024-10-14 00:35 - INFO - Epoch: 01 | Time: 0m 48s
2024-10-14 00:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92557
2024-10-14 00:35 - INFO - 	 Train Loss: 0.225
2024-10-14 00:35 - INFO - 	 Val. Loss: 0.161
2024-10-14 00:35 - INFO - 	 ROC-AUC: 0.926
2024-10-14 00:35 - INFO - 	 PR-AUC: 0.434
2024-10-14 00:35 - INFO - 	 Recall for 0.4 precision: 0.717
2024-10-14 00:35 - INFO - 	 Best Val. Loss: 0.161
2024-10-14 00:35 - INFO - 	 Best ROC-AUC: 0.926
2024-10-14 00:35 - INFO - 	 Best PR-AUC: 0.434
2024-10-14 00:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-10-14 00:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.469
2024-10-14 00:35 - INFO - 	 Best Recall for 0.4 precision: 0.717
2024-10-14 00:35 - INFO - ---------------------------------------------
2024-10-14 00:36 - INFO - ---------------------------------------------
2024-10-14 00:36 - INFO - Epoch: 02 | Time: 0m 43s
2024-10-14 00:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95121
2024-10-14 00:36 - INFO - 	 Train Loss: 0.142
2024-10-14 00:36 - INFO - 	 Val. Loss: 0.127
2024-10-14 00:36 - INFO - 	 ROC-AUC: 0.951
2024-10-14 00:36 - INFO - 	 PR-AUC: 0.594
2024-10-14 00:36 - INFO - 	 Recall for 0.4 precision: 0.873
2024-10-14 00:36 - INFO - 	 Best Val. Loss: 0.127
2024-10-14 00:36 - INFO - 	 Best ROC-AUC: 0.951
2024-10-14 00:36 - INFO - 	 Best PR-AUC: 0.594
2024-10-14 00:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-10-14 00:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.606
2024-10-14 00:36 - INFO - 	 Best Recall for 0.4 precision: 0.873
2024-10-14 00:36 - INFO - ---------------------------------------------
2024-10-14 00:37 - INFO - ---------------------------------------------
2024-10-14 00:37 - INFO - Epoch: 03 | Time: 0m 44s
2024-10-14 00:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95921
2024-10-14 00:37 - INFO - 	 Train Loss: 0.128
2024-10-14 00:37 - INFO - 	 Val. Loss: 0.114
2024-10-14 00:37 - INFO - 	 ROC-AUC: 0.959
2024-10-14 00:37 - INFO - 	 PR-AUC: 0.639
2024-10-14 00:37 - INFO - 	 Recall for 0.4 precision: 0.918
2024-10-14 00:37 - INFO - 	 Best Val. Loss: 0.114
2024-10-14 00:37 - INFO - 	 Best ROC-AUC: 0.959
2024-10-14 00:37 - INFO - 	 Best PR-AUC: 0.639
2024-10-14 00:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-10-14 00:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.652
2024-10-14 00:37 - INFO - 	 Best Recall for 0.4 precision: 0.918
2024-10-14 00:37 - INFO - ---------------------------------------------
2024-10-14 00:38 - INFO - ---------------------------------------------
2024-10-14 00:38 - INFO - Epoch: 04 | Time: 0m 44s
2024-10-14 00:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96248
2024-10-14 00:38 - INFO - 	 Train Loss: 0.120
2024-10-14 00:38 - INFO - 	 Val. Loss: 0.109
2024-10-14 00:38 - INFO - 	 ROC-AUC: 0.962
2024-10-14 00:38 - INFO - 	 PR-AUC: 0.694
2024-10-14 00:38 - INFO - 	 Recall for 0.4 precision: 0.919
2024-10-14 00:38 - INFO - 	 Best Val. Loss: 0.109
2024-10-14 00:38 - INFO - 	 Best ROC-AUC: 0.962
2024-10-14 00:38 - INFO - 	 Best PR-AUC: 0.694
2024-10-14 00:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-10-14 00:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.676
2024-10-14 00:38 - INFO - 	 Best Recall for 0.4 precision: 0.919
2024-10-14 00:38 - INFO - ---------------------------------------------
2024-10-14 00:38 - INFO - ---------------------------------------------
2024-10-14 00:38 - INFO - Epoch: 05 | Time: 0m 44s
2024-10-14 00:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96567
2024-10-14 00:38 - INFO - 	 Train Loss: 0.116
2024-10-14 00:38 - INFO - 	 Val. Loss: 0.104
2024-10-14 00:38 - INFO - 	 ROC-AUC: 0.966
2024-10-14 00:38 - INFO - 	 PR-AUC: 0.705
2024-10-14 00:38 - INFO - 	 Recall for 0.4 precision: 0.924
2024-10-14 00:38 - INFO - 	 Best Val. Loss: 0.104
2024-10-14 00:38 - INFO - 	 Best ROC-AUC: 0.966
2024-10-14 00:38 - INFO - 	 Best PR-AUC: 0.705
2024-10-14 00:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-10-14 00:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.702
2024-10-14 00:38 - INFO - 	 Best Recall for 0.4 precision: 0.924
2024-10-14 00:38 - INFO - ---------------------------------------------
2024-10-14 00:39 - INFO - ---------------------------------------------
2024-10-14 00:39 - INFO - Epoch: 06 | Time: 0m 44s
2024-10-14 00:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96715
2024-10-14 00:39 - INFO - 	 Train Loss: 0.112
2024-10-14 00:39 - INFO - 	 Val. Loss: 0.104
2024-10-14 00:39 - INFO - 	 ROC-AUC: 0.967
2024-10-14 00:39 - INFO - 	 PR-AUC: 0.692
2024-10-14 00:39 - INFO - 	 Recall for 0.4 precision: 0.941
2024-10-14 00:39 - INFO - 	 Best Val. Loss: 0.104
2024-10-14 00:39 - INFO - 	 Best ROC-AUC: 0.967
2024-10-14 00:39 - INFO - 	 Best PR-AUC: 0.705
2024-10-14 00:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-14 00:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.702
2024-10-14 00:39 - INFO - 	 Best Recall for 0.4 precision: 0.941
2024-10-14 00:39 - INFO - ---------------------------------------------
2024-10-14 00:40 - INFO - ---------------------------------------------
2024-10-14 00:40 - INFO - Epoch: 07 | Time: 0m 44s
2024-10-14 00:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96955
2024-10-14 00:40 - INFO - 	 Train Loss: 0.110
2024-10-14 00:40 - INFO - 	 Val. Loss: 0.101
2024-10-14 00:40 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:40 - INFO - 	 PR-AUC: 0.693
2024-10-14 00:40 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-14 00:40 - INFO - 	 Best Val. Loss: 0.101
2024-10-14 00:40 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:40 - INFO - 	 Best PR-AUC: 0.705
2024-10-14 00:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.702
2024-10-14 00:40 - INFO - 	 Best Recall for 0.4 precision: 0.941
2024-10-14 00:40 - INFO - ---------------------------------------------
2024-10-14 00:41 - INFO - ---------------------------------------------
2024-10-14 00:41 - INFO - Epoch: 08 | Time: 0m 44s
2024-10-14 00:41 - INFO - 	 Train Loss: 0.109
2024-10-14 00:41 - INFO - 	 Val. Loss: 0.100
2024-10-14 00:41 - INFO - 	 ROC-AUC: 0.969
2024-10-14 00:41 - INFO - 	 PR-AUC: 0.719
2024-10-14 00:41 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-14 00:41 - INFO - 	 Best Val. Loss: 0.100
2024-10-14 00:41 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:41 - INFO - 	 Best PR-AUC: 0.719
2024-10-14 00:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.748
2024-10-14 00:41 - INFO - 	 Best Recall for 0.4 precision: 0.941
2024-10-14 00:41 - INFO - ---------------------------------------------
2024-10-14 00:41 - INFO - ---------------------------------------------
2024-10-14 00:41 - INFO - Epoch: 09 | Time: 0m 44s
2024-10-14 00:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97133
2024-10-14 00:41 - INFO - 	 Train Loss: 0.107
2024-10-14 00:41 - INFO - 	 Val. Loss: 0.098
2024-10-14 00:41 - INFO - 	 ROC-AUC: 0.971
2024-10-14 00:41 - INFO - 	 PR-AUC: 0.722
2024-10-14 00:41 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-14 00:41 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 00:41 - INFO - 	 Best ROC-AUC: 0.971
2024-10-14 00:41 - INFO - 	 Best PR-AUC: 0.722
2024-10-14 00:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.733
2024-10-14 00:41 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-14 00:41 - INFO - ---------------------------------------------
2024-10-14 00:42 - INFO - ---------------------------------------------
2024-10-14 00:42 - INFO - Epoch: 10 | Time: 0m 44s
2024-10-14 00:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97246
2024-10-14 00:42 - INFO - 	 Train Loss: 0.107
2024-10-14 00:42 - INFO - 	 Val. Loss: 0.095
2024-10-14 00:42 - INFO - 	 ROC-AUC: 0.972
2024-10-14 00:42 - INFO - 	 PR-AUC: 0.741
2024-10-14 00:42 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-14 00:42 - INFO - 	 Best Val. Loss: 0.095
2024-10-14 00:42 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 00:42 - INFO - 	 Best PR-AUC: 0.741
2024-10-14 00:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 00:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.730
2024-10-14 00:42 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-14 00:42 - INFO - ---------------------------------------------
2024-10-14 00:44 - INFO - Fit the preprocessing pipeline
2024-10-14 00:44 - INFO - Training using device: cuda
2024-10-14 00:44 - INFO - Creating generators
2024-10-14 00:44 - INFO - The model has 651,257 trainable parameters
2024-10-14 00:44 - INFO - * Model:
2024-10-14 00:44 - INFO - * -----------
2024-10-14 00:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 00:44 - INFO - * -----------
2024-10-14 00:44 - INFO - Evaluating model based on: rocauc
2024-10-14 00:44 - INFO - Training..

2024-10-14 00:45 - INFO - ---------------------------------------------
2024-10-14 00:45 - INFO - Epoch: 01 | Time: 0m 35s
2024-10-14 00:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.93655
2024-10-14 00:45 - INFO - 	 Train Loss: 0.218
2024-10-14 00:45 - INFO - 	 Val. Loss: 0.146
2024-10-14 00:45 - INFO - 	 ROC-AUC: 0.937
2024-10-14 00:45 - INFO - 	 PR-AUC: 0.477
2024-10-14 00:45 - INFO - 	 Recall for 0.4 precision: 0.788
2024-10-14 00:45 - INFO - 	 Best Val. Loss: 0.146
2024-10-14 00:45 - INFO - 	 Best ROC-AUC: 0.937
2024-10-14 00:45 - INFO - 	 Best PR-AUC: 0.477
2024-10-14 00:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-10-14 00:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.518
2024-10-14 00:45 - INFO - 	 Best Recall for 0.4 precision: 0.788
2024-10-14 00:45 - INFO - ---------------------------------------------
2024-10-14 00:45 - INFO - ---------------------------------------------
2024-10-14 00:45 - INFO - Epoch: 02 | Time: 0m 34s
2024-10-14 00:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95328
2024-10-14 00:45 - INFO - 	 Train Loss: 0.138
2024-10-14 00:45 - INFO - 	 Val. Loss: 0.123
2024-10-14 00:45 - INFO - 	 ROC-AUC: 0.953
2024-10-14 00:45 - INFO - 	 PR-AUC: 0.577
2024-10-14 00:45 - INFO - 	 Recall for 0.4 precision: 0.007
2024-10-14 00:45 - INFO - 	 Best Val. Loss: 0.123
2024-10-14 00:45 - INFO - 	 Best ROC-AUC: 0.953
2024-10-14 00:45 - INFO - 	 Best PR-AUC: 0.577
2024-10-14 00:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-14 00:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.626
2024-10-14 00:45 - INFO - 	 Best Recall for 0.4 precision: 0.788
2024-10-14 00:45 - INFO - ---------------------------------------------
2024-10-14 00:46 - INFO - ---------------------------------------------
2024-10-14 00:46 - INFO - Epoch: 03 | Time: 0m 34s
2024-10-14 00:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96204
2024-10-14 00:46 - INFO - 	 Train Loss: 0.125
2024-10-14 00:46 - INFO - 	 Val. Loss: 0.110
2024-10-14 00:46 - INFO - 	 ROC-AUC: 0.962
2024-10-14 00:46 - INFO - 	 PR-AUC: 0.676
2024-10-14 00:46 - INFO - 	 Recall for 0.4 precision: 0.908
2024-10-14 00:46 - INFO - 	 Best Val. Loss: 0.110
2024-10-14 00:46 - INFO - 	 Best ROC-AUC: 0.962
2024-10-14 00:46 - INFO - 	 Best PR-AUC: 0.676
2024-10-14 00:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-14 00:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.674
2024-10-14 00:46 - INFO - 	 Best Recall for 0.4 precision: 0.908
2024-10-14 00:46 - INFO - ---------------------------------------------
2024-10-14 00:46 - INFO - ---------------------------------------------
2024-10-14 00:46 - INFO - Epoch: 04 | Time: 0m 34s
2024-10-14 00:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96646
2024-10-14 00:46 - INFO - 	 Train Loss: 0.117
2024-10-14 00:46 - INFO - 	 Val. Loss: 0.105
2024-10-14 00:46 - INFO - 	 ROC-AUC: 0.966
2024-10-14 00:46 - INFO - 	 PR-AUC: 0.703
2024-10-14 00:46 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-14 00:46 - INFO - 	 Best Val. Loss: 0.105
2024-10-14 00:46 - INFO - 	 Best ROC-AUC: 0.966
2024-10-14 00:46 - INFO - 	 Best PR-AUC: 0.703
2024-10-14 00:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-14 00:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.717
2024-10-14 00:46 - INFO - 	 Best Recall for 0.4 precision: 0.934
2024-10-14 00:46 - INFO - ---------------------------------------------
2024-10-14 00:47 - INFO - ---------------------------------------------
2024-10-14 00:47 - INFO - Epoch: 05 | Time: 0m 49s
2024-10-14 00:47 - INFO - 	 Train Loss: 0.113
2024-10-14 00:47 - INFO - 	 Val. Loss: 0.108
2024-10-14 00:47 - INFO - 	 ROC-AUC: 0.964
2024-10-14 00:47 - INFO - 	 PR-AUC: 0.691
2024-10-14 00:47 - INFO - 	 Recall for 0.4 precision: 0.923
2024-10-14 00:47 - INFO - 	 Best Val. Loss: 0.105
2024-10-14 00:47 - INFO - 	 Best ROC-AUC: 0.966
2024-10-14 00:47 - INFO - 	 Best PR-AUC: 0.703
2024-10-14 00:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-14 00:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.717
2024-10-14 00:47 - INFO - 	 Best Recall for 0.4 precision: 0.934
2024-10-14 00:47 - INFO - ---------------------------------------------
2024-10-14 00:48 - INFO - ---------------------------------------------
2024-10-14 00:48 - INFO - Epoch: 06 | Time: 0m 58s
2024-10-14 00:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96967
2024-10-14 00:48 - INFO - 	 Train Loss: 0.111
2024-10-14 00:48 - INFO - 	 Val. Loss: 0.097
2024-10-14 00:48 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:48 - INFO - 	 PR-AUC: 0.750
2024-10-14 00:48 - INFO - 	 Recall for 0.4 precision: 0.945
2024-10-14 00:48 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 00:48 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:48 - INFO - 	 Best PR-AUC: 0.750
2024-10-14 00:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-14 00:48 - INFO - 	 Best Recall for 0.4 precision: 0.945
2024-10-14 00:48 - INFO - ---------------------------------------------
2024-10-14 00:49 - INFO - ---------------------------------------------
2024-10-14 00:49 - INFO - Epoch: 07 | Time: 1m 2s
2024-10-14 00:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96986
2024-10-14 00:49 - INFO - 	 Train Loss: 0.110
2024-10-14 00:49 - INFO - 	 Val. Loss: 0.100
2024-10-14 00:49 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:49 - INFO - 	 PR-AUC: 0.735
2024-10-14 00:49 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-14 00:49 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 00:49 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:49 - INFO - 	 Best PR-AUC: 0.750
2024-10-14 00:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 00:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-14 00:49 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-14 00:49 - INFO - ---------------------------------------------
2024-10-14 00:50 - INFO - ---------------------------------------------
2024-10-14 00:50 - INFO - Epoch: 08 | Time: 1m 0s
2024-10-14 00:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97008
2024-10-14 00:50 - INFO - 	 Train Loss: 0.108
2024-10-14 00:50 - INFO - 	 Val. Loss: 0.101
2024-10-14 00:50 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:50 - INFO - 	 PR-AUC: 0.697
2024-10-14 00:50 - INFO - 	 Recall for 0.4 precision: 0.946
2024-10-14 00:50 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 00:50 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:50 - INFO - 	 Best PR-AUC: 0.750
2024-10-14 00:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 00:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-14 00:50 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-14 00:50 - INFO - ---------------------------------------------
2024-10-14 00:51 - INFO - ---------------------------------------------
2024-10-14 00:51 - INFO - Epoch: 09 | Time: 0m 56s
2024-10-14 00:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97026
2024-10-14 00:51 - INFO - 	 Train Loss: 0.107
2024-10-14 00:51 - INFO - 	 Val. Loss: 0.097
2024-10-14 00:51 - INFO - 	 ROC-AUC: 0.970
2024-10-14 00:51 - INFO - 	 PR-AUC: 0.736
2024-10-14 00:51 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-14 00:51 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 00:51 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 00:51 - INFO - 	 Best PR-AUC: 0.750
2024-10-14 00:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 00:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-14 00:51 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-14 00:51 - INFO - ---------------------------------------------
2024-10-14 00:52 - INFO - ---------------------------------------------
2024-10-14 00:52 - INFO - Epoch: 10 | Time: 0m 54s
2024-10-14 00:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97123
2024-10-14 00:52 - INFO - 	 Train Loss: 0.106
2024-10-14 00:52 - INFO - 	 Val. Loss: 0.097
2024-10-14 00:52 - INFO - 	 ROC-AUC: 0.971
2024-10-14 00:52 - INFO - 	 PR-AUC: 0.734
2024-10-14 00:52 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-14 00:52 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 00:52 - INFO - 	 Best ROC-AUC: 0.971
2024-10-14 00:52 - INFO - 	 Best PR-AUC: 0.750
2024-10-14 00:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-14 00:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-14 00:52 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-14 00:52 - INFO - ---------------------------------------------
2024-10-14 00:54 - INFO - Fit the preprocessing pipeline
2024-10-14 00:54 - INFO - Training using device: cuda
2024-10-14 00:54 - INFO - Creating generators
2024-10-14 00:54 - INFO - The model has 651,257 trainable parameters
2024-10-14 00:54 - INFO - * Model:
2024-10-14 00:54 - INFO - * -----------
2024-10-14 00:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 00:54 - INFO - * -----------
2024-10-14 00:54 - INFO - Evaluating model based on: rocauc
2024-10-14 00:54 - INFO - Training..

2024-10-14 00:55 - INFO - ---------------------------------------------
2024-10-14 00:55 - INFO - Epoch: 01 | Time: 0m 53s
2024-10-14 00:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92105
2024-10-14 00:55 - INFO - 	 Train Loss: 0.231
2024-10-14 00:55 - INFO - 	 Val. Loss: 0.185
2024-10-14 00:55 - INFO - 	 ROC-AUC: 0.921
2024-10-14 00:55 - INFO - 	 PR-AUC: 0.472
2024-10-14 00:55 - INFO - 	 Recall for 0.4 precision: 0.697
2024-10-14 00:55 - INFO - 	 Best Val. Loss: 0.185
2024-10-14 00:55 - INFO - 	 Best ROC-AUC: 0.921
2024-10-14 00:55 - INFO - 	 Best PR-AUC: 0.472
2024-10-14 00:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-10-14 00:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.489
2024-10-14 00:55 - INFO - 	 Best Recall for 0.4 precision: 0.697
2024-10-14 00:55 - INFO - ---------------------------------------------
2024-10-14 00:56 - INFO - ---------------------------------------------
2024-10-14 00:56 - INFO - Epoch: 02 | Time: 0m 53s
2024-10-14 00:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9577
2024-10-14 00:56 - INFO - 	 Train Loss: 0.142
2024-10-14 00:56 - INFO - 	 Val. Loss: 0.120
2024-10-14 00:56 - INFO - 	 ROC-AUC: 0.958
2024-10-14 00:56 - INFO - 	 PR-AUC: 0.631
2024-10-14 00:56 - INFO - 	 Recall for 0.4 precision: 0.880
2024-10-14 00:56 - INFO - 	 Best Val. Loss: 0.120
2024-10-14 00:56 - INFO - 	 Best ROC-AUC: 0.958
2024-10-14 00:56 - INFO - 	 Best PR-AUC: 0.631
2024-10-14 00:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-10-14 00:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.656
2024-10-14 00:56 - INFO - 	 Best Recall for 0.4 precision: 0.880
2024-10-14 00:56 - INFO - ---------------------------------------------
2024-10-14 00:57 - INFO - ---------------------------------------------
2024-10-14 00:57 - INFO - Epoch: 03 | Time: 0m 56s
2024-10-14 00:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9607
2024-10-14 00:57 - INFO - 	 Train Loss: 0.126
2024-10-14 00:57 - INFO - 	 Val. Loss: 0.113
2024-10-14 00:57 - INFO - 	 ROC-AUC: 0.961
2024-10-14 00:57 - INFO - 	 PR-AUC: 0.673
2024-10-14 00:57 - INFO - 	 Recall for 0.4 precision: 0.909
2024-10-14 00:57 - INFO - 	 Best Val. Loss: 0.113
2024-10-14 00:57 - INFO - 	 Best ROC-AUC: 0.961
2024-10-14 00:57 - INFO - 	 Best PR-AUC: 0.673
2024-10-14 00:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-14 00:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.679
2024-10-14 00:57 - INFO - 	 Best Recall for 0.4 precision: 0.909
2024-10-14 00:57 - INFO - ---------------------------------------------
2024-10-14 00:58 - INFO - ---------------------------------------------
2024-10-14 00:58 - INFO - Epoch: 04 | Time: 0m 54s
2024-10-14 00:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96559
2024-10-14 00:58 - INFO - 	 Train Loss: 0.120
2024-10-14 00:58 - INFO - 	 Val. Loss: 0.105
2024-10-14 00:58 - INFO - 	 ROC-AUC: 0.966
2024-10-14 00:58 - INFO - 	 PR-AUC: 0.699
2024-10-14 00:58 - INFO - 	 Recall for 0.4 precision: 0.930
2024-10-14 00:58 - INFO - 	 Best Val. Loss: 0.105
2024-10-14 00:58 - INFO - 	 Best ROC-AUC: 0.966
2024-10-14 00:58 - INFO - 	 Best PR-AUC: 0.699
2024-10-14 00:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-14 00:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-14 00:58 - INFO - 	 Best Recall for 0.4 precision: 0.930
2024-10-14 00:58 - INFO - ---------------------------------------------
2024-10-14 00:59 - INFO - ---------------------------------------------
2024-10-14 00:59 - INFO - Epoch: 05 | Time: 1m 5s
2024-10-14 00:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96577
2024-10-14 00:59 - INFO - 	 Train Loss: 0.116
2024-10-14 00:59 - INFO - 	 Val. Loss: 0.103
2024-10-14 00:59 - INFO - 	 ROC-AUC: 0.966
2024-10-14 00:59 - INFO - 	 PR-AUC: 0.720
2024-10-14 00:59 - INFO - 	 Recall for 0.4 precision: 0.932
2024-10-14 00:59 - INFO - 	 Best Val. Loss: 0.103
2024-10-14 00:59 - INFO - 	 Best ROC-AUC: 0.966
2024-10-14 00:59 - INFO - 	 Best PR-AUC: 0.720
2024-10-14 00:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-14 00:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.746
2024-10-14 00:59 - INFO - 	 Best Recall for 0.4 precision: 0.932
2024-10-14 00:59 - INFO - ---------------------------------------------
2024-10-14 01:01 - INFO - ---------------------------------------------
2024-10-14 01:01 - INFO - Epoch: 06 | Time: 1m 21s
2024-10-14 01:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96852
2024-10-14 01:01 - INFO - 	 Train Loss: 0.113
2024-10-14 01:01 - INFO - 	 Val. Loss: 0.104
2024-10-14 01:01 - INFO - 	 ROC-AUC: 0.969
2024-10-14 01:01 - INFO - 	 PR-AUC: 0.736
2024-10-14 01:01 - INFO - 	 Recall for 0.4 precision: 0.932
2024-10-14 01:01 - INFO - 	 Best Val. Loss: 0.103
2024-10-14 01:01 - INFO - 	 Best ROC-AUC: 0.969
2024-10-14 01:01 - INFO - 	 Best PR-AUC: 0.736
2024-10-14 01:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-14 01:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-14 01:01 - INFO - 	 Best Recall for 0.4 precision: 0.932
2024-10-14 01:01 - INFO - ---------------------------------------------
2024-10-14 01:02 - INFO - ---------------------------------------------
2024-10-14 01:02 - INFO - Epoch: 07 | Time: 1m 21s
2024-10-14 01:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96889
2024-10-14 01:02 - INFO - 	 Train Loss: 0.109
2024-10-14 01:02 - INFO - 	 Val. Loss: 0.099
2024-10-14 01:02 - INFO - 	 ROC-AUC: 0.969
2024-10-14 01:02 - INFO - 	 PR-AUC: 0.726
2024-10-14 01:02 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-14 01:02 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 01:02 - INFO - 	 Best ROC-AUC: 0.969
2024-10-14 01:02 - INFO - 	 Best PR-AUC: 0.736
2024-10-14 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-14 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-14 01:02 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-14 01:02 - INFO - ---------------------------------------------
2024-10-14 01:03 - INFO - ---------------------------------------------
2024-10-14 01:03 - INFO - Epoch: 08 | Time: 1m 20s
2024-10-14 01:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96927
2024-10-14 01:03 - INFO - 	 Train Loss: 0.107
2024-10-14 01:03 - INFO - 	 Val. Loss: 0.098
2024-10-14 01:03 - INFO - 	 ROC-AUC: 0.969
2024-10-14 01:03 - INFO - 	 PR-AUC: 0.752
2024-10-14 01:03 - INFO - 	 Recall for 0.4 precision: 0.937
2024-10-14 01:03 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 01:03 - INFO - 	 Best ROC-AUC: 0.969
2024-10-14 01:03 - INFO - 	 Best PR-AUC: 0.752
2024-10-14 01:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-14 01:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.743
2024-10-14 01:03 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-14 01:03 - INFO - ---------------------------------------------
2024-10-14 01:05 - INFO - ---------------------------------------------
2024-10-14 01:05 - INFO - Epoch: 09 | Time: 1m 21s
2024-10-14 01:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96954
2024-10-14 01:05 - INFO - 	 Train Loss: 0.105
2024-10-14 01:05 - INFO - 	 Val. Loss: 0.098
2024-10-14 01:05 - INFO - 	 ROC-AUC: 0.970
2024-10-14 01:05 - INFO - 	 PR-AUC: 0.743
2024-10-14 01:05 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-14 01:05 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 01:05 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 01:05 - INFO - 	 Best PR-AUC: 0.752
2024-10-14 01:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 01:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.743
2024-10-14 01:05 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-14 01:05 - INFO - ---------------------------------------------
2024-10-14 01:06 - INFO - ---------------------------------------------
2024-10-14 01:06 - INFO - Epoch: 10 | Time: 1m 20s
2024-10-14 01:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97117
2024-10-14 01:06 - INFO - 	 Train Loss: 0.104
2024-10-14 01:06 - INFO - 	 Val. Loss: 0.097
2024-10-14 01:06 - INFO - 	 ROC-AUC: 0.971
2024-10-14 01:06 - INFO - 	 PR-AUC: 0.734
2024-10-14 01:06 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-14 01:06 - INFO - 	 Best Val. Loss: 0.097
2024-10-14 01:06 - INFO - 	 Best ROC-AUC: 0.971
2024-10-14 01:06 - INFO - 	 Best PR-AUC: 0.752
2024-10-14 01:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 01:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.743
2024-10-14 01:06 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-14 01:06 - INFO - ---------------------------------------------
2024-10-14 01:08 - INFO - Fit the preprocessing pipeline
2024-10-14 01:08 - INFO - Training using device: cuda
2024-10-14 01:08 - INFO - Creating generators
2024-10-14 01:08 - INFO - The model has 651,257 trainable parameters
2024-10-14 01:08 - INFO - * Model:
2024-10-14 01:08 - INFO - * -----------
2024-10-14 01:08 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 01:08 - INFO - * -----------
2024-10-14 01:08 - INFO - Evaluating model based on: rocauc
2024-10-14 01:08 - INFO - Training..

2024-10-14 01:10 - INFO - ---------------------------------------------
2024-10-14 01:10 - INFO - Epoch: 01 | Time: 1m 22s
2024-10-14 01:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9281
2024-10-14 01:10 - INFO - 	 Train Loss: 0.224
2024-10-14 01:10 - INFO - 	 Val. Loss: 0.144
2024-10-14 01:10 - INFO - 	 ROC-AUC: 0.928
2024-10-14 01:10 - INFO - 	 PR-AUC: 0.489
2024-10-14 01:10 - INFO - 	 Recall for 0.4 precision: 0.744
2024-10-14 01:10 - INFO - 	 Best Val. Loss: 0.144
2024-10-14 01:10 - INFO - 	 Best ROC-AUC: 0.928
2024-10-14 01:10 - INFO - 	 Best PR-AUC: 0.489
2024-10-14 01:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-10-14 01:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.538
2024-10-14 01:10 - INFO - 	 Best Recall for 0.4 precision: 0.744
2024-10-14 01:10 - INFO - ---------------------------------------------
2024-10-14 01:40 - INFO - ---------------------------------------------
2024-10-14 01:40 - INFO - Epoch: 02 | Time: 30m 30s
2024-10-14 01:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95379
2024-10-14 01:40 - INFO - 	 Train Loss: 0.143
2024-10-14 01:40 - INFO - 	 Val. Loss: 0.122
2024-10-14 01:40 - INFO - 	 ROC-AUC: 0.954
2024-10-14 01:40 - INFO - 	 PR-AUC: 0.601
2024-10-14 01:40 - INFO - 	 Recall for 0.4 precision: 0.880
2024-10-14 01:40 - INFO - 	 Best Val. Loss: 0.122
2024-10-14 01:40 - INFO - 	 Best ROC-AUC: 0.954
2024-10-14 01:40 - INFO - 	 Best PR-AUC: 0.601
2024-10-14 01:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-10-14 01:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.629
2024-10-14 01:40 - INFO - 	 Best Recall for 0.4 precision: 0.880
2024-10-14 01:40 - INFO - ---------------------------------------------
2024-10-14 01:41 - INFO - ---------------------------------------------
2024-10-14 01:41 - INFO - Epoch: 03 | Time: 1m 6s
2024-10-14 01:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96018
2024-10-14 01:41 - INFO - 	 Train Loss: 0.125
2024-10-14 01:41 - INFO - 	 Val. Loss: 0.117
2024-10-14 01:41 - INFO - 	 ROC-AUC: 0.960
2024-10-14 01:41 - INFO - 	 PR-AUC: 0.662
2024-10-14 01:41 - INFO - 	 Recall for 0.4 precision: 0.909
2024-10-14 01:41 - INFO - 	 Best Val. Loss: 0.117
2024-10-14 01:41 - INFO - 	 Best ROC-AUC: 0.960
2024-10-14 01:41 - INFO - 	 Best PR-AUC: 0.662
2024-10-14 01:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-10-14 01:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.652
2024-10-14 01:41 - INFO - 	 Best Recall for 0.4 precision: 0.909
2024-10-14 01:41 - INFO - ---------------------------------------------
2024-10-14 01:42 - INFO - ---------------------------------------------
2024-10-14 01:42 - INFO - Epoch: 04 | Time: 1m 8s
2024-10-14 01:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96419
2024-10-14 01:42 - INFO - 	 Train Loss: 0.121
2024-10-14 01:42 - INFO - 	 Val. Loss: 0.111
2024-10-14 01:42 - INFO - 	 ROC-AUC: 0.964
2024-10-14 01:42 - INFO - 	 PR-AUC: 0.709
2024-10-14 01:42 - INFO - 	 Recall for 0.4 precision: 0.931
2024-10-14 01:42 - INFO - 	 Best Val. Loss: 0.111
2024-10-14 01:42 - INFO - 	 Best ROC-AUC: 0.964
2024-10-14 01:42 - INFO - 	 Best PR-AUC: 0.709
2024-10-14 01:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-14 01:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.721
2024-10-14 01:42 - INFO - 	 Best Recall for 0.4 precision: 0.931
2024-10-14 01:42 - INFO - ---------------------------------------------
2024-10-14 01:44 - INFO - ---------------------------------------------
2024-10-14 01:44 - INFO - Epoch: 05 | Time: 1m 15s
2024-10-14 01:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9681
2024-10-14 01:44 - INFO - 	 Train Loss: 0.115
2024-10-14 01:44 - INFO - 	 Val. Loss: 0.102
2024-10-14 01:44 - INFO - 	 ROC-AUC: 0.968
2024-10-14 01:44 - INFO - 	 PR-AUC: 0.712
2024-10-14 01:44 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-14 01:44 - INFO - 	 Best Val. Loss: 0.102
2024-10-14 01:44 - INFO - 	 Best ROC-AUC: 0.968
2024-10-14 01:44 - INFO - 	 Best PR-AUC: 0.712
2024-10-14 01:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-14 01:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-14 01:44 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 01:44 - INFO - ---------------------------------------------
2024-10-14 01:45 - INFO - ---------------------------------------------
2024-10-14 01:45 - INFO - Epoch: 06 | Time: 1m 16s
2024-10-14 01:45 - INFO - 	 Train Loss: 0.112
2024-10-14 01:45 - INFO - 	 Val. Loss: 0.106
2024-10-14 01:45 - INFO - 	 ROC-AUC: 0.965
2024-10-14 01:45 - INFO - 	 PR-AUC: 0.693
2024-10-14 01:45 - INFO - 	 Recall for 0.4 precision: 0.929
2024-10-14 01:45 - INFO - 	 Best Val. Loss: 0.102
2024-10-14 01:45 - INFO - 	 Best ROC-AUC: 0.968
2024-10-14 01:45 - INFO - 	 Best PR-AUC: 0.712
2024-10-14 01:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-14 01:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-14 01:45 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 01:45 - INFO - ---------------------------------------------
2024-10-14 01:46 - INFO - ---------------------------------------------
2024-10-14 01:46 - INFO - Epoch: 07 | Time: 1m 14s
2024-10-14 01:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97154
2024-10-14 01:46 - INFO - 	 Train Loss: 0.109
2024-10-14 01:46 - INFO - 	 Val. Loss: 0.098
2024-10-14 01:46 - INFO - 	 ROC-AUC: 0.972
2024-10-14 01:46 - INFO - 	 PR-AUC: 0.731
2024-10-14 01:46 - INFO - 	 Recall for 0.4 precision: 0.940
2024-10-14 01:46 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 01:46 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 01:46 - INFO - 	 Best PR-AUC: 0.731
2024-10-14 01:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 01:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-10-14 01:46 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 01:46 - INFO - ---------------------------------------------
2024-10-14 01:48 - INFO - ---------------------------------------------
2024-10-14 01:48 - INFO - Epoch: 08 | Time: 1m 24s
2024-10-14 01:48 - INFO - 	 Train Loss: 0.107
2024-10-14 01:48 - INFO - 	 Val. Loss: 0.101
2024-10-14 01:48 - INFO - 	 ROC-AUC: 0.968
2024-10-14 01:48 - INFO - 	 PR-AUC: 0.727
2024-10-14 01:48 - INFO - 	 Recall for 0.4 precision: 0.936
2024-10-14 01:48 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 01:48 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 01:48 - INFO - 	 Best PR-AUC: 0.731
2024-10-14 01:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 01:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-10-14 01:48 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 01:48 - INFO - ---------------------------------------------
2024-10-14 01:49 - INFO - ---------------------------------------------
2024-10-14 01:49 - INFO - Epoch: 09 | Time: 1m 9s
2024-10-14 01:49 - INFO - 	 Train Loss: 0.106
2024-10-14 01:49 - INFO - 	 Val. Loss: 0.099
2024-10-14 01:49 - INFO - 	 ROC-AUC: 0.970
2024-10-14 01:49 - INFO - 	 PR-AUC: 0.728
2024-10-14 01:49 - INFO - 	 Recall for 0.4 precision: 0.946
2024-10-14 01:49 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 01:49 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 01:49 - INFO - 	 Best PR-AUC: 0.731
2024-10-14 01:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 01:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-10-14 01:49 - INFO - 	 Best Recall for 0.4 precision: 0.946
2024-10-14 01:49 - INFO - ---------------------------------------------
2024-10-14 01:50 - INFO - ---------------------------------------------
2024-10-14 01:50 - INFO - Epoch: 10 | Time: 1m 15s
2024-10-14 01:50 - INFO - 	 Train Loss: 0.106
2024-10-14 01:50 - INFO - 	 Val. Loss: 0.100
2024-10-14 01:50 - INFO - 	 ROC-AUC: 0.969
2024-10-14 01:50 - INFO - 	 PR-AUC: 0.727
2024-10-14 01:50 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-14 01:50 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 01:50 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 01:50 - INFO - 	 Best PR-AUC: 0.731
2024-10-14 01:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 01:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-10-14 01:50 - INFO - 	 Best Recall for 0.4 precision: 0.946
2024-10-14 01:50 - INFO - ---------------------------------------------
2024-10-14 01:52 - INFO - Fit the preprocessing pipeline
2024-10-14 01:52 - INFO - Training using device: cuda
2024-10-14 01:52 - INFO - Creating generators
2024-10-14 01:52 - INFO - The model has 651,257 trainable parameters
2024-10-14 01:52 - INFO - * Model:
2024-10-14 01:52 - INFO - * -----------
2024-10-14 01:52 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 01:52 - INFO - * -----------
2024-10-14 01:52 - INFO - Evaluating model based on: rocauc
2024-10-14 01:52 - INFO - Training..

2024-10-14 01:54 - INFO - ---------------------------------------------
2024-10-14 01:54 - INFO - Epoch: 01 | Time: 1m 21s
2024-10-14 01:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.93961
2024-10-14 01:54 - INFO - 	 Train Loss: 0.222
2024-10-14 01:54 - INFO - 	 Val. Loss: 0.136
2024-10-14 01:54 - INFO - 	 ROC-AUC: 0.940
2024-10-14 01:54 - INFO - 	 PR-AUC: 0.512
2024-10-14 01:54 - INFO - 	 Recall for 0.4 precision: 0.798
2024-10-14 01:54 - INFO - 	 Best Val. Loss: 0.136
2024-10-14 01:54 - INFO - 	 Best ROC-AUC: 0.940
2024-10-14 01:54 - INFO - 	 Best PR-AUC: 0.512
2024-10-14 01:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-10-14 01:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.534
2024-10-14 01:54 - INFO - 	 Best Recall for 0.4 precision: 0.798
2024-10-14 01:54 - INFO - ---------------------------------------------
2024-10-14 01:55 - INFO - ---------------------------------------------
2024-10-14 01:55 - INFO - Epoch: 02 | Time: 1m 14s
2024-10-14 01:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94934
2024-10-14 01:55 - INFO - 	 Train Loss: 0.141
2024-10-14 01:55 - INFO - 	 Val. Loss: 0.131
2024-10-14 01:55 - INFO - 	 ROC-AUC: 0.949
2024-10-14 01:55 - INFO - 	 PR-AUC: 0.592
2024-10-14 01:55 - INFO - 	 Recall for 0.4 precision: 0.850
2024-10-14 01:55 - INFO - 	 Best Val. Loss: 0.131
2024-10-14 01:55 - INFO - 	 Best ROC-AUC: 0.949
2024-10-14 01:55 - INFO - 	 Best PR-AUC: 0.592
2024-10-14 01:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-10-14 01:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.621
2024-10-14 01:55 - INFO - 	 Best Recall for 0.4 precision: 0.850
2024-10-14 01:55 - INFO - ---------------------------------------------
2024-10-14 01:56 - INFO - ---------------------------------------------
2024-10-14 01:56 - INFO - Epoch: 03 | Time: 1m 13s
2024-10-14 01:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95814
2024-10-14 01:56 - INFO - 	 Train Loss: 0.126
2024-10-14 01:56 - INFO - 	 Val. Loss: 0.116
2024-10-14 01:56 - INFO - 	 ROC-AUC: 0.958
2024-10-14 01:56 - INFO - 	 PR-AUC: 0.641
2024-10-14 01:56 - INFO - 	 Recall for 0.4 precision: 0.895
2024-10-14 01:56 - INFO - 	 Best Val. Loss: 0.116
2024-10-14 01:56 - INFO - 	 Best ROC-AUC: 0.958
2024-10-14 01:56 - INFO - 	 Best PR-AUC: 0.641
2024-10-14 01:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-10-14 01:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.639
2024-10-14 01:56 - INFO - 	 Best Recall for 0.4 precision: 0.895
2024-10-14 01:56 - INFO - ---------------------------------------------
2024-10-14 01:57 - INFO - ---------------------------------------------
2024-10-14 01:57 - INFO - Epoch: 04 | Time: 1m 12s
2024-10-14 01:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96308
2024-10-14 01:57 - INFO - 	 Train Loss: 0.121
2024-10-14 01:57 - INFO - 	 Val. Loss: 0.111
2024-10-14 01:57 - INFO - 	 ROC-AUC: 0.963
2024-10-14 01:57 - INFO - 	 PR-AUC: 0.666
2024-10-14 01:57 - INFO - 	 Recall for 0.4 precision: 0.924
2024-10-14 01:57 - INFO - 	 Best Val. Loss: 0.111
2024-10-14 01:57 - INFO - 	 Best ROC-AUC: 0.963
2024-10-14 01:57 - INFO - 	 Best PR-AUC: 0.666
2024-10-14 01:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-14 01:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.651
2024-10-14 01:57 - INFO - 	 Best Recall for 0.4 precision: 0.924
2024-10-14 01:57 - INFO - ---------------------------------------------
2024-10-14 01:58 - INFO - ---------------------------------------------
2024-10-14 01:58 - INFO - Epoch: 05 | Time: 1m 12s
2024-10-14 01:58 - INFO - 	 Train Loss: 0.116
2024-10-14 01:58 - INFO - 	 Val. Loss: 0.108
2024-10-14 01:58 - INFO - 	 ROC-AUC: 0.962
2024-10-14 01:58 - INFO - 	 PR-AUC: 0.688
2024-10-14 01:58 - INFO - 	 Recall for 0.4 precision: 0.914
2024-10-14 01:58 - INFO - 	 Best Val. Loss: 0.108
2024-10-14 01:58 - INFO - 	 Best ROC-AUC: 0.963
2024-10-14 01:58 - INFO - 	 Best PR-AUC: 0.688
2024-10-14 01:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-14 01:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.700
2024-10-14 01:58 - INFO - 	 Best Recall for 0.4 precision: 0.924
2024-10-14 01:58 - INFO - ---------------------------------------------
2024-10-14 02:00 - INFO - ---------------------------------------------
2024-10-14 02:00 - INFO - Epoch: 06 | Time: 1m 11s
2024-10-14 02:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9671
2024-10-14 02:00 - INFO - 	 Train Loss: 0.112
2024-10-14 02:00 - INFO - 	 Val. Loss: 0.104
2024-10-14 02:00 - INFO - 	 ROC-AUC: 0.967
2024-10-14 02:00 - INFO - 	 PR-AUC: 0.708
2024-10-14 02:00 - INFO - 	 Recall for 0.4 precision: 0.936
2024-10-14 02:00 - INFO - 	 Best Val. Loss: 0.104
2024-10-14 02:00 - INFO - 	 Best ROC-AUC: 0.967
2024-10-14 02:00 - INFO - 	 Best PR-AUC: 0.708
2024-10-14 02:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 02:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-14 02:00 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-14 02:00 - INFO - ---------------------------------------------
2024-10-14 02:01 - INFO - ---------------------------------------------
2024-10-14 02:01 - INFO - Epoch: 07 | Time: 1m 13s
2024-10-14 02:01 - INFO - 	 Train Loss: 0.110
2024-10-14 02:01 - INFO - 	 Val. Loss: 0.103
2024-10-14 02:01 - INFO - 	 ROC-AUC: 0.966
2024-10-14 02:01 - INFO - 	 PR-AUC: 0.704
2024-10-14 02:01 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-14 02:01 - INFO - 	 Best Val. Loss: 0.103
2024-10-14 02:01 - INFO - 	 Best ROC-AUC: 0.967
2024-10-14 02:01 - INFO - 	 Best PR-AUC: 0.708
2024-10-14 02:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 02:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-14 02:01 - INFO - 	 Best Recall for 0.4 precision: 0.936
2024-10-14 02:01 - INFO - ---------------------------------------------
2024-10-14 02:02 - INFO - ---------------------------------------------
2024-10-14 02:02 - INFO - Epoch: 08 | Time: 1m 14s
2024-10-14 02:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96797
2024-10-14 02:02 - INFO - 	 Train Loss: 0.109
2024-10-14 02:02 - INFO - 	 Val. Loss: 0.101
2024-10-14 02:02 - INFO - 	 ROC-AUC: 0.968
2024-10-14 02:02 - INFO - 	 PR-AUC: 0.702
2024-10-14 02:02 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-14 02:02 - INFO - 	 Best Val. Loss: 0.101
2024-10-14 02:02 - INFO - 	 Best ROC-AUC: 0.968
2024-10-14 02:02 - INFO - 	 Best PR-AUC: 0.708
2024-10-14 02:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 02:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-14 02:02 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-14 02:02 - INFO - ---------------------------------------------
2024-10-14 02:04 - INFO - ---------------------------------------------
2024-10-14 02:04 - INFO - Epoch: 09 | Time: 1m 29s
2024-10-14 02:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96911
2024-10-14 02:04 - INFO - 	 Train Loss: 0.107
2024-10-14 02:04 - INFO - 	 Val. Loss: 0.099
2024-10-14 02:04 - INFO - 	 ROC-AUC: 0.969
2024-10-14 02:04 - INFO - 	 PR-AUC: 0.721
2024-10-14 02:04 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-14 02:04 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 02:04 - INFO - 	 Best ROC-AUC: 0.969
2024-10-14 02:04 - INFO - 	 Best PR-AUC: 0.721
2024-10-14 02:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 02:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.757
2024-10-14 02:04 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 02:04 - INFO - ---------------------------------------------
2024-10-14 02:05 - INFO - ---------------------------------------------
2024-10-14 02:05 - INFO - Epoch: 10 | Time: 1m 11s
2024-10-14 02:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96915
2024-10-14 02:05 - INFO - 	 Train Loss: 0.106
2024-10-14 02:05 - INFO - 	 Val. Loss: 0.100
2024-10-14 02:05 - INFO - 	 ROC-AUC: 0.969
2024-10-14 02:05 - INFO - 	 PR-AUC: 0.717
2024-10-14 02:05 - INFO - 	 Recall for 0.4 precision: 0.940
2024-10-14 02:05 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 02:05 - INFO - 	 Best ROC-AUC: 0.969
2024-10-14 02:05 - INFO - 	 Best PR-AUC: 0.721
2024-10-14 02:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-14 02:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.757
2024-10-14 02:05 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 02:05 - INFO - ---------------------------------------------
2024-10-14 02:07 - INFO - Fit the preprocessing pipeline
2024-10-14 02:07 - INFO - Training using device: cuda
2024-10-14 02:07 - INFO - Creating generators
2024-10-14 02:07 - INFO - The model has 651,257 trainable parameters
2024-10-14 02:07 - INFO - * Model:
2024-10-14 02:07 - INFO - * -----------
2024-10-14 02:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 02:07 - INFO - * -----------
2024-10-14 02:07 - INFO - Evaluating model based on: rocauc
2024-10-14 02:07 - INFO - Training..

2024-10-14 02:08 - INFO - ---------------------------------------------
2024-10-14 02:08 - INFO - Epoch: 01 | Time: 1m 10s
2024-10-14 02:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92861
2024-10-14 02:08 - INFO - 	 Train Loss: 0.227
2024-10-14 02:08 - INFO - 	 Val. Loss: 0.155
2024-10-14 02:08 - INFO - 	 ROC-AUC: 0.929
2024-10-14 02:08 - INFO - 	 PR-AUC: 0.465
2024-10-14 02:08 - INFO - 	 Recall for 0.4 precision: 0.730
2024-10-14 02:08 - INFO - 	 Best Val. Loss: 0.155
2024-10-14 02:08 - INFO - 	 Best ROC-AUC: 0.929
2024-10-14 02:08 - INFO - 	 Best PR-AUC: 0.465
2024-10-14 02:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.926
2024-10-14 02:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.518
2024-10-14 02:08 - INFO - 	 Best Recall for 0.4 precision: 0.730
2024-10-14 02:08 - INFO - ---------------------------------------------
2024-10-14 02:09 - INFO - ---------------------------------------------
2024-10-14 02:09 - INFO - Epoch: 02 | Time: 1m 12s
2024-10-14 02:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95635
2024-10-14 02:09 - INFO - 	 Train Loss: 0.143
2024-10-14 02:09 - INFO - 	 Val. Loss: 0.122
2024-10-14 02:09 - INFO - 	 ROC-AUC: 0.956
2024-10-14 02:09 - INFO - 	 PR-AUC: 0.609
2024-10-14 02:09 - INFO - 	 Recall for 0.4 precision: 0.885
2024-10-14 02:09 - INFO - 	 Best Val. Loss: 0.122
2024-10-14 02:09 - INFO - 	 Best ROC-AUC: 0.956
2024-10-14 02:09 - INFO - 	 Best PR-AUC: 0.609
2024-10-14 02:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-10-14 02:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.622
2024-10-14 02:09 - INFO - 	 Best Recall for 0.4 precision: 0.885
2024-10-14 02:09 - INFO - ---------------------------------------------
2024-10-14 02:11 - INFO - ---------------------------------------------
2024-10-14 02:11 - INFO - Epoch: 03 | Time: 1m 8s
2024-10-14 02:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96306
2024-10-14 02:11 - INFO - 	 Train Loss: 0.128
2024-10-14 02:11 - INFO - 	 Val. Loss: 0.124
2024-10-14 02:11 - INFO - 	 ROC-AUC: 0.963
2024-10-14 02:11 - INFO - 	 PR-AUC: 0.660
2024-10-14 02:11 - INFO - 	 Recall for 0.4 precision: 0.918
2024-10-14 02:11 - INFO - 	 Best Val. Loss: 0.122
2024-10-14 02:11 - INFO - 	 Best ROC-AUC: 0.963
2024-10-14 02:11 - INFO - 	 Best PR-AUC: 0.660
2024-10-14 02:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-10-14 02:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.659
2024-10-14 02:11 - INFO - 	 Best Recall for 0.4 precision: 0.918
2024-10-14 02:11 - INFO - ---------------------------------------------
2024-10-14 02:12 - INFO - ---------------------------------------------
2024-10-14 02:12 - INFO - Epoch: 04 | Time: 1m 31s
2024-10-14 02:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96406
2024-10-14 02:12 - INFO - 	 Train Loss: 0.119
2024-10-14 02:12 - INFO - 	 Val. Loss: 0.106
2024-10-14 02:12 - INFO - 	 ROC-AUC: 0.964
2024-10-14 02:12 - INFO - 	 PR-AUC: 0.693
2024-10-14 02:12 - INFO - 	 Recall for 0.4 precision: 0.931
2024-10-14 02:12 - INFO - 	 Best Val. Loss: 0.106
2024-10-14 02:12 - INFO - 	 Best ROC-AUC: 0.964
2024-10-14 02:12 - INFO - 	 Best PR-AUC: 0.693
2024-10-14 02:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-14 02:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.711
2024-10-14 02:12 - INFO - 	 Best Recall for 0.4 precision: 0.931
2024-10-14 02:12 - INFO - ---------------------------------------------
2024-10-14 02:14 - INFO - ---------------------------------------------
2024-10-14 02:14 - INFO - Epoch: 05 | Time: 1m 31s
2024-10-14 02:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96543
2024-10-14 02:14 - INFO - 	 Train Loss: 0.114
2024-10-14 02:14 - INFO - 	 Val. Loss: 0.104
2024-10-14 02:14 - INFO - 	 ROC-AUC: 0.965
2024-10-14 02:14 - INFO - 	 PR-AUC: 0.697
2024-10-14 02:14 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-14 02:14 - INFO - 	 Best Val. Loss: 0.104
2024-10-14 02:14 - INFO - 	 Best ROC-AUC: 0.965
2024-10-14 02:14 - INFO - 	 Best PR-AUC: 0.697
2024-10-14 02:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-14 02:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.712
2024-10-14 02:14 - INFO - 	 Best Recall for 0.4 precision: 0.934
2024-10-14 02:14 - INFO - ---------------------------------------------
2024-10-14 02:15 - INFO - ---------------------------------------------
2024-10-14 02:15 - INFO - Epoch: 06 | Time: 1m 10s
2024-10-14 02:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96995
2024-10-14 02:15 - INFO - 	 Train Loss: 0.112
2024-10-14 02:15 - INFO - 	 Val. Loss: 0.098
2024-10-14 02:15 - INFO - 	 ROC-AUC: 0.970
2024-10-14 02:15 - INFO - 	 PR-AUC: 0.729
2024-10-14 02:15 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-14 02:15 - INFO - 	 Best Val. Loss: 0.098
2024-10-14 02:15 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 02:15 - INFO - 	 Best PR-AUC: 0.729
2024-10-14 02:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 02:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.717
2024-10-14 02:15 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-14 02:15 - INFO - ---------------------------------------------
2024-10-14 02:16 - INFO - ---------------------------------------------
2024-10-14 02:16 - INFO - Epoch: 07 | Time: 1m 14s
2024-10-14 02:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9723
2024-10-14 02:16 - INFO - 	 Train Loss: 0.109
2024-10-14 02:16 - INFO - 	 Val. Loss: 0.096
2024-10-14 02:16 - INFO - 	 ROC-AUC: 0.972
2024-10-14 02:16 - INFO - 	 PR-AUC: 0.746
2024-10-14 02:16 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-14 02:16 - INFO - 	 Best Val. Loss: 0.096
2024-10-14 02:16 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 02:16 - INFO - 	 Best PR-AUC: 0.746
2024-10-14 02:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 02:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-14 02:16 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-14 02:16 - INFO - ---------------------------------------------
2024-10-14 02:17 - INFO - ---------------------------------------------
2024-10-14 02:17 - INFO - Epoch: 08 | Time: 1m 12s
2024-10-14 02:17 - INFO - 	 Train Loss: 0.107
2024-10-14 02:17 - INFO - 	 Val. Loss: 0.099
2024-10-14 02:17 - INFO - 	 ROC-AUC: 0.970
2024-10-14 02:17 - INFO - 	 PR-AUC: 0.718
2024-10-14 02:17 - INFO - 	 Recall for 0.4 precision: 0.947
2024-10-14 02:17 - INFO - 	 Best Val. Loss: 0.096
2024-10-14 02:17 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 02:17 - INFO - 	 Best PR-AUC: 0.746
2024-10-14 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-14 02:17 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-14 02:17 - INFO - ---------------------------------------------
2024-10-14 02:18 - INFO - ---------------------------------------------
2024-10-14 02:18 - INFO - Epoch: 09 | Time: 1m 11s
2024-10-14 02:18 - INFO - 	 Train Loss: 0.107
2024-10-14 02:18 - INFO - 	 Val. Loss: 0.097
2024-10-14 02:18 - INFO - 	 ROC-AUC: 0.970
2024-10-14 02:18 - INFO - 	 PR-AUC: 0.734
2024-10-14 02:18 - INFO - 	 Recall for 0.4 precision: 0.941
2024-10-14 02:18 - INFO - 	 Best Val. Loss: 0.096
2024-10-14 02:18 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 02:18 - INFO - 	 Best PR-AUC: 0.746
2024-10-14 02:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 02:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-14 02:18 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-14 02:18 - INFO - ---------------------------------------------
2024-10-14 02:20 - INFO - ---------------------------------------------
2024-10-14 02:20 - INFO - Epoch: 10 | Time: 1m 11s
2024-10-14 02:20 - INFO - 	 Train Loss: 0.106
2024-10-14 02:20 - INFO - 	 Val. Loss: 0.097
2024-10-14 02:20 - INFO - 	 ROC-AUC: 0.969
2024-10-14 02:20 - INFO - 	 PR-AUC: 0.744
2024-10-14 02:20 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-14 02:20 - INFO - 	 Best Val. Loss: 0.096
2024-10-14 02:20 - INFO - 	 Best ROC-AUC: 0.972
2024-10-14 02:20 - INFO - 	 Best PR-AUC: 0.746
2024-10-14 02:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-14 02:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-14 02:20 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-14 02:20 - INFO - ---------------------------------------------
2024-10-14 02:22 - INFO - Fit the preprocessing pipeline
2024-10-14 02:22 - INFO - Training using device: cuda
2024-10-14 02:22 - INFO - Creating generators
2024-10-14 02:22 - INFO - The model has 651,257 trainable parameters
2024-10-14 02:22 - INFO - * Model:
2024-10-14 02:22 - INFO - * -----------
2024-10-14 02:22 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 02:22 - INFO - * -----------
2024-10-14 02:22 - INFO - Evaluating model based on: rocauc
2024-10-14 02:22 - INFO - Training..

2024-10-14 02:23 - INFO - ---------------------------------------------
2024-10-14 02:23 - INFO - Epoch: 01 | Time: 1m 9s
2024-10-14 02:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.92868
2024-10-14 02:23 - INFO - 	 Train Loss: 0.211
2024-10-14 02:23 - INFO - 	 Val. Loss: 0.179
2024-10-14 02:23 - INFO - 	 ROC-AUC: 0.929
2024-10-14 02:23 - INFO - 	 PR-AUC: 0.492
2024-10-14 02:23 - INFO - 	 Recall for 0.4 precision: 0.747
2024-10-14 02:23 - INFO - 	 Best Val. Loss: 0.179
2024-10-14 02:23 - INFO - 	 Best ROC-AUC: 0.929
2024-10-14 02:23 - INFO - 	 Best PR-AUC: 0.492
2024-10-14 02:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.920
2024-10-14 02:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.509
2024-10-14 02:23 - INFO - 	 Best Recall for 0.4 precision: 0.747
2024-10-14 02:23 - INFO - ---------------------------------------------
2024-10-14 02:24 - INFO - ---------------------------------------------
2024-10-14 02:24 - INFO - Epoch: 02 | Time: 1m 10s
2024-10-14 02:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95209
2024-10-14 02:24 - INFO - 	 Train Loss: 0.139
2024-10-14 02:24 - INFO - 	 Val. Loss: 0.122
2024-10-14 02:24 - INFO - 	 ROC-AUC: 0.952
2024-10-14 02:24 - INFO - 	 PR-AUC: 0.623
2024-10-14 02:24 - INFO - 	 Recall for 0.4 precision: 0.878
2024-10-14 02:24 - INFO - 	 Best Val. Loss: 0.122
2024-10-14 02:24 - INFO - 	 Best ROC-AUC: 0.952
2024-10-14 02:24 - INFO - 	 Best PR-AUC: 0.623
2024-10-14 02:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-10-14 02:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.592
2024-10-14 02:24 - INFO - 	 Best Recall for 0.4 precision: 0.878
2024-10-14 02:24 - INFO - ---------------------------------------------
2024-10-14 02:25 - INFO - ---------------------------------------------
2024-10-14 02:25 - INFO - Epoch: 03 | Time: 1m 13s
2024-10-14 02:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96143
2024-10-14 02:25 - INFO - 	 Train Loss: 0.126
2024-10-14 02:25 - INFO - 	 Val. Loss: 0.113
2024-10-14 02:25 - INFO - 	 ROC-AUC: 0.961
2024-10-14 02:25 - INFO - 	 PR-AUC: 0.697
2024-10-14 02:25 - INFO - 	 Recall for 0.4 precision: 0.905
2024-10-14 02:25 - INFO - 	 Best Val. Loss: 0.113
2024-10-14 02:25 - INFO - 	 Best ROC-AUC: 0.961
2024-10-14 02:25 - INFO - 	 Best PR-AUC: 0.697
2024-10-14 02:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-14 02:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.666
2024-10-14 02:25 - INFO - 	 Best Recall for 0.4 precision: 0.905
2024-10-14 02:25 - INFO - ---------------------------------------------
2024-10-14 02:27 - INFO - ---------------------------------------------
2024-10-14 02:27 - INFO - Epoch: 04 | Time: 1m 26s
2024-10-14 02:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9623
2024-10-14 02:27 - INFO - 	 Train Loss: 0.120
2024-10-14 02:27 - INFO - 	 Val. Loss: 0.119
2024-10-14 02:27 - INFO - 	 ROC-AUC: 0.962
2024-10-14 02:27 - INFO - 	 PR-AUC: 0.678
2024-10-14 02:27 - INFO - 	 Recall for 0.4 precision: 0.929
2024-10-14 02:27 - INFO - 	 Best Val. Loss: 0.113
2024-10-14 02:27 - INFO - 	 Best ROC-AUC: 0.962
2024-10-14 02:27 - INFO - 	 Best PR-AUC: 0.697
2024-10-14 02:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-10-14 02:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.666
2024-10-14 02:27 - INFO - 	 Best Recall for 0.4 precision: 0.929
2024-10-14 02:27 - INFO - ---------------------------------------------
2024-10-14 02:28 - INFO - ---------------------------------------------
2024-10-14 02:28 - INFO - Epoch: 05 | Time: 1m 11s
2024-10-14 02:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96778
2024-10-14 02:28 - INFO - 	 Train Loss: 0.117
2024-10-14 02:28 - INFO - 	 Val. Loss: 0.103
2024-10-14 02:28 - INFO - 	 ROC-AUC: 0.968
2024-10-14 02:28 - INFO - 	 PR-AUC: 0.720
2024-10-14 02:28 - INFO - 	 Recall for 0.4 precision: 0.942
2024-10-14 02:28 - INFO - 	 Best Val. Loss: 0.103
2024-10-14 02:28 - INFO - 	 Best ROC-AUC: 0.968
2024-10-14 02:28 - INFO - 	 Best PR-AUC: 0.720
2024-10-14 02:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-14 02:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.712
2024-10-14 02:28 - INFO - 	 Best Recall for 0.4 precision: 0.942
2024-10-14 02:28 - INFO - ---------------------------------------------
2024-10-14 02:29 - INFO - ---------------------------------------------
2024-10-14 02:29 - INFO - Epoch: 06 | Time: 1m 11s
2024-10-14 02:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97
2024-10-14 02:29 - INFO - 	 Train Loss: 0.112
2024-10-14 02:29 - INFO - 	 Val. Loss: 0.099
2024-10-14 02:29 - INFO - 	 ROC-AUC: 0.970
2024-10-14 02:29 - INFO - 	 PR-AUC: 0.733
2024-10-14 02:29 - INFO - 	 Recall for 0.4 precision: 0.943
2024-10-14 02:29 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 02:29 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 02:29 - INFO - 	 Best PR-AUC: 0.733
2024-10-14 02:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-14 02:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.739
2024-10-14 02:29 - INFO - 	 Best Recall for 0.4 precision: 0.943
2024-10-14 02:29 - INFO - ---------------------------------------------
2024-10-14 02:31 - INFO - ---------------------------------------------
2024-10-14 02:31 - INFO - Epoch: 07 | Time: 1m 20s
2024-10-14 02:31 - INFO - 	 Train Loss: 0.112
2024-10-14 02:31 - INFO - 	 Val. Loss: 0.107
2024-10-14 02:31 - INFO - 	 ROC-AUC: 0.968
2024-10-14 02:31 - INFO - 	 PR-AUC: 0.743
2024-10-14 02:31 - INFO - 	 Recall for 0.4 precision: 0.929
2024-10-14 02:31 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 02:31 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 02:31 - INFO - 	 Best PR-AUC: 0.743
2024-10-14 02:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-14 02:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.714
2024-10-14 02:31 - INFO - 	 Best Recall for 0.4 precision: 0.943
2024-10-14 02:31 - INFO - ---------------------------------------------
2024-10-14 02:32 - INFO - ---------------------------------------------
2024-10-14 02:32 - INFO - Epoch: 08 | Time: 1m 19s
2024-10-14 02:32 - INFO - 	 Train Loss: 0.109
2024-10-14 02:32 - INFO - 	 Val. Loss: 0.099
2024-10-14 02:32 - INFO - 	 ROC-AUC: 0.969
2024-10-14 02:32 - INFO - 	 PR-AUC: 0.738
2024-10-14 02:32 - INFO - 	 Recall for 0.4 precision: 0.938
2024-10-14 02:32 - INFO - 	 Best Val. Loss: 0.099
2024-10-14 02:32 - INFO - 	 Best ROC-AUC: 0.970
2024-10-14 02:32 - INFO - 	 Best PR-AUC: 0.743
2024-10-14 02:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-14 02:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.714
2024-10-14 02:32 - INFO - 	 Best Recall for 0.4 precision: 0.943
2024-10-14 02:32 - INFO - ---------------------------------------------
2024-10-14 02:33 - INFO - ---------------------------------------------
2024-10-14 02:33 - INFO - Epoch: 09 | Time: 1m 18s
2024-10-14 02:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97297
2024-10-14 02:33 - INFO - 	 Train Loss: 0.106
2024-10-14 02:33 - INFO - 	 Val. Loss: 0.094
2024-10-14 02:33 - INFO - 	 ROC-AUC: 0.973
2024-10-14 02:33 - INFO - 	 PR-AUC: 0.757
2024-10-14 02:33 - INFO - 	 Recall for 0.4 precision: 0.950
2024-10-14 02:33 - INFO - 	 Best Val. Loss: 0.094
2024-10-14 02:33 - INFO - 	 Best ROC-AUC: 0.973
2024-10-14 02:33 - INFO - 	 Best PR-AUC: 0.757
2024-10-14 02:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 02:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.758
2024-10-14 02:33 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-14 02:33 - INFO - ---------------------------------------------
2024-10-14 02:35 - INFO - ---------------------------------------------
2024-10-14 02:35 - INFO - Epoch: 10 | Time: 1m 19s
2024-10-14 02:35 - INFO - 	 Train Loss: 0.106
2024-10-14 02:35 - INFO - 	 Val. Loss: 0.100
2024-10-14 02:35 - INFO - 	 ROC-AUC: 0.971
2024-10-14 02:35 - INFO - 	 PR-AUC: 0.742
2024-10-14 02:35 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-14 02:35 - INFO - 	 Best Val. Loss: 0.094
2024-10-14 02:35 - INFO - 	 Best ROC-AUC: 0.973
2024-10-14 02:35 - INFO - 	 Best PR-AUC: 0.757
2024-10-14 02:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-14 02:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.758
2024-10-14 02:35 - INFO - 	 Best Recall for 0.4 precision: 0.950
2024-10-14 02:35 - INFO - ---------------------------------------------
2024-10-14 02:37 - INFO - Fit the preprocessing pipeline
2024-10-14 02:37 - INFO - Training using device: cuda
2024-10-14 02:37 - INFO - Creating generators
2024-10-14 02:37 - INFO - The model has 651,257 trainable parameters
2024-10-14 02:37 - INFO - * Model:
2024-10-14 02:37 - INFO - * -----------
2024-10-14 02:37 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-14 02:37 - INFO - * -----------
2024-10-14 02:37 - INFO - Evaluating model based on: rocauc
2024-10-14 02:37 - INFO - Training..

2024-10-14 02:38 - INFO - ---------------------------------------------
2024-10-14 02:38 - INFO - Epoch: 01 | Time: 1m 21s
2024-10-14 02:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94084
2024-10-14 02:38 - INFO - 	 Train Loss: 0.222
2024-10-14 02:38 - INFO - 	 Val. Loss: 0.138
2024-10-14 02:38 - INFO - 	 ROC-AUC: 0.941
2024-10-14 02:38 - INFO - 	 PR-AUC: 0.497
2024-10-14 02:38 - INFO - 	 Recall for 0.4 precision: 0.822
2024-10-14 02:38 - INFO - 	 Best Val. Loss: 0.138
2024-10-14 02:38 - INFO - 	 Best ROC-AUC: 0.941
2024-10-14 02:38 - INFO - 	 Best PR-AUC: 0.497
2024-10-14 02:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-10-14 02:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.542
2024-10-14 02:38 - INFO - 	 Best Recall for 0.4 precision: 0.822
2024-10-14 02:38 - INFO - ---------------------------------------------
