2024-10-25 08:38 - INFO - Fit the preprocessing pipeline
2024-10-25 08:38 - INFO - Training using device: cuda
2024-10-25 08:38 - INFO - Creating generators
2024-10-25 08:38 - INFO - The model has 651,257 trainable parameters
2024-10-25 08:38 - INFO - * Model:
2024-10-25 08:38 - INFO - * -----------
2024-10-25 08:38 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 08:38 - INFO - * -----------
2024-10-25 08:38 - INFO - Evaluating model based on: rocauc
2024-10-25 08:38 - INFO - Training..

2024-10-25 08:38 - INFO - ---------------------------------------------
2024-10-25 08:38 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 08:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98024
2024-10-25 08:38 - INFO - 	 Train Loss: 0.162
2024-10-25 08:38 - INFO - 	 Val. Loss: 0.079
2024-10-25 08:38 - INFO - 	 ROC-AUC: 0.980
2024-10-25 08:38 - INFO - 	 PR-AUC: 0.810
2024-10-25 08:38 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:38 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 08:38 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 08:38 - INFO - 	 Best PR-AUC: 0.810
2024-10-25 08:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 08:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-25 08:38 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 08:38 - INFO - ---------------------------------------------
2024-10-25 08:39 - INFO - ---------------------------------------------
2024-10-25 08:39 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 08:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98467
2024-10-25 08:39 - INFO - 	 Train Loss: 0.084
2024-10-25 08:39 - INFO - 	 Val. Loss: 0.067
2024-10-25 08:39 - INFO - 	 ROC-AUC: 0.985
2024-10-25 08:39 - INFO - 	 PR-AUC: 0.867
2024-10-25 08:39 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 08:39 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 08:39 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 08:39 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 08:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 08:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 08:39 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 08:39 - INFO - ---------------------------------------------
2024-10-25 08:39 - INFO - ---------------------------------------------
2024-10-25 08:39 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 08:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98608
2024-10-25 08:39 - INFO - 	 Train Loss: 0.072
2024-10-25 08:39 - INFO - 	 Val. Loss: 0.064
2024-10-25 08:39 - INFO - 	 ROC-AUC: 0.986
2024-10-25 08:39 - INFO - 	 PR-AUC: 0.874
2024-10-25 08:39 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 08:39 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 08:39 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 08:39 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 08:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 08:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 08:39 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 08:39 - INFO - ---------------------------------------------
2024-10-25 08:40 - INFO - ---------------------------------------------
2024-10-25 08:40 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 08:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98702
2024-10-25 08:40 - INFO - 	 Train Loss: 0.068
2024-10-25 08:40 - INFO - 	 Val. Loss: 0.063
2024-10-25 08:40 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:40 - INFO - 	 PR-AUC: 0.883
2024-10-25 08:40 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 08:40 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 08:40 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:40 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 08:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 08:40 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 08:40 - INFO - ---------------------------------------------
2024-10-25 08:41 - INFO - ---------------------------------------------
2024-10-25 08:41 - INFO - Epoch: 05 | Time: 0m 30s
2024-10-25 08:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98708
2024-10-25 08:41 - INFO - 	 Train Loss: 0.064
2024-10-25 08:41 - INFO - 	 Val. Loss: 0.061
2024-10-25 08:41 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:41 - INFO - 	 PR-AUC: 0.881
2024-10-25 08:41 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:41 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 08:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:41 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 08:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 08:41 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 08:41 - INFO - ---------------------------------------------
2024-10-25 08:41 - INFO - ---------------------------------------------
2024-10-25 08:41 - INFO - Epoch: 06 | Time: 0m 30s
2024-10-25 08:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98739
2024-10-25 08:41 - INFO - 	 Train Loss: 0.064
2024-10-25 08:41 - INFO - 	 Val. Loss: 0.062
2024-10-25 08:41 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:41 - INFO - 	 PR-AUC: 0.878
2024-10-25 08:41 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:41 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 08:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:41 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 08:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 08:41 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 08:41 - INFO - ---------------------------------------------
2024-10-25 08:42 - INFO - ---------------------------------------------
2024-10-25 08:42 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 08:42 - INFO - 	 Train Loss: 0.061
2024-10-25 08:42 - INFO - 	 Val. Loss: 0.063
2024-10-25 08:42 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:42 - INFO - 	 PR-AUC: 0.883
2024-10-25 08:42 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 08:42 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 08:42 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:42 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 08:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 08:42 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 08:42 - INFO - ---------------------------------------------
2024-10-25 08:42 - INFO - ---------------------------------------------
2024-10-25 08:42 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 08:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98778
2024-10-25 08:42 - INFO - 	 Train Loss: 0.059
2024-10-25 08:42 - INFO - 	 Val. Loss: 0.059
2024-10-25 08:42 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:42 - INFO - 	 PR-AUC: 0.890
2024-10-25 08:42 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:42 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 08:42 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:42 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 08:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-25 08:42 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 08:42 - INFO - ---------------------------------------------
2024-10-25 08:43 - INFO - ---------------------------------------------
2024-10-25 08:43 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 08:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98865
2024-10-25 08:43 - INFO - 	 Train Loss: 0.057
2024-10-25 08:43 - INFO - 	 Val. Loss: 0.058
2024-10-25 08:43 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:43 - INFO - 	 PR-AUC: 0.899
2024-10-25 08:43 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:43 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 08:43 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:43 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 08:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 08:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:43 - INFO - ---------------------------------------------
2024-10-25 08:43 - INFO - ---------------------------------------------
2024-10-25 08:43 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 08:43 - INFO - 	 Train Loss: 0.056
2024-10-25 08:43 - INFO - 	 Val. Loss: 0.059
2024-10-25 08:43 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:43 - INFO - 	 PR-AUC: 0.897
2024-10-25 08:43 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:43 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 08:43 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:43 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 08:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 08:43 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:43 - INFO - ---------------------------------------------
2024-10-25 08:45 - INFO - Fit the preprocessing pipeline
2024-10-25 08:45 - INFO - Training using device: cuda
2024-10-25 08:45 - INFO - Creating generators
2024-10-25 08:45 - INFO - The model has 651,257 trainable parameters
2024-10-25 08:45 - INFO - * Model:
2024-10-25 08:45 - INFO - * -----------
2024-10-25 08:45 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 08:45 - INFO - * -----------
2024-10-25 08:45 - INFO - Evaluating model based on: rocauc
2024-10-25 08:45 - INFO - Training..

2024-10-25 08:45 - INFO - ---------------------------------------------
2024-10-25 08:45 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 08:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97795
2024-10-25 08:45 - INFO - 	 Train Loss: 0.157
2024-10-25 08:45 - INFO - 	 Val. Loss: 0.090
2024-10-25 08:45 - INFO - 	 ROC-AUC: 0.978
2024-10-25 08:45 - INFO - 	 PR-AUC: 0.803
2024-10-25 08:45 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 08:45 - INFO - 	 Best Val. Loss: 0.090
2024-10-25 08:45 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 08:45 - INFO - 	 Best PR-AUC: 0.803
2024-10-25 08:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 08:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-10-25 08:45 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 08:45 - INFO - ---------------------------------------------
2024-10-25 08:46 - INFO - ---------------------------------------------
2024-10-25 08:46 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 08:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98426
2024-10-25 08:46 - INFO - 	 Train Loss: 0.083
2024-10-25 08:46 - INFO - 	 Val. Loss: 0.069
2024-10-25 08:46 - INFO - 	 ROC-AUC: 0.984
2024-10-25 08:46 - INFO - 	 PR-AUC: 0.857
2024-10-25 08:46 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:46 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 08:46 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 08:46 - INFO - 	 Best PR-AUC: 0.857
2024-10-25 08:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 08:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-25 08:46 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 08:46 - INFO - ---------------------------------------------
2024-10-25 08:46 - INFO - ---------------------------------------------
2024-10-25 08:46 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 08:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98692
2024-10-25 08:46 - INFO - 	 Train Loss: 0.074
2024-10-25 08:46 - INFO - 	 Val. Loss: 0.062
2024-10-25 08:46 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:46 - INFO - 	 PR-AUC: 0.880
2024-10-25 08:46 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 08:46 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 08:46 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:46 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 08:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 08:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 08:46 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 08:46 - INFO - ---------------------------------------------
2024-10-25 08:47 - INFO - ---------------------------------------------
2024-10-25 08:47 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 08:47 - INFO - 	 Train Loss: 0.068
2024-10-25 08:47 - INFO - 	 Val. Loss: 0.063
2024-10-25 08:47 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:47 - INFO - 	 PR-AUC: 0.888
2024-10-25 08:47 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 08:47 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 08:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:47 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 08:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 08:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 08:47 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 08:47 - INFO - ---------------------------------------------
2024-10-25 08:47 - INFO - ---------------------------------------------
2024-10-25 08:47 - INFO - Epoch: 05 | Time: 0m 30s
2024-10-25 08:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98725
2024-10-25 08:47 - INFO - 	 Train Loss: 0.064
2024-10-25 08:47 - INFO - 	 Val. Loss: 0.060
2024-10-25 08:47 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:47 - INFO - 	 PR-AUC: 0.887
2024-10-25 08:47 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:47 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 08:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:47 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 08:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 08:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 08:47 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:47 - INFO - ---------------------------------------------
2024-10-25 08:48 - INFO - ---------------------------------------------
2024-10-25 08:48 - INFO - Epoch: 06 | Time: 0m 30s
2024-10-25 08:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98738
2024-10-25 08:48 - INFO - 	 Train Loss: 0.062
2024-10-25 08:48 - INFO - 	 Val. Loss: 0.060
2024-10-25 08:48 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:48 - INFO - 	 PR-AUC: 0.893
2024-10-25 08:48 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 08:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 08:48 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:48 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 08:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 08:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:48 - INFO - ---------------------------------------------
2024-10-25 08:48 - INFO - ---------------------------------------------
2024-10-25 08:48 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 08:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98781
2024-10-25 08:48 - INFO - 	 Train Loss: 0.060
2024-10-25 08:48 - INFO - 	 Val. Loss: 0.058
2024-10-25 08:48 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:48 - INFO - 	 PR-AUC: 0.899
2024-10-25 08:48 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 08:48 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 08:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:48 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 08:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 08:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:48 - INFO - ---------------------------------------------
2024-10-25 08:49 - INFO - ---------------------------------------------
2024-10-25 08:49 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 08:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98781
2024-10-25 08:49 - INFO - 	 Train Loss: 0.059
2024-10-25 08:49 - INFO - 	 Val. Loss: 0.057
2024-10-25 08:49 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:49 - INFO - 	 PR-AUC: 0.899
2024-10-25 08:49 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:49 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 08:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:49 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 08:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-25 08:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 08:49 - INFO - ---------------------------------------------
2024-10-25 08:49 - INFO - ---------------------------------------------
2024-10-25 08:49 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 08:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9888
2024-10-25 08:49 - INFO - 	 Train Loss: 0.057
2024-10-25 08:49 - INFO - 	 Val. Loss: 0.055
2024-10-25 08:49 - INFO - 	 ROC-AUC: 0.989
2024-10-25 08:49 - INFO - 	 PR-AUC: 0.907
2024-10-25 08:49 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 08:49 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 08:49 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:49 - INFO - 	 Best PR-AUC: 0.907
2024-10-25 08:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.908
2024-10-25 08:49 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:49 - INFO - ---------------------------------------------
2024-10-25 08:50 - INFO - ---------------------------------------------
2024-10-25 08:50 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 08:50 - INFO - 	 Train Loss: 0.056
2024-10-25 08:50 - INFO - 	 Val. Loss: 0.057
2024-10-25 08:50 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:50 - INFO - 	 PR-AUC: 0.900
2024-10-25 08:50 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:50 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 08:50 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 08:50 - INFO - 	 Best PR-AUC: 0.907
2024-10-25 08:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.908
2024-10-25 08:50 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:50 - INFO - ---------------------------------------------
2024-10-25 08:51 - INFO - Fit the preprocessing pipeline
2024-10-25 08:51 - INFO - Training using device: cuda
2024-10-25 08:51 - INFO - Creating generators
2024-10-25 08:51 - INFO - The model has 651,257 trainable parameters
2024-10-25 08:51 - INFO - * Model:
2024-10-25 08:51 - INFO - * -----------
2024-10-25 08:51 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 08:51 - INFO - * -----------
2024-10-25 08:51 - INFO - Evaluating model based on: rocauc
2024-10-25 08:51 - INFO - Training..

2024-10-25 08:52 - INFO - ---------------------------------------------
2024-10-25 08:52 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 08:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97927
2024-10-25 08:52 - INFO - 	 Train Loss: 0.152
2024-10-25 08:52 - INFO - 	 Val. Loss: 0.082
2024-10-25 08:52 - INFO - 	 ROC-AUC: 0.979
2024-10-25 08:52 - INFO - 	 PR-AUC: 0.789
2024-10-25 08:52 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 08:52 - INFO - 	 Best Val. Loss: 0.082
2024-10-25 08:52 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 08:52 - INFO - 	 Best PR-AUC: 0.789
2024-10-25 08:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 08:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-25 08:52 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 08:52 - INFO - ---------------------------------------------
2024-10-25 08:52 - INFO - ---------------------------------------------
2024-10-25 08:52 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 08:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9848
2024-10-25 08:52 - INFO - 	 Train Loss: 0.083
2024-10-25 08:52 - INFO - 	 Val. Loss: 0.069
2024-10-25 08:52 - INFO - 	 ROC-AUC: 0.985
2024-10-25 08:52 - INFO - 	 PR-AUC: 0.858
2024-10-25 08:52 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:52 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 08:52 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 08:52 - INFO - 	 Best PR-AUC: 0.858
2024-10-25 08:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 08:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-25 08:52 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 08:52 - INFO - ---------------------------------------------
2024-10-25 08:53 - INFO - ---------------------------------------------
2024-10-25 08:53 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 08:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9866
2024-10-25 08:53 - INFO - 	 Train Loss: 0.072
2024-10-25 08:53 - INFO - 	 Val. Loss: 0.065
2024-10-25 08:53 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:53 - INFO - 	 PR-AUC: 0.871
2024-10-25 08:53 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:53 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 08:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:53 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 08:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 08:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 08:53 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 08:53 - INFO - ---------------------------------------------
2024-10-25 08:53 - INFO - ---------------------------------------------
2024-10-25 08:53 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 08:53 - INFO - 	 Train Loss: 0.068
2024-10-25 08:53 - INFO - 	 Val. Loss: 0.070
2024-10-25 08:53 - INFO - 	 ROC-AUC: 0.986
2024-10-25 08:53 - INFO - 	 PR-AUC: 0.882
2024-10-25 08:53 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 08:53 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 08:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:53 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 08:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 08:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 08:53 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 08:53 - INFO - ---------------------------------------------
2024-10-25 08:54 - INFO - ---------------------------------------------
2024-10-25 08:54 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 08:54 - INFO - 	 Train Loss: 0.065
2024-10-25 08:54 - INFO - 	 Val. Loss: 0.063
2024-10-25 08:54 - INFO - 	 ROC-AUC: 0.986
2024-10-25 08:54 - INFO - 	 PR-AUC: 0.873
2024-10-25 08:54 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 08:54 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 08:54 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:54 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 08:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 08:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 08:54 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 08:54 - INFO - ---------------------------------------------
2024-10-25 08:54 - INFO - ---------------------------------------------
2024-10-25 08:54 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 08:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98668
2024-10-25 08:54 - INFO - 	 Train Loss: 0.062
2024-10-25 08:54 - INFO - 	 Val. Loss: 0.067
2024-10-25 08:54 - INFO - 	 ROC-AUC: 0.987
2024-10-25 08:54 - INFO - 	 PR-AUC: 0.875
2024-10-25 08:54 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:54 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 08:54 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 08:54 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 08:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 08:54 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 08:54 - INFO - ---------------------------------------------
2024-10-25 08:55 - INFO - ---------------------------------------------
2024-10-25 08:55 - INFO - Epoch: 07 | Time: 0m 30s
2024-10-25 08:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.988
2024-10-25 08:55 - INFO - 	 Train Loss: 0.060
2024-10-25 08:55 - INFO - 	 Val. Loss: 0.059
2024-10-25 08:55 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:55 - INFO - 	 PR-AUC: 0.890
2024-10-25 08:55 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 08:55 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 08:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:55 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 08:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 08:55 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:55 - INFO - ---------------------------------------------
2024-10-25 08:55 - INFO - ---------------------------------------------
2024-10-25 08:55 - INFO - Epoch: 08 | Time: 0m 30s
2024-10-25 08:55 - INFO - 	 Train Loss: 0.058
2024-10-25 08:55 - INFO - 	 Val. Loss: 0.070
2024-10-25 08:55 - INFO - 	 ROC-AUC: 0.986
2024-10-25 08:55 - INFO - 	 PR-AUC: 0.880
2024-10-25 08:55 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 08:55 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 08:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:55 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 08:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 08:55 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:55 - INFO - ---------------------------------------------
2024-10-25 08:56 - INFO - ---------------------------------------------
2024-10-25 08:56 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 08:56 - INFO - 	 Train Loss: 0.057
2024-10-25 08:56 - INFO - 	 Val. Loss: 0.060
2024-10-25 08:56 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:56 - INFO - 	 PR-AUC: 0.893
2024-10-25 08:56 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 08:56 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 08:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:56 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 08:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 08:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 08:56 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:56 - INFO - ---------------------------------------------
2024-10-25 08:56 - INFO - ---------------------------------------------
2024-10-25 08:56 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 08:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98829
2024-10-25 08:56 - INFO - 	 Train Loss: 0.055
2024-10-25 08:56 - INFO - 	 Val. Loss: 0.058
2024-10-25 08:56 - INFO - 	 ROC-AUC: 0.988
2024-10-25 08:56 - INFO - 	 PR-AUC: 0.897
2024-10-25 08:56 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 08:56 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 08:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 08:56 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 08:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 08:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 08:56 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 08:56 - INFO - ---------------------------------------------
2024-10-25 08:58 - INFO - Fit the preprocessing pipeline
2024-10-25 08:58 - INFO - Training using device: cuda
2024-10-25 08:58 - INFO - Creating generators
2024-10-25 08:58 - INFO - The model has 651,257 trainable parameters
2024-10-25 08:58 - INFO - * Model:
2024-10-25 08:58 - INFO - * -----------
2024-10-25 08:58 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 08:58 - INFO - * -----------
2024-10-25 08:58 - INFO - Evaluating model based on: rocauc
2024-10-25 08:58 - INFO - Training..

2024-10-25 08:58 - INFO - ---------------------------------------------
2024-10-25 08:58 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 08:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98102
2024-10-25 08:58 - INFO - 	 Train Loss: 0.150
2024-10-25 08:58 - INFO - 	 Val. Loss: 0.081
2024-10-25 08:58 - INFO - 	 ROC-AUC: 0.981
2024-10-25 08:58 - INFO - 	 PR-AUC: 0.788
2024-10-25 08:58 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 08:58 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 08:58 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 08:58 - INFO - 	 Best PR-AUC: 0.788
2024-10-25 08:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 08:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-25 08:58 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 08:58 - INFO - ---------------------------------------------
2024-10-25 08:59 - INFO - ---------------------------------------------
2024-10-25 08:59 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 08:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9856
2024-10-25 08:59 - INFO - 	 Train Loss: 0.081
2024-10-25 08:59 - INFO - 	 Val. Loss: 0.068
2024-10-25 08:59 - INFO - 	 ROC-AUC: 0.986
2024-10-25 08:59 - INFO - 	 PR-AUC: 0.873
2024-10-25 08:59 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 08:59 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 08:59 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 08:59 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 08:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 08:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 08:59 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 08:59 - INFO - ---------------------------------------------
2024-10-25 08:59 - INFO - ---------------------------------------------
2024-10-25 08:59 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 08:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98641
2024-10-25 08:59 - INFO - 	 Train Loss: 0.073
2024-10-25 08:59 - INFO - 	 Val. Loss: 0.064
2024-10-25 08:59 - INFO - 	 ROC-AUC: 0.986
2024-10-25 08:59 - INFO - 	 PR-AUC: 0.876
2024-10-25 08:59 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 08:59 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 08:59 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 08:59 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 08:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 08:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 08:59 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 08:59 - INFO - ---------------------------------------------
2024-10-25 09:00 - INFO - ---------------------------------------------
2024-10-25 09:00 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 09:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9869
2024-10-25 09:00 - INFO - 	 Train Loss: 0.069
2024-10-25 09:00 - INFO - 	 Val. Loss: 0.063
2024-10-25 09:00 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:00 - INFO - 	 PR-AUC: 0.882
2024-10-25 09:00 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:00 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 09:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:00 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 09:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 09:00 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 09:00 - INFO - ---------------------------------------------
2024-10-25 09:01 - INFO - ---------------------------------------------
2024-10-25 09:01 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 09:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98727
2024-10-25 09:01 - INFO - 	 Train Loss: 0.063
2024-10-25 09:01 - INFO - 	 Val. Loss: 0.062
2024-10-25 09:01 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:01 - INFO - 	 PR-AUC: 0.878
2024-10-25 09:01 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:01 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 09:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:01 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 09:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 09:01 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:01 - INFO - ---------------------------------------------
2024-10-25 09:01 - INFO - ---------------------------------------------
2024-10-25 09:01 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 09:01 - INFO - 	 Train Loss: 0.062
2024-10-25 09:01 - INFO - 	 Val. Loss: 0.070
2024-10-25 09:01 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:01 - INFO - 	 PR-AUC: 0.881
2024-10-25 09:01 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:01 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 09:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:01 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 09:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 09:01 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:01 - INFO - ---------------------------------------------
2024-10-25 09:02 - INFO - ---------------------------------------------
2024-10-25 09:02 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 09:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98764
2024-10-25 09:02 - INFO - 	 Train Loss: 0.060
2024-10-25 09:02 - INFO - 	 Val. Loss: 0.060
2024-10-25 09:02 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:02 - INFO - 	 PR-AUC: 0.890
2024-10-25 09:02 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:02 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:02 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:02 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 09:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-25 09:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:02 - INFO - ---------------------------------------------
2024-10-25 09:02 - INFO - ---------------------------------------------
2024-10-25 09:02 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 09:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98858
2024-10-25 09:02 - INFO - 	 Train Loss: 0.058
2024-10-25 09:02 - INFO - 	 Val. Loss: 0.058
2024-10-25 09:02 - INFO - 	 ROC-AUC: 0.989
2024-10-25 09:02 - INFO - 	 PR-AUC: 0.891
2024-10-25 09:02 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:02 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 09:02 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:02 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 09:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 09:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:02 - INFO - ---------------------------------------------
2024-10-25 09:03 - INFO - ---------------------------------------------
2024-10-25 09:03 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 09:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98868
2024-10-25 09:03 - INFO - 	 Train Loss: 0.056
2024-10-25 09:03 - INFO - 	 Val. Loss: 0.058
2024-10-25 09:03 - INFO - 	 ROC-AUC: 0.989
2024-10-25 09:03 - INFO - 	 PR-AUC: 0.897
2024-10-25 09:03 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 09:03 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 09:03 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:03 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 09:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 09:03 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:03 - INFO - ---------------------------------------------
2024-10-25 09:03 - INFO - ---------------------------------------------
2024-10-25 09:03 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 09:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98876
2024-10-25 09:03 - INFO - 	 Train Loss: 0.055
2024-10-25 09:03 - INFO - 	 Val. Loss: 0.056
2024-10-25 09:03 - INFO - 	 ROC-AUC: 0.989
2024-10-25 09:03 - INFO - 	 PR-AUC: 0.902
2024-10-25 09:03 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 09:03 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 09:03 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:03 - INFO - 	 Best PR-AUC: 0.902
2024-10-25 09:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 09:03 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:03 - INFO - ---------------------------------------------
2024-10-25 09:05 - INFO - Fit the preprocessing pipeline
2024-10-25 09:05 - INFO - Training using device: cuda
2024-10-25 09:05 - INFO - Creating generators
2024-10-25 09:05 - INFO - The model has 651,257 trainable parameters
2024-10-25 09:05 - INFO - * Model:
2024-10-25 09:05 - INFO - * -----------
2024-10-25 09:05 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 09:05 - INFO - * -----------
2024-10-25 09:05 - INFO - Evaluating model based on: rocauc
2024-10-25 09:05 - INFO - Training..

2024-10-25 09:05 - INFO - ---------------------------------------------
2024-10-25 09:05 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 09:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98113
2024-10-25 09:05 - INFO - 	 Train Loss: 0.161
2024-10-25 09:05 - INFO - 	 Val. Loss: 0.077
2024-10-25 09:05 - INFO - 	 ROC-AUC: 0.981
2024-10-25 09:05 - INFO - 	 PR-AUC: 0.836
2024-10-25 09:05 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 09:05 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 09:05 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 09:05 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 09:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 09:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-25 09:05 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 09:05 - INFO - ---------------------------------------------
2024-10-25 09:06 - INFO - ---------------------------------------------
2024-10-25 09:06 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 09:06 - INFO - 	 Train Loss: 0.084
2024-10-25 09:06 - INFO - 	 Val. Loss: 0.103
2024-10-25 09:06 - INFO - 	 ROC-AUC: 0.972
2024-10-25 09:06 - INFO - 	 PR-AUC: 0.806
2024-10-25 09:06 - INFO - 	 Recall for 0.4 precision: 0.934
2024-10-25 09:06 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 09:06 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 09:06 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 09:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 09:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-25 09:06 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 09:06 - INFO - ---------------------------------------------
2024-10-25 09:06 - INFO - ---------------------------------------------
2024-10-25 09:06 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 09:06 - INFO - 	 Train Loss: 0.073
2024-10-25 09:06 - INFO - 	 Val. Loss: 0.078
2024-10-25 09:06 - INFO - 	 ROC-AUC: 0.981
2024-10-25 09:06 - INFO - 	 PR-AUC: 0.844
2024-10-25 09:06 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-25 09:06 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 09:06 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 09:06 - INFO - 	 Best PR-AUC: 0.844
2024-10-25 09:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 09:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 09:06 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 09:06 - INFO - ---------------------------------------------
2024-10-25 09:07 - INFO - ---------------------------------------------
2024-10-25 09:07 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 09:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9864
2024-10-25 09:07 - INFO - 	 Train Loss: 0.068
2024-10-25 09:07 - INFO - 	 Val. Loss: 0.062
2024-10-25 09:07 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:07 - INFO - 	 PR-AUC: 0.883
2024-10-25 09:07 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:07 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 09:07 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:07 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 09:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-25 09:07 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 09:07 - INFO - ---------------------------------------------
2024-10-25 09:07 - INFO - ---------------------------------------------
2024-10-25 09:07 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 09:07 - INFO - 	 Train Loss: 0.065
2024-10-25 09:07 - INFO - 	 Val. Loss: 0.066
2024-10-25 09:07 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:07 - INFO - 	 PR-AUC: 0.883
2024-10-25 09:07 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:07 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 09:07 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:07 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 09:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 09:07 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 09:07 - INFO - ---------------------------------------------
2024-10-25 09:08 - INFO - ---------------------------------------------
2024-10-25 09:08 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 09:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98709
2024-10-25 09:08 - INFO - 	 Train Loss: 0.062
2024-10-25 09:08 - INFO - 	 Val. Loss: 0.065
2024-10-25 09:08 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:08 - INFO - 	 PR-AUC: 0.873
2024-10-25 09:08 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 09:08 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 09:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:08 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 09:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 09:08 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:08 - INFO - ---------------------------------------------
2024-10-25 09:08 - INFO - ---------------------------------------------
2024-10-25 09:08 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 09:08 - INFO - 	 Train Loss: 0.059
2024-10-25 09:08 - INFO - 	 Val. Loss: 0.064
2024-10-25 09:08 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:08 - INFO - 	 PR-AUC: 0.879
2024-10-25 09:08 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:08 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 09:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:08 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 09:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 09:08 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:08 - INFO - ---------------------------------------------
2024-10-25 09:09 - INFO - ---------------------------------------------
2024-10-25 09:09 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 09:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98751
2024-10-25 09:09 - INFO - 	 Train Loss: 0.058
2024-10-25 09:09 - INFO - 	 Val. Loss: 0.061
2024-10-25 09:09 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:09 - INFO - 	 PR-AUC: 0.886
2024-10-25 09:09 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:09 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 09:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:09 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 09:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 09:09 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:09 - INFO - ---------------------------------------------
2024-10-25 09:09 - INFO - ---------------------------------------------
2024-10-25 09:09 - INFO - Epoch: 09 | Time: 0m 30s
2024-10-25 09:09 - INFO - 	 Train Loss: 0.057
2024-10-25 09:09 - INFO - 	 Val. Loss: 0.066
2024-10-25 09:09 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:09 - INFO - 	 PR-AUC: 0.874
2024-10-25 09:09 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 09:09 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 09:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:09 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 09:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 09:09 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:09 - INFO - ---------------------------------------------
2024-10-25 09:10 - INFO - ---------------------------------------------
2024-10-25 09:10 - INFO - Epoch: 10 | Time: 0m 30s
2024-10-25 09:10 - INFO - 	 Train Loss: 0.055
2024-10-25 09:10 - INFO - 	 Val. Loss: 0.064
2024-10-25 09:10 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:10 - INFO - 	 PR-AUC: 0.881
2024-10-25 09:10 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:10 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 09:10 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:10 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 09:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 09:10 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:10 - INFO - ---------------------------------------------
2024-10-25 09:11 - INFO - Fit the preprocessing pipeline
2024-10-25 09:11 - INFO - Training using device: cuda
2024-10-25 09:11 - INFO - Creating generators
2024-10-25 09:11 - INFO - The model has 651,257 trainable parameters
2024-10-25 09:11 - INFO - * Model:
2024-10-25 09:11 - INFO - * -----------
2024-10-25 09:11 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 09:11 - INFO - * -----------
2024-10-25 09:11 - INFO - Evaluating model based on: rocauc
2024-10-25 09:11 - INFO - Training..

2024-10-25 09:12 - INFO - ---------------------------------------------
2024-10-25 09:12 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 09:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97228
2024-10-25 09:12 - INFO - 	 Train Loss: 0.158
2024-10-25 09:12 - INFO - 	 Val. Loss: 0.094
2024-10-25 09:12 - INFO - 	 ROC-AUC: 0.972
2024-10-25 09:12 - INFO - 	 PR-AUC: 0.768
2024-10-25 09:12 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-25 09:12 - INFO - 	 Best Val. Loss: 0.094
2024-10-25 09:12 - INFO - 	 Best ROC-AUC: 0.972
2024-10-25 09:12 - INFO - 	 Best PR-AUC: 0.768
2024-10-25 09:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-25 09:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.739
2024-10-25 09:12 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-25 09:12 - INFO - ---------------------------------------------
2024-10-25 09:12 - INFO - ---------------------------------------------
2024-10-25 09:12 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 09:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98556
2024-10-25 09:12 - INFO - 	 Train Loss: 0.084
2024-10-25 09:12 - INFO - 	 Val. Loss: 0.072
2024-10-25 09:12 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:12 - INFO - 	 PR-AUC: 0.872
2024-10-25 09:12 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:12 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 09:12 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:12 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 09:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 09:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-25 09:12 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 09:12 - INFO - ---------------------------------------------
2024-10-25 09:13 - INFO - ---------------------------------------------
2024-10-25 09:13 - INFO - Epoch: 03 | Time: 0m 30s
2024-10-25 09:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98644
2024-10-25 09:13 - INFO - 	 Train Loss: 0.074
2024-10-25 09:13 - INFO - 	 Val. Loss: 0.065
2024-10-25 09:13 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:13 - INFO - 	 PR-AUC: 0.871
2024-10-25 09:13 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:13 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 09:13 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:13 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 09:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-25 09:13 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 09:13 - INFO - ---------------------------------------------
2024-10-25 09:13 - INFO - ---------------------------------------------
2024-10-25 09:13 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 09:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98705
2024-10-25 09:13 - INFO - 	 Train Loss: 0.068
2024-10-25 09:13 - INFO - 	 Val. Loss: 0.066
2024-10-25 09:13 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:13 - INFO - 	 PR-AUC: 0.874
2024-10-25 09:13 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:13 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 09:13 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:13 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 09:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 09:13 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 09:13 - INFO - ---------------------------------------------
2024-10-25 09:14 - INFO - ---------------------------------------------
2024-10-25 09:14 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 09:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98803
2024-10-25 09:14 - INFO - 	 Train Loss: 0.065
2024-10-25 09:14 - INFO - 	 Val. Loss: 0.061
2024-10-25 09:14 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:14 - INFO - 	 PR-AUC: 0.885
2024-10-25 09:14 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:14 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 09:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:14 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 09:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 09:14 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:14 - INFO - ---------------------------------------------
2024-10-25 09:14 - INFO - ---------------------------------------------
2024-10-25 09:14 - INFO - Epoch: 06 | Time: 0m 30s
2024-10-25 09:14 - INFO - 	 Train Loss: 0.062
2024-10-25 09:14 - INFO - 	 Val. Loss: 0.059
2024-10-25 09:14 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:14 - INFO - 	 PR-AUC: 0.892
2024-10-25 09:14 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:14 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 09:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:14 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 09:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 09:14 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:14 - INFO - ---------------------------------------------
2024-10-25 09:15 - INFO - ---------------------------------------------
2024-10-25 09:15 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 09:15 - INFO - 	 Train Loss: 0.060
2024-10-25 09:15 - INFO - 	 Val. Loss: 0.063
2024-10-25 09:15 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:15 - INFO - 	 PR-AUC: 0.885
2024-10-25 09:15 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:15 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 09:15 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:15 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 09:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 09:15 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:15 - INFO - ---------------------------------------------
2024-10-25 09:16 - INFO - ---------------------------------------------
2024-10-25 09:16 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 09:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98826
2024-10-25 09:16 - INFO - 	 Train Loss: 0.059
2024-10-25 09:16 - INFO - 	 Val. Loss: 0.059
2024-10-25 09:16 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:16 - INFO - 	 PR-AUC: 0.893
2024-10-25 09:16 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:16 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 09:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:16 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 09:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 09:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:16 - INFO - ---------------------------------------------
2024-10-25 09:16 - INFO - ---------------------------------------------
2024-10-25 09:16 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 09:16 - INFO - 	 Train Loss: 0.057
2024-10-25 09:16 - INFO - 	 Val. Loss: 0.061
2024-10-25 09:16 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:16 - INFO - 	 PR-AUC: 0.896
2024-10-25 09:16 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:16 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 09:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:16 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 09:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 09:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:16 - INFO - ---------------------------------------------
2024-10-25 09:17 - INFO - ---------------------------------------------
2024-10-25 09:17 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 09:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98926
2024-10-25 09:17 - INFO - 	 Train Loss: 0.056
2024-10-25 09:17 - INFO - 	 Val. Loss: 0.057
2024-10-25 09:17 - INFO - 	 ROC-AUC: 0.989
2024-10-25 09:17 - INFO - 	 PR-AUC: 0.896
2024-10-25 09:17 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-25 09:17 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 09:17 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:17 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 09:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-25 09:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 09:17 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 09:17 - INFO - ---------------------------------------------
2024-10-25 09:18 - INFO - Fit the preprocessing pipeline
2024-10-25 09:18 - INFO - Training using device: cuda
2024-10-25 09:18 - INFO - Creating generators
2024-10-25 09:18 - INFO - The model has 651,257 trainable parameters
2024-10-25 09:18 - INFO - * Model:
2024-10-25 09:18 - INFO - * -----------
2024-10-25 09:18 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 09:18 - INFO - * -----------
2024-10-25 09:18 - INFO - Evaluating model based on: rocauc
2024-10-25 09:18 - INFO - Training..

2024-10-25 09:19 - INFO - ---------------------------------------------
2024-10-25 09:19 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 09:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97457
2024-10-25 09:19 - INFO - 	 Train Loss: 0.158
2024-10-25 09:19 - INFO - 	 Val. Loss: 0.092
2024-10-25 09:19 - INFO - 	 ROC-AUC: 0.975
2024-10-25 09:19 - INFO - 	 PR-AUC: 0.801
2024-10-25 09:19 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-25 09:19 - INFO - 	 Best Val. Loss: 0.092
2024-10-25 09:19 - INFO - 	 Best ROC-AUC: 0.975
2024-10-25 09:19 - INFO - 	 Best PR-AUC: 0.801
2024-10-25 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-25 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.770
2024-10-25 09:19 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-25 09:19 - INFO - ---------------------------------------------
2024-10-25 09:19 - INFO - ---------------------------------------------
2024-10-25 09:19 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 09:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98373
2024-10-25 09:19 - INFO - 	 Train Loss: 0.083
2024-10-25 09:19 - INFO - 	 Val. Loss: 0.078
2024-10-25 09:19 - INFO - 	 ROC-AUC: 0.984
2024-10-25 09:19 - INFO - 	 PR-AUC: 0.848
2024-10-25 09:19 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:19 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 09:19 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 09:19 - INFO - 	 Best PR-AUC: 0.848
2024-10-25 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 09:19 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 09:19 - INFO - ---------------------------------------------
2024-10-25 09:20 - INFO - ---------------------------------------------
2024-10-25 09:20 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 09:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98521
2024-10-25 09:20 - INFO - 	 Train Loss: 0.073
2024-10-25 09:20 - INFO - 	 Val. Loss: 0.070
2024-10-25 09:20 - INFO - 	 ROC-AUC: 0.985
2024-10-25 09:20 - INFO - 	 PR-AUC: 0.855
2024-10-25 09:20 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:20 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 09:20 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 09:20 - INFO - 	 Best PR-AUC: 0.855
2024-10-25 09:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 09:20 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 09:20 - INFO - ---------------------------------------------
2024-10-25 09:20 - INFO - ---------------------------------------------
2024-10-25 09:20 - INFO - Epoch: 04 | Time: 0m 33s
2024-10-25 09:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98619
2024-10-25 09:20 - INFO - 	 Train Loss: 0.069
2024-10-25 09:20 - INFO - 	 Val. Loss: 0.067
2024-10-25 09:20 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:20 - INFO - 	 PR-AUC: 0.863
2024-10-25 09:20 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:20 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 09:20 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:20 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 09:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 09:20 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 09:20 - INFO - ---------------------------------------------
2024-10-25 09:21 - INFO - ---------------------------------------------
2024-10-25 09:21 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 09:21 - INFO - 	 Train Loss: 0.066
2024-10-25 09:21 - INFO - 	 Val. Loss: 0.070
2024-10-25 09:21 - INFO - 	 ROC-AUC: 0.985
2024-10-25 09:21 - INFO - 	 PR-AUC: 0.859
2024-10-25 09:21 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 09:21 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 09:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:21 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 09:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 09:21 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 09:21 - INFO - ---------------------------------------------
2024-10-25 09:21 - INFO - ---------------------------------------------
2024-10-25 09:21 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 09:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98661
2024-10-25 09:21 - INFO - 	 Train Loss: 0.064
2024-10-25 09:21 - INFO - 	 Val. Loss: 0.063
2024-10-25 09:21 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:21 - INFO - 	 PR-AUC: 0.879
2024-10-25 09:21 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:21 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 09:21 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:21 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 09:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 09:21 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 09:21 - INFO - ---------------------------------------------
2024-10-25 09:22 - INFO - ---------------------------------------------
2024-10-25 09:22 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 09:22 - INFO - 	 Train Loss: 0.061
2024-10-25 09:22 - INFO - 	 Val. Loss: 0.067
2024-10-25 09:22 - INFO - 	 ROC-AUC: 0.985
2024-10-25 09:22 - INFO - 	 PR-AUC: 0.869
2024-10-25 09:22 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 09:22 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 09:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:22 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 09:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 09:22 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 09:22 - INFO - ---------------------------------------------
2024-10-25 09:22 - INFO - ---------------------------------------------
2024-10-25 09:22 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 09:22 - INFO - 	 Train Loss: 0.060
2024-10-25 09:22 - INFO - 	 Val. Loss: 0.064
2024-10-25 09:22 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:22 - INFO - 	 PR-AUC: 0.878
2024-10-25 09:22 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:22 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 09:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:22 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 09:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 09:22 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 09:22 - INFO - ---------------------------------------------
2024-10-25 09:23 - INFO - ---------------------------------------------
2024-10-25 09:23 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 09:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98739
2024-10-25 09:23 - INFO - 	 Train Loss: 0.058
2024-10-25 09:23 - INFO - 	 Val. Loss: 0.064
2024-10-25 09:23 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:23 - INFO - 	 PR-AUC: 0.877
2024-10-25 09:23 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:23 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 09:23 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:23 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 09:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 09:23 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:23 - INFO - ---------------------------------------------
2024-10-25 09:23 - INFO - ---------------------------------------------
2024-10-25 09:23 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 09:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98802
2024-10-25 09:23 - INFO - 	 Train Loss: 0.056
2024-10-25 09:23 - INFO - 	 Val. Loss: 0.060
2024-10-25 09:23 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:23 - INFO - 	 PR-AUC: 0.882
2024-10-25 09:23 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 09:23 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:23 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 09:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 09:23 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 09:23 - INFO - ---------------------------------------------
2024-10-25 09:25 - INFO - Fit the preprocessing pipeline
2024-10-25 09:25 - INFO - Training using device: cuda
2024-10-25 09:25 - INFO - Creating generators
2024-10-25 09:25 - INFO - The model has 651,257 trainable parameters
2024-10-25 09:25 - INFO - * Model:
2024-10-25 09:25 - INFO - * -----------
2024-10-25 09:25 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 09:25 - INFO - * -----------
2024-10-25 09:25 - INFO - Evaluating model based on: rocauc
2024-10-25 09:25 - INFO - Training..

2024-10-25 09:25 - INFO - ---------------------------------------------
2024-10-25 09:25 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 09:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97641
2024-10-25 09:25 - INFO - 	 Train Loss: 0.158
2024-10-25 09:25 - INFO - 	 Val. Loss: 0.090
2024-10-25 09:25 - INFO - 	 ROC-AUC: 0.976
2024-10-25 09:25 - INFO - 	 PR-AUC: 0.785
2024-10-25 09:25 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 09:25 - INFO - 	 Best Val. Loss: 0.090
2024-10-25 09:25 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 09:25 - INFO - 	 Best PR-AUC: 0.785
2024-10-25 09:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 09:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-10-25 09:25 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 09:25 - INFO - ---------------------------------------------
2024-10-25 09:26 - INFO - ---------------------------------------------
2024-10-25 09:26 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 09:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98393
2024-10-25 09:26 - INFO - 	 Train Loss: 0.085
2024-10-25 09:26 - INFO - 	 Val. Loss: 0.074
2024-10-25 09:26 - INFO - 	 ROC-AUC: 0.984
2024-10-25 09:26 - INFO - 	 PR-AUC: 0.857
2024-10-25 09:26 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:26 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 09:26 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 09:26 - INFO - 	 Best PR-AUC: 0.857
2024-10-25 09:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 09:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-25 09:26 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 09:26 - INFO - ---------------------------------------------
2024-10-25 09:26 - INFO - ---------------------------------------------
2024-10-25 09:26 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 09:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98585
2024-10-25 09:26 - INFO - 	 Train Loss: 0.073
2024-10-25 09:26 - INFO - 	 Val. Loss: 0.065
2024-10-25 09:26 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:26 - INFO - 	 PR-AUC: 0.868
2024-10-25 09:26 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:26 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 09:26 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:26 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 09:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 09:26 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 09:26 - INFO - ---------------------------------------------
2024-10-25 09:27 - INFO - ---------------------------------------------
2024-10-25 09:27 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 09:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98691
2024-10-25 09:27 - INFO - 	 Train Loss: 0.068
2024-10-25 09:27 - INFO - 	 Val. Loss: 0.063
2024-10-25 09:27 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:27 - INFO - 	 PR-AUC: 0.874
2024-10-25 09:27 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:27 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 09:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:27 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 09:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 09:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:27 - INFO - ---------------------------------------------
2024-10-25 09:27 - INFO - ---------------------------------------------
2024-10-25 09:27 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 09:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9879
2024-10-25 09:27 - INFO - 	 Train Loss: 0.064
2024-10-25 09:27 - INFO - 	 Val. Loss: 0.062
2024-10-25 09:27 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:27 - INFO - 	 PR-AUC: 0.875
2024-10-25 09:27 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 09:27 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 09:27 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:27 - INFO - 	 Best PR-AUC: 0.875
2024-10-25 09:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 09:27 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:27 - INFO - ---------------------------------------------
2024-10-25 09:28 - INFO - ---------------------------------------------
2024-10-25 09:28 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 09:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98808
2024-10-25 09:28 - INFO - 	 Train Loss: 0.062
2024-10-25 09:28 - INFO - 	 Val. Loss: 0.060
2024-10-25 09:28 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:28 - INFO - 	 PR-AUC: 0.891
2024-10-25 09:28 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:28 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:28 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:28 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 09:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 09:28 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:28 - INFO - ---------------------------------------------
2024-10-25 09:29 - INFO - ---------------------------------------------
2024-10-25 09:29 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 09:29 - INFO - 	 Train Loss: 0.061
2024-10-25 09:29 - INFO - 	 Val. Loss: 0.061
2024-10-25 09:29 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:29 - INFO - 	 PR-AUC: 0.880
2024-10-25 09:29 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:29 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:29 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:29 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 09:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 09:29 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:29 - INFO - ---------------------------------------------
2024-10-25 09:29 - INFO - ---------------------------------------------
2024-10-25 09:29 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 09:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98828
2024-10-25 09:29 - INFO - 	 Train Loss: 0.058
2024-10-25 09:29 - INFO - 	 Val. Loss: 0.059
2024-10-25 09:29 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:29 - INFO - 	 PR-AUC: 0.891
2024-10-25 09:29 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:29 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 09:29 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:29 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 09:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-25 09:29 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:29 - INFO - ---------------------------------------------
2024-10-25 09:30 - INFO - ---------------------------------------------
2024-10-25 09:30 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 09:30 - INFO - 	 Train Loss: 0.057
2024-10-25 09:30 - INFO - 	 Val. Loss: 0.058
2024-10-25 09:30 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:30 - INFO - 	 PR-AUC: 0.897
2024-10-25 09:30 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:30 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 09:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:30 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-25 09:30 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:30 - INFO - ---------------------------------------------
2024-10-25 09:30 - INFO - ---------------------------------------------
2024-10-25 09:30 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 09:30 - INFO - 	 Train Loss: 0.055
2024-10-25 09:30 - INFO - 	 Val. Loss: 0.060
2024-10-25 09:30 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:30 - INFO - 	 PR-AUC: 0.894
2024-10-25 09:30 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:30 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 09:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:30 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-25 09:30 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:30 - INFO - ---------------------------------------------
2024-10-25 09:32 - INFO - Fit the preprocessing pipeline
2024-10-25 09:32 - INFO - Training using device: cuda
2024-10-25 09:32 - INFO - Creating generators
2024-10-25 09:32 - INFO - The model has 651,257 trainable parameters
2024-10-25 09:32 - INFO - * Model:
2024-10-25 09:32 - INFO - * -----------
2024-10-25 09:32 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 09:32 - INFO - * -----------
2024-10-25 09:32 - INFO - Evaluating model based on: rocauc
2024-10-25 09:32 - INFO - Training..

2024-10-25 09:32 - INFO - ---------------------------------------------
2024-10-25 09:32 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 09:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98086
2024-10-25 09:32 - INFO - 	 Train Loss: 0.164
2024-10-25 09:32 - INFO - 	 Val. Loss: 0.076
2024-10-25 09:32 - INFO - 	 ROC-AUC: 0.981
2024-10-25 09:32 - INFO - 	 PR-AUC: 0.838
2024-10-25 09:32 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 09:32 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 09:32 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 09:32 - INFO - 	 Best PR-AUC: 0.838
2024-10-25 09:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 09:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.782
2024-10-25 09:32 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 09:32 - INFO - ---------------------------------------------
2024-10-25 09:33 - INFO - ---------------------------------------------
2024-10-25 09:33 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 09:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98603
2024-10-25 09:33 - INFO - 	 Train Loss: 0.082
2024-10-25 09:33 - INFO - 	 Val. Loss: 0.065
2024-10-25 09:33 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:33 - INFO - 	 PR-AUC: 0.876
2024-10-25 09:33 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:33 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 09:33 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:33 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 09:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 09:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 09:33 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 09:33 - INFO - ---------------------------------------------
2024-10-25 09:33 - INFO - ---------------------------------------------
2024-10-25 09:33 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 09:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98703
2024-10-25 09:33 - INFO - 	 Train Loss: 0.073
2024-10-25 09:33 - INFO - 	 Val. Loss: 0.065
2024-10-25 09:33 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:33 - INFO - 	 PR-AUC: 0.868
2024-10-25 09:33 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:33 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 09:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:33 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 09:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 09:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:33 - INFO - ---------------------------------------------
2024-10-25 09:34 - INFO - ---------------------------------------------
2024-10-25 09:34 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 09:34 - INFO - 	 Train Loss: 0.068
2024-10-25 09:34 - INFO - 	 Val. Loss: 0.066
2024-10-25 09:34 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:34 - INFO - 	 PR-AUC: 0.871
2024-10-25 09:34 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:34 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 09:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:34 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 09:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 09:34 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:34 - INFO - ---------------------------------------------
2024-10-25 09:34 - INFO - ---------------------------------------------
2024-10-25 09:34 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 09:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98749
2024-10-25 09:34 - INFO - 	 Train Loss: 0.066
2024-10-25 09:34 - INFO - 	 Val. Loss: 0.060
2024-10-25 09:34 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:34 - INFO - 	 PR-AUC: 0.880
2024-10-25 09:34 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:34 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:34 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 09:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 09:34 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:34 - INFO - ---------------------------------------------
2024-10-25 09:35 - INFO - ---------------------------------------------
2024-10-25 09:35 - INFO - Epoch: 06 | Time: 0m 30s
2024-10-25 09:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98785
2024-10-25 09:35 - INFO - 	 Train Loss: 0.061
2024-10-25 09:35 - INFO - 	 Val. Loss: 0.061
2024-10-25 09:35 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:35 - INFO - 	 PR-AUC: 0.881
2024-10-25 09:35 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:35 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:35 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:35 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 09:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 09:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:35 - INFO - ---------------------------------------------
2024-10-25 09:35 - INFO - ---------------------------------------------
2024-10-25 09:35 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 09:35 - INFO - 	 Train Loss: 0.060
2024-10-25 09:35 - INFO - 	 Val. Loss: 0.062
2024-10-25 09:35 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:35 - INFO - 	 PR-AUC: 0.889
2024-10-25 09:35 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:35 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:35 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:35 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 09:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 09:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:35 - INFO - ---------------------------------------------
2024-10-25 09:36 - INFO - ---------------------------------------------
2024-10-25 09:36 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 09:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98788
2024-10-25 09:36 - INFO - 	 Train Loss: 0.058
2024-10-25 09:36 - INFO - 	 Val. Loss: 0.060
2024-10-25 09:36 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:36 - INFO - 	 PR-AUC: 0.887
2024-10-25 09:36 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:36 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:36 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:36 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 09:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 09:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:36 - INFO - ---------------------------------------------
2024-10-25 09:36 - INFO - ---------------------------------------------
2024-10-25 09:36 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 09:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98812
2024-10-25 09:36 - INFO - 	 Train Loss: 0.056
2024-10-25 09:36 - INFO - 	 Val. Loss: 0.062
2024-10-25 09:36 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:36 - INFO - 	 PR-AUC: 0.896
2024-10-25 09:36 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:36 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:36 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:36 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 09:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 09:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:36 - INFO - ---------------------------------------------
2024-10-25 09:37 - INFO - ---------------------------------------------
2024-10-25 09:37 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 09:37 - INFO - 	 Train Loss: 0.055
2024-10-25 09:37 - INFO - 	 Val. Loss: 0.064
2024-10-25 09:37 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:37 - INFO - 	 PR-AUC: 0.895
2024-10-25 09:37 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:37 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:37 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 09:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 09:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:37 - INFO - ---------------------------------------------
2024-10-25 09:38 - INFO - Fit the preprocessing pipeline
2024-10-25 09:38 - INFO - Training using device: cuda
2024-10-25 09:38 - INFO - Creating generators
2024-10-25 09:38 - INFO - The model has 651,257 trainable parameters
2024-10-25 09:38 - INFO - * Model:
2024-10-25 09:38 - INFO - * -----------
2024-10-25 09:38 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 09:38 - INFO - * -----------
2024-10-25 09:38 - INFO - Evaluating model based on: rocauc
2024-10-25 09:38 - INFO - Training..

2024-10-25 09:39 - INFO - ---------------------------------------------
2024-10-25 09:39 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 09:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97928
2024-10-25 09:39 - INFO - 	 Train Loss: 0.157
2024-10-25 09:39 - INFO - 	 Val. Loss: 0.081
2024-10-25 09:39 - INFO - 	 ROC-AUC: 0.979
2024-10-25 09:39 - INFO - 	 PR-AUC: 0.793
2024-10-25 09:39 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 09:39 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 09:39 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 09:39 - INFO - 	 Best PR-AUC: 0.793
2024-10-25 09:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 09:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-25 09:39 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-25 09:39 - INFO - ---------------------------------------------
2024-10-25 09:39 - INFO - ---------------------------------------------
2024-10-25 09:39 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 09:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98219
2024-10-25 09:39 - INFO - 	 Train Loss: 0.082
2024-10-25 09:39 - INFO - 	 Val. Loss: 0.077
2024-10-25 09:39 - INFO - 	 ROC-AUC: 0.982
2024-10-25 09:39 - INFO - 	 PR-AUC: 0.842
2024-10-25 09:39 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 09:39 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 09:39 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 09:39 - INFO - 	 Best PR-AUC: 0.842
2024-10-25 09:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-25 09:39 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 09:39 - INFO - ---------------------------------------------
2024-10-25 09:40 - INFO - ---------------------------------------------
2024-10-25 09:40 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 09:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98614
2024-10-25 09:40 - INFO - 	 Train Loss: 0.073
2024-10-25 09:40 - INFO - 	 Val. Loss: 0.065
2024-10-25 09:40 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:40 - INFO - 	 PR-AUC: 0.870
2024-10-25 09:40 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:40 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 09:40 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:40 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 09:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 09:40 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 09:40 - INFO - ---------------------------------------------
2024-10-25 09:40 - INFO - ---------------------------------------------
2024-10-25 09:40 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 09:40 - INFO - 	 Train Loss: 0.068
2024-10-25 09:40 - INFO - 	 Val. Loss: 0.067
2024-10-25 09:40 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:40 - INFO - 	 PR-AUC: 0.868
2024-10-25 09:40 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:40 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 09:40 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:40 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 09:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 09:40 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 09:40 - INFO - ---------------------------------------------
2024-10-25 09:41 - INFO - ---------------------------------------------
2024-10-25 09:41 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 09:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98871
2024-10-25 09:41 - INFO - 	 Train Loss: 0.065
2024-10-25 09:41 - INFO - 	 Val. Loss: 0.058
2024-10-25 09:41 - INFO - 	 ROC-AUC: 0.989
2024-10-25 09:41 - INFO - 	 PR-AUC: 0.878
2024-10-25 09:41 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 09:41 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 09:41 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:41 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 09:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 09:41 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:41 - INFO - ---------------------------------------------
2024-10-25 09:41 - INFO - ---------------------------------------------
2024-10-25 09:41 - INFO - Epoch: 06 | Time: 0m 30s
2024-10-25 09:41 - INFO - 	 Train Loss: 0.061
2024-10-25 09:41 - INFO - 	 Val. Loss: 0.061
2024-10-25 09:41 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:41 - INFO - 	 PR-AUC: 0.886
2024-10-25 09:41 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 09:41 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 09:41 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:41 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 09:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-25 09:41 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:41 - INFO - ---------------------------------------------
2024-10-25 09:42 - INFO - ---------------------------------------------
2024-10-25 09:42 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 09:42 - INFO - 	 Train Loss: 0.060
2024-10-25 09:42 - INFO - 	 Val. Loss: 0.059
2024-10-25 09:42 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:42 - INFO - 	 PR-AUC: 0.894
2024-10-25 09:42 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:42 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 09:42 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:42 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 09:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 09:42 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:42 - INFO - ---------------------------------------------
2024-10-25 09:42 - INFO - ---------------------------------------------
2024-10-25 09:42 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 09:42 - INFO - 	 Train Loss: 0.057
2024-10-25 09:42 - INFO - 	 Val. Loss: 0.059
2024-10-25 09:42 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:42 - INFO - 	 PR-AUC: 0.888
2024-10-25 09:42 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:42 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 09:42 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:42 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 09:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 09:42 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 09:42 - INFO - ---------------------------------------------
2024-10-25 09:44 - INFO - Fit the preprocessing pipeline
2024-10-25 09:44 - INFO - Training using device: cuda
2024-10-25 09:44 - INFO - Creating generators
2024-10-25 09:45 - INFO - The model has 651,257 trainable parameters
2024-10-25 09:45 - INFO - * Model:
2024-10-25 09:45 - INFO - * -----------
2024-10-25 09:45 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 09:45 - INFO - * -----------
2024-10-25 09:45 - INFO - Evaluating model based on: rocauc
2024-10-25 09:45 - INFO - Training..

2024-10-25 09:45 - INFO - ---------------------------------------------
2024-10-25 09:45 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 09:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97749
2024-10-25 09:45 - INFO - 	 Train Loss: 0.161
2024-10-25 09:45 - INFO - 	 Val. Loss: 0.084
2024-10-25 09:45 - INFO - 	 ROC-AUC: 0.977
2024-10-25 09:45 - INFO - 	 PR-AUC: 0.809
2024-10-25 09:45 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-25 09:45 - INFO - 	 Best Val. Loss: 0.084
2024-10-25 09:45 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 09:45 - INFO - 	 Best PR-AUC: 0.809
2024-10-25 09:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 09:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.775
2024-10-25 09:45 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-25 09:45 - INFO - ---------------------------------------------
2024-10-25 09:46 - INFO - ---------------------------------------------
2024-10-25 09:46 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 09:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98274
2024-10-25 09:46 - INFO - 	 Train Loss: 0.084
2024-10-25 09:46 - INFO - 	 Val. Loss: 0.071
2024-10-25 09:46 - INFO - 	 ROC-AUC: 0.983
2024-10-25 09:46 - INFO - 	 PR-AUC: 0.856
2024-10-25 09:46 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 09:46 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 09:46 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 09:46 - INFO - 	 Best PR-AUC: 0.856
2024-10-25 09:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-25 09:46 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 09:46 - INFO - ---------------------------------------------
2024-10-25 09:46 - INFO - ---------------------------------------------
2024-10-25 09:46 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 09:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98574
2024-10-25 09:46 - INFO - 	 Train Loss: 0.074
2024-10-25 09:46 - INFO - 	 Val. Loss: 0.064
2024-10-25 09:46 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:46 - INFO - 	 PR-AUC: 0.873
2024-10-25 09:46 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:46 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 09:46 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:46 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 09:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 09:46 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 09:46 - INFO - ---------------------------------------------
2024-10-25 09:47 - INFO - ---------------------------------------------
2024-10-25 09:47 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 09:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98602
2024-10-25 09:47 - INFO - 	 Train Loss: 0.068
2024-10-25 09:47 - INFO - 	 Val. Loss: 0.063
2024-10-25 09:47 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:47 - INFO - 	 PR-AUC: 0.883
2024-10-25 09:47 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:47 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 09:47 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:47 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 09:47 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 09:47 - INFO - ---------------------------------------------
2024-10-25 09:47 - INFO - ---------------------------------------------
2024-10-25 09:47 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 09:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98764
2024-10-25 09:47 - INFO - 	 Train Loss: 0.064
2024-10-25 09:47 - INFO - 	 Val. Loss: 0.061
2024-10-25 09:47 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:47 - INFO - 	 PR-AUC: 0.889
2024-10-25 09:47 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:47 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 09:47 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:47 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 09:47 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:47 - INFO - ---------------------------------------------
2024-10-25 09:48 - INFO - ---------------------------------------------
2024-10-25 09:48 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 09:48 - INFO - 	 Train Loss: 0.062
2024-10-25 09:48 - INFO - 	 Val. Loss: 0.060
2024-10-25 09:48 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:48 - INFO - 	 PR-AUC: 0.890
2024-10-25 09:48 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 09:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:48 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 09:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 09:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:48 - INFO - ---------------------------------------------
2024-10-25 09:48 - INFO - ---------------------------------------------
2024-10-25 09:48 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 09:48 - INFO - 	 Train Loss: 0.058
2024-10-25 09:48 - INFO - 	 Val. Loss: 0.059
2024-10-25 09:48 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:48 - INFO - 	 PR-AUC: 0.897
2024-10-25 09:48 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 09:48 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 09:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:48 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 09:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 09:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:48 - INFO - ---------------------------------------------
2024-10-25 09:49 - INFO - ---------------------------------------------
2024-10-25 09:49 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 09:49 - INFO - 	 Train Loss: 0.057
2024-10-25 09:49 - INFO - 	 Val. Loss: 0.060
2024-10-25 09:49 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:49 - INFO - 	 PR-AUC: 0.901
2024-10-25 09:49 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:49 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 09:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:49 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 09:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 09:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-25 09:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:49 - INFO - ---------------------------------------------
2024-10-25 09:49 - INFO - ---------------------------------------------
2024-10-25 09:49 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 09:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98859
2024-10-25 09:49 - INFO - 	 Train Loss: 0.056
2024-10-25 09:49 - INFO - 	 Val. Loss: 0.057
2024-10-25 09:49 - INFO - 	 ROC-AUC: 0.989
2024-10-25 09:49 - INFO - 	 PR-AUC: 0.905
2024-10-25 09:49 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:49 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 09:49 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:49 - INFO - 	 Best PR-AUC: 0.905
2024-10-25 09:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-25 09:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:49 - INFO - ---------------------------------------------
2024-10-25 09:50 - INFO - ---------------------------------------------
2024-10-25 09:50 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 09:50 - INFO - 	 Train Loss: 0.055
2024-10-25 09:50 - INFO - 	 Val. Loss: 0.059
2024-10-25 09:50 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:50 - INFO - 	 PR-AUC: 0.901
2024-10-25 09:50 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 09:50 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 09:50 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:50 - INFO - 	 Best PR-AUC: 0.905
2024-10-25 09:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-25 09:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 09:50 - INFO - ---------------------------------------------
2024-10-25 09:51 - INFO - Fit the preprocessing pipeline
2024-10-25 09:51 - INFO - Training using device: cuda
2024-10-25 09:51 - INFO - Creating generators
2024-10-25 09:51 - INFO - The model has 651,257 trainable parameters
2024-10-25 09:51 - INFO - * Model:
2024-10-25 09:51 - INFO - * -----------
2024-10-25 09:51 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 09:51 - INFO - * -----------
2024-10-25 09:51 - INFO - Evaluating model based on: rocauc
2024-10-25 09:51 - INFO - Training..

2024-10-25 09:52 - INFO - ---------------------------------------------
2024-10-25 09:52 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 09:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97805
2024-10-25 09:52 - INFO - 	 Train Loss: 0.150
2024-10-25 09:52 - INFO - 	 Val. Loss: 0.093
2024-10-25 09:52 - INFO - 	 ROC-AUC: 0.978
2024-10-25 09:52 - INFO - 	 PR-AUC: 0.815
2024-10-25 09:52 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 09:52 - INFO - 	 Best Val. Loss: 0.093
2024-10-25 09:52 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 09:52 - INFO - 	 Best PR-AUC: 0.815
2024-10-25 09:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 09:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-10-25 09:52 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 09:52 - INFO - ---------------------------------------------
2024-10-25 09:52 - INFO - ---------------------------------------------
2024-10-25 09:52 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 09:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98483
2024-10-25 09:52 - INFO - 	 Train Loss: 0.083
2024-10-25 09:52 - INFO - 	 Val. Loss: 0.065
2024-10-25 09:52 - INFO - 	 ROC-AUC: 0.985
2024-10-25 09:52 - INFO - 	 PR-AUC: 0.869
2024-10-25 09:52 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 09:52 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 09:52 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 09:52 - INFO - 	 Best PR-AUC: 0.869
2024-10-25 09:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 09:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 09:52 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 09:52 - INFO - ---------------------------------------------
2024-10-25 09:53 - INFO - ---------------------------------------------
2024-10-25 09:53 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 09:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98682
2024-10-25 09:53 - INFO - 	 Train Loss: 0.072
2024-10-25 09:53 - INFO - 	 Val. Loss: 0.066
2024-10-25 09:53 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:53 - INFO - 	 PR-AUC: 0.879
2024-10-25 09:53 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:53 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 09:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:53 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 09:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 09:53 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 09:53 - INFO - ---------------------------------------------
2024-10-25 09:53 - INFO - ---------------------------------------------
2024-10-25 09:53 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 09:53 - INFO - 	 Train Loss: 0.067
2024-10-25 09:53 - INFO - 	 Val. Loss: 0.062
2024-10-25 09:53 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:53 - INFO - 	 PR-AUC: 0.876
2024-10-25 09:53 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:53 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 09:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:53 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 09:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-25 09:53 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 09:53 - INFO - ---------------------------------------------
2024-10-25 09:54 - INFO - ---------------------------------------------
2024-10-25 09:54 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 09:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98749
2024-10-25 09:54 - INFO - 	 Train Loss: 0.063
2024-10-25 09:54 - INFO - 	 Val. Loss: 0.062
2024-10-25 09:54 - INFO - 	 ROC-AUC: 0.987
2024-10-25 09:54 - INFO - 	 PR-AUC: 0.893
2024-10-25 09:54 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:54 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 09:54 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 09:54 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 09:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 09:54 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 09:54 - INFO - ---------------------------------------------
2024-10-25 09:55 - INFO - ---------------------------------------------
2024-10-25 09:55 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 09:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.988
2024-10-25 09:55 - INFO - 	 Train Loss: 0.061
2024-10-25 09:55 - INFO - 	 Val. Loss: 0.061
2024-10-25 09:55 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:55 - INFO - 	 PR-AUC: 0.892
2024-10-25 09:55 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 09:55 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 09:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:55 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 09:55 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 09:55 - INFO - ---------------------------------------------
2024-10-25 09:55 - INFO - ---------------------------------------------
2024-10-25 09:55 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 09:55 - INFO - 	 Train Loss: 0.059
2024-10-25 09:55 - INFO - 	 Val. Loss: 0.063
2024-10-25 09:55 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:55 - INFO - 	 PR-AUC: 0.888
2024-10-25 09:55 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:55 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 09:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:55 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 09:55 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 09:55 - INFO - ---------------------------------------------
2024-10-25 09:56 - INFO - ---------------------------------------------
2024-10-25 09:56 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 09:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98802
2024-10-25 09:56 - INFO - 	 Train Loss: 0.057
2024-10-25 09:56 - INFO - 	 Val. Loss: 0.062
2024-10-25 09:56 - INFO - 	 ROC-AUC: 0.988
2024-10-25 09:56 - INFO - 	 PR-AUC: 0.896
2024-10-25 09:56 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 09:56 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 09:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 09:56 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 09:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 09:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 09:56 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 09:56 - INFO - ---------------------------------------------
2024-10-25 09:56 - INFO - ---------------------------------------------
2024-10-25 09:56 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 09:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98892
2024-10-25 09:56 - INFO - 	 Train Loss: 0.057
2024-10-25 09:56 - INFO - 	 Val. Loss: 0.057
2024-10-25 09:56 - INFO - 	 ROC-AUC: 0.989
2024-10-25 09:56 - INFO - 	 PR-AUC: 0.900
2024-10-25 09:56 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:56 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 09:56 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:56 - INFO - 	 Best PR-AUC: 0.900
2024-10-25 09:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 09:56 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 09:56 - INFO - ---------------------------------------------
2024-10-25 09:57 - INFO - ---------------------------------------------
2024-10-25 09:57 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 09:57 - INFO - 	 Train Loss: 0.055
2024-10-25 09:57 - INFO - 	 Val. Loss: 0.056
2024-10-25 09:57 - INFO - 	 ROC-AUC: 0.989
2024-10-25 09:57 - INFO - 	 PR-AUC: 0.900
2024-10-25 09:57 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 09:57 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 09:57 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 09:57 - INFO - 	 Best PR-AUC: 0.900
2024-10-25 09:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 09:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 09:57 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 09:57 - INFO - ---------------------------------------------
2024-10-25 09:58 - INFO - Fit the preprocessing pipeline
2024-10-25 09:58 - INFO - Training using device: cuda
2024-10-25 09:58 - INFO - Creating generators
2024-10-25 09:58 - INFO - The model has 651,257 trainable parameters
2024-10-25 09:58 - INFO - * Model:
2024-10-25 09:58 - INFO - * -----------
2024-10-25 09:58 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 09:58 - INFO - * -----------
2024-10-25 09:58 - INFO - Evaluating model based on: rocauc
2024-10-25 09:58 - INFO - Training..

2024-10-25 09:59 - INFO - ---------------------------------------------
2024-10-25 09:59 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 09:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97932
2024-10-25 09:59 - INFO - 	 Train Loss: 0.150
2024-10-25 09:59 - INFO - 	 Val. Loss: 0.078
2024-10-25 09:59 - INFO - 	 ROC-AUC: 0.979
2024-10-25 09:59 - INFO - 	 PR-AUC: 0.829
2024-10-25 09:59 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 09:59 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 09:59 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 09:59 - INFO - 	 Best PR-AUC: 0.829
2024-10-25 09:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 09:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-25 09:59 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 09:59 - INFO - ---------------------------------------------
2024-10-25 09:59 - INFO - ---------------------------------------------
2024-10-25 09:59 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 09:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98566
2024-10-25 09:59 - INFO - 	 Train Loss: 0.082
2024-10-25 09:59 - INFO - 	 Val. Loss: 0.066
2024-10-25 09:59 - INFO - 	 ROC-AUC: 0.986
2024-10-25 09:59 - INFO - 	 PR-AUC: 0.859
2024-10-25 09:59 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 09:59 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 09:59 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 09:59 - INFO - 	 Best PR-AUC: 0.859
2024-10-25 09:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 09:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-25 09:59 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 09:59 - INFO - ---------------------------------------------
2024-10-25 10:00 - INFO - ---------------------------------------------
2024-10-25 10:00 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 10:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98676
2024-10-25 10:00 - INFO - 	 Train Loss: 0.073
2024-10-25 10:00 - INFO - 	 Val. Loss: 0.064
2024-10-25 10:00 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:00 - INFO - 	 PR-AUC: 0.866
2024-10-25 10:00 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:00 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 10:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:00 - INFO - 	 Best PR-AUC: 0.866
2024-10-25 10:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 10:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-25 10:00 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:00 - INFO - ---------------------------------------------
2024-10-25 10:00 - INFO - ---------------------------------------------
2024-10-25 10:00 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 10:00 - INFO - 	 Train Loss: 0.069
2024-10-25 10:00 - INFO - 	 Val. Loss: 0.063
2024-10-25 10:00 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:00 - INFO - 	 PR-AUC: 0.881
2024-10-25 10:00 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 10:00 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 10:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:00 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 10:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 10:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 10:00 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:00 - INFO - ---------------------------------------------
2024-10-25 10:01 - INFO - ---------------------------------------------
2024-10-25 10:01 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 10:01 - INFO - 	 Train Loss: 0.064
2024-10-25 10:01 - INFO - 	 Val. Loss: 0.070
2024-10-25 10:01 - INFO - 	 ROC-AUC: 0.986
2024-10-25 10:01 - INFO - 	 PR-AUC: 0.875
2024-10-25 10:01 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 10:01 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 10:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:01 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 10:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 10:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 10:01 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:01 - INFO - ---------------------------------------------
2024-10-25 10:01 - INFO - ---------------------------------------------
2024-10-25 10:01 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 10:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98831
2024-10-25 10:01 - INFO - 	 Train Loss: 0.061
2024-10-25 10:01 - INFO - 	 Val. Loss: 0.059
2024-10-25 10:01 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:01 - INFO - 	 PR-AUC: 0.887
2024-10-25 10:01 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:01 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 10:01 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:01 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 10:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-25 10:01 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:01 - INFO - ---------------------------------------------
2024-10-25 10:02 - INFO - ---------------------------------------------
2024-10-25 10:02 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 10:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98836
2024-10-25 10:02 - INFO - 	 Train Loss: 0.060
2024-10-25 10:02 - INFO - 	 Val. Loss: 0.057
2024-10-25 10:02 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:02 - INFO - 	 PR-AUC: 0.893
2024-10-25 10:02 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:02 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 10:02 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:02 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 10:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-25 10:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:02 - INFO - ---------------------------------------------
2024-10-25 10:02 - INFO - ---------------------------------------------
2024-10-25 10:02 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 10:02 - INFO - 	 Train Loss: 0.058
2024-10-25 10:02 - INFO - 	 Val. Loss: 0.061
2024-10-25 10:02 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:02 - INFO - 	 PR-AUC: 0.883
2024-10-25 10:02 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 10:02 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 10:02 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:02 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 10:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-25 10:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:02 - INFO - ---------------------------------------------
2024-10-25 10:03 - INFO - ---------------------------------------------
2024-10-25 10:03 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 10:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98854
2024-10-25 10:03 - INFO - 	 Train Loss: 0.057
2024-10-25 10:03 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:03 - INFO - 	 ROC-AUC: 0.989
2024-10-25 10:03 - INFO - 	 PR-AUC: 0.894
2024-10-25 10:03 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:03 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 10:03 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 10:03 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 10:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-25 10:03 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:03 - INFO - ---------------------------------------------
2024-10-25 10:03 - INFO - ---------------------------------------------
2024-10-25 10:03 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 10:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98913
2024-10-25 10:03 - INFO - 	 Train Loss: 0.055
2024-10-25 10:03 - INFO - 	 Val. Loss: 0.055
2024-10-25 10:03 - INFO - 	 ROC-AUC: 0.989
2024-10-25 10:03 - INFO - 	 PR-AUC: 0.905
2024-10-25 10:03 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 10:03 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 10:03 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 10:03 - INFO - 	 Best PR-AUC: 0.905
2024-10-25 10:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-25 10:03 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 10:03 - INFO - ---------------------------------------------
2024-10-25 10:05 - INFO - Fit the preprocessing pipeline
2024-10-25 10:05 - INFO - Training using device: cuda
2024-10-25 10:05 - INFO - Creating generators
2024-10-25 10:05 - INFO - The model has 651,257 trainable parameters
2024-10-25 10:05 - INFO - * Model:
2024-10-25 10:05 - INFO - * -----------
2024-10-25 10:05 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 10:05 - INFO - * -----------
2024-10-25 10:05 - INFO - Evaluating model based on: rocauc
2024-10-25 10:05 - INFO - Training..

2024-10-25 10:05 - INFO - ---------------------------------------------
2024-10-25 10:05 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 10:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97596
2024-10-25 10:05 - INFO - 	 Train Loss: 0.146
2024-10-25 10:05 - INFO - 	 Val. Loss: 0.117
2024-10-25 10:05 - INFO - 	 ROC-AUC: 0.976
2024-10-25 10:05 - INFO - 	 PR-AUC: 0.779
2024-10-25 10:05 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-25 10:05 - INFO - 	 Best Val. Loss: 0.117
2024-10-25 10:05 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 10:05 - INFO - 	 Best PR-AUC: 0.779
2024-10-25 10:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 10:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-10-25 10:05 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-25 10:05 - INFO - ---------------------------------------------
2024-10-25 10:06 - INFO - ---------------------------------------------
2024-10-25 10:06 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 10:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98207
2024-10-25 10:06 - INFO - 	 Train Loss: 0.081
2024-10-25 10:06 - INFO - 	 Val. Loss: 0.081
2024-10-25 10:06 - INFO - 	 ROC-AUC: 0.982
2024-10-25 10:06 - INFO - 	 PR-AUC: 0.845
2024-10-25 10:06 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 10:06 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 10:06 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 10:06 - INFO - 	 Best PR-AUC: 0.845
2024-10-25 10:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 10:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-25 10:06 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 10:06 - INFO - ---------------------------------------------
2024-10-25 10:06 - INFO - ---------------------------------------------
2024-10-25 10:06 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 10:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98541
2024-10-25 10:06 - INFO - 	 Train Loss: 0.072
2024-10-25 10:06 - INFO - 	 Val. Loss: 0.072
2024-10-25 10:06 - INFO - 	 ROC-AUC: 0.985
2024-10-25 10:06 - INFO - 	 PR-AUC: 0.858
2024-10-25 10:06 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:06 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 10:06 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 10:06 - INFO - 	 Best PR-AUC: 0.858
2024-10-25 10:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 10:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-25 10:06 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:06 - INFO - ---------------------------------------------
2024-10-25 10:07 - INFO - ---------------------------------------------
2024-10-25 10:07 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 10:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98565
2024-10-25 10:07 - INFO - 	 Train Loss: 0.068
2024-10-25 10:07 - INFO - 	 Val. Loss: 0.068
2024-10-25 10:07 - INFO - 	 ROC-AUC: 0.986
2024-10-25 10:07 - INFO - 	 PR-AUC: 0.866
2024-10-25 10:07 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 10:07 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 10:07 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 10:07 - INFO - 	 Best PR-AUC: 0.866
2024-10-25 10:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 10:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 10:07 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:07 - INFO - ---------------------------------------------
2024-10-25 10:08 - INFO - ---------------------------------------------
2024-10-25 10:08 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 10:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98649
2024-10-25 10:08 - INFO - 	 Train Loss: 0.064
2024-10-25 10:08 - INFO - 	 Val. Loss: 0.070
2024-10-25 10:08 - INFO - 	 ROC-AUC: 0.986
2024-10-25 10:08 - INFO - 	 PR-AUC: 0.879
2024-10-25 10:08 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 10:08 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 10:08 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 10:08 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 10:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 10:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-25 10:08 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:08 - INFO - ---------------------------------------------
2024-10-25 10:08 - INFO - ---------------------------------------------
2024-10-25 10:08 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 10:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98732
2024-10-25 10:08 - INFO - 	 Train Loss: 0.062
2024-10-25 10:08 - INFO - 	 Val. Loss: 0.061
2024-10-25 10:08 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:08 - INFO - 	 PR-AUC: 0.888
2024-10-25 10:08 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 10:08 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 10:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:08 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 10:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 10:08 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:08 - INFO - ---------------------------------------------
2024-10-25 10:09 - INFO - ---------------------------------------------
2024-10-25 10:09 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 10:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98772
2024-10-25 10:09 - INFO - 	 Train Loss: 0.059
2024-10-25 10:09 - INFO - 	 Val. Loss: 0.061
2024-10-25 10:09 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:09 - INFO - 	 PR-AUC: 0.882
2024-10-25 10:09 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 10:09 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 10:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:09 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 10:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 10:09 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:09 - INFO - ---------------------------------------------
2024-10-25 10:09 - INFO - ---------------------------------------------
2024-10-25 10:09 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 10:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98815
2024-10-25 10:09 - INFO - 	 Train Loss: 0.057
2024-10-25 10:09 - INFO - 	 Val. Loss: 0.059
2024-10-25 10:09 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:09 - INFO - 	 PR-AUC: 0.887
2024-10-25 10:09 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:09 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 10:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:09 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 10:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 10:09 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:09 - INFO - ---------------------------------------------
2024-10-25 10:10 - INFO - ---------------------------------------------
2024-10-25 10:10 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 10:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98838
2024-10-25 10:10 - INFO - 	 Train Loss: 0.056
2024-10-25 10:10 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:10 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:10 - INFO - 	 PR-AUC: 0.895
2024-10-25 10:10 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:10 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 10:10 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:10 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 10:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 10:10 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:10 - INFO - ---------------------------------------------
2024-10-25 10:10 - INFO - ---------------------------------------------
2024-10-25 10:10 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 10:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9888
2024-10-25 10:10 - INFO - 	 Train Loss: 0.055
2024-10-25 10:10 - INFO - 	 Val. Loss: 0.058
2024-10-25 10:10 - INFO - 	 ROC-AUC: 0.989
2024-10-25 10:10 - INFO - 	 PR-AUC: 0.893
2024-10-25 10:10 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 10:10 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 10:10 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 10:10 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 10:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 10:10 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 10:10 - INFO - ---------------------------------------------
2024-10-25 10:12 - INFO - Fit the preprocessing pipeline
2024-10-25 10:12 - INFO - Training using device: cuda
2024-10-25 10:12 - INFO - Creating generators
2024-10-25 10:12 - INFO - The model has 651,257 trainable parameters
2024-10-25 10:12 - INFO - * Model:
2024-10-25 10:12 - INFO - * -----------
2024-10-25 10:12 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 10:12 - INFO - * -----------
2024-10-25 10:12 - INFO - Evaluating model based on: rocauc
2024-10-25 10:12 - INFO - Training..

2024-10-25 10:12 - INFO - ---------------------------------------------
2024-10-25 10:12 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 10:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97972
2024-10-25 10:12 - INFO - 	 Train Loss: 0.158
2024-10-25 10:12 - INFO - 	 Val. Loss: 0.081
2024-10-25 10:12 - INFO - 	 ROC-AUC: 0.980
2024-10-25 10:12 - INFO - 	 PR-AUC: 0.830
2024-10-25 10:12 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 10:12 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 10:12 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 10:12 - INFO - 	 Best PR-AUC: 0.830
2024-10-25 10:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-25 10:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-10-25 10:12 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 10:12 - INFO - ---------------------------------------------
2024-10-25 10:13 - INFO - ---------------------------------------------
2024-10-25 10:13 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 10:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98376
2024-10-25 10:13 - INFO - 	 Train Loss: 0.083
2024-10-25 10:13 - INFO - 	 Val. Loss: 0.070
2024-10-25 10:13 - INFO - 	 ROC-AUC: 0.984
2024-10-25 10:13 - INFO - 	 PR-AUC: 0.856
2024-10-25 10:13 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 10:13 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 10:13 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 10:13 - INFO - 	 Best PR-AUC: 0.856
2024-10-25 10:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 10:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-25 10:13 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 10:13 - INFO - ---------------------------------------------
2024-10-25 10:13 - INFO - ---------------------------------------------
2024-10-25 10:13 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 10:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98406
2024-10-25 10:13 - INFO - 	 Train Loss: 0.075
2024-10-25 10:13 - INFO - 	 Val. Loss: 0.071
2024-10-25 10:13 - INFO - 	 ROC-AUC: 0.984
2024-10-25 10:13 - INFO - 	 PR-AUC: 0.855
2024-10-25 10:13 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 10:13 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 10:13 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 10:13 - INFO - 	 Best PR-AUC: 0.856
2024-10-25 10:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 10:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-25 10:13 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 10:13 - INFO - ---------------------------------------------
2024-10-25 10:14 - INFO - ---------------------------------------------
2024-10-25 10:14 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 10:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98579
2024-10-25 10:14 - INFO - 	 Train Loss: 0.068
2024-10-25 10:14 - INFO - 	 Val. Loss: 0.065
2024-10-25 10:14 - INFO - 	 ROC-AUC: 0.986
2024-10-25 10:14 - INFO - 	 PR-AUC: 0.877
2024-10-25 10:14 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:14 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 10:14 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 10:14 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 10:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 10:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 10:14 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 10:14 - INFO - ---------------------------------------------
2024-10-25 10:14 - INFO - ---------------------------------------------
2024-10-25 10:14 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 10:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98714
2024-10-25 10:14 - INFO - 	 Train Loss: 0.064
2024-10-25 10:14 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:14 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:14 - INFO - 	 PR-AUC: 0.886
2024-10-25 10:14 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 10:14 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 10:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:14 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 10:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 10:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 10:14 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 10:14 - INFO - ---------------------------------------------
2024-10-25 10:15 - INFO - ---------------------------------------------
2024-10-25 10:15 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 10:15 - INFO - 	 Train Loss: 0.062
2024-10-25 10:15 - INFO - 	 Val. Loss: 0.063
2024-10-25 10:15 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:15 - INFO - 	 PR-AUC: 0.882
2024-10-25 10:15 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:15 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 10:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:15 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 10:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 10:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 10:15 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 10:15 - INFO - ---------------------------------------------
2024-10-25 10:15 - INFO - ---------------------------------------------
2024-10-25 10:15 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 10:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98738
2024-10-25 10:15 - INFO - 	 Train Loss: 0.060
2024-10-25 10:15 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:15 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:15 - INFO - 	 PR-AUC: 0.879
2024-10-25 10:15 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:15 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 10:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:15 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 10:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 10:15 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:15 - INFO - ---------------------------------------------
2024-10-25 10:16 - INFO - ---------------------------------------------
2024-10-25 10:16 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 10:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98778
2024-10-25 10:16 - INFO - 	 Train Loss: 0.058
2024-10-25 10:16 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:16 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:16 - INFO - 	 PR-AUC: 0.888
2024-10-25 10:16 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:16 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 10:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:16 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 10:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 10:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:16 - INFO - ---------------------------------------------
2024-10-25 10:16 - INFO - ---------------------------------------------
2024-10-25 10:16 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 10:16 - INFO - 	 Train Loss: 0.057
2024-10-25 10:16 - INFO - 	 Val. Loss: 0.061
2024-10-25 10:16 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:16 - INFO - 	 PR-AUC: 0.882
2024-10-25 10:16 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:16 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 10:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:16 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 10:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 10:16 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:16 - INFO - ---------------------------------------------
2024-10-25 10:17 - INFO - ---------------------------------------------
2024-10-25 10:17 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 10:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98901
2024-10-25 10:17 - INFO - 	 Train Loss: 0.056
2024-10-25 10:17 - INFO - 	 Val. Loss: 0.057
2024-10-25 10:17 - INFO - 	 ROC-AUC: 0.989
2024-10-25 10:17 - INFO - 	 PR-AUC: 0.896
2024-10-25 10:17 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-25 10:17 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 10:17 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 10:17 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 10:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-25 10:17 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 10:17 - INFO - ---------------------------------------------
2024-10-25 10:18 - INFO - Fit the preprocessing pipeline
2024-10-25 10:18 - INFO - Training using device: cuda
2024-10-25 10:18 - INFO - Creating generators
2024-10-25 10:18 - INFO - The model has 651,257 trainable parameters
2024-10-25 10:18 - INFO - * Model:
2024-10-25 10:18 - INFO - * -----------
2024-10-25 10:18 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 10:18 - INFO - * -----------
2024-10-25 10:18 - INFO - Evaluating model based on: rocauc
2024-10-25 10:18 - INFO - Training..

2024-10-25 10:19 - INFO - ---------------------------------------------
2024-10-25 10:19 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 10:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98049
2024-10-25 10:19 - INFO - 	 Train Loss: 0.161
2024-10-25 10:19 - INFO - 	 Val. Loss: 0.088
2024-10-25 10:19 - INFO - 	 ROC-AUC: 0.980
2024-10-25 10:19 - INFO - 	 PR-AUC: 0.820
2024-10-25 10:19 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 10:19 - INFO - 	 Best Val. Loss: 0.088
2024-10-25 10:19 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 10:19 - INFO - 	 Best PR-AUC: 0.820
2024-10-25 10:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 10:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-10-25 10:19 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 10:19 - INFO - ---------------------------------------------
2024-10-25 10:19 - INFO - ---------------------------------------------
2024-10-25 10:19 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 10:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98478
2024-10-25 10:19 - INFO - 	 Train Loss: 0.083
2024-10-25 10:19 - INFO - 	 Val. Loss: 0.071
2024-10-25 10:19 - INFO - 	 ROC-AUC: 0.985
2024-10-25 10:19 - INFO - 	 PR-AUC: 0.860
2024-10-25 10:19 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:19 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 10:19 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 10:19 - INFO - 	 Best PR-AUC: 0.860
2024-10-25 10:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 10:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-25 10:19 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 10:19 - INFO - ---------------------------------------------
2024-10-25 10:20 - INFO - ---------------------------------------------
2024-10-25 10:20 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 10:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98603
2024-10-25 10:20 - INFO - 	 Train Loss: 0.072
2024-10-25 10:20 - INFO - 	 Val. Loss: 0.067
2024-10-25 10:20 - INFO - 	 ROC-AUC: 0.986
2024-10-25 10:20 - INFO - 	 PR-AUC: 0.860
2024-10-25 10:20 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 10:20 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 10:20 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 10:20 - INFO - 	 Best PR-AUC: 0.860
2024-10-25 10:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 10:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-25 10:20 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 10:20 - INFO - ---------------------------------------------
2024-10-25 10:21 - INFO - ---------------------------------------------
2024-10-25 10:21 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 10:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98614
2024-10-25 10:21 - INFO - 	 Train Loss: 0.069
2024-10-25 10:21 - INFO - 	 Val. Loss: 0.064
2024-10-25 10:21 - INFO - 	 ROC-AUC: 0.986
2024-10-25 10:21 - INFO - 	 PR-AUC: 0.871
2024-10-25 10:21 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:21 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 10:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 10:21 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 10:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 10:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-25 10:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:21 - INFO - ---------------------------------------------
2024-10-25 10:21 - INFO - ---------------------------------------------
2024-10-25 10:21 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 10:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98782
2024-10-25 10:21 - INFO - 	 Train Loss: 0.065
2024-10-25 10:21 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:21 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:21 - INFO - 	 PR-AUC: 0.889
2024-10-25 10:21 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 10:21 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 10:21 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:21 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 10:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 10:21 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 10:21 - INFO - ---------------------------------------------
2024-10-25 10:22 - INFO - ---------------------------------------------
2024-10-25 10:22 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 10:22 - INFO - 	 Train Loss: 0.062
2024-10-25 10:22 - INFO - 	 Val. Loss: 0.063
2024-10-25 10:22 - INFO - 	 ROC-AUC: 0.986
2024-10-25 10:22 - INFO - 	 PR-AUC: 0.880
2024-10-25 10:22 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 10:22 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 10:22 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:22 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 10:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 10:22 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 10:22 - INFO - ---------------------------------------------
2024-10-25 10:22 - INFO - ---------------------------------------------
2024-10-25 10:22 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 10:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98838
2024-10-25 10:22 - INFO - 	 Train Loss: 0.060
2024-10-25 10:22 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:22 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:22 - INFO - 	 PR-AUC: 0.891
2024-10-25 10:22 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:22 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 10:22 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:22 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 10:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 10:22 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 10:22 - INFO - ---------------------------------------------
2024-10-25 10:23 - INFO - ---------------------------------------------
2024-10-25 10:23 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 10:23 - INFO - 	 Train Loss: 0.058
2024-10-25 10:23 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:23 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:23 - INFO - 	 PR-AUC: 0.873
2024-10-25 10:23 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:23 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 10:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:23 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 10:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 10:23 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 10:23 - INFO - ---------------------------------------------
2024-10-25 10:23 - INFO - ---------------------------------------------
2024-10-25 10:23 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 10:23 - INFO - 	 Train Loss: 0.057
2024-10-25 10:23 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:23 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:23 - INFO - 	 PR-AUC: 0.883
2024-10-25 10:23 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:23 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 10:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:23 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 10:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 10:23 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 10:23 - INFO - ---------------------------------------------
2024-10-25 10:24 - INFO - ---------------------------------------------
2024-10-25 10:24 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 10:24 - INFO - 	 Train Loss: 0.056
2024-10-25 10:24 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:24 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:24 - INFO - 	 PR-AUC: 0.887
2024-10-25 10:24 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:24 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 10:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:24 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 10:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 10:24 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 10:24 - INFO - ---------------------------------------------
2024-10-25 10:25 - INFO - Fit the preprocessing pipeline
2024-10-25 10:25 - INFO - Training using device: cuda
2024-10-25 10:25 - INFO - Creating generators
2024-10-25 10:25 - INFO - The model has 651,257 trainable parameters
2024-10-25 10:25 - INFO - * Model:
2024-10-25 10:25 - INFO - * -----------
2024-10-25 10:25 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 10:25 - INFO - * -----------
2024-10-25 10:25 - INFO - Evaluating model based on: rocauc
2024-10-25 10:25 - INFO - Training..

2024-10-25 10:26 - INFO - ---------------------------------------------
2024-10-25 10:26 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 10:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97863
2024-10-25 10:26 - INFO - 	 Train Loss: 0.153
2024-10-25 10:26 - INFO - 	 Val. Loss: 0.088
2024-10-25 10:26 - INFO - 	 ROC-AUC: 0.979
2024-10-25 10:26 - INFO - 	 PR-AUC: 0.804
2024-10-25 10:26 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 10:26 - INFO - 	 Best Val. Loss: 0.088
2024-10-25 10:26 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 10:26 - INFO - 	 Best PR-AUC: 0.804
2024-10-25 10:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 10:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.765
2024-10-25 10:26 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-25 10:26 - INFO - ---------------------------------------------
2024-10-25 10:26 - INFO - ---------------------------------------------
2024-10-25 10:26 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 10:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98411
2024-10-25 10:26 - INFO - 	 Train Loss: 0.083
2024-10-25 10:26 - INFO - 	 Val. Loss: 0.072
2024-10-25 10:26 - INFO - 	 ROC-AUC: 0.984
2024-10-25 10:26 - INFO - 	 PR-AUC: 0.863
2024-10-25 10:26 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 10:26 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 10:26 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 10:26 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 10:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 10:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-25 10:26 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 10:26 - INFO - ---------------------------------------------
2024-10-25 10:27 - INFO - ---------------------------------------------
2024-10-25 10:27 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 10:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.987
2024-10-25 10:27 - INFO - 	 Train Loss: 0.072
2024-10-25 10:27 - INFO - 	 Val. Loss: 0.063
2024-10-25 10:27 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:27 - INFO - 	 PR-AUC: 0.878
2024-10-25 10:27 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:27 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 10:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:27 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 10:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 10:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 10:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:27 - INFO - ---------------------------------------------
2024-10-25 10:27 - INFO - ---------------------------------------------
2024-10-25 10:27 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 10:27 - INFO - 	 Train Loss: 0.067
2024-10-25 10:27 - INFO - 	 Val. Loss: 0.065
2024-10-25 10:27 - INFO - 	 ROC-AUC: 0.985
2024-10-25 10:27 - INFO - 	 PR-AUC: 0.875
2024-10-25 10:27 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 10:27 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 10:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:27 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 10:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 10:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 10:27 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:27 - INFO - ---------------------------------------------
2024-10-25 10:28 - INFO - ---------------------------------------------
2024-10-25 10:28 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 10:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98817
2024-10-25 10:28 - INFO - 	 Train Loss: 0.065
2024-10-25 10:28 - INFO - 	 Val. Loss: 0.059
2024-10-25 10:28 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:28 - INFO - 	 PR-AUC: 0.887
2024-10-25 10:28 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-25 10:28 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 10:28 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:28 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 10:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-25 10:28 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 10:28 - INFO - ---------------------------------------------
2024-10-25 10:28 - INFO - ---------------------------------------------
2024-10-25 10:28 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 10:28 - INFO - 	 Train Loss: 0.062
2024-10-25 10:28 - INFO - 	 Val. Loss: 0.063
2024-10-25 10:28 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:28 - INFO - 	 PR-AUC: 0.886
2024-10-25 10:28 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:28 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 10:28 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:28 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 10:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-25 10:28 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 10:28 - INFO - ---------------------------------------------
2024-10-25 10:29 - INFO - ---------------------------------------------
2024-10-25 10:29 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 10:29 - INFO - 	 Train Loss: 0.060
2024-10-25 10:29 - INFO - 	 Val. Loss: 0.063
2024-10-25 10:29 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:29 - INFO - 	 PR-AUC: 0.892
2024-10-25 10:29 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 10:29 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 10:29 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:29 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 10:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 10:29 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 10:29 - INFO - ---------------------------------------------
2024-10-25 10:29 - INFO - ---------------------------------------------
2024-10-25 10:29 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 10:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98831
2024-10-25 10:29 - INFO - 	 Train Loss: 0.058
2024-10-25 10:29 - INFO - 	 Val. Loss: 0.059
2024-10-25 10:29 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:29 - INFO - 	 PR-AUC: 0.892
2024-10-25 10:29 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:29 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 10:29 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:29 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 10:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 10:29 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 10:29 - INFO - ---------------------------------------------
2024-10-25 10:30 - INFO - ---------------------------------------------
2024-10-25 10:30 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 10:30 - INFO - 	 Train Loss: 0.057
2024-10-25 10:30 - INFO - 	 Val. Loss: 0.058
2024-10-25 10:30 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:30 - INFO - 	 PR-AUC: 0.891
2024-10-25 10:30 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:30 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 10:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:30 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 10:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 10:30 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 10:30 - INFO - ---------------------------------------------
2024-10-25 10:31 - INFO - ---------------------------------------------
2024-10-25 10:31 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 10:31 - INFO - 	 Train Loss: 0.054
2024-10-25 10:31 - INFO - 	 Val. Loss: 0.059
2024-10-25 10:31 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:31 - INFO - 	 PR-AUC: 0.894
2024-10-25 10:31 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:31 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 10:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:31 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 10:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 10:31 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 10:31 - INFO - ---------------------------------------------
2024-10-25 10:32 - INFO - Fit the preprocessing pipeline
2024-10-25 10:32 - INFO - Training using device: cuda
2024-10-25 10:32 - INFO - Creating generators
2024-10-25 10:32 - INFO - The model has 651,257 trainable parameters
2024-10-25 10:32 - INFO - * Model:
2024-10-25 10:32 - INFO - * -----------
2024-10-25 10:32 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 10:32 - INFO - * -----------
2024-10-25 10:32 - INFO - Evaluating model based on: rocauc
2024-10-25 10:32 - INFO - Training..

2024-10-25 10:33 - INFO - ---------------------------------------------
2024-10-25 10:33 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 10:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98003
2024-10-25 10:33 - INFO - 	 Train Loss: 0.151
2024-10-25 10:33 - INFO - 	 Val. Loss: 0.082
2024-10-25 10:33 - INFO - 	 ROC-AUC: 0.980
2024-10-25 10:33 - INFO - 	 PR-AUC: 0.814
2024-10-25 10:33 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 10:33 - INFO - 	 Best Val. Loss: 0.082
2024-10-25 10:33 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 10:33 - INFO - 	 Best PR-AUC: 0.814
2024-10-25 10:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 10:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-10-25 10:33 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 10:33 - INFO - ---------------------------------------------
2024-10-25 10:33 - INFO - ---------------------------------------------
2024-10-25 10:33 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 10:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98382
2024-10-25 10:33 - INFO - 	 Train Loss: 0.082
2024-10-25 10:33 - INFO - 	 Val. Loss: 0.068
2024-10-25 10:33 - INFO - 	 ROC-AUC: 0.984
2024-10-25 10:33 - INFO - 	 PR-AUC: 0.868
2024-10-25 10:33 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 10:33 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 10:33 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 10:33 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 10:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 10:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 10:33 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 10:33 - INFO - ---------------------------------------------
2024-10-25 10:34 - INFO - ---------------------------------------------
2024-10-25 10:34 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 10:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98608
2024-10-25 10:34 - INFO - 	 Train Loss: 0.072
2024-10-25 10:34 - INFO - 	 Val. Loss: 0.063
2024-10-25 10:34 - INFO - 	 ROC-AUC: 0.986
2024-10-25 10:34 - INFO - 	 PR-AUC: 0.880
2024-10-25 10:34 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 10:34 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 10:34 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 10:34 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 10:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-25 10:34 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 10:34 - INFO - ---------------------------------------------
2024-10-25 10:34 - INFO - ---------------------------------------------
2024-10-25 10:34 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 10:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98725
2024-10-25 10:34 - INFO - 	 Train Loss: 0.067
2024-10-25 10:34 - INFO - 	 Val. Loss: 0.066
2024-10-25 10:34 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:34 - INFO - 	 PR-AUC: 0.884
2024-10-25 10:34 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:34 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 10:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:34 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 10:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 10:34 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:34 - INFO - ---------------------------------------------
2024-10-25 10:35 - INFO - ---------------------------------------------
2024-10-25 10:35 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 10:35 - INFO - 	 Train Loss: 0.064
2024-10-25 10:35 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:35 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:35 - INFO - 	 PR-AUC: 0.882
2024-10-25 10:35 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:35 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 10:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:35 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 10:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 10:35 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:35 - INFO - ---------------------------------------------
2024-10-25 10:35 - INFO - ---------------------------------------------
2024-10-25 10:35 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 10:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98828
2024-10-25 10:35 - INFO - 	 Train Loss: 0.061
2024-10-25 10:35 - INFO - 	 Val. Loss: 0.057
2024-10-25 10:35 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:35 - INFO - 	 PR-AUC: 0.894
2024-10-25 10:35 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:35 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 10:35 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:35 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 10:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 10:35 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:35 - INFO - ---------------------------------------------
2024-10-25 10:36 - INFO - ---------------------------------------------
2024-10-25 10:36 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 10:36 - INFO - 	 Train Loss: 0.059
2024-10-25 10:36 - INFO - 	 Val. Loss: 0.058
2024-10-25 10:36 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:36 - INFO - 	 PR-AUC: 0.899
2024-10-25 10:36 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:36 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 10:36 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:36 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 10:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-25 10:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:36 - INFO - ---------------------------------------------
2024-10-25 10:36 - INFO - ---------------------------------------------
2024-10-25 10:36 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 10:36 - INFO - 	 Train Loss: 0.058
2024-10-25 10:36 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:36 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:36 - INFO - 	 PR-AUC: 0.890
2024-10-25 10:36 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 10:36 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 10:36 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:36 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 10:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-25 10:36 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:36 - INFO - ---------------------------------------------
2024-10-25 10:37 - INFO - ---------------------------------------------
2024-10-25 10:37 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 10:37 - INFO - 	 Train Loss: 0.056
2024-10-25 10:37 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:37 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:37 - INFO - 	 PR-AUC: 0.896
2024-10-25 10:37 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 10:37 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 10:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:37 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 10:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-25 10:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:37 - INFO - ---------------------------------------------
2024-10-25 10:37 - INFO - ---------------------------------------------
2024-10-25 10:37 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 10:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98867
2024-10-25 10:37 - INFO - 	 Train Loss: 0.055
2024-10-25 10:37 - INFO - 	 Val. Loss: 0.057
2024-10-25 10:37 - INFO - 	 ROC-AUC: 0.989
2024-10-25 10:37 - INFO - 	 PR-AUC: 0.899
2024-10-25 10:37 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:37 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 10:37 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 10:37 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 10:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-25 10:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:37 - INFO - ---------------------------------------------
2024-10-25 10:39 - INFO - Fit the preprocessing pipeline
2024-10-25 10:39 - INFO - Training using device: cuda
2024-10-25 10:39 - INFO - Creating generators
2024-10-25 10:39 - INFO - The model has 651,257 trainable parameters
2024-10-25 10:39 - INFO - * Model:
2024-10-25 10:39 - INFO - * -----------
2024-10-25 10:39 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 10:39 - INFO - * -----------
2024-10-25 10:39 - INFO - Evaluating model based on: rocauc
2024-10-25 10:39 - INFO - Training..

2024-10-25 10:39 - INFO - ---------------------------------------------
2024-10-25 10:39 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 10:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97871
2024-10-25 10:39 - INFO - 	 Train Loss: 0.147
2024-10-25 10:39 - INFO - 	 Val. Loss: 0.096
2024-10-25 10:39 - INFO - 	 ROC-AUC: 0.979
2024-10-25 10:39 - INFO - 	 PR-AUC: 0.813
2024-10-25 10:39 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-25 10:39 - INFO - 	 Best Val. Loss: 0.096
2024-10-25 10:39 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 10:39 - INFO - 	 Best PR-AUC: 0.813
2024-10-25 10:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 10:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.782
2024-10-25 10:39 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-25 10:39 - INFO - ---------------------------------------------
2024-10-25 10:40 - INFO - ---------------------------------------------
2024-10-25 10:40 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 10:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98493
2024-10-25 10:40 - INFO - 	 Train Loss: 0.082
2024-10-25 10:40 - INFO - 	 Val. Loss: 0.078
2024-10-25 10:40 - INFO - 	 ROC-AUC: 0.985
2024-10-25 10:40 - INFO - 	 PR-AUC: 0.856
2024-10-25 10:40 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:40 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 10:40 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 10:40 - INFO - 	 Best PR-AUC: 0.856
2024-10-25 10:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 10:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-25 10:40 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 10:40 - INFO - ---------------------------------------------
2024-10-25 10:40 - INFO - ---------------------------------------------
2024-10-25 10:40 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 10:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9867
2024-10-25 10:40 - INFO - 	 Train Loss: 0.073
2024-10-25 10:40 - INFO - 	 Val. Loss: 0.064
2024-10-25 10:40 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:40 - INFO - 	 PR-AUC: 0.879
2024-10-25 10:40 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:40 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 10:40 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:40 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 10:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 10:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-25 10:40 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:40 - INFO - ---------------------------------------------
2024-10-25 10:41 - INFO - ---------------------------------------------
2024-10-25 10:41 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 10:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98779
2024-10-25 10:41 - INFO - 	 Train Loss: 0.067
2024-10-25 10:41 - INFO - 	 Val. Loss: 0.061
2024-10-25 10:41 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:41 - INFO - 	 PR-AUC: 0.892
2024-10-25 10:41 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 10:41 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 10:41 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:41 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 10:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 10:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 10:41 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 10:41 - INFO - ---------------------------------------------
2024-10-25 10:42 - INFO - ---------------------------------------------
2024-10-25 10:42 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 10:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98803
2024-10-25 10:42 - INFO - 	 Train Loss: 0.063
2024-10-25 10:42 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:42 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:42 - INFO - 	 PR-AUC: 0.893
2024-10-25 10:42 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 10:42 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 10:42 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:42 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 10:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 10:42 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 10:42 - INFO - ---------------------------------------------
2024-10-25 10:42 - INFO - ---------------------------------------------
2024-10-25 10:42 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 10:42 - INFO - 	 Train Loss: 0.060
2024-10-25 10:42 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:42 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:42 - INFO - 	 PR-AUC: 0.899
2024-10-25 10:42 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 10:42 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 10:42 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:42 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 10:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 10:42 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 10:42 - INFO - ---------------------------------------------
2024-10-25 10:43 - INFO - ---------------------------------------------
2024-10-25 10:43 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 10:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98869
2024-10-25 10:43 - INFO - 	 Train Loss: 0.059
2024-10-25 10:43 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:43 - INFO - 	 ROC-AUC: 0.989
2024-10-25 10:43 - INFO - 	 PR-AUC: 0.892
2024-10-25 10:43 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-25 10:43 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 10:43 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 10:43 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 10:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 10:43 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 10:43 - INFO - ---------------------------------------------
2024-10-25 10:43 - INFO - ---------------------------------------------
2024-10-25 10:43 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 10:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98935
2024-10-25 10:43 - INFO - 	 Train Loss: 0.057
2024-10-25 10:43 - INFO - 	 Val. Loss: 0.058
2024-10-25 10:43 - INFO - 	 ROC-AUC: 0.989
2024-10-25 10:43 - INFO - 	 PR-AUC: 0.898
2024-10-25 10:43 - INFO - 	 Recall for 0.4 precision: 0.982
2024-10-25 10:43 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 10:43 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 10:43 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 10:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 10:43 - INFO - 	 Best Recall for 0.4 precision: 0.982
2024-10-25 10:43 - INFO - ---------------------------------------------
2024-10-25 10:44 - INFO - ---------------------------------------------
2024-10-25 10:44 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 10:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98948
2024-10-25 10:44 - INFO - 	 Train Loss: 0.056
2024-10-25 10:44 - INFO - 	 Val. Loss: 0.055
2024-10-25 10:44 - INFO - 	 ROC-AUC: 0.989
2024-10-25 10:44 - INFO - 	 PR-AUC: 0.910
2024-10-25 10:44 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-25 10:44 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 10:44 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 10:44 - INFO - 	 Best PR-AUC: 0.910
2024-10-25 10:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-25 10:44 - INFO - 	 Best Recall for 0.4 precision: 0.982
2024-10-25 10:44 - INFO - ---------------------------------------------
2024-10-25 10:44 - INFO - ---------------------------------------------
2024-10-25 10:44 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 10:44 - INFO - 	 Train Loss: 0.054
2024-10-25 10:44 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:44 - INFO - 	 ROC-AUC: 0.989
2024-10-25 10:44 - INFO - 	 PR-AUC: 0.899
2024-10-25 10:44 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 10:44 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 10:44 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 10:44 - INFO - 	 Best PR-AUC: 0.910
2024-10-25 10:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-25 10:44 - INFO - 	 Best Recall for 0.4 precision: 0.982
2024-10-25 10:44 - INFO - ---------------------------------------------
2024-10-25 10:46 - INFO - Fit the preprocessing pipeline
2024-10-25 10:46 - INFO - Training using device: cuda
2024-10-25 10:46 - INFO - Creating generators
2024-10-25 10:46 - INFO - The model has 651,257 trainable parameters
2024-10-25 10:46 - INFO - * Model:
2024-10-25 10:46 - INFO - * -----------
2024-10-25 10:46 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 10:46 - INFO - * -----------
2024-10-25 10:46 - INFO - Evaluating model based on: rocauc
2024-10-25 10:46 - INFO - Training..

2024-10-25 10:46 - INFO - ---------------------------------------------
2024-10-25 10:46 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 10:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97829
2024-10-25 10:46 - INFO - 	 Train Loss: 0.154
2024-10-25 10:46 - INFO - 	 Val. Loss: 0.083
2024-10-25 10:46 - INFO - 	 ROC-AUC: 0.978
2024-10-25 10:46 - INFO - 	 PR-AUC: 0.808
2024-10-25 10:46 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 10:46 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 10:46 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 10:46 - INFO - 	 Best PR-AUC: 0.808
2024-10-25 10:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-25 10:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.776
2024-10-25 10:46 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 10:46 - INFO - ---------------------------------------------
2024-10-25 10:47 - INFO - ---------------------------------------------
2024-10-25 10:47 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 10:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98496
2024-10-25 10:47 - INFO - 	 Train Loss: 0.082
2024-10-25 10:47 - INFO - 	 Val. Loss: 0.076
2024-10-25 10:47 - INFO - 	 ROC-AUC: 0.985
2024-10-25 10:47 - INFO - 	 PR-AUC: 0.863
2024-10-25 10:47 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 10:47 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 10:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 10:47 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 10:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 10:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 10:47 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 10:47 - INFO - ---------------------------------------------
2024-10-25 10:47 - INFO - ---------------------------------------------
2024-10-25 10:47 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 10:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98668
2024-10-25 10:47 - INFO - 	 Train Loss: 0.071
2024-10-25 10:47 - INFO - 	 Val. Loss: 0.064
2024-10-25 10:47 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:47 - INFO - 	 PR-AUC: 0.878
2024-10-25 10:47 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:47 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 10:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:47 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 10:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-25 10:47 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:47 - INFO - ---------------------------------------------
2024-10-25 10:48 - INFO - ---------------------------------------------
2024-10-25 10:48 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 10:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98778
2024-10-25 10:48 - INFO - 	 Train Loss: 0.067
2024-10-25 10:48 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:48 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:48 - INFO - 	 PR-AUC: 0.881
2024-10-25 10:48 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:48 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 10:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:48 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 10:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 10:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-25 10:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:48 - INFO - ---------------------------------------------
2024-10-25 10:48 - INFO - ---------------------------------------------
2024-10-25 10:48 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 10:48 - INFO - 	 Train Loss: 0.063
2024-10-25 10:48 - INFO - 	 Val. Loss: 0.061
2024-10-25 10:48 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:48 - INFO - 	 PR-AUC: 0.889
2024-10-25 10:48 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:48 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 10:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:48 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 10:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 10:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 10:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:48 - INFO - ---------------------------------------------
2024-10-25 10:49 - INFO - ---------------------------------------------
2024-10-25 10:49 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 10:49 - INFO - 	 Train Loss: 0.061
2024-10-25 10:49 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:49 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:49 - INFO - 	 PR-AUC: 0.890
2024-10-25 10:49 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 10:49 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 10:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:49 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 10:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 10:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 10:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:49 - INFO - ---------------------------------------------
2024-10-25 10:49 - INFO - ---------------------------------------------
2024-10-25 10:49 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 10:49 - INFO - 	 Train Loss: 0.059
2024-10-25 10:49 - INFO - 	 Val. Loss: 0.061
2024-10-25 10:49 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:49 - INFO - 	 PR-AUC: 0.887
2024-10-25 10:49 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:49 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 10:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:49 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 10:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 10:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 10:49 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:49 - INFO - ---------------------------------------------
2024-10-25 10:50 - INFO - ---------------------------------------------
2024-10-25 10:50 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 10:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98795
2024-10-25 10:50 - INFO - 	 Train Loss: 0.058
2024-10-25 10:50 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:50 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:50 - INFO - 	 PR-AUC: 0.893
2024-10-25 10:50 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 10:50 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 10:50 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:50 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 10:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-25 10:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:50 - INFO - ---------------------------------------------
2024-10-25 10:50 - INFO - ---------------------------------------------
2024-10-25 10:50 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 10:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9885
2024-10-25 10:50 - INFO - 	 Train Loss: 0.056
2024-10-25 10:50 - INFO - 	 Val. Loss: 0.060
2024-10-25 10:50 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:50 - INFO - 	 PR-AUC: 0.895
2024-10-25 10:50 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:50 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 10:50 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:50 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 10:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 10:50 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:50 - INFO - ---------------------------------------------
2024-10-25 10:51 - INFO - ---------------------------------------------
2024-10-25 10:51 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 10:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98949
2024-10-25 10:51 - INFO - 	 Train Loss: 0.055
2024-10-25 10:51 - INFO - 	 Val. Loss: 0.055
2024-10-25 10:51 - INFO - 	 ROC-AUC: 0.989
2024-10-25 10:51 - INFO - 	 PR-AUC: 0.905
2024-10-25 10:51 - INFO - 	 Recall for 0.4 precision: 0.982
2024-10-25 10:51 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 10:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 10:51 - INFO - 	 Best PR-AUC: 0.905
2024-10-25 10:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 10:51 - INFO - 	 Best Recall for 0.4 precision: 0.982
2024-10-25 10:51 - INFO - ---------------------------------------------
2024-10-25 10:53 - INFO - Fit the preprocessing pipeline
2024-10-25 10:53 - INFO - Training using device: cuda
2024-10-25 10:53 - INFO - Creating generators
2024-10-25 10:53 - INFO - The model has 651,257 trainable parameters
2024-10-25 10:53 - INFO - * Model:
2024-10-25 10:53 - INFO - * -----------
2024-10-25 10:53 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 10:53 - INFO - * -----------
2024-10-25 10:53 - INFO - Evaluating model based on: rocauc
2024-10-25 10:53 - INFO - Training..

2024-10-25 10:53 - INFO - ---------------------------------------------
2024-10-25 10:53 - INFO - Epoch: 01 | Time: 0m 42s
2024-10-25 10:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97645
2024-10-25 10:53 - INFO - 	 Train Loss: 0.156
2024-10-25 10:53 - INFO - 	 Val. Loss: 0.094
2024-10-25 10:53 - INFO - 	 ROC-AUC: 0.976
2024-10-25 10:53 - INFO - 	 PR-AUC: 0.774
2024-10-25 10:53 - INFO - 	 Recall for 0.4 precision: 0.958
2024-10-25 10:53 - INFO - 	 Best Val. Loss: 0.094
2024-10-25 10:53 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 10:53 - INFO - 	 Best PR-AUC: 0.774
2024-10-25 10:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 10:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-25 10:53 - INFO - 	 Best Recall for 0.4 precision: 0.958
2024-10-25 10:53 - INFO - ---------------------------------------------
2024-10-25 10:54 - INFO - ---------------------------------------------
2024-10-25 10:54 - INFO - Epoch: 02 | Time: 0m 34s
2024-10-25 10:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98484
2024-10-25 10:54 - INFO - 	 Train Loss: 0.084
2024-10-25 10:54 - INFO - 	 Val. Loss: 0.068
2024-10-25 10:54 - INFO - 	 ROC-AUC: 0.985
2024-10-25 10:54 - INFO - 	 PR-AUC: 0.873
2024-10-25 10:54 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 10:54 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 10:54 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 10:54 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 10:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 10:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 10:54 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 10:54 - INFO - ---------------------------------------------
2024-10-25 10:55 - INFO - ---------------------------------------------
2024-10-25 10:55 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 10:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98666
2024-10-25 10:55 - INFO - 	 Train Loss: 0.073
2024-10-25 10:55 - INFO - 	 Val. Loss: 0.062
2024-10-25 10:55 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:55 - INFO - 	 PR-AUC: 0.874
2024-10-25 10:55 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:55 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 10:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:55 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 10:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 10:55 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:55 - INFO - ---------------------------------------------
2024-10-25 10:55 - INFO - ---------------------------------------------
2024-10-25 10:55 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 10:55 - INFO - 	 Train Loss: 0.069
2024-10-25 10:55 - INFO - 	 Val. Loss: 0.063
2024-10-25 10:55 - INFO - 	 ROC-AUC: 0.986
2024-10-25 10:55 - INFO - 	 PR-AUC: 0.882
2024-10-25 10:55 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 10:55 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 10:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:55 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 10:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-25 10:55 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:55 - INFO - ---------------------------------------------
2024-10-25 10:56 - INFO - ---------------------------------------------
2024-10-25 10:56 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 10:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98673
2024-10-25 10:56 - INFO - 	 Train Loss: 0.065
2024-10-25 10:56 - INFO - 	 Val. Loss: 0.066
2024-10-25 10:56 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:56 - INFO - 	 PR-AUC: 0.885
2024-10-25 10:56 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 10:56 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 10:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:56 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 10:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 10:56 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:56 - INFO - ---------------------------------------------
2024-10-25 10:56 - INFO - ---------------------------------------------
2024-10-25 10:56 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 10:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98682
2024-10-25 10:56 - INFO - 	 Train Loss: 0.062
2024-10-25 10:56 - INFO - 	 Val. Loss: 0.069
2024-10-25 10:56 - INFO - 	 ROC-AUC: 0.987
2024-10-25 10:56 - INFO - 	 PR-AUC: 0.881
2024-10-25 10:56 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 10:56 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 10:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 10:56 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 10:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 10:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 10:56 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:56 - INFO - ---------------------------------------------
2024-10-25 10:57 - INFO - ---------------------------------------------
2024-10-25 10:57 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 10:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98773
2024-10-25 10:57 - INFO - 	 Train Loss: 0.061
2024-10-25 10:57 - INFO - 	 Val. Loss: 0.058
2024-10-25 10:57 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:57 - INFO - 	 PR-AUC: 0.890
2024-10-25 10:57 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 10:57 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 10:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:57 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 10:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 10:57 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:57 - INFO - ---------------------------------------------
2024-10-25 10:57 - INFO - ---------------------------------------------
2024-10-25 10:57 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 10:57 - INFO - 	 Train Loss: 0.058
2024-10-25 10:57 - INFO - 	 Val. Loss: 0.061
2024-10-25 10:57 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:57 - INFO - 	 PR-AUC: 0.891
2024-10-25 10:57 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 10:57 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 10:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:57 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 10:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 10:57 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:57 - INFO - ---------------------------------------------
2024-10-25 10:58 - INFO - ---------------------------------------------
2024-10-25 10:58 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 10:58 - INFO - 	 Train Loss: 0.057
2024-10-25 10:58 - INFO - 	 Val. Loss: 0.058
2024-10-25 10:58 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:58 - INFO - 	 PR-AUC: 0.897
2024-10-25 10:58 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 10:58 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 10:58 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:58 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 10:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 10:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 10:58 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 10:58 - INFO - ---------------------------------------------
2024-10-25 10:58 - INFO - ---------------------------------------------
2024-10-25 10:58 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 10:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98812
2024-10-25 10:58 - INFO - 	 Train Loss: 0.054
2024-10-25 10:58 - INFO - 	 Val. Loss: 0.058
2024-10-25 10:58 - INFO - 	 ROC-AUC: 0.988
2024-10-25 10:58 - INFO - 	 PR-AUC: 0.896
2024-10-25 10:58 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 10:58 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 10:58 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 10:58 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 10:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 10:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 10:58 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 10:58 - INFO - ---------------------------------------------
2024-10-25 11:00 - INFO - Fit the preprocessing pipeline
2024-10-25 11:00 - INFO - Training using device: cuda
2024-10-25 11:00 - INFO - Creating generators
2024-10-25 11:00 - INFO - The model has 651,257 trainable parameters
2024-10-25 11:00 - INFO - * Model:
2024-10-25 11:00 - INFO - * -----------
2024-10-25 11:00 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 11:00 - INFO - * -----------
2024-10-25 11:00 - INFO - Evaluating model based on: rocauc
2024-10-25 11:00 - INFO - Training..

2024-10-25 11:00 - INFO - ---------------------------------------------
2024-10-25 11:00 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 11:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97764
2024-10-25 11:00 - INFO - 	 Train Loss: 0.158
2024-10-25 11:00 - INFO - 	 Val. Loss: 0.084
2024-10-25 11:00 - INFO - 	 ROC-AUC: 0.978
2024-10-25 11:00 - INFO - 	 PR-AUC: 0.804
2024-10-25 11:00 - INFO - 	 Recall for 0.4 precision: 0.962
2024-10-25 11:00 - INFO - 	 Best Val. Loss: 0.084
2024-10-25 11:00 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 11:00 - INFO - 	 Best PR-AUC: 0.804
2024-10-25 11:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-25 11:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-25 11:00 - INFO - 	 Best Recall for 0.4 precision: 0.962
2024-10-25 11:00 - INFO - ---------------------------------------------
2024-10-25 11:01 - INFO - ---------------------------------------------
2024-10-25 11:01 - INFO - Epoch: 02 | Time: 0m 35s
2024-10-25 11:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98499
2024-10-25 11:01 - INFO - 	 Train Loss: 0.083
2024-10-25 11:01 - INFO - 	 Val. Loss: 0.068
2024-10-25 11:01 - INFO - 	 ROC-AUC: 0.985
2024-10-25 11:01 - INFO - 	 PR-AUC: 0.865
2024-10-25 11:01 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:01 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 11:01 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 11:01 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 11:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 11:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 11:01 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:01 - INFO - ---------------------------------------------
2024-10-25 11:02 - INFO - ---------------------------------------------
2024-10-25 11:02 - INFO - Epoch: 03 | Time: 0m 37s
2024-10-25 11:02 - INFO - 	 Train Loss: 0.073
2024-10-25 11:02 - INFO - 	 Val. Loss: 0.067
2024-10-25 11:02 - INFO - 	 ROC-AUC: 0.985
2024-10-25 11:02 - INFO - 	 PR-AUC: 0.858
2024-10-25 11:02 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 11:02 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 11:02 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 11:02 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 11:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 11:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 11:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:02 - INFO - ---------------------------------------------
2024-10-25 11:02 - INFO - ---------------------------------------------
2024-10-25 11:02 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 11:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98568
2024-10-25 11:02 - INFO - 	 Train Loss: 0.069
2024-10-25 11:02 - INFO - 	 Val. Loss: 0.066
2024-10-25 11:02 - INFO - 	 ROC-AUC: 0.986
2024-10-25 11:02 - INFO - 	 PR-AUC: 0.868
2024-10-25 11:02 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:02 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 11:02 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 11:02 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 11:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 11:02 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:02 - INFO - ---------------------------------------------
2024-10-25 11:03 - INFO - ---------------------------------------------
2024-10-25 11:03 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 11:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98731
2024-10-25 11:03 - INFO - 	 Train Loss: 0.065
2024-10-25 11:03 - INFO - 	 Val. Loss: 0.061
2024-10-25 11:03 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:03 - INFO - 	 PR-AUC: 0.887
2024-10-25 11:03 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 11:03 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 11:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:03 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 11:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 11:03 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:03 - INFO - ---------------------------------------------
2024-10-25 11:03 - INFO - ---------------------------------------------
2024-10-25 11:03 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 11:03 - INFO - 	 Train Loss: 0.062
2024-10-25 11:03 - INFO - 	 Val. Loss: 0.066
2024-10-25 11:03 - INFO - 	 ROC-AUC: 0.986
2024-10-25 11:03 - INFO - 	 PR-AUC: 0.871
2024-10-25 11:03 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 11:03 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 11:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:03 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 11:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 11:03 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:03 - INFO - ---------------------------------------------
2024-10-25 11:04 - INFO - ---------------------------------------------
2024-10-25 11:04 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 11:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98746
2024-10-25 11:04 - INFO - 	 Train Loss: 0.061
2024-10-25 11:04 - INFO - 	 Val. Loss: 0.061
2024-10-25 11:04 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:04 - INFO - 	 PR-AUC: 0.892
2024-10-25 11:04 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 11:04 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 11:04 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:04 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 11:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 11:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:04 - INFO - ---------------------------------------------
2024-10-25 11:04 - INFO - ---------------------------------------------
2024-10-25 11:04 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 11:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98854
2024-10-25 11:04 - INFO - 	 Train Loss: 0.058
2024-10-25 11:04 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:04 - INFO - 	 ROC-AUC: 0.989
2024-10-25 11:04 - INFO - 	 PR-AUC: 0.901
2024-10-25 11:04 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 11:04 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:04 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:04 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 11:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 11:04 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:04 - INFO - ---------------------------------------------
2024-10-25 11:05 - INFO - ---------------------------------------------
2024-10-25 11:05 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 11:05 - INFO - 	 Train Loss: 0.057
2024-10-25 11:05 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:05 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:05 - INFO - 	 PR-AUC: 0.894
2024-10-25 11:05 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:05 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:05 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:05 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 11:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 11:05 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:05 - INFO - ---------------------------------------------
2024-10-25 11:05 - INFO - ---------------------------------------------
2024-10-25 11:05 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 11:05 - INFO - 	 Train Loss: 0.056
2024-10-25 11:05 - INFO - 	 Val. Loss: 0.059
2024-10-25 11:05 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:05 - INFO - 	 PR-AUC: 0.896
2024-10-25 11:05 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 11:05 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 11:05 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:05 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 11:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 11:05 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 11:05 - INFO - ---------------------------------------------
2024-10-25 11:07 - INFO - Fit the preprocessing pipeline
2024-10-25 11:07 - INFO - Training using device: cuda
2024-10-25 11:07 - INFO - Creating generators
2024-10-25 11:07 - INFO - The model has 651,257 trainable parameters
2024-10-25 11:07 - INFO - * Model:
2024-10-25 11:07 - INFO - * -----------
2024-10-25 11:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 11:07 - INFO - * -----------
2024-10-25 11:07 - INFO - Evaluating model based on: rocauc
2024-10-25 11:07 - INFO - Training..

2024-10-25 11:07 - INFO - ---------------------------------------------
2024-10-25 11:07 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 11:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97372
2024-10-25 11:07 - INFO - 	 Train Loss: 0.161
2024-10-25 11:07 - INFO - 	 Val. Loss: 0.090
2024-10-25 11:07 - INFO - 	 ROC-AUC: 0.974
2024-10-25 11:07 - INFO - 	 PR-AUC: 0.759
2024-10-25 11:07 - INFO - 	 Recall for 0.4 precision: 0.957
2024-10-25 11:07 - INFO - 	 Best Val. Loss: 0.090
2024-10-25 11:07 - INFO - 	 Best ROC-AUC: 0.974
2024-10-25 11:07 - INFO - 	 Best PR-AUC: 0.759
2024-10-25 11:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 11:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-25 11:07 - INFO - 	 Best Recall for 0.4 precision: 0.957
2024-10-25 11:07 - INFO - ---------------------------------------------
2024-10-25 11:08 - INFO - ---------------------------------------------
2024-10-25 11:08 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 11:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9847
2024-10-25 11:08 - INFO - 	 Train Loss: 0.081
2024-10-25 11:08 - INFO - 	 Val. Loss: 0.068
2024-10-25 11:08 - INFO - 	 ROC-AUC: 0.985
2024-10-25 11:08 - INFO - 	 PR-AUC: 0.852
2024-10-25 11:08 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:08 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 11:08 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 11:08 - INFO - 	 Best PR-AUC: 0.852
2024-10-25 11:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 11:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-25 11:08 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:08 - INFO - ---------------------------------------------
2024-10-25 11:09 - INFO - ---------------------------------------------
2024-10-25 11:09 - INFO - Epoch: 03 | Time: 0m 42s
2024-10-25 11:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98631
2024-10-25 11:09 - INFO - 	 Train Loss: 0.073
2024-10-25 11:09 - INFO - 	 Val. Loss: 0.063
2024-10-25 11:09 - INFO - 	 ROC-AUC: 0.986
2024-10-25 11:09 - INFO - 	 PR-AUC: 0.870
2024-10-25 11:09 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 11:09 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 11:09 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 11:09 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 11:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 11:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-25 11:09 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:09 - INFO - ---------------------------------------------
2024-10-25 11:09 - INFO - ---------------------------------------------
2024-10-25 11:09 - INFO - Epoch: 04 | Time: 0m 42s
2024-10-25 11:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98669
2024-10-25 11:09 - INFO - 	 Train Loss: 0.067
2024-10-25 11:09 - INFO - 	 Val. Loss: 0.065
2024-10-25 11:09 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:09 - INFO - 	 PR-AUC: 0.876
2024-10-25 11:09 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 11:09 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 11:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:09 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 11:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-25 11:09 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:09 - INFO - ---------------------------------------------
2024-10-25 11:10 - INFO - ---------------------------------------------
2024-10-25 11:10 - INFO - Epoch: 05 | Time: 0m 42s
2024-10-25 11:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98689
2024-10-25 11:10 - INFO - 	 Train Loss: 0.064
2024-10-25 11:10 - INFO - 	 Val. Loss: 0.062
2024-10-25 11:10 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:10 - INFO - 	 PR-AUC: 0.878
2024-10-25 11:10 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:10 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 11:10 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:10 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 11:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-25 11:10 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:10 - INFO - ---------------------------------------------
2024-10-25 11:11 - INFO - ---------------------------------------------
2024-10-25 11:11 - INFO - Epoch: 06 | Time: 0m 42s
2024-10-25 11:11 - INFO - 	 Train Loss: 0.063
2024-10-25 11:11 - INFO - 	 Val. Loss: 0.061
2024-10-25 11:11 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:11 - INFO - 	 PR-AUC: 0.880
2024-10-25 11:11 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:11 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 11:11 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:11 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 11:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 11:11 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:11 - INFO - ---------------------------------------------
2024-10-25 11:12 - INFO - ---------------------------------------------
2024-10-25 11:12 - INFO - Epoch: 07 | Time: 0m 42s
2024-10-25 11:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98692
2024-10-25 11:12 - INFO - 	 Train Loss: 0.060
2024-10-25 11:12 - INFO - 	 Val. Loss: 0.061
2024-10-25 11:12 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:12 - INFO - 	 PR-AUC: 0.889
2024-10-25 11:12 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 11:12 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 11:12 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:12 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 11:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 11:12 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:12 - INFO - ---------------------------------------------
2024-10-25 11:12 - INFO - ---------------------------------------------
2024-10-25 11:12 - INFO - Epoch: 08 | Time: 0m 42s
2024-10-25 11:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98767
2024-10-25 11:12 - INFO - 	 Train Loss: 0.059
2024-10-25 11:12 - INFO - 	 Val. Loss: 0.062
2024-10-25 11:12 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:12 - INFO - 	 PR-AUC: 0.888
2024-10-25 11:12 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 11:12 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 11:12 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:12 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 11:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 11:12 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:12 - INFO - ---------------------------------------------
2024-10-25 11:13 - INFO - ---------------------------------------------
2024-10-25 11:13 - INFO - Epoch: 09 | Time: 0m 42s
2024-10-25 11:13 - INFO - 	 Train Loss: 0.057
2024-10-25 11:13 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:13 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:13 - INFO - 	 PR-AUC: 0.891
2024-10-25 11:13 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 11:13 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:13 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:13 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 11:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 11:13 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:13 - INFO - ---------------------------------------------
2024-10-25 11:14 - INFO - ---------------------------------------------
2024-10-25 11:14 - INFO - Epoch: 10 | Time: 0m 42s
2024-10-25 11:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98789
2024-10-25 11:14 - INFO - 	 Train Loss: 0.056
2024-10-25 11:14 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:14 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:14 - INFO - 	 PR-AUC: 0.891
2024-10-25 11:14 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 11:14 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:14 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 11:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 11:14 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:14 - INFO - ---------------------------------------------
2024-10-25 11:16 - INFO - Fit the preprocessing pipeline
2024-10-25 11:16 - INFO - Training using device: cuda
2024-10-25 11:16 - INFO - Creating generators
2024-10-25 11:16 - INFO - The model has 651,257 trainable parameters
2024-10-25 11:16 - INFO - * Model:
2024-10-25 11:16 - INFO - * -----------
2024-10-25 11:16 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 11:16 - INFO - * -----------
2024-10-25 11:16 - INFO - Evaluating model based on: rocauc
2024-10-25 11:16 - INFO - Training..

2024-10-25 11:17 - INFO - ---------------------------------------------
2024-10-25 11:17 - INFO - Epoch: 01 | Time: 0m 42s
2024-10-25 11:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97593
2024-10-25 11:17 - INFO - 	 Train Loss: 0.163
2024-10-25 11:17 - INFO - 	 Val. Loss: 0.089
2024-10-25 11:17 - INFO - 	 ROC-AUC: 0.976
2024-10-25 11:17 - INFO - 	 PR-AUC: 0.770
2024-10-25 11:17 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-25 11:17 - INFO - 	 Best Val. Loss: 0.089
2024-10-25 11:17 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 11:17 - INFO - 	 Best PR-AUC: 0.770
2024-10-25 11:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 11:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.767
2024-10-25 11:17 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-25 11:17 - INFO - ---------------------------------------------
2024-10-25 11:17 - INFO - ---------------------------------------------
2024-10-25 11:17 - INFO - Epoch: 02 | Time: 0m 42s
2024-10-25 11:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98308
2024-10-25 11:17 - INFO - 	 Train Loss: 0.085
2024-10-25 11:17 - INFO - 	 Val. Loss: 0.075
2024-10-25 11:17 - INFO - 	 ROC-AUC: 0.983
2024-10-25 11:17 - INFO - 	 PR-AUC: 0.853
2024-10-25 11:17 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 11:17 - INFO - 	 Best Val. Loss: 0.075
2024-10-25 11:17 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 11:17 - INFO - 	 Best PR-AUC: 0.853
2024-10-25 11:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 11:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-25 11:17 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 11:17 - INFO - ---------------------------------------------
2024-10-25 11:18 - INFO - ---------------------------------------------
2024-10-25 11:18 - INFO - Epoch: 03 | Time: 0m 42s
2024-10-25 11:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9863
2024-10-25 11:18 - INFO - 	 Train Loss: 0.074
2024-10-25 11:18 - INFO - 	 Val. Loss: 0.065
2024-10-25 11:18 - INFO - 	 ROC-AUC: 0.986
2024-10-25 11:18 - INFO - 	 PR-AUC: 0.873
2024-10-25 11:18 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 11:18 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 11:18 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 11:18 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 11:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 11:18 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 11:18 - INFO - ---------------------------------------------
2024-10-25 11:19 - INFO - ---------------------------------------------
2024-10-25 11:19 - INFO - Epoch: 04 | Time: 0m 42s
2024-10-25 11:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98755
2024-10-25 11:19 - INFO - 	 Train Loss: 0.069
2024-10-25 11:19 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:19 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:19 - INFO - 	 PR-AUC: 0.882
2024-10-25 11:19 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:19 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:19 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:19 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 11:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 11:19 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:19 - INFO - ---------------------------------------------
2024-10-25 11:20 - INFO - ---------------------------------------------
2024-10-25 11:20 - INFO - Epoch: 05 | Time: 0m 42s
2024-10-25 11:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98795
2024-10-25 11:20 - INFO - 	 Train Loss: 0.065
2024-10-25 11:20 - INFO - 	 Val. Loss: 0.061
2024-10-25 11:20 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:20 - INFO - 	 PR-AUC: 0.876
2024-10-25 11:20 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 11:20 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:20 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:20 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 11:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 11:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:20 - INFO - ---------------------------------------------
2024-10-25 11:20 - INFO - ---------------------------------------------
2024-10-25 11:20 - INFO - Epoch: 06 | Time: 0m 42s
2024-10-25 11:20 - INFO - 	 Train Loss: 0.063
2024-10-25 11:20 - INFO - 	 Val. Loss: 0.061
2024-10-25 11:20 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:20 - INFO - 	 PR-AUC: 0.879
2024-10-25 11:20 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 11:20 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:20 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:20 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 11:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 11:20 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:20 - INFO - ---------------------------------------------
2024-10-25 11:21 - INFO - ---------------------------------------------
2024-10-25 11:21 - INFO - Epoch: 07 | Time: 0m 42s
2024-10-25 11:21 - INFO - 	 Train Loss: 0.061
2024-10-25 11:21 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:21 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:21 - INFO - 	 PR-AUC: 0.880
2024-10-25 11:21 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:21 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:21 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:21 - INFO - 	 Best PR-AUC: 0.882
2024-10-25 11:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 11:21 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:21 - INFO - ---------------------------------------------
2024-10-25 11:22 - INFO - ---------------------------------------------
2024-10-25 11:22 - INFO - Epoch: 08 | Time: 0m 42s
2024-10-25 11:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98919
2024-10-25 11:22 - INFO - 	 Train Loss: 0.059
2024-10-25 11:22 - INFO - 	 Val. Loss: 0.057
2024-10-25 11:22 - INFO - 	 ROC-AUC: 0.989
2024-10-25 11:22 - INFO - 	 PR-AUC: 0.893
2024-10-25 11:22 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 11:22 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 11:22 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:22 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 11:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-25 11:22 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:22 - INFO - ---------------------------------------------
2024-10-25 11:22 - INFO - ---------------------------------------------
2024-10-25 11:22 - INFO - Epoch: 09 | Time: 0m 42s
2024-10-25 11:22 - INFO - 	 Train Loss: 0.057
2024-10-25 11:22 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:22 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:22 - INFO - 	 PR-AUC: 0.878
2024-10-25 11:22 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 11:22 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 11:22 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:22 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 11:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-25 11:22 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:22 - INFO - ---------------------------------------------
2024-10-25 11:23 - INFO - ---------------------------------------------
2024-10-25 11:23 - INFO - Epoch: 10 | Time: 0m 42s
2024-10-25 11:23 - INFO - 	 Train Loss: 0.055
2024-10-25 11:23 - INFO - 	 Val. Loss: 0.057
2024-10-25 11:23 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:23 - INFO - 	 PR-AUC: 0.894
2024-10-25 11:23 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:23 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 11:23 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:23 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 11:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 11:23 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:23 - INFO - ---------------------------------------------
2024-10-25 11:25 - INFO - Fit the preprocessing pipeline
2024-10-25 11:25 - INFO - Training using device: cuda
2024-10-25 11:25 - INFO - Creating generators
2024-10-25 11:25 - INFO - The model has 651,257 trainable parameters
2024-10-25 11:25 - INFO - * Model:
2024-10-25 11:25 - INFO - * -----------
2024-10-25 11:25 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 11:25 - INFO - * -----------
2024-10-25 11:25 - INFO - Evaluating model based on: rocauc
2024-10-25 11:25 - INFO - Training..

2024-10-25 11:26 - INFO - ---------------------------------------------
2024-10-25 11:26 - INFO - Epoch: 01 | Time: 0m 42s
2024-10-25 11:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97621
2024-10-25 11:26 - INFO - 	 Train Loss: 0.164
2024-10-25 11:26 - INFO - 	 Val. Loss: 0.087
2024-10-25 11:26 - INFO - 	 ROC-AUC: 0.976
2024-10-25 11:26 - INFO - 	 PR-AUC: 0.803
2024-10-25 11:26 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-25 11:26 - INFO - 	 Best Val. Loss: 0.087
2024-10-25 11:26 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 11:26 - INFO - 	 Best PR-AUC: 0.803
2024-10-25 11:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 11:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.758
2024-10-25 11:26 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-25 11:26 - INFO - ---------------------------------------------
2024-10-25 11:27 - INFO - ---------------------------------------------
2024-10-25 11:27 - INFO - Epoch: 02 | Time: 0m 42s
2024-10-25 11:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98451
2024-10-25 11:27 - INFO - 	 Train Loss: 0.083
2024-10-25 11:27 - INFO - 	 Val. Loss: 0.065
2024-10-25 11:27 - INFO - 	 ROC-AUC: 0.985
2024-10-25 11:27 - INFO - 	 PR-AUC: 0.871
2024-10-25 11:27 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 11:27 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 11:27 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 11:27 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 11:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 11:27 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 11:27 - INFO - ---------------------------------------------
2024-10-25 11:27 - INFO - ---------------------------------------------
2024-10-25 11:27 - INFO - Epoch: 03 | Time: 0m 43s
2024-10-25 11:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98646
2024-10-25 11:27 - INFO - 	 Train Loss: 0.072
2024-10-25 11:27 - INFO - 	 Val. Loss: 0.065
2024-10-25 11:27 - INFO - 	 ROC-AUC: 0.986
2024-10-25 11:27 - INFO - 	 PR-AUC: 0.870
2024-10-25 11:27 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 11:27 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 11:27 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 11:27 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 11:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 11:27 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 11:27 - INFO - ---------------------------------------------
2024-10-25 11:28 - INFO - ---------------------------------------------
2024-10-25 11:28 - INFO - Epoch: 04 | Time: 0m 42s
2024-10-25 11:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98733
2024-10-25 11:28 - INFO - 	 Train Loss: 0.068
2024-10-25 11:28 - INFO - 	 Val. Loss: 0.062
2024-10-25 11:28 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:28 - INFO - 	 PR-AUC: 0.878
2024-10-25 11:28 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:28 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 11:28 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:28 - INFO - 	 Best PR-AUC: 0.878
2024-10-25 11:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-25 11:28 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:28 - INFO - ---------------------------------------------
2024-10-25 11:29 - INFO - ---------------------------------------------
2024-10-25 11:29 - INFO - Epoch: 05 | Time: 0m 42s
2024-10-25 11:29 - INFO - 	 Train Loss: 0.063
2024-10-25 11:29 - INFO - 	 Val. Loss: 0.065
2024-10-25 11:29 - INFO - 	 ROC-AUC: 0.986
2024-10-25 11:29 - INFO - 	 PR-AUC: 0.884
2024-10-25 11:29 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 11:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:29 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 11:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 11:29 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:29 - INFO - ---------------------------------------------
2024-10-25 11:30 - INFO - ---------------------------------------------
2024-10-25 11:30 - INFO - Epoch: 06 | Time: 0m 42s
2024-10-25 11:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98804
2024-10-25 11:30 - INFO - 	 Train Loss: 0.061
2024-10-25 11:30 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:30 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:30 - INFO - 	 PR-AUC: 0.887
2024-10-25 11:30 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:30 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:30 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 11:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 11:30 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:30 - INFO - ---------------------------------------------
2024-10-25 11:30 - INFO - ---------------------------------------------
2024-10-25 11:30 - INFO - Epoch: 07 | Time: 0m 43s
2024-10-25 11:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9881
2024-10-25 11:30 - INFO - 	 Train Loss: 0.060
2024-10-25 11:30 - INFO - 	 Val. Loss: 0.058
2024-10-25 11:30 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:30 - INFO - 	 PR-AUC: 0.892
2024-10-25 11:30 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 11:30 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 11:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:30 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 11:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 11:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 11:30 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 11:30 - INFO - ---------------------------------------------
2024-10-25 11:31 - INFO - ---------------------------------------------
2024-10-25 11:31 - INFO - Epoch: 08 | Time: 0m 42s
2024-10-25 11:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98884
2024-10-25 11:31 - INFO - 	 Train Loss: 0.057
2024-10-25 11:31 - INFO - 	 Val. Loss: 0.058
2024-10-25 11:31 - INFO - 	 ROC-AUC: 0.989
2024-10-25 11:31 - INFO - 	 PR-AUC: 0.901
2024-10-25 11:31 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 11:31 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 11:31 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:31 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 11:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 11:31 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 11:31 - INFO - ---------------------------------------------
2024-10-25 11:32 - INFO - ---------------------------------------------
2024-10-25 11:32 - INFO - Epoch: 09 | Time: 0m 43s
2024-10-25 11:32 - INFO - 	 Train Loss: 0.057
2024-10-25 11:32 - INFO - 	 Val. Loss: 0.057
2024-10-25 11:32 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:32 - INFO - 	 PR-AUC: 0.895
2024-10-25 11:32 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 11:32 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 11:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:32 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 11:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 11:32 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 11:32 - INFO - ---------------------------------------------
2024-10-25 11:33 - INFO - ---------------------------------------------
2024-10-25 11:33 - INFO - Epoch: 10 | Time: 0m 43s
2024-10-25 11:33 - INFO - 	 Train Loss: 0.055
2024-10-25 11:33 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:33 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:33 - INFO - 	 PR-AUC: 0.889
2024-10-25 11:33 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 11:33 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 11:33 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:33 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 11:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-25 11:33 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 11:33 - INFO - ---------------------------------------------
2024-10-25 11:35 - INFO - Fit the preprocessing pipeline
2024-10-25 11:35 - INFO - Training using device: cuda
2024-10-25 11:35 - INFO - Creating generators
2024-10-25 11:35 - INFO - The model has 651,257 trainable parameters
2024-10-25 11:35 - INFO - * Model:
2024-10-25 11:35 - INFO - * -----------
2024-10-25 11:35 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 11:35 - INFO - * -----------
2024-10-25 11:35 - INFO - Evaluating model based on: rocauc
2024-10-25 11:35 - INFO - Training..

2024-10-25 11:35 - INFO - ---------------------------------------------
2024-10-25 11:35 - INFO - Epoch: 01 | Time: 0m 42s
2024-10-25 11:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9791
2024-10-25 11:35 - INFO - 	 Train Loss: 0.157
2024-10-25 11:35 - INFO - 	 Val. Loss: 0.082
2024-10-25 11:35 - INFO - 	 ROC-AUC: 0.979
2024-10-25 11:35 - INFO - 	 PR-AUC: 0.808
2024-10-25 11:35 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 11:35 - INFO - 	 Best Val. Loss: 0.082
2024-10-25 11:35 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 11:35 - INFO - 	 Best PR-AUC: 0.808
2024-10-25 11:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 11:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-25 11:35 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 11:35 - INFO - ---------------------------------------------
2024-10-25 11:36 - INFO - ---------------------------------------------
2024-10-25 11:36 - INFO - Epoch: 02 | Time: 0m 43s
2024-10-25 11:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98287
2024-10-25 11:36 - INFO - 	 Train Loss: 0.082
2024-10-25 11:36 - INFO - 	 Val. Loss: 0.073
2024-10-25 11:36 - INFO - 	 ROC-AUC: 0.983
2024-10-25 11:36 - INFO - 	 PR-AUC: 0.852
2024-10-25 11:36 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 11:36 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 11:36 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 11:36 - INFO - 	 Best PR-AUC: 0.852
2024-10-25 11:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 11:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 11:36 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 11:36 - INFO - ---------------------------------------------
2024-10-25 11:37 - INFO - ---------------------------------------------
2024-10-25 11:37 - INFO - Epoch: 03 | Time: 0m 43s
2024-10-25 11:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98602
2024-10-25 11:37 - INFO - 	 Train Loss: 0.072
2024-10-25 11:37 - INFO - 	 Val. Loss: 0.067
2024-10-25 11:37 - INFO - 	 ROC-AUC: 0.986
2024-10-25 11:37 - INFO - 	 PR-AUC: 0.874
2024-10-25 11:37 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 11:37 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 11:37 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 11:37 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 11:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 11:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-25 11:37 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 11:37 - INFO - ---------------------------------------------
2024-10-25 11:38 - INFO - ---------------------------------------------
2024-10-25 11:38 - INFO - Epoch: 04 | Time: 0m 42s
2024-10-25 11:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98612
2024-10-25 11:38 - INFO - 	 Train Loss: 0.066
2024-10-25 11:38 - INFO - 	 Val. Loss: 0.064
2024-10-25 11:38 - INFO - 	 ROC-AUC: 0.986
2024-10-25 11:38 - INFO - 	 PR-AUC: 0.889
2024-10-25 11:38 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 11:38 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 11:38 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 11:38 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 11:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 11:38 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 11:38 - INFO - ---------------------------------------------
2024-10-25 11:38 - INFO - ---------------------------------------------
2024-10-25 11:38 - INFO - Epoch: 05 | Time: 0m 42s
2024-10-25 11:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98711
2024-10-25 11:38 - INFO - 	 Train Loss: 0.064
2024-10-25 11:38 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:38 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:38 - INFO - 	 PR-AUC: 0.895
2024-10-25 11:38 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 11:38 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:38 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:38 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 11:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 11:38 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 11:38 - INFO - ---------------------------------------------
2024-10-25 11:39 - INFO - ---------------------------------------------
2024-10-25 11:39 - INFO - Epoch: 06 | Time: 0m 42s
2024-10-25 11:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98876
2024-10-25 11:39 - INFO - 	 Train Loss: 0.062
2024-10-25 11:39 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:39 - INFO - 	 ROC-AUC: 0.989
2024-10-25 11:39 - INFO - 	 PR-AUC: 0.898
2024-10-25 11:39 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:39 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:39 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 11:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 11:39 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:39 - INFO - ---------------------------------------------
2024-10-25 11:40 - INFO - ---------------------------------------------
2024-10-25 11:40 - INFO - Epoch: 07 | Time: 0m 42s
2024-10-25 11:40 - INFO - 	 Train Loss: 0.059
2024-10-25 11:40 - INFO - 	 Val. Loss: 0.062
2024-10-25 11:40 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:40 - INFO - 	 PR-AUC: 0.896
2024-10-25 11:40 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 11:40 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:40 - INFO - 	 Best PR-AUC: 0.898
2024-10-25 11:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-25 11:40 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 11:40 - INFO - ---------------------------------------------
2024-10-25 11:40 - INFO - ---------------------------------------------
2024-10-25 11:40 - INFO - Epoch: 08 | Time: 0m 42s
2024-10-25 11:40 - INFO - 	 Train Loss: 0.057
2024-10-25 11:40 - INFO - 	 Val. Loss: 0.057
2024-10-25 11:40 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:40 - INFO - 	 PR-AUC: 0.906
2024-10-25 11:40 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 11:40 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 11:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:40 - INFO - 	 Best PR-AUC: 0.906
2024-10-25 11:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 11:40 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 11:40 - INFO - ---------------------------------------------
2024-10-25 11:41 - INFO - ---------------------------------------------
2024-10-25 11:41 - INFO - Epoch: 09 | Time: 0m 42s
2024-10-25 11:41 - INFO - 	 Train Loss: 0.056
2024-10-25 11:41 - INFO - 	 Val. Loss: 0.057
2024-10-25 11:41 - INFO - 	 ROC-AUC: 0.989
2024-10-25 11:41 - INFO - 	 PR-AUC: 0.900
2024-10-25 11:41 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 11:41 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 11:41 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:41 - INFO - 	 Best PR-AUC: 0.906
2024-10-25 11:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 11:41 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 11:41 - INFO - ---------------------------------------------
2024-10-25 11:42 - INFO - ---------------------------------------------
2024-10-25 11:42 - INFO - Epoch: 10 | Time: 0m 42s
2024-10-25 11:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98882
2024-10-25 11:42 - INFO - 	 Train Loss: 0.055
2024-10-25 11:42 - INFO - 	 Val. Loss: 0.056
2024-10-25 11:42 - INFO - 	 ROC-AUC: 0.989
2024-10-25 11:42 - INFO - 	 PR-AUC: 0.903
2024-10-25 11:42 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:42 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 11:42 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:42 - INFO - 	 Best PR-AUC: 0.906
2024-10-25 11:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 11:42 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 11:42 - INFO - ---------------------------------------------
2024-10-25 11:44 - INFO - Fit the preprocessing pipeline
2024-10-25 11:44 - INFO - Training using device: cuda
2024-10-25 11:44 - INFO - Creating generators
2024-10-25 11:44 - INFO - The model has 651,257 trainable parameters
2024-10-25 11:44 - INFO - * Model:
2024-10-25 11:44 - INFO - * -----------
2024-10-25 11:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 11:44 - INFO - * -----------
2024-10-25 11:44 - INFO - Evaluating model based on: rocauc
2024-10-25 11:44 - INFO - Training..

2024-10-25 11:45 - INFO - ---------------------------------------------
2024-10-25 11:45 - INFO - Epoch: 01 | Time: 0m 42s
2024-10-25 11:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98173
2024-10-25 11:45 - INFO - 	 Train Loss: 0.158
2024-10-25 11:45 - INFO - 	 Val. Loss: 0.078
2024-10-25 11:45 - INFO - 	 ROC-AUC: 0.982
2024-10-25 11:45 - INFO - 	 PR-AUC: 0.830
2024-10-25 11:45 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 11:45 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 11:45 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 11:45 - INFO - 	 Best PR-AUC: 0.830
2024-10-25 11:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 11:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-10-25 11:45 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 11:45 - INFO - ---------------------------------------------
2024-10-25 11:45 - INFO - ---------------------------------------------
2024-10-25 11:45 - INFO - Epoch: 02 | Time: 0m 42s
2024-10-25 11:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98501
2024-10-25 11:45 - INFO - 	 Train Loss: 0.084
2024-10-25 11:45 - INFO - 	 Val. Loss: 0.068
2024-10-25 11:45 - INFO - 	 ROC-AUC: 0.985
2024-10-25 11:45 - INFO - 	 PR-AUC: 0.860
2024-10-25 11:45 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 11:45 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 11:45 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 11:45 - INFO - 	 Best PR-AUC: 0.860
2024-10-25 11:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 11:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 11:45 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 11:45 - INFO - ---------------------------------------------
2024-10-25 11:46 - INFO - ---------------------------------------------
2024-10-25 11:46 - INFO - Epoch: 03 | Time: 0m 42s
2024-10-25 11:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98673
2024-10-25 11:46 - INFO - 	 Train Loss: 0.072
2024-10-25 11:46 - INFO - 	 Val. Loss: 0.064
2024-10-25 11:46 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:46 - INFO - 	 PR-AUC: 0.870
2024-10-25 11:46 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 11:46 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 11:46 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:46 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 11:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-25 11:46 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 11:46 - INFO - ---------------------------------------------
2024-10-25 11:47 - INFO - ---------------------------------------------
2024-10-25 11:47 - INFO - Epoch: 04 | Time: 0m 42s
2024-10-25 11:47 - INFO - 	 Train Loss: 0.069
2024-10-25 11:47 - INFO - 	 Val. Loss: 0.064
2024-10-25 11:47 - INFO - 	 ROC-AUC: 0.986
2024-10-25 11:47 - INFO - 	 PR-AUC: 0.877
2024-10-25 11:47 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 11:47 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 11:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:47 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 11:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-25 11:47 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 11:47 - INFO - ---------------------------------------------
2024-10-25 11:48 - INFO - ---------------------------------------------
2024-10-25 11:48 - INFO - Epoch: 05 | Time: 0m 42s
2024-10-25 11:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98679
2024-10-25 11:48 - INFO - 	 Train Loss: 0.064
2024-10-25 11:48 - INFO - 	 Val. Loss: 0.065
2024-10-25 11:48 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:48 - INFO - 	 PR-AUC: 0.875
2024-10-25 11:48 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:48 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 11:48 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:48 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 11:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-25 11:48 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:48 - INFO - ---------------------------------------------
2024-10-25 11:48 - INFO - ---------------------------------------------
2024-10-25 11:48 - INFO - Epoch: 06 | Time: 0m 43s
2024-10-25 11:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98819
2024-10-25 11:48 - INFO - 	 Train Loss: 0.062
2024-10-25 11:48 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:48 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:48 - INFO - 	 PR-AUC: 0.889
2024-10-25 11:48 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 11:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 11:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:48 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 11:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 11:48 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 11:48 - INFO - ---------------------------------------------
2024-10-25 11:49 - INFO - ---------------------------------------------
2024-10-25 11:49 - INFO - Epoch: 07 | Time: 0m 43s
2024-10-25 11:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98839
2024-10-25 11:49 - INFO - 	 Train Loss: 0.060
2024-10-25 11:49 - INFO - 	 Val. Loss: 0.058
2024-10-25 11:49 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:49 - INFO - 	 PR-AUC: 0.891
2024-10-25 11:49 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 11:49 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 11:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 11:49 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 11:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 11:49 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 11:49 - INFO - ---------------------------------------------
2024-10-25 11:50 - INFO - ---------------------------------------------
2024-10-25 11:50 - INFO - Epoch: 08 | Time: 0m 42s
2024-10-25 11:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98889
2024-10-25 11:50 - INFO - 	 Train Loss: 0.058
2024-10-25 11:50 - INFO - 	 Val. Loss: 0.058
2024-10-25 11:50 - INFO - 	 ROC-AUC: 0.989
2024-10-25 11:50 - INFO - 	 PR-AUC: 0.894
2024-10-25 11:50 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 11:50 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 11:50 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:50 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 11:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 11:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 11:50 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 11:50 - INFO - ---------------------------------------------
2024-10-25 11:51 - INFO - ---------------------------------------------
2024-10-25 11:51 - INFO - Epoch: 09 | Time: 0m 42s
2024-10-25 11:51 - INFO - 	 Train Loss: 0.057
2024-10-25 11:51 - INFO - 	 Val. Loss: 0.060
2024-10-25 11:51 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:51 - INFO - 	 PR-AUC: 0.884
2024-10-25 11:51 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 11:51 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 11:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:51 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 11:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 11:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 11:51 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 11:51 - INFO - ---------------------------------------------
2024-10-25 11:51 - INFO - ---------------------------------------------
2024-10-25 11:51 - INFO - Epoch: 10 | Time: 0m 43s
2024-10-25 11:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98902
2024-10-25 11:51 - INFO - 	 Train Loss: 0.056
2024-10-25 11:51 - INFO - 	 Val. Loss: 0.058
2024-10-25 11:51 - INFO - 	 ROC-AUC: 0.989
2024-10-25 11:51 - INFO - 	 PR-AUC: 0.889
2024-10-25 11:51 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 11:51 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 11:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:51 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 11:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 11:51 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 11:51 - INFO - ---------------------------------------------
2024-10-25 11:53 - INFO - Fit the preprocessing pipeline
2024-10-25 11:53 - INFO - Training using device: cuda
2024-10-25 11:53 - INFO - Creating generators
2024-10-25 11:53 - INFO - The model has 651,257 trainable parameters
2024-10-25 11:53 - INFO - * Model:
2024-10-25 11:53 - INFO - * -----------
2024-10-25 11:53 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 11:53 - INFO - * -----------
2024-10-25 11:53 - INFO - Evaluating model based on: rocauc
2024-10-25 11:53 - INFO - Training..

2024-10-25 11:54 - INFO - ---------------------------------------------
2024-10-25 11:54 - INFO - Epoch: 01 | Time: 0m 42s
2024-10-25 11:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98094
2024-10-25 11:54 - INFO - 	 Train Loss: 0.168
2024-10-25 11:54 - INFO - 	 Val. Loss: 0.078
2024-10-25 11:54 - INFO - 	 ROC-AUC: 0.981
2024-10-25 11:54 - INFO - 	 PR-AUC: 0.819
2024-10-25 11:54 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 11:54 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 11:54 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 11:54 - INFO - 	 Best PR-AUC: 0.819
2024-10-25 11:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 11:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-25 11:54 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 11:54 - INFO - ---------------------------------------------
2024-10-25 11:55 - INFO - ---------------------------------------------
2024-10-25 11:55 - INFO - Epoch: 02 | Time: 0m 42s
2024-10-25 11:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98502
2024-10-25 11:55 - INFO - 	 Train Loss: 0.085
2024-10-25 11:55 - INFO - 	 Val. Loss: 0.067
2024-10-25 11:55 - INFO - 	 ROC-AUC: 0.985
2024-10-25 11:55 - INFO - 	 PR-AUC: 0.860
2024-10-25 11:55 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 11:55 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 11:55 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 11:55 - INFO - 	 Best PR-AUC: 0.860
2024-10-25 11:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 11:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-25 11:55 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 11:55 - INFO - ---------------------------------------------
2024-10-25 11:56 - INFO - ---------------------------------------------
2024-10-25 11:56 - INFO - Epoch: 03 | Time: 0m 42s
2024-10-25 11:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98573
2024-10-25 11:56 - INFO - 	 Train Loss: 0.073
2024-10-25 11:56 - INFO - 	 Val. Loss: 0.066
2024-10-25 11:56 - INFO - 	 ROC-AUC: 0.986
2024-10-25 11:56 - INFO - 	 PR-AUC: 0.873
2024-10-25 11:56 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 11:56 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 11:56 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 11:56 - INFO - 	 Best PR-AUC: 0.873
2024-10-25 11:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 11:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-25 11:56 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 11:56 - INFO - ---------------------------------------------
2024-10-25 11:56 - INFO - ---------------------------------------------
2024-10-25 11:56 - INFO - Epoch: 04 | Time: 0m 42s
2024-10-25 11:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98711
2024-10-25 11:56 - INFO - 	 Train Loss: 0.069
2024-10-25 11:56 - INFO - 	 Val. Loss: 0.068
2024-10-25 11:56 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:56 - INFO - 	 PR-AUC: 0.883
2024-10-25 11:56 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 11:56 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 11:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:56 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 11:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 11:56 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 11:56 - INFO - ---------------------------------------------
2024-10-25 11:57 - INFO - ---------------------------------------------
2024-10-25 11:57 - INFO - Epoch: 05 | Time: 0m 42s
2024-10-25 11:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98737
2024-10-25 11:57 - INFO - 	 Train Loss: 0.065
2024-10-25 11:57 - INFO - 	 Val. Loss: 0.066
2024-10-25 11:57 - INFO - 	 ROC-AUC: 0.987
2024-10-25 11:57 - INFO - 	 PR-AUC: 0.885
2024-10-25 11:57 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 11:57 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 11:57 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 11:57 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 11:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 11:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-25 11:57 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 11:57 - INFO - ---------------------------------------------
2024-10-25 11:58 - INFO - ---------------------------------------------
2024-10-25 11:58 - INFO - Epoch: 06 | Time: 0m 42s
2024-10-25 11:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98879
2024-10-25 11:58 - INFO - 	 Train Loss: 0.062
2024-10-25 11:58 - INFO - 	 Val. Loss: 0.058
2024-10-25 11:58 - INFO - 	 ROC-AUC: 0.989
2024-10-25 11:58 - INFO - 	 PR-AUC: 0.895
2024-10-25 11:58 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 11:58 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 11:58 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:58 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 11:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 11:58 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 11:58 - INFO - ---------------------------------------------
2024-10-25 11:58 - INFO - ---------------------------------------------
2024-10-25 11:58 - INFO - Epoch: 07 | Time: 0m 42s
2024-10-25 11:58 - INFO - 	 Train Loss: 0.060
2024-10-25 11:58 - INFO - 	 Val. Loss: 0.059
2024-10-25 11:58 - INFO - 	 ROC-AUC: 0.988
2024-10-25 11:58 - INFO - 	 PR-AUC: 0.888
2024-10-25 11:58 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 11:58 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 11:58 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:58 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 11:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 11:58 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 11:58 - INFO - ---------------------------------------------
2024-10-25 11:59 - INFO - ---------------------------------------------
2024-10-25 11:59 - INFO - Epoch: 08 | Time: 0m 42s
2024-10-25 11:59 - INFO - 	 Train Loss: 0.057
2024-10-25 11:59 - INFO - 	 Val. Loss: 0.058
2024-10-25 11:59 - INFO - 	 ROC-AUC: 0.989
2024-10-25 11:59 - INFO - 	 PR-AUC: 0.896
2024-10-25 11:59 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 11:59 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 11:59 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 11:59 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 11:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 11:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 11:59 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 11:59 - INFO - ---------------------------------------------
2024-10-25 12:00 - INFO - ---------------------------------------------
2024-10-25 12:00 - INFO - Epoch: 09 | Time: 0m 42s
2024-10-25 12:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98941
2024-10-25 12:00 - INFO - 	 Train Loss: 0.057
2024-10-25 12:00 - INFO - 	 Val. Loss: 0.056
2024-10-25 12:00 - INFO - 	 ROC-AUC: 0.989
2024-10-25 12:00 - INFO - 	 PR-AUC: 0.900
2024-10-25 12:00 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:00 - INFO - 	 Best Val. Loss: 0.056
2024-10-25 12:00 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 12:00 - INFO - 	 Best PR-AUC: 0.900
2024-10-25 12:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 12:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-25 12:00 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 12:00 - INFO - ---------------------------------------------
2024-10-25 12:01 - INFO - ---------------------------------------------
2024-10-25 12:01 - INFO - Epoch: 10 | Time: 0m 42s
2024-10-25 12:01 - INFO - 	 Train Loss: 0.055
2024-10-25 12:01 - INFO - 	 Val. Loss: 0.055
2024-10-25 12:01 - INFO - 	 ROC-AUC: 0.989
2024-10-25 12:01 - INFO - 	 PR-AUC: 0.903
2024-10-25 12:01 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 12:01 - INFO - 	 Best Val. Loss: 0.055
2024-10-25 12:01 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 12:01 - INFO - 	 Best PR-AUC: 0.903
2024-10-25 12:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 12:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-25 12:01 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 12:01 - INFO - ---------------------------------------------
2024-10-25 12:03 - INFO - Fit the preprocessing pipeline
2024-10-25 12:03 - INFO - Training using device: cuda
2024-10-25 12:03 - INFO - Creating generators
2024-10-25 12:03 - INFO - The model has 651,257 trainable parameters
2024-10-25 12:03 - INFO - * Model:
2024-10-25 12:03 - INFO - * -----------
2024-10-25 12:03 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 12:03 - INFO - * -----------
2024-10-25 12:03 - INFO - Evaluating model based on: rocauc
2024-10-25 12:03 - INFO - Training..

2024-10-25 12:03 - INFO - ---------------------------------------------
2024-10-25 12:03 - INFO - Epoch: 01 | Time: 0m 43s
2024-10-25 12:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97746
2024-10-25 12:03 - INFO - 	 Train Loss: 0.154
2024-10-25 12:03 - INFO - 	 Val. Loss: 0.086
2024-10-25 12:03 - INFO - 	 ROC-AUC: 0.977
2024-10-25 12:03 - INFO - 	 PR-AUC: 0.801
2024-10-25 12:03 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-25 12:03 - INFO - 	 Best Val. Loss: 0.086
2024-10-25 12:03 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 12:03 - INFO - 	 Best PR-AUC: 0.801
2024-10-25 12:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 12:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-25 12:03 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-25 12:03 - INFO - ---------------------------------------------
2024-10-25 12:04 - INFO - ---------------------------------------------
2024-10-25 12:04 - INFO - Epoch: 02 | Time: 0m 42s
2024-10-25 12:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98341
2024-10-25 12:04 - INFO - 	 Train Loss: 0.084
2024-10-25 12:04 - INFO - 	 Val. Loss: 0.080
2024-10-25 12:04 - INFO - 	 ROC-AUC: 0.983
2024-10-25 12:04 - INFO - 	 PR-AUC: 0.840
2024-10-25 12:04 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 12:04 - INFO - 	 Best Val. Loss: 0.080
2024-10-25 12:04 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 12:04 - INFO - 	 Best PR-AUC: 0.840
2024-10-25 12:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 12:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-25 12:04 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 12:04 - INFO - ---------------------------------------------
2024-10-25 12:05 - INFO - ---------------------------------------------
2024-10-25 12:05 - INFO - Epoch: 03 | Time: 0m 43s
2024-10-25 12:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98531
2024-10-25 12:05 - INFO - 	 Train Loss: 0.074
2024-10-25 12:05 - INFO - 	 Val. Loss: 0.071
2024-10-25 12:05 - INFO - 	 ROC-AUC: 0.985
2024-10-25 12:05 - INFO - 	 PR-AUC: 0.869
2024-10-25 12:05 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 12:05 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 12:05 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 12:05 - INFO - 	 Best PR-AUC: 0.869
2024-10-25 12:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 12:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-25 12:05 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 12:05 - INFO - ---------------------------------------------
2024-10-25 12:06 - INFO - ---------------------------------------------
2024-10-25 12:06 - INFO - Epoch: 04 | Time: 0m 42s
2024-10-25 12:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98728
2024-10-25 12:06 - INFO - 	 Train Loss: 0.069
2024-10-25 12:06 - INFO - 	 Val. Loss: 0.066
2024-10-25 12:06 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:06 - INFO - 	 PR-AUC: 0.877
2024-10-25 12:06 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 12:06 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 12:06 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:06 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 12:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 12:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 12:06 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 12:06 - INFO - ---------------------------------------------
2024-10-25 12:06 - INFO - ---------------------------------------------
2024-10-25 12:06 - INFO - Epoch: 05 | Time: 0m 42s
2024-10-25 12:06 - INFO - 	 Train Loss: 0.065
2024-10-25 12:06 - INFO - 	 Val. Loss: 0.067
2024-10-25 12:06 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:06 - INFO - 	 PR-AUC: 0.868
2024-10-25 12:06 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 12:06 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 12:06 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:06 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 12:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 12:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 12:06 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 12:06 - INFO - ---------------------------------------------
2024-10-25 12:07 - INFO - ---------------------------------------------
2024-10-25 12:07 - INFO - Epoch: 06 | Time: 0m 42s
2024-10-25 12:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98852
2024-10-25 12:07 - INFO - 	 Train Loss: 0.064
2024-10-25 12:07 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:07 - INFO - 	 ROC-AUC: 0.989
2024-10-25 12:07 - INFO - 	 PR-AUC: 0.886
2024-10-25 12:07 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-25 12:07 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:07 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 12:07 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 12:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-25 12:07 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 12:07 - INFO - ---------------------------------------------
2024-10-25 12:08 - INFO - ---------------------------------------------
2024-10-25 12:08 - INFO - Epoch: 07 | Time: 0m 42s
2024-10-25 12:08 - INFO - 	 Train Loss: 0.061
2024-10-25 12:08 - INFO - 	 Val. Loss: 0.064
2024-10-25 12:08 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:08 - INFO - 	 PR-AUC: 0.876
2024-10-25 12:08 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-25 12:08 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 12:08 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 12:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-25 12:08 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 12:08 - INFO - ---------------------------------------------
2024-10-25 12:09 - INFO - ---------------------------------------------
2024-10-25 12:09 - INFO - Epoch: 08 | Time: 0m 42s
2024-10-25 12:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98895
2024-10-25 12:09 - INFO - 	 Train Loss: 0.059
2024-10-25 12:09 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:09 - INFO - 	 ROC-AUC: 0.989
2024-10-25 12:09 - INFO - 	 PR-AUC: 0.894
2024-10-25 12:09 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 12:09 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:09 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 12:09 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 12:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 12:09 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 12:09 - INFO - ---------------------------------------------
2024-10-25 12:09 - INFO - ---------------------------------------------
2024-10-25 12:09 - INFO - Epoch: 09 | Time: 0m 43s
2024-10-25 12:09 - INFO - 	 Train Loss: 0.058
2024-10-25 12:09 - INFO - 	 Val. Loss: 0.059
2024-10-25 12:09 - INFO - 	 ROC-AUC: 0.989
2024-10-25 12:09 - INFO - 	 PR-AUC: 0.895
2024-10-25 12:09 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 12:09 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 12:09 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 12:09 - INFO - 	 Best PR-AUC: 0.895
2024-10-25 12:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 12:09 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 12:09 - INFO - ---------------------------------------------
2024-10-25 12:10 - INFO - ---------------------------------------------
2024-10-25 12:10 - INFO - Epoch: 10 | Time: 0m 43s
2024-10-25 12:10 - INFO - 	 Train Loss: 0.057
2024-10-25 12:10 - INFO - 	 Val. Loss: 0.058
2024-10-25 12:10 - INFO - 	 ROC-AUC: 0.989
2024-10-25 12:10 - INFO - 	 PR-AUC: 0.900
2024-10-25 12:10 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 12:10 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 12:10 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 12:10 - INFO - 	 Best PR-AUC: 0.900
2024-10-25 12:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-25 12:10 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 12:10 - INFO - ---------------------------------------------
2024-10-25 12:12 - INFO - Fit the preprocessing pipeline
2024-10-25 12:12 - INFO - Training using device: cuda
2024-10-25 12:12 - INFO - Creating generators
2024-10-25 12:12 - INFO - The model has 651,257 trainable parameters
2024-10-25 12:12 - INFO - * Model:
2024-10-25 12:12 - INFO - * -----------
2024-10-25 12:12 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 12:12 - INFO - * -----------
2024-10-25 12:12 - INFO - Evaluating model based on: rocauc
2024-10-25 12:12 - INFO - Training..

2024-10-25 12:13 - INFO - ---------------------------------------------
2024-10-25 12:13 - INFO - Epoch: 01 | Time: 0m 43s
2024-10-25 12:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97926
2024-10-25 12:13 - INFO - 	 Train Loss: 0.155
2024-10-25 12:13 - INFO - 	 Val. Loss: 0.081
2024-10-25 12:13 - INFO - 	 ROC-AUC: 0.979
2024-10-25 12:13 - INFO - 	 PR-AUC: 0.822
2024-10-25 12:13 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 12:13 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 12:13 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 12:13 - INFO - 	 Best PR-AUC: 0.822
2024-10-25 12:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 12:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-25 12:13 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 12:13 - INFO - ---------------------------------------------
2024-10-25 12:14 - INFO - ---------------------------------------------
2024-10-25 12:14 - INFO - Epoch: 02 | Time: 0m 43s
2024-10-25 12:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98294
2024-10-25 12:14 - INFO - 	 Train Loss: 0.084
2024-10-25 12:14 - INFO - 	 Val. Loss: 0.072
2024-10-25 12:14 - INFO - 	 ROC-AUC: 0.983
2024-10-25 12:14 - INFO - 	 PR-AUC: 0.844
2024-10-25 12:14 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 12:14 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 12:14 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 12:14 - INFO - 	 Best PR-AUC: 0.844
2024-10-25 12:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 12:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-25 12:14 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 12:14 - INFO - ---------------------------------------------
2024-10-25 12:14 - INFO - ---------------------------------------------
2024-10-25 12:14 - INFO - Epoch: 03 | Time: 0m 42s
2024-10-25 12:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98499
2024-10-25 12:14 - INFO - 	 Train Loss: 0.073
2024-10-25 12:14 - INFO - 	 Val. Loss: 0.069
2024-10-25 12:14 - INFO - 	 ROC-AUC: 0.985
2024-10-25 12:14 - INFO - 	 PR-AUC: 0.865
2024-10-25 12:14 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 12:14 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 12:14 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 12:14 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 12:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 12:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-25 12:14 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 12:14 - INFO - ---------------------------------------------
2024-10-25 12:15 - INFO - ---------------------------------------------
2024-10-25 12:15 - INFO - Epoch: 04 | Time: 0m 43s
2024-10-25 12:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98536
2024-10-25 12:15 - INFO - 	 Train Loss: 0.068
2024-10-25 12:15 - INFO - 	 Val. Loss: 0.069
2024-10-25 12:15 - INFO - 	 ROC-AUC: 0.985
2024-10-25 12:15 - INFO - 	 PR-AUC: 0.869
2024-10-25 12:15 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 12:15 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 12:15 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 12:15 - INFO - 	 Best PR-AUC: 0.869
2024-10-25 12:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 12:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 12:15 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 12:15 - INFO - ---------------------------------------------
2024-10-25 12:16 - INFO - ---------------------------------------------
2024-10-25 12:16 - INFO - Epoch: 05 | Time: 0m 42s
2024-10-25 12:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98609
2024-10-25 12:16 - INFO - 	 Train Loss: 0.064
2024-10-25 12:16 - INFO - 	 Val. Loss: 0.064
2024-10-25 12:16 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:16 - INFO - 	 PR-AUC: 0.884
2024-10-25 12:16 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 12:16 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 12:16 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 12:16 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 12:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 12:16 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 12:16 - INFO - ---------------------------------------------
2024-10-25 12:17 - INFO - ---------------------------------------------
2024-10-25 12:17 - INFO - Epoch: 06 | Time: 0m 43s
2024-10-25 12:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98685
2024-10-25 12:17 - INFO - 	 Train Loss: 0.063
2024-10-25 12:17 - INFO - 	 Val. Loss: 0.067
2024-10-25 12:17 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:17 - INFO - 	 PR-AUC: 0.881
2024-10-25 12:17 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 12:17 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 12:17 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:17 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 12:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 12:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 12:17 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 12:17 - INFO - ---------------------------------------------
2024-10-25 12:17 - INFO - ---------------------------------------------
2024-10-25 12:17 - INFO - Epoch: 07 | Time: 0m 42s
2024-10-25 12:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98731
2024-10-25 12:17 - INFO - 	 Train Loss: 0.059
2024-10-25 12:17 - INFO - 	 Val. Loss: 0.063
2024-10-25 12:17 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:17 - INFO - 	 PR-AUC: 0.889
2024-10-25 12:17 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 12:17 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 12:17 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:17 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 12:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 12:17 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 12:17 - INFO - ---------------------------------------------
2024-10-25 12:18 - INFO - ---------------------------------------------
2024-10-25 12:18 - INFO - Epoch: 08 | Time: 0m 43s
2024-10-25 12:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98815
2024-10-25 12:18 - INFO - 	 Train Loss: 0.058
2024-10-25 12:18 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:18 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:18 - INFO - 	 PR-AUC: 0.894
2024-10-25 12:18 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:18 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:18 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:18 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 12:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-25 12:18 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 12:18 - INFO - ---------------------------------------------
2024-10-25 12:19 - INFO - ---------------------------------------------
2024-10-25 12:19 - INFO - Epoch: 09 | Time: 0m 42s
2024-10-25 12:19 - INFO - 	 Train Loss: 0.058
2024-10-25 12:19 - INFO - 	 Val. Loss: 0.057
2024-10-25 12:19 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:19 - INFO - 	 PR-AUC: 0.901
2024-10-25 12:19 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:19 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 12:19 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:19 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 12:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 12:19 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 12:19 - INFO - ---------------------------------------------
2024-10-25 12:19 - INFO - ---------------------------------------------
2024-10-25 12:19 - INFO - Epoch: 10 | Time: 0m 42s
2024-10-25 12:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98846
2024-10-25 12:19 - INFO - 	 Train Loss: 0.056
2024-10-25 12:19 - INFO - 	 Val. Loss: 0.058
2024-10-25 12:19 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:19 - INFO - 	 PR-AUC: 0.897
2024-10-25 12:19 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 12:19 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 12:19 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:19 - INFO - 	 Best PR-AUC: 0.901
2024-10-25 12:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 12:19 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 12:19 - INFO - ---------------------------------------------
