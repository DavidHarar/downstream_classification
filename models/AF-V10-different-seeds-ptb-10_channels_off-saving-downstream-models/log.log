2024-10-25 18:32 - INFO - Fit the preprocessing pipeline
2024-10-25 18:32 - INFO - Training using device: cuda
2024-10-25 18:32 - INFO - Creating generators
2024-10-25 18:32 - INFO - The model has 651,257 trainable parameters
2024-10-25 18:32 - INFO - * Model:
2024-10-25 18:32 - INFO - * -----------
2024-10-25 18:32 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 18:32 - INFO - * -----------
2024-10-25 18:32 - INFO - Evaluating model based on: rocauc
2024-10-25 18:32 - INFO - Training..

2024-10-25 18:33 - INFO - ---------------------------------------------
2024-10-25 18:33 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 18:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95532
2024-10-25 18:33 - INFO - 	 Train Loss: 0.201
2024-10-25 18:33 - INFO - 	 Val. Loss: 0.122
2024-10-25 18:33 - INFO - 	 ROC-AUC: 0.955
2024-10-25 18:33 - INFO - 	 PR-AUC: 0.595
2024-10-25 18:33 - INFO - 	 Recall for 0.4 precision: 0.880
2024-10-25 18:33 - INFO - 	 Best Val. Loss: 0.122
2024-10-25 18:33 - INFO - 	 Best ROC-AUC: 0.955
2024-10-25 18:33 - INFO - 	 Best PR-AUC: 0.595
2024-10-25 18:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-10-25 18:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.599
2024-10-25 18:33 - INFO - 	 Best Recall for 0.4 precision: 0.880
2024-10-25 18:33 - INFO - ---------------------------------------------
2024-10-25 18:33 - INFO - ---------------------------------------------
2024-10-25 18:33 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 18:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97139
2024-10-25 18:33 - INFO - 	 Train Loss: 0.112
2024-10-25 18:33 - INFO - 	 Val. Loss: 0.105
2024-10-25 18:33 - INFO - 	 ROC-AUC: 0.971
2024-10-25 18:33 - INFO - 	 PR-AUC: 0.727
2024-10-25 18:33 - INFO - 	 Recall for 0.4 precision: 0.948
2024-10-25 18:33 - INFO - 	 Best Val. Loss: 0.105
2024-10-25 18:33 - INFO - 	 Best ROC-AUC: 0.971
2024-10-25 18:33 - INFO - 	 Best PR-AUC: 0.727
2024-10-25 18:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-25 18:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.692
2024-10-25 18:33 - INFO - 	 Best Recall for 0.4 precision: 0.948
2024-10-25 18:33 - INFO - ---------------------------------------------
2024-10-25 18:34 - INFO - ---------------------------------------------
2024-10-25 18:34 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 18:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9728
2024-10-25 18:34 - INFO - 	 Train Loss: 0.100
2024-10-25 18:34 - INFO - 	 Val. Loss: 0.092
2024-10-25 18:34 - INFO - 	 ROC-AUC: 0.973
2024-10-25 18:34 - INFO - 	 PR-AUC: 0.771
2024-10-25 18:34 - INFO - 	 Recall for 0.4 precision: 0.955
2024-10-25 18:34 - INFO - 	 Best Val. Loss: 0.092
2024-10-25 18:34 - INFO - 	 Best ROC-AUC: 0.973
2024-10-25 18:34 - INFO - 	 Best PR-AUC: 0.771
2024-10-25 18:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-25 18:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-10-25 18:34 - INFO - 	 Best Recall for 0.4 precision: 0.955
2024-10-25 18:34 - INFO - ---------------------------------------------
2024-10-25 18:35 - INFO - ---------------------------------------------
2024-10-25 18:35 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 18:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9773
2024-10-25 18:35 - INFO - 	 Train Loss: 0.096
2024-10-25 18:35 - INFO - 	 Val. Loss: 0.084
2024-10-25 18:35 - INFO - 	 ROC-AUC: 0.977
2024-10-25 18:35 - INFO - 	 PR-AUC: 0.797
2024-10-25 18:35 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 18:35 - INFO - 	 Best Val. Loss: 0.084
2024-10-25 18:35 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 18:35 - INFO - 	 Best PR-AUC: 0.797
2024-10-25 18:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 18:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-25 18:35 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 18:35 - INFO - ---------------------------------------------
2024-10-25 18:35 - INFO - ---------------------------------------------
2024-10-25 18:35 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 18:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97887
2024-10-25 18:35 - INFO - 	 Train Loss: 0.092
2024-10-25 18:35 - INFO - 	 Val. Loss: 0.085
2024-10-25 18:35 - INFO - 	 ROC-AUC: 0.979
2024-10-25 18:35 - INFO - 	 PR-AUC: 0.812
2024-10-25 18:35 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 18:35 - INFO - 	 Best Val. Loss: 0.084
2024-10-25 18:35 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 18:35 - INFO - 	 Best PR-AUC: 0.812
2024-10-25 18:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 18:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-25 18:35 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 18:35 - INFO - ---------------------------------------------
2024-10-25 18:36 - INFO - ---------------------------------------------
2024-10-25 18:36 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 18:36 - INFO - 	 Train Loss: 0.089
2024-10-25 18:36 - INFO - 	 Val. Loss: 0.080
2024-10-25 18:36 - INFO - 	 ROC-AUC: 0.978
2024-10-25 18:36 - INFO - 	 PR-AUC: 0.821
2024-10-25 18:36 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 18:36 - INFO - 	 Best Val. Loss: 0.080
2024-10-25 18:36 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 18:36 - INFO - 	 Best PR-AUC: 0.821
2024-10-25 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-25 18:36 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 18:36 - INFO - ---------------------------------------------
2024-10-25 18:36 - INFO - ---------------------------------------------
2024-10-25 18:36 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 18:36 - INFO - 	 Train Loss: 0.087
2024-10-25 18:36 - INFO - 	 Val. Loss: 0.082
2024-10-25 18:36 - INFO - 	 ROC-AUC: 0.979
2024-10-25 18:36 - INFO - 	 PR-AUC: 0.802
2024-10-25 18:36 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 18:36 - INFO - 	 Best Val. Loss: 0.080
2024-10-25 18:36 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 18:36 - INFO - 	 Best PR-AUC: 0.821
2024-10-25 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-25 18:36 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 18:36 - INFO - ---------------------------------------------
2024-10-25 18:37 - INFO - ---------------------------------------------
2024-10-25 18:37 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 18:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98038
2024-10-25 18:37 - INFO - 	 Train Loss: 0.084
2024-10-25 18:37 - INFO - 	 Val. Loss: 0.079
2024-10-25 18:37 - INFO - 	 ROC-AUC: 0.980
2024-10-25 18:37 - INFO - 	 PR-AUC: 0.814
2024-10-25 18:37 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 18:37 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 18:37 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 18:37 - INFO - 	 Best PR-AUC: 0.821
2024-10-25 18:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 18:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-25 18:37 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 18:37 - INFO - ---------------------------------------------
2024-10-25 18:37 - INFO - ---------------------------------------------
2024-10-25 18:37 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 18:37 - INFO - 	 Train Loss: 0.085
2024-10-25 18:37 - INFO - 	 Val. Loss: 0.079
2024-10-25 18:37 - INFO - 	 ROC-AUC: 0.980
2024-10-25 18:37 - INFO - 	 PR-AUC: 0.843
2024-10-25 18:37 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 18:37 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 18:37 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 18:37 - INFO - 	 Best PR-AUC: 0.843
2024-10-25 18:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 18:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-25 18:37 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 18:37 - INFO - ---------------------------------------------
2024-10-25 18:38 - INFO - ---------------------------------------------
2024-10-25 18:38 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 18:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9827
2024-10-25 18:38 - INFO - 	 Train Loss: 0.084
2024-10-25 18:38 - INFO - 	 Val. Loss: 0.075
2024-10-25 18:38 - INFO - 	 ROC-AUC: 0.983
2024-10-25 18:38 - INFO - 	 PR-AUC: 0.836
2024-10-25 18:38 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 18:38 - INFO - 	 Best Val. Loss: 0.075
2024-10-25 18:38 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 18:38 - INFO - 	 Best PR-AUC: 0.843
2024-10-25 18:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 18:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-25 18:38 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 18:38 - INFO - ---------------------------------------------
2024-10-25 18:39 - INFO - Fit the preprocessing pipeline
2024-10-25 18:39 - INFO - Training using device: cuda
2024-10-25 18:39 - INFO - Creating generators
2024-10-25 18:39 - INFO - The model has 651,257 trainable parameters
2024-10-25 18:39 - INFO - * Model:
2024-10-25 18:39 - INFO - * -----------
2024-10-25 18:39 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 18:39 - INFO - * -----------
2024-10-25 18:39 - INFO - Evaluating model based on: rocauc
2024-10-25 18:39 - INFO - Training..

2024-10-25 18:40 - INFO - ---------------------------------------------
2024-10-25 18:40 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 18:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95819
2024-10-25 18:40 - INFO - 	 Train Loss: 0.193
2024-10-25 18:40 - INFO - 	 Val. Loss: 0.115
2024-10-25 18:40 - INFO - 	 ROC-AUC: 0.958
2024-10-25 18:40 - INFO - 	 PR-AUC: 0.652
2024-10-25 18:40 - INFO - 	 Recall for 0.4 precision: 0.899
2024-10-25 18:40 - INFO - 	 Best Val. Loss: 0.115
2024-10-25 18:40 - INFO - 	 Best ROC-AUC: 0.958
2024-10-25 18:40 - INFO - 	 Best PR-AUC: 0.652
2024-10-25 18:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-10-25 18:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.646
2024-10-25 18:40 - INFO - 	 Best Recall for 0.4 precision: 0.899
2024-10-25 18:40 - INFO - ---------------------------------------------
2024-10-25 18:40 - INFO - ---------------------------------------------
2024-10-25 18:40 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 18:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97073
2024-10-25 18:40 - INFO - 	 Train Loss: 0.114
2024-10-25 18:40 - INFO - 	 Val. Loss: 0.110
2024-10-25 18:40 - INFO - 	 ROC-AUC: 0.971
2024-10-25 18:40 - INFO - 	 PR-AUC: 0.724
2024-10-25 18:40 - INFO - 	 Recall for 0.4 precision: 0.951
2024-10-25 18:40 - INFO - 	 Best Val. Loss: 0.110
2024-10-25 18:40 - INFO - 	 Best ROC-AUC: 0.971
2024-10-25 18:40 - INFO - 	 Best PR-AUC: 0.724
2024-10-25 18:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 18:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.710
2024-10-25 18:40 - INFO - 	 Best Recall for 0.4 precision: 0.951
2024-10-25 18:40 - INFO - ---------------------------------------------
2024-10-25 18:41 - INFO - ---------------------------------------------
2024-10-25 18:41 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 18:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97977
2024-10-25 18:41 - INFO - 	 Train Loss: 0.102
2024-10-25 18:41 - INFO - 	 Val. Loss: 0.081
2024-10-25 18:41 - INFO - 	 ROC-AUC: 0.980
2024-10-25 18:41 - INFO - 	 PR-AUC: 0.810
2024-10-25 18:41 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 18:41 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 18:41 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 18:41 - INFO - 	 Best PR-AUC: 0.810
2024-10-25 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-25 18:41 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 18:41 - INFO - ---------------------------------------------
2024-10-25 18:41 - INFO - ---------------------------------------------
2024-10-25 18:41 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 18:41 - INFO - 	 Train Loss: 0.094
2024-10-25 18:41 - INFO - 	 Val. Loss: 0.085
2024-10-25 18:41 - INFO - 	 ROC-AUC: 0.977
2024-10-25 18:41 - INFO - 	 PR-AUC: 0.806
2024-10-25 18:41 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 18:41 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 18:41 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 18:41 - INFO - 	 Best PR-AUC: 0.810
2024-10-25 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-25 18:41 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 18:41 - INFO - ---------------------------------------------
2024-10-25 18:42 - INFO - ---------------------------------------------
2024-10-25 18:42 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 18:42 - INFO - 	 Train Loss: 0.091
2024-10-25 18:42 - INFO - 	 Val. Loss: 0.089
2024-10-25 18:42 - INFO - 	 ROC-AUC: 0.979
2024-10-25 18:42 - INFO - 	 PR-AUC: 0.805
2024-10-25 18:42 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 18:42 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 18:42 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 18:42 - INFO - 	 Best PR-AUC: 0.810
2024-10-25 18:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 18:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-25 18:42 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 18:42 - INFO - ---------------------------------------------
2024-10-25 18:43 - INFO - ---------------------------------------------
2024-10-25 18:43 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 18:43 - INFO - 	 Train Loss: 0.089
2024-10-25 18:43 - INFO - 	 Val. Loss: 0.080
2024-10-25 18:43 - INFO - 	 ROC-AUC: 0.979
2024-10-25 18:43 - INFO - 	 PR-AUC: 0.810
2024-10-25 18:43 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 18:43 - INFO - 	 Best Val. Loss: 0.080
2024-10-25 18:43 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 18:43 - INFO - 	 Best PR-AUC: 0.810
2024-10-25 18:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 18:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-25 18:43 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 18:43 - INFO - ---------------------------------------------
2024-10-25 18:43 - INFO - ---------------------------------------------
2024-10-25 18:43 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 18:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98009
2024-10-25 18:43 - INFO - 	 Train Loss: 0.086
2024-10-25 18:43 - INFO - 	 Val. Loss: 0.076
2024-10-25 18:43 - INFO - 	 ROC-AUC: 0.980
2024-10-25 18:43 - INFO - 	 PR-AUC: 0.848
2024-10-25 18:43 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 18:43 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 18:43 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 18:43 - INFO - 	 Best PR-AUC: 0.848
2024-10-25 18:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 18:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-25 18:43 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 18:43 - INFO - ---------------------------------------------
2024-10-25 18:44 - INFO - ---------------------------------------------
2024-10-25 18:44 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9804
2024-10-25 18:44 - INFO - 	 Train Loss: 0.084
2024-10-25 18:44 - INFO - 	 Val. Loss: 0.079
2024-10-25 18:44 - INFO - 	 ROC-AUC: 0.980
2024-10-25 18:44 - INFO - 	 PR-AUC: 0.819
2024-10-25 18:44 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 18:44 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 18:44 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 18:44 - INFO - 	 Best PR-AUC: 0.848
2024-10-25 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-25 18:44 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 18:44 - INFO - ---------------------------------------------
2024-10-25 18:44 - INFO - ---------------------------------------------
2024-10-25 18:44 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98141
2024-10-25 18:44 - INFO - 	 Train Loss: 0.083
2024-10-25 18:44 - INFO - 	 Val. Loss: 0.076
2024-10-25 18:44 - INFO - 	 ROC-AUC: 0.981
2024-10-25 18:44 - INFO - 	 PR-AUC: 0.840
2024-10-25 18:44 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-25 18:44 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 18:44 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 18:44 - INFO - 	 Best PR-AUC: 0.848
2024-10-25 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-25 18:44 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 18:44 - INFO - ---------------------------------------------
2024-10-25 18:45 - INFO - ---------------------------------------------
2024-10-25 18:45 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 18:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98242
2024-10-25 18:45 - INFO - 	 Train Loss: 0.082
2024-10-25 18:45 - INFO - 	 Val. Loss: 0.072
2024-10-25 18:45 - INFO - 	 ROC-AUC: 0.982
2024-10-25 18:45 - INFO - 	 PR-AUC: 0.837
2024-10-25 18:45 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 18:45 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 18:45 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 18:45 - INFO - 	 Best PR-AUC: 0.848
2024-10-25 18:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 18:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-25 18:45 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 18:45 - INFO - ---------------------------------------------
2024-10-25 18:46 - INFO - Fit the preprocessing pipeline
2024-10-25 18:46 - INFO - Training using device: cuda
2024-10-25 18:46 - INFO - Creating generators
2024-10-25 18:46 - INFO - The model has 651,257 trainable parameters
2024-10-25 18:46 - INFO - * Model:
2024-10-25 18:46 - INFO - * -----------
2024-10-25 18:46 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 18:46 - INFO - * -----------
2024-10-25 18:46 - INFO - Evaluating model based on: rocauc
2024-10-25 18:46 - INFO - Training..

2024-10-25 18:47 - INFO - ---------------------------------------------
2024-10-25 18:47 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 18:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95022
2024-10-25 18:47 - INFO - 	 Train Loss: 0.212
2024-10-25 18:47 - INFO - 	 Val. Loss: 0.175
2024-10-25 18:47 - INFO - 	 ROC-AUC: 0.950
2024-10-25 18:47 - INFO - 	 PR-AUC: 0.561
2024-10-25 18:47 - INFO - 	 Recall for 0.4 precision: 0.856
2024-10-25 18:47 - INFO - 	 Best Val. Loss: 0.175
2024-10-25 18:47 - INFO - 	 Best ROC-AUC: 0.950
2024-10-25 18:47 - INFO - 	 Best PR-AUC: 0.561
2024-10-25 18:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-10-25 18:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.596
2024-10-25 18:47 - INFO - 	 Best Recall for 0.4 precision: 0.856
2024-10-25 18:47 - INFO - ---------------------------------------------
2024-10-25 18:47 - INFO - ---------------------------------------------
2024-10-25 18:47 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 18:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.96803
2024-10-25 18:47 - INFO - 	 Train Loss: 0.118
2024-10-25 18:47 - INFO - 	 Val. Loss: 0.104
2024-10-25 18:47 - INFO - 	 ROC-AUC: 0.968
2024-10-25 18:47 - INFO - 	 PR-AUC: 0.695
2024-10-25 18:47 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-25 18:47 - INFO - 	 Best Val. Loss: 0.104
2024-10-25 18:47 - INFO - 	 Best ROC-AUC: 0.968
2024-10-25 18:47 - INFO - 	 Best PR-AUC: 0.695
2024-10-25 18:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 18:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.717
2024-10-25 18:47 - INFO - 	 Best Recall for 0.4 precision: 0.856
2024-10-25 18:47 - INFO - ---------------------------------------------
2024-10-25 18:48 - INFO - ---------------------------------------------
2024-10-25 18:48 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 18:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97578
2024-10-25 18:48 - INFO - 	 Train Loss: 0.102
2024-10-25 18:48 - INFO - 	 Val. Loss: 0.088
2024-10-25 18:48 - INFO - 	 ROC-AUC: 0.976
2024-10-25 18:48 - INFO - 	 PR-AUC: 0.768
2024-10-25 18:48 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-25 18:48 - INFO - 	 Best Val. Loss: 0.088
2024-10-25 18:48 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 18:48 - INFO - 	 Best PR-AUC: 0.768
2024-10-25 18:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 18:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-25 18:48 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-25 18:48 - INFO - ---------------------------------------------
2024-10-25 18:48 - INFO - ---------------------------------------------
2024-10-25 18:48 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 18:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97841
2024-10-25 18:48 - INFO - 	 Train Loss: 0.095
2024-10-25 18:48 - INFO - 	 Val. Loss: 0.086
2024-10-25 18:48 - INFO - 	 ROC-AUC: 0.978
2024-10-25 18:48 - INFO - 	 PR-AUC: 0.796
2024-10-25 18:48 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-25 18:48 - INFO - 	 Best Val. Loss: 0.086
2024-10-25 18:48 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 18:48 - INFO - 	 Best PR-AUC: 0.796
2024-10-25 18:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-25 18:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.776
2024-10-25 18:48 - INFO - 	 Best Recall for 0.4 precision: 0.964
2024-10-25 18:48 - INFO - ---------------------------------------------
2024-10-25 18:49 - INFO - ---------------------------------------------
2024-10-25 18:49 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 18:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97848
2024-10-25 18:49 - INFO - 	 Train Loss: 0.092
2024-10-25 18:49 - INFO - 	 Val. Loss: 0.086
2024-10-25 18:49 - INFO - 	 ROC-AUC: 0.978
2024-10-25 18:49 - INFO - 	 PR-AUC: 0.811
2024-10-25 18:49 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 18:49 - INFO - 	 Best Val. Loss: 0.086
2024-10-25 18:49 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 18:49 - INFO - 	 Best PR-AUC: 0.811
2024-10-25 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-10-25 18:49 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 18:49 - INFO - ---------------------------------------------
2024-10-25 18:49 - INFO - ---------------------------------------------
2024-10-25 18:49 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 18:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98039
2024-10-25 18:49 - INFO - 	 Train Loss: 0.089
2024-10-25 18:49 - INFO - 	 Val. Loss: 0.080
2024-10-25 18:49 - INFO - 	 ROC-AUC: 0.980
2024-10-25 18:49 - INFO - 	 PR-AUC: 0.831
2024-10-25 18:49 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 18:49 - INFO - 	 Best Val. Loss: 0.080
2024-10-25 18:49 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 18:49 - INFO - 	 Best PR-AUC: 0.831
2024-10-25 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-25 18:49 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 18:49 - INFO - ---------------------------------------------
2024-10-25 18:50 - INFO - ---------------------------------------------
2024-10-25 18:50 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 18:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98111
2024-10-25 18:50 - INFO - 	 Train Loss: 0.086
2024-10-25 18:50 - INFO - 	 Val. Loss: 0.076
2024-10-25 18:50 - INFO - 	 ROC-AUC: 0.981
2024-10-25 18:50 - INFO - 	 PR-AUC: 0.825
2024-10-25 18:50 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 18:50 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 18:50 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 18:50 - INFO - 	 Best PR-AUC: 0.831
2024-10-25 18:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 18:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-25 18:50 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 18:50 - INFO - ---------------------------------------------
2024-10-25 18:50 - INFO - ---------------------------------------------
2024-10-25 18:50 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 18:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98245
2024-10-25 18:50 - INFO - 	 Train Loss: 0.085
2024-10-25 18:50 - INFO - 	 Val. Loss: 0.073
2024-10-25 18:50 - INFO - 	 ROC-AUC: 0.982
2024-10-25 18:50 - INFO - 	 PR-AUC: 0.837
2024-10-25 18:50 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 18:50 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 18:50 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 18:50 - INFO - 	 Best PR-AUC: 0.837
2024-10-25 18:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 18:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-25 18:50 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 18:50 - INFO - ---------------------------------------------
2024-10-25 18:51 - INFO - ---------------------------------------------
2024-10-25 18:51 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 18:51 - INFO - 	 Train Loss: 0.083
2024-10-25 18:51 - INFO - 	 Val. Loss: 0.074
2024-10-25 18:51 - INFO - 	 ROC-AUC: 0.982
2024-10-25 18:51 - INFO - 	 PR-AUC: 0.826
2024-10-25 18:51 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 18:51 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 18:51 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 18:51 - INFO - 	 Best PR-AUC: 0.837
2024-10-25 18:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 18:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-25 18:51 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 18:51 - INFO - ---------------------------------------------
2024-10-25 18:52 - INFO - ---------------------------------------------
2024-10-25 18:52 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 18:52 - INFO - 	 Train Loss: 0.083
2024-10-25 18:52 - INFO - 	 Val. Loss: 0.074
2024-10-25 18:52 - INFO - 	 ROC-AUC: 0.982
2024-10-25 18:52 - INFO - 	 PR-AUC: 0.824
2024-10-25 18:52 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 18:52 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 18:52 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 18:52 - INFO - 	 Best PR-AUC: 0.837
2024-10-25 18:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 18:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-25 18:52 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 18:52 - INFO - ---------------------------------------------
2024-10-25 18:53 - INFO - Fit the preprocessing pipeline
2024-10-25 18:53 - INFO - Training using device: cuda
2024-10-25 18:53 - INFO - Creating generators
2024-10-25 18:53 - INFO - The model has 651,257 trainable parameters
2024-10-25 18:53 - INFO - * Model:
2024-10-25 18:53 - INFO - * -----------
2024-10-25 18:53 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 18:53 - INFO - * -----------
2024-10-25 18:53 - INFO - Evaluating model based on: rocauc
2024-10-25 18:53 - INFO - Training..

2024-10-25 18:54 - INFO - ---------------------------------------------
2024-10-25 18:54 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 18:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9554
2024-10-25 18:54 - INFO - 	 Train Loss: 0.200
2024-10-25 18:54 - INFO - 	 Val. Loss: 0.121
2024-10-25 18:54 - INFO - 	 ROC-AUC: 0.955
2024-10-25 18:54 - INFO - 	 PR-AUC: 0.627
2024-10-25 18:54 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-25 18:54 - INFO - 	 Best Val. Loss: 0.121
2024-10-25 18:54 - INFO - 	 Best ROC-AUC: 0.955
2024-10-25 18:54 - INFO - 	 Best PR-AUC: 0.627
2024-10-25 18:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-10-25 18:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.624
2024-10-25 18:54 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-25 18:54 - INFO - ---------------------------------------------
2024-10-25 18:54 - INFO - ---------------------------------------------
2024-10-25 18:54 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 18:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97196
2024-10-25 18:54 - INFO - 	 Train Loss: 0.111
2024-10-25 18:54 - INFO - 	 Val. Loss: 0.103
2024-10-25 18:54 - INFO - 	 ROC-AUC: 0.972
2024-10-25 18:54 - INFO - 	 PR-AUC: 0.749
2024-10-25 18:54 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-25 18:54 - INFO - 	 Best Val. Loss: 0.103
2024-10-25 18:54 - INFO - 	 Best ROC-AUC: 0.972
2024-10-25 18:54 - INFO - 	 Best PR-AUC: 0.749
2024-10-25 18:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 18:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-25 18:54 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-25 18:54 - INFO - ---------------------------------------------
2024-10-25 18:55 - INFO - ---------------------------------------------
2024-10-25 18:55 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 18:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97477
2024-10-25 18:55 - INFO - 	 Train Loss: 0.099
2024-10-25 18:55 - INFO - 	 Val. Loss: 0.089
2024-10-25 18:55 - INFO - 	 ROC-AUC: 0.975
2024-10-25 18:55 - INFO - 	 PR-AUC: 0.788
2024-10-25 18:55 - INFO - 	 Recall for 0.4 precision: 0.958
2024-10-25 18:55 - INFO - 	 Best Val. Loss: 0.089
2024-10-25 18:55 - INFO - 	 Best ROC-AUC: 0.975
2024-10-25 18:55 - INFO - 	 Best PR-AUC: 0.788
2024-10-25 18:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-25 18:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.758
2024-10-25 18:55 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-25 18:55 - INFO - ---------------------------------------------
2024-10-25 18:55 - INFO - ---------------------------------------------
2024-10-25 18:55 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 18:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97685
2024-10-25 18:55 - INFO - 	 Train Loss: 0.095
2024-10-25 18:55 - INFO - 	 Val. Loss: 0.084
2024-10-25 18:55 - INFO - 	 ROC-AUC: 0.977
2024-10-25 18:55 - INFO - 	 PR-AUC: 0.805
2024-10-25 18:55 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 18:55 - INFO - 	 Best Val. Loss: 0.084
2024-10-25 18:55 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 18:55 - INFO - 	 Best PR-AUC: 0.805
2024-10-25 18:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 18:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-25 18:55 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 18:55 - INFO - ---------------------------------------------
2024-10-25 18:56 - INFO - ---------------------------------------------
2024-10-25 18:56 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 18:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98072
2024-10-25 18:56 - INFO - 	 Train Loss: 0.090
2024-10-25 18:56 - INFO - 	 Val. Loss: 0.079
2024-10-25 18:56 - INFO - 	 ROC-AUC: 0.981
2024-10-25 18:56 - INFO - 	 PR-AUC: 0.823
2024-10-25 18:56 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 18:56 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 18:56 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 18:56 - INFO - 	 Best PR-AUC: 0.823
2024-10-25 18:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 18:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-25 18:56 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 18:56 - INFO - ---------------------------------------------
2024-10-25 18:56 - INFO - ---------------------------------------------
2024-10-25 18:56 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 18:56 - INFO - 	 Train Loss: 0.089
2024-10-25 18:56 - INFO - 	 Val. Loss: 0.081
2024-10-25 18:56 - INFO - 	 ROC-AUC: 0.980
2024-10-25 18:56 - INFO - 	 PR-AUC: 0.814
2024-10-25 18:56 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-25 18:56 - INFO - 	 Best Val. Loss: 0.079
2024-10-25 18:56 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 18:56 - INFO - 	 Best PR-AUC: 0.823
2024-10-25 18:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 18:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-25 18:56 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 18:56 - INFO - ---------------------------------------------
2024-10-25 18:57 - INFO - ---------------------------------------------
2024-10-25 18:57 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 18:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98153
2024-10-25 18:57 - INFO - 	 Train Loss: 0.087
2024-10-25 18:57 - INFO - 	 Val. Loss: 0.077
2024-10-25 18:57 - INFO - 	 ROC-AUC: 0.982
2024-10-25 18:57 - INFO - 	 PR-AUC: 0.833
2024-10-25 18:57 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 18:57 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 18:57 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 18:57 - INFO - 	 Best PR-AUC: 0.833
2024-10-25 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-25 18:57 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 18:57 - INFO - ---------------------------------------------
2024-10-25 18:57 - INFO - ---------------------------------------------
2024-10-25 18:57 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 18:57 - INFO - 	 Train Loss: 0.085
2024-10-25 18:57 - INFO - 	 Val. Loss: 0.081
2024-10-25 18:57 - INFO - 	 ROC-AUC: 0.979
2024-10-25 18:57 - INFO - 	 PR-AUC: 0.816
2024-10-25 18:57 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-25 18:57 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 18:57 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 18:57 - INFO - 	 Best PR-AUC: 0.833
2024-10-25 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-25 18:57 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 18:57 - INFO - ---------------------------------------------
2024-10-25 18:58 - INFO - ---------------------------------------------
2024-10-25 18:58 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 18:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98175
2024-10-25 18:58 - INFO - 	 Train Loss: 0.084
2024-10-25 18:58 - INFO - 	 Val. Loss: 0.076
2024-10-25 18:58 - INFO - 	 ROC-AUC: 0.982
2024-10-25 18:58 - INFO - 	 PR-AUC: 0.835
2024-10-25 18:58 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 18:58 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 18:58 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 18:58 - INFO - 	 Best PR-AUC: 0.835
2024-10-25 18:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 18:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-25 18:58 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 18:58 - INFO - ---------------------------------------------
2024-10-25 18:58 - INFO - ---------------------------------------------
2024-10-25 18:58 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 18:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98223
2024-10-25 18:58 - INFO - 	 Train Loss: 0.084
2024-10-25 18:58 - INFO - 	 Val. Loss: 0.074
2024-10-25 18:58 - INFO - 	 ROC-AUC: 0.982
2024-10-25 18:58 - INFO - 	 PR-AUC: 0.817
2024-10-25 18:58 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 18:58 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 18:58 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 18:58 - INFO - 	 Best PR-AUC: 0.835
2024-10-25 18:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 18:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-25 18:58 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 18:58 - INFO - ---------------------------------------------
2024-10-25 19:00 - INFO - Fit the preprocessing pipeline
2024-10-25 19:00 - INFO - Training using device: cuda
2024-10-25 19:00 - INFO - Creating generators
2024-10-25 19:00 - INFO - The model has 651,257 trainable parameters
2024-10-25 19:00 - INFO - * Model:
2024-10-25 19:00 - INFO - * -----------
2024-10-25 19:00 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 19:00 - INFO - * -----------
2024-10-25 19:00 - INFO - Evaluating model based on: rocauc
2024-10-25 19:00 - INFO - Training..

2024-10-25 19:00 - INFO - ---------------------------------------------
2024-10-25 19:00 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 19:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94688
2024-10-25 19:00 - INFO - 	 Train Loss: 0.202
2024-10-25 19:00 - INFO - 	 Val. Loss: 0.124
2024-10-25 19:00 - INFO - 	 ROC-AUC: 0.947
2024-10-25 19:00 - INFO - 	 PR-AUC: 0.628
2024-10-25 19:00 - INFO - 	 Recall for 0.4 precision: 0.860
2024-10-25 19:00 - INFO - 	 Best Val. Loss: 0.124
2024-10-25 19:00 - INFO - 	 Best ROC-AUC: 0.947
2024-10-25 19:00 - INFO - 	 Best PR-AUC: 0.628
2024-10-25 19:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-10-25 19:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.610
2024-10-25 19:00 - INFO - 	 Best Recall for 0.4 precision: 0.860
2024-10-25 19:00 - INFO - ---------------------------------------------
2024-10-25 19:01 - INFO - ---------------------------------------------
2024-10-25 19:01 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 19:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97431
2024-10-25 19:01 - INFO - 	 Train Loss: 0.114
2024-10-25 19:01 - INFO - 	 Val. Loss: 0.098
2024-10-25 19:01 - INFO - 	 ROC-AUC: 0.974
2024-10-25 19:01 - INFO - 	 PR-AUC: 0.755
2024-10-25 19:01 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 19:01 - INFO - 	 Best Val. Loss: 0.098
2024-10-25 19:01 - INFO - 	 Best ROC-AUC: 0.974
2024-10-25 19:01 - INFO - 	 Best PR-AUC: 0.755
2024-10-25 19:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-25 19:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.731
2024-10-25 19:01 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 19:01 - INFO - ---------------------------------------------
2024-10-25 19:02 - INFO - ---------------------------------------------
2024-10-25 19:02 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 19:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97755
2024-10-25 19:02 - INFO - 	 Train Loss: 0.101
2024-10-25 19:02 - INFO - 	 Val. Loss: 0.087
2024-10-25 19:02 - INFO - 	 ROC-AUC: 0.978
2024-10-25 19:02 - INFO - 	 PR-AUC: 0.800
2024-10-25 19:02 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 19:02 - INFO - 	 Best Val. Loss: 0.087
2024-10-25 19:02 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 19:02 - INFO - 	 Best PR-AUC: 0.800
2024-10-25 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-25 19:02 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 19:02 - INFO - ---------------------------------------------
2024-10-25 19:02 - INFO - ---------------------------------------------
2024-10-25 19:02 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 19:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97937
2024-10-25 19:02 - INFO - 	 Train Loss: 0.094
2024-10-25 19:02 - INFO - 	 Val. Loss: 0.078
2024-10-25 19:02 - INFO - 	 ROC-AUC: 0.979
2024-10-25 19:02 - INFO - 	 PR-AUC: 0.819
2024-10-25 19:02 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 19:02 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 19:02 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 19:02 - INFO - 	 Best PR-AUC: 0.819
2024-10-25 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-10-25 19:02 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-25 19:02 - INFO - ---------------------------------------------
2024-10-25 19:03 - INFO - ---------------------------------------------
2024-10-25 19:03 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 19:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98
2024-10-25 19:03 - INFO - 	 Train Loss: 0.090
2024-10-25 19:03 - INFO - 	 Val. Loss: 0.079
2024-10-25 19:03 - INFO - 	 ROC-AUC: 0.980
2024-10-25 19:03 - INFO - 	 PR-AUC: 0.821
2024-10-25 19:03 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 19:03 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 19:03 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 19:03 - INFO - 	 Best PR-AUC: 0.821
2024-10-25 19:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-25 19:03 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-25 19:03 - INFO - ---------------------------------------------
2024-10-25 19:03 - INFO - ---------------------------------------------
2024-10-25 19:03 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 19:03 - INFO - 	 Train Loss: 0.088
2024-10-25 19:03 - INFO - 	 Val. Loss: 0.080
2024-10-25 19:03 - INFO - 	 ROC-AUC: 0.980
2024-10-25 19:03 - INFO - 	 PR-AUC: 0.836
2024-10-25 19:03 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 19:03 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 19:03 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 19:03 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 19:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 19:03 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 19:03 - INFO - ---------------------------------------------
2024-10-25 19:04 - INFO - ---------------------------------------------
2024-10-25 19:04 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 19:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98091
2024-10-25 19:04 - INFO - 	 Train Loss: 0.086
2024-10-25 19:04 - INFO - 	 Val. Loss: 0.077
2024-10-25 19:04 - INFO - 	 ROC-AUC: 0.981
2024-10-25 19:04 - INFO - 	 PR-AUC: 0.822
2024-10-25 19:04 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-25 19:04 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 19:04 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 19:04 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 19:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 19:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 19:04 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 19:04 - INFO - ---------------------------------------------
2024-10-25 19:04 - INFO - ---------------------------------------------
2024-10-25 19:04 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 19:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98134
2024-10-25 19:04 - INFO - 	 Train Loss: 0.085
2024-10-25 19:04 - INFO - 	 Val. Loss: 0.076
2024-10-25 19:04 - INFO - 	 ROC-AUC: 0.981
2024-10-25 19:04 - INFO - 	 PR-AUC: 0.831
2024-10-25 19:04 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 19:04 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 19:04 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 19:04 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 19:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 19:04 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 19:04 - INFO - ---------------------------------------------
2024-10-25 19:05 - INFO - ---------------------------------------------
2024-10-25 19:05 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 19:05 - INFO - 	 Train Loss: 0.083
2024-10-25 19:05 - INFO - 	 Val. Loss: 0.078
2024-10-25 19:05 - INFO - 	 ROC-AUC: 0.980
2024-10-25 19:05 - INFO - 	 PR-AUC: 0.830
2024-10-25 19:05 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 19:05 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 19:05 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 19:05 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 19:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 19:05 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 19:05 - INFO - ---------------------------------------------
2024-10-25 19:05 - INFO - ---------------------------------------------
2024-10-25 19:05 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 19:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98163
2024-10-25 19:05 - INFO - 	 Train Loss: 0.083
2024-10-25 19:05 - INFO - 	 Val. Loss: 0.074
2024-10-25 19:05 - INFO - 	 ROC-AUC: 0.982
2024-10-25 19:05 - INFO - 	 PR-AUC: 0.835
2024-10-25 19:05 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 19:05 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 19:05 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 19:05 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 19:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 19:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 19:05 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 19:05 - INFO - ---------------------------------------------
2024-10-25 19:07 - INFO - Fit the preprocessing pipeline
2024-10-25 19:07 - INFO - Training using device: cuda
2024-10-25 19:07 - INFO - Creating generators
2024-10-25 19:07 - INFO - The model has 651,257 trainable parameters
2024-10-25 19:07 - INFO - * Model:
2024-10-25 19:07 - INFO - * -----------
2024-10-25 19:07 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 19:07 - INFO - * -----------
2024-10-25 19:07 - INFO - Evaluating model based on: rocauc
2024-10-25 19:07 - INFO - Training..

2024-10-25 19:07 - INFO - ---------------------------------------------
2024-10-25 19:07 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 19:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.95809
2024-10-25 19:07 - INFO - 	 Train Loss: 0.205
2024-10-25 19:07 - INFO - 	 Val. Loss: 0.115
2024-10-25 19:07 - INFO - 	 ROC-AUC: 0.958
2024-10-25 19:07 - INFO - 	 PR-AUC: 0.671
2024-10-25 19:07 - INFO - 	 Recall for 0.4 precision: 0.886
2024-10-25 19:07 - INFO - 	 Best Val. Loss: 0.115
2024-10-25 19:07 - INFO - 	 Best ROC-AUC: 0.958
2024-10-25 19:07 - INFO - 	 Best PR-AUC: 0.671
2024-10-25 19:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-10-25 19:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.646
2024-10-25 19:07 - INFO - 	 Best Recall for 0.4 precision: 0.886
2024-10-25 19:07 - INFO - ---------------------------------------------
2024-10-25 19:08 - INFO - ---------------------------------------------
2024-10-25 19:08 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 19:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9674
2024-10-25 19:08 - INFO - 	 Train Loss: 0.115
2024-10-25 19:08 - INFO - 	 Val. Loss: 0.107
2024-10-25 19:08 - INFO - 	 ROC-AUC: 0.967
2024-10-25 19:08 - INFO - 	 PR-AUC: 0.706
2024-10-25 19:08 - INFO - 	 Recall for 0.4 precision: 0.939
2024-10-25 19:08 - INFO - 	 Best Val. Loss: 0.107
2024-10-25 19:08 - INFO - 	 Best ROC-AUC: 0.967
2024-10-25 19:08 - INFO - 	 Best PR-AUC: 0.706
2024-10-25 19:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-25 19:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.683
2024-10-25 19:08 - INFO - 	 Best Recall for 0.4 precision: 0.939
2024-10-25 19:08 - INFO - ---------------------------------------------
2024-10-25 19:08 - INFO - ---------------------------------------------
2024-10-25 19:08 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 19:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97519
2024-10-25 19:08 - INFO - 	 Train Loss: 0.100
2024-10-25 19:08 - INFO - 	 Val. Loss: 0.089
2024-10-25 19:08 - INFO - 	 ROC-AUC: 0.975
2024-10-25 19:08 - INFO - 	 PR-AUC: 0.763
2024-10-25 19:08 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-25 19:08 - INFO - 	 Best Val. Loss: 0.089
2024-10-25 19:08 - INFO - 	 Best ROC-AUC: 0.975
2024-10-25 19:08 - INFO - 	 Best PR-AUC: 0.763
2024-10-25 19:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 19:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.733
2024-10-25 19:08 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-25 19:08 - INFO - ---------------------------------------------
2024-10-25 19:09 - INFO - ---------------------------------------------
2024-10-25 19:09 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 19:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97815
2024-10-25 19:09 - INFO - 	 Train Loss: 0.096
2024-10-25 19:09 - INFO - 	 Val. Loss: 0.083
2024-10-25 19:09 - INFO - 	 ROC-AUC: 0.978
2024-10-25 19:09 - INFO - 	 PR-AUC: 0.795
2024-10-25 19:09 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 19:09 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 19:09 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 19:09 - INFO - 	 Best PR-AUC: 0.795
2024-10-25 19:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 19:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-25 19:09 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 19:09 - INFO - ---------------------------------------------
2024-10-25 19:09 - INFO - ---------------------------------------------
2024-10-25 19:09 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 19:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97918
2024-10-25 19:09 - INFO - 	 Train Loss: 0.092
2024-10-25 19:09 - INFO - 	 Val. Loss: 0.081
2024-10-25 19:09 - INFO - 	 ROC-AUC: 0.979
2024-10-25 19:09 - INFO - 	 PR-AUC: 0.803
2024-10-25 19:09 - INFO - 	 Recall for 0.4 precision: 0.964
2024-10-25 19:09 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 19:09 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 19:09 - INFO - 	 Best PR-AUC: 0.803
2024-10-25 19:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 19:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-25 19:09 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 19:09 - INFO - ---------------------------------------------
2024-10-25 19:10 - INFO - ---------------------------------------------
2024-10-25 19:10 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 19:10 - INFO - 	 Train Loss: 0.087
2024-10-25 19:10 - INFO - 	 Val. Loss: 0.083
2024-10-25 19:10 - INFO - 	 ROC-AUC: 0.979
2024-10-25 19:10 - INFO - 	 PR-AUC: 0.801
2024-10-25 19:10 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 19:10 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 19:10 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 19:10 - INFO - 	 Best PR-AUC: 0.803
2024-10-25 19:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 19:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-25 19:10 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-25 19:10 - INFO - ---------------------------------------------
2024-10-25 19:11 - INFO - ---------------------------------------------
2024-10-25 19:11 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 19:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98116
2024-10-25 19:11 - INFO - 	 Train Loss: 0.087
2024-10-25 19:11 - INFO - 	 Val. Loss: 0.076
2024-10-25 19:11 - INFO - 	 ROC-AUC: 0.981
2024-10-25 19:11 - INFO - 	 PR-AUC: 0.817
2024-10-25 19:11 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 19:11 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 19:11 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 19:11 - INFO - 	 Best PR-AUC: 0.817
2024-10-25 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-25 19:11 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 19:11 - INFO - ---------------------------------------------
2024-10-25 19:11 - INFO - ---------------------------------------------
2024-10-25 19:11 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 19:11 - INFO - 	 Train Loss: 0.084
2024-10-25 19:11 - INFO - 	 Val. Loss: 0.075
2024-10-25 19:11 - INFO - 	 ROC-AUC: 0.981
2024-10-25 19:11 - INFO - 	 PR-AUC: 0.836
2024-10-25 19:11 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 19:11 - INFO - 	 Best Val. Loss: 0.075
2024-10-25 19:11 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 19:11 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-25 19:11 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 19:11 - INFO - ---------------------------------------------
2024-10-25 19:12 - INFO - ---------------------------------------------
2024-10-25 19:12 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 19:12 - INFO - 	 Train Loss: 0.084
2024-10-25 19:12 - INFO - 	 Val. Loss: 0.078
2024-10-25 19:12 - INFO - 	 ROC-AUC: 0.981
2024-10-25 19:12 - INFO - 	 PR-AUC: 0.829
2024-10-25 19:12 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 19:12 - INFO - 	 Best Val. Loss: 0.075
2024-10-25 19:12 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 19:12 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 19:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-25 19:12 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 19:12 - INFO - ---------------------------------------------
2024-10-25 19:12 - INFO - ---------------------------------------------
2024-10-25 19:12 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 19:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98282
2024-10-25 19:12 - INFO - 	 Train Loss: 0.082
2024-10-25 19:12 - INFO - 	 Val. Loss: 0.073
2024-10-25 19:12 - INFO - 	 ROC-AUC: 0.983
2024-10-25 19:12 - INFO - 	 PR-AUC: 0.828
2024-10-25 19:12 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 19:12 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 19:12 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 19:12 - INFO - 	 Best PR-AUC: 0.836
2024-10-25 19:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 19:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-25 19:12 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 19:12 - INFO - ---------------------------------------------
2024-10-25 19:14 - INFO - Fit the preprocessing pipeline
2024-10-25 19:14 - INFO - Training using device: cuda
2024-10-25 19:14 - INFO - Creating generators
2024-10-25 19:14 - INFO - The model has 651,257 trainable parameters
2024-10-25 19:14 - INFO - * Model:
2024-10-25 19:14 - INFO - * -----------
2024-10-25 19:14 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 19:14 - INFO - * -----------
2024-10-25 19:14 - INFO - Evaluating model based on: rocauc
2024-10-25 19:14 - INFO - Training..

2024-10-25 19:14 - INFO - ---------------------------------------------
2024-10-25 19:14 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 19:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.94563
2024-10-25 19:14 - INFO - 	 Train Loss: 0.213
2024-10-25 19:14 - INFO - 	 Val. Loss: 0.143
2024-10-25 19:14 - INFO - 	 ROC-AUC: 0.946
2024-10-25 19:14 - INFO - 	 PR-AUC: 0.536
2024-10-25 19:14 - INFO - 	 Recall for 0.4 precision: 0.005
2024-10-25 19:14 - INFO - 	 Best Val. Loss: 0.143
2024-10-25 19:14 - INFO - 	 Best ROC-AUC: 0.946
2024-10-25 19:14 - INFO - 	 Best PR-AUC: 0.536
2024-10-25 19:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-10-25 19:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.577
2024-10-25 19:14 - INFO - 	 Best Recall for 0.4 precision: 0.005
2024-10-25 19:14 - INFO - ---------------------------------------------
2024-10-25 19:15 - INFO - ---------------------------------------------
2024-10-25 19:15 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 19:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97068
2024-10-25 19:15 - INFO - 	 Train Loss: 0.116
2024-10-25 19:15 - INFO - 	 Val. Loss: 0.103
2024-10-25 19:15 - INFO - 	 ROC-AUC: 0.971
2024-10-25 19:15 - INFO - 	 PR-AUC: 0.722
2024-10-25 19:15 - INFO - 	 Recall for 0.4 precision: 0.953
2024-10-25 19:15 - INFO - 	 Best Val. Loss: 0.103
2024-10-25 19:15 - INFO - 	 Best ROC-AUC: 0.971
2024-10-25 19:15 - INFO - 	 Best PR-AUC: 0.722
2024-10-25 19:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 19:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.720
2024-10-25 19:15 - INFO - 	 Best Recall for 0.4 precision: 0.953
2024-10-25 19:15 - INFO - ---------------------------------------------
2024-10-25 19:15 - INFO - ---------------------------------------------
2024-10-25 19:15 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 19:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97415
2024-10-25 19:15 - INFO - 	 Train Loss: 0.101
2024-10-25 19:15 - INFO - 	 Val. Loss: 0.097
2024-10-25 19:15 - INFO - 	 ROC-AUC: 0.974
2024-10-25 19:15 - INFO - 	 PR-AUC: 0.772
2024-10-25 19:15 - INFO - 	 Recall for 0.4 precision: 0.956
2024-10-25 19:15 - INFO - 	 Best Val. Loss: 0.097
2024-10-25 19:15 - INFO - 	 Best ROC-AUC: 0.974
2024-10-25 19:15 - INFO - 	 Best PR-AUC: 0.772
2024-10-25 19:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 19:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.756
2024-10-25 19:15 - INFO - 	 Best Recall for 0.4 precision: 0.956
2024-10-25 19:15 - INFO - ---------------------------------------------
2024-10-25 19:16 - INFO - ---------------------------------------------
2024-10-25 19:16 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 19:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97755
2024-10-25 19:16 - INFO - 	 Train Loss: 0.095
2024-10-25 19:16 - INFO - 	 Val. Loss: 0.084
2024-10-25 19:16 - INFO - 	 ROC-AUC: 0.978
2024-10-25 19:16 - INFO - 	 PR-AUC: 0.800
2024-10-25 19:16 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 19:16 - INFO - 	 Best Val. Loss: 0.084
2024-10-25 19:16 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 19:16 - INFO - 	 Best PR-AUC: 0.800
2024-10-25 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-25 19:16 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 19:16 - INFO - ---------------------------------------------
2024-10-25 19:16 - INFO - ---------------------------------------------
2024-10-25 19:16 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 19:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97777
2024-10-25 19:16 - INFO - 	 Train Loss: 0.090
2024-10-25 19:16 - INFO - 	 Val. Loss: 0.083
2024-10-25 19:16 - INFO - 	 ROC-AUC: 0.978
2024-10-25 19:16 - INFO - 	 PR-AUC: 0.790
2024-10-25 19:16 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 19:16 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 19:16 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 19:16 - INFO - 	 Best PR-AUC: 0.800
2024-10-25 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-25 19:16 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-25 19:16 - INFO - ---------------------------------------------
2024-10-25 19:17 - INFO - ---------------------------------------------
2024-10-25 19:17 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 19:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98019
2024-10-25 19:17 - INFO - 	 Train Loss: 0.088
2024-10-25 19:17 - INFO - 	 Val. Loss: 0.077
2024-10-25 19:17 - INFO - 	 ROC-AUC: 0.980
2024-10-25 19:17 - INFO - 	 PR-AUC: 0.831
2024-10-25 19:17 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 19:17 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 19:17 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 19:17 - INFO - 	 Best PR-AUC: 0.831
2024-10-25 19:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 19:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-25 19:17 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 19:17 - INFO - ---------------------------------------------
2024-10-25 19:17 - INFO - ---------------------------------------------
2024-10-25 19:17 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 19:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98026
2024-10-25 19:17 - INFO - 	 Train Loss: 0.088
2024-10-25 19:17 - INFO - 	 Val. Loss: 0.078
2024-10-25 19:17 - INFO - 	 ROC-AUC: 0.980
2024-10-25 19:17 - INFO - 	 PR-AUC: 0.819
2024-10-25 19:17 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 19:17 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 19:17 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 19:17 - INFO - 	 Best PR-AUC: 0.831
2024-10-25 19:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 19:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-25 19:17 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 19:17 - INFO - ---------------------------------------------
2024-10-25 19:18 - INFO - ---------------------------------------------
2024-10-25 19:18 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 19:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98078
2024-10-25 19:18 - INFO - 	 Train Loss: 0.086
2024-10-25 19:18 - INFO - 	 Val. Loss: 0.077
2024-10-25 19:18 - INFO - 	 ROC-AUC: 0.981
2024-10-25 19:18 - INFO - 	 PR-AUC: 0.816
2024-10-25 19:18 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 19:18 - INFO - 	 Best Val. Loss: 0.077
2024-10-25 19:18 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 19:18 - INFO - 	 Best PR-AUC: 0.831
2024-10-25 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-25 19:18 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 19:18 - INFO - ---------------------------------------------
2024-10-25 19:18 - INFO - ---------------------------------------------
2024-10-25 19:18 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 19:18 - INFO - 	 Train Loss: 0.084
2024-10-25 19:18 - INFO - 	 Val. Loss: 0.076
2024-10-25 19:18 - INFO - 	 ROC-AUC: 0.981
2024-10-25 19:18 - INFO - 	 PR-AUC: 0.827
2024-10-25 19:18 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 19:18 - INFO - 	 Best Val. Loss: 0.076
2024-10-25 19:18 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 19:18 - INFO - 	 Best PR-AUC: 0.831
2024-10-25 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-25 19:18 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 19:18 - INFO - ---------------------------------------------
2024-10-25 19:19 - INFO - ---------------------------------------------
2024-10-25 19:19 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 19:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98275
2024-10-25 19:19 - INFO - 	 Train Loss: 0.083
2024-10-25 19:19 - INFO - 	 Val. Loss: 0.072
2024-10-25 19:19 - INFO - 	 ROC-AUC: 0.983
2024-10-25 19:19 - INFO - 	 PR-AUC: 0.841
2024-10-25 19:19 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 19:19 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 19:19 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 19:19 - INFO - 	 Best PR-AUC: 0.841
2024-10-25 19:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 19:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-25 19:19 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 19:19 - INFO - ---------------------------------------------
2024-10-25 19:20 - INFO - Fit the preprocessing pipeline
2024-10-25 19:20 - INFO - Training using device: cuda
2024-10-25 19:20 - INFO - Creating generators
2024-10-25 19:21 - INFO - The model has 651,257 trainable parameters
2024-10-25 19:21 - INFO - * Model:
2024-10-25 19:21 - INFO - * -----------
2024-10-25 19:21 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 19:21 - INFO - * -----------
2024-10-25 19:21 - INFO - Evaluating model based on: rocauc
2024-10-25 19:21 - INFO - Training..

2024-10-25 19:21 - INFO - ---------------------------------------------
2024-10-25 19:21 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 19:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9508
2024-10-25 19:21 - INFO - 	 Train Loss: 0.192
2024-10-25 19:21 - INFO - 	 Val. Loss: 0.118
2024-10-25 19:21 - INFO - 	 ROC-AUC: 0.951
2024-10-25 19:21 - INFO - 	 PR-AUC: 0.654
2024-10-25 19:21 - INFO - 	 Recall for 0.4 precision: 0.882
2024-10-25 19:21 - INFO - 	 Best Val. Loss: 0.118
2024-10-25 19:21 - INFO - 	 Best ROC-AUC: 0.951
2024-10-25 19:21 - INFO - 	 Best PR-AUC: 0.654
2024-10-25 19:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-10-25 19:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.623
2024-10-25 19:21 - INFO - 	 Best Recall for 0.4 precision: 0.882
2024-10-25 19:21 - INFO - ---------------------------------------------
2024-10-25 19:22 - INFO - ---------------------------------------------
2024-10-25 19:22 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 19:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97602
2024-10-25 19:22 - INFO - 	 Train Loss: 0.111
2024-10-25 19:22 - INFO - 	 Val. Loss: 0.091
2024-10-25 19:22 - INFO - 	 ROC-AUC: 0.976
2024-10-25 19:22 - INFO - 	 PR-AUC: 0.766
2024-10-25 19:22 - INFO - 	 Recall for 0.4 precision: 0.956
2024-10-25 19:22 - INFO - 	 Best Val. Loss: 0.091
2024-10-25 19:22 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 19:22 - INFO - 	 Best PR-AUC: 0.766
2024-10-25 19:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 19:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.749
2024-10-25 19:22 - INFO - 	 Best Recall for 0.4 precision: 0.956
2024-10-25 19:22 - INFO - ---------------------------------------------
2024-10-25 19:22 - INFO - ---------------------------------------------
2024-10-25 19:22 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 19:22 - INFO - 	 Train Loss: 0.102
2024-10-25 19:22 - INFO - 	 Val. Loss: 0.096
2024-10-25 19:22 - INFO - 	 ROC-AUC: 0.975
2024-10-25 19:22 - INFO - 	 PR-AUC: 0.768
2024-10-25 19:22 - INFO - 	 Recall for 0.4 precision: 0.958
2024-10-25 19:22 - INFO - 	 Best Val. Loss: 0.091
2024-10-25 19:22 - INFO - 	 Best ROC-AUC: 0.976
2024-10-25 19:22 - INFO - 	 Best PR-AUC: 0.768
2024-10-25 19:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 19:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.769
2024-10-25 19:22 - INFO - 	 Best Recall for 0.4 precision: 0.958
2024-10-25 19:22 - INFO - ---------------------------------------------
2024-10-25 19:23 - INFO - ---------------------------------------------
2024-10-25 19:23 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 19:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97763
2024-10-25 19:23 - INFO - 	 Train Loss: 0.094
2024-10-25 19:23 - INFO - 	 Val. Loss: 0.083
2024-10-25 19:23 - INFO - 	 ROC-AUC: 0.978
2024-10-25 19:23 - INFO - 	 PR-AUC: 0.800
2024-10-25 19:23 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 19:23 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 19:23 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 19:23 - INFO - 	 Best PR-AUC: 0.800
2024-10-25 19:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 19:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.776
2024-10-25 19:23 - INFO - 	 Best Recall for 0.4 precision: 0.965
2024-10-25 19:23 - INFO - ---------------------------------------------
2024-10-25 19:23 - INFO - ---------------------------------------------
2024-10-25 19:23 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 19:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97769
2024-10-25 19:23 - INFO - 	 Train Loss: 0.090
2024-10-25 19:23 - INFO - 	 Val. Loss: 0.082
2024-10-25 19:23 - INFO - 	 ROC-AUC: 0.978
2024-10-25 19:23 - INFO - 	 PR-AUC: 0.800
2024-10-25 19:23 - INFO - 	 Recall for 0.4 precision: 0.967
2024-10-25 19:23 - INFO - 	 Best Val. Loss: 0.082
2024-10-25 19:23 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 19:23 - INFO - 	 Best PR-AUC: 0.800
2024-10-25 19:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-25 19:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.776
2024-10-25 19:23 - INFO - 	 Best Recall for 0.4 precision: 0.967
2024-10-25 19:23 - INFO - ---------------------------------------------
2024-10-25 19:24 - INFO - ---------------------------------------------
2024-10-25 19:24 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 19:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98006
2024-10-25 19:24 - INFO - 	 Train Loss: 0.089
2024-10-25 19:24 - INFO - 	 Val. Loss: 0.078
2024-10-25 19:24 - INFO - 	 ROC-AUC: 0.980
2024-10-25 19:24 - INFO - 	 PR-AUC: 0.826
2024-10-25 19:24 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 19:24 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 19:24 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 19:24 - INFO - 	 Best PR-AUC: 0.826
2024-10-25 19:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 19:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-25 19:24 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 19:24 - INFO - ---------------------------------------------
2024-10-25 19:24 - INFO - ---------------------------------------------
2024-10-25 19:24 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 19:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98043
2024-10-25 19:24 - INFO - 	 Train Loss: 0.085
2024-10-25 19:24 - INFO - 	 Val. Loss: 0.081
2024-10-25 19:24 - INFO - 	 ROC-AUC: 0.980
2024-10-25 19:24 - INFO - 	 PR-AUC: 0.808
2024-10-25 19:24 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 19:24 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 19:24 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 19:24 - INFO - 	 Best PR-AUC: 0.826
2024-10-25 19:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-25 19:24 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 19:24 - INFO - ---------------------------------------------
2024-10-25 19:25 - INFO - ---------------------------------------------
2024-10-25 19:25 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 19:25 - INFO - 	 Train Loss: 0.085
2024-10-25 19:25 - INFO - 	 Val. Loss: 0.081
2024-10-25 19:25 - INFO - 	 ROC-AUC: 0.978
2024-10-25 19:25 - INFO - 	 PR-AUC: 0.819
2024-10-25 19:25 - INFO - 	 Recall for 0.4 precision: 0.965
2024-10-25 19:25 - INFO - 	 Best Val. Loss: 0.078
2024-10-25 19:25 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 19:25 - INFO - 	 Best PR-AUC: 0.826
2024-10-25 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-25 19:25 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 19:25 - INFO - ---------------------------------------------
2024-10-25 19:25 - INFO - ---------------------------------------------
2024-10-25 19:25 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 19:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9815
2024-10-25 19:25 - INFO - 	 Train Loss: 0.083
2024-10-25 19:25 - INFO - 	 Val. Loss: 0.074
2024-10-25 19:25 - INFO - 	 ROC-AUC: 0.981
2024-10-25 19:25 - INFO - 	 PR-AUC: 0.837
2024-10-25 19:25 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 19:25 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 19:25 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 19:25 - INFO - 	 Best PR-AUC: 0.837
2024-10-25 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 19:25 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 19:25 - INFO - ---------------------------------------------
2024-10-25 19:26 - INFO - ---------------------------------------------
2024-10-25 19:26 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 19:26 - INFO - 	 Train Loss: 0.082
2024-10-25 19:26 - INFO - 	 Val. Loss: 0.075
2024-10-25 19:26 - INFO - 	 ROC-AUC: 0.980
2024-10-25 19:26 - INFO - 	 PR-AUC: 0.832
2024-10-25 19:26 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 19:26 - INFO - 	 Best Val. Loss: 0.074
2024-10-25 19:26 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 19:26 - INFO - 	 Best PR-AUC: 0.837
2024-10-25 19:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 19:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 19:26 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 19:26 - INFO - ---------------------------------------------
