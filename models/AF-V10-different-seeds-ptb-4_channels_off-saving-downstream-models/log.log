2024-10-25 12:21 - INFO - Fit the preprocessing pipeline
2024-10-25 12:21 - INFO - Training using device: cuda
2024-10-25 12:21 - INFO - Creating generators
2024-10-25 12:21 - INFO - The model has 651,257 trainable parameters
2024-10-25 12:21 - INFO - * Model:
2024-10-25 12:21 - INFO - * -----------
2024-10-25 12:21 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 12:21 - INFO - * -----------
2024-10-25 12:21 - INFO - Evaluating model based on: rocauc
2024-10-25 12:21 - INFO - Training..

2024-10-25 12:22 - INFO - ---------------------------------------------
2024-10-25 12:22 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 12:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9794
2024-10-25 12:22 - INFO - 	 Train Loss: 0.163
2024-10-25 12:22 - INFO - 	 Val. Loss: 0.082
2024-10-25 12:22 - INFO - 	 ROC-AUC: 0.979
2024-10-25 12:22 - INFO - 	 PR-AUC: 0.813
2024-10-25 12:22 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 12:22 - INFO - 	 Best Val. Loss: 0.082
2024-10-25 12:22 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 12:22 - INFO - 	 Best PR-AUC: 0.813
2024-10-25 12:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-25 12:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-25 12:22 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 12:22 - INFO - ---------------------------------------------
2024-10-25 12:22 - INFO - ---------------------------------------------
2024-10-25 12:22 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 12:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9834
2024-10-25 12:22 - INFO - 	 Train Loss: 0.085
2024-10-25 12:22 - INFO - 	 Val. Loss: 0.071
2024-10-25 12:22 - INFO - 	 ROC-AUC: 0.983
2024-10-25 12:22 - INFO - 	 PR-AUC: 0.845
2024-10-25 12:22 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 12:22 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 12:22 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 12:22 - INFO - 	 Best PR-AUC: 0.845
2024-10-25 12:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 12:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-25 12:22 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 12:22 - INFO - ---------------------------------------------
2024-10-25 12:23 - INFO - ---------------------------------------------
2024-10-25 12:23 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 12:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98567
2024-10-25 12:23 - INFO - 	 Train Loss: 0.074
2024-10-25 12:23 - INFO - 	 Val. Loss: 0.067
2024-10-25 12:23 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:23 - INFO - 	 PR-AUC: 0.871
2024-10-25 12:23 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 12:23 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 12:23 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 12:23 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 12:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 12:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 12:23 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 12:23 - INFO - ---------------------------------------------
2024-10-25 12:23 - INFO - ---------------------------------------------
2024-10-25 12:23 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 12:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98631
2024-10-25 12:23 - INFO - 	 Train Loss: 0.071
2024-10-25 12:23 - INFO - 	 Val. Loss: 0.063
2024-10-25 12:23 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:23 - INFO - 	 PR-AUC: 0.879
2024-10-25 12:23 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 12:23 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 12:23 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 12:23 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 12:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 12:23 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 12:23 - INFO - ---------------------------------------------
2024-10-25 12:24 - INFO - ---------------------------------------------
2024-10-25 12:24 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 12:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98677
2024-10-25 12:24 - INFO - 	 Train Loss: 0.066
2024-10-25 12:24 - INFO - 	 Val. Loss: 0.066
2024-10-25 12:24 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:24 - INFO - 	 PR-AUC: 0.880
2024-10-25 12:24 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 12:24 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 12:24 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:24 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 12:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 12:24 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 12:24 - INFO - ---------------------------------------------
2024-10-25 12:24 - INFO - ---------------------------------------------
2024-10-25 12:24 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 12:24 - INFO - 	 Train Loss: 0.065
2024-10-25 12:24 - INFO - 	 Val. Loss: 0.062
2024-10-25 12:24 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:24 - INFO - 	 PR-AUC: 0.871
2024-10-25 12:24 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 12:24 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 12:24 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:24 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 12:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 12:24 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 12:24 - INFO - ---------------------------------------------
2024-10-25 12:25 - INFO - ---------------------------------------------
2024-10-25 12:25 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 12:25 - INFO - 	 Train Loss: 0.062
2024-10-25 12:25 - INFO - 	 Val. Loss: 0.062
2024-10-25 12:25 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:25 - INFO - 	 PR-AUC: 0.873
2024-10-25 12:25 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 12:25 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 12:25 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:25 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 12:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 12:25 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 12:25 - INFO - ---------------------------------------------
2024-10-25 12:25 - INFO - ---------------------------------------------
2024-10-25 12:25 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 12:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98808
2024-10-25 12:25 - INFO - 	 Train Loss: 0.061
2024-10-25 12:25 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:25 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:25 - INFO - 	 PR-AUC: 0.884
2024-10-25 12:25 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:25 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:25 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 12:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 12:25 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:25 - INFO - ---------------------------------------------
2024-10-25 12:26 - INFO - ---------------------------------------------
2024-10-25 12:26 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 12:26 - INFO - 	 Train Loss: 0.058
2024-10-25 12:26 - INFO - 	 Val. Loss: 0.059
2024-10-25 12:26 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:26 - INFO - 	 PR-AUC: 0.888
2024-10-25 12:26 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 12:26 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 12:26 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:26 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 12:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 12:26 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:26 - INFO - ---------------------------------------------
2024-10-25 12:27 - INFO - ---------------------------------------------
2024-10-25 12:27 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 12:27 - INFO - 	 Train Loss: 0.057
2024-10-25 12:27 - INFO - 	 Val. Loss: 0.061
2024-10-25 12:27 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:27 - INFO - 	 PR-AUC: 0.879
2024-10-25 12:27 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 12:27 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 12:27 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:27 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 12:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 12:27 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:27 - INFO - ---------------------------------------------
2024-10-25 12:28 - INFO - Fit the preprocessing pipeline
2024-10-25 12:28 - INFO - Training using device: cuda
2024-10-25 12:28 - INFO - Creating generators
2024-10-25 12:28 - INFO - The model has 651,257 trainable parameters
2024-10-25 12:28 - INFO - * Model:
2024-10-25 12:28 - INFO - * -----------
2024-10-25 12:28 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 12:28 - INFO - * -----------
2024-10-25 12:28 - INFO - Evaluating model based on: rocauc
2024-10-25 12:28 - INFO - Training..

2024-10-25 12:29 - INFO - ---------------------------------------------
2024-10-25 12:29 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 12:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97937
2024-10-25 12:29 - INFO - 	 Train Loss: 0.155
2024-10-25 12:29 - INFO - 	 Val. Loss: 0.081
2024-10-25 12:29 - INFO - 	 ROC-AUC: 0.979
2024-10-25 12:29 - INFO - 	 PR-AUC: 0.811
2024-10-25 12:29 - INFO - 	 Recall for 0.4 precision: 0.969
2024-10-25 12:29 - INFO - 	 Best Val. Loss: 0.081
2024-10-25 12:29 - INFO - 	 Best ROC-AUC: 0.979
2024-10-25 12:29 - INFO - 	 Best PR-AUC: 0.811
2024-10-25 12:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 12:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-10-25 12:29 - INFO - 	 Best Recall for 0.4 precision: 0.969
2024-10-25 12:29 - INFO - ---------------------------------------------
2024-10-25 12:29 - INFO - ---------------------------------------------
2024-10-25 12:29 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 12:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98288
2024-10-25 12:29 - INFO - 	 Train Loss: 0.083
2024-10-25 12:29 - INFO - 	 Val. Loss: 0.073
2024-10-25 12:29 - INFO - 	 ROC-AUC: 0.983
2024-10-25 12:29 - INFO - 	 PR-AUC: 0.851
2024-10-25 12:29 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 12:29 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 12:29 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 12:29 - INFO - 	 Best PR-AUC: 0.851
2024-10-25 12:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 12:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 12:29 - INFO - 	 Best Recall for 0.4 precision: 0.971
2024-10-25 12:29 - INFO - ---------------------------------------------
2024-10-25 12:30 - INFO - ---------------------------------------------
2024-10-25 12:30 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 12:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98508
2024-10-25 12:30 - INFO - 	 Train Loss: 0.076
2024-10-25 12:30 - INFO - 	 Val. Loss: 0.067
2024-10-25 12:30 - INFO - 	 ROC-AUC: 0.985
2024-10-25 12:30 - INFO - 	 PR-AUC: 0.867
2024-10-25 12:30 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 12:30 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 12:30 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 12:30 - INFO - 	 Best PR-AUC: 0.867
2024-10-25 12:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 12:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-25 12:30 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 12:30 - INFO - ---------------------------------------------
2024-10-25 12:30 - INFO - ---------------------------------------------
2024-10-25 12:30 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 12:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98623
2024-10-25 12:30 - INFO - 	 Train Loss: 0.070
2024-10-25 12:30 - INFO - 	 Val. Loss: 0.064
2024-10-25 12:30 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:30 - INFO - 	 PR-AUC: 0.877
2024-10-25 12:30 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 12:30 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 12:30 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 12:30 - INFO - 	 Best PR-AUC: 0.877
2024-10-25 12:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 12:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 12:30 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 12:30 - INFO - ---------------------------------------------
2024-10-25 12:31 - INFO - ---------------------------------------------
2024-10-25 12:31 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 12:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98721
2024-10-25 12:31 - INFO - 	 Train Loss: 0.067
2024-10-25 12:31 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:31 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:31 - INFO - 	 PR-AUC: 0.889
2024-10-25 12:31 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:31 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:31 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:31 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 12:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 12:31 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:31 - INFO - ---------------------------------------------
2024-10-25 12:31 - INFO - ---------------------------------------------
2024-10-25 12:31 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 12:31 - INFO - 	 Train Loss: 0.064
2024-10-25 12:31 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:31 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:31 - INFO - 	 PR-AUC: 0.885
2024-10-25 12:31 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 12:31 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:31 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:31 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 12:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-25 12:31 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:31 - INFO - ---------------------------------------------
2024-10-25 12:32 - INFO - ---------------------------------------------
2024-10-25 12:32 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 12:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98778
2024-10-25 12:32 - INFO - 	 Train Loss: 0.062
2024-10-25 12:32 - INFO - 	 Val. Loss: 0.058
2024-10-25 12:32 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:32 - INFO - 	 PR-AUC: 0.892
2024-10-25 12:32 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 12:32 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 12:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:32 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 12:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-25 12:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 12:32 - INFO - ---------------------------------------------
2024-10-25 12:32 - INFO - ---------------------------------------------
2024-10-25 12:32 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 12:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98794
2024-10-25 12:32 - INFO - 	 Train Loss: 0.061
2024-10-25 12:32 - INFO - 	 Val. Loss: 0.058
2024-10-25 12:32 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:32 - INFO - 	 PR-AUC: 0.894
2024-10-25 12:32 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:32 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 12:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:32 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 12:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 12:32 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 12:32 - INFO - ---------------------------------------------
2024-10-25 12:33 - INFO - ---------------------------------------------
2024-10-25 12:33 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 12:33 - INFO - 	 Train Loss: 0.058
2024-10-25 12:33 - INFO - 	 Val. Loss: 0.058
2024-10-25 12:33 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:33 - INFO - 	 PR-AUC: 0.900
2024-10-25 12:33 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 12:33 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 12:33 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:33 - INFO - 	 Best PR-AUC: 0.900
2024-10-25 12:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 12:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 12:33 - INFO - ---------------------------------------------
2024-10-25 12:33 - INFO - ---------------------------------------------
2024-10-25 12:33 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 12:33 - INFO - 	 Train Loss: 0.058
2024-10-25 12:33 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:33 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:33 - INFO - 	 PR-AUC: 0.897
2024-10-25 12:33 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:33 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 12:33 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:33 - INFO - 	 Best PR-AUC: 0.900
2024-10-25 12:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 12:33 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 12:33 - INFO - ---------------------------------------------
2024-10-25 12:35 - INFO - Fit the preprocessing pipeline
2024-10-25 12:35 - INFO - Training using device: cuda
2024-10-25 12:35 - INFO - Creating generators
2024-10-25 12:35 - INFO - The model has 651,257 trainable parameters
2024-10-25 12:35 - INFO - * Model:
2024-10-25 12:35 - INFO - * -----------
2024-10-25 12:35 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 12:35 - INFO - * -----------
2024-10-25 12:35 - INFO - Evaluating model based on: rocauc
2024-10-25 12:35 - INFO - Training..

2024-10-25 12:35 - INFO - ---------------------------------------------
2024-10-25 12:35 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 12:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97826
2024-10-25 12:35 - INFO - 	 Train Loss: 0.157
2024-10-25 12:35 - INFO - 	 Val. Loss: 0.083
2024-10-25 12:35 - INFO - 	 ROC-AUC: 0.978
2024-10-25 12:35 - INFO - 	 PR-AUC: 0.813
2024-10-25 12:35 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 12:35 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 12:35 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 12:35 - INFO - 	 Best PR-AUC: 0.813
2024-10-25 12:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 12:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-25 12:35 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 12:35 - INFO - ---------------------------------------------
2024-10-25 12:36 - INFO - ---------------------------------------------
2024-10-25 12:36 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 12:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98571
2024-10-25 12:36 - INFO - 	 Train Loss: 0.084
2024-10-25 12:36 - INFO - 	 Val. Loss: 0.066
2024-10-25 12:36 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:36 - INFO - 	 PR-AUC: 0.871
2024-10-25 12:36 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 12:36 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 12:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 12:36 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 12:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 12:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 12:36 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 12:36 - INFO - ---------------------------------------------
2024-10-25 12:36 - INFO - ---------------------------------------------
2024-10-25 12:36 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 12:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98622
2024-10-25 12:36 - INFO - 	 Train Loss: 0.074
2024-10-25 12:36 - INFO - 	 Val. Loss: 0.065
2024-10-25 12:36 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:36 - INFO - 	 PR-AUC: 0.870
2024-10-25 12:36 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:36 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 12:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 12:36 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 12:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 12:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 12:36 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 12:36 - INFO - ---------------------------------------------
2024-10-25 12:37 - INFO - ---------------------------------------------
2024-10-25 12:37 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 12:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98693
2024-10-25 12:37 - INFO - 	 Train Loss: 0.070
2024-10-25 12:37 - INFO - 	 Val. Loss: 0.063
2024-10-25 12:37 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:37 - INFO - 	 PR-AUC: 0.880
2024-10-25 12:37 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:37 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 12:37 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:37 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 12:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 12:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-25 12:37 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 12:37 - INFO - ---------------------------------------------
2024-10-25 12:38 - INFO - ---------------------------------------------
2024-10-25 12:38 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 12:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98788
2024-10-25 12:38 - INFO - 	 Train Loss: 0.066
2024-10-25 12:38 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:38 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:38 - INFO - 	 PR-AUC: 0.889
2024-10-25 12:38 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 12:38 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:38 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 12:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 12:38 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 12:38 - INFO - ---------------------------------------------
2024-10-25 12:38 - INFO - ---------------------------------------------
2024-10-25 12:38 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 12:38 - INFO - 	 Train Loss: 0.064
2024-10-25 12:38 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:38 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:38 - INFO - 	 PR-AUC: 0.887
2024-10-25 12:38 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 12:38 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:38 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 12:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 12:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 12:38 - INFO - ---------------------------------------------
2024-10-25 12:39 - INFO - ---------------------------------------------
2024-10-25 12:39 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 12:39 - INFO - 	 Train Loss: 0.062
2024-10-25 12:39 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:39 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:39 - INFO - 	 PR-AUC: 0.882
2024-10-25 12:39 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:39 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:39 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 12:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 12:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 12:39 - INFO - ---------------------------------------------
2024-10-25 12:39 - INFO - ---------------------------------------------
2024-10-25 12:39 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 12:39 - INFO - 	 Train Loss: 0.060
2024-10-25 12:39 - INFO - 	 Val. Loss: 0.061
2024-10-25 12:39 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:39 - INFO - 	 PR-AUC: 0.888
2024-10-25 12:39 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 12:39 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:39 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 12:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 12:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 12:39 - INFO - ---------------------------------------------
2024-10-25 12:40 - INFO - ---------------------------------------------
2024-10-25 12:40 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 12:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98857
2024-10-25 12:40 - INFO - 	 Train Loss: 0.059
2024-10-25 12:40 - INFO - 	 Val. Loss: 0.058
2024-10-25 12:40 - INFO - 	 ROC-AUC: 0.989
2024-10-25 12:40 - INFO - 	 PR-AUC: 0.892
2024-10-25 12:40 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 12:40 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 12:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 12:40 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 12:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-25 12:40 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 12:40 - INFO - ---------------------------------------------
2024-10-25 12:40 - INFO - ---------------------------------------------
2024-10-25 12:40 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 12:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98896
2024-10-25 12:40 - INFO - 	 Train Loss: 0.057
2024-10-25 12:40 - INFO - 	 Val. Loss: 0.057
2024-10-25 12:40 - INFO - 	 ROC-AUC: 0.989
2024-10-25 12:40 - INFO - 	 PR-AUC: 0.896
2024-10-25 12:40 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 12:40 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 12:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 12:40 - INFO - 	 Best PR-AUC: 0.896
2024-10-25 12:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 12:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 12:40 - INFO - 	 Best Recall for 0.4 precision: 0.979
2024-10-25 12:40 - INFO - ---------------------------------------------
2024-10-25 12:42 - INFO - Fit the preprocessing pipeline
2024-10-25 12:42 - INFO - Training using device: cuda
2024-10-25 12:42 - INFO - Creating generators
2024-10-25 12:42 - INFO - The model has 651,257 trainable parameters
2024-10-25 12:42 - INFO - * Model:
2024-10-25 12:42 - INFO - * -----------
2024-10-25 12:42 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 12:42 - INFO - * -----------
2024-10-25 12:42 - INFO - Evaluating model based on: rocauc
2024-10-25 12:42 - INFO - Training..

2024-10-25 12:42 - INFO - ---------------------------------------------
2024-10-25 12:42 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 12:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98361
2024-10-25 12:42 - INFO - 	 Train Loss: 0.149
2024-10-25 12:42 - INFO - 	 Val. Loss: 0.073
2024-10-25 12:42 - INFO - 	 ROC-AUC: 0.984
2024-10-25 12:42 - INFO - 	 PR-AUC: 0.837
2024-10-25 12:42 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 12:42 - INFO - 	 Best Val. Loss: 0.073
2024-10-25 12:42 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 12:42 - INFO - 	 Best PR-AUC: 0.837
2024-10-25 12:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-25 12:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-10-25 12:42 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 12:42 - INFO - ---------------------------------------------
2024-10-25 12:43 - INFO - ---------------------------------------------
2024-10-25 12:43 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 12:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98534
2024-10-25 12:43 - INFO - 	 Train Loss: 0.085
2024-10-25 12:43 - INFO - 	 Val. Loss: 0.065
2024-10-25 12:43 - INFO - 	 ROC-AUC: 0.985
2024-10-25 12:43 - INFO - 	 PR-AUC: 0.868
2024-10-25 12:43 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 12:43 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 12:43 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 12:43 - INFO - 	 Best PR-AUC: 0.868
2024-10-25 12:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 12:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-25 12:43 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 12:43 - INFO - ---------------------------------------------
2024-10-25 12:43 - INFO - ---------------------------------------------
2024-10-25 12:43 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 12:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98617
2024-10-25 12:43 - INFO - 	 Train Loss: 0.075
2024-10-25 12:43 - INFO - 	 Val. Loss: 0.064
2024-10-25 12:43 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:43 - INFO - 	 PR-AUC: 0.879
2024-10-25 12:43 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:43 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 12:43 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 12:43 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 12:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 12:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-25 12:43 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 12:43 - INFO - ---------------------------------------------
2024-10-25 12:44 - INFO - ---------------------------------------------
2024-10-25 12:44 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 12:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98644
2024-10-25 12:44 - INFO - 	 Train Loss: 0.070
2024-10-25 12:44 - INFO - 	 Val. Loss: 0.066
2024-10-25 12:44 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:44 - INFO - 	 PR-AUC: 0.868
2024-10-25 12:44 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:44 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 12:44 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 12:44 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 12:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-25 12:44 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 12:44 - INFO - ---------------------------------------------
2024-10-25 12:44 - INFO - ---------------------------------------------
2024-10-25 12:44 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 12:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98797
2024-10-25 12:44 - INFO - 	 Train Loss: 0.065
2024-10-25 12:44 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:44 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:44 - INFO - 	 PR-AUC: 0.887
2024-10-25 12:44 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:44 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:44 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 12:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-25 12:44 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:44 - INFO - ---------------------------------------------
2024-10-25 12:45 - INFO - ---------------------------------------------
2024-10-25 12:45 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 12:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98807
2024-10-25 12:45 - INFO - 	 Train Loss: 0.064
2024-10-25 12:45 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:45 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:45 - INFO - 	 PR-AUC: 0.887
2024-10-25 12:45 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 12:45 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:45 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 12:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 12:45 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 12:45 - INFO - ---------------------------------------------
2024-10-25 12:45 - INFO - ---------------------------------------------
2024-10-25 12:45 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 12:45 - INFO - 	 Train Loss: 0.062
2024-10-25 12:45 - INFO - 	 Val. Loss: 0.062
2024-10-25 12:45 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:45 - INFO - 	 PR-AUC: 0.885
2024-10-25 12:45 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:45 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:45 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 12:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-25 12:45 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 12:45 - INFO - ---------------------------------------------
2024-10-25 12:46 - INFO - ---------------------------------------------
2024-10-25 12:46 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 12:46 - INFO - 	 Train Loss: 0.060
2024-10-25 12:46 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:46 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:46 - INFO - 	 PR-AUC: 0.890
2024-10-25 12:46 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 12:46 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:46 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 12:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-25 12:46 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 12:46 - INFO - ---------------------------------------------
2024-10-25 12:46 - INFO - ---------------------------------------------
2024-10-25 12:46 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 12:46 - INFO - 	 Train Loss: 0.058
2024-10-25 12:46 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:46 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:46 - INFO - 	 PR-AUC: 0.894
2024-10-25 12:46 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:46 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:46 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 12:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 12:46 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 12:46 - INFO - ---------------------------------------------
2024-10-25 12:47 - INFO - ---------------------------------------------
2024-10-25 12:47 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 12:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98818
2024-10-25 12:47 - INFO - 	 Train Loss: 0.057
2024-10-25 12:47 - INFO - 	 Val. Loss: 0.057
2024-10-25 12:47 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:47 - INFO - 	 PR-AUC: 0.900
2024-10-25 12:47 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 12:47 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 12:47 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:47 - INFO - 	 Best PR-AUC: 0.900
2024-10-25 12:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 12:47 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 12:47 - INFO - ---------------------------------------------
2024-10-25 12:48 - INFO - Fit the preprocessing pipeline
2024-10-25 12:48 - INFO - Training using device: cuda
2024-10-25 12:48 - INFO - Creating generators
2024-10-25 12:49 - INFO - The model has 651,257 trainable parameters
2024-10-25 12:49 - INFO - * Model:
2024-10-25 12:49 - INFO - * -----------
2024-10-25 12:49 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 12:49 - INFO - * -----------
2024-10-25 12:49 - INFO - Evaluating model based on: rocauc
2024-10-25 12:49 - INFO - Training..

2024-10-25 12:49 - INFO - ---------------------------------------------
2024-10-25 12:49 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 12:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97655
2024-10-25 12:49 - INFO - 	 Train Loss: 0.162
2024-10-25 12:49 - INFO - 	 Val. Loss: 0.094
2024-10-25 12:49 - INFO - 	 ROC-AUC: 0.977
2024-10-25 12:49 - INFO - 	 PR-AUC: 0.802
2024-10-25 12:49 - INFO - 	 Recall for 0.4 precision: 0.963
2024-10-25 12:49 - INFO - 	 Best Val. Loss: 0.094
2024-10-25 12:49 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 12:49 - INFO - 	 Best PR-AUC: 0.802
2024-10-25 12:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-25 12:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.749
2024-10-25 12:49 - INFO - 	 Best Recall for 0.4 precision: 0.963
2024-10-25 12:49 - INFO - ---------------------------------------------
2024-10-25 12:50 - INFO - ---------------------------------------------
2024-10-25 12:50 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 12:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98463
2024-10-25 12:50 - INFO - 	 Train Loss: 0.085
2024-10-25 12:50 - INFO - 	 Val. Loss: 0.070
2024-10-25 12:50 - INFO - 	 ROC-AUC: 0.985
2024-10-25 12:50 - INFO - 	 PR-AUC: 0.861
2024-10-25 12:50 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:50 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 12:50 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 12:50 - INFO - 	 Best PR-AUC: 0.861
2024-10-25 12:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 12:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-25 12:50 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:50 - INFO - ---------------------------------------------
2024-10-25 12:50 - INFO - ---------------------------------------------
2024-10-25 12:50 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 12:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98492
2024-10-25 12:50 - INFO - 	 Train Loss: 0.076
2024-10-25 12:50 - INFO - 	 Val. Loss: 0.067
2024-10-25 12:50 - INFO - 	 ROC-AUC: 0.985
2024-10-25 12:50 - INFO - 	 PR-AUC: 0.871
2024-10-25 12:50 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 12:50 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 12:50 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 12:50 - INFO - 	 Best PR-AUC: 0.871
2024-10-25 12:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 12:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-25 12:50 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:50 - INFO - ---------------------------------------------
2024-10-25 12:51 - INFO - ---------------------------------------------
2024-10-25 12:51 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 12:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9865
2024-10-25 12:51 - INFO - 	 Train Loss: 0.070
2024-10-25 12:51 - INFO - 	 Val. Loss: 0.063
2024-10-25 12:51 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:51 - INFO - 	 PR-AUC: 0.886
2024-10-25 12:51 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 12:51 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 12:51 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:51 - INFO - 	 Best PR-AUC: 0.886
2024-10-25 12:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 12:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-25 12:51 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:51 - INFO - ---------------------------------------------
2024-10-25 12:51 - INFO - ---------------------------------------------
2024-10-25 12:51 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 12:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98719
2024-10-25 12:51 - INFO - 	 Train Loss: 0.066
2024-10-25 12:51 - INFO - 	 Val. Loss: 0.063
2024-10-25 12:51 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:51 - INFO - 	 PR-AUC: 0.888
2024-10-25 12:51 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:51 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 12:51 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:51 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 12:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 12:51 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:51 - INFO - ---------------------------------------------
2024-10-25 12:52 - INFO - ---------------------------------------------
2024-10-25 12:52 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 12:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98761
2024-10-25 12:52 - INFO - 	 Train Loss: 0.064
2024-10-25 12:52 - INFO - 	 Val. Loss: 0.061
2024-10-25 12:52 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:52 - INFO - 	 PR-AUC: 0.877
2024-10-25 12:52 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:52 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 12:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:52 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 12:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 12:52 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:52 - INFO - ---------------------------------------------
2024-10-25 12:52 - INFO - ---------------------------------------------
2024-10-25 12:52 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 12:52 - INFO - 	 Train Loss: 0.062
2024-10-25 12:52 - INFO - 	 Val. Loss: 0.065
2024-10-25 12:52 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:52 - INFO - 	 PR-AUC: 0.873
2024-10-25 12:52 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 12:52 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 12:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:52 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 12:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 12:52 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:52 - INFO - ---------------------------------------------
2024-10-25 12:53 - INFO - ---------------------------------------------
2024-10-25 12:53 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 12:53 - INFO - 	 Train Loss: 0.061
2024-10-25 12:53 - INFO - 	 Val. Loss: 0.064
2024-10-25 12:53 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:53 - INFO - 	 PR-AUC: 0.886
2024-10-25 12:53 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:53 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 12:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:53 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 12:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 12:53 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:53 - INFO - ---------------------------------------------
2024-10-25 12:53 - INFO - ---------------------------------------------
2024-10-25 12:53 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 12:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98762
2024-10-25 12:53 - INFO - 	 Train Loss: 0.059
2024-10-25 12:53 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:53 - INFO - 	 ROC-AUC: 0.988
2024-10-25 12:53 - INFO - 	 PR-AUC: 0.890
2024-10-25 12:53 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 12:53 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:53 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 12:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 12:53 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:53 - INFO - ---------------------------------------------
2024-10-25 12:54 - INFO - ---------------------------------------------
2024-10-25 12:54 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 12:54 - INFO - 	 Train Loss: 0.057
2024-10-25 12:54 - INFO - 	 Val. Loss: 0.060
2024-10-25 12:54 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:54 - INFO - 	 PR-AUC: 0.886
2024-10-25 12:54 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:54 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 12:54 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 12:54 - INFO - 	 Best PR-AUC: 0.890
2024-10-25 12:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-25 12:54 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 12:54 - INFO - ---------------------------------------------
2024-10-25 12:55 - INFO - Fit the preprocessing pipeline
2024-10-25 12:55 - INFO - Training using device: cuda
2024-10-25 12:55 - INFO - Creating generators
2024-10-25 12:55 - INFO - The model has 651,257 trainable parameters
2024-10-25 12:55 - INFO - * Model:
2024-10-25 12:55 - INFO - * -----------
2024-10-25 12:55 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 12:55 - INFO - * -----------
2024-10-25 12:55 - INFO - Evaluating model based on: rocauc
2024-10-25 12:55 - INFO - Training..

2024-10-25 12:56 - INFO - ---------------------------------------------
2024-10-25 12:56 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 12:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97247
2024-10-25 12:56 - INFO - 	 Train Loss: 0.166
2024-10-25 12:56 - INFO - 	 Val. Loss: 0.096
2024-10-25 12:56 - INFO - 	 ROC-AUC: 0.972
2024-10-25 12:56 - INFO - 	 PR-AUC: 0.757
2024-10-25 12:56 - INFO - 	 Recall for 0.4 precision: 0.945
2024-10-25 12:56 - INFO - 	 Best Val. Loss: 0.096
2024-10-25 12:56 - INFO - 	 Best ROC-AUC: 0.972
2024-10-25 12:56 - INFO - 	 Best PR-AUC: 0.757
2024-10-25 12:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-25 12:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.736
2024-10-25 12:56 - INFO - 	 Best Recall for 0.4 precision: 0.945
2024-10-25 12:56 - INFO - ---------------------------------------------
2024-10-25 12:57 - INFO - ---------------------------------------------
2024-10-25 12:57 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 12:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98488
2024-10-25 12:57 - INFO - 	 Train Loss: 0.086
2024-10-25 12:57 - INFO - 	 Val. Loss: 0.068
2024-10-25 12:57 - INFO - 	 ROC-AUC: 0.985
2024-10-25 12:57 - INFO - 	 PR-AUC: 0.855
2024-10-25 12:57 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 12:57 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 12:57 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 12:57 - INFO - 	 Best PR-AUC: 0.855
2024-10-25 12:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 12:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-25 12:57 - INFO - 	 Best Recall for 0.4 precision: 0.972
2024-10-25 12:57 - INFO - ---------------------------------------------
2024-10-25 12:57 - INFO - ---------------------------------------------
2024-10-25 12:57 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 12:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98538
2024-10-25 12:57 - INFO - 	 Train Loss: 0.075
2024-10-25 12:57 - INFO - 	 Val. Loss: 0.071
2024-10-25 12:57 - INFO - 	 ROC-AUC: 0.985
2024-10-25 12:57 - INFO - 	 PR-AUC: 0.857
2024-10-25 12:57 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:57 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 12:57 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 12:57 - INFO - 	 Best PR-AUC: 0.857
2024-10-25 12:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 12:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-25 12:57 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 12:57 - INFO - ---------------------------------------------
2024-10-25 12:58 - INFO - ---------------------------------------------
2024-10-25 12:58 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 12:58 - INFO - 	 Train Loss: 0.070
2024-10-25 12:58 - INFO - 	 Val. Loss: 0.073
2024-10-25 12:58 - INFO - 	 ROC-AUC: 0.985
2024-10-25 12:58 - INFO - 	 PR-AUC: 0.864
2024-10-25 12:58 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 12:58 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 12:58 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 12:58 - INFO - 	 Best PR-AUC: 0.864
2024-10-25 12:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 12:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-25 12:58 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 12:58 - INFO - ---------------------------------------------
2024-10-25 12:58 - INFO - ---------------------------------------------
2024-10-25 12:58 - INFO - Epoch: 05 | Time: 0m 32s
2024-10-25 12:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98597
2024-10-25 12:58 - INFO - 	 Train Loss: 0.066
2024-10-25 12:58 - INFO - 	 Val. Loss: 0.064
2024-10-25 12:58 - INFO - 	 ROC-AUC: 0.986
2024-10-25 12:58 - INFO - 	 PR-AUC: 0.880
2024-10-25 12:58 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 12:58 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 12:58 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 12:58 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 12:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 12:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 12:58 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 12:58 - INFO - ---------------------------------------------
2024-10-25 12:59 - INFO - ---------------------------------------------
2024-10-25 12:59 - INFO - Epoch: 06 | Time: 0m 32s
2024-10-25 12:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98651
2024-10-25 12:59 - INFO - 	 Train Loss: 0.064
2024-10-25 12:59 - INFO - 	 Val. Loss: 0.063
2024-10-25 12:59 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:59 - INFO - 	 PR-AUC: 0.879
2024-10-25 12:59 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 12:59 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 12:59 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:59 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 12:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 12:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-25 12:59 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 12:59 - INFO - ---------------------------------------------
2024-10-25 12:59 - INFO - ---------------------------------------------
2024-10-25 12:59 - INFO - Epoch: 07 | Time: 0m 32s
2024-10-25 12:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98736
2024-10-25 12:59 - INFO - 	 Train Loss: 0.061
2024-10-25 12:59 - INFO - 	 Val. Loss: 0.064
2024-10-25 12:59 - INFO - 	 ROC-AUC: 0.987
2024-10-25 12:59 - INFO - 	 PR-AUC: 0.883
2024-10-25 12:59 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 12:59 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 12:59 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 12:59 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 12:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 12:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 12:59 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 12:59 - INFO - ---------------------------------------------
2024-10-25 13:00 - INFO - ---------------------------------------------
2024-10-25 13:00 - INFO - Epoch: 08 | Time: 0m 32s
2024-10-25 13:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98783
2024-10-25 13:00 - INFO - 	 Train Loss: 0.060
2024-10-25 13:00 - INFO - 	 Val. Loss: 0.060
2024-10-25 13:00 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:00 - INFO - 	 PR-AUC: 0.885
2024-10-25 13:00 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:00 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 13:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:00 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 13:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 13:00 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:00 - INFO - ---------------------------------------------
2024-10-25 13:00 - INFO - ---------------------------------------------
2024-10-25 13:00 - INFO - Epoch: 09 | Time: 0m 32s
2024-10-25 13:00 - INFO - 	 Train Loss: 0.059
2024-10-25 13:00 - INFO - 	 Val. Loss: 0.061
2024-10-25 13:00 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:00 - INFO - 	 PR-AUC: 0.893
2024-10-25 13:00 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 13:00 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 13:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:00 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 13:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 13:00 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:00 - INFO - ---------------------------------------------
2024-10-25 13:01 - INFO - ---------------------------------------------
2024-10-25 13:01 - INFO - Epoch: 10 | Time: 0m 32s
2024-10-25 13:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98838
2024-10-25 13:01 - INFO - 	 Train Loss: 0.058
2024-10-25 13:01 - INFO - 	 Val. Loss: 0.059
2024-10-25 13:01 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:01 - INFO - 	 PR-AUC: 0.891
2024-10-25 13:01 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:01 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:01 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:01 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 13:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-25 13:01 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:01 - INFO - ---------------------------------------------
2024-10-25 13:02 - INFO - Fit the preprocessing pipeline
2024-10-25 13:02 - INFO - Training using device: cuda
2024-10-25 13:02 - INFO - Creating generators
2024-10-25 13:02 - INFO - The model has 651,257 trainable parameters
2024-10-25 13:02 - INFO - * Model:
2024-10-25 13:02 - INFO - * -----------
2024-10-25 13:02 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 13:02 - INFO - * -----------
2024-10-25 13:02 - INFO - Evaluating model based on: rocauc
2024-10-25 13:02 - INFO - Training..

2024-10-25 13:03 - INFO - ---------------------------------------------
2024-10-25 13:03 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 13:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97771
2024-10-25 13:03 - INFO - 	 Train Loss: 0.159
2024-10-25 13:03 - INFO - 	 Val. Loss: 0.087
2024-10-25 13:03 - INFO - 	 ROC-AUC: 0.978
2024-10-25 13:03 - INFO - 	 PR-AUC: 0.796
2024-10-25 13:03 - INFO - 	 Recall for 0.4 precision: 0.968
2024-10-25 13:03 - INFO - 	 Best Val. Loss: 0.087
2024-10-25 13:03 - INFO - 	 Best ROC-AUC: 0.978
2024-10-25 13:03 - INFO - 	 Best PR-AUC: 0.796
2024-10-25 13:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-25 13:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.782
2024-10-25 13:03 - INFO - 	 Best Recall for 0.4 precision: 0.968
2024-10-25 13:03 - INFO - ---------------------------------------------
2024-10-25 13:03 - INFO - ---------------------------------------------
2024-10-25 13:03 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 13:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98326
2024-10-25 13:03 - INFO - 	 Train Loss: 0.085
2024-10-25 13:03 - INFO - 	 Val. Loss: 0.071
2024-10-25 13:03 - INFO - 	 ROC-AUC: 0.983
2024-10-25 13:03 - INFO - 	 PR-AUC: 0.848
2024-10-25 13:03 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 13:03 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 13:03 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 13:03 - INFO - 	 Best PR-AUC: 0.848
2024-10-25 13:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 13:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-25 13:03 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 13:03 - INFO - ---------------------------------------------
2024-10-25 13:04 - INFO - ---------------------------------------------
2024-10-25 13:04 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 13:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98645
2024-10-25 13:04 - INFO - 	 Train Loss: 0.075
2024-10-25 13:04 - INFO - 	 Val. Loss: 0.063
2024-10-25 13:04 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:04 - INFO - 	 PR-AUC: 0.874
2024-10-25 13:04 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:04 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 13:04 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:04 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 13:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-25 13:04 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:04 - INFO - ---------------------------------------------
2024-10-25 13:08 - INFO - Fit the preprocessing pipeline
2024-10-25 13:08 - INFO - Training using device: cuda
2024-10-25 13:08 - INFO - Creating generators
2024-10-25 13:08 - INFO - The model has 651,257 trainable parameters
2024-10-25 13:08 - INFO - * Model:
2024-10-25 13:08 - INFO - * -----------
2024-10-25 13:08 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 13:08 - INFO - * -----------
2024-10-25 13:08 - INFO - Evaluating model based on: rocauc
2024-10-25 13:08 - INFO - Training..

2024-10-25 13:08 - INFO - ---------------------------------------------
2024-10-25 13:08 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 13:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97364
2024-10-25 13:08 - INFO - 	 Train Loss: 0.157
2024-10-25 13:08 - INFO - 	 Val. Loss: 0.093
2024-10-25 13:08 - INFO - 	 ROC-AUC: 0.974
2024-10-25 13:08 - INFO - 	 PR-AUC: 0.800
2024-10-25 13:08 - INFO - 	 Recall for 0.4 precision: 0.944
2024-10-25 13:08 - INFO - 	 Best Val. Loss: 0.093
2024-10-25 13:08 - INFO - 	 Best ROC-AUC: 0.974
2024-10-25 13:08 - INFO - 	 Best PR-AUC: 0.800
2024-10-25 13:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-10-25 13:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-10-25 13:08 - INFO - 	 Best Recall for 0.4 precision: 0.944
2024-10-25 13:08 - INFO - ---------------------------------------------
2024-10-25 13:09 - INFO - ---------------------------------------------
2024-10-25 13:09 - INFO - Epoch: 02 | Time: 0m 30s
2024-10-25 13:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98295
2024-10-25 13:09 - INFO - 	 Train Loss: 0.085
2024-10-25 13:09 - INFO - 	 Val. Loss: 0.071
2024-10-25 13:09 - INFO - 	 ROC-AUC: 0.983
2024-10-25 13:09 - INFO - 	 PR-AUC: 0.850
2024-10-25 13:09 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 13:09 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 13:09 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 13:09 - INFO - 	 Best PR-AUC: 0.850
2024-10-25 13:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 13:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-25 13:09 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 13:09 - INFO - ---------------------------------------------
2024-10-25 13:09 - INFO - ---------------------------------------------
2024-10-25 13:09 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 13:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9859
2024-10-25 13:09 - INFO - 	 Train Loss: 0.074
2024-10-25 13:09 - INFO - 	 Val. Loss: 0.064
2024-10-25 13:09 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:09 - INFO - 	 PR-AUC: 0.880
2024-10-25 13:09 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:09 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 13:09 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:09 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 13:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 13:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-25 13:09 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 13:09 - INFO - ---------------------------------------------
2024-10-25 13:10 - INFO - ---------------------------------------------
2024-10-25 13:10 - INFO - Epoch: 04 | Time: 0m 30s
2024-10-25 13:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98642
2024-10-25 13:10 - INFO - 	 Train Loss: 0.070
2024-10-25 13:10 - INFO - 	 Val. Loss: 0.065
2024-10-25 13:10 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:10 - INFO - 	 PR-AUC: 0.881
2024-10-25 13:10 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:10 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 13:10 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:10 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 13:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 13:10 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 13:10 - INFO - ---------------------------------------------
2024-10-25 13:10 - INFO - ---------------------------------------------
2024-10-25 13:10 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 13:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98648
2024-10-25 13:10 - INFO - 	 Train Loss: 0.067
2024-10-25 13:10 - INFO - 	 Val. Loss: 0.070
2024-10-25 13:10 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:10 - INFO - 	 PR-AUC: 0.879
2024-10-25 13:10 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:10 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 13:10 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:10 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 13:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 13:10 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 13:10 - INFO - ---------------------------------------------
2024-10-25 13:11 - INFO - ---------------------------------------------
2024-10-25 13:11 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 13:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98685
2024-10-25 13:11 - INFO - 	 Train Loss: 0.065
2024-10-25 13:11 - INFO - 	 Val. Loss: 0.062
2024-10-25 13:11 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:11 - INFO - 	 PR-AUC: 0.868
2024-10-25 13:11 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:11 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 13:11 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:11 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 13:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 13:11 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:11 - INFO - ---------------------------------------------
2024-10-25 13:11 - INFO - ---------------------------------------------
2024-10-25 13:11 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 13:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98737
2024-10-25 13:11 - INFO - 	 Train Loss: 0.062
2024-10-25 13:11 - INFO - 	 Val. Loss: 0.061
2024-10-25 13:11 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:11 - INFO - 	 PR-AUC: 0.877
2024-10-25 13:11 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 13:11 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 13:11 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:11 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 13:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-25 13:11 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:11 - INFO - ---------------------------------------------
2024-10-25 13:12 - INFO - ---------------------------------------------
2024-10-25 13:12 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 13:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9883
2024-10-25 13:12 - INFO - 	 Train Loss: 0.061
2024-10-25 13:12 - INFO - 	 Val. Loss: 0.060
2024-10-25 13:12 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:12 - INFO - 	 PR-AUC: 0.884
2024-10-25 13:12 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:12 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 13:12 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:12 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 13:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-25 13:12 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:12 - INFO - ---------------------------------------------
2024-10-25 13:12 - INFO - ---------------------------------------------
2024-10-25 13:12 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 13:12 - INFO - 	 Train Loss: 0.059
2024-10-25 13:12 - INFO - 	 Val. Loss: 0.061
2024-10-25 13:12 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:12 - INFO - 	 PR-AUC: 0.885
2024-10-25 13:12 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:12 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 13:12 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:12 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 13:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-25 13:12 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:12 - INFO - ---------------------------------------------
2024-10-25 13:13 - INFO - ---------------------------------------------
2024-10-25 13:13 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 13:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98941
2024-10-25 13:13 - INFO - 	 Train Loss: 0.058
2024-10-25 13:13 - INFO - 	 Val. Loss: 0.057
2024-10-25 13:13 - INFO - 	 ROC-AUC: 0.989
2024-10-25 13:13 - INFO - 	 PR-AUC: 0.894
2024-10-25 13:13 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:13 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 13:13 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 13:13 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 13:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-25 13:13 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:13 - INFO - ---------------------------------------------
2024-10-25 13:14 - INFO - Fit the preprocessing pipeline
2024-10-25 13:14 - INFO - Training using device: cuda
2024-10-25 13:14 - INFO - Creating generators
2024-10-25 13:14 - INFO - The model has 651,257 trainable parameters
2024-10-25 13:14 - INFO - * Model:
2024-10-25 13:14 - INFO - * -----------
2024-10-25 13:14 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 13:14 - INFO - * -----------
2024-10-25 13:14 - INFO - Evaluating model based on: rocauc
2024-10-25 13:14 - INFO - Training..

2024-10-25 13:15 - INFO - ---------------------------------------------
2024-10-25 13:15 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 13:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97738
2024-10-25 13:15 - INFO - 	 Train Loss: 0.161
2024-10-25 13:15 - INFO - 	 Val. Loss: 0.088
2024-10-25 13:15 - INFO - 	 ROC-AUC: 0.977
2024-10-25 13:15 - INFO - 	 PR-AUC: 0.783
2024-10-25 13:15 - INFO - 	 Recall for 0.4 precision: 0.002
2024-10-25 13:15 - INFO - 	 Best Val. Loss: 0.088
2024-10-25 13:15 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 13:15 - INFO - 	 Best PR-AUC: 0.783
2024-10-25 13:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-25 13:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-25 13:15 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-10-25 13:15 - INFO - ---------------------------------------------
2024-10-25 13:16 - INFO - ---------------------------------------------
2024-10-25 13:16 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 13:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98427
2024-10-25 13:16 - INFO - 	 Train Loss: 0.083
2024-10-25 13:16 - INFO - 	 Val. Loss: 0.070
2024-10-25 13:16 - INFO - 	 ROC-AUC: 0.984
2024-10-25 13:16 - INFO - 	 PR-AUC: 0.857
2024-10-25 13:16 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 13:16 - INFO - 	 Best Val. Loss: 0.070
2024-10-25 13:16 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 13:16 - INFO - 	 Best PR-AUC: 0.857
2024-10-25 13:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 13:16 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 13:16 - INFO - ---------------------------------------------
2024-10-25 13:16 - INFO - ---------------------------------------------
2024-10-25 13:16 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 13:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98702
2024-10-25 13:16 - INFO - 	 Train Loss: 0.074
2024-10-25 13:16 - INFO - 	 Val. Loss: 0.061
2024-10-25 13:16 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:16 - INFO - 	 PR-AUC: 0.883
2024-10-25 13:16 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:16 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 13:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:16 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 13:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-25 13:16 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 13:16 - INFO - ---------------------------------------------
2024-10-25 13:17 - INFO - ---------------------------------------------
2024-10-25 13:17 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 13:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98706
2024-10-25 13:17 - INFO - 	 Train Loss: 0.070
2024-10-25 13:17 - INFO - 	 Val. Loss: 0.063
2024-10-25 13:17 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:17 - INFO - 	 PR-AUC: 0.891
2024-10-25 13:17 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 13:17 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 13:17 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:17 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 13:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 13:17 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 13:17 - INFO - ---------------------------------------------
2024-10-25 13:17 - INFO - ---------------------------------------------
2024-10-25 13:17 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 13:17 - INFO - 	 Train Loss: 0.067
2024-10-25 13:17 - INFO - 	 Val. Loss: 0.063
2024-10-25 13:17 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:17 - INFO - 	 PR-AUC: 0.878
2024-10-25 13:17 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 13:17 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 13:17 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:17 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 13:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 13:17 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 13:17 - INFO - ---------------------------------------------
2024-10-25 13:18 - INFO - ---------------------------------------------
2024-10-25 13:18 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 13:18 - INFO - 	 Train Loss: 0.064
2024-10-25 13:18 - INFO - 	 Val. Loss: 0.062
2024-10-25 13:18 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:18 - INFO - 	 PR-AUC: 0.879
2024-10-25 13:18 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 13:18 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 13:18 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:18 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 13:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 13:18 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 13:18 - INFO - ---------------------------------------------
2024-10-25 13:18 - INFO - ---------------------------------------------
2024-10-25 13:18 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 13:18 - INFO - 	 Train Loss: 0.062
2024-10-25 13:18 - INFO - 	 Val. Loss: 0.063
2024-10-25 13:18 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:18 - INFO - 	 PR-AUC: 0.878
2024-10-25 13:18 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:18 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 13:18 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:18 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 13:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 13:18 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 13:18 - INFO - ---------------------------------------------
2024-10-25 13:20 - INFO - Fit the preprocessing pipeline
2024-10-25 13:20 - INFO - Training using device: cuda
2024-10-25 13:20 - INFO - Creating generators
2024-10-25 13:20 - INFO - The model has 651,257 trainable parameters
2024-10-25 13:20 - INFO - * Model:
2024-10-25 13:20 - INFO - * -----------
2024-10-25 13:20 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 13:20 - INFO - * -----------
2024-10-25 13:20 - INFO - Evaluating model based on: rocauc
2024-10-25 13:20 - INFO - Training..

2024-10-25 13:21 - INFO - ---------------------------------------------
2024-10-25 13:21 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 13:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97395
2024-10-25 13:21 - INFO - 	 Train Loss: 0.161
2024-10-25 13:21 - INFO - 	 Val. Loss: 0.112
2024-10-25 13:21 - INFO - 	 ROC-AUC: 0.974
2024-10-25 13:21 - INFO - 	 PR-AUC: 0.762
2024-10-25 13:21 - INFO - 	 Recall for 0.4 precision: 0.954
2024-10-25 13:21 - INFO - 	 Best Val. Loss: 0.112
2024-10-25 13:21 - INFO - 	 Best ROC-AUC: 0.974
2024-10-25 13:21 - INFO - 	 Best PR-AUC: 0.762
2024-10-25 13:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 13:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.746
2024-10-25 13:21 - INFO - 	 Best Recall for 0.4 precision: 0.954
2024-10-25 13:21 - INFO - ---------------------------------------------
2024-10-25 13:21 - INFO - ---------------------------------------------
2024-10-25 13:21 - INFO - Epoch: 02 | Time: 0m 32s
2024-10-25 13:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98535
2024-10-25 13:21 - INFO - 	 Train Loss: 0.085
2024-10-25 13:21 - INFO - 	 Val. Loss: 0.068
2024-10-25 13:21 - INFO - 	 ROC-AUC: 0.985
2024-10-25 13:21 - INFO - 	 PR-AUC: 0.863
2024-10-25 13:21 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 13:21 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 13:21 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 13:21 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 13:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-25 13:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 13:21 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 13:21 - INFO - ---------------------------------------------
2024-10-25 13:22 - INFO - ---------------------------------------------
2024-10-25 13:22 - INFO - Epoch: 03 | Time: 0m 32s
2024-10-25 13:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98569
2024-10-25 13:22 - INFO - 	 Train Loss: 0.074
2024-10-25 13:22 - INFO - 	 Val. Loss: 0.069
2024-10-25 13:22 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:22 - INFO - 	 PR-AUC: 0.859
2024-10-25 13:22 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 13:22 - INFO - 	 Best Val. Loss: 0.068
2024-10-25 13:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:22 - INFO - 	 Best PR-AUC: 0.863
2024-10-25 13:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-25 13:22 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 13:22 - INFO - ---------------------------------------------
2024-10-25 13:22 - INFO - ---------------------------------------------
2024-10-25 13:22 - INFO - Epoch: 04 | Time: 0m 32s
2024-10-25 13:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98638
2024-10-25 13:22 - INFO - 	 Train Loss: 0.070
2024-10-25 13:22 - INFO - 	 Val. Loss: 0.066
2024-10-25 13:22 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:22 - INFO - 	 PR-AUC: 0.870
2024-10-25 13:22 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 13:22 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 13:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:22 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 13:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-25 13:22 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 13:22 - INFO - ---------------------------------------------
2024-10-25 13:23 - INFO - ---------------------------------------------
2024-10-25 13:23 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 13:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98642
2024-10-25 13:23 - INFO - 	 Train Loss: 0.065
2024-10-25 13:23 - INFO - 	 Val. Loss: 0.065
2024-10-25 13:23 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:23 - INFO - 	 PR-AUC: 0.872
2024-10-25 13:23 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 13:23 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 13:23 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:23 - INFO - 	 Best PR-AUC: 0.872
2024-10-25 13:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-25 13:23 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 13:23 - INFO - ---------------------------------------------
2024-10-25 13:23 - INFO - ---------------------------------------------
2024-10-25 13:23 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 13:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98659
2024-10-25 13:23 - INFO - 	 Train Loss: 0.063
2024-10-25 13:23 - INFO - 	 Val. Loss: 0.062
2024-10-25 13:23 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:23 - INFO - 	 PR-AUC: 0.876
2024-10-25 13:23 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:23 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 13:23 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:23 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 13:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-25 13:23 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 13:23 - INFO - ---------------------------------------------
2024-10-25 13:24 - INFO - ---------------------------------------------
2024-10-25 13:24 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 13:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98758
2024-10-25 13:24 - INFO - 	 Train Loss: 0.061
2024-10-25 13:24 - INFO - 	 Val. Loss: 0.060
2024-10-25 13:24 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:24 - INFO - 	 PR-AUC: 0.889
2024-10-25 13:24 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 13:24 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 13:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:24 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 13:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 13:24 - INFO - 	 Best Recall for 0.4 precision: 0.976
2024-10-25 13:24 - INFO - ---------------------------------------------
2024-10-25 13:25 - INFO - ---------------------------------------------
2024-10-25 13:25 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 13:25 - INFO - 	 Train Loss: 0.059
2024-10-25 13:25 - INFO - 	 Val. Loss: 0.067
2024-10-25 13:25 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:25 - INFO - 	 PR-AUC: 0.888
2024-10-25 13:25 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:25 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 13:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:25 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 13:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-25 13:25 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:25 - INFO - ---------------------------------------------
2024-10-25 13:25 - INFO - ---------------------------------------------
2024-10-25 13:25 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 13:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98829
2024-10-25 13:25 - INFO - 	 Train Loss: 0.059
2024-10-25 13:25 - INFO - 	 Val. Loss: 0.059
2024-10-25 13:25 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:25 - INFO - 	 PR-AUC: 0.889
2024-10-25 13:25 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:25 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:25 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 13:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 13:25 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:25 - INFO - ---------------------------------------------
2024-10-25 13:26 - INFO - ---------------------------------------------
2024-10-25 13:26 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 13:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98878
2024-10-25 13:26 - INFO - 	 Train Loss: 0.056
2024-10-25 13:26 - INFO - 	 Val. Loss: 0.058
2024-10-25 13:26 - INFO - 	 ROC-AUC: 0.989
2024-10-25 13:26 - INFO - 	 PR-AUC: 0.899
2024-10-25 13:26 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:26 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 13:26 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 13:26 - INFO - 	 Best PR-AUC: 0.899
2024-10-25 13:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-25 13:26 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:26 - INFO - ---------------------------------------------
2024-10-25 13:27 - INFO - Fit the preprocessing pipeline
2024-10-25 13:27 - INFO - Training using device: cuda
2024-10-25 13:27 - INFO - Creating generators
2024-10-25 13:27 - INFO - The model has 651,257 trainable parameters
2024-10-25 13:27 - INFO - * Model:
2024-10-25 13:27 - INFO - * -----------
2024-10-25 13:27 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 13:27 - INFO - * -----------
2024-10-25 13:27 - INFO - Evaluating model based on: rocauc
2024-10-25 13:27 - INFO - Training..

2024-10-25 13:28 - INFO - ---------------------------------------------
2024-10-25 13:28 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 13:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98093
2024-10-25 13:28 - INFO - 	 Train Loss: 0.155
2024-10-25 13:28 - INFO - 	 Val. Loss: 0.083
2024-10-25 13:28 - INFO - 	 ROC-AUC: 0.981
2024-10-25 13:28 - INFO - 	 PR-AUC: 0.803
2024-10-25 13:28 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 13:28 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 13:28 - INFO - 	 Best ROC-AUC: 0.981
2024-10-25 13:28 - INFO - 	 Best PR-AUC: 0.803
2024-10-25 13:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 13:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.776
2024-10-25 13:28 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 13:28 - INFO - ---------------------------------------------
2024-10-25 13:28 - INFO - ---------------------------------------------
2024-10-25 13:28 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 13:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98602
2024-10-25 13:28 - INFO - 	 Train Loss: 0.084
2024-10-25 13:28 - INFO - 	 Val. Loss: 0.067
2024-10-25 13:28 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:28 - INFO - 	 PR-AUC: 0.879
2024-10-25 13:28 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:28 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 13:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:28 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 13:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 13:28 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 13:28 - INFO - ---------------------------------------------
2024-10-25 13:29 - INFO - ---------------------------------------------
2024-10-25 13:29 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 13:29 - INFO - 	 Train Loss: 0.074
2024-10-25 13:29 - INFO - 	 Val. Loss: 0.069
2024-10-25 13:29 - INFO - 	 ROC-AUC: 0.984
2024-10-25 13:29 - INFO - 	 PR-AUC: 0.864
2024-10-25 13:29 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:29 - INFO - 	 Best Val. Loss: 0.067
2024-10-25 13:29 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:29 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 13:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 13:29 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 13:29 - INFO - ---------------------------------------------
2024-10-25 13:29 - INFO - ---------------------------------------------
2024-10-25 13:29 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 13:29 - INFO - 	 Train Loss: 0.070
2024-10-25 13:29 - INFO - 	 Val. Loss: 0.065
2024-10-25 13:29 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:29 - INFO - 	 PR-AUC: 0.869
2024-10-25 13:29 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:29 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 13:29 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:29 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 13:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-25 13:29 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 13:29 - INFO - ---------------------------------------------
2024-10-25 13:30 - INFO - ---------------------------------------------
2024-10-25 13:30 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 13:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98734
2024-10-25 13:30 - INFO - 	 Train Loss: 0.065
2024-10-25 13:30 - INFO - 	 Val. Loss: 0.061
2024-10-25 13:30 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:30 - INFO - 	 PR-AUC: 0.880
2024-10-25 13:30 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:30 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 13:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:30 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 13:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-25 13:30 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:30 - INFO - ---------------------------------------------
2024-10-25 13:30 - INFO - ---------------------------------------------
2024-10-25 13:30 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 13:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98776
2024-10-25 13:30 - INFO - 	 Train Loss: 0.064
2024-10-25 13:30 - INFO - 	 Val. Loss: 0.061
2024-10-25 13:30 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:30 - INFO - 	 PR-AUC: 0.887
2024-10-25 13:30 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-25 13:30 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 13:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:30 - INFO - 	 Best PR-AUC: 0.887
2024-10-25 13:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 13:30 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 13:30 - INFO - ---------------------------------------------
2024-10-25 13:31 - INFO - ---------------------------------------------
2024-10-25 13:31 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 13:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9882
2024-10-25 13:31 - INFO - 	 Train Loss: 0.062
2024-10-25 13:31 - INFO - 	 Val. Loss: 0.059
2024-10-25 13:31 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:31 - INFO - 	 PR-AUC: 0.889
2024-10-25 13:31 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:31 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:31 - INFO - 	 Best PR-AUC: 0.889
2024-10-25 13:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 13:31 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 13:31 - INFO - ---------------------------------------------
2024-10-25 13:31 - INFO - ---------------------------------------------
2024-10-25 13:31 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 13:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98855
2024-10-25 13:31 - INFO - 	 Train Loss: 0.060
2024-10-25 13:31 - INFO - 	 Val. Loss: 0.058
2024-10-25 13:31 - INFO - 	 ROC-AUC: 0.989
2024-10-25 13:31 - INFO - 	 PR-AUC: 0.891
2024-10-25 13:31 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:31 - INFO - 	 Best Val. Loss: 0.058
2024-10-25 13:31 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 13:31 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 13:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-25 13:31 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 13:31 - INFO - ---------------------------------------------
2024-10-25 13:32 - INFO - ---------------------------------------------
2024-10-25 13:32 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 13:32 - INFO - 	 Train Loss: 0.058
2024-10-25 13:32 - INFO - 	 Val. Loss: 0.057
2024-10-25 13:32 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:32 - INFO - 	 PR-AUC: 0.897
2024-10-25 13:32 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 13:32 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 13:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 13:32 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 13:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 13:32 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 13:32 - INFO - ---------------------------------------------
2024-10-25 13:32 - INFO - ---------------------------------------------
2024-10-25 13:32 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 13:32 - INFO - 	 Train Loss: 0.057
2024-10-25 13:32 - INFO - 	 Val. Loss: 0.059
2024-10-25 13:32 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:32 - INFO - 	 PR-AUC: 0.888
2024-10-25 13:32 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:32 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 13:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 13:32 - INFO - 	 Best PR-AUC: 0.897
2024-10-25 13:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-25 13:32 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 13:32 - INFO - ---------------------------------------------
2024-10-25 13:34 - INFO - Fit the preprocessing pipeline
2024-10-25 13:34 - INFO - Training using device: cuda
2024-10-25 13:34 - INFO - Creating generators
2024-10-25 13:34 - INFO - The model has 651,257 trainable parameters
2024-10-25 13:34 - INFO - * Model:
2024-10-25 13:34 - INFO - * -----------
2024-10-25 13:34 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 13:34 - INFO - * -----------
2024-10-25 13:34 - INFO - Evaluating model based on: rocauc
2024-10-25 13:34 - INFO - Training..

2024-10-25 13:34 - INFO - ---------------------------------------------
2024-10-25 13:34 - INFO - Epoch: 01 | Time: 0m 32s
2024-10-25 13:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97479
2024-10-25 13:34 - INFO - 	 Train Loss: 0.169
2024-10-25 13:34 - INFO - 	 Val. Loss: 0.115
2024-10-25 13:34 - INFO - 	 ROC-AUC: 0.975
2024-10-25 13:34 - INFO - 	 PR-AUC: 0.786
2024-10-25 13:34 - INFO - 	 Recall for 0.4 precision: 0.961
2024-10-25 13:34 - INFO - 	 Best Val. Loss: 0.115
2024-10-25 13:34 - INFO - 	 Best ROC-AUC: 0.975
2024-10-25 13:34 - INFO - 	 Best PR-AUC: 0.786
2024-10-25 13:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-25 13:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.737
2024-10-25 13:34 - INFO - 	 Best Recall for 0.4 precision: 0.961
2024-10-25 13:34 - INFO - ---------------------------------------------
2024-10-25 13:35 - INFO - ---------------------------------------------
2024-10-25 13:35 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 13:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98202
2024-10-25 13:35 - INFO - 	 Train Loss: 0.086
2024-10-25 13:35 - INFO - 	 Val. Loss: 0.084
2024-10-25 13:35 - INFO - 	 ROC-AUC: 0.982
2024-10-25 13:35 - INFO - 	 PR-AUC: 0.844
2024-10-25 13:35 - INFO - 	 Recall for 0.4 precision: 0.970
2024-10-25 13:35 - INFO - 	 Best Val. Loss: 0.084
2024-10-25 13:35 - INFO - 	 Best ROC-AUC: 0.982
2024-10-25 13:35 - INFO - 	 Best PR-AUC: 0.844
2024-10-25 13:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-25 13:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-25 13:35 - INFO - 	 Best Recall for 0.4 precision: 0.970
2024-10-25 13:35 - INFO - ---------------------------------------------
2024-10-25 13:35 - INFO - ---------------------------------------------
2024-10-25 13:35 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 13:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98572
2024-10-25 13:35 - INFO - 	 Train Loss: 0.077
2024-10-25 13:35 - INFO - 	 Val. Loss: 0.065
2024-10-25 13:35 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:35 - INFO - 	 PR-AUC: 0.870
2024-10-25 13:35 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:35 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 13:35 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:35 - INFO - 	 Best PR-AUC: 0.870
2024-10-25 13:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-25 13:35 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 13:35 - INFO - ---------------------------------------------
2024-10-25 13:36 - INFO - ---------------------------------------------
2024-10-25 13:36 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 13:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98616
2024-10-25 13:36 - INFO - 	 Train Loss: 0.069
2024-10-25 13:36 - INFO - 	 Val. Loss: 0.065
2024-10-25 13:36 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:36 - INFO - 	 PR-AUC: 0.881
2024-10-25 13:36 - INFO - 	 Recall for 0.4 precision: 0.972
2024-10-25 13:36 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 13:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:36 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 13:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 13:36 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 13:36 - INFO - ---------------------------------------------
2024-10-25 13:37 - INFO - ---------------------------------------------
2024-10-25 13:37 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 13:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98703
2024-10-25 13:37 - INFO - 	 Train Loss: 0.066
2024-10-25 13:37 - INFO - 	 Val. Loss: 0.063
2024-10-25 13:37 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:37 - INFO - 	 PR-AUC: 0.885
2024-10-25 13:37 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 13:37 - INFO - 	 Best Val. Loss: 0.063
2024-10-25 13:37 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:37 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 13:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 13:37 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 13:37 - INFO - ---------------------------------------------
2024-10-25 13:37 - INFO - ---------------------------------------------
2024-10-25 13:37 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 13:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98824
2024-10-25 13:37 - INFO - 	 Train Loss: 0.064
2024-10-25 13:37 - INFO - 	 Val. Loss: 0.059
2024-10-25 13:37 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:37 - INFO - 	 PR-AUC: 0.881
2024-10-25 13:37 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:37 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:37 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 13:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 13:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-25 13:37 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:37 - INFO - ---------------------------------------------
2024-10-25 13:38 - INFO - ---------------------------------------------
2024-10-25 13:38 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 13:38 - INFO - 	 Train Loss: 0.062
2024-10-25 13:38 - INFO - 	 Val. Loss: 0.060
2024-10-25 13:38 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:38 - INFO - 	 PR-AUC: 0.888
2024-10-25 13:38 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 13:38 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:38 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 13:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 13:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 13:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:38 - INFO - ---------------------------------------------
2024-10-25 13:38 - INFO - ---------------------------------------------
2024-10-25 13:38 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 13:38 - INFO - 	 Train Loss: 0.061
2024-10-25 13:38 - INFO - 	 Val. Loss: 0.061
2024-10-25 13:38 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:38 - INFO - 	 PR-AUC: 0.882
2024-10-25 13:38 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:38 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:38 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 13:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 13:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 13:38 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:38 - INFO - ---------------------------------------------
2024-10-25 13:39 - INFO - ---------------------------------------------
2024-10-25 13:39 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 13:39 - INFO - 	 Train Loss: 0.059
2024-10-25 13:39 - INFO - 	 Val. Loss: 0.060
2024-10-25 13:39 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:39 - INFO - 	 PR-AUC: 0.880
2024-10-25 13:39 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:39 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:39 - INFO - 	 Best PR-AUC: 0.888
2024-10-25 13:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 13:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 13:39 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:39 - INFO - ---------------------------------------------
2024-10-25 13:41 - INFO - Fit the preprocessing pipeline
2024-10-25 13:41 - INFO - Training using device: cuda
2024-10-25 13:41 - INFO - Creating generators
2024-10-25 13:41 - INFO - The model has 651,257 trainable parameters
2024-10-25 13:41 - INFO - * Model:
2024-10-25 13:41 - INFO - * -----------
2024-10-25 13:41 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 13:41 - INFO - * -----------
2024-10-25 13:41 - INFO - Evaluating model based on: rocauc
2024-10-25 13:41 - INFO - Training..

2024-10-25 13:41 - INFO - ---------------------------------------------
2024-10-25 13:41 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 13:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9717
2024-10-25 13:41 - INFO - 	 Train Loss: 0.157
2024-10-25 13:41 - INFO - 	 Val. Loss: 0.098
2024-10-25 13:41 - INFO - 	 ROC-AUC: 0.972
2024-10-25 13:41 - INFO - 	 PR-AUC: 0.749
2024-10-25 13:41 - INFO - 	 Recall for 0.4 precision: 0.949
2024-10-25 13:41 - INFO - 	 Best Val. Loss: 0.098
2024-10-25 13:41 - INFO - 	 Best ROC-AUC: 0.972
2024-10-25 13:41 - INFO - 	 Best PR-AUC: 0.749
2024-10-25 13:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-25 13:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.741
2024-10-25 13:41 - INFO - 	 Best Recall for 0.4 precision: 0.949
2024-10-25 13:41 - INFO - ---------------------------------------------
2024-10-25 13:42 - INFO - ---------------------------------------------
2024-10-25 13:42 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 13:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98408
2024-10-25 13:42 - INFO - 	 Train Loss: 0.084
2024-10-25 13:42 - INFO - 	 Val. Loss: 0.071
2024-10-25 13:42 - INFO - 	 ROC-AUC: 0.984
2024-10-25 13:42 - INFO - 	 PR-AUC: 0.856
2024-10-25 13:42 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 13:42 - INFO - 	 Best Val. Loss: 0.071
2024-10-25 13:42 - INFO - 	 Best ROC-AUC: 0.984
2024-10-25 13:42 - INFO - 	 Best PR-AUC: 0.856
2024-10-25 13:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 13:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-25 13:42 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 13:42 - INFO - ---------------------------------------------
2024-10-25 13:42 - INFO - ---------------------------------------------
2024-10-25 13:42 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 13:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98506
2024-10-25 13:42 - INFO - 	 Train Loss: 0.076
2024-10-25 13:42 - INFO - 	 Val. Loss: 0.069
2024-10-25 13:42 - INFO - 	 ROC-AUC: 0.985
2024-10-25 13:42 - INFO - 	 PR-AUC: 0.866
2024-10-25 13:42 - INFO - 	 Recall for 0.4 precision: 0.971
2024-10-25 13:42 - INFO - 	 Best Val. Loss: 0.069
2024-10-25 13:42 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 13:42 - INFO - 	 Best PR-AUC: 0.866
2024-10-25 13:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 13:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-25 13:42 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 13:42 - INFO - ---------------------------------------------
2024-10-25 13:43 - INFO - ---------------------------------------------
2024-10-25 13:43 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 13:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98572
2024-10-25 13:43 - INFO - 	 Train Loss: 0.071
2024-10-25 13:43 - INFO - 	 Val. Loss: 0.066
2024-10-25 13:43 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:43 - INFO - 	 PR-AUC: 0.874
2024-10-25 13:43 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:43 - INFO - 	 Best Val. Loss: 0.066
2024-10-25 13:43 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:43 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 13:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-25 13:43 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 13:43 - INFO - ---------------------------------------------
2024-10-25 13:43 - INFO - ---------------------------------------------
2024-10-25 13:43 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 13:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98721
2024-10-25 13:43 - INFO - 	 Train Loss: 0.066
2024-10-25 13:43 - INFO - 	 Val. Loss: 0.062
2024-10-25 13:43 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:43 - INFO - 	 PR-AUC: 0.881
2024-10-25 13:43 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 13:43 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 13:43 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:43 - INFO - 	 Best PR-AUC: 0.881
2024-10-25 13:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-25 13:43 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 13:43 - INFO - ---------------------------------------------
2024-10-25 13:44 - INFO - ---------------------------------------------
2024-10-25 13:44 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 13:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98732
2024-10-25 13:44 - INFO - 	 Train Loss: 0.065
2024-10-25 13:44 - INFO - 	 Val. Loss: 0.062
2024-10-25 13:44 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:44 - INFO - 	 PR-AUC: 0.883
2024-10-25 13:44 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:44 - INFO - 	 Best Val. Loss: 0.062
2024-10-25 13:44 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:44 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 13:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 13:44 - INFO - 	 Best Recall for 0.4 precision: 0.975
2024-10-25 13:44 - INFO - ---------------------------------------------
2024-10-25 13:44 - INFO - ---------------------------------------------
2024-10-25 13:44 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 13:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98763
2024-10-25 13:44 - INFO - 	 Train Loss: 0.062
2024-10-25 13:44 - INFO - 	 Val. Loss: 0.061
2024-10-25 13:44 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:44 - INFO - 	 PR-AUC: 0.883
2024-10-25 13:44 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:44 - INFO - 	 Best Val. Loss: 0.061
2024-10-25 13:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:44 - INFO - 	 Best PR-AUC: 0.883
2024-10-25 13:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-25 13:44 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:44 - INFO - ---------------------------------------------
2024-10-25 13:45 - INFO - ---------------------------------------------
2024-10-25 13:45 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 13:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98809
2024-10-25 13:45 - INFO - 	 Train Loss: 0.061
2024-10-25 13:45 - INFO - 	 Val. Loss: 0.059
2024-10-25 13:45 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:45 - INFO - 	 PR-AUC: 0.892
2024-10-25 13:45 - INFO - 	 Recall for 0.4 precision: 0.980
2024-10-25 13:45 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:45 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 13:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 13:45 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 13:45 - INFO - ---------------------------------------------
2024-10-25 13:45 - INFO - ---------------------------------------------
2024-10-25 13:45 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 13:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98812
2024-10-25 13:45 - INFO - 	 Train Loss: 0.059
2024-10-25 13:45 - INFO - 	 Val. Loss: 0.059
2024-10-25 13:45 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:45 - INFO - 	 PR-AUC: 0.889
2024-10-25 13:45 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:45 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:45 - INFO - 	 Best PR-AUC: 0.892
2024-10-25 13:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-25 13:45 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 13:45 - INFO - ---------------------------------------------
2024-10-25 13:46 - INFO - ---------------------------------------------
2024-10-25 13:46 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 13:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98861
2024-10-25 13:46 - INFO - 	 Train Loss: 0.059
2024-10-25 13:46 - INFO - 	 Val. Loss: 0.057
2024-10-25 13:46 - INFO - 	 ROC-AUC: 0.989
2024-10-25 13:46 - INFO - 	 PR-AUC: 0.902
2024-10-25 13:46 - INFO - 	 Recall for 0.4 precision: 0.979
2024-10-25 13:46 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 13:46 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 13:46 - INFO - 	 Best PR-AUC: 0.902
2024-10-25 13:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-25 13:46 - INFO - 	 Best Recall for 0.4 precision: 0.980
2024-10-25 13:46 - INFO - ---------------------------------------------
2024-10-25 13:47 - INFO - Fit the preprocessing pipeline
2024-10-25 13:47 - INFO - Training using device: cuda
2024-10-25 13:47 - INFO - Creating generators
2024-10-25 13:47 - INFO - The model has 651,257 trainable parameters
2024-10-25 13:47 - INFO - * Model:
2024-10-25 13:47 - INFO - * -----------
2024-10-25 13:47 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 13:47 - INFO - * -----------
2024-10-25 13:47 - INFO - Evaluating model based on: rocauc
2024-10-25 13:47 - INFO - Training..

2024-10-25 13:48 - INFO - ---------------------------------------------
2024-10-25 13:48 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 13:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97711
2024-10-25 13:48 - INFO - 	 Train Loss: 0.155
2024-10-25 13:48 - INFO - 	 Val. Loss: 0.085
2024-10-25 13:48 - INFO - 	 ROC-AUC: 0.977
2024-10-25 13:48 - INFO - 	 PR-AUC: 0.815
2024-10-25 13:48 - INFO - 	 Recall for 0.4 precision: 0.959
2024-10-25 13:48 - INFO - 	 Best Val. Loss: 0.085
2024-10-25 13:48 - INFO - 	 Best ROC-AUC: 0.977
2024-10-25 13:48 - INFO - 	 Best PR-AUC: 0.815
2024-10-25 13:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-25 13:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-25 13:48 - INFO - 	 Best Recall for 0.4 precision: 0.959
2024-10-25 13:48 - INFO - ---------------------------------------------
2024-10-25 13:48 - INFO - ---------------------------------------------
2024-10-25 13:48 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 13:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98335
2024-10-25 13:48 - INFO - 	 Train Loss: 0.085
2024-10-25 13:48 - INFO - 	 Val. Loss: 0.072
2024-10-25 13:48 - INFO - 	 ROC-AUC: 0.983
2024-10-25 13:48 - INFO - 	 PR-AUC: 0.842
2024-10-25 13:48 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:48 - INFO - 	 Best Val. Loss: 0.072
2024-10-25 13:48 - INFO - 	 Best ROC-AUC: 0.983
2024-10-25 13:48 - INFO - 	 Best PR-AUC: 0.842
2024-10-25 13:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-25 13:48 - INFO - 	 Best Recall for 0.4 precision: 0.973
2024-10-25 13:48 - INFO - ---------------------------------------------
2024-10-25 13:49 - INFO - ---------------------------------------------
2024-10-25 13:49 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 13:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9861
2024-10-25 13:49 - INFO - 	 Train Loss: 0.075
2024-10-25 13:49 - INFO - 	 Val. Loss: 0.065
2024-10-25 13:49 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:49 - INFO - 	 PR-AUC: 0.865
2024-10-25 13:49 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:49 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 13:49 - INFO - 	 Best ROC-AUC: 0.986
2024-10-25 13:49 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 13:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 13:49 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:49 - INFO - ---------------------------------------------
2024-10-25 13:50 - INFO - ---------------------------------------------
2024-10-25 13:50 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 13:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98688
2024-10-25 13:50 - INFO - 	 Train Loss: 0.071
2024-10-25 13:50 - INFO - 	 Val. Loss: 0.064
2024-10-25 13:50 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:50 - INFO - 	 PR-AUC: 0.863
2024-10-25 13:50 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 13:50 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 13:50 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:50 - INFO - 	 Best PR-AUC: 0.865
2024-10-25 13:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-25 13:50 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:50 - INFO - ---------------------------------------------
2024-10-25 13:50 - INFO - ---------------------------------------------
2024-10-25 13:50 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 13:50 - INFO - 	 Train Loss: 0.067
2024-10-25 13:50 - INFO - 	 Val. Loss: 0.068
2024-10-25 13:50 - INFO - 	 ROC-AUC: 0.986
2024-10-25 13:50 - INFO - 	 PR-AUC: 0.874
2024-10-25 13:50 - INFO - 	 Recall for 0.4 precision: 0.973
2024-10-25 13:50 - INFO - 	 Best Val. Loss: 0.064
2024-10-25 13:50 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:50 - INFO - 	 Best PR-AUC: 0.874
2024-10-25 13:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-25 13:50 - INFO - 	 Best Recall for 0.4 precision: 0.977
2024-10-25 13:50 - INFO - ---------------------------------------------
2024-10-25 13:51 - INFO - ---------------------------------------------
2024-10-25 13:51 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 13:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9874
2024-10-25 13:51 - INFO - 	 Train Loss: 0.066
2024-10-25 13:51 - INFO - 	 Val. Loss: 0.060
2024-10-25 13:51 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:51 - INFO - 	 PR-AUC: 0.879
2024-10-25 13:51 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:51 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 13:51 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:51 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 13:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-25 13:51 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:51 - INFO - ---------------------------------------------
2024-10-25 13:51 - INFO - ---------------------------------------------
2024-10-25 13:51 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 13:51 - INFO - 	 Train Loss: 0.062
2024-10-25 13:51 - INFO - 	 Val. Loss: 0.062
2024-10-25 13:51 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:51 - INFO - 	 PR-AUC: 0.885
2024-10-25 13:51 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:51 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 13:51 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:51 - INFO - 	 Best PR-AUC: 0.885
2024-10-25 13:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 13:51 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:51 - INFO - ---------------------------------------------
2024-10-25 13:52 - INFO - ---------------------------------------------
2024-10-25 13:52 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 13:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98763
2024-10-25 13:52 - INFO - 	 Train Loss: 0.060
2024-10-25 13:52 - INFO - 	 Val. Loss: 0.061
2024-10-25 13:52 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:52 - INFO - 	 PR-AUC: 0.891
2024-10-25 13:52 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:52 - INFO - 	 Best Val. Loss: 0.060
2024-10-25 13:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:52 - INFO - 	 Best PR-AUC: 0.891
2024-10-25 13:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-25 13:52 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:52 - INFO - ---------------------------------------------
2024-10-25 13:52 - INFO - ---------------------------------------------
2024-10-25 13:52 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 13:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98766
2024-10-25 13:52 - INFO - 	 Train Loss: 0.059
2024-10-25 13:52 - INFO - 	 Val. Loss: 0.059
2024-10-25 13:52 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:52 - INFO - 	 PR-AUC: 0.894
2024-10-25 13:52 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:52 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:52 - INFO - 	 Best PR-AUC: 0.894
2024-10-25 13:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-25 13:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-25 13:52 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:52 - INFO - ---------------------------------------------
2024-10-25 13:53 - INFO - ---------------------------------------------
2024-10-25 13:53 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 13:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98823
2024-10-25 13:53 - INFO - 	 Train Loss: 0.058
2024-10-25 13:53 - INFO - 	 Val. Loss: 0.059
2024-10-25 13:53 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:53 - INFO - 	 PR-AUC: 0.900
2024-10-25 13:53 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:53 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:53 - INFO - 	 Best PR-AUC: 0.900
2024-10-25 13:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-25 13:53 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:53 - INFO - ---------------------------------------------
2024-10-25 13:54 - INFO - Fit the preprocessing pipeline
2024-10-25 13:54 - INFO - Training using device: cuda
2024-10-25 13:54 - INFO - Creating generators
2024-10-25 13:54 - INFO - The model has 651,257 trainable parameters
2024-10-25 13:54 - INFO - * Model:
2024-10-25 13:54 - INFO - * -----------
2024-10-25 13:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-10-25 13:54 - INFO - * -----------
2024-10-25 13:54 - INFO - Evaluating model based on: rocauc
2024-10-25 13:54 - INFO - Training..

2024-10-25 13:55 - INFO - ---------------------------------------------
2024-10-25 13:55 - INFO - Epoch: 01 | Time: 0m 31s
2024-10-25 13:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.97963
2024-10-25 13:55 - INFO - 	 Train Loss: 0.165
2024-10-25 13:55 - INFO - 	 Val. Loss: 0.083
2024-10-25 13:55 - INFO - 	 ROC-AUC: 0.980
2024-10-25 13:55 - INFO - 	 PR-AUC: 0.816
2024-10-25 13:55 - INFO - 	 Recall for 0.4 precision: 0.966
2024-10-25 13:55 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 13:55 - INFO - 	 Best ROC-AUC: 0.980
2024-10-25 13:55 - INFO - 	 Best PR-AUC: 0.816
2024-10-25 13:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-25 13:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-25 13:55 - INFO - 	 Best Recall for 0.4 precision: 0.966
2024-10-25 13:55 - INFO - ---------------------------------------------
2024-10-25 13:55 - INFO - ---------------------------------------------
2024-10-25 13:55 - INFO - Epoch: 02 | Time: 0m 31s
2024-10-25 13:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98477
2024-10-25 13:55 - INFO - 	 Train Loss: 0.084
2024-10-25 13:55 - INFO - 	 Val. Loss: 0.086
2024-10-25 13:55 - INFO - 	 ROC-AUC: 0.985
2024-10-25 13:55 - INFO - 	 PR-AUC: 0.861
2024-10-25 13:55 - INFO - 	 Recall for 0.4 precision: 0.974
2024-10-25 13:55 - INFO - 	 Best Val. Loss: 0.083
2024-10-25 13:55 - INFO - 	 Best ROC-AUC: 0.985
2024-10-25 13:55 - INFO - 	 Best PR-AUC: 0.861
2024-10-25 13:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-25 13:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-25 13:55 - INFO - 	 Best Recall for 0.4 precision: 0.974
2024-10-25 13:55 - INFO - ---------------------------------------------
2024-10-25 13:56 - INFO - ---------------------------------------------
2024-10-25 13:56 - INFO - Epoch: 03 | Time: 0m 31s
2024-10-25 13:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9869
2024-10-25 13:56 - INFO - 	 Train Loss: 0.074
2024-10-25 13:56 - INFO - 	 Val. Loss: 0.065
2024-10-25 13:56 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:56 - INFO - 	 PR-AUC: 0.876
2024-10-25 13:56 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:56 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 13:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:56 - INFO - 	 Best PR-AUC: 0.876
2024-10-25 13:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-25 13:56 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:56 - INFO - ---------------------------------------------
2024-10-25 13:56 - INFO - ---------------------------------------------
2024-10-25 13:56 - INFO - Epoch: 04 | Time: 0m 31s
2024-10-25 13:56 - INFO - 	 Train Loss: 0.069
2024-10-25 13:56 - INFO - 	 Val. Loss: 0.065
2024-10-25 13:56 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:56 - INFO - 	 PR-AUC: 0.879
2024-10-25 13:56 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 13:56 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 13:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:56 - INFO - 	 Best PR-AUC: 0.879
2024-10-25 13:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-25 13:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-25 13:56 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:56 - INFO - ---------------------------------------------
2024-10-25 13:57 - INFO - ---------------------------------------------
2024-10-25 13:57 - INFO - Epoch: 05 | Time: 0m 31s
2024-10-25 13:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98735
2024-10-25 13:57 - INFO - 	 Train Loss: 0.065
2024-10-25 13:57 - INFO - 	 Val. Loss: 0.067
2024-10-25 13:57 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:57 - INFO - 	 PR-AUC: 0.880
2024-10-25 13:57 - INFO - 	 Recall for 0.4 precision: 0.976
2024-10-25 13:57 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 13:57 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:57 - INFO - 	 Best PR-AUC: 0.880
2024-10-25 13:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-25 13:57 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:57 - INFO - ---------------------------------------------
2024-10-25 13:57 - INFO - ---------------------------------------------
2024-10-25 13:57 - INFO - Epoch: 06 | Time: 0m 31s
2024-10-25 13:57 - INFO - 	 Train Loss: 0.064
2024-10-25 13:57 - INFO - 	 Val. Loss: 0.065
2024-10-25 13:57 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:57 - INFO - 	 PR-AUC: 0.884
2024-10-25 13:57 - INFO - 	 Recall for 0.4 precision: 0.975
2024-10-25 13:57 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 13:57 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:57 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 13:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 13:57 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:57 - INFO - ---------------------------------------------
2024-10-25 13:58 - INFO - ---------------------------------------------
2024-10-25 13:58 - INFO - Epoch: 07 | Time: 0m 31s
2024-10-25 13:58 - INFO - 	 Train Loss: 0.061
2024-10-25 13:58 - INFO - 	 Val. Loss: 0.067
2024-10-25 13:58 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:58 - INFO - 	 PR-AUC: 0.881
2024-10-25 13:58 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:58 - INFO - 	 Best Val. Loss: 0.065
2024-10-25 13:58 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:58 - INFO - 	 Best PR-AUC: 0.884
2024-10-25 13:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-25 13:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 13:58 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:58 - INFO - ---------------------------------------------
2024-10-25 13:58 - INFO - ---------------------------------------------
2024-10-25 13:58 - INFO - Epoch: 08 | Time: 0m 31s
2024-10-25 13:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98748
2024-10-25 13:58 - INFO - 	 Train Loss: 0.060
2024-10-25 13:58 - INFO - 	 Val. Loss: 0.059
2024-10-25 13:58 - INFO - 	 ROC-AUC: 0.987
2024-10-25 13:58 - INFO - 	 PR-AUC: 0.893
2024-10-25 13:58 - INFO - 	 Recall for 0.4 precision: 0.977
2024-10-25 13:58 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:58 - INFO - 	 Best ROC-AUC: 0.987
2024-10-25 13:58 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 13:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 13:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 13:58 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:58 - INFO - ---------------------------------------------
2024-10-25 13:59 - INFO - ---------------------------------------------
2024-10-25 13:59 - INFO - Epoch: 09 | Time: 0m 31s
2024-10-25 13:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98781
2024-10-25 13:59 - INFO - 	 Train Loss: 0.059
2024-10-25 13:59 - INFO - 	 Val. Loss: 0.060
2024-10-25 13:59 - INFO - 	 ROC-AUC: 0.988
2024-10-25 13:59 - INFO - 	 PR-AUC: 0.891
2024-10-25 13:59 - INFO - 	 Recall for 0.4 precision: 0.978
2024-10-25 13:59 - INFO - 	 Best Val. Loss: 0.059
2024-10-25 13:59 - INFO - 	 Best ROC-AUC: 0.988
2024-10-25 13:59 - INFO - 	 Best PR-AUC: 0.893
2024-10-25 13:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-25 13:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-25 13:59 - INFO - 	 Best Recall for 0.4 precision: 0.978
2024-10-25 13:59 - INFO - ---------------------------------------------
2024-10-25 14:00 - INFO - ---------------------------------------------
2024-10-25 14:00 - INFO - Epoch: 10 | Time: 0m 31s
2024-10-25 14:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98897
2024-10-25 14:00 - INFO - 	 Train Loss: 0.057
2024-10-25 14:00 - INFO - 	 Val. Loss: 0.057
2024-10-25 14:00 - INFO - 	 ROC-AUC: 0.989
2024-10-25 14:00 - INFO - 	 PR-AUC: 0.907
2024-10-25 14:00 - INFO - 	 Recall for 0.4 precision: 0.981
2024-10-25 14:00 - INFO - 	 Best Val. Loss: 0.057
2024-10-25 14:00 - INFO - 	 Best ROC-AUC: 0.989
2024-10-25 14:00 - INFO - 	 Best PR-AUC: 0.907
2024-10-25 14:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-25 14:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-25 14:00 - INFO - 	 Best Recall for 0.4 precision: 0.981
2024-10-25 14:00 - INFO - ---------------------------------------------
