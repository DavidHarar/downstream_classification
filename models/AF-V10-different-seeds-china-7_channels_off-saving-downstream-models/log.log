2024-11-04 10:31 - INFO - Fit the preprocessing pipeline
2024-11-04 10:31 - INFO - Training using device: mps
2024-11-04 10:31 - INFO - Creating generators
2024-11-04 10:31 - INFO - The model has 651,257 trainable parameters
2024-11-04 10:31 - INFO - * Model:
2024-11-04 10:31 - INFO - * -----------
2024-11-04 10:31 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 10:31 - INFO - * -----------
2024-11-04 10:31 - INFO - Evaluating model based on: aucpr
2024-11-04 10:31 - INFO - Training..

2024-11-04 10:33 - INFO - ---------------------------------------------
2024-11-04 10:33 - INFO - Epoch: 01 | Time: 1m 47s
2024-11-04 10:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14151
2024-11-04 10:33 - INFO - 	 Train Loss: 0.257
2024-11-04 10:33 - INFO - 	 Val. Loss: 0.288
2024-11-04 10:33 - INFO - 	 ROC-AUC: 0.728
2024-11-04 10:33 - INFO - 	 PR-AUC: 0.142
2024-11-04 10:33 - INFO - 	 Recall for 0.4 precision: 0.041
2024-11-04 10:33 - INFO - 	 Best Val. Loss: 0.288
2024-11-04 10:33 - INFO - 	 Best ROC-AUC: 0.728
2024-11-04 10:33 - INFO - 	 Best PR-AUC: 0.142
2024-11-04 10:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-11-04 10:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.117
2024-11-04 10:33 - INFO - 	 Best Recall for 0.4 precision: 0.041
2024-11-04 10:33 - INFO - ---------------------------------------------
2024-11-04 10:35 - INFO - ---------------------------------------------
2024-11-04 10:35 - INFO - Epoch: 02 | Time: 1m 56s
2024-11-04 10:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18166
2024-11-04 10:35 - INFO - 	 Train Loss: 0.206
2024-11-04 10:35 - INFO - 	 Val. Loss: 0.261
2024-11-04 10:35 - INFO - 	 ROC-AUC: 0.773
2024-11-04 10:35 - INFO - 	 PR-AUC: 0.182
2024-11-04 10:35 - INFO - 	 Recall for 0.4 precision: 0.067
2024-11-04 10:35 - INFO - 	 Best Val. Loss: 0.261
2024-11-04 10:35 - INFO - 	 Best ROC-AUC: 0.773
2024-11-04 10:35 - INFO - 	 Best PR-AUC: 0.182
2024-11-04 10:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-11-04 10:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.102
2024-11-04 10:35 - INFO - 	 Best Recall for 0.4 precision: 0.067
2024-11-04 10:35 - INFO - ---------------------------------------------
2024-11-04 10:37 - INFO - ---------------------------------------------
2024-11-04 10:37 - INFO - Epoch: 03 | Time: 1m 56s
2024-11-04 10:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24817
2024-11-04 10:37 - INFO - 	 Train Loss: 0.181
2024-11-04 10:37 - INFO - 	 Val. Loss: 0.213
2024-11-04 10:37 - INFO - 	 ROC-AUC: 0.795
2024-11-04 10:37 - INFO - 	 PR-AUC: 0.248
2024-11-04 10:37 - INFO - 	 Recall for 0.4 precision: 0.208
2024-11-04 10:37 - INFO - 	 Best Val. Loss: 0.213
2024-11-04 10:37 - INFO - 	 Best ROC-AUC: 0.795
2024-11-04 10:37 - INFO - 	 Best PR-AUC: 0.248
2024-11-04 10:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.739
2024-11-04 10:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 10:37 - INFO - 	 Best Recall for 0.4 precision: 0.208
2024-11-04 10:37 - INFO - ---------------------------------------------
2024-11-04 10:39 - INFO - ---------------------------------------------
2024-11-04 10:39 - INFO - Epoch: 04 | Time: 1m 57s
2024-11-04 10:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27002
2024-11-04 10:39 - INFO - 	 Train Loss: 0.169
2024-11-04 10:39 - INFO - 	 Val. Loss: 0.205
2024-11-04 10:39 - INFO - 	 ROC-AUC: 0.791
2024-11-04 10:39 - INFO - 	 PR-AUC: 0.270
2024-11-04 10:39 - INFO - 	 Recall for 0.4 precision: 0.249
2024-11-04 10:39 - INFO - 	 Best Val. Loss: 0.205
2024-11-04 10:39 - INFO - 	 Best ROC-AUC: 0.795
2024-11-04 10:39 - INFO - 	 Best PR-AUC: 0.270
2024-11-04 10:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.739
2024-11-04 10:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-04 10:39 - INFO - 	 Best Recall for 0.4 precision: 0.249
2024-11-04 10:39 - INFO - ---------------------------------------------
2024-11-04 10:41 - INFO - ---------------------------------------------
2024-11-04 10:41 - INFO - Epoch: 05 | Time: 1m 59s
2024-11-04 10:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27309
2024-11-04 10:41 - INFO - 	 Train Loss: 0.163
2024-11-04 10:41 - INFO - 	 Val. Loss: 0.191
2024-11-04 10:41 - INFO - 	 ROC-AUC: 0.798
2024-11-04 10:41 - INFO - 	 PR-AUC: 0.273
2024-11-04 10:41 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-04 10:41 - INFO - 	 Best Val. Loss: 0.191
2024-11-04 10:41 - INFO - 	 Best ROC-AUC: 0.798
2024-11-04 10:41 - INFO - 	 Best PR-AUC: 0.273
2024-11-04 10:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 10:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-04 10:41 - INFO - 	 Best Recall for 0.4 precision: 0.249
2024-11-04 10:41 - INFO - ---------------------------------------------
2024-11-04 10:43 - INFO - ---------------------------------------------
2024-11-04 10:43 - INFO - Epoch: 06 | Time: 2m 0s
2024-11-04 10:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30332
2024-11-04 10:43 - INFO - 	 Train Loss: 0.158
2024-11-04 10:43 - INFO - 	 Val. Loss: 0.191
2024-11-04 10:43 - INFO - 	 ROC-AUC: 0.827
2024-11-04 10:43 - INFO - 	 PR-AUC: 0.303
2024-11-04 10:43 - INFO - 	 Recall for 0.4 precision: 0.280
2024-11-04 10:43 - INFO - 	 Best Val. Loss: 0.191
2024-11-04 10:43 - INFO - 	 Best ROC-AUC: 0.827
2024-11-04 10:43 - INFO - 	 Best PR-AUC: 0.303
2024-11-04 10:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.768
2024-11-04 10:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-04 10:43 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-04 10:43 - INFO - ---------------------------------------------
2024-11-04 10:45 - INFO - ---------------------------------------------
2024-11-04 10:45 - INFO - Epoch: 07 | Time: 2m 1s
2024-11-04 10:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33611
2024-11-04 10:45 - INFO - 	 Train Loss: 0.152
2024-11-04 10:45 - INFO - 	 Val. Loss: 0.161
2024-11-04 10:45 - INFO - 	 ROC-AUC: 0.880
2024-11-04 10:45 - INFO - 	 PR-AUC: 0.336
2024-11-04 10:45 - INFO - 	 Recall for 0.4 precision: 0.465
2024-11-04 10:45 - INFO - 	 Best Val. Loss: 0.161
2024-11-04 10:45 - INFO - 	 Best ROC-AUC: 0.880
2024-11-04 10:45 - INFO - 	 Best PR-AUC: 0.336
2024-11-04 10:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.821
2024-11-04 10:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.223
2024-11-04 10:45 - INFO - 	 Best Recall for 0.4 precision: 0.465
2024-11-04 10:45 - INFO - ---------------------------------------------
2024-11-04 10:47 - INFO - ---------------------------------------------
2024-11-04 10:47 - INFO - Epoch: 08 | Time: 1m 59s
2024-11-04 10:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42185
2024-11-04 10:47 - INFO - 	 Train Loss: 0.134
2024-11-04 10:47 - INFO - 	 Val. Loss: 0.141
2024-11-04 10:47 - INFO - 	 ROC-AUC: 0.949
2024-11-04 10:47 - INFO - 	 PR-AUC: 0.422
2024-11-04 10:47 - INFO - 	 Recall for 0.4 precision: 0.595
2024-11-04 10:47 - INFO - 	 Best Val. Loss: 0.141
2024-11-04 10:47 - INFO - 	 Best ROC-AUC: 0.949
2024-11-04 10:47 - INFO - 	 Best PR-AUC: 0.422
2024-11-04 10:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-04 10:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.287
2024-11-04 10:47 - INFO - 	 Best Recall for 0.4 precision: 0.595
2024-11-04 10:47 - INFO - ---------------------------------------------
2024-11-04 10:49 - INFO - ---------------------------------------------
2024-11-04 10:49 - INFO - Epoch: 09 | Time: 1m 58s
2024-11-04 10:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47314
2024-11-04 10:49 - INFO - 	 Train Loss: 0.120
2024-11-04 10:49 - INFO - 	 Val. Loss: 0.136
2024-11-04 10:49 - INFO - 	 ROC-AUC: 0.955
2024-11-04 10:49 - INFO - 	 PR-AUC: 0.473
2024-11-04 10:49 - INFO - 	 Recall for 0.4 precision: 0.784
2024-11-04 10:49 - INFO - 	 Best Val. Loss: 0.136
2024-11-04 10:49 - INFO - 	 Best ROC-AUC: 0.955
2024-11-04 10:49 - INFO - 	 Best PR-AUC: 0.473
2024-11-04 10:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-04 10:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.323
2024-11-04 10:49 - INFO - 	 Best Recall for 0.4 precision: 0.784
2024-11-04 10:49 - INFO - ---------------------------------------------
2024-11-04 10:51 - INFO - ---------------------------------------------
2024-11-04 10:51 - INFO - Epoch: 10 | Time: 1m 57s
2024-11-04 10:51 - INFO - 	 Train Loss: 0.112
2024-11-04 10:51 - INFO - 	 Val. Loss: 0.133
2024-11-04 10:51 - INFO - 	 ROC-AUC: 0.958
2024-11-04 10:51 - INFO - 	 PR-AUC: 0.473
2024-11-04 10:51 - INFO - 	 Recall for 0.4 precision: 0.803
2024-11-04 10:51 - INFO - 	 Best Val. Loss: 0.133
2024-11-04 10:51 - INFO - 	 Best ROC-AUC: 0.958
2024-11-04 10:51 - INFO - 	 Best PR-AUC: 0.473
2024-11-04 10:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-04 10:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.323
2024-11-04 10:51 - INFO - 	 Best Recall for 0.4 precision: 0.803
2024-11-04 10:51 - INFO - ---------------------------------------------
2024-11-04 10:54 - INFO - Fit the preprocessing pipeline
2024-11-04 10:54 - INFO - Training using device: mps
2024-11-04 10:54 - INFO - Creating generators
2024-11-04 10:54 - INFO - The model has 651,257 trainable parameters
2024-11-04 10:54 - INFO - * Model:
2024-11-04 10:54 - INFO - * -----------
2024-11-04 10:54 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 10:54 - INFO - * -----------
2024-11-04 10:54 - INFO - Evaluating model based on: aucpr
2024-11-04 10:54 - INFO - Training..

2024-11-04 10:55 - INFO - ---------------------------------------------
2024-11-04 10:55 - INFO - Epoch: 01 | Time: 1m 43s
2024-11-04 10:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10569
2024-11-04 10:55 - INFO - 	 Train Loss: 0.252
2024-11-04 10:55 - INFO - 	 Val. Loss: 0.277
2024-11-04 10:55 - INFO - 	 ROC-AUC: 0.679
2024-11-04 10:55 - INFO - 	 PR-AUC: 0.106
2024-11-04 10:55 - INFO - 	 Recall for 0.4 precision: 0.029
2024-11-04 10:55 - INFO - 	 Best Val. Loss: 0.277
2024-11-04 10:55 - INFO - 	 Best ROC-AUC: 0.679
2024-11-04 10:55 - INFO - 	 Best PR-AUC: 0.106
2024-11-04 10:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.685
2024-11-04 10:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.104
2024-11-04 10:55 - INFO - 	 Best Recall for 0.4 precision: 0.029
2024-11-04 10:55 - INFO - ---------------------------------------------
2024-11-04 10:57 - INFO - ---------------------------------------------
2024-11-04 10:57 - INFO - Epoch: 02 | Time: 1m 55s
2024-11-04 10:57 - INFO - 	 Train Loss: 0.201
2024-11-04 10:57 - INFO - 	 Val. Loss: 0.246
2024-11-04 10:57 - INFO - 	 ROC-AUC: 0.665
2024-11-04 10:57 - INFO - 	 PR-AUC: 0.083
2024-11-04 10:57 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 10:57 - INFO - 	 Best Val. Loss: 0.246
2024-11-04 10:57 - INFO - 	 Best ROC-AUC: 0.679
2024-11-04 10:57 - INFO - 	 Best PR-AUC: 0.106
2024-11-04 10:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.685
2024-11-04 10:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.104
2024-11-04 10:57 - INFO - 	 Best Recall for 0.4 precision: 0.029
2024-11-04 10:57 - INFO - ---------------------------------------------
2024-11-04 10:59 - INFO - ---------------------------------------------
2024-11-04 10:59 - INFO - Epoch: 03 | Time: 1m 56s
2024-11-04 10:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20265
2024-11-04 10:59 - INFO - 	 Train Loss: 0.190
2024-11-04 10:59 - INFO - 	 Val. Loss: 0.211
2024-11-04 10:59 - INFO - 	 ROC-AUC: 0.774
2024-11-04 10:59 - INFO - 	 PR-AUC: 0.203
2024-11-04 10:59 - INFO - 	 Recall for 0.4 precision: 0.119
2024-11-04 10:59 - INFO - 	 Best Val. Loss: 0.211
2024-11-04 10:59 - INFO - 	 Best ROC-AUC: 0.774
2024-11-04 10:59 - INFO - 	 Best PR-AUC: 0.203
2024-11-04 10:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-04 10:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 10:59 - INFO - 	 Best Recall for 0.4 precision: 0.119
2024-11-04 10:59 - INFO - ---------------------------------------------
2024-11-04 11:01 - INFO - ---------------------------------------------
2024-11-04 11:01 - INFO - Epoch: 04 | Time: 1m 56s
2024-11-04 11:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2616
2024-11-04 11:01 - INFO - 	 Train Loss: 0.173
2024-11-04 11:01 - INFO - 	 Val. Loss: 0.189
2024-11-04 11:01 - INFO - 	 ROC-AUC: 0.823
2024-11-04 11:01 - INFO - 	 PR-AUC: 0.262
2024-11-04 11:01 - INFO - 	 Recall for 0.4 precision: 0.172
2024-11-04 11:01 - INFO - 	 Best Val. Loss: 0.189
2024-11-04 11:01 - INFO - 	 Best ROC-AUC: 0.823
2024-11-04 11:01 - INFO - 	 Best PR-AUC: 0.262
2024-11-04 11:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.794
2024-11-04 11:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-04 11:01 - INFO - 	 Best Recall for 0.4 precision: 0.172
2024-11-04 11:01 - INFO - ---------------------------------------------
2024-11-04 11:03 - INFO - ---------------------------------------------
2024-11-04 11:03 - INFO - Epoch: 05 | Time: 1m 54s
2024-11-04 11:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35684
2024-11-04 11:03 - INFO - 	 Train Loss: 0.160
2024-11-04 11:03 - INFO - 	 Val. Loss: 0.169
2024-11-04 11:03 - INFO - 	 ROC-AUC: 0.895
2024-11-04 11:03 - INFO - 	 PR-AUC: 0.357
2024-11-04 11:03 - INFO - 	 Recall for 0.4 precision: 0.407
2024-11-04 11:03 - INFO - 	 Best Val. Loss: 0.169
2024-11-04 11:03 - INFO - 	 Best ROC-AUC: 0.895
2024-11-04 11:03 - INFO - 	 Best PR-AUC: 0.357
2024-11-04 11:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.848
2024-11-04 11:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.207
2024-11-04 11:03 - INFO - 	 Best Recall for 0.4 precision: 0.407
2024-11-04 11:03 - INFO - ---------------------------------------------
2024-11-04 11:05 - INFO - ---------------------------------------------
2024-11-04 11:05 - INFO - Epoch: 06 | Time: 1m 53s
2024-11-04 11:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36763
2024-11-04 11:05 - INFO - 	 Train Loss: 0.147
2024-11-04 11:05 - INFO - 	 Val. Loss: 0.210
2024-11-04 11:05 - INFO - 	 ROC-AUC: 0.906
2024-11-04 11:05 - INFO - 	 PR-AUC: 0.368
2024-11-04 11:05 - INFO - 	 Recall for 0.4 precision: 0.367
2024-11-04 11:05 - INFO - 	 Best Val. Loss: 0.169
2024-11-04 11:05 - INFO - 	 Best ROC-AUC: 0.906
2024-11-04 11:05 - INFO - 	 Best PR-AUC: 0.368
2024-11-04 11:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.862
2024-11-04 11:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.214
2024-11-04 11:05 - INFO - 	 Best Recall for 0.4 precision: 0.407
2024-11-04 11:05 - INFO - ---------------------------------------------
2024-11-04 11:07 - INFO - ---------------------------------------------
2024-11-04 11:07 - INFO - Epoch: 07 | Time: 1m 51s
2024-11-04 11:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55061
2024-11-04 11:07 - INFO - 	 Train Loss: 0.125
2024-11-04 11:07 - INFO - 	 Val. Loss: 0.111
2024-11-04 11:07 - INFO - 	 ROC-AUC: 0.957
2024-11-04 11:07 - INFO - 	 PR-AUC: 0.551
2024-11-04 11:07 - INFO - 	 Recall for 0.4 precision: 0.784
2024-11-04 11:07 - INFO - 	 Best Val. Loss: 0.111
2024-11-04 11:07 - INFO - 	 Best ROC-AUC: 0.957
2024-11-04 11:07 - INFO - 	 Best PR-AUC: 0.551
2024-11-04 11:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-04 11:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.327
2024-11-04 11:07 - INFO - 	 Best Recall for 0.4 precision: 0.784
2024-11-04 11:07 - INFO - ---------------------------------------------
2024-11-04 11:09 - INFO - ---------------------------------------------
2024-11-04 11:09 - INFO - Epoch: 08 | Time: 1m 51s
2024-11-04 11:09 - INFO - 	 Train Loss: 0.117
2024-11-04 11:09 - INFO - 	 Val. Loss: 0.202
2024-11-04 11:09 - INFO - 	 ROC-AUC: 0.926
2024-11-04 11:09 - INFO - 	 PR-AUC: 0.392
2024-11-04 11:09 - INFO - 	 Recall for 0.4 precision: 0.485
2024-11-04 11:09 - INFO - 	 Best Val. Loss: 0.111
2024-11-04 11:09 - INFO - 	 Best ROC-AUC: 0.957
2024-11-04 11:09 - INFO - 	 Best PR-AUC: 0.551
2024-11-04 11:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-04 11:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.327
2024-11-04 11:09 - INFO - 	 Best Recall for 0.4 precision: 0.784
2024-11-04 11:09 - INFO - ---------------------------------------------
2024-11-04 11:11 - INFO - ---------------------------------------------
2024-11-04 11:11 - INFO - Epoch: 09 | Time: 1m 52s
2024-11-04 11:11 - INFO - 	 Train Loss: 0.112
2024-11-04 11:11 - INFO - 	 Val. Loss: 0.110
2024-11-04 11:11 - INFO - 	 ROC-AUC: 0.955
2024-11-04 11:11 - INFO - 	 PR-AUC: 0.544
2024-11-04 11:11 - INFO - 	 Recall for 0.4 precision: 0.886
2024-11-04 11:11 - INFO - 	 Best Val. Loss: 0.110
2024-11-04 11:11 - INFO - 	 Best ROC-AUC: 0.957
2024-11-04 11:11 - INFO - 	 Best PR-AUC: 0.551
2024-11-04 11:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-04 11:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.327
2024-11-04 11:11 - INFO - 	 Best Recall for 0.4 precision: 0.886
2024-11-04 11:11 - INFO - ---------------------------------------------
2024-11-04 11:13 - INFO - ---------------------------------------------
2024-11-04 11:13 - INFO - Epoch: 10 | Time: 1m 51s
2024-11-04 11:13 - INFO - 	 Train Loss: 0.105
2024-11-04 11:13 - INFO - 	 Val. Loss: 0.204
2024-11-04 11:13 - INFO - 	 ROC-AUC: 0.902
2024-11-04 11:13 - INFO - 	 PR-AUC: 0.338
2024-11-04 11:13 - INFO - 	 Recall for 0.4 precision: 0.228
2024-11-04 11:13 - INFO - 	 Best Val. Loss: 0.110
2024-11-04 11:13 - INFO - 	 Best ROC-AUC: 0.957
2024-11-04 11:13 - INFO - 	 Best PR-AUC: 0.551
2024-11-04 11:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-04 11:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.327
2024-11-04 11:13 - INFO - 	 Best Recall for 0.4 precision: 0.886
2024-11-04 11:13 - INFO - ---------------------------------------------
2024-11-04 11:15 - INFO - Fit the preprocessing pipeline
2024-11-04 11:15 - INFO - Training using device: mps
2024-11-04 11:15 - INFO - Creating generators
2024-11-04 11:15 - INFO - The model has 651,257 trainable parameters
2024-11-04 11:15 - INFO - * Model:
2024-11-04 11:15 - INFO - * -----------
2024-11-04 11:15 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 11:15 - INFO - * -----------
2024-11-04 11:15 - INFO - Evaluating model based on: aucpr
2024-11-04 11:15 - INFO - Training..

2024-11-04 11:17 - INFO - ---------------------------------------------
2024-11-04 11:17 - INFO - Epoch: 01 | Time: 1m 40s
2024-11-04 11:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12254
2024-11-04 11:17 - INFO - 	 Train Loss: 0.253
2024-11-04 11:17 - INFO - 	 Val. Loss: 0.292
2024-11-04 11:17 - INFO - 	 ROC-AUC: 0.705
2024-11-04 11:17 - INFO - 	 PR-AUC: 0.123
2024-11-04 11:17 - INFO - 	 Recall for 0.4 precision: 0.018
2024-11-04 11:17 - INFO - 	 Best Val. Loss: 0.292
2024-11-04 11:17 - INFO - 	 Best ROC-AUC: 0.705
2024-11-04 11:17 - INFO - 	 Best PR-AUC: 0.123
2024-11-04 11:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.730
2024-11-04 11:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-04 11:17 - INFO - 	 Best Recall for 0.4 precision: 0.018
2024-11-04 11:17 - INFO - ---------------------------------------------
2024-11-04 11:19 - INFO - ---------------------------------------------
2024-11-04 11:19 - INFO - Epoch: 02 | Time: 1m 41s
2024-11-04 11:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16977
2024-11-04 11:19 - INFO - 	 Train Loss: 0.205
2024-11-04 11:19 - INFO - 	 Val. Loss: 0.220
2024-11-04 11:19 - INFO - 	 ROC-AUC: 0.769
2024-11-04 11:19 - INFO - 	 PR-AUC: 0.170
2024-11-04 11:19 - INFO - 	 Recall for 0.4 precision: 0.057
2024-11-04 11:19 - INFO - 	 Best Val. Loss: 0.220
2024-11-04 11:19 - INFO - 	 Best ROC-AUC: 0.769
2024-11-04 11:19 - INFO - 	 Best PR-AUC: 0.170
2024-11-04 11:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-04 11:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.130
2024-11-04 11:19 - INFO - 	 Best Recall for 0.4 precision: 0.057
2024-11-04 11:19 - INFO - ---------------------------------------------
2024-11-04 11:20 - INFO - ---------------------------------------------
2024-11-04 11:20 - INFO - Epoch: 03 | Time: 1m 46s
2024-11-04 11:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24103
2024-11-04 11:20 - INFO - 	 Train Loss: 0.185
2024-11-04 11:20 - INFO - 	 Val. Loss: 0.186
2024-11-04 11:20 - INFO - 	 ROC-AUC: 0.787
2024-11-04 11:20 - INFO - 	 PR-AUC: 0.241
2024-11-04 11:20 - INFO - 	 Recall for 0.4 precision: 0.189
2024-11-04 11:20 - INFO - 	 Best Val. Loss: 0.186
2024-11-04 11:20 - INFO - 	 Best ROC-AUC: 0.787
2024-11-04 11:20 - INFO - 	 Best PR-AUC: 0.241
2024-11-04 11:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-04 11:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-04 11:20 - INFO - 	 Best Recall for 0.4 precision: 0.189
2024-11-04 11:20 - INFO - ---------------------------------------------
2024-11-04 11:22 - INFO - ---------------------------------------------
2024-11-04 11:22 - INFO - Epoch: 04 | Time: 1m 49s
2024-11-04 11:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26458
2024-11-04 11:22 - INFO - 	 Train Loss: 0.171
2024-11-04 11:22 - INFO - 	 Val. Loss: 0.194
2024-11-04 11:22 - INFO - 	 ROC-AUC: 0.786
2024-11-04 11:22 - INFO - 	 PR-AUC: 0.265
2024-11-04 11:22 - INFO - 	 Recall for 0.4 precision: 0.195
2024-11-04 11:22 - INFO - 	 Best Val. Loss: 0.186
2024-11-04 11:22 - INFO - 	 Best ROC-AUC: 0.787
2024-11-04 11:22 - INFO - 	 Best PR-AUC: 0.265
2024-11-04 11:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-04 11:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-04 11:22 - INFO - 	 Best Recall for 0.4 precision: 0.195
2024-11-04 11:22 - INFO - ---------------------------------------------
2024-11-04 11:24 - INFO - ---------------------------------------------
2024-11-04 11:24 - INFO - Epoch: 05 | Time: 1m 51s
2024-11-04 11:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28401
2024-11-04 11:24 - INFO - 	 Train Loss: 0.162
2024-11-04 11:24 - INFO - 	 Val. Loss: 0.177
2024-11-04 11:24 - INFO - 	 ROC-AUC: 0.800
2024-11-04 11:24 - INFO - 	 PR-AUC: 0.284
2024-11-04 11:24 - INFO - 	 Recall for 0.4 precision: 0.218
2024-11-04 11:24 - INFO - 	 Best Val. Loss: 0.177
2024-11-04 11:24 - INFO - 	 Best ROC-AUC: 0.800
2024-11-04 11:24 - INFO - 	 Best PR-AUC: 0.284
2024-11-04 11:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.734
2024-11-04 11:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 11:24 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-04 11:24 - INFO - ---------------------------------------------
2024-11-04 11:26 - INFO - ---------------------------------------------
2024-11-04 11:26 - INFO - Epoch: 06 | Time: 1m 53s
2024-11-04 11:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28695
2024-11-04 11:26 - INFO - 	 Train Loss: 0.159
2024-11-04 11:26 - INFO - 	 Val. Loss: 0.172
2024-11-04 11:26 - INFO - 	 ROC-AUC: 0.815
2024-11-04 11:26 - INFO - 	 PR-AUC: 0.287
2024-11-04 11:26 - INFO - 	 Recall for 0.4 precision: 0.211
2024-11-04 11:26 - INFO - 	 Best Val. Loss: 0.172
2024-11-04 11:26 - INFO - 	 Best ROC-AUC: 0.815
2024-11-04 11:26 - INFO - 	 Best PR-AUC: 0.287
2024-11-04 11:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 11:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-04 11:26 - INFO - 	 Best Recall for 0.4 precision: 0.218
2024-11-04 11:26 - INFO - ---------------------------------------------
2024-11-04 11:28 - INFO - ---------------------------------------------
2024-11-04 11:28 - INFO - Epoch: 07 | Time: 1m 55s
2024-11-04 11:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37874
2024-11-04 11:28 - INFO - 	 Train Loss: 0.149
2024-11-04 11:28 - INFO - 	 Val. Loss: 0.160
2024-11-04 11:28 - INFO - 	 ROC-AUC: 0.901
2024-11-04 11:28 - INFO - 	 PR-AUC: 0.379
2024-11-04 11:28 - INFO - 	 Recall for 0.4 precision: 0.472
2024-11-04 11:28 - INFO - 	 Best Val. Loss: 0.160
2024-11-04 11:28 - INFO - 	 Best ROC-AUC: 0.901
2024-11-04 11:28 - INFO - 	 Best PR-AUC: 0.379
2024-11-04 11:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.850
2024-11-04 11:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.225
2024-11-04 11:28 - INFO - 	 Best Recall for 0.4 precision: 0.472
2024-11-04 11:28 - INFO - ---------------------------------------------
2024-11-04 11:30 - INFO - ---------------------------------------------
2024-11-04 11:30 - INFO - Epoch: 08 | Time: 1m 56s
2024-11-04 11:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4936
2024-11-04 11:30 - INFO - 	 Train Loss: 0.129
2024-11-04 11:30 - INFO - 	 Val. Loss: 0.121
2024-11-04 11:30 - INFO - 	 ROC-AUC: 0.960
2024-11-04 11:30 - INFO - 	 PR-AUC: 0.494
2024-11-04 11:30 - INFO - 	 Recall for 0.4 precision: 0.790
2024-11-04 11:30 - INFO - 	 Best Val. Loss: 0.121
2024-11-04 11:30 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 11:30 - INFO - 	 Best PR-AUC: 0.494
2024-11-04 11:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-04 11:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.319
2024-11-04 11:30 - INFO - 	 Best Recall for 0.4 precision: 0.790
2024-11-04 11:30 - INFO - ---------------------------------------------
2024-11-04 11:32 - INFO - ---------------------------------------------
2024-11-04 11:32 - INFO - Epoch: 09 | Time: 1m 56s
2024-11-04 11:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53548
2024-11-04 11:32 - INFO - 	 Train Loss: 0.117
2024-11-04 11:32 - INFO - 	 Val. Loss: 0.113
2024-11-04 11:32 - INFO - 	 ROC-AUC: 0.959
2024-11-04 11:32 - INFO - 	 PR-AUC: 0.535
2024-11-04 11:32 - INFO - 	 Recall for 0.4 precision: 0.852
2024-11-04 11:32 - INFO - 	 Best Val. Loss: 0.113
2024-11-04 11:32 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 11:32 - INFO - 	 Best PR-AUC: 0.535
2024-11-04 11:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-04 11:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.368
2024-11-04 11:32 - INFO - 	 Best Recall for 0.4 precision: 0.852
2024-11-04 11:32 - INFO - ---------------------------------------------
2024-11-04 11:34 - INFO - ---------------------------------------------
2024-11-04 11:34 - INFO - Epoch: 10 | Time: 1m 56s
2024-11-04 11:34 - INFO - 	 Train Loss: 0.114
2024-11-04 11:34 - INFO - 	 Val. Loss: 0.111
2024-11-04 11:34 - INFO - 	 ROC-AUC: 0.954
2024-11-04 11:34 - INFO - 	 PR-AUC: 0.515
2024-11-04 11:34 - INFO - 	 Recall for 0.4 precision: 0.836
2024-11-04 11:34 - INFO - 	 Best Val. Loss: 0.111
2024-11-04 11:34 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 11:34 - INFO - 	 Best PR-AUC: 0.535
2024-11-04 11:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-04 11:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.368
2024-11-04 11:34 - INFO - 	 Best Recall for 0.4 precision: 0.852
2024-11-04 11:34 - INFO - ---------------------------------------------
2024-11-04 11:36 - INFO - Fit the preprocessing pipeline
2024-11-04 11:36 - INFO - Training using device: mps
2024-11-04 11:36 - INFO - Creating generators
2024-11-04 11:36 - INFO - The model has 651,257 trainable parameters
2024-11-04 11:36 - INFO - * Model:
2024-11-04 11:36 - INFO - * -----------
2024-11-04 11:36 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 11:36 - INFO - * -----------
2024-11-04 11:36 - INFO - Evaluating model based on: aucpr
2024-11-04 11:36 - INFO - Training..

2024-11-04 11:38 - INFO - ---------------------------------------------
2024-11-04 11:38 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 11:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07921
2024-11-04 11:38 - INFO - 	 Train Loss: 0.256
2024-11-04 11:38 - INFO - 	 Val. Loss: 0.309
2024-11-04 11:38 - INFO - 	 ROC-AUC: 0.581
2024-11-04 11:38 - INFO - 	 PR-AUC: 0.079
2024-11-04 11:38 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 11:38 - INFO - 	 Best Val. Loss: 0.309
2024-11-04 11:38 - INFO - 	 Best ROC-AUC: 0.581
2024-11-04 11:38 - INFO - 	 Best PR-AUC: 0.079
2024-11-04 11:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.585
2024-11-04 11:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.089
2024-11-04 11:38 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-04 11:38 - INFO - ---------------------------------------------
2024-11-04 11:40 - INFO - ---------------------------------------------
2024-11-04 11:40 - INFO - Epoch: 02 | Time: 1m 54s
2024-11-04 11:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11707
2024-11-04 11:40 - INFO - 	 Train Loss: 0.208
2024-11-04 11:40 - INFO - 	 Val. Loss: 0.255
2024-11-04 11:40 - INFO - 	 ROC-AUC: 0.679
2024-11-04 11:40 - INFO - 	 PR-AUC: 0.117
2024-11-04 11:40 - INFO - 	 Recall for 0.4 precision: 0.029
2024-11-04 11:40 - INFO - 	 Best Val. Loss: 0.255
2024-11-04 11:40 - INFO - 	 Best ROC-AUC: 0.679
2024-11-04 11:40 - INFO - 	 Best PR-AUC: 0.117
2024-11-04 11:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.668
2024-11-04 11:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.113
2024-11-04 11:40 - INFO - 	 Best Recall for 0.4 precision: 0.029
2024-11-04 11:40 - INFO - ---------------------------------------------
2024-11-04 11:42 - INFO - ---------------------------------------------
2024-11-04 11:42 - INFO - Epoch: 03 | Time: 1m 59s
2024-11-04 11:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15193
2024-11-04 11:42 - INFO - 	 Train Loss: 0.190
2024-11-04 11:42 - INFO - 	 Val. Loss: 0.231
2024-11-04 11:42 - INFO - 	 ROC-AUC: 0.731
2024-11-04 11:42 - INFO - 	 PR-AUC: 0.152
2024-11-04 11:42 - INFO - 	 Recall for 0.4 precision: 0.039
2024-11-04 11:42 - INFO - 	 Best Val. Loss: 0.231
2024-11-04 11:42 - INFO - 	 Best ROC-AUC: 0.731
2024-11-04 11:42 - INFO - 	 Best PR-AUC: 0.152
2024-11-04 11:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-11-04 11:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.117
2024-11-04 11:42 - INFO - 	 Best Recall for 0.4 precision: 0.039
2024-11-04 11:42 - INFO - ---------------------------------------------
2024-11-04 11:44 - INFO - ---------------------------------------------
2024-11-04 11:44 - INFO - Epoch: 04 | Time: 2m 1s
2024-11-04 11:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20383
2024-11-04 11:44 - INFO - 	 Train Loss: 0.178
2024-11-04 11:44 - INFO - 	 Val. Loss: 0.198
2024-11-04 11:44 - INFO - 	 ROC-AUC: 0.779
2024-11-04 11:44 - INFO - 	 PR-AUC: 0.204
2024-11-04 11:44 - INFO - 	 Recall for 0.4 precision: 0.111
2024-11-04 11:44 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 11:44 - INFO - 	 Best ROC-AUC: 0.779
2024-11-04 11:44 - INFO - 	 Best PR-AUC: 0.204
2024-11-04 11:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.740
2024-11-04 11:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-04 11:44 - INFO - 	 Best Recall for 0.4 precision: 0.111
2024-11-04 11:44 - INFO - ---------------------------------------------
2024-11-04 11:46 - INFO - ---------------------------------------------
2024-11-04 11:46 - INFO - Epoch: 05 | Time: 2m 2s
2024-11-04 11:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25594
2024-11-04 11:46 - INFO - 	 Train Loss: 0.168
2024-11-04 11:46 - INFO - 	 Val. Loss: 0.187
2024-11-04 11:46 - INFO - 	 ROC-AUC: 0.812
2024-11-04 11:46 - INFO - 	 PR-AUC: 0.256
2024-11-04 11:46 - INFO - 	 Recall for 0.4 precision: 0.257
2024-11-04 11:46 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 11:46 - INFO - 	 Best ROC-AUC: 0.812
2024-11-04 11:46 - INFO - 	 Best PR-AUC: 0.256
2024-11-04 11:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-04 11:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 11:46 - INFO - 	 Best Recall for 0.4 precision: 0.257
2024-11-04 11:46 - INFO - ---------------------------------------------
2024-11-04 11:48 - INFO - ---------------------------------------------
2024-11-04 11:48 - INFO - Epoch: 06 | Time: 2m 3s
2024-11-04 11:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28027
2024-11-04 11:48 - INFO - 	 Train Loss: 0.162
2024-11-04 11:48 - INFO - 	 Val. Loss: 0.179
2024-11-04 11:48 - INFO - 	 ROC-AUC: 0.798
2024-11-04 11:48 - INFO - 	 PR-AUC: 0.280
2024-11-04 11:48 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-04 11:48 - INFO - 	 Best Val. Loss: 0.179
2024-11-04 11:48 - INFO - 	 Best ROC-AUC: 0.812
2024-11-04 11:48 - INFO - 	 Best PR-AUC: 0.280
2024-11-04 11:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-04 11:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-04 11:48 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 11:48 - INFO - ---------------------------------------------
2024-11-04 11:50 - INFO - ---------------------------------------------
2024-11-04 11:50 - INFO - Epoch: 07 | Time: 2m 3s
2024-11-04 11:50 - INFO - 	 Train Loss: 0.159
2024-11-04 11:50 - INFO - 	 Val. Loss: 0.177
2024-11-04 11:50 - INFO - 	 ROC-AUC: 0.813
2024-11-04 11:50 - INFO - 	 PR-AUC: 0.267
2024-11-04 11:50 - INFO - 	 Recall for 0.4 precision: 0.208
2024-11-04 11:50 - INFO - 	 Best Val. Loss: 0.177
2024-11-04 11:50 - INFO - 	 Best ROC-AUC: 0.813
2024-11-04 11:50 - INFO - 	 Best PR-AUC: 0.280
2024-11-04 11:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-04 11:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-04 11:50 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 11:50 - INFO - ---------------------------------------------
2024-11-04 11:52 - INFO - ---------------------------------------------
2024-11-04 11:52 - INFO - Epoch: 08 | Time: 2m 2s
2024-11-04 11:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35367
2024-11-04 11:52 - INFO - 	 Train Loss: 0.150
2024-11-04 11:52 - INFO - 	 Val. Loss: 0.151
2024-11-04 11:52 - INFO - 	 ROC-AUC: 0.911
2024-11-04 11:52 - INFO - 	 PR-AUC: 0.354
2024-11-04 11:52 - INFO - 	 Recall for 0.4 precision: 0.288
2024-11-04 11:52 - INFO - 	 Best Val. Loss: 0.151
2024-11-04 11:52 - INFO - 	 Best ROC-AUC: 0.911
2024-11-04 11:52 - INFO - 	 Best PR-AUC: 0.354
2024-11-04 11:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.848
2024-11-04 11:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.185
2024-11-04 11:52 - INFO - 	 Best Recall for 0.4 precision: 0.288
2024-11-04 11:52 - INFO - ---------------------------------------------
2024-11-04 11:54 - INFO - ---------------------------------------------
2024-11-04 11:54 - INFO - Epoch: 09 | Time: 2m 3s
2024-11-04 11:54 - INFO - 	 Train Loss: 0.130
2024-11-04 11:54 - INFO - 	 Val. Loss: 0.183
2024-11-04 11:54 - INFO - 	 ROC-AUC: 0.789
2024-11-04 11:54 - INFO - 	 PR-AUC: 0.171
2024-11-04 11:54 - INFO - 	 Recall for 0.4 precision: 0.029
2024-11-04 11:54 - INFO - 	 Best Val. Loss: 0.151
2024-11-04 11:54 - INFO - 	 Best ROC-AUC: 0.911
2024-11-04 11:54 - INFO - 	 Best PR-AUC: 0.354
2024-11-04 11:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.848
2024-11-04 11:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.185
2024-11-04 11:54 - INFO - 	 Best Recall for 0.4 precision: 0.288
2024-11-04 11:54 - INFO - ---------------------------------------------
2024-11-04 11:56 - INFO - ---------------------------------------------
2024-11-04 11:56 - INFO - Epoch: 10 | Time: 2m 1s
2024-11-04 11:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38773
2024-11-04 11:56 - INFO - 	 Train Loss: 0.118
2024-11-04 11:56 - INFO - 	 Val. Loss: 0.194
2024-11-04 11:56 - INFO - 	 ROC-AUC: 0.912
2024-11-04 11:56 - INFO - 	 PR-AUC: 0.388
2024-11-04 11:56 - INFO - 	 Recall for 0.4 precision: 0.522
2024-11-04 11:56 - INFO - 	 Best Val. Loss: 0.151
2024-11-04 11:56 - INFO - 	 Best ROC-AUC: 0.912
2024-11-04 11:56 - INFO - 	 Best PR-AUC: 0.388
2024-11-04 11:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.904
2024-11-04 11:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.288
2024-11-04 11:56 - INFO - 	 Best Recall for 0.4 precision: 0.522
2024-11-04 11:56 - INFO - ---------------------------------------------
2024-11-04 11:59 - INFO - Fit the preprocessing pipeline
2024-11-04 11:59 - INFO - Training using device: mps
2024-11-04 11:59 - INFO - Creating generators
2024-11-04 11:59 - INFO - The model has 651,257 trainable parameters
2024-11-04 11:59 - INFO - * Model:
2024-11-04 11:59 - INFO - * -----------
2024-11-04 11:59 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 11:59 - INFO - * -----------
2024-11-04 11:59 - INFO - Evaluating model based on: aucpr
2024-11-04 11:59 - INFO - Training..

2024-11-04 12:01 - INFO - ---------------------------------------------
2024-11-04 12:01 - INFO - Epoch: 01 | Time: 1m 46s
2024-11-04 12:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09424
2024-11-04 12:01 - INFO - 	 Train Loss: 0.252
2024-11-04 12:01 - INFO - 	 Val. Loss: 0.283
2024-11-04 12:01 - INFO - 	 ROC-AUC: 0.649
2024-11-04 12:01 - INFO - 	 PR-AUC: 0.094
2024-11-04 12:01 - INFO - 	 Recall for 0.4 precision: 0.016
2024-11-04 12:01 - INFO - 	 Best Val. Loss: 0.283
2024-11-04 12:01 - INFO - 	 Best ROC-AUC: 0.649
2024-11-04 12:01 - INFO - 	 Best PR-AUC: 0.094
2024-11-04 12:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.661
2024-11-04 12:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.096
2024-11-04 12:01 - INFO - 	 Best Recall for 0.4 precision: 0.016
2024-11-04 12:01 - INFO - ---------------------------------------------
2024-11-04 12:03 - INFO - ---------------------------------------------
2024-11-04 12:03 - INFO - Epoch: 02 | Time: 1m 58s
2024-11-04 12:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14305
2024-11-04 12:03 - INFO - 	 Train Loss: 0.205
2024-11-04 12:03 - INFO - 	 Val. Loss: 0.230
2024-11-04 12:03 - INFO - 	 ROC-AUC: 0.733
2024-11-04 12:03 - INFO - 	 PR-AUC: 0.143
2024-11-04 12:03 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 12:03 - INFO - 	 Best Val. Loss: 0.230
2024-11-04 12:03 - INFO - 	 Best ROC-AUC: 0.733
2024-11-04 12:03 - INFO - 	 Best PR-AUC: 0.143
2024-11-04 12:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-11-04 12:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.112
2024-11-04 12:03 - INFO - 	 Best Recall for 0.4 precision: 0.016
2024-11-04 12:03 - INFO - ---------------------------------------------
2024-11-04 12:05 - INFO - ---------------------------------------------
2024-11-04 12:05 - INFO - Epoch: 03 | Time: 2m 0s
2024-11-04 12:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25821
2024-11-04 12:05 - INFO - 	 Train Loss: 0.186
2024-11-04 12:05 - INFO - 	 Val. Loss: 0.199
2024-11-04 12:05 - INFO - 	 ROC-AUC: 0.797
2024-11-04 12:05 - INFO - 	 PR-AUC: 0.258
2024-11-04 12:05 - INFO - 	 Recall for 0.4 precision: 0.198
2024-11-04 12:05 - INFO - 	 Best Val. Loss: 0.199
2024-11-04 12:05 - INFO - 	 Best ROC-AUC: 0.797
2024-11-04 12:05 - INFO - 	 Best PR-AUC: 0.258
2024-11-04 12:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-04 12:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-04 12:05 - INFO - 	 Best Recall for 0.4 precision: 0.198
2024-11-04 12:05 - INFO - ---------------------------------------------
2024-11-04 12:07 - INFO - ---------------------------------------------
2024-11-04 12:07 - INFO - Epoch: 04 | Time: 2m 1s
2024-11-04 12:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27689
2024-11-04 12:07 - INFO - 	 Train Loss: 0.171
2024-11-04 12:07 - INFO - 	 Val. Loss: 0.190
2024-11-04 12:07 - INFO - 	 ROC-AUC: 0.799
2024-11-04 12:07 - INFO - 	 PR-AUC: 0.277
2024-11-04 12:07 - INFO - 	 Recall for 0.4 precision: 0.276
2024-11-04 12:07 - INFO - 	 Best Val. Loss: 0.190
2024-11-04 12:07 - INFO - 	 Best ROC-AUC: 0.799
2024-11-04 12:07 - INFO - 	 Best PR-AUC: 0.277
2024-11-04 12:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.756
2024-11-04 12:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-04 12:07 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-04 12:07 - INFO - ---------------------------------------------
2024-11-04 12:09 - INFO - ---------------------------------------------
2024-11-04 12:09 - INFO - Epoch: 05 | Time: 2m 1s
2024-11-04 12:09 - INFO - 	 Train Loss: 0.161
2024-11-04 12:09 - INFO - 	 Val. Loss: 0.164
2024-11-04 12:09 - INFO - 	 ROC-AUC: 0.863
2024-11-04 12:09 - INFO - 	 PR-AUC: 0.262
2024-11-04 12:09 - INFO - 	 Recall for 0.4 precision: 0.231
2024-11-04 12:09 - INFO - 	 Best Val. Loss: 0.164
2024-11-04 12:09 - INFO - 	 Best ROC-AUC: 0.863
2024-11-04 12:09 - INFO - 	 Best PR-AUC: 0.277
2024-11-04 12:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.814
2024-11-04 12:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-04 12:09 - INFO - 	 Best Recall for 0.4 precision: 0.276
2024-11-04 12:09 - INFO - ---------------------------------------------
2024-11-04 12:11 - INFO - ---------------------------------------------
2024-11-04 12:11 - INFO - Epoch: 06 | Time: 2m 1s
2024-11-04 12:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38578
2024-11-04 12:11 - INFO - 	 Train Loss: 0.147
2024-11-04 12:11 - INFO - 	 Val. Loss: 0.139
2024-11-04 12:11 - INFO - 	 ROC-AUC: 0.945
2024-11-04 12:11 - INFO - 	 PR-AUC: 0.386
2024-11-04 12:11 - INFO - 	 Recall for 0.4 precision: 0.598
2024-11-04 12:11 - INFO - 	 Best Val. Loss: 0.139
2024-11-04 12:11 - INFO - 	 Best ROC-AUC: 0.945
2024-11-04 12:11 - INFO - 	 Best PR-AUC: 0.386
2024-11-04 12:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-11-04 12:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.279
2024-11-04 12:11 - INFO - 	 Best Recall for 0.4 precision: 0.598
2024-11-04 12:11 - INFO - ---------------------------------------------
2024-11-04 12:13 - INFO - ---------------------------------------------
2024-11-04 12:13 - INFO - Epoch: 07 | Time: 2m 0s
2024-11-04 12:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48542
2024-11-04 12:13 - INFO - 	 Train Loss: 0.126
2024-11-04 12:13 - INFO - 	 Val. Loss: 0.117
2024-11-04 12:13 - INFO - 	 ROC-AUC: 0.959
2024-11-04 12:13 - INFO - 	 PR-AUC: 0.485
2024-11-04 12:13 - INFO - 	 Recall for 0.4 precision: 0.839
2024-11-04 12:13 - INFO - 	 Best Val. Loss: 0.117
2024-11-04 12:13 - INFO - 	 Best ROC-AUC: 0.959
2024-11-04 12:13 - INFO - 	 Best PR-AUC: 0.485
2024-11-04 12:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-04 12:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.375
2024-11-04 12:13 - INFO - 	 Best Recall for 0.4 precision: 0.839
2024-11-04 12:13 - INFO - ---------------------------------------------
2024-11-04 12:15 - INFO - ---------------------------------------------
2024-11-04 12:15 - INFO - Epoch: 08 | Time: 2m 0s
2024-11-04 12:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57783
2024-11-04 12:15 - INFO - 	 Train Loss: 0.120
2024-11-04 12:15 - INFO - 	 Val. Loss: 0.206
2024-11-04 12:15 - INFO - 	 ROC-AUC: 0.957
2024-11-04 12:15 - INFO - 	 PR-AUC: 0.578
2024-11-04 12:15 - INFO - 	 Recall for 0.4 precision: 0.875
2024-11-04 12:15 - INFO - 	 Best Val. Loss: 0.117
2024-11-04 12:15 - INFO - 	 Best ROC-AUC: 0.959
2024-11-04 12:15 - INFO - 	 Best PR-AUC: 0.578
2024-11-04 12:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-04 12:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.403
2024-11-04 12:15 - INFO - 	 Best Recall for 0.4 precision: 0.875
2024-11-04 12:15 - INFO - ---------------------------------------------
2024-11-04 12:17 - INFO - ---------------------------------------------
2024-11-04 12:17 - INFO - Epoch: 09 | Time: 1m 59s
2024-11-04 12:17 - INFO - 	 Train Loss: 0.114
2024-11-04 12:17 - INFO - 	 Val. Loss: 0.117
2024-11-04 12:17 - INFO - 	 ROC-AUC: 0.953
2024-11-04 12:17 - INFO - 	 PR-AUC: 0.519
2024-11-04 12:17 - INFO - 	 Recall for 0.4 precision: 0.800
2024-11-04 12:17 - INFO - 	 Best Val. Loss: 0.117
2024-11-04 12:17 - INFO - 	 Best ROC-AUC: 0.959
2024-11-04 12:17 - INFO - 	 Best PR-AUC: 0.578
2024-11-04 12:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-04 12:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.403
2024-11-04 12:17 - INFO - 	 Best Recall for 0.4 precision: 0.875
2024-11-04 12:17 - INFO - ---------------------------------------------
2024-11-04 12:19 - INFO - ---------------------------------------------
2024-11-04 12:19 - INFO - Epoch: 10 | Time: 1m 59s
2024-11-04 12:19 - INFO - 	 Train Loss: 0.108
2024-11-04 12:19 - INFO - 	 Val. Loss: 0.134
2024-11-04 12:19 - INFO - 	 ROC-AUC: 0.917
2024-11-04 12:19 - INFO - 	 PR-AUC: 0.523
2024-11-04 12:19 - INFO - 	 Recall for 0.4 precision: 0.758
2024-11-04 12:19 - INFO - 	 Best Val. Loss: 0.117
2024-11-04 12:19 - INFO - 	 Best ROC-AUC: 0.959
2024-11-04 12:19 - INFO - 	 Best PR-AUC: 0.578
2024-11-04 12:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-04 12:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.403
2024-11-04 12:19 - INFO - 	 Best Recall for 0.4 precision: 0.875
2024-11-04 12:19 - INFO - ---------------------------------------------
2024-11-04 12:22 - INFO - Fit the preprocessing pipeline
2024-11-04 12:22 - INFO - Training using device: mps
2024-11-04 12:22 - INFO - Creating generators
2024-11-04 12:22 - INFO - The model has 651,257 trainable parameters
2024-11-04 12:22 - INFO - * Model:
2024-11-04 12:22 - INFO - * -----------
2024-11-04 12:22 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 12:22 - INFO - * -----------
2024-11-04 12:22 - INFO - Evaluating model based on: aucpr
2024-11-04 12:22 - INFO - Training..

2024-11-04 12:24 - INFO - ---------------------------------------------
2024-11-04 12:24 - INFO - Epoch: 01 | Time: 1m 49s
2024-11-04 12:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05841
2024-11-04 12:24 - INFO - 	 Train Loss: 0.253
2024-11-04 12:24 - INFO - 	 Val. Loss: 0.316
2024-11-04 12:24 - INFO - 	 ROC-AUC: 0.540
2024-11-04 12:24 - INFO - 	 PR-AUC: 0.058
2024-11-04 12:24 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 12:24 - INFO - 	 Best Val. Loss: 0.316
2024-11-04 12:24 - INFO - 	 Best ROC-AUC: 0.540
2024-11-04 12:24 - INFO - 	 Best PR-AUC: 0.058
2024-11-04 12:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.560
2024-11-04 12:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.078
2024-11-04 12:24 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-04 12:24 - INFO - ---------------------------------------------
2024-11-04 12:26 - INFO - ---------------------------------------------
2024-11-04 12:26 - INFO - Epoch: 02 | Time: 2m 1s
2024-11-04 12:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09188
2024-11-04 12:26 - INFO - 	 Train Loss: 0.209
2024-11-04 12:26 - INFO - 	 Val. Loss: 0.280
2024-11-04 12:26 - INFO - 	 ROC-AUC: 0.634
2024-11-04 12:26 - INFO - 	 PR-AUC: 0.092
2024-11-04 12:26 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 12:26 - INFO - 	 Best Val. Loss: 0.280
2024-11-04 12:26 - INFO - 	 Best ROC-AUC: 0.634
2024-11-04 12:26 - INFO - 	 Best PR-AUC: 0.092
2024-11-04 12:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.660
2024-11-04 12:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.102
2024-11-04 12:26 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-04 12:26 - INFO - ---------------------------------------------
2024-11-04 12:28 - INFO - ---------------------------------------------
2024-11-04 12:28 - INFO - Epoch: 03 | Time: 2m 2s
2024-11-04 12:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09384
2024-11-04 12:28 - INFO - 	 Train Loss: 0.189
2024-11-04 12:28 - INFO - 	 Val. Loss: 0.241
2024-11-04 12:28 - INFO - 	 ROC-AUC: 0.655
2024-11-04 12:28 - INFO - 	 PR-AUC: 0.094
2024-11-04 12:28 - INFO - 	 Recall for 0.4 precision: 0.013
2024-11-04 12:28 - INFO - 	 Best Val. Loss: 0.241
2024-11-04 12:28 - INFO - 	 Best ROC-AUC: 0.655
2024-11-04 12:28 - INFO - 	 Best PR-AUC: 0.094
2024-11-04 12:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.656
2024-11-04 12:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.097
2024-11-04 12:28 - INFO - 	 Best Recall for 0.4 precision: 0.013
2024-11-04 12:28 - INFO - ---------------------------------------------
2024-11-04 12:30 - INFO - ---------------------------------------------
2024-11-04 12:30 - INFO - Epoch: 04 | Time: 2m 2s
2024-11-04 12:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11828
2024-11-04 12:30 - INFO - 	 Train Loss: 0.181
2024-11-04 12:30 - INFO - 	 Val. Loss: 0.233
2024-11-04 12:30 - INFO - 	 ROC-AUC: 0.650
2024-11-04 12:30 - INFO - 	 PR-AUC: 0.118
2024-11-04 12:30 - INFO - 	 Recall for 0.4 precision: 0.015
2024-11-04 12:30 - INFO - 	 Best Val. Loss: 0.233
2024-11-04 12:30 - INFO - 	 Best ROC-AUC: 0.655
2024-11-04 12:30 - INFO - 	 Best PR-AUC: 0.118
2024-11-04 12:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.656
2024-11-04 12:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.081
2024-11-04 12:30 - INFO - 	 Best Recall for 0.4 precision: 0.015
2024-11-04 12:30 - INFO - ---------------------------------------------
2024-11-04 12:32 - INFO - ---------------------------------------------
2024-11-04 12:32 - INFO - Epoch: 05 | Time: 2m 3s
2024-11-04 12:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21616
2024-11-04 12:32 - INFO - 	 Train Loss: 0.176
2024-11-04 12:32 - INFO - 	 Val. Loss: 0.208
2024-11-04 12:32 - INFO - 	 ROC-AUC: 0.727
2024-11-04 12:32 - INFO - 	 PR-AUC: 0.216
2024-11-04 12:32 - INFO - 	 Recall for 0.4 precision: 0.159
2024-11-04 12:32 - INFO - 	 Best Val. Loss: 0.208
2024-11-04 12:32 - INFO - 	 Best ROC-AUC: 0.727
2024-11-04 12:32 - INFO - 	 Best PR-AUC: 0.216
2024-11-04 12:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.671
2024-11-04 12:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.113
2024-11-04 12:32 - INFO - 	 Best Recall for 0.4 precision: 0.159
2024-11-04 12:32 - INFO - ---------------------------------------------
2024-11-04 12:34 - INFO - ---------------------------------------------
2024-11-04 12:34 - INFO - Epoch: 06 | Time: 2m 3s
2024-11-04 12:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22621
2024-11-04 12:34 - INFO - 	 Train Loss: 0.170
2024-11-04 12:34 - INFO - 	 Val. Loss: 0.199
2024-11-04 12:34 - INFO - 	 ROC-AUC: 0.752
2024-11-04 12:34 - INFO - 	 PR-AUC: 0.226
2024-11-04 12:34 - INFO - 	 Recall for 0.4 precision: 0.166
2024-11-04 12:34 - INFO - 	 Best Val. Loss: 0.199
2024-11-04 12:34 - INFO - 	 Best ROC-AUC: 0.752
2024-11-04 12:34 - INFO - 	 Best PR-AUC: 0.226
2024-11-04 12:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.683
2024-11-04 12:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.116
2024-11-04 12:34 - INFO - 	 Best Recall for 0.4 precision: 0.166
2024-11-04 12:34 - INFO - ---------------------------------------------
2024-11-04 12:36 - INFO - ---------------------------------------------
2024-11-04 12:36 - INFO - Epoch: 07 | Time: 2m 4s
2024-11-04 12:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23889
2024-11-04 12:36 - INFO - 	 Train Loss: 0.169
2024-11-04 12:36 - INFO - 	 Val. Loss: 0.191
2024-11-04 12:36 - INFO - 	 ROC-AUC: 0.783
2024-11-04 12:36 - INFO - 	 PR-AUC: 0.239
2024-11-04 12:36 - INFO - 	 Recall for 0.4 precision: 0.166
2024-11-04 12:36 - INFO - 	 Best Val. Loss: 0.191
2024-11-04 12:36 - INFO - 	 Best ROC-AUC: 0.783
2024-11-04 12:36 - INFO - 	 Best PR-AUC: 0.239
2024-11-04 12:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-11-04 12:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.128
2024-11-04 12:36 - INFO - 	 Best Recall for 0.4 precision: 0.166
2024-11-04 12:36 - INFO - ---------------------------------------------
2024-11-04 12:38 - INFO - ---------------------------------------------
2024-11-04 12:38 - INFO - Epoch: 08 | Time: 2m 4s
2024-11-04 12:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25308
2024-11-04 12:38 - INFO - 	 Train Loss: 0.165
2024-11-04 12:38 - INFO - 	 Val. Loss: 0.187
2024-11-04 12:38 - INFO - 	 ROC-AUC: 0.794
2024-11-04 12:38 - INFO - 	 PR-AUC: 0.253
2024-11-04 12:38 - INFO - 	 Recall for 0.4 precision: 0.208
2024-11-04 12:38 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 12:38 - INFO - 	 Best ROC-AUC: 0.794
2024-11-04 12:38 - INFO - 	 Best PR-AUC: 0.253
2024-11-04 12:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-04 12:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.132
2024-11-04 12:38 - INFO - 	 Best Recall for 0.4 precision: 0.208
2024-11-04 12:38 - INFO - ---------------------------------------------
2024-11-04 12:40 - INFO - ---------------------------------------------
2024-11-04 12:40 - INFO - Epoch: 09 | Time: 2m 4s
2024-11-04 12:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25692
2024-11-04 12:40 - INFO - 	 Train Loss: 0.162
2024-11-04 12:40 - INFO - 	 Val. Loss: 0.190
2024-11-04 12:40 - INFO - 	 ROC-AUC: 0.792
2024-11-04 12:40 - INFO - 	 PR-AUC: 0.257
2024-11-04 12:40 - INFO - 	 Recall for 0.4 precision: 0.211
2024-11-04 12:40 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 12:40 - INFO - 	 Best ROC-AUC: 0.794
2024-11-04 12:40 - INFO - 	 Best PR-AUC: 0.257
2024-11-04 12:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-04 12:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.132
2024-11-04 12:40 - INFO - 	 Best Recall for 0.4 precision: 0.211
2024-11-04 12:40 - INFO - ---------------------------------------------
2024-11-04 12:42 - INFO - ---------------------------------------------
2024-11-04 12:42 - INFO - Epoch: 10 | Time: 2m 4s
2024-11-04 12:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28225
2024-11-04 12:42 - INFO - 	 Train Loss: 0.160
2024-11-04 12:42 - INFO - 	 Val. Loss: 0.168
2024-11-04 12:42 - INFO - 	 ROC-AUC: 0.822
2024-11-04 12:42 - INFO - 	 PR-AUC: 0.282
2024-11-04 12:42 - INFO - 	 Recall for 0.4 precision: 0.293
2024-11-04 12:42 - INFO - 	 Best Val. Loss: 0.168
2024-11-04 12:42 - INFO - 	 Best ROC-AUC: 0.822
2024-11-04 12:42 - INFO - 	 Best PR-AUC: 0.282
2024-11-04 12:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-04 12:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-04 12:42 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-04 12:42 - INFO - ---------------------------------------------
2024-11-04 12:45 - INFO - Fit the preprocessing pipeline
2024-11-04 12:45 - INFO - Training using device: mps
2024-11-04 12:45 - INFO - Creating generators
2024-11-04 12:45 - INFO - The model has 651,257 trainable parameters
2024-11-04 12:45 - INFO - * Model:
2024-11-04 12:45 - INFO - * -----------
2024-11-04 12:45 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 12:45 - INFO - * -----------
2024-11-04 12:45 - INFO - Evaluating model based on: aucpr
2024-11-04 12:45 - INFO - Training..

2024-11-04 12:47 - INFO - ---------------------------------------------
2024-11-04 12:47 - INFO - Epoch: 01 | Time: 1m 50s
2024-11-04 12:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18753
2024-11-04 12:47 - INFO - 	 Train Loss: 0.252
2024-11-04 12:47 - INFO - 	 Val. Loss: 0.301
2024-11-04 12:47 - INFO - 	 ROC-AUC: 0.720
2024-11-04 12:47 - INFO - 	 PR-AUC: 0.188
2024-11-04 12:47 - INFO - 	 Recall for 0.4 precision: 0.124
2024-11-04 12:47 - INFO - 	 Best Val. Loss: 0.301
2024-11-04 12:47 - INFO - 	 Best ROC-AUC: 0.720
2024-11-04 12:47 - INFO - 	 Best PR-AUC: 0.188
2024-11-04 12:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.702
2024-11-04 12:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.118
2024-11-04 12:47 - INFO - 	 Best Recall for 0.4 precision: 0.124
2024-11-04 12:47 - INFO - ---------------------------------------------
2024-11-04 12:49 - INFO - ---------------------------------------------
2024-11-04 12:49 - INFO - Epoch: 02 | Time: 1m 58s
2024-11-04 12:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2156
2024-11-04 12:49 - INFO - 	 Train Loss: 0.207
2024-11-04 12:49 - INFO - 	 Val. Loss: 0.252
2024-11-04 12:49 - INFO - 	 ROC-AUC: 0.752
2024-11-04 12:49 - INFO - 	 PR-AUC: 0.216
2024-11-04 12:49 - INFO - 	 Recall for 0.4 precision: 0.146
2024-11-04 12:49 - INFO - 	 Best Val. Loss: 0.252
2024-11-04 12:49 - INFO - 	 Best ROC-AUC: 0.752
2024-11-04 12:49 - INFO - 	 Best PR-AUC: 0.216
2024-11-04 12:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.734
2024-11-04 12:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.126
2024-11-04 12:49 - INFO - 	 Best Recall for 0.4 precision: 0.146
2024-11-04 12:49 - INFO - ---------------------------------------------
2024-11-04 12:51 - INFO - ---------------------------------------------
2024-11-04 12:51 - INFO - Epoch: 03 | Time: 2m 0s
2024-11-04 12:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2348
2024-11-04 12:51 - INFO - 	 Train Loss: 0.183
2024-11-04 12:51 - INFO - 	 Val. Loss: 0.198
2024-11-04 12:51 - INFO - 	 ROC-AUC: 0.777
2024-11-04 12:51 - INFO - 	 PR-AUC: 0.235
2024-11-04 12:51 - INFO - 	 Recall for 0.4 precision: 0.133
2024-11-04 12:51 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 12:51 - INFO - 	 Best ROC-AUC: 0.777
2024-11-04 12:51 - INFO - 	 Best PR-AUC: 0.235
2024-11-04 12:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-11-04 12:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-04 12:51 - INFO - 	 Best Recall for 0.4 precision: 0.146
2024-11-04 12:51 - INFO - ---------------------------------------------
2024-11-04 12:53 - INFO - ---------------------------------------------
2024-11-04 12:53 - INFO - Epoch: 04 | Time: 2m 2s
2024-11-04 12:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27458
2024-11-04 12:53 - INFO - 	 Train Loss: 0.172
2024-11-04 12:53 - INFO - 	 Val. Loss: 0.191
2024-11-04 12:53 - INFO - 	 ROC-AUC: 0.787
2024-11-04 12:53 - INFO - 	 PR-AUC: 0.275
2024-11-04 12:53 - INFO - 	 Recall for 0.4 precision: 0.228
2024-11-04 12:53 - INFO - 	 Best Val. Loss: 0.191
2024-11-04 12:53 - INFO - 	 Best ROC-AUC: 0.787
2024-11-04 12:53 - INFO - 	 Best PR-AUC: 0.275
2024-11-04 12:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-04 12:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.165
2024-11-04 12:53 - INFO - 	 Best Recall for 0.4 precision: 0.228
2024-11-04 12:53 - INFO - ---------------------------------------------
2024-11-04 12:55 - INFO - ---------------------------------------------
2024-11-04 12:55 - INFO - Epoch: 05 | Time: 2m 3s
2024-11-04 12:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29474
2024-11-04 12:55 - INFO - 	 Train Loss: 0.164
2024-11-04 12:55 - INFO - 	 Val. Loss: 0.185
2024-11-04 12:55 - INFO - 	 ROC-AUC: 0.781
2024-11-04 12:55 - INFO - 	 PR-AUC: 0.295
2024-11-04 12:55 - INFO - 	 Recall for 0.4 precision: 0.247
2024-11-04 12:55 - INFO - 	 Best Val. Loss: 0.185
2024-11-04 12:55 - INFO - 	 Best ROC-AUC: 0.787
2024-11-04 12:55 - INFO - 	 Best PR-AUC: 0.295
2024-11-04 12:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-04 12:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.169
2024-11-04 12:55 - INFO - 	 Best Recall for 0.4 precision: 0.247
2024-11-04 12:55 - INFO - ---------------------------------------------
2024-11-04 12:57 - INFO - ---------------------------------------------
2024-11-04 12:57 - INFO - Epoch: 06 | Time: 2m 3s
2024-11-04 12:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35859
2024-11-04 12:57 - INFO - 	 Train Loss: 0.153
2024-11-04 12:57 - INFO - 	 Val. Loss: 0.167
2024-11-04 12:57 - INFO - 	 ROC-AUC: 0.875
2024-11-04 12:57 - INFO - 	 PR-AUC: 0.359
2024-11-04 12:57 - INFO - 	 Recall for 0.4 precision: 0.354
2024-11-04 12:57 - INFO - 	 Best Val. Loss: 0.167
2024-11-04 12:57 - INFO - 	 Best ROC-AUC: 0.875
2024-11-04 12:57 - INFO - 	 Best PR-AUC: 0.359
2024-11-04 12:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.833
2024-11-04 12:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.213
2024-11-04 12:57 - INFO - 	 Best Recall for 0.4 precision: 0.354
2024-11-04 12:57 - INFO - ---------------------------------------------
2024-11-04 12:59 - INFO - ---------------------------------------------
2024-11-04 12:59 - INFO - Epoch: 07 | Time: 2m 2s
2024-11-04 12:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40874
2024-11-04 12:59 - INFO - 	 Train Loss: 0.132
2024-11-04 12:59 - INFO - 	 Val. Loss: 0.133
2024-11-04 12:59 - INFO - 	 ROC-AUC: 0.917
2024-11-04 12:59 - INFO - 	 PR-AUC: 0.409
2024-11-04 12:59 - INFO - 	 Recall for 0.4 precision: 0.533
2024-11-04 12:59 - INFO - 	 Best Val. Loss: 0.133
2024-11-04 12:59 - INFO - 	 Best ROC-AUC: 0.917
2024-11-04 12:59 - INFO - 	 Best PR-AUC: 0.409
2024-11-04 12:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.890
2024-11-04 12:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.278
2024-11-04 12:59 - INFO - 	 Best Recall for 0.4 precision: 0.533
2024-11-04 12:59 - INFO - ---------------------------------------------
2024-11-04 13:01 - INFO - ---------------------------------------------
2024-11-04 13:01 - INFO - Epoch: 08 | Time: 2m 1s
2024-11-04 13:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50351
2024-11-04 13:01 - INFO - 	 Train Loss: 0.116
2024-11-04 13:01 - INFO - 	 Val. Loss: 0.112
2024-11-04 13:01 - INFO - 	 ROC-AUC: 0.960
2024-11-04 13:01 - INFO - 	 PR-AUC: 0.504
2024-11-04 13:01 - INFO - 	 Recall for 0.4 precision: 0.823
2024-11-04 13:01 - INFO - 	 Best Val. Loss: 0.112
2024-11-04 13:01 - INFO - 	 Best ROC-AUC: 0.960
2024-11-04 13:01 - INFO - 	 Best PR-AUC: 0.504
2024-11-04 13:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-04 13:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.363
2024-11-04 13:01 - INFO - 	 Best Recall for 0.4 precision: 0.823
2024-11-04 13:01 - INFO - ---------------------------------------------
2024-11-04 13:03 - INFO - ---------------------------------------------
2024-11-04 13:03 - INFO - Epoch: 09 | Time: 1m 59s
2024-11-04 13:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57339
2024-11-04 13:03 - INFO - 	 Train Loss: 0.111
2024-11-04 13:03 - INFO - 	 Val. Loss: 0.109
2024-11-04 13:03 - INFO - 	 ROC-AUC: 0.967
2024-11-04 13:03 - INFO - 	 PR-AUC: 0.573
2024-11-04 13:03 - INFO - 	 Recall for 0.4 precision: 0.893
2024-11-04 13:03 - INFO - 	 Best Val. Loss: 0.109
2024-11-04 13:03 - INFO - 	 Best ROC-AUC: 0.967
2024-11-04 13:03 - INFO - 	 Best PR-AUC: 0.573
2024-11-04 13:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-04 13:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.412
2024-11-04 13:03 - INFO - 	 Best Recall for 0.4 precision: 0.893
2024-11-04 13:03 - INFO - ---------------------------------------------
2024-11-04 13:05 - INFO - ---------------------------------------------
2024-11-04 13:05 - INFO - Epoch: 10 | Time: 1m 58s
2024-11-04 13:05 - INFO - 	 Train Loss: 0.109
2024-11-04 13:05 - INFO - 	 Val. Loss: 0.131
2024-11-04 13:05 - INFO - 	 ROC-AUC: 0.956
2024-11-04 13:05 - INFO - 	 PR-AUC: 0.458
2024-11-04 13:05 - INFO - 	 Recall for 0.4 precision: 0.722
2024-11-04 13:05 - INFO - 	 Best Val. Loss: 0.109
2024-11-04 13:05 - INFO - 	 Best ROC-AUC: 0.967
2024-11-04 13:05 - INFO - 	 Best PR-AUC: 0.573
2024-11-04 13:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-04 13:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.412
2024-11-04 13:05 - INFO - 	 Best Recall for 0.4 precision: 0.893
2024-11-04 13:05 - INFO - ---------------------------------------------
2024-11-04 13:08 - INFO - Fit the preprocessing pipeline
2024-11-04 13:08 - INFO - Training using device: mps
2024-11-04 13:08 - INFO - Creating generators
2024-11-04 13:08 - INFO - The model has 651,257 trainable parameters
2024-11-04 13:08 - INFO - * Model:
2024-11-04 13:08 - INFO - * -----------
2024-11-04 13:08 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 13:08 - INFO - * -----------
2024-11-04 13:08 - INFO - Evaluating model based on: aucpr
2024-11-04 13:08 - INFO - Training..

2024-11-04 13:09 - INFO - ---------------------------------------------
2024-11-04 13:09 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 13:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08159
2024-11-04 13:09 - INFO - 	 Train Loss: 0.257
2024-11-04 13:09 - INFO - 	 Val. Loss: 0.299
2024-11-04 13:09 - INFO - 	 ROC-AUC: 0.637
2024-11-04 13:09 - INFO - 	 PR-AUC: 0.082
2024-11-04 13:09 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 13:09 - INFO - 	 Best Val. Loss: 0.299
2024-11-04 13:09 - INFO - 	 Best ROC-AUC: 0.637
2024-11-04 13:09 - INFO - 	 Best PR-AUC: 0.082
2024-11-04 13:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.656
2024-11-04 13:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.097
2024-11-04 13:09 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-04 13:09 - INFO - ---------------------------------------------
2024-11-04 13:11 - INFO - ---------------------------------------------
2024-11-04 13:11 - INFO - Epoch: 02 | Time: 1m 52s
2024-11-04 13:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15084
2024-11-04 13:11 - INFO - 	 Train Loss: 0.205
2024-11-04 13:11 - INFO - 	 Val. Loss: 0.269
2024-11-04 13:11 - INFO - 	 ROC-AUC: 0.731
2024-11-04 13:11 - INFO - 	 PR-AUC: 0.151
2024-11-04 13:11 - INFO - 	 Recall for 0.4 precision: 0.042
2024-11-04 13:11 - INFO - 	 Best Val. Loss: 0.269
2024-11-04 13:11 - INFO - 	 Best ROC-AUC: 0.731
2024-11-04 13:11 - INFO - 	 Best PR-AUC: 0.151
2024-11-04 13:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.729
2024-11-04 13:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-04 13:11 - INFO - 	 Best Recall for 0.4 precision: 0.042
2024-11-04 13:11 - INFO - ---------------------------------------------
2024-11-04 13:13 - INFO - ---------------------------------------------
2024-11-04 13:13 - INFO - Epoch: 03 | Time: 1m 53s
2024-11-04 13:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2326
2024-11-04 13:13 - INFO - 	 Train Loss: 0.185
2024-11-04 13:13 - INFO - 	 Val. Loss: 0.203
2024-11-04 13:13 - INFO - 	 ROC-AUC: 0.778
2024-11-04 13:13 - INFO - 	 PR-AUC: 0.233
2024-11-04 13:13 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-04 13:13 - INFO - 	 Best Val. Loss: 0.203
2024-11-04 13:13 - INFO - 	 Best ROC-AUC: 0.778
2024-11-04 13:13 - INFO - 	 Best PR-AUC: 0.233
2024-11-04 13:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.728
2024-11-04 13:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-04 13:13 - INFO - 	 Best Recall for 0.4 precision: 0.244
2024-11-04 13:13 - INFO - ---------------------------------------------
2024-11-04 13:15 - INFO - ---------------------------------------------
2024-11-04 13:15 - INFO - Epoch: 04 | Time: 1m 53s
2024-11-04 13:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23769
2024-11-04 13:15 - INFO - 	 Train Loss: 0.174
2024-11-04 13:15 - INFO - 	 Val. Loss: 0.199
2024-11-04 13:15 - INFO - 	 ROC-AUC: 0.790
2024-11-04 13:15 - INFO - 	 PR-AUC: 0.238
2024-11-04 13:15 - INFO - 	 Recall for 0.4 precision: 0.202
2024-11-04 13:15 - INFO - 	 Best Val. Loss: 0.199
2024-11-04 13:15 - INFO - 	 Best ROC-AUC: 0.790
2024-11-04 13:15 - INFO - 	 Best PR-AUC: 0.238
2024-11-04 13:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.733
2024-11-04 13:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.126
2024-11-04 13:15 - INFO - 	 Best Recall for 0.4 precision: 0.244
2024-11-04 13:15 - INFO - ---------------------------------------------
2024-11-04 13:17 - INFO - ---------------------------------------------
2024-11-04 13:17 - INFO - Epoch: 05 | Time: 1m 55s
2024-11-04 13:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27978
2024-11-04 13:17 - INFO - 	 Train Loss: 0.166
2024-11-04 13:17 - INFO - 	 Val. Loss: 0.181
2024-11-04 13:17 - INFO - 	 ROC-AUC: 0.801
2024-11-04 13:17 - INFO - 	 PR-AUC: 0.280
2024-11-04 13:17 - INFO - 	 Recall for 0.4 precision: 0.293
2024-11-04 13:17 - INFO - 	 Best Val. Loss: 0.181
2024-11-04 13:17 - INFO - 	 Best ROC-AUC: 0.801
2024-11-04 13:17 - INFO - 	 Best PR-AUC: 0.280
2024-11-04 13:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.739
2024-11-04 13:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-04 13:17 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-04 13:17 - INFO - ---------------------------------------------
2024-11-04 13:19 - INFO - ---------------------------------------------
2024-11-04 13:19 - INFO - Epoch: 06 | Time: 1m 57s
2024-11-04 13:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30388
2024-11-04 13:19 - INFO - 	 Train Loss: 0.160
2024-11-04 13:19 - INFO - 	 Val. Loss: 0.174
2024-11-04 13:19 - INFO - 	 ROC-AUC: 0.810
2024-11-04 13:19 - INFO - 	 PR-AUC: 0.304
2024-11-04 13:19 - INFO - 	 Recall for 0.4 precision: 0.263
2024-11-04 13:19 - INFO - 	 Best Val. Loss: 0.174
2024-11-04 13:19 - INFO - 	 Best ROC-AUC: 0.810
2024-11-04 13:19 - INFO - 	 Best PR-AUC: 0.304
2024-11-04 13:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.734
2024-11-04 13:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-04 13:19 - INFO - 	 Best Recall for 0.4 precision: 0.293
2024-11-04 13:19 - INFO - ---------------------------------------------
2024-11-04 13:21 - INFO - ---------------------------------------------
2024-11-04 13:21 - INFO - Epoch: 07 | Time: 1m 59s
2024-11-04 13:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37235
2024-11-04 13:21 - INFO - 	 Train Loss: 0.154
2024-11-04 13:21 - INFO - 	 Val. Loss: 0.156
2024-11-04 13:21 - INFO - 	 ROC-AUC: 0.880
2024-11-04 13:21 - INFO - 	 PR-AUC: 0.372
2024-11-04 13:21 - INFO - 	 Recall for 0.4 precision: 0.410
2024-11-04 13:21 - INFO - 	 Best Val. Loss: 0.156
2024-11-04 13:21 - INFO - 	 Best ROC-AUC: 0.880
2024-11-04 13:21 - INFO - 	 Best PR-AUC: 0.372
2024-11-04 13:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.817
2024-11-04 13:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.193
2024-11-04 13:21 - INFO - 	 Best Recall for 0.4 precision: 0.410
2024-11-04 13:21 - INFO - ---------------------------------------------
2024-11-04 13:23 - INFO - ---------------------------------------------
2024-11-04 13:23 - INFO - Epoch: 08 | Time: 2m 0s
2024-11-04 13:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53672
2024-11-04 13:23 - INFO - 	 Train Loss: 0.139
2024-11-04 13:23 - INFO - 	 Val. Loss: 0.124
2024-11-04 13:23 - INFO - 	 ROC-AUC: 0.953
2024-11-04 13:23 - INFO - 	 PR-AUC: 0.537
2024-11-04 13:23 - INFO - 	 Recall for 0.4 precision: 0.820
2024-11-04 13:23 - INFO - 	 Best Val. Loss: 0.124
2024-11-04 13:23 - INFO - 	 Best ROC-AUC: 0.953
2024-11-04 13:23 - INFO - 	 Best PR-AUC: 0.537
2024-11-04 13:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-04 13:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.328
2024-11-04 13:23 - INFO - 	 Best Recall for 0.4 precision: 0.820
2024-11-04 13:23 - INFO - ---------------------------------------------
2024-11-04 13:25 - INFO - ---------------------------------------------
2024-11-04 13:25 - INFO - Epoch: 09 | Time: 2m 0s
2024-11-04 13:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57518
2024-11-04 13:25 - INFO - 	 Train Loss: 0.121
2024-11-04 13:25 - INFO - 	 Val. Loss: 0.105
2024-11-04 13:25 - INFO - 	 ROC-AUC: 0.948
2024-11-04 13:25 - INFO - 	 PR-AUC: 0.575
2024-11-04 13:25 - INFO - 	 Recall for 0.4 precision: 0.883
2024-11-04 13:25 - INFO - 	 Best Val. Loss: 0.105
2024-11-04 13:25 - INFO - 	 Best ROC-AUC: 0.953
2024-11-04 13:25 - INFO - 	 Best PR-AUC: 0.575
2024-11-04 13:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-04 13:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.350
2024-11-04 13:25 - INFO - 	 Best Recall for 0.4 precision: 0.883
2024-11-04 13:25 - INFO - ---------------------------------------------
2024-11-04 13:27 - INFO - ---------------------------------------------
2024-11-04 13:27 - INFO - Epoch: 10 | Time: 2m 0s
2024-11-04 13:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61697
2024-11-04 13:27 - INFO - 	 Train Loss: 0.113
2024-11-04 13:27 - INFO - 	 Val. Loss: 0.090
2024-11-04 13:27 - INFO - 	 ROC-AUC: 0.968
2024-11-04 13:27 - INFO - 	 PR-AUC: 0.617
2024-11-04 13:27 - INFO - 	 Recall for 0.4 precision: 0.919
2024-11-04 13:27 - INFO - 	 Best Val. Loss: 0.090
2024-11-04 13:27 - INFO - 	 Best ROC-AUC: 0.968
2024-11-04 13:27 - INFO - 	 Best PR-AUC: 0.617
2024-11-04 13:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-04 13:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.376
2024-11-04 13:27 - INFO - 	 Best Recall for 0.4 precision: 0.919
2024-11-04 13:27 - INFO - ---------------------------------------------
2024-11-04 13:30 - INFO - Fit the preprocessing pipeline
2024-11-04 13:30 - INFO - Training using device: mps
2024-11-04 13:30 - INFO - Creating generators
2024-11-04 13:30 - INFO - The model has 651,257 trainable parameters
2024-11-04 13:30 - INFO - * Model:
2024-11-04 13:30 - INFO - * -----------
2024-11-04 13:30 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 13:30 - INFO - * -----------
2024-11-04 13:30 - INFO - Evaluating model based on: aucpr
2024-11-04 13:30 - INFO - Training..

2024-11-04 13:31 - INFO - ---------------------------------------------
2024-11-04 13:31 - INFO - Epoch: 01 | Time: 1m 47s
2024-11-04 13:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17655
2024-11-04 13:31 - INFO - 	 Train Loss: 0.249
2024-11-04 13:31 - INFO - 	 Val. Loss: 0.283
2024-11-04 13:31 - INFO - 	 ROC-AUC: 0.744
2024-11-04 13:31 - INFO - 	 PR-AUC: 0.177
2024-11-04 13:31 - INFO - 	 Recall for 0.4 precision: 0.094
2024-11-04 13:31 - INFO - 	 Best Val. Loss: 0.283
2024-11-04 13:31 - INFO - 	 Best ROC-AUC: 0.744
2024-11-04 13:31 - INFO - 	 Best PR-AUC: 0.177
2024-11-04 13:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.700
2024-11-04 13:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.102
2024-11-04 13:31 - INFO - 	 Best Recall for 0.4 precision: 0.094
2024-11-04 13:31 - INFO - ---------------------------------------------
2024-11-04 13:33 - INFO - ---------------------------------------------
2024-11-04 13:33 - INFO - Epoch: 02 | Time: 1m 55s
2024-11-04 13:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22296
2024-11-04 13:33 - INFO - 	 Train Loss: 0.205
2024-11-04 13:33 - INFO - 	 Val. Loss: 0.237
2024-11-04 13:33 - INFO - 	 ROC-AUC: 0.766
2024-11-04 13:33 - INFO - 	 PR-AUC: 0.223
2024-11-04 13:33 - INFO - 	 Recall for 0.4 precision: 0.156
2024-11-04 13:33 - INFO - 	 Best Val. Loss: 0.237
2024-11-04 13:33 - INFO - 	 Best ROC-AUC: 0.766
2024-11-04 13:33 - INFO - 	 Best PR-AUC: 0.223
2024-11-04 13:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-04 13:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-04 13:33 - INFO - 	 Best Recall for 0.4 precision: 0.156
2024-11-04 13:33 - INFO - ---------------------------------------------
2024-11-04 13:35 - INFO - ---------------------------------------------
2024-11-04 13:35 - INFO - Epoch: 03 | Time: 1m 55s
2024-11-04 13:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25944
2024-11-04 13:35 - INFO - 	 Train Loss: 0.185
2024-11-04 13:35 - INFO - 	 Val. Loss: 0.203
2024-11-04 13:35 - INFO - 	 ROC-AUC: 0.773
2024-11-04 13:35 - INFO - 	 PR-AUC: 0.259
2024-11-04 13:35 - INFO - 	 Recall for 0.4 precision: 0.224
2024-11-04 13:35 - INFO - 	 Best Val. Loss: 0.203
2024-11-04 13:35 - INFO - 	 Best ROC-AUC: 0.773
2024-11-04 13:35 - INFO - 	 Best PR-AUC: 0.259
2024-11-04 13:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.723
2024-11-04 13:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-04 13:35 - INFO - 	 Best Recall for 0.4 precision: 0.224
2024-11-04 13:35 - INFO - ---------------------------------------------
2024-11-04 13:37 - INFO - ---------------------------------------------
2024-11-04 13:37 - INFO - Epoch: 04 | Time: 1m 56s
2024-11-04 13:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27771
2024-11-04 13:37 - INFO - 	 Train Loss: 0.170
2024-11-04 13:37 - INFO - 	 Val. Loss: 0.193
2024-11-04 13:37 - INFO - 	 ROC-AUC: 0.780
2024-11-04 13:37 - INFO - 	 PR-AUC: 0.278
2024-11-04 13:37 - INFO - 	 Recall for 0.4 precision: 0.273
2024-11-04 13:37 - INFO - 	 Best Val. Loss: 0.193
2024-11-04 13:37 - INFO - 	 Best ROC-AUC: 0.780
2024-11-04 13:37 - INFO - 	 Best PR-AUC: 0.278
2024-11-04 13:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.732
2024-11-04 13:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 13:37 - INFO - 	 Best Recall for 0.4 precision: 0.273
2024-11-04 13:37 - INFO - ---------------------------------------------
2024-11-04 13:39 - INFO - ---------------------------------------------
2024-11-04 13:39 - INFO - Epoch: 05 | Time: 1m 54s
2024-11-04 13:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30203
2024-11-04 13:39 - INFO - 	 Train Loss: 0.167
2024-11-04 13:39 - INFO - 	 Val. Loss: 0.193
2024-11-04 13:39 - INFO - 	 ROC-AUC: 0.799
2024-11-04 13:39 - INFO - 	 PR-AUC: 0.302
2024-11-04 13:39 - INFO - 	 Recall for 0.4 precision: 0.255
2024-11-04 13:39 - INFO - 	 Best Val. Loss: 0.193
2024-11-04 13:39 - INFO - 	 Best ROC-AUC: 0.799
2024-11-04 13:39 - INFO - 	 Best PR-AUC: 0.302
2024-11-04 13:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 13:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-04 13:39 - INFO - 	 Best Recall for 0.4 precision: 0.273
2024-11-04 13:39 - INFO - ---------------------------------------------
2024-11-04 13:41 - INFO - ---------------------------------------------
2024-11-04 13:41 - INFO - Epoch: 06 | Time: 1m 54s
2024-11-04 13:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30296
2024-11-04 13:41 - INFO - 	 Train Loss: 0.160
2024-11-04 13:41 - INFO - 	 Val. Loss: 0.178
2024-11-04 13:41 - INFO - 	 ROC-AUC: 0.783
2024-11-04 13:41 - INFO - 	 PR-AUC: 0.303
2024-11-04 13:41 - INFO - 	 Recall for 0.4 precision: 0.304
2024-11-04 13:41 - INFO - 	 Best Val. Loss: 0.178
2024-11-04 13:41 - INFO - 	 Best ROC-AUC: 0.799
2024-11-04 13:41 - INFO - 	 Best PR-AUC: 0.303
2024-11-04 13:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 13:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 13:41 - INFO - 	 Best Recall for 0.4 precision: 0.304
2024-11-04 13:41 - INFO - ---------------------------------------------
2024-11-04 13:43 - INFO - ---------------------------------------------
2024-11-04 13:43 - INFO - Epoch: 07 | Time: 1m 55s
2024-11-04 13:43 - INFO - 	 Train Loss: 0.156
2024-11-04 13:43 - INFO - 	 Val. Loss: 0.174
2024-11-04 13:43 - INFO - 	 ROC-AUC: 0.799
2024-11-04 13:43 - INFO - 	 PR-AUC: 0.285
2024-11-04 13:43 - INFO - 	 Recall for 0.4 precision: 0.185
2024-11-04 13:43 - INFO - 	 Best Val. Loss: 0.174
2024-11-04 13:43 - INFO - 	 Best ROC-AUC: 0.799
2024-11-04 13:43 - INFO - 	 Best PR-AUC: 0.303
2024-11-04 13:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.751
2024-11-04 13:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 13:43 - INFO - 	 Best Recall for 0.4 precision: 0.304
2024-11-04 13:43 - INFO - ---------------------------------------------
2024-11-04 13:45 - INFO - ---------------------------------------------
2024-11-04 13:45 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-04 13:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30927
2024-11-04 13:45 - INFO - 	 Train Loss: 0.154
2024-11-04 13:45 - INFO - 	 Val. Loss: 0.168
2024-11-04 13:45 - INFO - 	 ROC-AUC: 0.809
2024-11-04 13:45 - INFO - 	 PR-AUC: 0.309
2024-11-04 13:45 - INFO - 	 Recall for 0.4 precision: 0.322
2024-11-04 13:45 - INFO - 	 Best Val. Loss: 0.168
2024-11-04 13:45 - INFO - 	 Best ROC-AUC: 0.809
2024-11-04 13:45 - INFO - 	 Best PR-AUC: 0.309
2024-11-04 13:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-04 13:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.166
2024-11-04 13:45 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-04 13:45 - INFO - ---------------------------------------------
2024-11-04 13:47 - INFO - ---------------------------------------------
2024-11-04 13:47 - INFO - Epoch: 09 | Time: 1m 55s
2024-11-04 13:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32424
2024-11-04 13:47 - INFO - 	 Train Loss: 0.152
2024-11-04 13:47 - INFO - 	 Val. Loss: 0.164
2024-11-04 13:47 - INFO - 	 ROC-AUC: 0.837
2024-11-04 13:47 - INFO - 	 PR-AUC: 0.324
2024-11-04 13:47 - INFO - 	 Recall for 0.4 precision: 0.281
2024-11-04 13:47 - INFO - 	 Best Val. Loss: 0.164
2024-11-04 13:47 - INFO - 	 Best ROC-AUC: 0.837
2024-11-04 13:47 - INFO - 	 Best PR-AUC: 0.324
2024-11-04 13:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-04 13:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.202
2024-11-04 13:47 - INFO - 	 Best Recall for 0.4 precision: 0.322
2024-11-04 13:47 - INFO - ---------------------------------------------
2024-11-04 13:49 - INFO - ---------------------------------------------
2024-11-04 13:49 - INFO - Epoch: 10 | Time: 1m 53s
2024-11-04 13:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40883
2024-11-04 13:49 - INFO - 	 Train Loss: 0.141
2024-11-04 13:49 - INFO - 	 Val. Loss: 0.141
2024-11-04 13:49 - INFO - 	 ROC-AUC: 0.940
2024-11-04 13:49 - INFO - 	 PR-AUC: 0.409
2024-11-04 13:49 - INFO - 	 Recall for 0.4 precision: 0.537
2024-11-04 13:49 - INFO - 	 Best Val. Loss: 0.141
2024-11-04 13:49 - INFO - 	 Best ROC-AUC: 0.940
2024-11-04 13:49 - INFO - 	 Best PR-AUC: 0.409
2024-11-04 13:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-04 13:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.308
2024-11-04 13:49 - INFO - 	 Best Recall for 0.4 precision: 0.537
2024-11-04 13:49 - INFO - ---------------------------------------------
2024-11-04 13:51 - INFO - Fit the preprocessing pipeline
2024-11-04 13:51 - INFO - Training using device: mps
2024-11-04 13:51 - INFO - Creating generators
2024-11-04 13:51 - INFO - The model has 651,257 trainable parameters
2024-11-04 13:51 - INFO - * Model:
2024-11-04 13:51 - INFO - * -----------
2024-11-04 13:51 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 13:51 - INFO - * -----------
2024-11-04 13:51 - INFO - Evaluating model based on: aucpr
2024-11-04 13:51 - INFO - Training..

2024-11-04 13:53 - INFO - ---------------------------------------------
2024-11-04 13:53 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 13:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1232
2024-11-04 13:53 - INFO - 	 Train Loss: 0.253
2024-11-04 13:53 - INFO - 	 Val. Loss: 0.292
2024-11-04 13:53 - INFO - 	 ROC-AUC: 0.694
2024-11-04 13:53 - INFO - 	 PR-AUC: 0.123
2024-11-04 13:53 - INFO - 	 Recall for 0.4 precision: 0.020
2024-11-04 13:53 - INFO - 	 Best Val. Loss: 0.292
2024-11-04 13:53 - INFO - 	 Best ROC-AUC: 0.694
2024-11-04 13:53 - INFO - 	 Best PR-AUC: 0.123
2024-11-04 13:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.678
2024-11-04 13:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.097
2024-11-04 13:53 - INFO - 	 Best Recall for 0.4 precision: 0.020
2024-11-04 13:53 - INFO - ---------------------------------------------
2024-11-04 13:55 - INFO - ---------------------------------------------
2024-11-04 13:55 - INFO - Epoch: 02 | Time: 1m 46s
2024-11-04 13:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20235
2024-11-04 13:55 - INFO - 	 Train Loss: 0.208
2024-11-04 13:55 - INFO - 	 Val. Loss: 0.244
2024-11-04 13:55 - INFO - 	 ROC-AUC: 0.774
2024-11-04 13:55 - INFO - 	 PR-AUC: 0.202
2024-11-04 13:55 - INFO - 	 Recall for 0.4 precision: 0.098
2024-11-04 13:55 - INFO - 	 Best Val. Loss: 0.244
2024-11-04 13:55 - INFO - 	 Best ROC-AUC: 0.774
2024-11-04 13:55 - INFO - 	 Best PR-AUC: 0.202
2024-11-04 13:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.731
2024-11-04 13:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-04 13:55 - INFO - 	 Best Recall for 0.4 precision: 0.098
2024-11-04 13:55 - INFO - ---------------------------------------------
2024-11-04 13:57 - INFO - ---------------------------------------------
2024-11-04 13:57 - INFO - Epoch: 03 | Time: 1m 51s
2024-11-04 13:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28059
2024-11-04 13:57 - INFO - 	 Train Loss: 0.185
2024-11-04 13:57 - INFO - 	 Val. Loss: 0.207
2024-11-04 13:57 - INFO - 	 ROC-AUC: 0.792
2024-11-04 13:57 - INFO - 	 PR-AUC: 0.281
2024-11-04 13:57 - INFO - 	 Recall for 0.4 precision: 0.268
2024-11-04 13:57 - INFO - 	 Best Val. Loss: 0.207
2024-11-04 13:57 - INFO - 	 Best ROC-AUC: 0.792
2024-11-04 13:57 - INFO - 	 Best PR-AUC: 0.281
2024-11-04 13:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 13:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-04 13:57 - INFO - 	 Best Recall for 0.4 precision: 0.268
2024-11-04 13:57 - INFO - ---------------------------------------------
2024-11-04 13:59 - INFO - ---------------------------------------------
2024-11-04 13:59 - INFO - Epoch: 04 | Time: 1m 51s
2024-11-04 13:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29239
2024-11-04 13:59 - INFO - 	 Train Loss: 0.175
2024-11-04 13:59 - INFO - 	 Val. Loss: 0.200
2024-11-04 13:59 - INFO - 	 ROC-AUC: 0.795
2024-11-04 13:59 - INFO - 	 PR-AUC: 0.292
2024-11-04 13:59 - INFO - 	 Recall for 0.4 precision: 0.332
2024-11-04 13:59 - INFO - 	 Best Val. Loss: 0.200
2024-11-04 13:59 - INFO - 	 Best ROC-AUC: 0.795
2024-11-04 13:59 - INFO - 	 Best PR-AUC: 0.292
2024-11-04 13:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.736
2024-11-04 13:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 13:59 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-04 13:59 - INFO - ---------------------------------------------
2024-11-04 14:01 - INFO - ---------------------------------------------
2024-11-04 14:01 - INFO - Epoch: 05 | Time: 1m 54s
2024-11-04 14:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29341
2024-11-04 14:01 - INFO - 	 Train Loss: 0.165
2024-11-04 14:01 - INFO - 	 Val. Loss: 0.193
2024-11-04 14:01 - INFO - 	 ROC-AUC: 0.808
2024-11-04 14:01 - INFO - 	 PR-AUC: 0.293
2024-11-04 14:01 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-04 14:01 - INFO - 	 Best Val. Loss: 0.193
2024-11-04 14:01 - INFO - 	 Best ROC-AUC: 0.808
2024-11-04 14:01 - INFO - 	 Best PR-AUC: 0.293
2024-11-04 14:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.745
2024-11-04 14:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 14:01 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-04 14:01 - INFO - ---------------------------------------------
2024-11-04 14:03 - INFO - ---------------------------------------------
2024-11-04 14:03 - INFO - Epoch: 06 | Time: 1m 55s
2024-11-04 14:03 - INFO - 	 Train Loss: 0.162
2024-11-04 14:03 - INFO - 	 Val. Loss: 0.174
2024-11-04 14:03 - INFO - 	 ROC-AUC: 0.815
2024-11-04 14:03 - INFO - 	 PR-AUC: 0.279
2024-11-04 14:03 - INFO - 	 Recall for 0.4 precision: 0.244
2024-11-04 14:03 - INFO - 	 Best Val. Loss: 0.174
2024-11-04 14:03 - INFO - 	 Best ROC-AUC: 0.815
2024-11-04 14:03 - INFO - 	 Best PR-AUC: 0.293
2024-11-04 14:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-04 14:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 14:03 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-04 14:03 - INFO - ---------------------------------------------
2024-11-04 14:04 - INFO - ---------------------------------------------
2024-11-04 14:04 - INFO - Epoch: 07 | Time: 1m 56s
2024-11-04 14:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31927
2024-11-04 14:04 - INFO - 	 Train Loss: 0.156
2024-11-04 14:04 - INFO - 	 Val. Loss: 0.164
2024-11-04 14:04 - INFO - 	 ROC-AUC: 0.843
2024-11-04 14:04 - INFO - 	 PR-AUC: 0.319
2024-11-04 14:04 - INFO - 	 Recall for 0.4 precision: 0.307
2024-11-04 14:04 - INFO - 	 Best Val. Loss: 0.164
2024-11-04 14:04 - INFO - 	 Best ROC-AUC: 0.843
2024-11-04 14:04 - INFO - 	 Best PR-AUC: 0.319
2024-11-04 14:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.800
2024-11-04 14:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.180
2024-11-04 14:04 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-04 14:04 - INFO - ---------------------------------------------
2024-11-04 14:06 - INFO - ---------------------------------------------
2024-11-04 14:06 - INFO - Epoch: 08 | Time: 1m 56s
2024-11-04 14:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34199
2024-11-04 14:06 - INFO - 	 Train Loss: 0.150
2024-11-04 14:06 - INFO - 	 Val. Loss: 0.156
2024-11-04 14:06 - INFO - 	 ROC-AUC: 0.873
2024-11-04 14:06 - INFO - 	 PR-AUC: 0.342
2024-11-04 14:06 - INFO - 	 Recall for 0.4 precision: 0.312
2024-11-04 14:06 - INFO - 	 Best Val. Loss: 0.156
2024-11-04 14:06 - INFO - 	 Best ROC-AUC: 0.873
2024-11-04 14:06 - INFO - 	 Best PR-AUC: 0.342
2024-11-04 14:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.823
2024-11-04 14:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.215
2024-11-04 14:06 - INFO - 	 Best Recall for 0.4 precision: 0.332
2024-11-04 14:06 - INFO - ---------------------------------------------
2024-11-04 14:08 - INFO - ---------------------------------------------
2024-11-04 14:08 - INFO - Epoch: 09 | Time: 1m 57s
2024-11-04 14:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46083
2024-11-04 14:08 - INFO - 	 Train Loss: 0.136
2024-11-04 14:08 - INFO - 	 Val. Loss: 0.129
2024-11-04 14:08 - INFO - 	 ROC-AUC: 0.942
2024-11-04 14:08 - INFO - 	 PR-AUC: 0.461
2024-11-04 14:08 - INFO - 	 Recall for 0.4 precision: 0.657
2024-11-04 14:08 - INFO - 	 Best Val. Loss: 0.129
2024-11-04 14:08 - INFO - 	 Best ROC-AUC: 0.942
2024-11-04 14:08 - INFO - 	 Best PR-AUC: 0.461
2024-11-04 14:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.910
2024-11-04 14:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.299
2024-11-04 14:08 - INFO - 	 Best Recall for 0.4 precision: 0.657
2024-11-04 14:08 - INFO - ---------------------------------------------
2024-11-04 14:10 - INFO - ---------------------------------------------
2024-11-04 14:10 - INFO - Epoch: 10 | Time: 1m 57s
2024-11-04 14:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48609
2024-11-04 14:10 - INFO - 	 Train Loss: 0.119
2024-11-04 14:10 - INFO - 	 Val. Loss: 0.141
2024-11-04 14:10 - INFO - 	 ROC-AUC: 0.952
2024-11-04 14:10 - INFO - 	 PR-AUC: 0.486
2024-11-04 14:10 - INFO - 	 Recall for 0.4 precision: 0.784
2024-11-04 14:10 - INFO - 	 Best Val. Loss: 0.129
2024-11-04 14:10 - INFO - 	 Best ROC-AUC: 0.952
2024-11-04 14:10 - INFO - 	 Best PR-AUC: 0.486
2024-11-04 14:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-04 14:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.331
2024-11-04 14:10 - INFO - 	 Best Recall for 0.4 precision: 0.784
2024-11-04 14:10 - INFO - ---------------------------------------------
2024-11-04 14:13 - INFO - Fit the preprocessing pipeline
2024-11-04 14:13 - INFO - Training using device: mps
2024-11-04 14:13 - INFO - Creating generators
2024-11-04 14:13 - INFO - The model has 651,257 trainable parameters
2024-11-04 14:13 - INFO - * Model:
2024-11-04 14:13 - INFO - * -----------
2024-11-04 14:13 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 14:13 - INFO - * -----------
2024-11-04 14:13 - INFO - Evaluating model based on: aucpr
2024-11-04 14:13 - INFO - Training..

2024-11-04 14:15 - INFO - ---------------------------------------------
2024-11-04 14:15 - INFO - Epoch: 01 | Time: 1m 47s
2024-11-04 14:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.09619
2024-11-04 14:15 - INFO - 	 Train Loss: 0.258
2024-11-04 14:15 - INFO - 	 Val. Loss: 0.296
2024-11-04 14:15 - INFO - 	 ROC-AUC: 0.660
2024-11-04 14:15 - INFO - 	 PR-AUC: 0.096
2024-11-04 14:15 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 14:15 - INFO - 	 Best Val. Loss: 0.296
2024-11-04 14:15 - INFO - 	 Best ROC-AUC: 0.660
2024-11-04 14:15 - INFO - 	 Best PR-AUC: 0.096
2024-11-04 14:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.665
2024-11-04 14:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.087
2024-11-04 14:15 - INFO - 	 Best Recall for 0.4 precision: 0.003
2024-11-04 14:15 - INFO - ---------------------------------------------
2024-11-04 14:17 - INFO - ---------------------------------------------
2024-11-04 14:17 - INFO - Epoch: 02 | Time: 1m 53s
2024-11-04 14:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15012
2024-11-04 14:17 - INFO - 	 Train Loss: 0.206
2024-11-04 14:17 - INFO - 	 Val. Loss: 0.242
2024-11-04 14:17 - INFO - 	 ROC-AUC: 0.754
2024-11-04 14:17 - INFO - 	 PR-AUC: 0.150
2024-11-04 14:17 - INFO - 	 Recall for 0.4 precision: 0.036
2024-11-04 14:17 - INFO - 	 Best Val. Loss: 0.242
2024-11-04 14:17 - INFO - 	 Best ROC-AUC: 0.754
2024-11-04 14:17 - INFO - 	 Best PR-AUC: 0.150
2024-11-04 14:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-11-04 14:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.119
2024-11-04 14:17 - INFO - 	 Best Recall for 0.4 precision: 0.036
2024-11-04 14:17 - INFO - ---------------------------------------------
2024-11-04 14:19 - INFO - ---------------------------------------------
2024-11-04 14:19 - INFO - Epoch: 03 | Time: 1m 52s
2024-11-04 14:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21278
2024-11-04 14:19 - INFO - 	 Train Loss: 0.185
2024-11-04 14:19 - INFO - 	 Val. Loss: 0.214
2024-11-04 14:19 - INFO - 	 ROC-AUC: 0.780
2024-11-04 14:19 - INFO - 	 PR-AUC: 0.213
2024-11-04 14:19 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-04 14:19 - INFO - 	 Best Val. Loss: 0.214
2024-11-04 14:19 - INFO - 	 Best ROC-AUC: 0.780
2024-11-04 14:19 - INFO - 	 Best PR-AUC: 0.213
2024-11-04 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.731
2024-11-04 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-04 14:19 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-04 14:19 - INFO - ---------------------------------------------
2024-11-04 14:21 - INFO - ---------------------------------------------
2024-11-04 14:21 - INFO - Epoch: 04 | Time: 1m 52s
2024-11-04 14:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25975
2024-11-04 14:21 - INFO - 	 Train Loss: 0.172
2024-11-04 14:21 - INFO - 	 Val. Loss: 0.189
2024-11-04 14:21 - INFO - 	 ROC-AUC: 0.810
2024-11-04 14:21 - INFO - 	 PR-AUC: 0.260
2024-11-04 14:21 - INFO - 	 Recall for 0.4 precision: 0.260
2024-11-04 14:21 - INFO - 	 Best Val. Loss: 0.189
2024-11-04 14:21 - INFO - 	 Best ROC-AUC: 0.810
2024-11-04 14:21 - INFO - 	 Best PR-AUC: 0.260
2024-11-04 14:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.741
2024-11-04 14:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.140
2024-11-04 14:21 - INFO - 	 Best Recall for 0.4 precision: 0.260
2024-11-04 14:21 - INFO - ---------------------------------------------
2024-11-04 14:22 - INFO - ---------------------------------------------
2024-11-04 14:22 - INFO - Epoch: 05 | Time: 1m 53s
2024-11-04 14:22 - INFO - 	 Train Loss: 0.165
2024-11-04 14:22 - INFO - 	 Val. Loss: 0.194
2024-11-04 14:22 - INFO - 	 ROC-AUC: 0.819
2024-11-04 14:22 - INFO - 	 PR-AUC: 0.246
2024-11-04 14:22 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-04 14:22 - INFO - 	 Best Val. Loss: 0.189
2024-11-04 14:22 - INFO - 	 Best ROC-AUC: 0.819
2024-11-04 14:22 - INFO - 	 Best PR-AUC: 0.260
2024-11-04 14:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.757
2024-11-04 14:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.140
2024-11-04 14:22 - INFO - 	 Best Recall for 0.4 precision: 0.260
2024-11-04 14:22 - INFO - ---------------------------------------------
2024-11-04 14:24 - INFO - ---------------------------------------------
2024-11-04 14:24 - INFO - Epoch: 06 | Time: 1m 54s
2024-11-04 14:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32772
2024-11-04 14:24 - INFO - 	 Train Loss: 0.152
2024-11-04 14:24 - INFO - 	 Val. Loss: 0.161
2024-11-04 14:24 - INFO - 	 ROC-AUC: 0.901
2024-11-04 14:24 - INFO - 	 PR-AUC: 0.328
2024-11-04 14:24 - INFO - 	 Recall for 0.4 precision: 0.312
2024-11-04 14:24 - INFO - 	 Best Val. Loss: 0.161
2024-11-04 14:24 - INFO - 	 Best ROC-AUC: 0.901
2024-11-04 14:24 - INFO - 	 Best PR-AUC: 0.328
2024-11-04 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.842
2024-11-04 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.180
2024-11-04 14:24 - INFO - 	 Best Recall for 0.4 precision: 0.312
2024-11-04 14:24 - INFO - ---------------------------------------------
2024-11-04 14:26 - INFO - ---------------------------------------------
2024-11-04 14:26 - INFO - Epoch: 07 | Time: 1m 53s
2024-11-04 14:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47934
2024-11-04 14:26 - INFO - 	 Train Loss: 0.131
2024-11-04 14:26 - INFO - 	 Val. Loss: 0.135
2024-11-04 14:26 - INFO - 	 ROC-AUC: 0.954
2024-11-04 14:26 - INFO - 	 PR-AUC: 0.479
2024-11-04 14:26 - INFO - 	 Recall for 0.4 precision: 0.826
2024-11-04 14:26 - INFO - 	 Best Val. Loss: 0.135
2024-11-04 14:26 - INFO - 	 Best ROC-AUC: 0.954
2024-11-04 14:26 - INFO - 	 Best PR-AUC: 0.479
2024-11-04 14:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-04 14:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.363
2024-11-04 14:26 - INFO - 	 Best Recall for 0.4 precision: 0.826
2024-11-04 14:26 - INFO - ---------------------------------------------
2024-11-04 14:28 - INFO - ---------------------------------------------
2024-11-04 14:28 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-04 14:28 - INFO - 	 Train Loss: 0.121
2024-11-04 14:28 - INFO - 	 Val. Loss: 0.120
2024-11-04 14:28 - INFO - 	 ROC-AUC: 0.934
2024-11-04 14:28 - INFO - 	 PR-AUC: 0.432
2024-11-04 14:28 - INFO - 	 Recall for 0.4 precision: 0.722
2024-11-04 14:28 - INFO - 	 Best Val. Loss: 0.120
2024-11-04 14:28 - INFO - 	 Best ROC-AUC: 0.954
2024-11-04 14:28 - INFO - 	 Best PR-AUC: 0.479
2024-11-04 14:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-04 14:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.363
2024-11-04 14:28 - INFO - 	 Best Recall for 0.4 precision: 0.826
2024-11-04 14:28 - INFO - ---------------------------------------------
2024-11-04 14:30 - INFO - ---------------------------------------------
2024-11-04 14:30 - INFO - Epoch: 09 | Time: 1m 54s
2024-11-04 14:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50099
2024-11-04 14:30 - INFO - 	 Train Loss: 0.114
2024-11-04 14:30 - INFO - 	 Val. Loss: 0.122
2024-11-04 14:30 - INFO - 	 ROC-AUC: 0.926
2024-11-04 14:30 - INFO - 	 PR-AUC: 0.501
2024-11-04 14:30 - INFO - 	 Recall for 0.4 precision: 0.761
2024-11-04 14:30 - INFO - 	 Best Val. Loss: 0.120
2024-11-04 14:30 - INFO - 	 Best ROC-AUC: 0.954
2024-11-04 14:30 - INFO - 	 Best PR-AUC: 0.501
2024-11-04 14:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-04 14:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.401
2024-11-04 14:30 - INFO - 	 Best Recall for 0.4 precision: 0.826
2024-11-04 14:30 - INFO - ---------------------------------------------
2024-11-04 14:32 - INFO - ---------------------------------------------
2024-11-04 14:32 - INFO - Epoch: 10 | Time: 1m 54s
2024-11-04 14:32 - INFO - 	 Train Loss: 0.113
2024-11-04 14:32 - INFO - 	 Val. Loss: 0.130
2024-11-04 14:32 - INFO - 	 ROC-AUC: 0.935
2024-11-04 14:32 - INFO - 	 PR-AUC: 0.448
2024-11-04 14:32 - INFO - 	 Recall for 0.4 precision: 0.003
2024-11-04 14:32 - INFO - 	 Best Val. Loss: 0.120
2024-11-04 14:32 - INFO - 	 Best ROC-AUC: 0.954
2024-11-04 14:32 - INFO - 	 Best PR-AUC: 0.501
2024-11-04 14:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-04 14:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.401
2024-11-04 14:32 - INFO - 	 Best Recall for 0.4 precision: 0.826
2024-11-04 14:32 - INFO - ---------------------------------------------
2024-11-04 14:35 - INFO - Fit the preprocessing pipeline
2024-11-04 14:35 - INFO - Training using device: mps
2024-11-04 14:35 - INFO - Creating generators
2024-11-04 14:35 - INFO - The model has 651,257 trainable parameters
2024-11-04 14:35 - INFO - * Model:
2024-11-04 14:35 - INFO - * -----------
2024-11-04 14:35 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 14:35 - INFO - * -----------
2024-11-04 14:35 - INFO - Evaluating model based on: aucpr
2024-11-04 14:35 - INFO - Training..

2024-11-04 14:36 - INFO - ---------------------------------------------
2024-11-04 14:36 - INFO - Epoch: 01 | Time: 1m 41s
2024-11-04 14:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12598
2024-11-04 14:36 - INFO - 	 Train Loss: 0.257
2024-11-04 14:36 - INFO - 	 Val. Loss: 0.291
2024-11-04 14:36 - INFO - 	 ROC-AUC: 0.707
2024-11-04 14:36 - INFO - 	 PR-AUC: 0.126
2024-11-04 14:36 - INFO - 	 Recall for 0.4 precision: 0.054
2024-11-04 14:36 - INFO - 	 Best Val. Loss: 0.291
2024-11-04 14:36 - INFO - 	 Best ROC-AUC: 0.707
2024-11-04 14:36 - INFO - 	 Best PR-AUC: 0.126
2024-11-04 14:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-11-04 14:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.111
2024-11-04 14:36 - INFO - 	 Best Recall for 0.4 precision: 0.054
2024-11-04 14:36 - INFO - ---------------------------------------------
2024-11-04 14:38 - INFO - ---------------------------------------------
2024-11-04 14:38 - INFO - Epoch: 02 | Time: 1m 53s
2024-11-04 14:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22459
2024-11-04 14:38 - INFO - 	 Train Loss: 0.207
2024-11-04 14:38 - INFO - 	 Val. Loss: 0.245
2024-11-04 14:38 - INFO - 	 ROC-AUC: 0.756
2024-11-04 14:38 - INFO - 	 PR-AUC: 0.225
2024-11-04 14:38 - INFO - 	 Recall for 0.4 precision: 0.176
2024-11-04 14:38 - INFO - 	 Best Val. Loss: 0.245
2024-11-04 14:38 - INFO - 	 Best ROC-AUC: 0.756
2024-11-04 14:38 - INFO - 	 Best PR-AUC: 0.225
2024-11-04 14:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-11-04 14:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.124
2024-11-04 14:38 - INFO - 	 Best Recall for 0.4 precision: 0.176
2024-11-04 14:38 - INFO - ---------------------------------------------
2024-11-04 14:40 - INFO - ---------------------------------------------
2024-11-04 14:40 - INFO - Epoch: 03 | Time: 1m 55s
2024-11-04 14:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27548
2024-11-04 14:40 - INFO - 	 Train Loss: 0.185
2024-11-04 14:40 - INFO - 	 Val. Loss: 0.208
2024-11-04 14:40 - INFO - 	 ROC-AUC: 0.789
2024-11-04 14:40 - INFO - 	 PR-AUC: 0.275
2024-11-04 14:40 - INFO - 	 Recall for 0.4 precision: 0.280
2024-11-04 14:40 - INFO - 	 Best Val. Loss: 0.208
2024-11-04 14:40 - INFO - 	 Best ROC-AUC: 0.789
2024-11-04 14:40 - INFO - 	 Best PR-AUC: 0.275
2024-11-04 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-11-04 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 14:40 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-04 14:40 - INFO - ---------------------------------------------
2024-11-04 14:42 - INFO - ---------------------------------------------
2024-11-04 14:42 - INFO - Epoch: 04 | Time: 1m 57s
2024-11-04 14:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27852
2024-11-04 14:42 - INFO - 	 Train Loss: 0.171
2024-11-04 14:42 - INFO - 	 Val. Loss: 0.187
2024-11-04 14:42 - INFO - 	 ROC-AUC: 0.800
2024-11-04 14:42 - INFO - 	 PR-AUC: 0.279
2024-11-04 14:42 - INFO - 	 Recall for 0.4 precision: 0.211
2024-11-04 14:42 - INFO - 	 Best Val. Loss: 0.187
2024-11-04 14:42 - INFO - 	 Best ROC-AUC: 0.800
2024-11-04 14:42 - INFO - 	 Best PR-AUC: 0.279
2024-11-04 14:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 14:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.157
2024-11-04 14:42 - INFO - 	 Best Recall for 0.4 precision: 0.280
2024-11-04 14:42 - INFO - ---------------------------------------------
2024-11-04 14:44 - INFO - ---------------------------------------------
2024-11-04 14:44 - INFO - Epoch: 05 | Time: 1m 59s
2024-11-04 14:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2886
2024-11-04 14:44 - INFO - 	 Train Loss: 0.164
2024-11-04 14:44 - INFO - 	 Val. Loss: 0.184
2024-11-04 14:44 - INFO - 	 ROC-AUC: 0.796
2024-11-04 14:44 - INFO - 	 PR-AUC: 0.289
2024-11-04 14:44 - INFO - 	 Recall for 0.4 precision: 0.296
2024-11-04 14:44 - INFO - 	 Best Val. Loss: 0.184
2024-11-04 14:44 - INFO - 	 Best ROC-AUC: 0.800
2024-11-04 14:44 - INFO - 	 Best PR-AUC: 0.289
2024-11-04 14:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.748
2024-11-04 14:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-04 14:44 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-04 14:44 - INFO - ---------------------------------------------
2024-11-04 14:46 - INFO - ---------------------------------------------
2024-11-04 14:46 - INFO - Epoch: 06 | Time: 2m 0s
2024-11-04 14:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28938
2024-11-04 14:46 - INFO - 	 Train Loss: 0.159
2024-11-04 14:46 - INFO - 	 Val. Loss: 0.172
2024-11-04 14:46 - INFO - 	 ROC-AUC: 0.813
2024-11-04 14:46 - INFO - 	 PR-AUC: 0.289
2024-11-04 14:46 - INFO - 	 Recall for 0.4 precision: 0.255
2024-11-04 14:46 - INFO - 	 Best Val. Loss: 0.172
2024-11-04 14:46 - INFO - 	 Best ROC-AUC: 0.813
2024-11-04 14:46 - INFO - 	 Best PR-AUC: 0.289
2024-11-04 14:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.770
2024-11-04 14:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.166
2024-11-04 14:46 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-04 14:46 - INFO - ---------------------------------------------
2024-11-04 14:48 - INFO - ---------------------------------------------
2024-11-04 14:48 - INFO - Epoch: 07 | Time: 1m 59s
2024-11-04 14:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31556
2024-11-04 14:48 - INFO - 	 Train Loss: 0.155
2024-11-04 14:48 - INFO - 	 Val. Loss: 0.163
2024-11-04 14:48 - INFO - 	 ROC-AUC: 0.839
2024-11-04 14:48 - INFO - 	 PR-AUC: 0.316
2024-11-04 14:48 - INFO - 	 Recall for 0.4 precision: 0.280
2024-11-04 14:48 - INFO - 	 Best Val. Loss: 0.163
2024-11-04 14:48 - INFO - 	 Best ROC-AUC: 0.839
2024-11-04 14:48 - INFO - 	 Best PR-AUC: 0.316
2024-11-04 14:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.782
2024-11-04 14:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.185
2024-11-04 14:48 - INFO - 	 Best Recall for 0.4 precision: 0.296
2024-11-04 14:48 - INFO - ---------------------------------------------
2024-11-04 14:50 - INFO - ---------------------------------------------
2024-11-04 14:50 - INFO - Epoch: 08 | Time: 2m 3s
2024-11-04 14:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32035
2024-11-04 14:50 - INFO - 	 Train Loss: 0.152
2024-11-04 14:50 - INFO - 	 Val. Loss: 0.159
2024-11-04 14:50 - INFO - 	 ROC-AUC: 0.853
2024-11-04 14:50 - INFO - 	 PR-AUC: 0.320
2024-11-04 14:50 - INFO - 	 Recall for 0.4 precision: 0.312
2024-11-04 14:50 - INFO - 	 Best Val. Loss: 0.159
2024-11-04 14:50 - INFO - 	 Best ROC-AUC: 0.853
2024-11-04 14:50 - INFO - 	 Best PR-AUC: 0.320
2024-11-04 14:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.792
2024-11-04 14:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.204
2024-11-04 14:50 - INFO - 	 Best Recall for 0.4 precision: 0.312
2024-11-04 14:50 - INFO - ---------------------------------------------
2024-11-04 14:52 - INFO - ---------------------------------------------
2024-11-04 14:52 - INFO - Epoch: 09 | Time: 2m 0s
2024-11-04 14:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3685
2024-11-04 14:52 - INFO - 	 Train Loss: 0.147
2024-11-04 14:52 - INFO - 	 Val. Loss: 0.145
2024-11-04 14:52 - INFO - 	 ROC-AUC: 0.880
2024-11-04 14:52 - INFO - 	 PR-AUC: 0.368
2024-11-04 14:52 - INFO - 	 Recall for 0.4 precision: 0.468
2024-11-04 14:52 - INFO - 	 Best Val. Loss: 0.145
2024-11-04 14:52 - INFO - 	 Best ROC-AUC: 0.880
2024-11-04 14:52 - INFO - 	 Best PR-AUC: 0.368
2024-11-04 14:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.848
2024-11-04 14:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.281
2024-11-04 14:52 - INFO - 	 Best Recall for 0.4 precision: 0.468
2024-11-04 14:52 - INFO - ---------------------------------------------
2024-11-04 14:54 - INFO - ---------------------------------------------
2024-11-04 14:54 - INFO - Epoch: 10 | Time: 2m 0s
2024-11-04 14:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.44666
2024-11-04 14:54 - INFO - 	 Train Loss: 0.131
2024-11-04 14:54 - INFO - 	 Val. Loss: 0.125
2024-11-04 14:54 - INFO - 	 ROC-AUC: 0.939
2024-11-04 14:54 - INFO - 	 PR-AUC: 0.447
2024-11-04 14:54 - INFO - 	 Recall for 0.4 precision: 0.673
2024-11-04 14:54 - INFO - 	 Best Val. Loss: 0.125
2024-11-04 14:54 - INFO - 	 Best ROC-AUC: 0.939
2024-11-04 14:54 - INFO - 	 Best PR-AUC: 0.447
2024-11-04 14:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-04 14:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.343
2024-11-04 14:54 - INFO - 	 Best Recall for 0.4 precision: 0.673
2024-11-04 14:54 - INFO - ---------------------------------------------
2024-11-04 14:57 - INFO - Fit the preprocessing pipeline
2024-11-04 14:57 - INFO - Training using device: mps
2024-11-04 14:57 - INFO - Creating generators
2024-11-04 14:57 - INFO - The model has 651,257 trainable parameters
2024-11-04 14:57 - INFO - * Model:
2024-11-04 14:57 - INFO - * -----------
2024-11-04 14:57 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 14:57 - INFO - * -----------
2024-11-04 14:57 - INFO - Evaluating model based on: aucpr
2024-11-04 14:57 - INFO - Training..

2024-11-04 14:59 - INFO - ---------------------------------------------
2024-11-04 14:59 - INFO - Epoch: 01 | Time: 1m 48s
2024-11-04 14:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12414
2024-11-04 14:59 - INFO - 	 Train Loss: 0.253
2024-11-04 14:59 - INFO - 	 Val. Loss: 0.292
2024-11-04 14:59 - INFO - 	 ROC-AUC: 0.716
2024-11-04 14:59 - INFO - 	 PR-AUC: 0.124
2024-11-04 14:59 - INFO - 	 Recall for 0.4 precision: 0.042
2024-11-04 14:59 - INFO - 	 Best Val. Loss: 0.292
2024-11-04 14:59 - INFO - 	 Best ROC-AUC: 0.716
2024-11-04 14:59 - INFO - 	 Best PR-AUC: 0.124
2024-11-04 14:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.692
2024-11-04 14:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.091
2024-11-04 14:59 - INFO - 	 Best Recall for 0.4 precision: 0.042
2024-11-04 14:59 - INFO - ---------------------------------------------
2024-11-04 15:01 - INFO - ---------------------------------------------
2024-11-04 15:01 - INFO - Epoch: 02 | Time: 2m 1s
2024-11-04 15:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21099
2024-11-04 15:01 - INFO - 	 Train Loss: 0.206
2024-11-04 15:01 - INFO - 	 Val. Loss: 0.241
2024-11-04 15:01 - INFO - 	 ROC-AUC: 0.759
2024-11-04 15:01 - INFO - 	 PR-AUC: 0.211
2024-11-04 15:01 - INFO - 	 Recall for 0.4 precision: 0.192
2024-11-04 15:01 - INFO - 	 Best Val. Loss: 0.241
2024-11-04 15:01 - INFO - 	 Best ROC-AUC: 0.759
2024-11-04 15:01 - INFO - 	 Best PR-AUC: 0.211
2024-11-04 15:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.731
2024-11-04 15:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-04 15:01 - INFO - 	 Best Recall for 0.4 precision: 0.192
2024-11-04 15:01 - INFO - ---------------------------------------------
2024-11-04 15:03 - INFO - ---------------------------------------------
2024-11-04 15:03 - INFO - Epoch: 03 | Time: 2m 3s
2024-11-04 15:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24012
2024-11-04 15:03 - INFO - 	 Train Loss: 0.185
2024-11-04 15:03 - INFO - 	 Val. Loss: 0.213
2024-11-04 15:03 - INFO - 	 ROC-AUC: 0.760
2024-11-04 15:03 - INFO - 	 PR-AUC: 0.240
2024-11-04 15:03 - INFO - 	 Recall for 0.4 precision: 0.228
2024-11-04 15:03 - INFO - 	 Best Val. Loss: 0.213
2024-11-04 15:03 - INFO - 	 Best ROC-AUC: 0.760
2024-11-04 15:03 - INFO - 	 Best PR-AUC: 0.240
2024-11-04 15:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.726
2024-11-04 15:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-04 15:03 - INFO - 	 Best Recall for 0.4 precision: 0.228
2024-11-04 15:03 - INFO - ---------------------------------------------
2024-11-04 15:05 - INFO - ---------------------------------------------
2024-11-04 15:05 - INFO - Epoch: 04 | Time: 2m 4s
2024-11-04 15:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30124
2024-11-04 15:05 - INFO - 	 Train Loss: 0.170
2024-11-04 15:05 - INFO - 	 Val. Loss: 0.190
2024-11-04 15:05 - INFO - 	 ROC-AUC: 0.804
2024-11-04 15:05 - INFO - 	 PR-AUC: 0.301
2024-11-04 15:05 - INFO - 	 Recall for 0.4 precision: 0.315
2024-11-04 15:05 - INFO - 	 Best Val. Loss: 0.190
2024-11-04 15:05 - INFO - 	 Best ROC-AUC: 0.804
2024-11-04 15:05 - INFO - 	 Best PR-AUC: 0.301
2024-11-04 15:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.739
2024-11-04 15:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 15:05 - INFO - 	 Best Recall for 0.4 precision: 0.315
2024-11-04 15:05 - INFO - ---------------------------------------------
2024-11-04 15:07 - INFO - ---------------------------------------------
2024-11-04 15:07 - INFO - Epoch: 05 | Time: 2m 4s
2024-11-04 15:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30909
2024-11-04 15:07 - INFO - 	 Train Loss: 0.164
2024-11-04 15:07 - INFO - 	 Val. Loss: 0.178
2024-11-04 15:07 - INFO - 	 ROC-AUC: 0.816
2024-11-04 15:07 - INFO - 	 PR-AUC: 0.309
2024-11-04 15:07 - INFO - 	 Recall for 0.4 precision: 0.328
2024-11-04 15:07 - INFO - 	 Best Val. Loss: 0.178
2024-11-04 15:07 - INFO - 	 Best ROC-AUC: 0.816
2024-11-04 15:07 - INFO - 	 Best PR-AUC: 0.309
2024-11-04 15:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-04 15:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-04 15:07 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-04 15:07 - INFO - ---------------------------------------------
2024-11-04 15:09 - INFO - ---------------------------------------------
2024-11-04 15:09 - INFO - Epoch: 06 | Time: 2m 4s
2024-11-04 15:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34926
2024-11-04 15:09 - INFO - 	 Train Loss: 0.155
2024-11-04 15:09 - INFO - 	 Val. Loss: 0.162
2024-11-04 15:09 - INFO - 	 ROC-AUC: 0.870
2024-11-04 15:09 - INFO - 	 PR-AUC: 0.349
2024-11-04 15:09 - INFO - 	 Recall for 0.4 precision: 0.306
2024-11-04 15:09 - INFO - 	 Best Val. Loss: 0.162
2024-11-04 15:09 - INFO - 	 Best ROC-AUC: 0.870
2024-11-04 15:09 - INFO - 	 Best PR-AUC: 0.349
2024-11-04 15:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.819
2024-11-04 15:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.219
2024-11-04 15:09 - INFO - 	 Best Recall for 0.4 precision: 0.328
2024-11-04 15:09 - INFO - ---------------------------------------------
2024-11-04 15:11 - INFO - ---------------------------------------------
2024-11-04 15:11 - INFO - Epoch: 07 | Time: 2m 5s
2024-11-04 15:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43132
2024-11-04 15:11 - INFO - 	 Train Loss: 0.137
2024-11-04 15:11 - INFO - 	 Val. Loss: 0.136
2024-11-04 15:11 - INFO - 	 ROC-AUC: 0.938
2024-11-04 15:11 - INFO - 	 PR-AUC: 0.431
2024-11-04 15:11 - INFO - 	 Recall for 0.4 precision: 0.584
2024-11-04 15:11 - INFO - 	 Best Val. Loss: 0.136
2024-11-04 15:11 - INFO - 	 Best ROC-AUC: 0.938
2024-11-04 15:11 - INFO - 	 Best PR-AUC: 0.431
2024-11-04 15:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.904
2024-11-04 15:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.268
2024-11-04 15:11 - INFO - 	 Best Recall for 0.4 precision: 0.584
2024-11-04 15:11 - INFO - ---------------------------------------------
2024-11-04 15:13 - INFO - ---------------------------------------------
2024-11-04 15:13 - INFO - Epoch: 08 | Time: 2m 5s
2024-11-04 15:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56229
2024-11-04 15:13 - INFO - 	 Train Loss: 0.126
2024-11-04 15:13 - INFO - 	 Val. Loss: 0.117
2024-11-04 15:13 - INFO - 	 ROC-AUC: 0.956
2024-11-04 15:13 - INFO - 	 PR-AUC: 0.562
2024-11-04 15:13 - INFO - 	 Recall for 0.4 precision: 0.880
2024-11-04 15:13 - INFO - 	 Best Val. Loss: 0.117
2024-11-04 15:13 - INFO - 	 Best ROC-AUC: 0.956
2024-11-04 15:13 - INFO - 	 Best PR-AUC: 0.562
2024-11-04 15:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-04 15:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.389
2024-11-04 15:13 - INFO - 	 Best Recall for 0.4 precision: 0.880
2024-11-04 15:13 - INFO - ---------------------------------------------
2024-11-04 15:16 - INFO - ---------------------------------------------
2024-11-04 15:16 - INFO - Epoch: 09 | Time: 2m 7s
2024-11-04 15:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56963
2024-11-04 15:16 - INFO - 	 Train Loss: 0.113
2024-11-04 15:16 - INFO - 	 Val. Loss: 0.112
2024-11-04 15:16 - INFO - 	 ROC-AUC: 0.967
2024-11-04 15:16 - INFO - 	 PR-AUC: 0.570
2024-11-04 15:16 - INFO - 	 Recall for 0.4 precision: 0.891
2024-11-04 15:16 - INFO - 	 Best Val. Loss: 0.112
2024-11-04 15:16 - INFO - 	 Best ROC-AUC: 0.967
2024-11-04 15:16 - INFO - 	 Best PR-AUC: 0.570
2024-11-04 15:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-04 15:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.397
2024-11-04 15:16 - INFO - 	 Best Recall for 0.4 precision: 0.891
2024-11-04 15:16 - INFO - ---------------------------------------------
2024-11-04 15:18 - INFO - ---------------------------------------------
2024-11-04 15:18 - INFO - Epoch: 10 | Time: 2m 6s
2024-11-04 15:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58103
2024-11-04 15:18 - INFO - 	 Train Loss: 0.107
2024-11-04 15:18 - INFO - 	 Val. Loss: 0.123
2024-11-04 15:18 - INFO - 	 ROC-AUC: 0.956
2024-11-04 15:18 - INFO - 	 PR-AUC: 0.581
2024-11-04 15:18 - INFO - 	 Recall for 0.4 precision: 0.907
2024-11-04 15:18 - INFO - 	 Best Val. Loss: 0.112
2024-11-04 15:18 - INFO - 	 Best ROC-AUC: 0.967
2024-11-04 15:18 - INFO - 	 Best PR-AUC: 0.581
2024-11-04 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-04 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-11-04 15:18 - INFO - 	 Best Recall for 0.4 precision: 0.907
2024-11-04 15:18 - INFO - ---------------------------------------------
2024-11-04 15:20 - INFO - Fit the preprocessing pipeline
2024-11-04 15:20 - INFO - Training using device: mps
2024-11-04 15:20 - INFO - Creating generators
2024-11-04 15:20 - INFO - The model has 651,257 trainable parameters
2024-11-04 15:20 - INFO - * Model:
2024-11-04 15:20 - INFO - * -----------
2024-11-04 15:20 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 15:20 - INFO - * -----------
2024-11-04 15:20 - INFO - Evaluating model based on: aucpr
2024-11-04 15:20 - INFO - Training..

2024-11-04 15:22 - INFO - ---------------------------------------------
2024-11-04 15:22 - INFO - Epoch: 01 | Time: 1m 53s
2024-11-04 15:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.06176
2024-11-04 15:22 - INFO - 	 Train Loss: 0.259
2024-11-04 15:22 - INFO - 	 Val. Loss: 0.302
2024-11-04 15:22 - INFO - 	 ROC-AUC: 0.573
2024-11-04 15:22 - INFO - 	 PR-AUC: 0.062
2024-11-04 15:22 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 15:22 - INFO - 	 Best Val. Loss: 0.302
2024-11-04 15:22 - INFO - 	 Best ROC-AUC: 0.573
2024-11-04 15:22 - INFO - 	 Best PR-AUC: 0.062
2024-11-04 15:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.583
2024-11-04 15:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-04 15:22 - INFO - 	 Best Recall for 0.4 precision: 0.002
2024-11-04 15:22 - INFO - ---------------------------------------------
2024-11-04 15:24 - INFO - ---------------------------------------------
2024-11-04 15:24 - INFO - Epoch: 02 | Time: 2m 1s
2024-11-04 15:24 - INFO - 	 Train Loss: 0.216
2024-11-04 15:24 - INFO - 	 Val. Loss: 0.271
2024-11-04 15:24 - INFO - 	 ROC-AUC: 0.566
2024-11-04 15:24 - INFO - 	 PR-AUC: 0.056
2024-11-04 15:24 - INFO - 	 Recall for 0.4 precision: 0.283
2024-11-04 15:24 - INFO - 	 Best Val. Loss: 0.271
2024-11-04 15:24 - INFO - 	 Best ROC-AUC: 0.573
2024-11-04 15:24 - INFO - 	 Best PR-AUC: 0.062
2024-11-04 15:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.583
2024-11-04 15:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.066
2024-11-04 15:24 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 15:24 - INFO - ---------------------------------------------
2024-11-04 15:26 - INFO - ---------------------------------------------
2024-11-04 15:26 - INFO - Epoch: 03 | Time: 2m 4s
2024-11-04 15:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.08152
2024-11-04 15:26 - INFO - 	 Train Loss: 0.204
2024-11-04 15:26 - INFO - 	 Val. Loss: 0.250
2024-11-04 15:26 - INFO - 	 ROC-AUC: 0.644
2024-11-04 15:26 - INFO - 	 PR-AUC: 0.082
2024-11-04 15:26 - INFO - 	 Recall for 0.4 precision: 0.026
2024-11-04 15:26 - INFO - 	 Best Val. Loss: 0.250
2024-11-04 15:26 - INFO - 	 Best ROC-AUC: 0.644
2024-11-04 15:26 - INFO - 	 Best PR-AUC: 0.082
2024-11-04 15:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.629
2024-11-04 15:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-04 15:26 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 15:26 - INFO - ---------------------------------------------
2024-11-04 15:28 - INFO - ---------------------------------------------
2024-11-04 15:28 - INFO - Epoch: 04 | Time: 2m 3s
2024-11-04 15:28 - INFO - 	 Train Loss: 0.187
2024-11-04 15:28 - INFO - 	 Val. Loss: 0.238
2024-11-04 15:28 - INFO - 	 ROC-AUC: 0.632
2024-11-04 15:28 - INFO - 	 PR-AUC: 0.076
2024-11-04 15:28 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 15:28 - INFO - 	 Best Val. Loss: 0.238
2024-11-04 15:28 - INFO - 	 Best ROC-AUC: 0.644
2024-11-04 15:28 - INFO - 	 Best PR-AUC: 0.082
2024-11-04 15:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.629
2024-11-04 15:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-04 15:28 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 15:28 - INFO - ---------------------------------------------
2024-11-04 15:31 - INFO - ---------------------------------------------
2024-11-04 15:31 - INFO - Epoch: 05 | Time: 2m 4s
2024-11-04 15:31 - INFO - 	 Train Loss: 0.185
2024-11-04 15:31 - INFO - 	 Val. Loss: 0.230
2024-11-04 15:31 - INFO - 	 ROC-AUC: 0.659
2024-11-04 15:31 - INFO - 	 PR-AUC: 0.078
2024-11-04 15:31 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 15:31 - INFO - 	 Best Val. Loss: 0.230
2024-11-04 15:31 - INFO - 	 Best ROC-AUC: 0.659
2024-11-04 15:31 - INFO - 	 Best PR-AUC: 0.082
2024-11-04 15:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.693
2024-11-04 15:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-04 15:31 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 15:31 - INFO - ---------------------------------------------
2024-11-04 15:33 - INFO - ---------------------------------------------
2024-11-04 15:33 - INFO - Epoch: 06 | Time: 2m 5s
2024-11-04 15:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14642
2024-11-04 15:33 - INFO - 	 Train Loss: 0.176
2024-11-04 15:33 - INFO - 	 Val. Loss: 0.206
2024-11-04 15:33 - INFO - 	 ROC-AUC: 0.759
2024-11-04 15:33 - INFO - 	 PR-AUC: 0.146
2024-11-04 15:33 - INFO - 	 Recall for 0.4 precision: 0.002
2024-11-04 15:33 - INFO - 	 Best Val. Loss: 0.206
2024-11-04 15:33 - INFO - 	 Best ROC-AUC: 0.759
2024-11-04 15:33 - INFO - 	 Best PR-AUC: 0.146
2024-11-04 15:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.758
2024-11-04 15:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-04 15:33 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 15:33 - INFO - ---------------------------------------------
2024-11-04 15:35 - INFO - ---------------------------------------------
2024-11-04 15:35 - INFO - Epoch: 07 | Time: 2m 4s
2024-11-04 15:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18881
2024-11-04 15:35 - INFO - 	 Train Loss: 0.169
2024-11-04 15:35 - INFO - 	 Val. Loss: 0.196
2024-11-04 15:35 - INFO - 	 ROC-AUC: 0.777
2024-11-04 15:35 - INFO - 	 PR-AUC: 0.189
2024-11-04 15:35 - INFO - 	 Recall for 0.4 precision: 0.091
2024-11-04 15:35 - INFO - 	 Best Val. Loss: 0.196
2024-11-04 15:35 - INFO - 	 Best ROC-AUC: 0.777
2024-11-04 15:35 - INFO - 	 Best PR-AUC: 0.189
2024-11-04 15:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-04 15:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 15:35 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 15:35 - INFO - ---------------------------------------------
2024-11-04 15:37 - INFO - ---------------------------------------------
2024-11-04 15:37 - INFO - Epoch: 08 | Time: 2m 5s
2024-11-04 15:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27326
2024-11-04 15:37 - INFO - 	 Train Loss: 0.162
2024-11-04 15:37 - INFO - 	 Val. Loss: 0.185
2024-11-04 15:37 - INFO - 	 ROC-AUC: 0.797
2024-11-04 15:37 - INFO - 	 PR-AUC: 0.273
2024-11-04 15:37 - INFO - 	 Recall for 0.4 precision: 0.193
2024-11-04 15:37 - INFO - 	 Best Val. Loss: 0.185
2024-11-04 15:37 - INFO - 	 Best ROC-AUC: 0.797
2024-11-04 15:37 - INFO - 	 Best PR-AUC: 0.273
2024-11-04 15:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.754
2024-11-04 15:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.154
2024-11-04 15:37 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 15:37 - INFO - ---------------------------------------------
2024-11-04 15:39 - INFO - ---------------------------------------------
2024-11-04 15:39 - INFO - Epoch: 09 | Time: 2m 5s
2024-11-04 15:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2802
2024-11-04 15:39 - INFO - 	 Train Loss: 0.161
2024-11-04 15:39 - INFO - 	 Val. Loss: 0.176
2024-11-04 15:39 - INFO - 	 ROC-AUC: 0.815
2024-11-04 15:39 - INFO - 	 PR-AUC: 0.280
2024-11-04 15:39 - INFO - 	 Recall for 0.4 precision: 0.205
2024-11-04 15:39 - INFO - 	 Best Val. Loss: 0.176
2024-11-04 15:39 - INFO - 	 Best ROC-AUC: 0.815
2024-11-04 15:39 - INFO - 	 Best PR-AUC: 0.280
2024-11-04 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-04 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-04 15:39 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 15:39 - INFO - ---------------------------------------------
2024-11-04 15:41 - INFO - ---------------------------------------------
2024-11-04 15:41 - INFO - Epoch: 10 | Time: 2m 5s
2024-11-04 15:41 - INFO - 	 Train Loss: 0.156
2024-11-04 15:41 - INFO - 	 Val. Loss: 0.198
2024-11-04 15:41 - INFO - 	 ROC-AUC: 0.772
2024-11-04 15:41 - INFO - 	 PR-AUC: 0.207
2024-11-04 15:41 - INFO - 	 Recall for 0.4 precision: 0.091
2024-11-04 15:41 - INFO - 	 Best Val. Loss: 0.176
2024-11-04 15:41 - INFO - 	 Best ROC-AUC: 0.815
2024-11-04 15:41 - INFO - 	 Best PR-AUC: 0.280
2024-11-04 15:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-04 15:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-04 15:41 - INFO - 	 Best Recall for 0.4 precision: 0.283
2024-11-04 15:41 - INFO - ---------------------------------------------
2024-11-04 15:44 - INFO - Fit the preprocessing pipeline
2024-11-04 15:44 - INFO - Training using device: mps
2024-11-04 15:44 - INFO - Creating generators
2024-11-04 15:44 - INFO - The model has 651,257 trainable parameters
2024-11-04 15:44 - INFO - * Model:
2024-11-04 15:44 - INFO - * -----------
2024-11-04 15:44 - INFO - DownstreamInception(
  (conv1): ConvBlock(
    (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
    (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (conv2): ConvBlock(
    (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (inception3a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception3b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4a): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (inception4b): InceptionBlock(
    (branch1): ConvBlock(
      (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (branch2): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch3): Sequential(
      (0): ConvBlock(
        (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ConvBlock(
        (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (branch4): Sequential(
      (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
  (dropout): Dropout(p=0.5, inplace=False)
  (fc): Linear(in_features=8480, out_features=1, bias=True)
  (sigmoid): Sigmoid()
)
2024-11-04 15:44 - INFO - * -----------
2024-11-04 15:44 - INFO - Evaluating model based on: aucpr
2024-11-04 15:44 - INFO - Training..

2024-11-04 15:46 - INFO - ---------------------------------------------
2024-11-04 15:46 - INFO - Epoch: 01 | Time: 1m 53s
2024-11-04 15:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.07251
2024-11-04 15:46 - INFO - 	 Train Loss: 0.249
2024-11-04 15:46 - INFO - 	 Val. Loss: 0.289
2024-11-04 15:46 - INFO - 	 ROC-AUC: 0.579
2024-11-04 15:46 - INFO - 	 PR-AUC: 0.073
2024-11-04 15:46 - INFO - 	 Recall for 0.4 precision: 0.007
2024-11-04 15:46 - INFO - 	 Best Val. Loss: 0.289
2024-11-04 15:46 - INFO - 	 Best ROC-AUC: 0.579
2024-11-04 15:46 - INFO - 	 Best PR-AUC: 0.073
2024-11-04 15:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.601
2024-11-04 15:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.073
2024-11-04 15:46 - INFO - 	 Best Recall for 0.4 precision: 0.007
2024-11-04 15:46 - INFO - ---------------------------------------------
2024-11-04 15:48 - INFO - ---------------------------------------------
2024-11-04 15:48 - INFO - Epoch: 02 | Time: 2m 0s
2024-11-04 15:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12081
2024-11-04 15:48 - INFO - 	 Train Loss: 0.203
2024-11-04 15:48 - INFO - 	 Val. Loss: 0.237
2024-11-04 15:48 - INFO - 	 ROC-AUC: 0.712
2024-11-04 15:48 - INFO - 	 PR-AUC: 0.121
2024-11-04 15:48 - INFO - 	 Recall for 0.4 precision: 0.010
2024-11-04 15:48 - INFO - 	 Best Val. Loss: 0.237
2024-11-04 15:48 - INFO - 	 Best ROC-AUC: 0.712
2024-11-04 15:48 - INFO - 	 Best PR-AUC: 0.121
2024-11-04 15:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.693
2024-11-04 15:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-04 15:48 - INFO - 	 Best Recall for 0.4 precision: 0.010
2024-11-04 15:48 - INFO - ---------------------------------------------
2024-11-04 15:50 - INFO - ---------------------------------------------
2024-11-04 15:50 - INFO - Epoch: 03 | Time: 2m 1s
2024-11-04 15:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23097
2024-11-04 15:50 - INFO - 	 Train Loss: 0.185
2024-11-04 15:50 - INFO - 	 Val. Loss: 0.220
2024-11-04 15:50 - INFO - 	 ROC-AUC: 0.785
2024-11-04 15:50 - INFO - 	 PR-AUC: 0.231
2024-11-04 15:50 - INFO - 	 Recall for 0.4 precision: 0.179
2024-11-04 15:50 - INFO - 	 Best Val. Loss: 0.220
2024-11-04 15:50 - INFO - 	 Best ROC-AUC: 0.785
2024-11-04 15:50 - INFO - 	 Best PR-AUC: 0.231
2024-11-04 15:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.734
2024-11-04 15:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.144
2024-11-04 15:50 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-04 15:50 - INFO - ---------------------------------------------
2024-11-04 15:52 - INFO - ---------------------------------------------
2024-11-04 15:52 - INFO - Epoch: 04 | Time: 2m 0s
2024-11-04 15:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24469
2024-11-04 15:52 - INFO - 	 Train Loss: 0.173
2024-11-04 15:52 - INFO - 	 Val. Loss: 0.198
2024-11-04 15:52 - INFO - 	 ROC-AUC: 0.800
2024-11-04 15:52 - INFO - 	 PR-AUC: 0.245
2024-11-04 15:52 - INFO - 	 Recall for 0.4 precision: 0.125
2024-11-04 15:52 - INFO - 	 Best Val. Loss: 0.198
2024-11-04 15:52 - INFO - 	 Best ROC-AUC: 0.800
2024-11-04 15:52 - INFO - 	 Best PR-AUC: 0.245
2024-11-04 15:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.735
2024-11-04 15:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.132
2024-11-04 15:52 - INFO - 	 Best Recall for 0.4 precision: 0.179
2024-11-04 15:52 - INFO - ---------------------------------------------
2024-11-04 15:54 - INFO - ---------------------------------------------
2024-11-04 15:54 - INFO - Epoch: 05 | Time: 2m 4s
2024-11-04 15:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24689
2024-11-04 15:54 - INFO - 	 Train Loss: 0.165
2024-11-04 15:54 - INFO - 	 Val. Loss: 0.185
2024-11-04 15:54 - INFO - 	 ROC-AUC: 0.805
2024-11-04 15:54 - INFO - 	 PR-AUC: 0.247
2024-11-04 15:54 - INFO - 	 Recall for 0.4 precision: 0.190
2024-11-04 15:54 - INFO - 	 Best Val. Loss: 0.185
2024-11-04 15:54 - INFO - 	 Best ROC-AUC: 0.805
2024-11-04 15:54 - INFO - 	 Best PR-AUC: 0.247
2024-11-04 15:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.760
2024-11-04 15:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-04 15:54 - INFO - 	 Best Recall for 0.4 precision: 0.190
2024-11-04 15:54 - INFO - ---------------------------------------------
2024-11-04 15:56 - INFO - ---------------------------------------------
2024-11-04 15:56 - INFO - Epoch: 06 | Time: 2m 7s
2024-11-04 15:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27357
2024-11-04 15:56 - INFO - 	 Train Loss: 0.160
2024-11-04 15:56 - INFO - 	 Val. Loss: 0.177
2024-11-04 15:56 - INFO - 	 ROC-AUC: 0.824
2024-11-04 15:56 - INFO - 	 PR-AUC: 0.274
2024-11-04 15:56 - INFO - 	 Recall for 0.4 precision: 0.189
2024-11-04 15:56 - INFO - 	 Best Val. Loss: 0.177
2024-11-04 15:56 - INFO - 	 Best ROC-AUC: 0.824
2024-11-04 15:56 - INFO - 	 Best PR-AUC: 0.274
2024-11-04 15:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-04 15:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-04 15:56 - INFO - 	 Best Recall for 0.4 precision: 0.190
2024-11-04 15:56 - INFO - ---------------------------------------------
2024-11-04 15:58 - INFO - ---------------------------------------------
2024-11-04 15:58 - INFO - Epoch: 07 | Time: 1m 54s
2024-11-04 15:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27588
2024-11-04 15:58 - INFO - 	 Train Loss: 0.156
2024-11-04 15:58 - INFO - 	 Val. Loss: 0.170
2024-11-04 15:58 - INFO - 	 ROC-AUC: 0.830
2024-11-04 15:58 - INFO - 	 PR-AUC: 0.276
2024-11-04 15:58 - INFO - 	 Recall for 0.4 precision: 0.250
2024-11-04 15:58 - INFO - 	 Best Val. Loss: 0.170
2024-11-04 15:58 - INFO - 	 Best ROC-AUC: 0.830
2024-11-04 15:58 - INFO - 	 Best PR-AUC: 0.276
2024-11-04 15:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.791
2024-11-04 15:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.174
2024-11-04 15:58 - INFO - 	 Best Recall for 0.4 precision: 0.250
2024-11-04 15:58 - INFO - ---------------------------------------------
2024-11-04 16:00 - INFO - ---------------------------------------------
2024-11-04 16:00 - INFO - Epoch: 08 | Time: 1m 54s
2024-11-04 16:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47247
2024-11-04 16:00 - INFO - 	 Train Loss: 0.148
2024-11-04 16:00 - INFO - 	 Val. Loss: 0.136
2024-11-04 16:00 - INFO - 	 ROC-AUC: 0.955
2024-11-04 16:00 - INFO - 	 PR-AUC: 0.472
2024-11-04 16:00 - INFO - 	 Recall for 0.4 precision: 0.748
2024-11-04 16:00 - INFO - 	 Best Val. Loss: 0.136
2024-11-04 16:00 - INFO - 	 Best ROC-AUC: 0.955
2024-11-04 16:00 - INFO - 	 Best PR-AUC: 0.472
2024-11-04 16:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-04 16:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.354
2024-11-04 16:00 - INFO - 	 Best Recall for 0.4 precision: 0.748
2024-11-04 16:00 - INFO - ---------------------------------------------
2024-11-04 16:02 - INFO - ---------------------------------------------
2024-11-04 16:02 - INFO - Epoch: 09 | Time: 1m 55s
2024-11-04 16:02 - INFO - 	 Train Loss: 0.124
2024-11-04 16:02 - INFO - 	 Val. Loss: 0.140
2024-11-04 16:02 - INFO - 	 ROC-AUC: 0.948
2024-11-04 16:02 - INFO - 	 PR-AUC: 0.421
2024-11-04 16:02 - INFO - 	 Recall for 0.4 precision: 0.644
2024-11-04 16:02 - INFO - 	 Best Val. Loss: 0.136
2024-11-04 16:02 - INFO - 	 Best ROC-AUC: 0.955
2024-11-04 16:02 - INFO - 	 Best PR-AUC: 0.472
2024-11-04 16:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-04 16:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.354
2024-11-04 16:02 - INFO - 	 Best Recall for 0.4 precision: 0.748
2024-11-04 16:02 - INFO - ---------------------------------------------
2024-11-04 16:04 - INFO - ---------------------------------------------
2024-11-04 16:04 - INFO - Epoch: 10 | Time: 1m 56s
2024-11-04 16:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49724
2024-11-04 16:04 - INFO - 	 Train Loss: 0.114
2024-11-04 16:04 - INFO - 	 Val. Loss: 0.145
2024-11-04 16:04 - INFO - 	 ROC-AUC: 0.950
2024-11-04 16:04 - INFO - 	 PR-AUC: 0.497
2024-11-04 16:04 - INFO - 	 Recall for 0.4 precision: 0.883
2024-11-04 16:04 - INFO - 	 Best Val. Loss: 0.136
2024-11-04 16:04 - INFO - 	 Best ROC-AUC: 0.955
2024-11-04 16:04 - INFO - 	 Best PR-AUC: 0.497
2024-11-04 16:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-04 16:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.391
2024-11-04 16:04 - INFO - 	 Best Recall for 0.4 precision: 0.883
2024-11-04 16:04 - INFO - ---------------------------------------------
